<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/ABAP-Cloud-blog-posts.xml</id>
  <title>SAP Community - ABAP Cloud</title>
  <updated>2025-10-05T14:00:01.164084+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/ABAP Cloud/pd-p/9ada5ac7-3f77-49de-b5c9-9019df1d1e09" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>ABAP Cloud blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/additional-preconditions-for-procurement-flexible-workflow/ba-p/14209366</id>
    <title>Additional Preconditions for Procurement Flexible Workflow</title>
    <updated>2025-09-09T06:38:56.770000+02:00</updated>
    <author>
      <name>vineetsharma1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1424991</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction:&amp;nbsp;&lt;/STRONG&gt;The &lt;STRONG&gt;Custom Fields and Logic&lt;/STRONG&gt; Fiori app in SAP S/4HANA is a powerful tool for in-app extensibility, enabling key users to modify standard applications without requiring extensive technical development. The &lt;STRONG&gt;Custom Fields&lt;/STRONG&gt; &lt;STRONG&gt;and Logic&lt;/STRONG&gt; app has been deprecated in favor of the &lt;STRONG&gt;Custom Logic (App ID: F6957)&lt;/STRONG&gt; app in SAP S/4HANA. In present we are using Custom Logic Fiori app to implement &lt;STRONG&gt;Business Add-Ins (BAdIs)&lt;/STRONG&gt; and behavior extensions for released business objects.&lt;/P&gt;&lt;P&gt;This blog aims to assist you in &lt;STRONG&gt;adding preconditions&lt;/STRONG&gt; (such as Account Assignment, Plant, and Cost Centre) for &lt;STRONG&gt;Manage Workflows for Purchase Requisitions&lt;/STRONG&gt; Fiori App. These standard fields must be displayed in the F4 help or dropdown menu for selection. To fulfil this requirement, we will implement two &lt;STRONG&gt;BAdIs (Business Context ID: &lt;EM&gt;SWF_WORKFLOW_CONDITION_DEF, SWF_WORKFLOW_CONDITION_EVAL&lt;/EM&gt;).&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Step-by-Step Process:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1 – &lt;/STRONG&gt;&lt;SPAN&gt;Open SAP Fiori launchpad and search for &lt;STRONG&gt;Custom Logic&lt;/STRONG&gt; App.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_0-1757150119437.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310297iAC1C6CC468B686B2/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_0-1757150119437.png" alt="vineetsharma1_0-1757150119437.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2 –&lt;/STRONG&gt;&lt;SPAN&gt;Click on the Custom Logic tile and you will see the below screen and click on &lt;STRONG&gt;Create &lt;/STRONG&gt;Button.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_1-1757150191277.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310300i09FE6488DB41B33B/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_1-1757150191277.png" alt="vineetsharma1_1-1757150191277.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3 - &lt;/STRONG&gt;Enter the Business Context ID: &lt;STRONG&gt;SWF_WORKFLOW_CONDITION_DEF&amp;nbsp;&lt;/STRONG&gt;in search input box, then click on &lt;STRONG&gt;Step2&amp;nbsp;&lt;/STRONG&gt;button.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_2-1757150191287.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310301iA5E720B56B6FDDBD/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_2-1757150191287.png" alt="vineetsharma1_2-1757150191287.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Step 4 - &lt;/SPAN&gt;&lt;/STRONG&gt;In Implementation Attributes, give the filter value(Scenario ID: &lt;STRONG&gt;WS02000458&lt;/STRONG&gt;) using &lt;STRONG&gt;ADD&lt;/STRONG&gt; button and save it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_3-1757150191302.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310302i4F123A2AE1A861AC/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_3-1757150191302.png" alt="vineetsharma1_3-1757150191302.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_4-1757150191316.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310304i2EA6E8C9ECC55984/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_4-1757150191316.png" alt="vineetsharma1_4-1757150191316.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5 -&amp;nbsp;&lt;/STRONG&gt;Click on &lt;STRONG&gt;Step 3&amp;nbsp;&lt;/STRONG&gt;button, enter the required details and click on &lt;STRONG&gt;Review&lt;/STRONG&gt; Button&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_5-1757150191321.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310303i9728B35F15EBB875/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_5-1757150191321.png" alt="vineetsharma1_5-1757150191321.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6 -&lt;/STRONG&gt;It will appear like the below screenshot, now click on &lt;STRONG&gt;Create&lt;/STRONG&gt; Button.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_6-1757150191328.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310305iE081B23DC1A16B2F/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_6-1757150191328.png" alt="vineetsharma1_6-1757150191328.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7 –&amp;nbsp;&lt;/STRONG&gt;After clicking on &lt;STRONG&gt;Create&lt;/STRONG&gt; Button, the below screen will appear. Once you click on &lt;STRONG&gt;Publish &lt;/STRONG&gt;Button, then you will get &lt;STRONG&gt;Open Code Editor&lt;/STRONG&gt; button enabled.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_7-1757150191336.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310306i0114D5FC5A8BC168/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_7-1757150191336.png" alt="vineetsharma1_7-1757150191336.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8 -&lt;/STRONG&gt;When you open the code editor, the below Screen will display.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_8-1757150191351.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310308iA19B6D48ECF8F32B/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_8-1757150191351.png" alt="vineetsharma1_8-1757150191351.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 9 -&lt;/STRONG&gt;Click on Edit Button and write your logic here like below code snippet.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_9-1757150191359.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310307i17C7E6E4061CDE50/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_9-1757150191359.png" alt="vineetsharma1_9-1757150191359.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_10-1757150191368.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310309iC4C86826330BD21C/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_10-1757150191368.png" alt="vineetsharma1_10-1757150191368.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_11-1757150191373.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310310iA7B02BC8FE0CAE89/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_11-1757150191373.png" alt="vineetsharma1_11-1757150191373.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 10 -&lt;/STRONG&gt;Now, test the written code for syntax error or other type of errors.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 11 -&lt;/STRONG&gt;Implement the second BAdI in the same way using Scenario ID: &lt;STRONG&gt;WS02000458&lt;/STRONG&gt; and business context ID: &lt;STRONG&gt;SWF_WORKFLOW_CONDITION_EVAL&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Step 12 –&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Write your logic for second BAdI like the below&amp;nbsp;&lt;/SPAN&gt;Code snippets:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_12-1757150191381.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310311iDC821945A1E3B843/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_12-1757150191381.png" alt="vineetsharma1_12-1757150191381.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_13-1757150191385.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310312i0F074CB15E1066D3/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_13-1757150191385.png" alt="vineetsharma1_13-1757150191385.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vineetsharma1_14-1757150191392.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310313i87AB30AD25D8F082/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vineetsharma1_14-1757150191392.png" alt="vineetsharma1_14-1757150191392.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 13 -&lt;/STRONG&gt;Save the code and check the &lt;STRONG&gt;Manage Workflows for Purchase Requisitio&lt;/STRONG&gt;n Fiori App, issue will get resolved.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion: &lt;/STRONG&gt;Utilizing the Custom Logic application to implement BAdIs represents the most secure and future-proof method for extending S/4HANA. This approach ensures that your code remains stable during upgrades, is ready for the cloud, and integrates smoothly with Fiori and APIs.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/additional-preconditions-for-procurement-flexible-workflow/ba-p/14209366"/>
    <published>2025-09-09T06:38:56.770000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/using-the-sap-earlywatch-alert-status-app/ba-p/14212519</id>
    <title>Using the SAP EarlyWatch Alert Status App</title>
    <updated>2025-09-09T21:55:50.308000+02:00</updated>
    <author>
      <name>Griffin_L</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1643674</uri>
    </author>
    <content>&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Griffin1_1-1757446548028.png" style="width: 929px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311911iE36E5721D627ACB6/image-dimensions/929x433/is-moderation-mode/true?v=v2" width="929" height="433" role="button" title="Griffin1_1-1757446548028.png" alt="Griffin1_1-1757446548028.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;SAP Note 1257308 - FAQ: Using EarlyWatch Alert provides preliminary information about the Status App. The app tracks the status of the SAP EarlyWatch Alert (EWA) from the arrival of service data through all processing steps at SAP. This app is intended for administrators to troubleshoot the EWA process. This blog will provide a more detailed description of the Status App functionality.&lt;/P&gt;&lt;P&gt;EWA session data can be sent to SAP through various methods. The EWA session data can be sent directly to SAP through the HTTP destination SAP-SUPPORT_PORTAL (via SAP-SUPPORT_PARCELBOX) from either an &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/help/9b304f6aea25485192e911d8a9c026fe/3025d1eba03d48c8af97bead0b1f5129.html" target="_blank" rel="noopener noreferrer"&gt;ABAP managed system&lt;/A&gt;&lt;/SPAN&gt; or an &lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/2454045" target="_blank" rel="noopener noreferrer"&gt;SAP Solution Manager&lt;/A&gt;&lt;/SPAN&gt; system. Additionally, any EWA session data for systems managed by the ECS team are sent via their SAP Focused Run systems on SAP side to be processed. The following Notes and KBAs are provided for more information on all three scenarios.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/207223" target="_blank" rel="noopener noreferrer"&gt;207223&lt;/A&gt;&lt;/SPAN&gt; - SAP EarlyWatch Alert Processed at SAP&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/1684537" target="_blank" rel="noopener noreferrer"&gt;1684537&lt;/A&gt;&lt;/SPAN&gt; - EarlyWatch Alert Not Sent to SAP: Troubleshooting Guide - SAP Solution Manager&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/2930644" target="_blank" rel="noopener noreferrer"&gt;2930644&lt;/A&gt;&lt;/SPAN&gt; - SAP Focused Run: EarlyWatch Alert Troubleshooting Guide - Guided Answer&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;After sending EWA session data through one of the available methods it can be unclear whether the EWA data was successfully received by SAP or if there was any issue with the EWA session processing. The EWA Status App allows you to follow the status of your EWA report once it’s sent to SAP.&lt;/P&gt;&lt;P&gt;All EWA session data sent to SAP will be available for review in the &lt;SPAN&gt;&lt;A href="https://me.sap.com/ewa/status" target="_blank" rel="noopener noreferrer"&gt;EWA Status App&lt;/A&gt;&lt;/SPAN&gt;, here you will find various details about the EWA sessions you have sent.&lt;/P&gt;&lt;P&gt;You can see the date the EWA session data session was sent, if they have been successfully received by SAP, as well as whether the EWA session could be processed successful or has been generated and posted in the &lt;SPAN&gt;&lt;A href="https://me.sap.com/app/ewaworkspace" target="_blank" rel="noopener noreferrer"&gt;EWA workspace&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;Since the EWA session data packages sent to SAP are processed in randomly assigned batches for all customers it can take from a few hours to a few days for your EWA result to be available in various SAP applications like the EWA Workspace, Solution Finder, EWA Dashboard, or as a Word document available for download. Using the Status App allows you to track this process without opening a case.&lt;/P&gt;&lt;P&gt;The general fields available in the EWA Status App that are applicable for all system types are the following columns.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;System&lt;/LI&gt;&lt;LI&gt;Product&lt;/LI&gt;&lt;LI&gt;Sending System Product&lt;/LI&gt;&lt;LI&gt;Data Received at SAP&lt;/LI&gt;&lt;LI&gt;Collected At&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The “System” and “Product” columns will list the long and short SID as well as the product version respectively of the EWA target system.&lt;/P&gt;&lt;P&gt;The “Sending System Product” column, however, will display the product version of the system that transferred the session data to SAP. This is most often a Solution Manager or Focused Run system. &amp;nbsp;&lt;/P&gt;&lt;P&gt;Finally, the “Data Received at SAP” and “Collected at” columns document the date and time the EWA session package was received by SAP as well as when it was collected on the managed system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Griffin1_0-1757446491965.png" style="width: 917px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311910iEDAFAD810D66CB78/image-dimensions/917x399/is-moderation-mode/true?v=v2" width="917" height="399" role="button" title="Griffin1_0-1757446491965.png" alt="Griffin1_0-1757446491965.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Data Transfer Status Details&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the EWA Status App the “Data Transfer Status Details” column can have one of three status’. The status’ are Rejected, Ignored, Success. As you would expect Success simply indicates the EWA session data was successfully transferred to SAP. The other two status’ can be indicative of various errors. I will describe the most common in more detail below.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF9900"&gt;"&lt;STRONG&gt;Ignored (duplicate)"&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;This status indicates that the EWA is sent multiple times per week for the same system. You should check to see if the EWA is being sent from both Solution Manager and the managed system. The same checks should be performed for on prem FRUN systems. The EWA could also be sent multiple times per week from the same system. All will result in the same status.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF9900"&gt;&lt;STRONG&gt;"Ignored (not in allow list)"&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;This status can be caused by a few errors. However, the most common would be that either the license or maintenance certificate for the system is expired.&lt;/P&gt;&lt;P&gt;Recommendation:&lt;/P&gt;&lt;P&gt;Review the SLICENSE transaction in Solution Manager if used as well as the managed system to ensure both are up to date.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;STRONG&gt;"Rejected (system time in future)"&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;The system runs with a system time deviating from official time.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Recommendation:&lt;/P&gt;&lt;P&gt;The System Time can be synced manually by your system Admin. However, it is likely that this is a temporary change for testing purposes and it will sync automatically via Internet. If not working, your Admin can start this sync process at the OS Level.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;STRONG&gt;"Rejected (no data)"&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;The service data that arrived at SAP is either not readable or empty or incomplete and thus important parts are completely missing.&lt;/P&gt;&lt;P&gt;Recommendation:&lt;/P&gt;&lt;P&gt;This would indicate that there are issues with EWA session data collection or service data quality. We recommend reviewing the resolution steps in the KBA &lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/1824881" target="_blank" rel="noopener noreferrer"&gt;1824881&lt;/A&gt;&lt;/SPAN&gt; - Summary of Grey Rated EWA Reports - SAP Solution Manager.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;STRONG&gt;"Rejected (non-productive)"&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Only for productive and test systems the&amp;nbsp;EWA&amp;nbsp;is processed at SAP. Based on the system role the service data can be rejected. This is true for managed systems before ST-PI 740 SP23 (ST-PI 2008_1_7xx SP33) more information on the adjusted criteria can be found in SAP Note &lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/207223" target="_blank" rel="noopener noreferrer"&gt;207223&lt;/A&gt;&lt;/SPAN&gt; - SAP EarlyWatch Alert Processed at SAP.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;STRONG&gt;"Rejected (not authorized)"&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;The technical communication user used for upload is not authorized to upload for this system.&lt;/P&gt;&lt;P&gt;Or&lt;/P&gt;&lt;P&gt;The technical communication user used for upload is not valid anymore.&lt;/P&gt;&lt;P&gt;Or&lt;/P&gt;&lt;P&gt;The user used for upload is not a technical communication user.&lt;/P&gt;&lt;P&gt;Recommendation:&lt;/P&gt;&lt;P&gt;You will need to ensure the S user assigned to both the SAP-SUPPORT_PORTAL and SAP-SUPPORT_PACELBOX HTTP destinations is a valid technical user. The following KBA outlines the requirements for the assigned user.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/2174416" target="_blank" rel="noopener noreferrer"&gt;2174416&lt;/A&gt;&lt;/SPAN&gt; - Creation and activation of Technical Communication Users - SAP for Me&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;STRONG&gt;"Rejected (other reason)"&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Create a case with component SV-SCS-EWA-GEN.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;STRONG&gt;"Rejected (content size exceeds limit)"&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;The service data exceeds the size limit.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;STRONG&gt;"Rejected (unknown system type)"&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Supported technical system types are ABAP, HANA,&amp;nbsp;JAVA&amp;nbsp;and&amp;nbsp;BOBJ.&amp;nbsp;When extracting the leading system from the service data either no technical system type was determined, or the technical system type is not supported by EarlyWatch Alert.&lt;/P&gt;&lt;P&gt;Recommendation:&lt;/P&gt;&lt;P&gt;If using Solution Manager it is recommended that you review the system information maintained in LMDB. Ensure the technical system type is maintained and that it is a supported type.&lt;/P&gt;&lt;P&gt;In addition, in some scenarios is may be required to replace the SDCCN service definitions. The following KBA outlines the process and under which circumstances these steps should be performed.&lt;/P&gt;&lt;P&gt;SAP KBA &lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/1765141" target="_blank" rel="noopener noreferrer"&gt;1765141&lt;/A&gt;&lt;/SPAN&gt; - When should the Service Definitions be completely replaced (Delete and Download) using the steps outlined in SAP Note 727998?&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;STRONG&gt;"Rejected (data too old)"&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;The service data that was sent to SAP was collected more than 112 days ago. Such old service data is not processed by SAP.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Details on Report Status, Dashboard Status, and Solution Finder Status &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;These three columns are relatively binary. The Status can either be “Success” or “Missing” / blank. In rare instances you can receive the status “Error (Initialization Failed)”. In this instance a case should be opened in the SV-SMG-SER-EWA component area.&lt;/P&gt;&lt;P&gt;The Report Status will be successful when the EWA document has been successfully generated. Until this point this column will remain blank. As mentioned previously it can take from a few hours to several days for your EWA result to be available. If the EWA session data was successfully received by SAP there is no cause for concern if the EWA report is not immediately available.&lt;/P&gt;&lt;P&gt;The same is true of the columns “Dashboard Status” and “Solution Finder Status”. When these applications are fully populated the EWA column status here in the Status App will change to Success. Prior to this the status will remain either blank or have the status “Missing”. Neither status is a cause for concern. If after several days the status of these columns remains unpopulated you should open a case in the SV-SMG-SER-EWA component area.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2 Billion Record Limit Status and Number Range Forecast Details&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This column is system dependent. These checks are in reference to the maximum table size for HANA systems. The maximum table size cannot exceed 2 billion records for a HANA system without detrimental impact to the system.&lt;/P&gt;&lt;P&gt;However, the status “Missing” is most often applied to systems that do not have a HANA component. This information is not relevant to your system if you do not have a HANA Component and is not a cause for concern. You should review the EWA for the affected system to confirm that there is no associated HANA DB.&lt;/P&gt;&lt;P&gt;For HANA systems where this check was not successfully performed the status will instead be “No Forecast”, “Partial Success”, or “Unconfident Forecast”.&lt;/P&gt;&lt;P&gt;These may be a cause for concern and your first steps should be to review the RTCCTOOL recommendations of both the managed system and Solution Manager. You are looking for any red warning objects related to HANA session data, ST-PI, or ST-A/PI.&lt;/P&gt;&lt;P&gt;More information about the exact limitations of HANA are documented in the KBA &lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/2154870" target="_blank" rel="noopener noreferrer"&gt;2154870&lt;/A&gt;&lt;/SPAN&gt; - How-To: Understanding and defining SAP HANA Limitations.&lt;/P&gt;&lt;P&gt;Additionally, more information can be found in the &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/forecast-in-sap-earlywatch-alert-workspace-how-to-avoid-a-table-in-a-sap/ba-p/13365651" target="_blank"&gt;HANA Sizing Blog&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-the-sap-earlywatch-alert-status-app/ba-p/14212519"/>
    <published>2025-09-09T21:55:50.308000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/excel-upload-download-template-download-processed-data-in-sap-fiori-without/ba-p/14212916</id>
    <title>Excel Upload/ Download Template/ Download Processed Data in SAP Fiori Without SAPUI5 - Using SAP RAP</title>
    <updated>2025-09-10T16:00:28.980000+02:00</updated>
    <author>
      <name>AmanSaxena</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/145025</uri>
    </author>
    <content>&lt;P&gt;In many projects, there is a common requirement to develop utilities for mass creation or update of business objects such as Purchase Orders, Materials, Sales Orders, Billing Documents etc. With the adoption of SAP S/4HANA, customers are increasingly opting for SAP Fiori applications over traditional classical reports for such use cases.&lt;/P&gt;&lt;P&gt;A frequent question arises:&lt;BR /&gt;&lt;STRONG&gt;Can we develop a Fiori application to upload files without building a custom SAPUI5 front end?&lt;BR /&gt;&lt;STRONG&gt;Yes, we can!&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Thanks to SAP’s RESTful Application Programming (RAP) model and the use of specific annotations, it is possible to handle file uploads directly within a Fiori Elements application. No need for custom UI5 development.&lt;/P&gt;&lt;P&gt;To enable file uploads in RAP, the following annotation is crucial:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Semantics.largeObject&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This annotation allows handling of large file content (LOBs) in the RAP model. However, there is one important requirement:&lt;BR /&gt;You need to create a dedicated database table to store the uploaded file as a large object.&lt;/P&gt;&lt;P&gt;In below Example, I am explaining how Billing Date can be changed through Mass Upload.&lt;/P&gt;&lt;P&gt;In Excel Template I have two columns&lt;BR /&gt;Billing Document&lt;BR /&gt;New Billing date (DD.MM.YYYY)&lt;/P&gt;&lt;P&gt;Let’s walk through the steps to implement this.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1889058957"&gt;Create Database and Draft Tables&lt;/H3&gt;&lt;P&gt;We will begin by creating two database tables and their respective draft tables:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Parent Table&lt;/STRONG&gt; – Stores file metadata and the file content itself (LOB).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Child Table&lt;/STRONG&gt; – Stores the extracted data from the uploaded file. In this example, we will process an XLSX file.&lt;/LI&gt;&lt;/OL&gt;&lt;H5 id="toc-hId-1950710890"&gt;Parent Table – ZTOM_T_USER&lt;/H5&gt;&lt;P&gt;This table will store the uploaded file and its metadata. Here’s a sample structure:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'User Table for Excel Processing'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #ALLOWED
define table ztom_t_user {
  key mandt             : mandt not null;
  key end_user          : syuname not null;
  status                : abap.char(20);
  attachment            : ztom_de_attach;
  mimetype              : abap.char(128);
  filename              : abap.char(128);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This setup ensures the uploaded file can be stored as a RAWSTRING (LENGTH 0) in the backend.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1754197385"&gt;Parent Draft Table –&amp;nbsp;&lt;SPAN&gt;ZTOM_T_USERD&lt;/SPAN&gt;&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'User Draft Table for Excel Processing'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #ALLOWED
define table ztom_t_userd {
  key mandt             : mandt not null;
  key end_user          : syuname not null;
  status                : abap.char(20);
  attachment            : ztom_de_attach;
  mimetype              : abap.char(128);
  filename              : abap.char(128);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;
  "%admin"              : include sych_bdl_draft_admin_inc;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1557683880"&gt;Child Table – ZTOM_T_EXCEL&lt;/H5&gt;&lt;P&gt;This table will store the extracted data from the uploaded file. In this example, we will process an XLSX file. Here’s a sample structure:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Excel Data Table'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #ALLOWED
define table ztom_t_excel {
  key mandt    : mandt not null;
  @AbapCatalog.foreignKey.screenCheck : false
  key end_user : syuname not null
    with foreign key ztom_t_user
      where end_user = ztom_t_excel.end_user;
  key vbeln    : vbeln_vf not null;
  new_fkdat    : abap.char(10);
  prev_fkdat   : abap.char(10);
  type         : bapi_mtype;
  message      : bapi_msg;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1361170375"&gt;Child Draft Table – ZTOM_T_EXCELD&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Excel Data Draft Table'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #ALLOWED
define table ztom_t_exceld {
  key mandt    : mandt not null;
  key end_user : syuname not null;
  key vbeln    : vbeln_vf not null;
  new_fkdat    : abap.char(10);
  prev_fkdat   : abap.char(10);
  type         : bapi_mtype;
  message      : bapi_msg;
  "%admin"     : include sych_bdl_draft_admin_inc;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-906491432"&gt;Create Interface View&lt;/H3&gt;&lt;P&gt;Now, let's create Interface views on top of the tables we just created.&lt;/P&gt;&lt;H5 id="toc-hId-968143365"&gt;Parent Interface View – ZCDS_TOM_I_USER&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface View - Excel User'
@Metadata.allowExtensions: true

define root view entity ZCDS_TOM_I_USER
  as select from    usr02       as _user
    left outer join ztom_t_user as _XLUser on _user.bname = _XLUser.end_user
  composition [0..*] of ZCDS_TOM_I_EXCEL as _XLData
{
  key _user.bname                   as end_user,
      _XLUser.status                as status,
      _XLUser.attachment            as Attachment,
      @Semantics.mimeType: true
      _XLUser.mimetype              as MimeType,
      _XLUser.filename              as Filename,
      @Semantics.user.createdBy: true
      _XLUser.local_created_by      as Local_Created_By,
      @Semantics.systemDateTime.createdAt: true
      _XLUser.local_created_at      as Local_Created_At,
      @Semantics.user.lastChangedBy: true
      _XLUser.local_last_changed_by as Local_Last_Changed_By,
      //local ETag field --&amp;gt; OData ETag
      @Semantics.systemDateTime.localInstanceLastChangedAt: true
      _XLUser.local_last_changed_at as Local_Last_Changed_At,
      //total ETag field
      @Semantics.systemDateTime.lastChangedAt: true
      _XLUser.last_changed_at       as Last_Changed_At,

      _XLData
}
where
  _user.bname = $session.user&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-771629860"&gt;Child Entity Interface View – ZCDS_TOM_I_EXCEL&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface View - Excel Data'
@Metadata.allowExtensions: true

define view entity ZCDS_TOM_I_EXCEL
  as select from ztom_t_excel
  association to parent ZCDS_TOM_I_USER as _XLUser on $projection.end_user = _XLUser.end_user
{
  key end_user                as end_user,
  key ztom_t_excel.vbeln      as Vbeln,
      ztom_t_excel.new_fkdat  as New_Fkdat,
      ztom_t_excel.prev_fkdat as Prev_Fkdat,
      ztom_t_excel.type       as Type,
      ztom_t_excel.message    as Message,

      _XLUser
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-316950917"&gt;Create Projection/ Consumption View&lt;/H3&gt;&lt;P&gt;Now, let's create Projection/ Consumption views on top of the Interfaces we just created.&lt;/P&gt;&lt;H5 id="toc-hId-378602850"&gt;Parent Projection/ Consumption View – ZCDS_TOM_C_USER&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Projection Entity - Excel User'
@Metadata.allowExtensions: true

define root view entity ZCDS_TOM_C_USER
  provider contract transactional_query
  as projection on ZCDS_TOM_I_USER
{
  key end_user,
      @EndUserText.label: 'Processing Status'
      status as status,
      @Semantics.largeObject: {
          mimeType: 'MimeType',
          fileName: 'Filename',
          acceptableMimeTypes: [ 'application/vnd.ms-excel','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ],
          contentDispositionPreference: #INLINE } // This will store the File into our table
      Attachment,
      MimeType,
      Filename,
      Local_Created_By,
      Local_Created_At,
      Local_Last_Changed_By,
      @EndUserText.label: 'Last Changed At'
      Local_Last_Changed_At,
      Last_Changed_At,

      /* Associations */
      _XLData : redirected to composition child ZCDS_TOM_C_EXCEL
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--738113476"&gt;Child Entity Projection/ Consumption View – ZCDS_TOM_C_EXCEL&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Projection Entity - Excel Data'
@Metadata.allowExtensions: true

define view entity ZCDS_TOM_C_EXCEL
  as projection on ZCDS_TOM_I_EXCEL
{
  key end_user,
  key Vbeln,
      New_Fkdat,
      Prev_Fkdat,
      Type,
      Message,
      /* Associations */
      _XLUser : redirected to parent ZCDS_TOM_C_USER
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--347820967"&gt;Create Metadata Extensions&lt;/H3&gt;&lt;P&gt;Now, let's create Metadata Extensions on top of the Projection/ Consumption views we just created.&lt;/P&gt;&lt;H5 id="toc-hId--1131140486"&gt;Parent Metadata Extension – ZCDS_TOM_C_USER&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
@UI.headerInfo: {
    typeName: 'Mass Upload for Billing Date Change',
    typeNamePlural: 'Mass Upload for Billing Date Change'
}
annotate entity ZCDS_TOM_C_USER with
{
  .facet: [
  { id: 'idEndUser',    purpose: #HEADER,       position: 10,   type: #DATAPOINT_REFERENCE,     targetQualifier: 'tqEndUser'
  },
  { id: 'idChgAt',      purpose: #HEADER,       position: 20,   type: #DATAPOINT_REFERENCE,     targetQualifier: 'tqChgAt'
  },
  { id: 'idStatus',     purpose: #HEADER,       position: 30,   type: #DATAPOINT_REFERENCE,     targetQualifier: 'tqStatus'
  },
  { id: 'idFile',       purpose: #STANDARD,     position: 50,   type: #IDENTIFICATION_REFERENCE,    label: 'File Upload/ Download'
  },
  { id: 'idData',       purpose: #STANDARD,     position: 60,   type: #LINEITEM_REFERENCE,          label: 'Excel Data',    targetElement: '_XLData'
  } ]

  .lineItem: [{ position: 10, label: 'Person Responsible' }]
  .dataPoint: { qualifier: 'tqEndUser', title: 'Person Responsible' }
  .identification: [{ type: #FOR_ACTION, dataAction: 'downloadData', label: 'Download Data' }] //Needed in oDataV2 to download excel Data, for oDataV4 comment this
  end_user;
  .lineItem: [{ position: 20, label: 'File Status' }]
  .dataPoint: { qualifier: 'tqStatus', title: 'File Status' }
  status;
  .identification: [{ position: 10, label: 'Upload/ Download Template &amp;amp; Excel File' }]
  Attachment;
  .lineItem: [{ type: #FOR_ACTION, dataAction: 'downloadTemplate', label: 'Download Template' }]
  .identification: [{ type: #FOR_ACTION, dataAction: 'downloadTemplate', label: 'Download Template' }]
  .hidden: true
  MimeType;
  .lineItem: [{ position: 30, label: 'Filename' }]
  Filename;
  .hidden: true
  Local_Created_By;
  .hidden: true
  Local_Created_At;
  .hidden: true
  Local_Last_Changed_By;
  .dataPoint: { qualifier: 'tqChgAt', title: 'Last Changed At' }
  .lineItem: [{ position: 40, label: 'Last Changed At' }]
  Local_Last_Changed_At;
  .hidden: true
  Last_Changed_At;
  /* Associations */
  .hidden: true
  _XLData;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--1327653991"&gt;Child Entity Metadata Extension – ZCDS_TOM_C_EXCEL&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
@UI.headerInfo: {
    typeName: 'Processed Billing Data',
    typeNamePlural: 'Processed Billing Data'
}
annotate entity ZCDS_TOM_C_EXCEL with
{
  .hidden: true
  //  .lineItem: [{ type: #FOR_ACTION, label: 'Display Document', dataAction: 'displayDocument' }]
  end_user;
  .lineItem: [{ position: 10, label: 'Billing Document' }]
  Vbeln;
  .lineItem: [{ position: 20, label: 'New Billing Date' }]
  New_Fkdat;
  .lineItem: [{ position: 30, label: 'Previous Billing Date' }]
  Prev_Fkdat;
  .lineItem: [{ position: 40, label: 'Status' }]
  Type;
  .lineItem: [{ position: 50, label: 'Message' }]
  Message;
  /* Associations */
  .hidden: true
  _XLUser;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--937361482"&gt;Create Behavior Definitions Behavior Implementation and Behavior Projection&lt;/H3&gt;&lt;P&gt;Now, let's create Behavior Definitions on top of the Parent Interface View and Behavior Projection on Parent Projection/ Consumption View we just created.&lt;/P&gt;&lt;H5 id="toc-hId--1720681001"&gt;Behavior Definition – ZCDS_TOM_I_USER&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_cl_cds_tom_i_user unique;
strict ( 2 );
with draft;

define behavior for ZCDS_TOM_I_USER alias XLHead
persistent table ztom_t_user
lock master
total etag end_user
draft table ztom_t_userd
//early numbering
authorization master ( instance )
etag master end_user
{
  create;
  update;
  delete;

  field ( readonly ) end_user;

  action ( features : instance ) downloadTemplate result [1] $self;
  action ( features : instance ) downloadData result [1] $self; //Needed in oDataV2 to download excel Data, for oDataV4 comment this

  // Logic to read excel data into into internal table and save to the child entity
  action ( features : instance ) uploadExcelData result [1] $self;

  association _XLData { create; with draft; }

  // Logic to trigger action uploadExcelData
  determination fields on modify { field Filename; }

  //Draft actions
  draft action Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare;

}

define behavior for ZCDS_TOM_I_EXCEL alias XLData
persistent table ztom_t_excel
draft table ztom_t_exceld
lock dependent by _XLUser
authorization dependent by _XLUser
etag master New_Fkdat
{
  update;
  delete;
  field ( readonly ) end_user;

  association _XLUser { with draft; }

  //  action displayDocument result [1] $self; //IF WANT TO ADD A NEW ACTION

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--1917194506"&gt;Behavior Implementation – ZBP_CL_CDS_TOM_I_USER&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;Global Class&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zbp_cl_cds_tom_i_user DEFINITION
  PUBLIC
  ABSTRACT
  FINAL
  FOR BEHAVIOR OF zcds_tom_i_user .

  PUBLIC SECTION.
    TYPES: BEGIN OF gty_input,
             vbeln      TYPE vbeln_vf,
             new_fkdat  TYPE char10,
             prev_fkdat TYPE char10,
             type       TYPE bapi_mtype,
             message    TYPE bapi_msg,
           END OF gty_input.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.

CLASS zbp_cl_cds_tom_i_user IMPLEMENTATION.
ENDCLASS.​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Local Type&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*"* use this source file for the definition and implementation of
*"* local helper classes, interface definitions and type
*"* declarations
CLASS lhc_XLHead DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR XLHead RESULT result.

    METHODS downloadTemplate FOR MODIFY
      IMPORTING keys FOR ACTION XLHead~downloadTemplate RESULT result.

    METHODS fields FOR DETERMINE ON MODIFY
      IMPORTING keys FOR XLHead~Fields.

    METHODS uploadExcelData FOR MODIFY
      IMPORTING keys FOR ACTION XLHead~uploadExcelData RESULT result.

    "Needed in oDataV2 to download excel Data, for oDataV4 comment this method
    METHODS downloadData FOR MODIFY
      IMPORTING keys FOR ACTION XLHead~downloadData RESULT result.

*    METHODS earlynumbering_create FOR NUMBERING
*      IMPORTING entities FOR CREATE XLHead.

    METHODS get_instance_features FOR INSTANCE FEATURES
      IMPORTING keys REQUEST requested_features FOR XLHead RESULT result.

ENDCLASS.


CLASS lhc_XLHead IMPLEMENTATION.
  METHOD get_instance_authorizations.
  ENDMETHOD.

  METHOD downloadTemplate.
*-- Local Variable Declaration
    DATA: lv_content   TYPE xstring,
          lv_mime_type TYPE string.

*-- Local Internal Table Declaration
    DATA: lt_bin TYPE STANDARD TABLE OF solix.

    "Clear all local objects
    CLEAR: lv_content, lv_mime_type, lt_bin.

*-- Retrieve File From MIME Repository
*-- accessing the file path '/SAP/PUBLIC/ZTOM_MASS_BILLING_DATE_UPD/Billing Date Update Template.xlsx'
    cl_mime_repository_api=&amp;gt;if_mr_api~get_api( )-&amp;gt;get( EXPORTING  i_url              = TEXT-001
                                                                  i_check_authority  = abap_false
                                                       IMPORTING  e_content          = lv_content
                                                                  e_mime_type        = lv_mime_type
                                                       EXCEPTIONS parameter_missing  = 1
                                                                  error_occured      = 2
                                                                  not_found          = 3
                                                                  permission_failure = 4
                                                                  OTHERS             = 5 ).

    IF sy-subrc &amp;lt;&amp;gt; 0.
      "Handle Error Messages
      INSERT new_message( id       = sy-msgid
                          number   = sy-msgno
                          severity = if_abap_behv_message=&amp;gt;severity-error
                          v1       = sy-msgv1
                          v2       = sy-msgv2
                          v3       = sy-msgv3
                          v4       = sy-msgv4 )
             INTO TABLE reported-%other.
    ELSE.
      "Modify Root Entity
      MODIFY ENTITIES OF zcds_tom_i_user IN LOCAL MODE
      ENTITY XLHead
      UPDATE FROM VALUE #( FOR key IN keys
                           ( end_user            = key-end_user
                             status              = TEXT-002 "Template Downloaded
                             Attachment          = lv_content
                             Filename            = TEXT-003 "Billing Date Update Template
                             MimeType            = lv_mime_type
                             %control-status     = if_abap_behv=&amp;gt;mk-on
                             %control-Attachment = if_abap_behv=&amp;gt;mk-on
                             %control-Filename   = if_abap_behv=&amp;gt;mk-on
                             %control-MimeType   = if_abap_behv=&amp;gt;mk-on ) )
      MAPPED DATA(ls_mapped_update)
      REPORTED DATA(ls_reported_update)
      FAILED DATA(ls_failed_update).

      "Read Updated Entry
      READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
      ENTITY XLHead
      ALL FIELDS WITH
      CORRESPONDING #( Keys )
      RESULT DATA(lt_XLHead).

      "Send Status back to front end
      result = VALUE #( FOR lwa_upd_head IN lt_XLHead
                        ( %tky   = lwa_upd_head-%tky
                          %param = lwa_upd_head ) ).
    ENDIF.
  ENDMETHOD.

  METHOD fields.
    SELECT  INTO (lv_valid) FROM ztom_t_user UP TO 1 ROWS WHERE end_user = -uname.
    ENDSELECT.

    IF lv_valid &amp;lt;&amp;gt; abap_true.
      INSERT ztom_t_user FROM @( VALUE #( end_user = sy-uname ) ).
    ENDIF.

    IF keys[ 1 ]-%is_draft = '01'. "for oDataV4 '01' needs to be replaced with '00'
      MODIFY ENTITIES OF zcds_tom_i_user IN LOCAL MODE
      ENTITY XLHead
      EXECUTE uploadexceldata
      FROM CORRESPONDING #( keys ).
    ENDIF.
  ENDMETHOD.

  METHOD uploadExcelData.
*-- Local Variable Declaration
    DATA: lv_index    TYPE sy-index.

*-- Local Workarea Declaration
    DATA: ls_vbrk_i TYPE vbrk.

*-- Local Internal Table Declaration
    DATA: lt_excel TYPE STANDARD TABLE OF zbp_cl_cds_tom_i_user=&amp;gt;gty_input,
          lt_data  TYPE TABLE FOR CREATE zcds_tom_i_user\_XLData.

*-- Local Object Declaration
    DATA: lo_table_descr  TYPE REF TO cl_abap_tabledescr,
          lo_struct_descr TYPE REF TO cl_abap_structdescr.

*-- Local Field Symbol Declaration
    FIELD-SYMBOLS:  &amp;lt;lfs_col_header&amp;gt; TYPE any.

    "Clear all local objects
    CLEAR: lv_index, lt_excel, lt_data.

    SELECT  INTO (lv_valid) FROM ztom_t_user UP TO 1 ROWS WHERE end_user = -uname.
    ENDSELECT.

    IF lv_valid &amp;lt;&amp;gt; abap_true.
      INSERT ztom_t_user FROM @( VALUE #( end_user = sy-uname ) ).
    ENDIF.

    DATA(lv_user) = cl_abap_context_info=&amp;gt;get_user_technical_name( ).

    READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
    ENTITY XLHead
    ALL FIELDS WITH
    CORRESPONDING #( keys )
    RESULT DATA(lt_file_entity).

    DATA(lv_attachment) = lt_file_entity[ 1 ]-attachment.

    IF lv_attachment IS INITIAL.
      RETURN.
    ENDIF.

    "Move Excel Data to Internal Table
    DATA(lo_xlsx) = xco_cp_xlsx=&amp;gt;document-&amp;gt;for_file_content( iv_file_content = lv_attachment )-&amp;gt;read_access( ).
    DATA(lo_worksheet) = lo_xlsx-&amp;gt;get_workbook( )-&amp;gt;worksheet-&amp;gt;at_position( 1 ).
    DATA(lo_selection_pattern) = xco_cp_xlsx_selection=&amp;gt;pattern_builder-&amp;gt;simple_from_to( )-&amp;gt;get_pattern( ).
    DATA(lo_execute) = lo_worksheet-&amp;gt;select( lo_selection_pattern )-&amp;gt;row_stream( )-&amp;gt;operation-&amp;gt;write_to(
                                                                      REF #( lt_excel ) ).
    lo_execute-&amp;gt;set_value_transformation( xco_cp_xlsx_read_access=&amp;gt;value_transformation-&amp;gt;string_value )-&amp;gt;if_xco_xlsx_ra_operation~execute( ).

    "Get number of columns in upload file for validation
    TRY.
        lo_table_descr ?= cl_abap_tabledescr=&amp;gt;describe_by_data( p_data = lt_excel ).
        lo_struct_descr ?= lo_table_descr-&amp;gt;get_table_line_type( ).
        DATA(lv_no_of_cols) = lines( lo_struct_descr-&amp;gt;components ).
      CATCH cx_sy_move_cast_error INTO DATA(lo_sy_move_cast_error).

        "Implement error handling
        INSERT new_message( id       = sy-msgid
                            number   = sy-msgno
                            severity = if_abap_behv_message=&amp;gt;severity-error
                            v1       = sy-msgv1
                            v2       = sy-msgv2
                            v3       = sy-msgv3
                            v4       = sy-msgv4 )
               INTO TABLE reported-%other.
    ENDTRY.

*-- Remove Headings of Columns from Excel data
    IF lt_excel IS NOT INITIAL.
      DELETE lt_excel INDEX 1.
    ENDIF.

*-- Remove all entries where Billing document is not available
    IF lt_excel IS NOT INITIAL.
      DELETE lt_excel WHERE vbeln IS INITIAL.
    ENDIF.

*-- Remove all duplicates
    IF lt_excel IS NOT INITIAL.
      DELETE ADJACENT DUPLICATES FROM lt_excel.
    ENDIF.

    IF lt_excel IS NOT INITIAL.
      LOOP AT lt_excel ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_excel&amp;gt;).
        DO lv_no_of_cols TIMES.
          lv_index = sy-index.
          ASSIGN COMPONENT lv_index OF STRUCTURE &amp;lt;lfs_excel&amp;gt; TO &amp;lt;lfs_col_header&amp;gt;.
          IF &amp;lt;lfs_col_header&amp;gt; IS NOT ASSIGNED.
            CONTINUE.
          ENDIF.
          DATA(lv_has_error) = abap_false.
          CASE lv_index.
            WHEN 1. "Billing Document Number
              CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
                EXPORTING
                  input  = &amp;lt;lfs_col_header&amp;gt;
                IMPORTING
                  output = &amp;lt;lfs_col_header&amp;gt;.

              SELECT SINGLE fkdat
                FROM vbrk
                INTO (lv_fkdat)
                WHERE vbeln = @&amp;lt;lfs_col_header&amp;gt;.

              IF sy-subrc = 0.
                &amp;lt;lfs_excel&amp;gt;-prev_fkdat = |{ lv_fkdat+6(2) }.{ lv_fkdat+4(2) }.{ lv_fkdat(4) }|.
                CLEAR: lv_fkdat.
              ELSE.
                &amp;lt;lfs_excel&amp;gt;-type    = 'E'.
                &amp;lt;lfs_excel&amp;gt;-message = TEXT-004.   "Invalid Document
              ENDIF.

            WHEN 2.  "New Billing Date
              FIND PCRE '(\d{1,2}[.]\d{1,2}[.]\d{4})' IN &amp;lt;lfs_col_header&amp;gt;.
              IF sy-subrc = 0.
                CALL FUNCTION '/SAPDMC/LSM_DATE_CONVERT'
                  EXPORTING
                    date_in             = &amp;lt;lfs_col_header&amp;gt;
                    date_format_in      = 'DDMY'
                    to_output_format    = ' '
                    to_internal_format  = 'X'
                  IMPORTING
                    date_out            = &amp;lt;lfs_col_header&amp;gt;
                  EXCEPTIONS
                    illegal_date        = 1
                    illegal_date_format = 2
                    no_user_date_format = 3
                    OTHERS              = 4.
                IF sy-subrc &amp;lt;&amp;gt; 0.
                  &amp;lt;lfs_excel&amp;gt;-type    = 'E'.
                  &amp;lt;lfs_excel&amp;gt;-message = TEXT-005.   "Invalid Date
                ELSE.
                  IF &amp;lt;lfs_col_header&amp;gt;+0(2) EQ '00'.
                    &amp;lt;lfs_excel&amp;gt;-type    = 'E'.
                    &amp;lt;lfs_excel&amp;gt;-message = TEXT-005.   "Invalid Date
                  ELSE.
                    lv_fkdat = &amp;lt;lfs_col_header&amp;gt;.
                  ENDIF.
                ENDIF.
              ELSE.
                &amp;lt;lfs_excel&amp;gt;-type    = 'E'.
                &amp;lt;lfs_excel&amp;gt;-message = TEXT-005.   "Invalid Date
              ENDIF.
            WHEN 3 OR 4 OR 5.
              "Do Nothing!!
*              lv_has_error = COND #( WHEN &amp;lt;lfs_col_header&amp;gt; &amp;lt;&amp;gt; ' ' THEN abap_true ELSE lv_has_error ).
            WHEN OTHERS. "More than 5 columns (error)
              lv_has_error = abap_true.
          ENDCASE.
          UNASSIGN &amp;lt;lfs_col_header&amp;gt;.
        ENDDO.
        IF lv_has_error = abap_true.
          APPEND VALUE #( %tky = lt_file_entity[ 1 ]-%tky ) TO failed-xlhead.
          APPEND VALUE #( %tky = lt_file_entity[ 1 ]-%tky
                          %msg = new_message_with_text( severity = if_abap_behv_message=&amp;gt;severity-error
                                                        text     = TEXT-006 ) ) "Wrong File Format!!
          TO reported-xlhead.
          UNASSIGN &amp;lt;lfs_col_header&amp;gt;.
          EXIT.
        ELSE. "Process Data
          "Update Billing Date
          IF &amp;lt;lfs_excel&amp;gt;-type &amp;lt;&amp;gt; 'E'.
            TRY.
                zcl_tom_billing_date_upd=&amp;gt;zfm_tom_billing_date_upd( EXPORTING fkdat   = lv_fkdat
                                                                              vbeln   = &amp;lt;lfs_excel&amp;gt;-vbeln
*                                                                              _dest_  = 'NONE'
                                                                    CHANGING  message = &amp;lt;lfs_excel&amp;gt;-message
                                                                              mtype   = &amp;lt;lfs_excel&amp;gt;-type ).
              CATCH cx_aco_application_exception INTO DATA(lo_aco_application_exception).
              CATCH cx_aco_communication_failure INTO DATA(lo_aco_communication_failure).
              CATCH cx_aco_system_failure INTO DATA(lo_aco_system_failure).

                "Implement error handling
                INSERT new_message( id       = sy-msgid
                                    number   = sy-msgno
                                    severity = if_abap_behv_message=&amp;gt;severity-error
                                    v1       = sy-msgv1
                                    v2       = sy-msgv2
                                    v3       = sy-msgv3
                                    v4       = sy-msgv4 )
                       INTO TABLE reported-%other.
            ENDTRY.

            "Change Format to DD.MM.YYYY
            &amp;lt;lfs_excel&amp;gt;-new_fkdat = |{ &amp;lt;lfs_excel&amp;gt;-new_fkdat+6(2) }.{ &amp;lt;lfs_excel&amp;gt;-new_fkdat+4(2) }.{ &amp;lt;lfs_excel&amp;gt;-new_fkdat(4) }|.

          ENDIF.
        ENDIF.
      ENDLOOP.

    ELSE.
      APPEND VALUE #( %tky = lt_file_entity[ 1 ]-%tky ) TO failed-xlhead.
      APPEND VALUE #( %tky = lt_file_entity[ 1 ]-%tky
                      %msg = new_message_with_text( severity = if_abap_behv_message=&amp;gt;severity-error
                                                    text     = TEXT-007 ) ) "No Input Data to Process in Excel!!
      TO reported-xlhead.
      EXIT.
    ENDIF.

*-- Sort with Error &amp;amp; Success type
    IF lt_excel IS NOT INITIAL.
      SORT: lt_excel ASCENDING BY type vbeln.
    ENDIF.

    "Prepare Data for Child Entity (XLData)
    lt_data = VALUE #( ( %cid_ref  = keys[ 1 ]-%cid_ref
                         %is_draft = keys[ 1 ]-%is_draft
                         end_user  = keys[ 1 ]-end_user
                         %target   = VALUE #( FOR lwa_excel IN lt_excel
                                              ( %cid      = keys[ 1 ]-%cid_ref
                                                %is_draft = keys[ 1 ]-%is_draft
                                                %data     = VALUE #( end_user   = keys[ 1 ]-end_user
                                                                     Vbeln      = lwa_excel-vbeln
                                                                     New_Fkdat  = lwa_excel-new_fkdat
                                                                     Prev_Fkdat = lwa_excel-prev_fkdat
                                                                     Type       = lwa_excel-type
                                                                     Message    = lwa_excel-message )
                                                %control  = VALUE #( end_user   = if_abap_behv=&amp;gt;mk-on
                                                                     Vbeln      = if_abap_behv=&amp;gt;mk-on
                                                                     New_Fkdat  = if_abap_behv=&amp;gt;mk-on
                                                                     Prev_Fkdat = if_abap_behv=&amp;gt;mk-on
                                                                     Type       = if_abap_behv=&amp;gt;mk-on
                                                                     Message    = if_abap_behv=&amp;gt;mk-on ) ) ) ) ).

    "Checking Existing entry in child entity for user if any
    READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
    ENTITY XLHead
    BY \_XLData
    ALL FIELDS WITH CORRESPONDING #( keys )
    RESULT DATA(lt_existing_XLData).

    IF lt_existing_XLData IS NOT INITIAL.
      "Delete already existing entries from child entity
      MODIFY ENTITIES OF zcds_tom_i_user IN LOCAL MODE
      ENTITY XLData DELETE FROM VALUE #( FOR lwa_data IN lt_existing_XLData
                                         ( %key      = lwa_data-%key
                                           %is_draft = lwa_data-%is_draft ) )
      MAPPED DATA(ls_del_mapped)
      REPORTED DATA(ls_del_reported)
      FAILED DATA(ls_del_failed).
    ENDIF.

    "Modify Root View data (Change Status)
    MODIFY ENTITIES OF zcds_tom_i_user IN LOCAL MODE
    ENTITY XLHead
    UPDATE FROM VALUE #( FOR key IN keys
                         ( %is_draft       = key-%is_draft
                           end_user        = key-end_user
                           status          = TEXT-008 "File Processed
                           %control-status = if_abap_behv=&amp;gt;mk-on ) )
    MAPPED DATA(ls_mapped_update)
    REPORTED DATA(ls_reported_update)
    FAILED DATA(ls_failed_update).

    "Add New Entry for XLData (association)
    MODIFY ENTITIES OF zcds_tom_i_user IN LOCAL MODE
    ENTITY XLHead
    CREATE BY \_XLData
    AUTO FILL CID
    WITH lt_data.

    "Read Updated Entry
    READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
    ENTITY XLHead
    ALL FIELDS WITH
    CORRESPONDING #( Keys )
    RESULT DATA(lt_updated_XLHead).

    "Send Status back to front end
    result = VALUE #( FOR lwa_upd_head IN lt_updated_XLHead
                      ( %tky   = lwa_upd_head-%tky
                        %param = lwa_upd_head ) ).
  ENDMETHOD.

  "Needed in oDataV2 to download excel Data, for oDataV4 comment this method
  METHOD downloadData.
*-- Local Variable Declaration
    DATA: lo_columns TYPE REF TO cl_salv_columns_table.
    DATA: lo_column TYPE REF TO cl_salv_column.

    "Fetch Processed Data
    SELECT * FROM ztom_t_excel
    INTO TABLE (lt_final)
    WHERE end_user = -uname.

    IF lt_final IS NOT INITIAL.
      "Get Time Stamp
      GET TIME STAMP FIELD DATA(lv_timestampl).

      "Convert Internal table data to xstring.
      DATA(lv_filename) = |{ TEXT-009 } { lv_timestampl }|. "Billing Date Update Log

      "Convert internal table data to excel and download.
      TRY.
          cl_salv_table=&amp;gt;factory( IMPORTING r_salv_table = DATA(lo_table)
                                  CHANGING  t_table      = lt_final ).

          "Get ALV Column
          lo_columns = lo_table-&amp;gt;get_columns( ).

          TRY.
              lo_column = lo_columns-&amp;gt;get_column( 'NEW_FKDAT' ).
              lo_column-&amp;gt;set_long_text( TEXT-010 ). "New Billing Date
              lo_column-&amp;gt;set_output_length( '15' ).
            CATCH cx_salv_not_found INTO DATA(lo_salv_not_found).

              "Implement error handling
              INSERT new_message( id       = sy-msgid
                                  number   = sy-msgno
                                  severity = if_abap_behv_message=&amp;gt;severity-error
                                  v1       = sy-msgv1
                                  v2       = sy-msgv2
                                  v3       = sy-msgv3
                                  v4       = sy-msgv4 )
                     INTO TABLE reported-%other.
          ENDTRY.

          TRY.
              lo_column = lo_columns-&amp;gt;get_column( 'PREV_FKDAT' ).
              lo_column-&amp;gt;set_long_text( TEXT-011 ).  "Previous Billing Date
              lo_column-&amp;gt;set_output_length( '15' ).
            CATCH cx_salv_not_found INTO lo_salv_not_found.

              "Implement error handling
              INSERT new_message( id       = sy-msgid
                                  number   = sy-msgno
                                  severity = if_abap_behv_message=&amp;gt;severity-error
                                  v1       = sy-msgv1
                                  v2       = sy-msgv2
                                  v3       = sy-msgv3
                                  v4       = sy-msgv4 )
                     INTO TABLE reported-%other.
          ENDTRY.

          DATA(lv_content) = lo_table-&amp;gt;to_xml( xml_type = if_salv_bs_xml=&amp;gt;c_type_xlsx ).

        CATCH cx_salv_msg INTO DATA(lo_salv_msg).

          "Implement error handling
          INSERT new_message( id       = sy-msgid
                              number   = sy-msgno
                              severity = if_abap_behv_message=&amp;gt;severity-error
                              v1       = sy-msgv1
                              v2       = sy-msgv2
                              v3       = sy-msgv3
                              v4       = sy-msgv4 )
                 INTO TABLE reported-%other.
      ENDTRY.

      "Modify Root Entity
      MODIFY ENTITIES OF zcds_tom_i_user IN LOCAL MODE
      ENTITY XLHead
      UPDATE FROM VALUE #( FOR key IN keys
                           ( end_user            = key-end_user
                             status              = TEXT-012 "Data Downloaded
                             Attachment          = lv_content
                             Filename            = lv_filename
                             MimeType            = TEXT-013   "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
                             %control-status     = if_abap_behv=&amp;gt;mk-on
                             %control-Attachment = if_abap_behv=&amp;gt;mk-on
                             %control-Filename   = if_abap_behv=&amp;gt;mk-on
                             %control-MimeType   = if_abap_behv=&amp;gt;mk-on ) )
      MAPPED DATA(ls_mapped_update)
      REPORTED DATA(ls_reported_update)
      FAILED DATA(ls_failed_update).

      "Read Updated Entry
      READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
      ENTITY XLHead
      ALL FIELDS WITH
      CORRESPONDING #( Keys )
      RESULT DATA(lt_XLHead).

      "Send Status back to front end
      result = VALUE #( FOR lwa_upd_head IN lt_XLHead
                        ( %tky   = lwa_upd_head-%tky
                          %param = lwa_upd_head ) ).
    ENDIF.
  ENDMETHOD.

*  METHOD earlynumbering_create.
*  DATA(lv_user) = cl_abap_context_info=&amp;gt;get_user_technical_name( ).
*    LOOP AT entities ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_entities&amp;gt;).
*      APPEND CORRESPONDING #( &amp;lt;lfs_entities&amp;gt; ) TO mapped-xlhead
*          ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_xlhead&amp;gt;).
*      &amp;lt;lfs_xlhead&amp;gt;-end_user = lv_user.
*    ENDLOOP.
*  ENDMETHOD.

  METHOD get_instance_features.
    READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
    ENTITY XLHead
    FIELDS ( end_user )
    WITH CORRESPONDING #( keys )
    RESULT DATA(lt_file).

    result = VALUE #( FOR ls_file IN lt_file
                      ( %key                              = ls_file-%key
                        %is_draft                         = ls_file-%is_draft
                        %features-%action-uploadexceldata = COND #( WHEN ls_file-%is_draft = '00'
                                                                    THEN if_abap_behv=&amp;gt;fc-f-read_only
                                                                    ELSE if_abap_behv=&amp;gt;fc-f-unrestricted ) ) ).
  ENDMETHOD.
ENDCLASS.


*CLASS lhc_XLData DEFINITION INHERITING FROM cl_abap_behavior_handler.
*
*  PRIVATE SECTION.
*    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
*      IMPORTING keys REQUEST requested_authorizations FOR XLData RESULT result.
*
*    METHODS displayDocument FOR MODIFY
*      IMPORTING keys FOR ACTION XLData~displayDocument RESULT result.
*
*ENDCLASS.
*
*
*CLASS lhc_XLData IMPLEMENTATION.
*  METHOD get_instance_authorizations.
*  ENDMETHOD.
*
*  METHOD displayDocument.
*    "Read Child Entity
*    READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
*        ENTITY XLData
*        ALL FIELDS WITH
*        CORRESPONDING #( keys )
*        RESULT FINAL(lt_data).
*
*    IF lt_data IS NOT INITIAL.
*      "Convert Internal table data for excel
*
*      "Read Updated Entry
*      READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
*      ENTITY XLData
*      ALL FIELDS WITH
*      CORRESPONDING #( Keys )
*      RESULT DATA(lt_XLData).
*
*      "Send Status back to front end
*      result = VALUE #( FOR lwa_upd_data IN lt_XLData
*                        ( %tky   = lwa_upd_data-%tky
*                          %param = lwa_upd_data ) ).
*    ENDIF.
*  ENDMETHOD.
*ENDCLASS.​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Function Module used in RAP to update Billing Date -&lt;BR /&gt;we have created a remote enabled custom FM ZFM_TOM_BILLING_DATE_UPD as we don't have released SAP APIs available in our system. Then we have wrapped it by transaction ACO_PROXY and created a proxy class ZCL_TOM_BILLING_DATE_UPD.&lt;BR /&gt;This proxy class will be called from behavior Implementation class to update billing date.&lt;BR /&gt;Click on Hyperlink to check full blog&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-generate-a-wrapper-for-function-modules-bapis-for-missing-released/ba-p/13692790" target="_blank"&gt;How to generate a wrapper for function modules (BAPIs) for missing released SAP APIs&lt;/A&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;Function module logic is mentioned below:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;FUNCTION zfm_tom_billing_date_upd
  IMPORTING
    VALUE(vbeln) TYPE vbeln_vf
    VALUE(fkdat) TYPE fkdat
  CHANGING
    VALUE(mtype) TYPE bapi_mtype OPTIONAL
    VALUE(message) TYPE bapi_msg OPTIONAL
  EXCEPTIONS
    no_authority.



  DATA: ls_vbrk_i TYPE vbrk,
        ls_vbrk_e TYPE vbrk,
        ls_vbsk   TYPE vbsk.

  DATA: lt_xkomv  TYPE STANDARD TABLE OF komv,
        lt_xvbpa  TYPE STANDARD TABLE OF vbpavb,
        lt_xvbrk  TYPE STANDARD TABLE OF vbrkvb,
        lt_xvbrp  TYPE STANDARD TABLE OF vbrpvb,
        lt_xkomfk TYPE STANDARD TABLE OF komfk,
        lt_xvbfs  TYPE STANDARD TABLE OF vbfs,
        lt_xthead TYPE STANDARD TABLE OF theadvb,
        lt_xvbss  TYPE STANDARD TABLE OF vbss.

  CLEAR: ls_vbrk_i,
  ls_vbrk_e,
  ls_vbsk.

  REFRESH: lt_xkomv,
  lt_xvbpa,
  lt_xvbrk,
  lt_xvbrp,
  lt_xkomfk,
  lt_xvbfs,
  lt_xthead,
  lt_xvbss.

  ls_vbrk_i-vbeln = vbeln.

  TRY.
      "Read billing doc
      CALL FUNCTION 'RV_INVOICE_DOCUMENT_READ'
        EXPORTING
*         ACTIVITY     = '  '
          konv_read    = 'X'
*         NO_NAST      = ' '
          vbrk_i       = ls_vbrk_i
*         I_NO_AUTHORITY_CHECK = ' '
*         OIA_UNZIP_FEES =
*         I_GV_ERDAT_SEL =
*         IV_NO_PRICING_BUFFER = ABAP_FALSE
        IMPORTING
          vbrk_e       = ls_vbrk_e
*         VBUK_E       =
        TABLES
          xkomv        = lt_xkomv
          xvbpa        = lt_xvbpa
          xvbrk        = lt_xvbrk
          xvbrp        = lt_xvbrp
          xkomfk       = lt_xkomfk
          xvbfs        = lt_xvbfs
          xthead       = lt_xthead
          xvbss        = lt_xvbss
*        CHANGING
*         i_data_read_from_archive =
        EXCEPTIONS
          no_authority = 1
          OTHERS       = 2.
      IF sy-subrc &amp;lt;&amp;gt; 0.
* If BAPI is not successful, Implement error handling
        mtype    = 'E'.
        message = TEXT-001.  "Error in Reading Billing Document

      ELSE.
        "Change Billing Date
        ls_vbrk_e-fkdat = fkdat.   "New Billing date

        "Apply Changes
        CALL FUNCTION 'RV_INVOICE_HEAD_MAINTAIN'
          EXPORTING
*           FCODE_I = '    '
            vbrk_i = ls_vbrk_e
          TABLES
            xkomfk = lt_xkomfk
            xkomv  = lt_xkomv
            xthead = lt_xthead
            xvbfs  = lt_xvbfs
            xvbpa  = lt_xvbpa
            xvbrk  = lt_xvbrk
            xvbrp  = lt_xvbrp
            xvbss  = lt_xvbss.

        IF sy-subrc &amp;lt;&amp;gt; 0.
* If BAPI is not successful, Implement error handling
          mtype    = 'E'.
          message = TEXT-002.    "Error in Applying Changes

        ELSE.
          ls_vbsk-mandt = sy-mandt.
          ls_vbsk-ernam = ls_vbrk_e-ernam.
          ls_vbsk-erdat = ls_vbrk_e-erdat.
          ls_vbsk-uzeit = ls_vbrk_e-erzet.

          "Save the Changes
          CALL FUNCTION 'RV_INVOICE_DOCUMENT_ADD'
            EXPORTING
              vbsk_i = ls_vbsk
*             with_posting = 'X'
*             WITHOUT_REFRESH = ' '
*             PREISFINDUNGSART = 'A'
*             I_NO_VBLOG = ' '
*             I_NO_NAST = ' '
*             I_NO_PRICING = ' '
*             I_NO_FI_DOC = ' '
*             I_BLART = ' '
*             IS_FI_ADD_INPUT =
*             I_NO_COLLECTIVE_BILLING =
*             IV_SNAPSHOT_ACTIVATION = ABAP_FALSE
*             IV_SUPPRESS_GTS_IN_SIM_MODE = ABAP_FALSE
*             IV_NO_TAX_CALC_IN_SIM_MODE = ABAP_FALSE
*             IMPORTING
*             VBSK_E =
            TABLES
              xkomfk = lt_xkomfk
              xkomv  = lt_xkomv
              xthead = lt_xthead
              xvbfs  = lt_xvbfs
              xvbpa  = lt_xvbpa
              xvbrk  = lt_xvbrk
              xvbrp  = lt_xvbrp
              xvbss  = lt_xvbss.

          IF sy-subrc &amp;lt;&amp;gt; 0.
* If BAPI is not successful, Implement error handling
            mtype    = 'E'.
            message = TEXT-003.  "Error in Saving the Changes
          ELSE.
            mtype    = 'S'.
            message = TEXT-004.  "Billing Date Changed Successfully
          ENDIF.
        ENDIF.
      ENDIF.

    CATCH cx_root INTO DATA(lx).

  ENDTRY.

ENDFUNCTION.​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--2113708011"&gt;Behavior Projection – ZCDS_TOM_C_USER&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection;
strict ( 2 );
use draft;

define behavior for ZCDS_TOM_C_USER //alias XLHead
{
  //  use create;
  use update;
  use delete;

  field ( readonly ) end_user, status, Local_Last_Changed_At;

  use action downloadTemplate;
  use action downloadData; //Needed in oDataV2 to download excel Data, for oDataV4 comment this

  use action Edit;
  use action Activate;
  use action Discard;
  use action Resume;
  use action Prepare;

  use association _XLData { create; with draft; }
}

define behavior for ZCDS_TOM_C_EXCEL //alias XLData
{
  //  use update; //IF WANT USER TO ENABLE EDIT IN EXCEL DATA UNCOMMENT THIS
  //  use delete; //IF WANT USER TO DELETE PROCESSED EXCEL DATA UNCOMMENT THIS

  use association _XLUser { with draft; }

  //  use action displayDocument; //IF WANT TO ADD A NEW ACTION
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--1723415502"&gt;Create Service Definition&lt;/H3&gt;&lt;P&gt;Now, let's create Service Definitions, exposing both Behavior Definition and Projection we just created.&lt;/P&gt;&lt;H5 id="toc-hId-1788232275"&gt;Service Definition – &lt;SPAN&gt;ZCDS_TOM_SD_MASS_FKDAT&lt;/SPAN&gt;&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service Definition for Projection Views'
define service ZCDS_TOM_SD_MASS_FKDAT {
  expose ZCDS_TOM_C_USER as XLHead;
  expose ZCDS_TOM_C_EXCEL as XLData;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--1948258821"&gt;Create Service Binding&lt;/H3&gt;&lt;P&gt;Now, let's create Service Binding (I tested with V2) on top of Service Definition we just created.&lt;BR /&gt;&lt;BR /&gt;If You are using V4 Services, you don't need to create separate action downloadData (comment it out) as we already have an option to export the data as an excel in V4 Services. You can add validations on excel input data as per your requirement.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--2144772326"&gt;See the &lt;SPAN&gt;wonders...&lt;span class="lia-unicode-emoji" title=":glowing_star:"&gt;🌟&lt;/span&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;The list report page would look like below for V2 Services, in V4 Services you will see an extra option to export data as an excel-&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on Go -&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 143754.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312163i4F93E09465B374AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 143754.png" alt="Screenshot 2025-09-10 143754.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Person Responsible will be the Session User, Click anywhere on the line or on arrow -&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 131117.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312151i6D0C0AA8EEDEA0A7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 131117.png" alt="Screenshot 2025-09-10 131117.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on Download Template button to Load Template, this action can be performed on first screen as well by selecting line item and click download template, Template will be loaded successfully as an excel attachment.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 131209.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312153i9F19A9925D49E4D2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 131209.png" alt="Screenshot 2025-09-10 131209.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Click on Hyperlink to download Template.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 131422.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312154i2F746DF9B2D47AA3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 131422.png" alt="Screenshot 2025-09-10 131422.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Template can be deleted by clicking on Delete Button, this same delete button will be used to delete processed data entries.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 131525.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312155i918EE6DF0C403359/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 131525.png" alt="Screenshot 2025-09-10 131525.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on Edit button on previous screen and You can now update entries in the template and upload the data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 131602.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312156i75E258B132404DEB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 131602.png" alt="Screenshot 2025-09-10 131602.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Data will be processed, now click on save.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 131856.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312157i945EFB19A8FACD56/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 131856.png" alt="Screenshot 2025-09-10 131856.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Status will be changed to 'File Processed'.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 132016.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312161iCBDBFE4677078830/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 132016.png" alt="Screenshot 2025-09-10 132016.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on Download Data to load Processed Data as an Excel Attachment.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 132125.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312160iDB6D54DC85751EFF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 132125.png" alt="Screenshot 2025-09-10 132125.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Watch the Demo for V4 Services!!&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FuApixpT8Vww%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DuApixpT8Vww&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FuApixpT8Vww%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="600" height="337" scrolling="no" title="Excel Upload/ Download Template/ Download Processed Data in SAP Fiori Without SAPUI5 - Using SAP RAP" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;Hope it will be helpful!!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/excel-upload-download-template-download-processed-data-in-sap-fiori-without/ba-p/14212916"/>
    <published>2025-09-10T16:00:28.980000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-september-11th-2025/ba-p/14215007</id>
    <title>SAP Developer News September 11th, 2025</title>
    <updated>2025-09-11T21:10:00.169000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FGbz0-cAlxH0%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DGbz0-cAlxH0&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FGbz0-cAlxH0%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="112" scrolling="no" title="CAP August 2025, ABAP AI, Business Data Cloud, Devtoberfest &amp;amp; TechEd Agenda | SAP Developer News" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1889139651"&gt;&lt;SPAN&gt;DESCRIPTION&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Podcast&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: &lt;A href="https://podcast.opensap.info/sap-developers/2025/09/11/sap-developer-news-september-11th-2025/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://podcast.opensap.info/sap-developers/2025/09/11/sap-developer-news-september-11th-2025/&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;CAP August 2025 release&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Release notes &lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/releases/aug25" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://cap.cloud.sap/docs/releases/aug25&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;ABAP AI - Chapter 2&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Blog post: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/abap-ai-chapter-2/ba-p/14210568" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/abap-ai-chapter-2/ba-p/14210568&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Business Data Cloud Series&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Business Data Cloud Series – Part 3: Customer-Managed Data Products: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-business-data-cloud-series-part-3-customer-managed-data-products/ba-p/14195545" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-business-data-cloud-series-part-3-customer-managed-data-products/ba-p/14195545&lt;/A&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Databricks in SAP Business Data Cloud – a Typical Machine Learning Workflow: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-databricks-in-sap-business-data-cloud-a-typical-machine-learning/ba-p/14206612" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-databricks-in-sap-business-data-cloud-a-typical-machine-learning/ba-p/14206612&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Data and AI at Devtoberfest: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest/eb-p/devtoberfest-events/label-name/data%20analytics%20ai" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest/eb-p/devtoberfest-events/label-name/data%20analytics%20ai&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Devtoberfest 2025&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest 2025: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-welcome/ba-p/14182817" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-welcome/ba-p/14182817&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP TechEd Agenda Builder&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Ceci’s blog post: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/sap-teched-blog-posts/put-your-thinking-cap-on-it-s-time-to-make-some-tough-choices/ba-p/14211727" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/sap-teched-blog-posts/put-your-thinking-cap-on-it-s-time-to-make-some-tough-choices/ba-p/14211727&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP TechEd Session Catalog and Agenda Builder: &lt;/SPAN&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP TechEd Berlin: &lt;/SPAN&gt;&lt;A href="https://www.sap.com/events/teched/berlin.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://www.sap.com/events/teched/berlin.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP TechEd Virtual: &lt;/SPAN&gt;&lt;A href="https://www.sap.com/events/teched/virtual.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://www.sap.com/events/teched/virtual.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1692626146"&gt;&lt;STRONG&gt;CHAPTER TITLES&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;0:00&lt;/SPAN&gt;&lt;SPAN&gt; Intro&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;0:10&lt;/SPAN&gt;&lt;SPAN&gt; CAP Aug 2025 Release&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;6:04&lt;/SPAN&gt;&lt;SPAN&gt; ABAP AI - Chapter 2&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;7:25&lt;/SPAN&gt;&lt;SPAN&gt; SAP Business Data Cloud Series&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;8:40&lt;/SPAN&gt;&lt;SPAN&gt; SAP TechEd Agenda Builder&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;9:55&lt;/SPAN&gt;&lt;SPAN&gt; Devtoberfest 2025 &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1496112641"&gt;&lt;STRONG&gt;TRANSCRIPTION&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Intro]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;This is the SAP Developer News for September 11th, 2025.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[DJ]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;In case you missed it, the August 2025 release of CAP has landed with myriad updates. Now, this is going to be a slightly longer news item than usual, so grab a cup of tea and settle in. So, front and center for us all is the brand new cap&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face="Cambria Math" color="black"&gt;&lt;SPAN&gt;≽&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;ire organization on GitHub, which contains a reorganized set of repos, including individual sample repos, plus the cap&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face="Cambria Math" color="black"&gt;&lt;SPAN&gt;≽&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;ire documentation source repo itself, where contributions are welcome. Along with this reorganization comes continuous content deployments and a setup of package publication, which is great, not least for package reuse. And this cap&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face="Cambria Math" color="black"&gt;&lt;SPAN&gt;≽&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;ire organization is also the new home for discussions all around Cap. Check it out. So now in the new and recently GA, generally available topic, we can see that the previously beta-only support for persistent Fiori draft messages has now graduated and become GA. Also, there's a new MCP server for Cap that can provide AI-powered development help. Talking of GA in the language and compiler topic you may remember the introduction of support for expressions as first class annotation values well that support is also now GA. Staying in the language and compiler topic the query compiler has a new optimization for path expressions involving managed to one associations. A foreign key path expression is now translated to the local foreign key column instead of the joined remote one in the Node.js runtime this is now default and you can turn it on with a switch in the Java runtime. Now in a related update you can now collapse foreign key path expressions for managed to one associations into something simpler and let auto-coercion resolve this view into the more specific single foreign key specification like this example shown in a where clause. Now moving to the Node.js and Java runtimes there are plenty of updates too. Let's start with Node.js. There's a feature that was first introduced in the Java runtime back in April this year. This has also now been made available in Node.js. It's how elements that are annotated with common.txt are automatically included when a dollar search request is processed. Great stuff. There's also now a new database service level feature that allows you to stream query results direct from the persistence layer to the HTTP response, bypassing any need to materialize the result set in memory. There are also new features relating to requiring and connecting to remote services, a new utility method for working with linked definitions, and a new container for authentication-related information. And that's cdsuser.authinfo. This replaces the now deprecated cdsuser.tokeninfo. Moving to the Java runtime, there are quality of life, quality of dev life improvements when working with query results. For typed queries the results are automatically typed and you don't need to provide the access interface anymore if you're using the single list of or stream of methods. Now for single tenant applications, this is staying in a Java runtime right now, the feature attachment plugin now supports in an alpha version the SAP BTP object store and now you'll need a service binding to an object store backend. AWS's S3, Azure's blob storage, and Google's cloud storage are all supported. Now you may already know of CDS generate, part of the CDS Maven plugin, which automatically generates access interfaces for all structured CDS model types. This feature has been evolving and the team recommends you do use this as it brings benefits and in turn allows better compile time checking. Now, there's lots of detailed documentation on this, just waiting for your reading pleasure in cap&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face="Cambria Math" color="black"&gt;&lt;SPAN&gt;≽&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;ire, so go and check it out. Last but not least, there's now a convenience URL that you can directly select from the console log output, and it'll take you directly to the server's index page. Nice. Moving on to the tools area, the CDS plugin for IntelliJ is now at 2.0.0, and is now fully compatible with the free community edition of IntelliJ, which means that anyone and everyone can use IntelliJ for CAP development. The new 2.0.0 version brings lots of IDE features, lots of new features for the IDE, enhanced LSP integration and new options in the settings page. And there are also in the tools topic, new ESLint checks for JavaScript, making your life as a developer easier and the life of your code smoother. There are five safety checks so far, take a look in the cds lint section of cap hire. And last but certainly not least in this release there's been some awesome work in the area of GitHub actions, a new guide, sample workflows and lots more to help you manage test, deploy, package and release your CAP projects. Now that is cool. All this and more in the August 2025 release section of the CapHire documentation. Thanks, CapTeam.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;STRONG&gt;[&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Mamikee]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Big news for ABAP developers. ABAP AI just keeps growing. Back in February, we announced that Joule speaks ABAP. Since then, there has been a wave of new AI-driven skills. Now, you can generate wrap business objects from the database table all the way to the UI service. You can create unit tests, explain code, complete code directly in the editor, and even implement validation and determination. These capabilities are already live in the SAP VTP ABAP environment and SAP S/4HANA Cloud Public Edition. And they're coming to S/4HANA Cloud Private Edition in the 2025 release. Even better, ABAP AI remains free of charge. The free promotions we introduced earlier this year have been extended until further notice. And here is another big step forward. ABAP AI will also become available for older S/4HANA private releases. Think of an AI service running side-by-side with their ABAP instance. That means you can benefit from the latest innovations without waiting for an upgrade. Want the full details? You can stay tuned for TechEd 2025. And if you want to read more on these release updates, the link is in the description below.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Witalij]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;SAP Business Data Cloud, BDC, brings a data product-centric approach to managing business data. Each data product is a curated, semantically enriched package of business process data, harmonized and replicated from systems like SAP S/4HANA. For solution developers and architects among here, BDC offers a standardized platform to build, extend, and consume these data products, exposing them through APIs or events for integration with both SAP and third-party applications. To dive deeper, check out the SAP Business Data Cloud blog series, including the latest post on customer-managed data products. You'll see how to build a custom data product in SAP S/4HANA Cloud Private Edition using a custom CDS entity. There is also a dedicated series that walks through consuming data products in SAP Databricks for machine learning workflows and exposing them for inference. You'll find links to all these resources in the description. And as the Devtoberfest approaches, be sure to catch the sessions featuring product managers and the CTO of SAP Business Data Cloud. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Daniel]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;SAP TechEd 2025 Berlin has just released the Agenda Builder, so you can now set your schedule for the event. Just scroll through all of the sessions, 250 keynotes, hands-on workshops, community talks, strategy talks, roadmaps and more. Select the ones that you like, click add to schedule and you're set to go. They are added to your dashboard. What's really great is that the sessions you would dream of missing are already in your schedule, like Key101, the Developer Keynote, run by a bunch of developer advocates you may recognize. If you're in Berlin, please drop by and say hello. If you can't make it to Berlin, you can still create an agenda for SAP TechEd Virtual, and the same Key101 Developer Keynote will be automatically added to your schedule. I love playing with the theme.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Michelle]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;&amp;nbsp;Howdy y'all, everyone's favorite fall tech fest is just about to start. Devtoberfest 2025 kicks off on September 29th, which is only a few weeks away. Each day spotlights a different theme: ABAP, frontend tooling, AI, and more. As in years past, it's free and fully online, so jump in, earn points on the scoreboard, chase nirvana and put yourself in the running for the grand prize, which this year is a retreat to a future TechEd event and meet us developer advocates in person. Check out the post linked below for more info on the great sessions we've got coming up and the contest to see how you can win that fantastic grand prize. We hope you're just as excited to participate as we are to go live, and as alw&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face="-webkit-standard" size="4" color="black"&gt;&lt;SPAN&gt;ays, &lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;happy coding!&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-september-11th-2025/ba-p/14215007"/>
    <published>2025-09-11T21:10:00.169000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/abap-ai-revolution-accelerates-the-abap-developer-who-built-enterprise-apps/ba-p/14216073</id>
    <title>ABAP AI Revolution Accelerates: The ABAP Developer Who Built Enterprise Apps in Minutes</title>
    <updated>2025-09-12T21:50:13.192000+02:00</updated>
    <author>
      <name>SimonaM</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/9367</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;The ABAP AI revolution just got a massive functionality upgrade and stays FREE OF CHARGE for another year&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Remember John, our seasoned ABAP developer who discovered the power of Joule for AI-assisted coding? His journey has taken an incredible turn. What started as relief from "quick questions" and real-time assistance has evolved into something he never imagined possible – building entire applications and transforming legacy systems through conversation in minutes.&amp;nbsp;&lt;/P&gt;&lt;P&gt;John's incredible journey is about to accelerate even further with game-changing news:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Joule for Developers remains FREE OF CHARGE for another year&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;– the promotion has been extended with no commercial barriers, allowing every customer and partner to benefit from AI-driven development through material numbers 8019124 (customers) and 8019541 (TDD partners). This offer is now available not only for the BTP ABAP environments (Steampunk) and SAP Cloud ERP Public, but also to our SAP Cloud ERP Private customers using the latest 2025 release version. For a deep dive in more commercial details see&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/abap-ai-chapter-2/ba-p/14210568" target="_blank"&gt;ABAP AI - Chapter 2&lt;/A&gt;&amp;nbsp;blog written by my colleague&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/179726"&gt;@AlexanderRother&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;See John's ABAP AI complete evolution with 2505, 2508 and 2025 ABAP releases:&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The Game-Changer: ABAP Cloud Application Generation&lt;/LI&gt;&lt;LI&gt;Intelligent Business Logic with RAP Business Logic Prediction&lt;/LI&gt;&lt;LI&gt;Seamless Integration with OData Consumption&lt;/LI&gt;&lt;LI&gt;Enhanced Extensibility with Extensibility AI Assistant&amp;nbsp;for SAP Cloud ERP Public&lt;/LI&gt;&lt;LI&gt;The Migration Revolution: Custom Code Migration AI Assistant&amp;nbsp;for SAP Cloud ERP Private 2025&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1760086936"&gt;The Game-Changer: ABAP Cloud Application Generation&lt;/H2&gt;&lt;P&gt;John's latest project required a library application with multiple entities. Opening his package in ADT, he right-clicks and selects "Generate ABAP Repository Objects." The new&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;OData UI Service from Scratch Wizard with Joule Chat&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;appears.&lt;/P&gt;&lt;P&gt;"Create a library application with entities for branches, book stock, users and borrowing information. Generate the appropriate fields which fit the business case for the entities." John prompts.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SimonaM_0-1757699149723.png" style="width: 831px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313657iF75C055449D3BA74/image-dimensions/831x489?v=v2" width="831" height="489" role="button" title="SimonaM_0-1757699149723.png" alt="SimonaM_0-1757699149723.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Within seconds, Joule responds with a comprehensive proposal including all entities, fields, and relationships. One click on "Accept" and the wizard auto-populates all configuration fields. Minutes later, John has a complete, runnable RAP application with data model, behavior definitions, service bindings, and OData services ready for UI consumption.&lt;/P&gt;&lt;H2 id="toc-hId-1563573431"&gt;Intelligent Business Logic with RAP Business Logic Prediction&lt;/H2&gt;&lt;P&gt;But the magic doesn't stop at application generation. John's application needs sophisticated business logic – validations for booking dates, automatic stock calculations, and borrowing permission determinations.&lt;/P&gt;&lt;P&gt;Navigating to his behavior implementation class, John finds empty method stubs for his determinations and validations. The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;RAP Predict Business Logic&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;capability kicks in, understanding the entity structure, field relationships, and business context to generate complete validation logic within the method implementation.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SimonaM_2-1757699553027.png" style="width: 671px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313659i2E91AAAC0E2D0475/image-dimensions/671x255?v=v2" width="671" height="255" role="button" title="SimonaM_2-1757699553027.png" alt="SimonaM_2-1757699553027.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;"It's not just generating code," John marvels. "It's understanding the business context and implementing proper RAP patterns automatically."&lt;/P&gt;&lt;H2 id="toc-hId-1367059926"&gt;Seamless Integration with OData Consumption&lt;/H2&gt;&lt;P&gt;When John needs to integrate with external booking services, he opens his service consumption model and starts the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Joule chat&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;/consume&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;slash command. The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;OData consumption&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;capability generates complete, ready-to-use ABAP code for consuming OData calls via the OData Client Proxy, tailored to his specific service model.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SimonaM_5-1757699897856.png" style="width: 909px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313662iC303D01AD9C0D39A/image-dimensions/909x507?v=v2" width="909" height="507" role="button" title="SimonaM_5-1757699897856.png" alt="SimonaM_5-1757699897856.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;What used to take hours of documentation reading now happens in seconds with Joule providing example prompts and OData request generation.&lt;/P&gt;&lt;H2 id="toc-hId-1170546421"&gt;Enhanced Extensibility with Extensibility AI Assistant for SAP Cloud ERP Public&lt;/H2&gt;&lt;P&gt;As business requirements evolve, the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Extensibility AI Assistant&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;guides John through adding custom fields for regulatory compliance. It assists him in:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Creating Custom Fields&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for borrowing information&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Finding Business Contexts&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for the right extension points&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Enabling Usages&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;where custom fields can be exposed in UIs, APIs, and analytical views&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Enabling Business Scenarios&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for data flow between business objects&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Finding Value Help Views&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for code list-based custom fields&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Finding BAdIs&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;based on natural language input&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SimonaM_6-1757700405040.png" style="width: 841px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313665i86F9A9FF94CFD78E/image-dimensions/841x547?v=v2" width="841" height="547" role="button" title="SimonaM_6-1757700405040.png" alt="SimonaM_6-1757700405040.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-974032916"&gt;The Migration Revolution: Custom Code Migration AI Assistant&amp;nbsp;&lt;STRONG&gt;for SAP Cloud ERP Private 2025&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;With the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP S/4HANA Cloud Private Edition 2025 release&lt;/STRONG&gt;, John faces his organization's biggest challenge: migrating 15 years of custom ECC code to SAP ERP Cloud Private 2025. The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Custom Code Migration AI Assistant&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;will&amp;nbsp;&lt;/SPAN&gt;transforms this experience (on October 2025 planned release).&amp;nbsp; These use cases are currently not available on the older releases, however the use cases delivered on 2025 versions will be soon provided also as part of the&lt;STRONG&gt; Custom Code Migration Application&lt;/STRONG&gt; which is a standalone BTP ABAP environment (Steampunk) application &lt;STRONG&gt;which can connect freely to any ERP OnPrem or Cloud system to support RISE migrations.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Using the Explain Capability&lt;/STRONG&gt;: "Explain this legacy report," John types, selecting a 500-line ABAP program. The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Explain capability&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;provides detailed explanations of the ABAP program, breaking down complex concepts with support for ABAP classes, ABAP programs, and CDS artifacts.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Explain ATC Findings Capability&lt;/STRONG&gt;&lt;SPAN&gt;: When running ATC checks with S/4HANA readiness variants, John uses the&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Explain ATC Findings capability&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;on his S/4HANA readiness findings. This capability provides detailed explanations and step by step resolution proposal on ATC findings from check variants for SAP S/4HANA Readiness, specifically for:&amp;nbsp;&lt;/SPAN&gt;S/4HANA: Field Length Extensions,&amp;nbsp;S/4HANA: Search for Database Operations and&amp;nbsp;S/4HANA: Search for Usages and Simplified Objects. Each finding links to simplification items, which Joule explains in detail.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Documentation Migration Assistance&lt;/STRONG&gt;&lt;SPAN&gt;: Using the&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Custom Code Migration AI Assistant&lt;/STRONG&gt;&lt;SPAN&gt;, John opens the Joule chat view,&amp;nbsp; type in /docs to start chatting about simplification items related to Custom Code Migration and ABAP SAP Help documentation.&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;To chat with the assistant about SAP S/4HANA simplification items and Custom Code Migration, just start asking topic-related questions.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;With&amp;nbsp;&lt;STRONG&gt;Code proposal for code adaptation&lt;/STRONG&gt;&amp;nbsp;coming in SAP S/4HANA 2025 FPS01, John will soon receive in addition of the step-by-step description of how to solve the ATC findings provided currently by ATC Explain functionality and a custom code adaptation automatically.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SimonaM_0-1757704750948.png" style="width: 906px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313685iB65B0C26D2DE969E/image-dimensions/906x562?v=v2" width="906" height="562" role="button" title="SimonaM_0-1757704750948.png" alt="SimonaM_0-1757704750948.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-777519411"&gt;The Complete ABAP Lifecycle Revolution&lt;/H2&gt;&lt;P&gt;John's journey now encompasses the entire ABAP development and transformation lifecycle:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Build new cloud applications&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;OData UI Service from Scratch Wizard&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Implement intelligent business logic&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;RAP Predict Business Logic&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Integrate seamlessly&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;OData consumption&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Extend dynamically&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Extensibility AI Assistant in SAP Cloud ERP Public&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Transform existing solutions&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Custom Code Migration AI Assistant for RISE&amp;nbsp;in SAP Cloud ERP Private 2025&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;John tells now to everyone: "Six months ago, I was struggling with syntax," John explains to his manager. "Today, I'm generating complete applications with the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;OData UI Service from Scratch Wizard&lt;/STRONG&gt;, implementing business logic with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;RAP Predict Business Logic&lt;/STRONG&gt;, consuming services with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;OData consumption&lt;/STRONG&gt;, extending solutions with the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Extensibility AI Assistant&lt;/STRONG&gt;, and leading our S/4HANA migration with the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Custom Code Migration AI Assistant&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;– all through natural language conversations."&lt;/P&gt;&lt;P&gt;The impact is transformative:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Application Development&lt;/STRONG&gt;: Dramatically faster with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ABAP Cloud Application Generation&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Business Logic Implementation&lt;/STRONG&gt;: Massive reduction in development time&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Migration Analysis&lt;/STRONG&gt;: From weeks to hours using&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Custom Code Migration AI Assistant&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;OData Integration&lt;/STRONG&gt;: Significantly less code required for side-by-side extension scenarios&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-581005906"&gt;&amp;nbsp;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;The AI Revolution Accelerates – &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/abap-ai-chapter-2/ba-p/14210568" target="_self"&gt;Chapter 2&lt;/A&gt; Awaits!&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;John's incredible transformation is just the beginning as we enter the next phase of ABAP AI evolution. Even more exciting, SAP is pioneering a revolutionary&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;side-by-side ABAP AI service&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;that will bring full AI capabilities to older SAP S/4HANA Cloud Private Edition releases, enabling immediate access to new AI innovations without waiting for upgrades or support packages across hybrid landscapes. Get ready for&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;TechEd 2025&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;where all the groundbreaking details of this hybrid AI service will be unveiled – the future of ABAP development is about to get even more transformative!&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Ready to evolve your ABAP development approach? Check out the &lt;A href="https://help.sap.com/docs/abap-ai/generative-ai-in-abap-cloud/generative-ai-in-abap-cloud" target="_self" rel="noopener noreferrer"&gt;hands-on documentation in SAP Help&lt;/A&gt; and join the growing community redefining what's possible in enterprise development.&lt;/EM&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-ai-revolution-accelerates-the-abap-developer-who-built-enterprise-apps/ba-p/14216073"/>
    <published>2025-09-12T21:50:13.192000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-collaborate-on-an-entity-of-a-draft-enabled-rap-business-object/ba-p/14216444</id>
    <title>How to collaborate on an entity of a draft enabled RAP Business Object ?</title>
    <updated>2025-09-13T17:11:57.556000+02:00</updated>
    <author>
      <name>Andre_Fischer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/55</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1631007969"&gt;Introduction&lt;/H1&gt;&lt;P&gt;With the latest release 2508 of SAP BTP ABAP Environment a new feature called &lt;EM&gt;&lt;STRONG&gt;Collaborative Draft&lt;/STRONG&gt;&lt;/EM&gt; has been delivered.&amp;nbsp; This feature allows that several users can work on the same draft instance of an entity of a RAP Business Object.&amp;nbsp;&lt;/P&gt;&lt;P&gt;So similar like collaborating on a file in Microsoft Teams it is now possible that several users can perform changes on an entity of a RAP Business Object at the same time.&lt;/P&gt;&lt;P&gt;The cool thing is that every draft enabled RAP BO can be enhanced so that it also supports Collaborative Draft without the need to change the existing ABAP code of your behavior implementation class(es).&lt;/P&gt;&lt;P&gt;It is only required to change a few lines of code in the behavior definition, the behavior projection and you have to create a&amp;nbsp;&lt;SPAN&gt;&lt;EM&gt;&lt;STRONG&gt;draft query view&lt;/STRONG&gt;&lt;/EM&gt;&amp;nbsp; which projects all fields of the draft table of&amp;nbsp;the "authorization&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;master&lt;/SPAN&gt;&lt;SPAN&gt;" entity which in most cases this is the root entity of your business object.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In case&amp;nbsp;your active business object view entity is protected by a DCL (which is strongly recommended for every productive RAP business object &lt;span class="lia-unicode-emoji" title=":winking_face:"&gt;😉&lt;/span&gt;)&amp;nbsp; the draft query view must also be protected by a&amp;nbsp;data control language (DCL) that inherits from that existing DCL.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This because otherwise users would be able to see data in the draft they would not be allowed to see in the active data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Please note:&amp;nbsp;&amp;nbsp;&lt;BR /&gt;As described in the section Outlook the implementation will become even easier in the future once table entities will be supported as a draft persistency instead of tables.&amp;nbsp; &amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1434494464"&gt;&lt;SPAN&gt;Prerequisites&lt;/SPAN&gt;&lt;/H1&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;You need a draft enabled RAP Business object (which you can easily generate using the new "&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/odata-ui-service-from-scratch?locale=en-US&amp;amp;state=PRODUCTION&amp;amp;version=sap_cross_product_abap" target="_blank" rel="noopener noreferrer"&gt;from scratch generator&lt;/A&gt;").&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;&amp;nbsp;Your user and any other user that is supposed to use / test your RAP BO must have the new&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;business catalog&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP_CORE_BC_RAP_DRAFT_PC&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;assigned which is part of the business role template&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;SAP_BR_EMPLOYEE&lt;/STRONG&gt;.&amp;nbsp;&lt;BR /&gt;You have hence first to ask your administrator to either generate an additional role based on the role template&amp;nbsp;&lt;STRONG&gt;SAP_BR_EMPLOYEE&lt;/STRONG&gt;&amp;nbsp;or let the administrator assign the business catalogue to an existing role which is assigned to developers on your SAP BTP ABAP Environment system, so that you and your colleagues can start developing and testing this cool new feature.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H1 id="toc-hId-1237980959"&gt;&lt;SPAN&gt;Result&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In the following you see me (Andre Fischer) and the user ANZEIGER working on the same instance of a draft entity. As soon as a user leaves the focus of a field the changes will be updated automatically in the UI of the other user.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Demo_video.gif" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313957iAAB37BFE5C5DA836/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Demo_video.gif" alt="Demo_video.gif" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can test the collaborative draft setup even in systems where you have just one user, like in our trial systems.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the first screen shot I am editing the field "Notes" (highlighted in red) and I can see that I am editing the field "OrderID" in the second tab (highlighted in green).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the second screen shot we see vice versa that I am there editing the field "OrderID" (highlighted in red) and that I am editing the field notes in the other session in the first tab.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="User_in_tab_1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313948iBD3D15B8542E81AE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="User_in_tab_1.png" alt="User_in_tab_1.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="User_in_tab_2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313949iE2DB4E59DF935D61/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="User_in_tab_2.png" alt="User_in_tab_2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1041467454"&gt;&lt;SPAN&gt;Implementation Steps&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;A step by step guide which describe how to enhance an existing draft enabled RAP Business Object has been provided for your convenience to the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/adding-collaboration-capability-to-draft-enabled-managed-business-object?locale=en-US&amp;amp;version=LATEST" target="_blank" rel="noopener noreferrer"&gt;SAP Online Help&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;An example of a RAP Business Object has also been delievered as part of the well known Flight Reference Sample with the latest version in &lt;A href="https://github.com/SAP-samples/abap-platform-refscen-flight/blob/ABAP-platform-cloud/README.md" target="_blank" rel="noopener nofollow noreferrer"&gt;Github&lt;/A&gt;&amp;nbsp;which now contains an additional sub package &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;/DMO/FLIGHT_COLLDRAFT.&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-844953949"&gt;&lt;SPAN&gt;Implementation Walkthrough&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;I will add a few screen shots on how I have enabled my small RAP BO using the above mentioned documentation. As shown in the following screen shot only the behavior definition and the behavior projection have to be changed and two additional objects, the draft query view for the draft table of the root entity and the DCL for the draft query view have to be created.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="list_of_changed_and_new_repo_objects.png" style="width: 827px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313956iC892BB3203762888/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="list_of_changed_and_new_repo_objects.png" alt="list_of_changed_and_new_repo_objects.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-777523163"&gt;&lt;SPAN&gt;1. Changes in the behavior Definition&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;As described in the documentation the we have specify in the behavior definition that collaborative draft is used instead of exclusive draft and for the root entity we have to add the use of the draft query view for the draft table and we have to add the action &lt;STRONG&gt;Share&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="changes_in_bdef.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313952iFB7250D796996097/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="changes_in_bdef.png" alt="changes_in_bdef.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-581009658"&gt;2. Changes in the behavior projection&lt;/H2&gt;&lt;P&gt;In the behavior projection we simply have to add use statements so that the collaborative draft is used for our RAP business object and we have to enable the action &lt;STRONG&gt;Share&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="changes_in_bdef_projection.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313953i06CBFE56B1BF1659/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="changes_in_bdef_projection.png" alt="changes_in_bdef_projection.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-384496153"&gt;&lt;SPAN&gt;3. Create new object - Draft Query View&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="new_object_draft_query_view.png" style="width: 801px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313954i57652090D4856855/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="new_object_draft_query_view.png" alt="new_object_draft_query_view.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-187982648"&gt;&lt;SPAN&gt;4. Create DCL for the Draft Query View&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="new_object_draft_query_view_DCL.png" style="width: 872px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313955i9FAEBC373CCDB3D2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="new_object_draft_query_view_DCL.png" alt="new_object_draft_query_view_DCL.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--137613576"&gt;&lt;SPAN&gt;Outlook&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In future releases, when table entities will be supported to store the draft data instead of tables it will not be necessary anymore to create a draft query view for the draft table. This is because in this case the table entity itself can be directly secured by a DCL.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The setup shown in this blog post will be presented in upcoming events such as the sitBE Event in Mechelen, the DevToberFest and naturally TechEd and TechConnect events later this year.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-435613002"&gt;&lt;SPAN&gt;DevToberFest Sample&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;And you can find the code of the sample application which shows a Shopping Cart with a header and a child entity for items that I will use in this blog post soon in Github as well.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For the implementation I used the "from scratch generator" and as a template for the root entity I used the following structure&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Shopping Cart Header Data'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
define structure zdmo_cart_## {

  currency                : abap.cuky;
  notes                   : abap.char(100);
  order_id                : abap.numc(8);
  requested_delivery_date : fins_caldate;
  @Semantics.amount.currencyCode : 'zdmo_cart_##.currency'
  total_price             : abap.curr(11,2);

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;while for the child entity this structure was used&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Shopping Cart Item Data'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
define structure zdmo_item_## {

  item_id         : abap.numc(8);
  ordered_item    : matnr40;
  quantity        : abap.numc(4);
  currency        : abap.cuky;
  @Semantics.amount.currencyCode : 'zdmo_item_##.currency'
  item_price      : abap.curr(11,2);
  @Semantics.amount.currencyCode : 'zdmo_item_##.currency'
  item_unit_price : abap.curr(11,2);

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-collaborate-on-an-entity-of-a-draft-enabled-rap-business-object/ba-p/14216444"/>
    <published>2025-09-13T17:11:57.556000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/steps-to-connect-eclipse-adt-with-github/ba-p/14211833</id>
    <title>Steps to Connect Eclipse ADT with GITHUB</title>
    <updated>2025-09-15T08:25:53.672000+02:00</updated>
    <author>
      <name>Nihal__Raj</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2252976</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction: &lt;/STRONG&gt;By linking Eclipse ADT with GitHub developers can manage source code, collaborate remotely and adopt best practices in enterprise development workflows using Git repositories.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;❖ Prerequisites&lt;/STRONG&gt;&lt;BR /&gt;▪ &lt;EM&gt;Eclipse ADT set up in ABAP Perspective.&lt;/EM&gt;&lt;BR /&gt;&lt;EM&gt;▪ ABAP Package created (to link with GitHub)&lt;/EM&gt;&lt;BR /&gt;&lt;EM&gt;▪ GitHub account and Repository.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;❑ Stage 1 - Install abapGit plugin in Eclipse&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;1.&lt;/STRONG&gt; Open&lt;STRONG&gt; Eclipse&lt;/STRONG&gt; and select &lt;STRONG&gt;Help&lt;/STRONG&gt; → &lt;STRONG&gt;Install New Software.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_0-1757403547635.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311481i709B62818C2E9463/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_0-1757403547635.png" alt="Nihal__Raj_0-1757403547635.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.&lt;/STRONG&gt; Enter the abapGit URL &lt;A href="https://eclipse.abapgit.org/updatesite/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://eclipse.abapgit.org/updatesite/&lt;/A&gt;&lt;BR /&gt;the ‘work with’ section, &lt;STRONG&gt;press enter&lt;/STRONG&gt; → select &lt;STRONG&gt;abapGit forABAP &lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Development Tools (ADT)&lt;/STRONG&gt; → click &lt;STRONG&gt;Next.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_1-1757403639554.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311430i99D2793B9D10BC59/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_1-1757403639554.png" alt="Nihal__Raj_1-1757403639554.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.&lt;/STRONG&gt; Click&lt;STRONG&gt; Finish.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_2-1757403766638.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311431i594D31837B93C262/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_2-1757403766638.png" alt="Nihal__Raj_2-1757403766638.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.&lt;/STRONG&gt; Click &lt;STRONG&gt;Select All&lt;/STRONG&gt; → &lt;STRONG&gt;Trust Selected.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_3-1757403817506.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311432iA48BAEE1EEE6C80A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_3-1757403817506.png" alt="Nihal__Raj_3-1757403817506.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5.&lt;/STRONG&gt; Click &lt;STRONG&gt;Restart Now.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_4-1757403859643.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311434i77E6796BA99012B1/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_4-1757403859643.png" alt="Nihal__Raj_4-1757403859643.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;abapGit plugin&lt;/STRONG&gt; is installed now in Eclipse ADT&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;❑ Stage 2 - Create&lt;/STRONG&gt; &lt;STRONG&gt;GitHub Personal Access Token&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;1.&lt;/STRONG&gt; Open &lt;STRONG&gt;GitHub repository&lt;/STRONG&gt; you want to link with your&lt;BR /&gt;ABAP package → copy the&lt;STRONG&gt; repository URL&lt;/STRONG&gt; (you will use&lt;BR /&gt;it in the next stage) → go to &lt;STRONG&gt;Settings&lt;/STRONG&gt; (click your profile&lt;BR /&gt;picture in the top-right corner to access it).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_6-1757404222513.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311437i0381543EF182D30E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_6-1757404222513.png" alt="Nihal__Raj_6-1757404222513.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.&lt;/STRONG&gt; In Settings, open &lt;STRONG&gt;Developer settings&lt;/STRONG&gt; (bottom of the sidebar) →&lt;BR /&gt;expand &lt;STRONG&gt;Personal access tokens&lt;/STRONG&gt; → click&lt;STRONG&gt; Tokens (classic).&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_7-1757404298948.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311439iEE3596EF7A53728C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_7-1757404298948.png" alt="Nihal__Raj_7-1757404298948.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.&lt;/STRONG&gt; click&lt;STRONG&gt; Generate new token&lt;/STRONG&gt; → click &lt;STRONG&gt;Generate new token(classic).&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_8-1757404362875.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311440iE6C4003B77D92E91/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_8-1757404362875.png" alt="Nihal__Raj_8-1757404362875.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.&lt;/STRONG&gt; Provide a &lt;STRONG&gt;Note (descriptive name) for the token&lt;/STRONG&gt; – set an&lt;BR /&gt;&lt;STRONG&gt;expiration period – select the required scopes&lt;/STRONG&gt; (choose repo to&lt;BR /&gt;enable general repository push and pull operations).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_9-1757404415053.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311441iD9384EBA0A216B8E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_9-1757404415053.png" alt="Nihal__Raj_9-1757404415053.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5.&lt;/STRONG&gt; &lt;STRONG&gt;scroll the page down&lt;/STRONG&gt; → click &lt;STRONG&gt;Generate token.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_10-1757404465468.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311442iAEE5132D1300418E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_10-1757404465468.png" alt="Nihal__Raj_10-1757404465468.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6. PAT successfully generated → copy the token&lt;/STRONG&gt; (you’ll use in next&lt;BR /&gt;stage).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_11-1757404503041.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311443i1D89D9272EDBBE2C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_11-1757404503041.png" alt="Nihal__Raj_11-1757404503041.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;❑ Stage 3 – Link GitHub Repository with ABAP &lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Package, Commit Changes, and Push files&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;1.&lt;/STRONG&gt; Open&lt;STRONG&gt; Eclipse&lt;/STRONG&gt; → select &lt;STRONG&gt;Window&lt;/STRONG&gt; → &lt;STRONG&gt;Show View&lt;/STRONG&gt; → &lt;STRONG&gt;Other&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_12-1757404549117.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311444iA3CBA04CEC106484/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_12-1757404549117.png" alt="Nihal__Raj_12-1757404549117.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.&lt;/STRONG&gt; Search&lt;STRONG&gt; ‘abapgit’&lt;/STRONG&gt; → select &lt;STRONG&gt;abapGit Repositories&lt;/STRONG&gt; → click &lt;STRONG&gt;Open&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_13-1757404592040.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311445i749B44180CDAEA6B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_13-1757404592040.png" alt="Nihal__Raj_13-1757404592040.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.&lt;/STRONG&gt; Under &lt;STRONG&gt;abapGit Repositories view&lt;/STRONG&gt;, click &lt;STRONG&gt;‘+’&lt;/STRONG&gt; &lt;STRONG&gt;icon&lt;/STRONG&gt; (Link New&lt;BR /&gt;abapGit Repository).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_14-1757404720676.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311446iB202CD926272AB26/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_14-1757404720676.png" alt="Nihal__Raj_14-1757404720676.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.&lt;/STRONG&gt; Paste &lt;STRONG&gt;GitHub Repository URL&lt;/STRONG&gt; (copied in Stage 2 – Step 1) →&lt;BR /&gt;click &lt;STRONG&gt;Next.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_23-1757407142305.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311521i1514A3832D06FD31/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_23-1757407142305.png" alt="Nihal__Raj_23-1757407142305.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5.&lt;/STRONG&gt; Add &lt;STRONG&gt;Package Name&lt;/STRONG&gt; → click &lt;STRONG&gt;Next&lt;/STRONG&gt; → select &lt;STRONG&gt;Folder Logic&lt;/STRONG&gt;&lt;BR /&gt;(default Full) → click &lt;STRONG&gt;Finish.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_16-1757404808262.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311456iBBDDAD0F852F59A0/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Nihal__Raj_16-1757404808262.png" alt="Nihal__Raj_16-1757404808262.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6.&lt;/STRONG&gt; Click &lt;STRONG&gt;My Repositories&lt;/STRONG&gt; → &lt;STRONG&gt;right-click on your package&lt;/STRONG&gt; → click&lt;BR /&gt;&lt;STRONG&gt;Stage and Push.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_22-1757407035735.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311517i523A7DEAB1BA4EAA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_22-1757407035735.png" alt="Nihal__Raj_22-1757407035735.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;7.&lt;/STRONG&gt; In the &lt;STRONG&gt;abapGit Staging view&lt;/STRONG&gt; → (1) &lt;STRONG&gt;refresh&lt;/STRONG&gt; to load the updated&lt;BR /&gt;objects → (2) &lt;STRONG&gt;select the object(s)&lt;/STRONG&gt; → (3) click&lt;STRONG&gt; ‘+’ icon to Stage&lt;/STRONG&gt;&lt;BR /&gt;them → (4) enter a &lt;STRONG&gt;Commit Message&lt;/STRONG&gt; (optional) → (5) click&lt;BR /&gt;&lt;STRONG&gt;Commit and Push.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_21-1757406944963.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311516i54CE4B28C4E61B44/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_21-1757406944963.png" alt="Nihal__Raj_21-1757406944963.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8.&lt;/STRONG&gt; Enter your &lt;STRONG&gt;GitHub account credentials (Username&lt;/STRONG&gt; and&lt;BR /&gt;&lt;STRONG&gt;Password/Token&lt;/STRONG&gt; generated in Stage 2 – Step 6). Tick &lt;STRONG&gt;Store in&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Secure Store&lt;/STRONG&gt; to save the credentials with your ABAP package&lt;BR /&gt;→ click &lt;STRONG&gt;OK&lt;/STRONG&gt; → in the &lt;STRONG&gt;Push Started dialog box,&lt;/STRONG&gt; click &lt;STRONG&gt;OK&lt;/STRONG&gt; again.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_20-1757406729582.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311510iA1FDA3E7D365FE0B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_20-1757406729582.png" alt="Nihal__Raj_20-1757406729582.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Successfully&lt;/STRONG&gt; Connected &lt;STRONG&gt;Eclipse ADT&lt;/STRONG&gt; with &lt;STRONG&gt;Github&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="arial black,avant garde"&gt;&lt;STRONG&gt;Benefits:-&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Version Control: &lt;/STRONG&gt;Track all changes efficiently, facilitating rollbacks and history audits.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Collaboration:&lt;/STRONG&gt; Enables multiple SAP developers to work together remotely using branches and pull requests.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Code Quality:&lt;/STRONG&gt; Supports code reviews and integration with AI tools like Copilot for BAP.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Learning and Documentation:&lt;/STRONG&gt; Provides a rich environment for reviewing, documenting and explaining code.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt; By connecting Eclipse ADT with GitHub, SAP ABAP developers again a robust, collaborative environment with modern version control and productivity features. Applying these steps accelerates development, improves code quality and equips teams to meet enterprise standards in ABAP project delivery.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/steps-to-connect-eclipse-adt-with-github/ba-p/14211833"/>
    <published>2025-09-15T08:25:53.672000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/installing-github-copilot-in-eclipse-adt/ba-p/14217834</id>
    <title>Installing GitHub Copilot in Eclipse ADT</title>
    <updated>2025-09-18T11:47:54.505000+02:00</updated>
    <author>
      <name>kunalchanda</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/890293</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760124292"&gt;Introduction&lt;/H2&gt;&lt;P&gt;GitHub Copilot is an AI coding assistant platform that helps us while writing code by suggesting lines or blocks of code &amp;amp; troubleshooting them. This guide walks you through installing &lt;STRONG&gt;GitHub Copilot&lt;/STRONG&gt; in &lt;STRONG&gt;Eclipse ADT&lt;/STRONG&gt; (ABAP Development Tools).&lt;/P&gt;&lt;H2 id="toc-hId-1563610787"&gt;Pre-requisites&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Eclipse IDE with ADT installed&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Existing Github account&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1367097282"&gt;Steps&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Open Eclipse IDE and navigate to: Help -&amp;nbsp;Eclipse Marketplace&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="kunalchanda_2-1757948909739.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314731iC87C2A938B413472/image-size/medium?v=v2&amp;amp;px=400" role="button" title="kunalchanda_2-1757948909739.png" alt="kunalchanda_2-1757948909739.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Search &amp;amp; Select GitHub Copilot then install it by following the installation prompts.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kunalchanda_4-1757949016026.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314737i074C5A96CEC35BC6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="kunalchanda_4-1757949016026.png" alt="kunalchanda_4-1757949016026.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Restart Eclipse&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;After restarting, Copilot is available in the menu bar. Sign in using Github account.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kunalchanda_5-1757949108733.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314738iEAFB2F9E7AA599AA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="kunalchanda_5-1757949108733.png" alt="kunalchanda_5-1757949108733.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1299666496"&gt;Using GitHub Copilot in Eclipse&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;U&gt;Code Suggestions:&lt;/U&gt;&amp;nbsp;Start typing your code. Copilot will automatically suggest completions. Press &lt;STRONG&gt;TAB&lt;/STRONG&gt; to accept a suggestion.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kunalchanda_7-1757949344991.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314743i7FF173DF5E78A8D2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="kunalchanda_7-1757949344991.png" alt="kunalchanda_7-1757949344991.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;Chat option:&lt;/U&gt;&amp;nbsp;Use the Open Chat option to communicate with Copilot. We can also select the context/object for which we're asking questions or resolving errors.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kunalchanda_8-1757949373300.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314745i34B0760A856F71DC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="kunalchanda_8-1757949373300.png" alt="kunalchanda_8-1757949373300.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-974070272"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;After using it for few cases of RAP, I feel it needs to be evolve further for ABAP specific developments.&amp;nbsp; On the other hand the VSCode copilot extension works better for CAP developments in case of code suggestions &amp;amp; troubleshooting.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/installing-github-copilot-in-eclipse-adt/ba-p/14217834"/>
    <published>2025-09-18T11:47:54.505000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/how-sap-s-abap-cloud-partner-reference-app-simplifies-multi-tenant-side-by/ba-p/14223705</id>
    <title>How SAP’s ABAP Cloud Partner Reference App Simplifies Multi-Tenant Side-by-Side Extensions on BTP</title>
    <updated>2025-09-22T11:54:22.811000+02:00</updated>
    <author>
      <name>murthy_v</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/343378</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;The SAP BTP ABAP environment continues to unlock powerful opportunities for partners and developers seeking to extend and integrate with SAP Cloud ERP - particularly SAP S/4HANA Cloud Public Edition, by enabling SaaS extension development, leveraging existing ABAP expertise, and delivering benefits such as harmonized user experience, built-in product standard compliance, and simplified lifecycle management and operations out of the box. To further support this process, SAP offers the open-source &lt;A href="https://github.com/SAP-samples/abap-partner-reference-application/" target="_blank" rel="noopener nofollow noreferrer"&gt;ABAP Partner Reference Application&lt;/A&gt;&amp;nbsp;as a best-practice resource.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A title="abap-partner-reference-application" href="https://github.com/SAP-samples/abap-partner-reference-application" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="V8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319012i341B56D90D20194E/image-size/large?v=v2&amp;amp;px=999" role="button" title="V8.png" alt="V8.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The &lt;A href="https://github.com/SAP-samples/abap-partner-reference-application/" target="_blank" rel="noopener nofollow noreferrer"&gt;ABAP Partner Reference Application&lt;/A&gt;&amp;nbsp;on&amp;nbsp;&lt;A href="https://github.com/SAP-samples/abap-partner-reference-application" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP-Samples Git repository&lt;/A&gt; demonstrates how to design, build, and operate&amp;nbsp;multi-tenant side-by-side applications&amp;nbsp;using ABAP Cloud practices while following SAP’s recommended development approaches. The&amp;nbsp;ABAP Partner Reference Application provides developers and technical architects with standard patterns, modular code, and documented guidance for building&amp;nbsp;robust, multi-tenant ABAP applications&amp;nbsp;on SAP BTP, fully integrated with SAP S/4HANA Cloud Public Edition. It guides partners on designing, deploying, and extending ABAP solutions. It provides a blueprint for building scalable, multi-tenant apps that extend and integrate with SAP S/4HANA Cloud Public Edition.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A title="abap-partner-reference-application" href="https://github.com/SAP-samples/abap-partner-reference-application" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317685i29507B55CC679964/image-size/large?v=v2&amp;amp;px=999" role="button" title="2.png" alt="2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What is the ABAP Partner Reference Application?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The ABAP Partner Reference Application (APRA) is a sample implementation that provides practical examples, such as the &lt;STRONG&gt;Music Festival Manager&lt;/STRONG&gt;. It shows partners how to:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Build extensions on&amp;nbsp;SAP BTP ABAP Cloud.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Integrate seamlessly with&amp;nbsp;SAP S/4HANA Cloud Public Edition.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Handle critical multi-tenant aspects such as&amp;nbsp;tenant provisioning, onboarding, and isolation.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Follow SAP’s&amp;nbsp;ABAP Cloud and Restful ABAP Programming Model (RAP)&amp;nbsp;guidelines.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;In short, it’s a real-world blueprint for partners who need a reference starting point.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A title="abap-partner-reference-application" href="https://github.com/SAP-samples/abap-partner-reference-application" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="1_1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317684i37540CB722475C03/image-size/large?v=v2&amp;amp;px=999" role="button" title="1_1.png" alt="1_1.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Capabilities Highlighted&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Multi-tenancy design:&amp;nbsp;APRA showcases how to build applications that serve multiple tenants securely while keeping data isolated.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Tenant lifecycle management:&amp;nbsp;Includes practical examples of provisioning and onboarding processes.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Integration patterns:&amp;nbsp;Demonstrates how ABAP applications can consume SAP S/4HANA Cloud Public Edition APIs side by side, extending core business logic without modification.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Best practices in ABAP Cloud:&amp;nbsp;Clean-core extensions, RAP-based services, and modular design patterns are applied throughout&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;A title="abap-partner-reference-application" href="https://github.com/SAP-samples/abap-partner-reference-application" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317702iE1C9B9D459AEF8C3/image-size/large?v=v2&amp;amp;px=999" role="button" title="3.png" alt="3.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Why It Matters for Partners&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For partners building SAP-certified solutions, alignment with ABAP Cloud principles is no longer optional. APRA offers more than just example code: it provides implementation guidance&amp;nbsp;to ensure solutions are cloud-ready, scalable, and compliant. By studying and adapting the repository, partners save time, reduce uncertainty, and can fast-track their certification and deployment processes.&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The repository demonstrates&amp;nbsp;and aligns with SAP clean-core architecture and RAP best practices, enabling maintainable, upgrade-safe solutions.&amp;nbsp;Along with modularization, helping partners build solutions that are scalable, maintainable, and compliant with SAP’s cloud-first best practices. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It provides&amp;nbsp;real-world samples&amp;nbsp;for rapid development of side-by-side extensions in the SAP BTP ABAP environment.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It demonstrates end-to-end flows: business object modelling, onboarding and provisioning, secure multi-tenancy, and SAP S/4HANA Cloud Public Edition API integration. It includes example business objects, tenant-specific onboarding logic, and detailed sample integrations with SAP S/4HANA Cloud Public Edition APIs, serving as ready-to-adapt templates for real-world enterprise scenarios.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Each step—from tenant lifecycle management to extending SAP S/4HANA Cloud Public Edition functionality using side-by-side applications—is implemented with guidance notes and sample ABAP artifacts, making cloud development approachable for teams at any skill level.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Multi-Tenancy Patterns:&amp;nbsp;Learn how to isolate data and processes by tenant, automate provisioning, and secure user access using SAP BTP role collections and dedicated onboarding flows.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Integration Points:&amp;nbsp;Discover how to consume core APIs, events, and data from SAP S/4HANA Cloud Public Edition while preserving ERP clean core, using recommended SAP BTP services for authentication, navigation, and extensibility.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;RAP and ABAP Cloud Usage:&amp;nbsp;Access sample RAP service definitions and back-end logic that illustrate SAP’s latest cloud-based application paradigms, making it straightforward to adopt modern development models.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Getting Started / How to Use the Repository&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The repository is publicly available on GitHub and welcomes exploration. Developers can:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/import-content-from-abapgit-repository-into-abap-environment" target="_blank" rel="noopener noreferrer"&gt;Import the Music Festival Manager application from your abapGit repository into your ABAP environment in ADT&lt;/A&gt;, browse the artifacts, and review the &lt;A href="https://github.com/SAP-samples/abap-partner-reference-application/blob/main/README.md" target="_blank" rel="noopener nofollow noreferrer"&gt;README&lt;/A&gt; for instructions on deployment and configuration to start with ready-to-run examples or tutorials.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Follow the incremental development guides in the main branch to build up your own ABAP partner app using the same best practices. Follow examples for multi-tenant design, onboarding, and integration with SAP S/4HANA Cloud Public Edition.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Analyze business object definitions, RAP service implementations, and onboarding/integration logic to adapt for your own solution. Use the sample reference application as templates for partner apps, adapting the RAP artifacts and onboarding logic for your business scenario and leverage the documented guidance to use APRA as a&amp;nbsp;starting template&amp;nbsp;for your own solutions.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317689i3F0530DC48CE3D27/image-size/large?v=v2&amp;amp;px=999" role="button" title="4.png" alt="4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;A title="abap-partner-reference-application" href="https://github.com/SAP-samples/abap-partner-reference-application" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317688i8322E35E9BF873E7/image-size/large?v=v2&amp;amp;px=999" role="button" title="4.png" alt="4.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Inside the Repository: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;A href="https://github.com/SAP-samples/abap-partner-reference-application/tree/main" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;Packages and Artifacts&lt;/STRONG&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The repository is organized to guide developers through building a&amp;nbsp;core ABAP application, then evolving it into a&amp;nbsp;multi-tenant solution.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Artifacts are grouped by application logic (business objects), onboarding flows, integration APIs, and service definitions that illustrate SAP’s recommended RAP approach.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The samples &lt;STRONG&gt;Music Festival Manager&lt;/STRONG&gt; and &lt;STRONG&gt;Poetry Slam Manager&lt;/STRONG&gt; demonstrate business object modeling, UI integration, and tenant isolation in real-world use cases.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;How the Repository Accelerates Partner Solutions&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Partners can reuse packages, study onboarding approaches, and adapt integration modules directly for their own certified offerings—streamlining time to market and improving solution quality.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Step-by-step documentation, real code, and sample data flows empower developers to master multi-tenant patterns and extend SAP Cloud systems with confidence.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The repository acts as a knowledge base and starter kit for enterprise ABAP cloud projects, bridging theory and practical implementation for SAP’s partner ecosystem.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;By exploring this repository, developers and architects gain hands-on experience with the foundations of multi-tenant architecture, SAP BTP-managed security, and SAP S/4HANA Cloud Public Edition integration—directly addressing the needs of modern cloud-native SAP applications.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For partners, the repository turns cloud-native theory into practice. Get hands on with SAP BTP ABAP Cloud, accelerate certified solution development, and leverage proven patterns for multi-tenant extensions—all with guided help from SAP’s own reference implementation.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/how-sap-s-abap-cloud-partner-reference-app-simplifies-multi-tenant-side-by/ba-p/14223705"/>
    <published>2025-09-22T11:54:22.811000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/using-mathematical-instead-of-artificial-intelligence-in-the-abap/ba-p/14215884</id>
    <title>Using mathematical instead of artificial intelligence in the ABAP environments for 2508</title>
    <updated>2025-09-22T13:26:15.367000+02:00</updated>
    <author>
      <name>kilian_kilger</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/204709</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760064865"&gt;1. Introduction&lt;/H2&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Do all intelligent ABAP apps use AI?&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Although using AI for all intelligent functionality is tempting, other techniques exist to gain insight. One of these is &lt;STRONG&gt;statistics&lt;/STRONG&gt;. In contrast to AI, statistics is a mathematically sound science that will not produce fake answers and hallucinations but merely hard facts. These hard facts can then be used for operational decisions. I will call this &lt;STRONG&gt;mathematical&lt;/STRONG&gt;, not &lt;STRONG&gt;artificial&lt;/STRONG&gt; &lt;STRONG&gt;intelligence&lt;/STRONG&gt;.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Of course, there are new technologies like&amp;nbsp;&lt;A title="BDC" href="https://www.sap.com/products/data-cloud.html?campaigncode=crm-yj25-btp-3097595&amp;amp;source=ppc-de-googleads--22741048455-185762215630-bdci_bdci-x-x-aam&amp;amp;gclsrc=aw.ds&amp;amp;gad_source=1&amp;amp;gad_campaignid=22741048455&amp;amp;gbraid=0AAAABAUXsVQrP-kl-sYE9i_KlxUkBhq9N&amp;amp;gclid=Cj0KCQjw58PGBhCkARIsADbDilzUwPog1hQ-p2jsuqAWCR5iN_Dx3xqF-gQU0J-1UivT94Vy7BAx0VQaAoITEALw_wcB" target="_blank" rel="noopener noreferrer"&gt;BDC&lt;/A&gt;&amp;nbsp; for data warehousing. However, having statistics available in your transactional ABAP applications might also be of great value, as many transactional decisions might be driven by a dataset already available in ABAP.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;However, some foundations must be built to integrate statistical functions directly into the ABAP language. This blog post outlines these foundations and covers the integration of some new mathematical functions into the ABAP language in the ABAP environments for 2508.&lt;BR /&gt;&lt;BR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;For a concrete example of applying these functions, see the following blog post, where these are used to compute random numbers or quantiles using a C1 released cloud API.&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266&lt;/A&gt;&lt;/P&gt;&lt;P&gt;The now integrated functions are also part of an agenda to bring more built-in Python or Microsoft Excel functions into ABAP. A business analyst is expected to prepare a functionality in an Excel workspace or a Python script. Later on, this can be integrated into an ABAP app.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt;&amp;nbsp;This is currently planned to be available on-premise and in the private cloud with the upcoming major SAP S/4HANA release in 2025. Please note that this plan is subject to change by SAP without prior notice.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1563551360"&gt;2. Let's talk about data types&lt;/H2&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;When discussing mathematical functions in ABAP, we have to talk about datatypes. For statistics, the computation must be fast. At the end, we will often calculate a percentage or some other number where only the first two decimal places are relevant.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Implementing the float data type functionality, which provides 64 bits of binary precision and can represent up to 17 decimal places, is generally sufficient for most applications. We have also developed functions that utilize the DECFLOAT34 data type, offering 128 bits of precision. This level of precision exceeds what is readily available in most other programming languages. Yet, it integrates well within the ABAP type system, and some users might benefit from 128 bits of precision or larger numbers. Often, it is more relevant to support higher exponents than more digits of precision.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H2 id="toc-hId-1367037855"&gt;3. Simple combinatoric functions: factorial( ) and binomial( )&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;The first two functions covered in this article are used for combinatorics. These are very basic and occur in a wide variety of settings. These are the factorial and binomial functions. Both take integer arguments and deliver a float or decfloat34 value. As factorials can be pretty large, the extended precision of decfloat34 is beneficial here.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Both functions return &lt;STRONG&gt;integers mathematically&lt;/STRONG&gt;, but in ABAP, they return F and DECFLOAT34 to support a wider range of input parameters.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H3 id="toc-hId-1299607069"&gt;a) Factorial&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Description:&lt;/STRONG&gt;&amp;nbsp;Describes the number of ways in which n items can be ordered. Written n!.&lt;/P&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;Good to know:&lt;/STRONG&gt; available in Microsoft Excel as FACT( )&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;This function appears in a wide variety of settings.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;So if we have Apple and Banana (two items), the factorial is also 2, as there are two possible orderings (Apple, Banana) and (Banana, Apple). For three items, Apple, Banana, and Orange, we have six orderings (Apple, Banana, Orange), (Apple, Orange, Banana), (Orange, Apple, Banana), (Orange, Banana, Apple), (Banana, Orange, Apple), (Banana, Apple, Orange).&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;The factorial has a simple formula:&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;n! = n*(n-1)*(n-2)*...*1&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;For the first position, we have n possibilities to choose an item, for the second position only n-1, and so on.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Factorials can be pretty large. For example:&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;50! = 30414093201713378043612608166064768844377641568960512000000000000&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;The ABAP kernel computes the factorials using a precomputed table for small values and the transcendental gamma function for large values. This is much faster than computing n * (n-1) * ... * 1.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Here is the ABAP example:&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;data large type decfloat34.
large = factorial( 1000 ).
cl_demo_output=&amp;gt;display( large ).&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;ABAP correctly outputs: 4.023872600770937735437024339230040E+2567.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H3 id="toc-hId-1103093564"&gt;&lt;STRONG&gt;b.)&amp;nbsp;&lt;/STRONG&gt;Binomial coefficient&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;: Describes the number of ways in which k items can be chosen out of a total set of n items.&amp;nbsp;Written&amp;nbsp;C(n, k).&lt;/P&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;Good to know&lt;/STRONG&gt;: available in Microsoft Excel as COMBIN( )&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;For example, C(5,1) equals 5, as there are five possibilities for choosing one item out of five. C(4,2) equals six, as if you have four items (1,2,3,4), you have the six possibilities {1,2}, {1,3}, {1,4}, {2,4}, {2,4}, and {3,4} to choose 2 items. Note here that the ordering is not considered, i.e., the binomial coefficient is not the number of ways to choose an ordered set of k items out of n items.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;There is a simple formula for the binomial coefficient as well:&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;C(n,k) = n! / ( k! * (n-k)! )&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Here is a simple ABAP program to use the function:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;data large type decfloat34.
large = binomial( n = 20000 k = 5000 ).
cl_demo_output=&amp;gt;display( large ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This correctly outputs:&amp;nbsp;&lt;SPAN&gt;1.566362779957802233492978893365436E+4882, as you have many options to choose from, 5000 items out of 20,000 items.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Note that the binomial coefficient is typically not computed by the above formula, but by the transcendental beta function. This is also done in ABAP.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-777497340"&gt;4. Basic transcendental functions: gamma( ) and log_gamma( )&lt;/H2&gt;&lt;P&gt;These basic transcendental functions appear everywhere in statistics, probability theory, and many other settings. If you don't know them, imagine them as similar to transcendental functions like sin(x), cos(x), and log(x).&lt;/P&gt;&lt;P&gt;The importance of the gamma function comes from the fact that it is defined on the whole range of real numbers (except -1, -2, ...) and that for positive integers n:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;n! = Gamma(n+1)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The gamma function is defined as an integral (for positive real numbers) as:&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 221px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314456i8F1F7182DA5B5780/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It is essential, as it defines the probability density of the &lt;STRONG&gt;gamma probability distribution&lt;/STRONG&gt; and some other probability distributions. Thus, it is often used in statistics.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As the gamma function grows rapidly, in practice, the function log_gamma(x) is often used, which is defined as:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;log_gamma(x) = log(abs(gamma(x))&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The computation of the log_gamma function is also more numerically stable.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Here is a picture of both functions:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 712px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313654i9E9FCDD77A85E0DB/image-dimensions/712x381?v=v2" width="712" height="381" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The usage in ABAP is simple:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; data gamma_value type decfloat34.
 data log_gamma_value type decfloat34.
 data test_log_gamma type decfloat34.
 
 gamma_value = gamma( - 1 / 2 ).
 log_gamma_value = log_gamma( - 1 / 2 ).
 test_log_gamma = log( abs( gamma( -1 / 2 ) ) ).
 
 assert log_gamma_value = test_log_gamma.
 
 cl_demo_output=&amp;gt;write( gamma_value ).
 cl_demo_output=&amp;gt;write( log_gamma_value ).
 cl_demo_output=&amp;gt;write( test_log_gamma ).
 cl_demo_output=&amp;gt;display( ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This correctly outputs:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;GAMMA_VALUE
-3.544907701811032054596334966682290

LOG_GAMMA_VALUE
1.265512123484645396488945797134706

TEST_LOG_GAMMA
1.265512123484645396488945797134706&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Good to know: &lt;/STRONG&gt;These&amp;nbsp;functions are available in Microsoft Excel as GAMMA( ) and GAMMALN( ).&lt;/P&gt;&lt;H2 id="toc-hId-580983835"&gt;&lt;STRONG&gt;5. Statistic functions: erf( ), erf_inv(), erfc(), erfc_inv()&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The &lt;STRONG&gt;error function&lt;/STRONG&gt; is another fundamental transcendental function. The importance of the error function erf(x) comes from the fact that it is related to the distribution function of the normal probability distribution.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314463i1DC884AC1A6FBCC7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The area marked in yellow below the blue curve (which draws the probability density function of the standard normal distribution) is given by:&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 205px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314466iF098B12381E4E6C8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The yellow area gives the probability that an event is smaller than or equal to some given value.&amp;nbsp;&lt;/P&gt;&lt;P&gt;An integral again defines the error function:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 184px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314595iF481F1715B634B06/image-size/medium?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Good to know:&lt;/STRONG&gt;&amp;nbsp;The error function is available in Microsoft Excel as ERF().&lt;/P&gt;&lt;P&gt;The graph of the function erf(x) is simple:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314469i3A803CB2802302FD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As you can see from the graph, the error function is invertible on the interval (-1,1). The inverse function is called erf_inv(x) and is used to compute the &lt;STRONG&gt;quantile&lt;/STRONG&gt; of the &lt;STRONG&gt;normal distribution&lt;/STRONG&gt;. The graph of the inverse function looks like so:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314619i260476E559F615EF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Good to know:&lt;/STRONG&gt;&amp;nbsp;The inverse error function is available in Microsoft Excel as ERFINV()&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In addition to the error and inverse error functions, there are the complementary error functions erfc(x) and inverse erfc_inv(x). The complementary error function is defined as:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 154px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314635i2442525ADCFC9A8F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Why is this function needed? There are multiple reasons this function is used very often, as it appears naturally in statistics, but is also needed numerically to compute probabilities very close to 1, where erf(x) loses precision (floating point numbers are very precise around 0 and not very precise around 1).&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Good to know:&lt;/STRONG&gt;&amp;nbsp;The complementary error function is called ERFC() in Microsoft Excel.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here is a basic usage in ABAP:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; final(erf) = erf( 1 / 2 ).
 final(erfc) = erfc( 1 / 2 ).
 final(erf_inv) = erf_inv( 1 / 2 ).

 cl_demo_output=&amp;gt;write( erf ).
 cl_demo_output=&amp;gt;write( erfc ).
 cl_demo_output=&amp;gt;write( erf_inv ).
 cl_demo_output=&amp;gt;display( ).&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-384470330"&gt;6. Conclusion&lt;/H2&gt;&lt;P&gt;This article introduced 8 new mathematical functions in ABAP for the ABAP environments for 2508. These can be applied in a business context in statistical applications. A good example for this can be found in the following blog post:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributio...&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-mathematical-instead-of-artificial-intelligence-in-the-abap/ba-p/14215884"/>
    <published>2025-09-22T13:26:15.367000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/5-things-you-didn-t-know-about-sap-joule-for-developers-plus-an-exciting/ba-p/14224703</id>
    <title>5 Things You Didn’t Know About SAP Joule for Developers — Plus an Exciting Update</title>
    <updated>2025-09-23T01:53:30.531000+02:00</updated>
    <author>
      <name>HaHoang</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1673814</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Artificial intelligence is reshaping how we work, and developers are among the first to feel the impact. SAP Joule for Developers is&amp;nbsp;a collection of AI capabilities in SAP Build and ABAP Environment designed to help developers build smarter, faster, and more intuitively — whether you’re streamlining repetitive coding tasks or creating complex integrations.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;And here’s the big news:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;The free promotion for SAP Joule for Developers has been extended.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;That means you now have even more time to explore Joule, experiment with projects, and see firsthand how it can transform your workflows — &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;all at no cost&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;We are hosting an engaging &lt;STRONG&gt;webinar&lt;/STRONG&gt; with demos, use cases and best practices on how to maximize value with Joule in SAP Build. Read till the end to find the registration link!&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Without further ado, here are five things you might not know about SAP Joule for Developers.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1890040104"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;1. It’s More Than Just an AI Assistant&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_0-1758584515204.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318220i883D09392294E961/image-size/medium?v=v2&amp;amp;px=400" role="button" title="HaHoang_0-1758584515204.png" alt="HaHoang_0-1758584515204.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Many developers see Joule as just a chatbot. But it’s far more powerful. Joule for Developers goes beyond simple answers — it integrates into your workflow, generates context-aware code suggestions, and automates repetitive tasks. Whether you’re building in &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, working in &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ABAP&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, or connecting with third-party services, Joule is designed to keep your productivity high.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Learn more about capabilities via our &lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/artificial-intelligence/joule-for-developers.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;webpage&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1693526599"&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;2. &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;It Speaks “Developer” Fluently&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_1-1758584515206.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318221iA41684708356D4FF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="HaHoang_1-1758584515206.png" alt="HaHoang_1-1758584515206.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Joule understands technical prompts and adapts its recommendations to your specific context. Describe what you want to create, and Joule can generate API calls, reusable code snippets, or even integration patterns tailored to your environment.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Explore a tutorial in ABAP &lt;/SPAN&gt;&lt;A href="https://github.com/SAP-samples/abap-platform-rap120" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1497013094"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;3. Built-In Security and Compliance Awareness&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;SAP Build—with SAP Joule for Developers embedded—is built on &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;enterprise-grade security&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. It adheres to SAP’s compliance standards, so your code and data are always protected. You can confidently experiment with AI in your workflows, backed by privacy, governance, and regulatory safeguards.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Read more about SAP’s approach to security and compliance in &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/build-service/build-service-guide/security" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Build&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;A href="https://www.sap.com/documents/2024/06/e0f9895d-c47e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Business Technology Platform&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1429582308"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;4. It Helps You Learn as You Build&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_2-1758584515206.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318222i12E602C33728DA19/image-size/medium?v=v2&amp;amp;px=400" role="button" title="HaHoang_2-1758584515206.png" alt="HaHoang_2-1758584515206.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Joule isn’t just about solutions — it’s about learning. As you code, Joule explains the &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;why&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; behind its suggestions. This helps developers discover new frameworks, understand best practices, and ramp up on unfamiliar technologies faster.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Think of it as a mentor who’s always available, providing guidance while letting you stay in the driver’s seat.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Try a &lt;/SPAN&gt;&lt;A href="https://discovery-center.cloud.sap/protected/index.html#/missiondetail/4441/4727/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;tutorial&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; on how to create CAP application in SAP Build.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1103986084"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;5. It Works Across Your Development Stack&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_3-1758584515207.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318223i82A8779797D32182/image-size/medium?v=v2&amp;amp;px=400" role="button" title="HaHoang_3-1758584515207.png" alt="HaHoang_3-1758584515207.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Joule isn’t limited to a single tool or environment. Whether you’re generating processes or building applications, SAP Joule for Developers can support you. This flexibility means you can bring AI assistance into the environments you already know — without having to change how you work.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Free Access to SAP Joule for Developers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Now is the best time&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;to explore, innovate, and see how Joule can transform the way you build — without worrying about cost.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Get started &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/unlock-sap-joule-for-developers-claim-your-free-access-today/ba-p/14183158" target="_blank"&gt;&lt;SPAN&gt;today&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":calendar:"&gt;📅&lt;/span&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Mark your calendar&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Join our upcoming &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build with Joule&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; webinar on &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;September 24th&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; to see live demos, best practices, and how to maximize the value of Joule in your projects. Register &lt;/SPAN&gt;&lt;A href="https://event.on24.com/eventRegistration/EventLobbyServlet?target=reg20.jsp&amp;amp;eventid=5051265&amp;amp;sessionid=1&amp;amp;key=A7AEB5FB1B797BB3D0785EA75BABB9C0&amp;amp;groupId=6301406&amp;amp;partnerref=multiregpage&amp;amp;sourcepage=register" rel="nofollow noopener noreferrer"&gt;&lt;SPAN&gt;here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/5-things-you-didn-t-know-about-sap-joule-for-developers-plus-an-exciting/ba-p/14224703"/>
    <published>2025-09-23T01:53:30.531000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-pre-create-the-packages-for-the-abap-flight-reference-scenario/ba-p/14227008</id>
    <title>How to pre-create the packages for the ABAP Flight Reference Scenario</title>
    <updated>2025-09-24T17:26:43.147000+02:00</updated>
    <author>
      <name>Andre_Fischer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/55</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1631957317"&gt;Introduction&lt;/H1&gt;&lt;P&gt;Several customers ran into an error when trying to import the&amp;nbsp;ABAP Flight Reference Scenario using the abapGit plugin as described in this question&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-q-a/abapgit-plug-in-to-import-the-abap-flight-reference-scenario-fails-quot/qaq-p/14215307" target="_blank"&gt;abapGit plug-in to import the ABAP Flight Referenc... - SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;As mentioned by a user in GitHub there is a workaround available by manually creating the packages before pulling the content of the &lt;A href="https://github.com/SAP-samples/abap-platform-refscen-flight/" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub repository of the ABAP Flight Reference Scenario&lt;/A&gt; .&lt;/P&gt;&lt;P&gt;Since this is a tedious and error-prone procedure I decided to provide a class in the Z-namespace that can be created in a package in the software component &lt;STRONG&gt;ZLOCAL&lt;/STRONG&gt; that creates all the packages which can be run by simply pressing &lt;STRONG&gt;F9&lt;/STRONG&gt;.&lt;/P&gt;&lt;H1 id="toc-hId-1435443812"&gt;How to section&lt;/H1&gt;&lt;OL&gt;&lt;LI&gt;Create a package, e.g.&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;ZCREATE_DMO_PACKAGES&lt;/STRONG&gt; with &lt;STRONG&gt;ZLOCAL&lt;/STRONG&gt; as its super package.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create a class&amp;nbsp;&lt;STRONG&gt;zcl_create_dmo_packages&lt;/STRONG&gt; in that package.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Replace the code of that class with the source code shown below.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Run the class via pressing &lt;STRONG&gt;F9&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H1 id="toc-hId-1238930307"&gt;Result&lt;/H1&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Andre_Fischer_0-1758727005923.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319523iC640B0978ABC0CA6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Andre_Fischer_0-1758727005923.png" alt="Andre_Fischer_0-1758727005923.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1042416802"&gt;Coding explained&lt;/H1&gt;&lt;P&gt;The class starts by retrieving the names of the packages, their super packages and their descriptions using method&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;get_package_information( )&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It also retrieves a transport that is needed for the software component &lt;STRONG&gt;/DMO/SAP&lt;/STRONG&gt; according to the settings.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For each package it is being checked if it already exists, so that the class can be run several times in case something goes wrong.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Using the boolean constant value&amp;nbsp;&lt;STRONG&gt;create_packages&lt;/STRONG&gt;&amp;nbsp;(which is set to &lt;STRONG&gt;abap_true&lt;/STRONG&gt;) it is managed whether the method&lt;STRONG&gt;&amp;nbsp;create_package_in_dmo_sap( )&lt;/STRONG&gt; is actually being called.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The creation of packages and the retrieval of information needed is done by using the XCO libraries that allow access to various functionalities in ABAPCloud. (&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/xco-library" target="_blank" rel="noopener noreferrer"&gt;XCO Library | SAP Help Portal&lt;/A&gt;)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-845903297"&gt;Sourcecode -&amp;nbsp;&lt;SPAN&gt;zcl_create_dmo_packages&lt;/SPAN&gt;&lt;/H1&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_create_dmo_packages DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_oo_adt_classrun .
  PROTECTED SECTION.
  PRIVATE SECTION.

    CONSTANTS : co_dmo_sap_package TYPE if_xco_cp_gen_devc_s_fo_proper=&amp;gt;tv_software_component VALUE '/DMO/SAP',
                test_string        TYPE string VALUE '',
                create_packages    TYPE abap_boolean VALUE abap_true.



    TYPES : BEGIN OF t_dmo_packages,
              package_name       TYPE sxco_package,
              super_package_name TYPE sxco_package,
              short_description  TYPE if_xco_cp_gen_devc_s_form=&amp;gt;tv_short_description,
            END OF t_dmo_packages.

    TYPES tt_dmo_packages TYPE STANDARD TABLE OF t_dmo_packages WITH DEFAULT KEY.

    DATA dmo_package TYPE t_dmo_packages.
    DATA dmo_packages TYPE tt_dmo_packages.
    DATA transport_request TYPE sxco_transport.


    METHODS create_package_in_dmo_sap IMPORTING
                                                i_transport          TYPE sxco_transport
                                                I_package_name       TYPE sxco_package
                                                i_super_package_name TYPE sxco_package
                                                i_short_description  TYPE if_xco_cp_gen_devc_s_form=&amp;gt;tv_short_description OPTIONAL
                                      EXPORTING findings             TYPE sxco_t_gen_o_findings
                                                exception_text       TYPE string.

    METHODS get_package_information RETURNING VALUE(r_dmo_packages) TYPE tt_dmo_packages.

    METHODS create_transport      RETURNING VALUE(lo_transport) TYPE sxco_transport.

    METHODS create_put_operation RETURNING VALUE(r_put_operation) TYPE REF TO if_xco_cp_gen_devc_d_o_put.


ENDCLASS.



CLASS zcl_create_dmo_packages IMPLEMENTATION.


  METHOD if_oo_adt_classrun~main.

    transport_request = create_transport( ).

    dmo_packages = get_package_information( ).

    LOOP AT dmo_packages INTO dmo_package.

      dmo_package-package_name = dmo_package-package_name &amp;amp;&amp;amp; test_string.

      "super package /dmo/sap must not be changed
      IF dmo_package-super_package_name &amp;lt;&amp;gt; co_dmo_sap_package.
        dmo_package-super_package_name = dmo_package-super_package_name &amp;amp;&amp;amp; test_string.
      ENDIF.

      DATA(dmo_flight_package) = xco_cp_abap_repository=&amp;gt;object-&amp;gt;devc-&amp;gt;for( dmo_package-package_name  ).
      out-&amp;gt;write( |check package { dmo_package-package_name }| ).

      IF dmo_flight_package-&amp;gt;exists(  ) = abap_true.
        out-&amp;gt;write( | package { dmo_package-package_name } does exist| ).
      ELSE.
        out-&amp;gt;write( | package { dmo_package-package_name } does not exist| ).
        IF create_packages = abap_true.
          out-&amp;gt;write( | create package { dmo_package-package_name } | ).

          create_package_in_dmo_sap(
            EXPORTING
             i_transport          = transport_request
             i_package_name       = dmo_package-package_name
             i_super_package_name = dmo_package-super_package_name
             i_short_description  = dmo_package-short_description
            IMPORTING
             findings             = DATA(findings)
             exception_text       = DATA(exception_text)
           ).
          IF findings IS NOT INITIAL.
            out-&amp;gt;write( 'Findings:' ).
            out-&amp;gt;write( findings ).
          ENDIF.
          IF exception_text IS NOT INITIAL.
            out-&amp;gt;write( |exception occured  { exception_text } | ).
          ENDIF.
        ELSE.
          out-&amp;gt;write( | demo mode | ).
        ENDIF.
      ENDIF.

    ENDLOOP.



  ENDMETHOD.

  METHOD create_package_in_dmo_sap.

    DATA put_operation TYPE REF TO if_xco_cp_gen_devc_d_o_put.
    put_operation = create_put_operation( ).

    DATA short_description TYPE if_xco_cp_gen_devc_s_form=&amp;gt;tv_short_description.
    IF i_short_description IS NOT INITIAL.
      short_description = i_short_description.
    ELSE.
      short_description = i_package_name.
    ENDIF.
    TRY.
        DATA(lo_specification) = put_operation-&amp;gt;add_object( i_package_name )-&amp;gt;create_form_specification( ).
        lo_specification-&amp;gt;set_short_description( short_description ).
        lo_specification-&amp;gt;properties-&amp;gt;set_super_package( i_super_package_name )-&amp;gt;set_software_component( co_dmo_sap_package ).
        DATA(lo_result) = put_operation-&amp;gt;execute( ).
        " handle findings
        DATA(lo_findings) = lo_result-&amp;gt;findings.
        findings = lo_findings-&amp;gt;get( ).
      CATCH cx_root INTO DATA(generation_exception).
        exception_text = generation_exception-&amp;gt;get_text(  ).
    ENDTRY.



  ENDMETHOD.

  METHOD get_package_information.
    r_dmo_packages = VALUE #(
    ( package_name = '/DMO/FLIGHT' super_package_name = '/DMO/SAP' short_description = 'Flight Reference Scenario' )
    ( package_name = '/DMO/FLIGHT_COLLDRAFT' super_package_name = '/DMO/FLIGHT' short_description =
    'Flight Reference Scenario: Collaborative Draft' )
    ( package_name = '/DMO/FLIGHT_DRAFT' super_package_name = '/DMO/FLIGHT' short_description = 'Flight Reference Scenario: Draft Guide'
    )
    ( package_name = '/DMO/FLIGHT_HIERARCHY' super_package_name = '/DMO/FLIGHT' short_description =
    'Hiearchy Guides' )
    ( package_name = '/DMO/FLIGHT_HIERARCHY_DRAFT' super_package_name = '/DMO/FLIGHT_HIERARCHY' short_description =
    'Hierarchy: Draft' )
    ( package_name = '/DMO/FLIGHT_HIERARCHY_DRAFT_D' super_package_name = '/DMO/FLIGHT_HIERARCHY_DRAFT' short_description =
    'Hierarchy: Draft: Data Generator' )
    ( package_name = '/DMO/FLIGHT_HIERARCHY_RO' super_package_name = '/DMO/FLIGHT_HIERARCHY' short_description =
    'Hierarchy: Read Only' )
    ( package_name = '/DMO/FLIGHT_HIERARCHY_RO_D' super_package_name = '/DMO/FLIGHT_HIERARCHY_RO' short_description =
    'Hierarchy: Read Only: Data Generator' )
    ( package_name = '/DMO/FLIGHT_LEGACY' super_package_name = '/DMO/FLIGHT' short_description =
    'Flight Reference Scenario: Legacy Objects' )
    ( package_name = '/DMO/FLIGHT_MANAGED' super_package_name = '/DMO/FLIGHT' short_description =
    'Flight Reference Scenario: TX managed E2E Guide' )
    ( package_name = '/DMO/FLIGHT_READONLY' super_package_name = '/DMO/FLIGHT' short_description =
    'Flight Reference Scenario: Read-Only E2E Guide' )
    ( package_name = '/DMO/FLIGHT_REUSE' super_package_name = '/DMO/FLIGHT' short_description = 'Flight Reference Scenario: Reused Entities'
    )
    ( package_name = '/DMO/FLIGHT_REUSE_AGENCY' super_package_name = '/DMO/FLIGHT_REUSE' short_description =
    'Flight Reference Scenario: Agency' )
    ( package_name = '/DMO/FLIGHT_REUSE_AGENCY_CNTRY' super_package_name = '/DMO/FLIGHT_REUSE_AGENCY' short_description =
    'Agency Extension: Country (Behavior Extensibility)' )
    ( package_name = '/DMO/FLIGHT_REUSE_AGENCY_DATGN' super_package_name = '/DMO/FLIGHT_REUSE_AGENCY' short_description =
    'Agency Extension: Data Generator' )
    ( package_name = '/DMO/FLIGHT_REUSE_AGENCY_REV' super_package_name = '/DMO/FLIGHT_REUSE_AGENCY' short_description =
    'Agency Extension: Review (Node Extensibility)' )
    ( package_name = '/DMO/FLIGHT_REUSE_AGENCY_REV_A' super_package_name = '/DMO/FLIGHT_REUSE_AGENCY_REV' short_description
    = 'Agency Extension: Review - Average' )
    ( package_name = '/DMO/FLIGHT_REUSE_AGENCY_REV_D' super_package_name = '/DMO/FLIGHT_REUSE_AGENCY_REV' short_description
    = 'Agency Extension: Derived Events' )
    ( package_name = '/DMO/FLIGHT_REUSE_AGENCY_REV_E' super_package_name = '/DMO/FLIGHT_REUSE_AGENCY_REV' short_description
    = 'Agency Extension: Events for Review' )
    ( package_name = '/DMO/FLIGHT_REUSE_AGENCY_SLOGN' super_package_name = '/DMO/FLIGHT_REUSE_AGENCY' short_description =
    'Agency Extension: Slogan (Field Extensibility)' )
    ( package_name = '/DMO/FLIGHT_REUSE_CARRIER' super_package_name = '/DMO/FLIGHT_REUSE' short_description =
    'Flight Reference Scenario: Carrier' )
    ( package_name = '/DMO/FLIGHT_REUSE_SUPPLEMENT' super_package_name = '/DMO/FLIGHT_REUSE' short_description =
    'Flight Reference Scenario: Supplement' )
    ( package_name = '/DMO/FLIGHT_UNMANAGED' super_package_name = '/DMO/FLIGHT' short_description =
    'Flight Reference Scenario: TX unmanaged E2E Guide' )
     ).
  ENDMETHOD.

  METHOD create_put_operation.
    DATA(environment) = xco_cp_generation=&amp;gt;environment-&amp;gt;dev_system( transport_request  )  .
    r_put_operation = environment-&amp;gt;for-devc-&amp;gt;create_put_operation( ).
  ENDMETHOD.
  METHOD create_transport.
    "create transport for /dmo/sap if needed or not (whether software component /DMO/SAP is of type 'K' or 'J')
    DATA(ls_package) = xco_cp_abap_repository=&amp;gt;object-&amp;gt;devc-&amp;gt;for( co_dmo_sap_package  ).
    IF ls_package-&amp;gt;read( )-property-record_object_changes = abap_true.
      DATA(lv_transport_layer) = ls_package-&amp;gt;read( )-property-transport_layer-&amp;gt;value.
      DATA(lv_transport_target) = ls_package-&amp;gt;read( )-property-transport_layer-&amp;gt;get_transport_target( )-&amp;gt;value.
      DATA(lo_transport_request) = xco_cp_cts=&amp;gt;transports-&amp;gt;workbench( lv_transport_target )-&amp;gt;create_request( '#Generated RAP110 tutorial transport request' ).
      lo_transport = lo_transport_request-&amp;gt;value.
    ENDIF.
  ENDMETHOD.


ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-pre-create-the-packages-for-the-abap-flight-reference-scenario/ba-p/14227008"/>
    <published>2025-09-24T17:26:43.147000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/how-to-track-data-changes-in-rap-and-change-log-mechanism-in-rap/ba-p/14215416</id>
    <title>How to Track Data Changes in RAP and Change Log Mechanism in RAP.</title>
    <updated>2025-09-26T08:48:03.447000+02:00</updated>
    <author>
      <name>Gireesh_pg1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451066</uri>
    </author>
    <content>&lt;P&gt;hi,&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A change log table alone can be used to track data modifications without storing full historical snapshots. The main table contains the active business data, while the change log table records only the metadata of each change, such as the key fields of the affected record, change type (insert, update, delete), user, and optionally the reason for change.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;During the RAP save sequence, determinations in the behavior implementation capture these details before the transaction is committed and insert them into the change log table. This approach provides a lightweight audit trail that allows you to track when and by whom changes were made, making it suitable for compliance monitoring, reporting, and troubleshooting, while avoiding the storage overhead of a shadow table that keeps the full data history.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Here we see some major key Advantages.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Lower Storage Requirements&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – Since it stores only metadata (keys, change type, timestamp, user, etc.) instead of full data snapshots, it uses significantly less database space than a shadow table.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Better Performance&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – Writing smaller log entries reduces the impact on transaction performance compared to saving entire records.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Simplified Design&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – Only one additional table is needed, making the data model and maintenance simpler.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Faster Reporting on Changes&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – The log contains concise, relevant details, making it easier to query and generate audit reports.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Regulatory Compliance&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – Still fulfills many compliance and audit requirements by showing who changed what and when.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step&lt;/SPAN&gt;&lt;SPAN class=""&gt;s to &lt;/SPAN&gt;&lt;SPAN class=""&gt;achiev&lt;/SPAN&gt;&lt;SPAN class=""&gt;ing&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt; the&lt;/SPAN&gt; &lt;SPAN class=""&gt;Track Change Log Mechanism in RAP&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I have create 2 database tables&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;For basic details&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Capturing the changes record table&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Gireesh_pg1_0-1757662408594.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313362i94A969EE06C11120/image-size/large?v=v2&amp;amp;px=999" role="button" title="Gireesh_pg1_0-1757662408594.png" alt="Gireesh_pg1_0-1757662408594.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Table 2.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Gireesh_pg1_1-1757662442048.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313363iEB69342A444CA806/image-size/large?v=v2&amp;amp;px=999" role="button" title="Gireesh_pg1_1-1757662442048.png" alt="Gireesh_pg1_1-1757662442048.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Step2.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We have to create root view&amp;nbsp; on top of the database table.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Gireesh_pg1_2-1757662471459.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313364i377D3E1E1E756337/image-size/large?v=v2&amp;amp;px=999" role="button" title="Gireesh_pg1_2-1757662471459.png" alt="Gireesh_pg1_2-1757662471459.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;And we &lt;/SPAN&gt;&lt;SPAN class=""&gt;have to&lt;/SPAN&gt;&lt;SPAN class=""&gt; create data &lt;/SPAN&gt;&lt;SPAN class=""&gt;definition&lt;/SPAN&gt;&lt;SPAN class=""&gt; for &lt;/SPAN&gt;&lt;SPAN class=""&gt;change&lt;/SPAN&gt; &lt;SPAN class=""&gt;log&lt;/SPAN&gt;&lt;SPAN class=""&gt; also.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Gireesh_pg1_3-1757662495876.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313365iDFD93FE134BA906B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Gireesh_pg1_3-1757662495876.png" alt="Gireesh_pg1_3-1757662495876.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Step 3.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;for the basic data definition we have create on metadata extension for front end display.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer:#CORE 

annotate entity zgiri_i_empl_details 

with  

{ 

@UI.facet: [  

{  

id: 'object', 

label: 'Basic Data', 

type: #IDENTIFICATION_REFERENCE, 

purpose: #STANDARD, 

position: 10 }] 

@UI.lineItem: [{ label: 'Id' , position: 10 }] 

@UI.identification: [{ label: 'Id' , position: 10 }] 

Id; 

@UI.lineItem: [{ label: 'Name' , position: 20 }] 

@UI.identification: [{ label: 'Name' , position: 20 }] 

Name; 

@UI.lineItem: [{ label: 'Department' , position: 30 }] 

@UI.identification : [{ label: 'Department' , position: 30 }] 

Department; 

@UI.lineItem: [{ label: 'CurrKey' , position: 40 }] 

@UI.identification : [{ label: 'CurrKey' , position: 40 }] 

CurrKey; 

@UI.lineItem: [{ label: 'Salary' , position: 50 }] 

@UI.identification : [{ label: 'Salary' , position: 50 }] 

Salary; 

@UI.lineItem: [{ label: 'CreatedBy' , position: 60 }] 

CreatedBy; 

@UI.lineItem: [{ label: 'CreatedAt' , position: 70 }] 

CreatedAt; 

@UI.lineItem: [{ label: 'ChangedBy' , position: 80 }] 

ChangedBy; 

@UI.lineItem: [{ label: 'ChangedAt' , position: 90 }] 

ChangedAt; 

} 

 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Step 4.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On top of the basic view we have to behavior definition.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_giri_i_empl_details unique; 

strict ( 2 ); 
define behavior for zgiri_i_empl_details //alias &amp;lt;alias_name&amp;gt; 

persistent table zgiri_t_emp_det 

lock master 

with additional save 

authorization master ( instance ) 

early numbering 

//etag master &amp;lt;field_name&amp;gt; 

{ 

create ( authorization : global ); 

update; 

delete; 

field ( readonly ) Id; 

mapping for zgiri_t_emp_det 

{ 

ChangedAt = changed_at; 

ChangedBy = changed_by; 

CreatedAt = created_at; 

CreatedBy = created_by; 

CurrKey = curr_key; 

Department = department; 

Id = id; 

Name = name; 

Salary = salary; 

} 

} 

 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;On &lt;/SPAN&gt;&lt;SPAN class=""&gt;top&lt;/SPAN&gt;&lt;SPAN class=""&gt; the consumption view &lt;/SPAN&gt;&lt;SPAN class=""&gt;i&lt;/SPAN&gt;&lt;SPAN class=""&gt; have &lt;/SPAN&gt;&lt;SPAN class=""&gt;create&lt;/SPAN&gt;&lt;SPAN class=""&gt; behavior definition for consumption view.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection; 

strict ( 2 ); 

define behavior for zgiri_c_empl //alias &amp;lt;alias_name&amp;gt; 

{ 

use create; 

use update; 

use delete; 

} 

 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Step 5.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On top the behavior definition we have to create service definition.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'service definition' 

define service Zgiri_rap_scn_ser { 

expose zgiri_i_empl_details; 

} 

 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Step 6.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On top the service definition we have to create&amp;nbsp; service binding.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Gireesh_pg1_0-1757662782709.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313370i00F7B4AC512F2B30/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Gireesh_pg1_0-1757662782709.png" alt="Gireesh_pg1_0-1757662782709.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Step 6.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I'm implementing logic in this class.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lsc_zgiri_i_empl_details DEFINITION INHERITING FROM cl_abap_behavior_saver. 

PROTECTED SECTION. 

METHODS save_modified REDEFINITION. 

ENDCLASS. 

CLASS lsc_zgiri_i_empl_details IMPLEMENTATION. 

METHOD save_modified. 

DATA lt_log TYPE STANDARD TABLE OF zgiri_t_ch_logs1. 

DATA lt_log1 TYPE STANDARD TABLE OF zgiri_t_ch_logs1. 

IF update-zgiri_i_empl_details iS NOT INITIAL. 

lt_log = CORRESPONDING #( update-zgiri_i_empl_details ). 

LOOP AT update-zgiri_i_empl_details ASSIGNING FIELD-SYMBOL(&amp;lt;ls_log_update&amp;gt;). 

ASSIGN lt_log[ id = &amp;lt;ls_log_update&amp;gt;-Id ] TO FIELD-SYMBOL(&amp;lt;ls_log_u&amp;gt;) . 

* / NAME UPDATE......................................... 

if &amp;lt;ls_log_update&amp;gt;-%control-Name = if_abap_behv=&amp;gt;mk-on. 

&amp;lt;ls_log_u&amp;gt;-name = &amp;lt;ls_log_update&amp;gt;-Name. 

TRY. 

&amp;lt;ls_log_u&amp;gt;-id = cl_system_uuid=&amp;gt;create_uuid_x16_static( ). 

CATCH cx_uuid_error. 

"handle exception 

ENDTRY. 

APPEND &amp;lt;ls_log_u&amp;gt; TO lt_log1. 
ENDIF. 
ENDLOOP. 
INSERT zgiri_t_ch_logs1 FROM TABLE _log1. 
ENDIF. 

ENDMETHOD. 

ENDCLASS. 
CLASS lhc_zgiri_i_empl_details DEFINITION INHERITING FROM cl_abap_behavior_handler. 

PUBLIC SECTION. 
PRIVATE SECTION. 

METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION 

IMPORTING keys REQUEST requested_authorizations FOR zgiri_i_empl_details RESULT result. 

METHODS get_global_authorizations FOR GLOBAL AUTHORIZATION 

IMPORTING REQUEST requested_authorizations FOR zgiri_i_empl_details RESULT result. 

METHODS earlynumbering_create FOR NUMBERING 

IMPORTING entities FOR CREATE zgiri_i_empl_details. 
ENDCLASS. 

CLASS lhc_zgiri_i_empl_details IMPLEMENTATION. 


METHOD get_instance_authorizations. 

ENDMETHOD. 

METHOD get_global_authorizations. 

ENDMETHOD. 

METHOD earlynumbering_create. 

DATA(lt_entities) = entities. 

DELETE lt_entities WHERE Id IS NOT INITIAL. 

TRY. 

cl_numberrange_runtime=&amp;gt;number_get( 

EXPORTING 

nr_range_nr = '01' 

object = '/DMO/TRV_M' 

quantity = CONV #( lines( lt_entities ) ) 

IMPORTING 

number = DATA(lv_latest_num) 

returncode = DATA(lv_code) 

returned_quantity = DATA(lv_qty) 

). 

CATCH cx_nr_object_not_found. 

CATCH cx_number_ranges INTO DATA(lo_error). 

LOOP AT lt_entities INTO DATA(ls_entities). 

APPEND VALUE #( %cid = ls_entities-%cid 

%key = ls_entities-%key ) 

TO failed-zgiri_i_empl_details. 

APPEND VALUE #( %cid = ls_entities-%cid 

%key = ls_entities-%key 

%msg = lo_error ) 

TO reported-zgiri_i_empl_details. 

ENDLOOP. 

EXIT. 

ENDTRY. 

ASSERT lv_qty = lines( lt_entities ). 

* DATA: lt_travel_tech_m TYPE TABLE FOR MAPPED EARLY yi_travel_tech_m, 

* ls_travel_tech_m LIKE LINE OF lt_travel_tech_m. 

DATA(lv_curr_num) = lv_latest_num - lv_qty. 

 

LOOP AT lt_entities INTO ls_entities. 

lv_curr_num = lv_curr_num + 1. 

APPEND VALUE #( %cid = ls_entities-%cid 

ID = lv_curr_num ) 

TO mapped-zgiri_i_empl_details. 

ENDLOOP. 
ENDMETHOD. 
ENDCLASS. 

 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The output.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Gireesh_pg1_1-1757669465661.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313423i102537BCAF3E31D6/image-size/large?v=v2&amp;amp;px=999" role="button" title="Gireesh_pg1_1-1757669465661.png" alt="Gireesh_pg1_1-1757669465661.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Im going to update the this value.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here the updated value&amp;nbsp; we can see.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Gireesh_pg1_2-1757669524158.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313424iFA48FC3D4F962F86/image-size/large?v=v2&amp;amp;px=999" role="button" title="Gireesh_pg1_2-1757669524158.png" alt="Gireesh_pg1_2-1757669524158.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;A&lt;/SPAN&gt;&lt;SPAN class=""&gt;n&lt;/SPAN&gt;&lt;SPAN class=""&gt;d&lt;/SPAN&gt;&lt;SPAN class=""&gt; we see in the &lt;/SPAN&gt;&lt;SPAN class=""&gt;chang&lt;/SPAN&gt;&lt;SPAN class=""&gt; log table.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Gireesh_pg1_3-1757669550993.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313425i6DA3883BF674AB5C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Gireesh_pg1_3-1757669550993.png" alt="Gireesh_pg1_3-1757669550993.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In conclusion, using a dedicated &lt;STRONG&gt;change log table&lt;/STRONG&gt; provides an efficient and practical way to track data modifications without the heavy storage cost of maintaining full historical snapshots. By recording only essential metadata such as key fields, change type, user, and timestamps, it creates a lightweight yet reliable audit trail. Combined with RAP determinations during the save sequence, this approach ensures that all changes are captured before commit, enabling transparency, compliance monitoring, and easier troubleshooting. Overall, it strikes the right balance between auditability and performance, making it a smart choice for scenarios where full data history is unnecessary.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;thank you.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/how-to-track-data-changes-in-rap-and-change-log-mechanism-in-rap/ba-p/14215416"/>
    <published>2025-09-26T08:48:03.447000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/aunits-steps-for-rap/ba-p/14222430</id>
    <title>AUnits steps for RAP</title>
    <updated>2025-09-26T08:51:38.675000+02:00</updated>
    <author>
      <name>Nihal__Raj</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2252976</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;BR /&gt;&lt;EM&gt;AUnits are unit tests written by ABAP developers to test each functionality of their code. In RAP, AUnits are used to test functionalities such as validations, determinations, actions, and CRUD operations etc. Your AUnits should aim for maximum coverage of your code. It is recommended to follow TDD(Test Driven Development), where you write the test cases first and then implement the logic. This ensures that the test cases are based on the actual requirements and are not influenced by the implementation.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Reference link for TDD:&amp;nbsp;&lt;/STRONG&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-development-tools-user-guide/test-driven-development-with-abap-unit" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/abap-cloud/abap-development-tools-user-guide/test-driven-development-with-abap-unit&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Basics of AUnits:&lt;BR /&gt;&lt;/STRONG&gt;Test classes can be either local or global. Unit tests should typically be implemented as local classes within the program object that is being tested. However, you can use global test classes to host reusable logic for unit tests across different programs. In Eclipse ADT, there is a separate environment for managing local test classes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_0-1758281914495.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316896i3E810BF7DF064C47/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_0-1758281914495.png" alt="Nihal__Raj_0-1758281914495.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Reference link&lt;/STRONG&gt;:&amp;nbsp;&lt;A href="https://learning.sap.com/learning-journeys/acquire-core-abap-skills/implementing-code-tests-with-abap-unit_b23c7a00-c2e8-406d-8969-b00db3f1fd87" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/acquire-core-abap-skills/implementing-code-tests-with-abap-unit_b23c7a00-c2e8-406d-8969-b00db3f1fd87&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Structure of test class:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_0-1758698995368.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319335iC3A06A8F6D15D7D5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_0-1758698995368.png" alt="Nihal__Raj_0-1758698995368.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*"* use this source file for your ABAP unit test classes
class ltc_zi_lfa1_2 DEFINITION FINAL for
  TESTING RISK LEVEL HARMLESS DURATION SHORT.
  PRIVATE SECTION.
  CLASS-DATA environment TYPE REF TO if_cds_test_environment.
  DATA td_zlfa TYPE STANDARD TABLE OF zlfa1 with empty key.
  DATA  act_results type STANDARD TABLE OF zi_lfa1_2 WITH EMPTY KEY.
  CLASS-METHODS class_setup RAISING cx_static_check.
  CLASS-METHODS class_teardown.
  METHODS setup RAISING cx_static_check.
  METHODS prepare_testdata.
  METHODS aunit_for_cds_method FOR TESTING RAISING cx_static_check.
  ENDCLASS.
  &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;For Testing:&lt;/STRONG&gt; The addition FOR TESTING is used to identify a test class. These are the classes that will be executed when you run ABAPUnit tests. I will explain further how AUnits are triggered and how to execute them.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Risk Level:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;CRITICAL: The test changes system settings or customizing data.&lt;/LI&gt;&lt;LI&gt;DANGEROUS: The test changes persistent data.&lt;/LI&gt;&lt;LI&gt;HARMLESS: The test does not change system settings or persistent data.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Duration:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SHORT: Execution time is imperceptible, expected to take only a few seconds.&lt;/LI&gt;&lt;LI&gt;MEDIUM: Execution time is noticeable, around a minute.&lt;/LI&gt;&lt;LI&gt;LONG: Execution time is very noticeable, taking more than a minute.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Methods in Test Classes:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Helper Methods: Helper methods are ordinary methods of the test class. They are not called by the ABAP Unit framework. You can use helper methods to structure the code of your test methods. For example, prepare_testdata is a helper method.&lt;/LI&gt;&lt;LI&gt;Test Methods: Test methods are defined with the addition FORTESTING after the method name. Each test method represents one test. The ABAP Unit framework performs this test by calling the corresponding test method. Test methods must not have any parameters. In the above example, aunit_for_cds_method is your test method.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Good Practices:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;It’s a good practice to have a separate method for each functionality, with no dependencies inside the method. Each method should be treated as a single test case.&lt;/LI&gt;&lt;LI&gt;Always include both positive and negative test cases.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Flow of test case:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_2-1758283483555.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316925i4D14BA272DF5A1E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_2-1758283483555.png" alt="Nihal__Raj_2-1758283483555.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;CLASS_SETUP&lt;/STRONG&gt;&lt;BR /&gt;This static method is executed once before the first test of the test class. Use this method for fixtures that are time-consuming to create and for which you are sure the settings will not be changed by any of the test methods. Example: Setting up a test double in the test environment.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SETUP&lt;/STRONG&gt;&lt;BR /&gt;This instance method is called before each test of the test class. Use this method for fixtures that you want to create fresh for every test case. Example: Creating an instance of the CUT (Class Under Test).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;TEARDOWN&lt;/STRONG&gt;&lt;BR /&gt;This instance method is called after each test of the test class. Use it to undo changes made in the SETUP method. It is especially important if SETUP modifies persistent data (such as system configuration, customizing, or master data). Example: Clearing test doubles so that each test starts with fresh data.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;CLASS_TEARDOWN&lt;/STRONG&gt;&lt;BR /&gt;This static method is executed once after the last test of the test class. Use it to clean up or destroy the test environment set up in CLASS_SETUP, once all tests are completed. Example: Tearing down the overall test environment.&lt;/P&gt;&lt;P&gt;To run ABAP units execute ABAP Unit Test. This will trigger the test class. If you run ABAP application it will not trigger test class.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Test double framework:&lt;/STRONG&gt;&lt;BR /&gt;As I mentioned earlier, your unit tests should check only the functionality(CUT – Code Under Test) that you have written the test case for. However, in real-world scenarios, each component is usually interlinked and not standalone.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is the issue?&lt;/STRONG&gt;&lt;BR /&gt;To explain this, let’s take an example. Suppose you are testing an instance authorization method. This method is dependent on an authorization object. If the AUTH-CHECK of the authorization object fails, the instance authorization method will also fail. This means that even if your instance authorization method is working correctly, the test could still fail due to its dependency. Ideally, the failure of a dependency should not cause your unit test to fail when you are testing the functionality of the CUT itself.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Examples of dependencies in RAP&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Instance and global authorizations: Dependency on authorization checks.&lt;/LI&gt;&lt;LI&gt;SAVE / SAVE_MODIFIED methods: Dependency on function modules or BAPIs.&lt;/LI&gt;&lt;LI&gt;Determinations: You might use EML of another BO, making your BO dependent.&lt;/LI&gt;&lt;LI&gt;Validations: Your CDS view could be a dependency; if the required record is not present in the CDS view, the validation might fail. And there are many more such cases.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Solution — Test Double Framework&lt;/STRONG&gt;&lt;BR /&gt;So, how do we overcome this? Instead of relying on dependencies that are beyond our control, we mock or stub these dependencies. This allows us to influence how they behave and interact during testing, thereby avoiding test case failures due to external dependencies. This approach is implemented using the Test Double Framework.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_4-1758284209300.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316928i44CD04D3C5CB1DC4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_4-1758284209300.png" alt="Nihal__Raj_4-1758284209300.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The main purpose of both mock and stub is to not to test from actual data but rather a fake data that we can configure. Because our test class will fail if its dependent on real time data as it will be different in different&lt;BR /&gt;environment.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;STUB:&lt;/STRONG&gt; Stubs just provide predefined response.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;MOCK:&lt;/STRONG&gt; You design how the interaction should be. Like if you provide this value this is how the output would be and also verify it.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;I will now discuss in detail how we write ABAP Unit tests with a simple example. &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Requirement:&lt;/STRONG&gt;&lt;BR /&gt;Write a positive test case to check the validation check_country, which should throw an exception if we pass a country code with more than2characters. Also, remove the dependency on the CDS view.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Steps:&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;Identify CUT and dependencies&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;Here, I have taken a validation method as an example for testing. The CUT(Code Under Test) is the validation method, and the dependency is the CDS view. So, I will use the STUB methodology to configure the response of the CDS view.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Creation of test class&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;Once you create the test class, you need to add it as a friend in the local handler class (since we are testing a validation). This is necessary because all the methods of the local handler class are inside the private section and cannot be accessed directly.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_0-1758702188232.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319382i0998B69F77895CF8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_0-1758702188232.png" alt="Nihal__Raj_0-1758702188232.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Inside the test class&lt;BR /&gt;I have already explained the use of SETUP, CLASS_SETUP, TEARDOWN, andCLASS_TEARDOWN earlier, so I will not repeat that here.&lt;BR /&gt;In this example, validate_check_country is our test method. I have added a test double for the CDS view, because the validation should be tested using the mock data we provide, not the actual data.&lt;BR /&gt;I create the mock data and insert it, so that the CDS view returns this data. Now, when we pass parameters to the validation, we can check if we get a value in reported, since we have provided a country code with 3 characters.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; This is just an example program. Typically, mocking, adding mock data, and different functionalities would be implemented in separate methods. It is not a good practice to combine everything into a single method. Each method should have only one responsibility. Here, I have combined them solely to showcase the concept.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nihal__Raj_0-1758701394247.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319377iA0CD976E87F9620D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nihal__Raj_0-1758701394247.png" alt="Nihal__Raj_0-1758701394247.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;class ltc_lfa1_validation IMPLEMENTATION.
    METHOD class_setup.
      cds_environment = cl_cds_test_environment=&amp;gt;create( i_for_entity = 'zi_lfa1_2' ).
     ENDMETHOD.
     METHOD setup.
       CREATE object cut for testing.
       cds_encironment-&amp;gt;clear_doubles( ).
       ENDMETHOD.
     method validate_check_country.
       data: lfa1_mock_data type STANDARD TABLE OF zlfa1.
       data(system_uuid) = cl_uuid_factory=&amp;gt;create_system_uuid( ).
       DATA(uuid_x16) = system_uuid-&amp;gt;create_uuid_x16( ).
       select * FROM zi_lfa1_2 into TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(lt_result).
         lfa1_ock_data = VALUE#( ( 
                                  Lifnr = uuid_x16 Name1 = 'Raj' Land1 = 'Ind' ) )
       cds_environment-&amp;gt;insert_test_data( i_data = lfa1_mock_data ).
         select * from zi_lfa1_2 into TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(lt_result).
           i_keys = value #( ( Lifnr = uuid_x16 ) ).
           cut-&amp;gt; check_country( exporting key = i_keys
                                changing failed = c_failed reported = c_reported ).
           cl_abap_unit_assert=&amp;gt;assert_not_initial( act = c_reported msg = 'failed' ).
       ENDMETHOD.
       method teardown.
         cds_environment-&amp;gt;destroy( ).
         ENDMETHOD.
         METHOD class_teardown.
           cds_environment-&amp;gt;clear_doubles( ).
           ENDMETHOD.
    ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion: &lt;/STRONG&gt;Writing ABAP unit test in RAP ensures that the underling business logic is robust and reliable.&amp;nbsp; Structured unit test not only improve code quality and reliability but also facilitate easier maintenance and refactoring.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/aunits-steps-for-rap/ba-p/14222430"/>
    <published>2025-09-26T08:51:38.675000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/foreign-entity-in-rap/ba-p/14227441</id>
    <title>Foreign entity in RAP</title>
    <updated>2025-09-29T09:05:47.440000+02:00</updated>
    <author>
      <name>Shyam4U</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1512208</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Description:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;A RAP BO entity which is not part of the BO composition tree for which it is defined. Defining a foreign entity in the behavior definition enables cross-BO message mapping between the two BOs.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Concepts:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;RAP foreign entity is a component of the BC-ESI-RAP RESTful ABAP Programming Model. It is a representation of an external entity, such as a web service, that can be used in an ABAP program. The foreign entity is defined in the ABAP program and can be used to access data from the external source.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Tips &amp;amp; Tricks:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;When defining a RAP foreign entity, it is important to ensure that all authentication information is correct. This will ensure that requests are sent securely and that responses are received correctly. Additionally, it is important to ensure that the URL of the external source is correct, as this will ensure that requests are sent to the correct location.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;How to use it:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;To use a RAP foreign entity, first define the entity in the ABAP program. This includes specifying the URL of the external source, as well as any authentication information that may be required. Once the entity is defined, it can be used to access data from the external source. This can be done using the RAP API, which provides methods for making requests and receiving responses from the external source.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_0-1758779361113.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319667i1BD7D26A3B6E12D5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_0-1758779361113.png" alt="Shyam4U_0-1758779361113.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;FONT face="arial black,avant garde"&gt;&lt;STRONG&gt;Example : &lt;/STRONG&gt;&lt;/FONT&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;"In our system, we have two distinct business entities: &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Inventory&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Sales Order&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. Although they are separate, they are fundamentally linked. We manage this connection by using the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;product ID&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; as the key identifier. This ensures that every time a sales order is created, the system automatically checks and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;deducts the correct quantity from the available stock&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; in the inventory. This process maintains accurate, real-time stock levels, which is critical for our operations."&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'inverty table' 
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #A 
@AbapCatalog.dataMaintenance : #ALLOWED 
define table zscn_t_inventory { 

key product_id : abap.char(10) not null; 
stock_level : abap.int4; 
product_name : abap.char(40); 
create_at : timestampl; 
last_chdate : timestampl; 

} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'INTERFACE VIEW INVERNTORY' 
@Metadata.ignorePropagatedAnnotations: true 
define root view entity ZSCN_i_INVENTORY as select from zscn_t_inventory 
{ 
key product_id as ProductId, 
stock_level as StockLevel, 
product_name as ProductName, 
create_at as CreateAt, 
last_chdate as LastChdate 
} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'INVENTORY CONSUMPATION VIEW' 
@Metadata.ignorePropagatedAnnotations: true 
@VDM.viewType: #TRANSACTIONAL 
define root view entity ZSCN_C_INVENTORY 
provider contract transactional_query 
as projection on ZSCN_i_INVENTORY 
{ 
@UI.facet: [{ type: #IDENTIFICATION_REFERENCE }] 

@UI.lineItem: [{ position: 10 , label: 'Product Id' }] 
@UI.identification:[{ position: 10 , label: 'Product Id' }] 
key ProductId, 
@UI.lineItem: [{ position: 20 , label: 'Stock Level' }] 
@UI.identification:[{ position: 20 , label: 'Stock Level' }] 
StockLevel, 
@UI.lineItem: [{ position: 30 , label: 'Product Name' }] 
@UI.identification:[{ position: 30 , label: 'Product Name' }] 
ProductName, 
@Semantics.systemDateTime.createdAt: true 
CreateAt, 
@Semantics.systemDateTime.lastChangedAt: true 
LastChdate 
} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_scn_i_inventory unique; 
strict ( 2 ); 
with draft; 

define behavior for ZSCN_i_INVENTORY //alias &amp;lt;alias_name&amp;gt; 
persistent table zscn_t_inventory 
lock master 
total etag LastChdate 
draft table zscn_t_invent_d 
authorization master ( instance ) 
late numbering 
//etag master &amp;lt;field_name&amp;gt; 
{ 
create ( authorization : global ); 
update; 
delete; 
field ( readonly ) ProductId; 

validation vali_Stock on save { create; update; } 

draft action Activate optimized ; 
draft action Discard ; 
draft action Edit ; 
draft action Resume ; 
draft determine action Prepare ; 

mapping for zscn_t_inventory { 
CreateAt = create_at ; 
LastChdate = last_chdate ; 
ProductId = product_id ; 
ProductName = product_name ; 
StockLevel = stock_level; 
} 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_1-1758779760747.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319670i23615557B62C460B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_1-1758779760747.png" alt="Shyam4U_1-1758779760747.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In our system, a key validation for inventory is to prevent the stock level from ever going into a negative value.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_0-1758780972739.png" style="width: 655px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319675i7F29A75ECBAD4A91/image-dimensions/655x264?v=v2" width="655" height="264" role="button" title="Shyam4U_0-1758780972739.png" alt="Shyam4U_0-1758780972739.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD vali_Stock.
    
LOOP AT keys INTO DATA(lv_key).

      READ ENTITY IN LOCAL MODE ZSCN_i_INVENTORY
       ALL FIELDS WITH VALUE #( (  %key = lv_key-%key ) )
      RESULT DATA(lt_result).

      CHECK lt_result IS NOT INITIAL.

      LOOP AT lt_result INTO DATA(lv_result).
        IF lv_result-StockLevel &amp;lt; 0 .
          APPEND VALUE #(  %tky = lv_result-%tky  ) TO failed-zscn_i_inventory.

          APPEND VALUE #(  %tky = lv_result-%tky
                 %msg = new_message_with_text( severity =
                 if_abap_behv_message=&amp;gt;severity-error
                 text = 'Stock value should not be negative value ' &amp;amp;&amp;amp; ' ' &amp;amp;&amp;amp; lv_result-StockLevel )
                 %element-stocklevel = if_abap_behv=&amp;gt;mk-on  ) TO reported-zscn_i_inventory .

        ENDIF.
      ENDLOOP.
    ENDLOOP.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_2-1758781361679.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319683i21B33569A1767987/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_2-1758781361679.png" alt="Shyam4U_2-1758781361679.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="arial black,avant garde"&gt;&lt;STRONG&gt;Sales order Entity&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="arial black,avant garde"&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'SALES ORDER' 
@AbapCatalog.enhancement.category : #EXTENSIBLE_ANY 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #A 
@AbapCatalog.dataMaintenance : #ALLOWED 
define table zscn_dt_salesord { 

key sales_order_id : abap.numc(10) not null; 
product_id : abap.char(10) not null; 
quantity : abap.numc(5); 
customer_id : abap.char(10); 
order_date : abap.dats; 
@Semantics.amount.currencyCode : 'zscn_dt_salesord.currency' 
total_amount : abap.curr(13,2); 
currency : abap.cuky; 
create_at : timestamp; 
last_changed : timestamp; 

} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'SALESORD CONSUMPATION VIEW' 
@Metadata.ignorePropagatedAnnotations: false 
define root view entity ZSCN_C_SALESORD 
provider contract transactional_query 
as projection on ZSCN_I_SALESORD 
{ 
@UI.facet: [{ type: #IDENTIFICATION_REFERENCE }] 

@UI.lineItem: [{ position: 10 , label: 'Sales Order Id' }] 
@UI.identification:[{ position: 10 , label: 'Sales Order Id' }] 
key SalesOrderId, 
@UI.lineItem: [{ position: 20 , label: 'Product Id' }] 
@UI.identification:[{ position: 20 , label: 'Product Id' }] 
@Consumption.valueHelpDefinition: [{ 
entity: { name: 'ZSCN_C_INVENTORY', element: 'ProductId' } }] 
ProductId, 
@UI.lineItem: [{ position: 30 , label: 'Quantity' }] 
@UI.identification:[{ position: 30 , label: 'Quantity' }] 
Quantity, 
@UI.lineItem: [{ position: 40 , label: 'Customer Id' }] 
@UI.identification:[{ position: 40 , label: 'Customer Id' }] 
CustomerId, 
@UI.lineItem: [{ position: 50 , label: 'Order Date' }] 
@UI.identification:[{ position: 50 , label: 'Order Date' }] 
OrderDate, 
@UI.lineItem: [{ position: 60 , label: 'Total Amount' }] 
@UI.identification:[{ position: 60 , label: 'Total Amount' }] 
TotalAmount, 
Currency, 
@Semantics.systemDateTime.createdAt: true 
CreateAt, 
@Semantics.systemDateTime.lastChangedAt: true 
LastChanged 

} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_scn_i_salesord unique; 
strict ( 2 ); 
with draft; 

//foreign entity Zscn_i_inventory alias _inventory ; 
define behavior for ZSCN_I_SALESORD //alias &amp;lt;alias_name&amp;gt; 
persistent table zscn_dt_salesord 
lock master 
total etag LastChanged 
draft table zscn_dt_salord_d 
authorization master ( instance ) 
early numbering 
//etag master &amp;lt;field_name&amp;gt; 
{ 

create ( authorization : global ); 
update; 
delete; 
field ( readonly ) SalesOrderId; 

validation valid_ProductId on save { create; update; } 
determination stock_upadte on save { field Quantity; } 
 
draft action Activate optimized ; 
draft action Discard ; 
draft action Edit ; 
draft action Resume ; 
draft determine action Prepare ; 

mapping for zscn_dt_salesord 
{ 
CreateAt = create_at; 
Currency = currency; 
CustomerId = customer_id; 
LastChanged = last_changed; 
OrderDate = order_date;
ProductId = product_id; 
SalesOrderId = sales_order_id; 
Quantity = quantity; 
TotalAmount = total_amount; 

} 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;without the foreign entity &lt;/SPAN&gt;&lt;SPAN class=""&gt;Zscn_i_inventory&lt;/SPAN&gt; &lt;SPAN class=""&gt;syntax ,&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp; behavior definition of the ZSCN_I_SALESORD it only holding the structure of ZSCN_I_SALESORD it &lt;/SPAN&gt;&lt;SPAN class=""&gt;doesn't&lt;/SPAN&gt;&lt;SPAN class=""&gt; hold the structure &lt;/SPAN&gt;&lt;SPAN class=""&gt;Zscn_i_inventory&lt;/SPAN&gt;&lt;SPAN class=""&gt; .&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_3-1758782312689.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319693i04E76CF2ACE2702F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_3-1758782312689.png" alt="Shyam4U_3-1758782312689.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_4-1758782320070.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319694iBE9FAD22C19ED3EF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_4-1758782320070.png" alt="Shyam4U_4-1758782320070.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Due to the separate entity definitions, errors from an inventory stock update cannot be directly propagated to the sales order user interface. In Failed and &lt;/SPAN&gt;&lt;SPAN class=""&gt;Reported structure will be miss &lt;/SPAN&gt;&lt;SPAN class=""&gt;match. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;T&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;o propagate &lt;/SPAN&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;SPAN class=""&gt; we use of foreign entity syntax&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;uncomment the&amp;nbsp;//foreign entity Zscn_i_inventory alias _inventory ;&amp;nbsp; in Behavior definition of&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Zscn_i_salesord .&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_0-1758782990181.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319700i976D6F6DBC5BC8E1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_0-1758782990181.png" alt="Shyam4U_0-1758782990181.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After adding the Foreign entity Zscn_i_inventory &amp;nbsp;alies _inventory ; &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We can see the change in the entity Zscn_i_salesord structure .&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_1-1758783042974.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319701i23555758241BE272/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_1-1758783042974.png" alt="Shyam4U_1-1758783042974.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_2-1758783077463.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319702i7ED69A661F19E1EF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_2-1758783077463.png" alt="Shyam4U_2-1758783077463.png" /&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_3-1758783109372.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319703iBBF8EBD3793DA2F3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_3-1758783109372.png" alt="Shyam4U_3-1758783109372.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_4-1758783178499.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319704iD42E5E0BC1A228ED/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_4-1758783178499.png" alt="Shyam4U_4-1758783178499.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Using the Determination we are update the stock of&amp;nbsp;the inventory table based on the Product id in Behavior definition implementation class .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A critical validation has been implemented: when a sales order is created, if the requested quantity is greater than the available stock level, an error is raised in the inventory business logic. This error is then propagated to the sales order entity, making it visible on the sales order screen.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD stock_upadte. 

LOOP AT keys INTO DATA(lv_key). 

READ ENTITY IN LOCAL MODE zscn_i_salesord ALL FIELDS WITH 
VALUE #( ( %key = lv_key-%key ) ) 
RESULT DATA(lt_result). 

CHECK lt_result IS NOT INITIAL. 

LOOP AT lt_result INTO DATA(lv_result). 
 
READ ENTITY ZSCN_i_INVENTORY 
ALL FIELDS WITH VALUE #( ( ProductId = lv_result-ProductId ) ) 
RESULT DATA(lt_result_inventory). 

LOOP AT lt_result_inventory INTO DATA(lv_inventory). 

 DATA(lv_stock) = CONV i( lv_inventory-StockLevel - lv_result-Quantity ). 

MODIFY ENTITY ZSCN_i_INVENTORY UPDATE FIELDS ( StockLevel ) 
WITH VALUE #( ( %key-ProductId = lv_inventory-%key-ProductId 
StockLevel = lv_stock ) ) REPORTED DATA(ltreported). 

if ltreported is not INITIAL. 
 
DATA: lt_dummy LIKE reported-_inventory. 
lt_dummy = CORRESPONDING #( ltreported-zscn_i_inventory ). 

APPEND LINES OF lt_dummy TO reported-_inventory.  

endif. 
      ENDLOOP. 
   ENDLOOP. 
ENDLOOP. 

ENDMETHOD. &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In &lt;/SPAN&gt;&lt;SPAN class=""&gt;above&lt;/SPAN&gt;&lt;SPAN class=""&gt; code &lt;/SPAN&gt;&lt;SPAN class=""&gt;I&lt;/SPAN&gt;&lt;SPAN class=""&gt; am using &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;CORRESPONDING #( &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ltreported&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;zscn_i_inventory&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ). &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;because &lt;/SPAN&gt;&lt;SPAN class=""&gt;of while&lt;/SPAN&gt; &lt;SPAN class=""&gt;using&lt;/SPAN&gt;&lt;SPAN class=""&gt; the EML syntax the report will be early but inside the Behavior &lt;/SPAN&gt;&lt;SPAN class=""&gt;definition it&lt;/SPAN&gt;&lt;SPAN class=""&gt; will be late &lt;/SPAN&gt;&lt;SPAN class=""&gt;structure.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_5-1758783700742.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319709i8DE267E217225D43/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_5-1758783700742.png" alt="Shyam4U_5-1758783700742.png" /&gt;&lt;/span&gt;&amp;nbsp; &lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_6-1758783731326.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319710i291685CEEACF10B0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_6-1758783731326.png" alt="Shyam4U_6-1758783731326.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In inventory entity this are the possible product we have in that &lt;/SPAN&gt;&lt;SPAN class=""&gt;i&lt;/SPAN&gt;&lt;SPAN class=""&gt; will &lt;/SPAN&gt;&lt;SPAN class=""&gt;chose&lt;/SPAN&gt;&lt;SPAN class=""&gt; Titan watch&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_0-1758784285024.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319716i82C35938198C8543/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_0-1758784285024.png" alt="Shyam4U_0-1758784285024.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;When creating a sales order for a Titan watch, if the requested quantity of 50 exceeds the available stock of 40, the system will prevent the transaction and display an error.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_1-1758784335793.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319717i0D9C69770EC165AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_1-1758784335793.png" alt="Shyam4U_1-1758784335793.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The error which is from the inventory entity by using the foreign entity concept we are propagating the error message of &lt;/SPAN&gt;&lt;SPAN class=""&gt;inventory in&lt;/SPAN&gt;&lt;SPAN class=""&gt; sales order entity.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_2-1758784368449.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319718i9251943C19615F88/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_2-1758784368449.png" alt="Shyam4U_2-1758784368449.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Related Information:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;For more information on using RAP foreign entities, please refer to the SAP Help documentation on BC-ESI-RAP RESTful ABAP Programming Model. Additionally, there are many tutorials available online which provide step-by-step instructions on how to use RAP foreign entities in an ABAP program.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thanks for &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.erplingo.com/sap-glossary/en/bc-esi-rap/rap-foreign-entity" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;What is RAP foreign entity in SAP BC-ESI-RAP? Definition &amp;amp; Tips&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/doc/abapdocu_cp_index_htm/CLOUD/en-US/index.htm?file=abenbdl_foreign.htm" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://help.sap.com/doc/abapdocu_cp_index_htm/CLOUD/en-US/index.htm?file=abenbdl_foreign.htm&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/foreign-entity-in-rap/ba-p/14227441"/>
    <published>2025-09-29T09:05:47.440000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/customer-amp-partner-roundtable-for-sap-btp-abap-environment-28/ba-p/14231467</id>
    <title>Customer &amp; Partner Roundtable for SAP BTP ABAP Environment #28</title>
    <updated>2025-09-30T11:14:17.098000+02:00</updated>
    <author>
      <name>iwona_hahn</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4326</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1860394371" id="toc-hId-1890871559"&gt;&lt;STRONG&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;The call for contributions for one of the upcoming roundtables is open!&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;If you want to show a demo or share a use case scenario for SAP BTP ABAP Environment, send us an&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="mailto:sap_btp_abap_environment@sap.com" target="_blank" rel="noopener nofollow noreferrer"&gt;email&lt;/A&gt;&amp;nbsp;and we will get back to you.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1534798147" id="toc-hId-1565275335"&gt;Introduction&lt;/H2&gt;&lt;DIV&gt;&lt;SPAN class=""&gt;A&lt;/SPAN&gt;&lt;SPAN class=""&gt;s&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform/abap/environment.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;SAP&amp;nbsp;BTP&amp;nbsp;ABAP&amp;nbsp;environment (aka Steampunk)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/A&gt;and ABAP Cloud&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;became&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;more popular&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;inside and outside of SAP, there is a high demand for rolling out the latest product news and updates, asking questions, and showing demos.&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;You can find the slides presented, recordings, and further references from the previous roundtables in this&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://github.com/iwonahahn/SAP-BTP-ABAP-Environment-Roundtable/tree/main" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub repository&lt;/A&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iwona_hahn_0-1751374366410.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281320iF5290A011527C9B9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="iwona_hahn_0-1751374366410.jpeg" alt="iwona_hahn_0-1751374366410.jpeg" /&gt;&lt;/span&gt;&lt;H2 id="toc-hId-1338284642" id="toc-hId-1368761830"&gt;Meeting Information&lt;BR /&gt;&lt;BR /&gt;&lt;/H2&gt;&lt;STRONG&gt;When:&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;October 30&lt;/SPAN&gt;&lt;/STRONG&gt;, 2:00 - 3:00 PM CEST&amp;nbsp; – &lt;A href="https://sap-se.zoom.us/meeting/register/BNTQg36rTgWstLMzArws0g" target="_blank" rel="noopener nofollow noreferrer"&gt;Zoom Meeting&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(&lt;STRONG&gt;please register&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in advance)&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Who:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;All interested&amp;nbsp;&lt;STRONG&gt;customers, partners,&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;stakeholders&lt;/STRONG&gt;&amp;nbsp;are invited to join this roundtable&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BTP ABAP team&lt;/STRONG&gt;:&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/4296" target="_blank"&gt;Frank Jentsch&lt;/A&gt;&amp;nbsp;&lt;SPAN class=""&gt;(Product Lead for SAP BTP ABAP&amp;nbsp;Environment)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/4326" target="_self"&gt;&lt;SPAN class=""&gt;Iwona Hahn&lt;/SPAN&gt;&lt;/A&gt;&amp;nbsp;&lt;SPAN class=""&gt;(Product Management)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;Jan Ole Skirke (Development Expert)&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Preliminary Agenda:&lt;/STRONG&gt;&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;Product update for SAP BTP ABAP Environment&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Downtime-optimized hotfix collection updates for SAP BTP ABAP Environment &lt;STRONG&gt;including demo&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Q&amp;amp;A&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;SPAN&gt;Looking forward to meeting you!&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;A href="https://sap-se.zoom.us/meeting/register/BNTQg36rTgWstLMzArws0g" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iwona_hahn_1-1751374366424.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281321i39537B5D388BE6C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="iwona_hahn_1-1751374366424.png" alt="iwona_hahn_1-1751374366424.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;Check out our&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://pages.community.sap.com/topics/btp-abap-environment" target="_blank" rel="noopener noreferrer"&gt;SAP Business Technology ABAP Environment&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;page in SAP Community&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;for&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;product&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;updates&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;and&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;upcoming events.&lt;/SPAN&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/customer-amp-partner-roundtable-for-sap-btp-abap-environment-28/ba-p/14231467"/>
    <published>2025-09-30T11:14:17.098000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-cloud-blog-posts/collective-search-help-using-abstract-entity-in-rap/ba-p/14228696</id>
    <title>Collective Search Help Using Abstract Entity in RAP</title>
    <updated>2025-10-03T11:51:37.840000+02:00</updated>
    <author>
      <name>sanjay22</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1535416</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Collective Value Help with Abstract Entity in SAP RAP&lt;/SPAN&gt;&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;SPAN class=""&gt; you can define a Collective Search Help&amp;nbsp;that combines multiple elementary &lt;/SPAN&gt;&lt;SPAN class=""&gt;search&lt;/SPAN&gt;&lt;SPAN class=""&gt; helps. This allows users to choose between different search paths and fetch values from various sources in a single dialog. The same concept is available in SAP Fiori through a Collective Value Help&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;It is implemented using an Abstract &lt;/SPAN&gt;&lt;SPAN class=""&gt;Entity that&lt;/SPAN&gt;&lt;SPAN class=""&gt; aggregates multiple elementary value helps and defines potential field mappings&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;An Abstract Entity does not hold data. Instead, it acts as a container for the Collective Search Help. This means it only groups together multiple elementary value helps and defines how they are mapped, without storing any business data itself.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The Collective Value Help shall be annotated with &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;@ObjectModel.collectiveValueHelp.for.element&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; pointing to the field for which the collective value help is defined.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The referenced field must be assigned at least one elementary value help using the annotation &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;@Consumption.valueHelpDefinition.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;This setup ensures that your Collective Value Help aggregates multiple search options seamlessly for end-users.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Only specific keywords are allowed in a collective value help:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Entity.name&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Entity. Element&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;additional Binding local Element&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;additional Binding. Element qualifier&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Qualifier&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Create a&amp;nbsp;Abstract Entity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abstract entity'
@ObjectModel.supportedCapabilities: [ #COLLECTIVE_VALUE_HELP ]
@ObjectModel.collectiveValueHelp.for.element: 'Country'
define abstract entity ZSM_ABSTRACT_CDS_ENTITY

{
  @Consumption.valueHelpDefinition: [
  {
       entity: { name: 'I_Country' },
       label: 'Search by Country'
  },
   {
      entity: {
      name: 'I_RegionVH',
      element: 'Country'
  },
  additionalBinding: [{ localElement: 'Region', element: 'Region' }],
  label   : 'Search by Region',
  qualifier: 'Regionsearch'
   }
   ]
  Country : land1;
  Region  : regio;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_0-1758879930864.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320249i89C882018112B8B7/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_0-1758879930864.png" alt="sanjay22_0-1758879930864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;@ObjectModel.CollectiveValueHelp.for.element &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;→&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Specifies the field (Country) for which the collective value help is defined.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;The Abstract Entity (&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;zsm_abstract_cds_entity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;) &amp;nbsp;acts as a container, not holding data itself. acts as a Consumption value Help Definition search paths Defines multiple Search by Country (default value help) (alternative path with additional Search by Region binding to Region.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;@&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Consumption.valueHelpDefintion &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;→ Defines multiple search paths :&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Search by Country( default Value Help )&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Search by Region( Alternate path with additional binding to Region )&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create an Interface View&lt;/SPAN&gt;&lt;SPAN class=""&gt; on Database Table&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_0-1758880109210.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320250i35C6CA50B680760A/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_0-1758880109210.png" alt="sanjay22_0-1758880109210.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Assign a Value Help for the Country field inside a &lt;/SPAN&gt;&lt;SPAN class=""&gt;Metadata Extension&lt;/SPAN&gt;&lt;SPAN class=""&gt; CDS.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_1-1758880183958.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320251iCD87357B0371C953/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_1-1758880183958.png" alt="sanjay22_1-1758880183958.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Here Country field uses Collective search &lt;/SPAN&gt;&lt;SPAN class=""&gt;help( ZSM&lt;/SPAN&gt;&lt;SPAN class=""&gt;_I_&lt;/SPAN&gt;&lt;SPAN class=""&gt;TRAVEL) &lt;/SPAN&gt;&lt;SPAN class=""&gt;with&lt;/SPAN&gt;&lt;SPAN class=""&gt; binding to &lt;/SPAN&gt;&lt;SPAN class=""&gt;Region&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Behavior Definition for the above Interface View.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_2-1758880250069.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320252i495BFA8BE3403846/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_2-1758880250069.png" alt="sanjay22_2-1758880250069.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Projection View for the Above Interface view&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_0-1758880409200.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320255iBBBDF9FB40C44CFE/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_0-1758880409200.png" alt="sanjay22_0-1758880409200.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Behavior Definition for the Interface View&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_1-1758880499246.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320256i0DAD0BA5C278B5F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_1-1758880499246.png" alt="sanjay22_1-1758880499246.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Service Binding &lt;/SPAN&gt;&lt;SPAN class=""&gt;( OData&lt;/SPAN&gt;&lt;SPAN class=""&gt; – V&lt;/SPAN&gt;&lt;SPAN class=""&gt;4 )&lt;/SPAN&gt;&lt;SPAN class=""&gt; to expose the Entity &lt;/SPAN&gt;&lt;SPAN class=""&gt;( ZSM&lt;/SPAN&gt;&lt;SPAN class=""&gt;_C_&lt;/SPAN&gt;&lt;SPAN class=""&gt;TRAVEL )&lt;/SPAN&gt; &lt;SPAN class=""&gt;to the front end.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_2-1758880554639.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320257i45126292733C4314/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_2-1758880554639.png" alt="sanjay22_2-1758880554639.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;F4 for Country Field – Search by Country&lt;/SPAN&gt;&lt;SPAN class=""&gt;, Search by region two value help screen.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_3-1758880593273.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320258i131D140173B03D26/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_3-1758880593273.png" alt="sanjay22_3-1758880593273.png" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-cloud-blog-posts/collective-search-help-using-abstract-entity-in-rap/ba-p/14228696"/>
    <published>2025-10-03T11:51:37.840000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-cloud-blog-posts/validation-in-draft-with-state-messages-in-rap/ba-p/14228996</id>
    <title>Validation in Draft with State Messages in RAP</title>
    <updated>2025-10-03T16:34:11.013000+02:00</updated>
    <author>
      <name>harsh_raj1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/152044</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;When we build applications using the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ABAP RESTful Application Programming Model (RAP)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, one of the big advantages is the ability to work with &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;draft-enabled business objects&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. Draft handling lets users edit data, save it temporarily, and only activate it when they’re ready.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;But here’s the catch: even in draft mode, we can’t allow &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;just anything&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; to be saved. Business rules still need to be checked. This is where &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;validations with state messages&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; come in. They ensure data quality while giving users clear, contextual feedback right inside the Fiori UI.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this post, I’ll Walk you through how to set up such validations in RAP.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Why do we need validations in draft?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We need validation in a draft&amp;nbsp;to maintain data integrity and consistency throughout the business process by identifying inconsistencies early, providing immediate feedback to the user, and ensuring that data meets business requirements before it becomes active, thereby preventing errors and improving the overall reliability of the system.&amp;nbsp;&lt;/SPAN&gt; &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Ensures Data Integrity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;Validation checks if data entered into a draft is consistent with predefined criteria, preventing the storage of incomplete or incorrect data.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Provides Immediate Feedback&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;Users receive real-time messages indicating any inconsistencies or issues within the draft, allowing them to correct them before committing to the final active state.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Supports Data Consistency&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Validations are triggered at predefined points in the transaction cycle, ensuring that draft instances remain in a consistent and reliable state.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Prevents Business Errors&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;By catching errors in the draft stage, validation prevents them from propagating to the active data, avoiding costly mistakes and ensuring the accuracy of final data.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Enhances User Experience&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;Users are informed about missing or incorrect information, allowing them to modify their input without needing to complete the entire transaction to see the problem.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Facilitates Data Reliability&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;For developers, this means the data that eventually leaves an API can be trusted because it has been validated, leading to simpler and more reliable front-end code.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Validation:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A validation is an optional part of the business object behavior that checks the consistency of business object instances based on trigger conditions.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A validation is implicitly invoked by the business object’s framework if the trigger condition of the validation is fulfilled. Trigger conditions can be&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;modify&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;operations and modified fields. The trigger condition is evaluated at the trigger time, a predefined point during the BO runtime. An invoked validation can reject inconsistent instance data from being saved by passing the keys of failed instances to the corresponding table in the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;FAILED&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;structure. Additionally, a validation can return messages to the consumer by passing them to the corresponding table in the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;REPORTED&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;structure.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Points to be noted:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When working with validations, you have to consider the following runtime specifics:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;In unmanaged scenarios, validations are only supported for draft instances, not for active instances.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;SPAN&gt;The execution order of validations is not fixed. If there is more than one validation triggered by the same condition, you cannot know which validation is executed first.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It is not allowed to use EML modify statements in validations.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In a managed scenario with draft, it is strongly recommended to assign validations to the PREPARE, so that state messages from the validations are returned correctly to the consumer.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Messages in RAP:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;State Messages:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;State messages refer to a business object instance and its values.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;State messages must be always bound to a business object instance.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;You mustn’t define state messages in an action or function added on projection level(Dump).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Draft Scenario, They’re persisted until the state that caused the message is changed.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Managed scenario, the messages are buffered until the end of the session.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If a validation returns an error message regarding an incorrect value in a field,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The state message persisted until the value is changed and the save sequence is &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Triggered again.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Using State messages is only recommended for the following cases:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Business object with draft capabilities: Determinations and validation that are &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Allocated to the prepare or a determine action.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Unmanaged Business Object: Finalize/check before save code exit.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Managed Scenario: Determination/validation on save.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Transition Messages:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Refers to the current Request.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It can either be bound or unbound (not related to business object instances).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;      APPEND VALUE #( %tky = &amp;lt;ls_keys&amp;gt;-%tky
                     %msg = NEW /dmo/cm_flight_messages(
                        textid   = /dmo/cm_flight_messages=&amp;gt;discount_invalid
                        severity = if_abap_behv_message=&amp;gt;severity-error
      )                 %element-bookingfee = if_abap_behv=&amp;gt;mk-on
                       %action-deductdiscount =  if_abap_behv=&amp;gt;mk-on )
                       TO reported-zr_travel_d1.&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;        APPEND VALUE #( %msg      = new_message_with_text(
                        severity = if_abap_behv_message=&amp;gt;severity-error
                        text = 'operation not authorized!' ) )
                        TO reported-zr_travel_d1.&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    APPEND VALUE #(
            %tky                = booking-%tky
            %state_area         = 'VALIDATE_CUSTOMER'
            %msg                = NEW /dmo/cm_flight_messages( textid   = /dmo/cm_flight_messages=&amp;gt;enter_customer_id
                                                               severity = if_abap_behv_message=&amp;gt;severity-error )
            %path               = VALUE #( zR_Travel_D1-%tky = travel_booking_links[
                                                                   KEY id
                                                                   source-%tky = booking-%tky ]-target-%tky )
            %element-CustomerID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_booking_d1.&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Trigger condition can be: CUD operation or modified fields(Update for validation is only &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Supported in combination with create).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; validation validateCustomer on save { create; field CustomerID; }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Trigger Time:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Validation on save are executed:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In the check Before save method of the save sequence.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;On request by executing a determine action, if the validation has been assigned to&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Such an action in the behavior definition. For more information, see Determine Actions.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_5-1758884065427.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320421iEF8CD1D080ED6C91/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_5-1758884065427.png" alt="harsh_raj1_5-1758884065427.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For making the validation you have to make field as mandatory.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;field&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;(&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;mandatory&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;CustomerID&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;validation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;validateCustomer&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;on&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;save&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;{&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;create;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;field&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;CustomerID&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;;}&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Give &lt;/SPAN&gt;&lt;SPAN&gt;implementation for&amp;nbsp;validatecustomer&amp;nbsp;method in local handler class.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;When we are working with state messages in RAP first we need to invalidate it without msg and later&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If needed, we can validate with msg.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;      APPEND VALUE #( %tky        = travel-%tky
                      %state_area = 'VALIDATE_CUSTOMER' )
             TO reported-zr_travel_d1.&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Adding back with msg:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If we remove state area it will become transaction message.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;      IF travel-CustomerID IS INITIAL.
        APPEND VALUE #( %tky = travel-%tky ) TO failed-zr_travel_d1.

        APPEND VALUE #( %tky                = travel-%tky
                        %state_area         = 'VALIDATE_CUSTOMER'
                        %msg                = NEW /dmo/cm_flight_messages(
                                                      textid   = /dmo/cm_flight_messages=&amp;gt;enter_customer_id
                                                      severity = if_abap_behv_message=&amp;gt;severity-error )
                        %element-CustomerID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_travel_d1.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;On Fiori app:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we can see Customerid is 1 and it’s a valid value so it will not through any error &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Message whenever user click enter or save button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_8-1758884118570.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320425iC029A38130842A81/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_8-1758884118570.png" alt="harsh_raj1_8-1758884118570.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;Now I will edit it and pass some invalid value. See how it behaves.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;@Consumption.valueHelpDefinition:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;[{entity:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;{name:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;'/DMO/I_Customer_StdVH',&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;element:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;'CustomerID'&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;},&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;useForValidation:&amp;nbsp;true&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;}]&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Here am not using use for validation : true that’s why if user click on enter it will not throw any error message it will only throw error message when &amp;nbsp;User click on save button.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_9-1758884118573.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320429iB4D0F878C6A572B9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_9-1758884118573.png" alt="harsh_raj1_9-1758884118573.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now i have added use for validation: true.&amp;nbsp;&lt;/P&gt;&lt;P&gt;See it will validate when user click on enter as well.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_10-1758884118575.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320430i2B4981D90DA5D176/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_10-1758884118575.png" alt="harsh_raj1_10-1758884118575.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;These messages are coming from read after performing&amp;nbsp; modify.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_11-1758884118576.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320428iDB8103322D917B99/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_11-1758884118576.png" alt="harsh_raj1_11-1758884118576.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As we are reading from parent entity travel for booking.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here are minor changes in validation from travel customer validation.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Apart from this most of the things are similar.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;%path is different and link data.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    READ ENTITIES OF zR_Travel_D1 IN LOCAL MODE
         ENTITY zr_booking_d1
         FIELDS ( CustomerID )
         WITH CORRESPONDING #( keys )
         RESULT DATA(bookings).&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    READ ENTITIES OF zR_Travel_D1 IN LOCAL MODE
         ENTITY zr_booking_d1 BY \_Travel1
         FROM CORRESPONDING #( bookings )
         LINK DATA(travel_booking_links).&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;            %path               = VALUE #( zR_Travel_D1-%tky = travel_booking_links[
                                                                   KEY id
                                                                   source-%tky = booking-%tky ]-target-%tky )
            %element-CustomerID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_booking_d1.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;For Booking:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Am not using here this annotation so here it's not validating at frontend with enter.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It will validate once user click on save button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_14-1758884118579.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320433i35F61C1F60FFA47E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_14-1758884118579.png" alt="harsh_raj1_14-1758884118579.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I will pass incorrect value for&amp;nbsp;custoimerid.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;See what happen:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_15-1758884118580.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320435iD5879396589589F6/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_15-1758884118580.png" alt="harsh_raj1_15-1758884118580.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It is accepting while click on&amp;nbsp;enter.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It is giving error only after press save button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_16-1758884118581.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320434i0428B600F861A05E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_16-1758884118581.png" alt="harsh_raj1_16-1758884118581.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Even if&amp;nbsp;customerid&amp;nbsp;is mandatory field it will accept empty value when we hit enter&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It will validate only after click on save button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_17-1758884118582.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320436i5EB8BCB53BA79A5D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_17-1758884118582.png" alt="harsh_raj1_17-1758884118582.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_18-1758884118583.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320439i737C56412366A804/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_18-1758884118583.png" alt="harsh_raj1_18-1758884118583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;For Booking Supplement&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here am not passing any value and if we click on save button validation will be&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Trigger and throw&amp;nbsp;a&amp;nbsp;error message as Enter a&amp;nbsp;ProductID.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_19-1758884118584.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320438iDF194310794B3A8E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_19-1758884118584.png" alt="harsh_raj1_19-1758884118584.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_20-1758884118585.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320437iDDAFCD19F0616B34/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_20-1758884118585.png" alt="harsh_raj1_20-1758884118585.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If&amp;nbsp;ProductID&amp;nbsp;it is wrong, it will throw error message as&amp;nbsp;ProductID&amp;nbsp;is unknown.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_21-1758884118586.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320442iC7CCFBC722AD47B9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_21-1758884118586.png" alt="harsh_raj1_21-1758884118586.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_22-1758884118586.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320440i72F821F6D1A40646/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_22-1758884118586.png" alt="harsh_raj1_22-1758884118586.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Things needs to define:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In behavior definition:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;field ( mandatory ) SupplementID;
  validation validateSupplement on save { create; field SupplementID; }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;In local handler class&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we need to link both parent and child as it is grandchild entity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    READ ENTITIES OF zR_Travel_D1 IN LOCAL MODE
         ENTITY ZR_BookingSupplement_D1 BY \_Booking1
         FROM CORRESPONDING #( bookingsupplements )
         LINK DATA(booksuppl_booking_links).&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    READ ENTITIES OF zR_Travel_D1 IN LOCAL MODE
         ENTITY ZR_BookingSupplement_D1 BY \_Travel1
         FROM CORRESPONDING #( bookingsupplements )
         LINK DATA(booksuppl_travel_links).&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;            %path                 = VALUE #(
                zr_booking_d1-%tky = booksuppl_booking_links[ KEY id
                                                             source-%tky = &amp;lt;bookingsupplement&amp;gt;-%tky ]-target-%tky
                zR_Travel_D1-%tky  = booksuppl_travel_links[  KEY id
                                                            source-%tky = &amp;lt;bookingsupplement&amp;gt;-%tky ]-target-%tky )
            %element-SupplementID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_bookingsupplement_d1.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;These highlighted lines such as path are different from travel and booking entity as this is a type&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Of grandchild entity. So we have to link with both entity parent such as travel and child such as booking.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;            %path               = VALUE #(
                zR_Travel_D1-%tky = travel_booking_links[ KEY id
                                                          source-%tky = booking-%tky ]-target-%tky )
            %element-CustomerID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_booking_d1.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-cloud-blog-posts/validation-in-draft-with-state-messages-in-rap/ba-p/14228996"/>
    <published>2025-10-03T16:34:11.013000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/extensibility-in-the-age-of-ai-why-abcd-is-easier-and-smarter-than-you/ba-p/14234516</id>
    <title>Extensibility in the Age of AI: Why ABCD Is Easier (and Smarter) Than You Think</title>
    <updated>2025-10-03T20:04:58.498000+02:00</updated>
    <author>
      <name>Sonal_Gupta</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/789731</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;The CTO’s Concern&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Not long ago, during a client conversation, a CTO expressed a concern that resonated deeply:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;“We need to extend our system. But every time someone says ‘let’s customize this,’ I feel we’re piling risk. And now with AI coming, I’m afraid our mess gets worse.”&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;That statement captures the heart of a challenge many SAP customers face. Customization has been both the &lt;STRONG&gt;strength&lt;/STRONG&gt; and the &lt;STRONG&gt;Achilles’ heel&lt;/STRONG&gt; of enterprise landscapes. It allows us to adapt, innovate, and differentiate — but it often comes with &lt;STRONG&gt;technical debt, upgrade pain, and hidden complexity&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why Extensibility Matters More in the AI Era&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s pause here. Ten years ago, if you added a Z-table or tweaked a user exit, the worst-case scenario was some testing pain during an upgrade. Today?&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If your data model is inconsistent, your AI forecasts won’t align with reality.&lt;/LI&gt;&lt;LI&gt;If your logic is buried in old exits, Joule copilots can’t “see” your processes.&lt;/LI&gt;&lt;LI&gt;If your core is brittle, cloud updates feel like risks, not opportunities.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In other words: &lt;STRONG&gt;extensibility is no longer just about “making it work.” It’s about making AI possible.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;And now, with &lt;STRONG&gt;SAP’s AI ambitions&lt;/STRONG&gt; accelerating — embedded copilots, Joule agents, and business data clouds powering predictive intelligence — the &lt;STRONG&gt;messy customizations of the past&lt;/STRONG&gt; risk becoming blockers for the future.&lt;/P&gt;&lt;P&gt;This is where &lt;STRONG&gt;ABCD extensibility&lt;/STRONG&gt; comes in. Far from being abstract jargon, it’s a &lt;STRONG&gt;practical compass&lt;/STRONG&gt; to guide enterprises on &lt;EM&gt;how to extend the system smartly, safely, and in a way that enables AI instead of hindering it&lt;/EM&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The ABCD Levels: A Human Explanation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP’s &lt;STRONG&gt;ABCD framework&lt;/STRONG&gt; doesn’t exist to confuse us — it exists to &lt;STRONG&gt;help customers navigate the grey space between innovation and stability&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Here’s the official breakdown, with real-world translation:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sonal_Gupta_2-1759511624842.png" style="width: 657px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322697i9B5314686910CB23/image-dimensions/657x442/is-moderation-mode/true?v=v2" width="657" height="442" role="button" title="Sonal_Gupta_2-1759511624842.png" alt="Sonal_Gupta_2-1759511624842.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;A Short Story: The MV45AFZZ Debate&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Anyone who has worked in SAP Sales and Distribution knows the legendary &lt;STRONG&gt;include MV45AFZZ&lt;/STRONG&gt;. For decades, it’s been the go-to spot for developers to implement custom sales order checks, validations, and logic.&lt;/P&gt;&lt;P&gt;At one client, a senior developer proudly said, &lt;EM&gt;“We’ve been using MV45AFZZ for 15 years, and it works just fine. Why change?”&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;And he wasn’t wrong. In many ways, that’s a &lt;STRONG&gt;Level B extensibility&lt;/STRONG&gt; choice: small, controlled, and serving the business well. (In fact, SAP even documented this in &lt;A href="https://me.sap.com/notes/3578329" target="_blank" rel="noopener noreferrer"&gt;SAP Note 3578329&lt;/A&gt;, proving that not all ‘old-school’ practices are bad.)&lt;/P&gt;&lt;P&gt;The problem comes when dozens of such exits pile up, undocumented, with overlapping logic — and suddenly the system feels like a house of cards.&lt;/P&gt;&lt;P&gt;Here’s the twist: &lt;STRONG&gt;ABCD extensibility is not about banning MV45AFZZ or exits. It’s about putting them in the right place, with the right intent.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The IDoc Question: Clean or Not?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;One of the most common debates I hear is:&amp;nbsp;&lt;EM&gt;“We use IDocs everywhere. Are they clean core?”&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The answer: Yes, IDocs are safe — they fall under Level B.&lt;/P&gt;&lt;P&gt;SAP clarified this in the &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/idocs-are-still-safe-for-sap-s-4hana-sap-clean-core-extensibility-level-b/ba-p/14225439?utm_source=chatgpt.com" target="_blank"&gt;IDoc Clean Core blog&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Why? Because IDocs are:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Officially documented.&lt;/LI&gt;&lt;LI&gt;Supported by SAP.&lt;/LI&gt;&lt;LI&gt;Used for integration and still relevant in S/4HANA.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;That said, if you’re starting a greenfield cloud project, you may want to move toward APIs and Event Mesh (Level A) instead. But if you’ve got an existing landscape with IDocs, don’t panic — they’re not “unclean.”&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Real-World Scenarios: Which Level to Choose?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sonal_Gupta_0-1759511476837.png" style="width: 672px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322695iA385FC19320A58EA/image-dimensions/672x344/is-moderation-mode/true?v=v2" width="672" height="344" role="button" title="Sonal_Gupta_0-1759511476837.png" alt="Sonal_Gupta_0-1759511476837.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why This Matters for AI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;AI copilots like Joule don’t “guess.” They rely on:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Stable APIs (Level A).&lt;/LI&gt;&lt;LI&gt;Clear data models (A &amp;amp; B).&lt;/LI&gt;&lt;LI&gt;Trusted logic (not buried in Level C/D).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If your system is full of Level D hacks, AI copilots won’t understand your processes. But if you steer toward A and B (with C monitored), you create an AI-ready enterprise.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Closing Thought&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Extensibility is not the villain. Misuse is.&lt;/P&gt;&lt;P&gt;The ABCD framework gives us a shared language:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A when we want innovation + AI without worry.&lt;/LI&gt;&lt;LI&gt;B when proven frameworks like IDocs or MV45AFZZ still serve us.&lt;/LI&gt;&lt;LI&gt;C only if there’s no choice — and we track it closely.&lt;/LI&gt;&lt;LI&gt;D only if we want to leave a headache for the next generation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;So next time someone says &lt;EM&gt;“let’s customize,”&lt;/EM&gt; you don’t need to panic. You just need to ask:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Is this A, B, C, or D? A&lt;/EM&gt;nd that one question can mean the difference between a system that blocks AI — and one that accelerates it.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;#SAPCleanCore&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#SAPExtensibility&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#ABAPCloud&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#SAPAI&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#SAPBTP&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#S4HANACloud&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#IDoc&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/extensibility-in-the-age-of-ai-why-abcd-is-easier-and-smarter-than-you/ba-p/14234516"/>
    <published>2025-10-03T20:04:58.498000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-excel-upload-through-custom-action-popup-no-ui5-extension-no/ba-p/14234872</id>
    <title>ABAP RAP : Excel upload through custom action popup ( No UI5 Extension , No Object Page workaround )</title>
    <updated>2025-10-05T00:52:51.623000+02:00</updated>
    <author>
      <name>Ramjee_korada</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/10276</uri>
    </author>
    <content>&lt;P&gt;A frequent business requirement involves enabling mass changes to business objects via&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Excel uploads&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;executed through a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;custom action popup&lt;/STRONG&gt;. Historically, achieving this functionality has necessitated various workarounds, often involving&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI5 extensions&lt;/STRONG&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;third-party solutions&lt;/STRONG&gt;, or&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Object Page manipulations&lt;/STRONG&gt;, all of which present specific implementation challenges.&lt;/P&gt;&lt;P&gt;The existing workaround approaches present several drawbacks:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Custom UI Extensions:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Require specialized&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI5 development expertise&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Third-Party Solutions:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Introduce risks related to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;licensing compliance&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and potential&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;security vulnerabilities&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Object Page Manipulations:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Involve complex, multi-step processes, such as creating a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;dummy object page&lt;/STRONG&gt;, facilitating file upload, temporarily&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;storing the file data in a table field&lt;/STRONG&gt;, and requiring a final user action (a button press) to initiate processing. This temporary data storage is often&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;unnecessary&lt;/STRONG&gt;, complicating the data model.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;However, SAP has recently introduced&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ABAP / CAP annotations&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;that offer a cloud-ready solution, potentially&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;eliminating approximately 95% of the development effort&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;typically associated with integrating an Excel upload into the backend. This innovation allows developers to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;prioritize implementing core business logic&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;over developing reusable technical artifacts.&lt;/P&gt;&lt;P&gt;I will now detail the implementation steps.&lt;/P&gt;&lt;P&gt;A business requirement to manage &lt;STRONG&gt;mass processing listings for a library&lt;/STRONG&gt; was selected to demonstrate this use case. The implementation requires several steps, with steps 3 through 6 being the &lt;STRONG&gt;special or additional configurations&lt;/STRONG&gt; needed, while all others are considered routine.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_0-1759618459647.png" style="width: 691px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322875i27F4B6363B99B5FA/image-dimensions/691x376/is-moderation-mode/true?v=v2" width="691" height="376" role="button" title="Ramjee_korada_0-1759618459647.png" alt="Ramjee_korada_0-1759618459647.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1890964802"&gt;Implementation Steps&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;A database table for the &lt;STRONG&gt;listing entity&lt;/STRONG&gt; is created. This involves fields such as &lt;CODE&gt;Id&lt;/CODE&gt;, &lt;CODE&gt;Title&lt;/CODE&gt;, &lt;CODE&gt;Type&lt;/CODE&gt;, and &lt;CODE&gt;Author&lt;/CODE&gt;.&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Library Listings'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zrk_lib_listings {

  key client            : abap.clnt not null;
  key listing_uuid      : sysuuid_x16 not null;
  id                    : abap.numc(10);
  title                 : abap.char(40);
  type                  : abap.char(5);
  author                : abap.char(40);
  publisher_studio      : abap.char(40);
  isbn_ean              : abap.char(40);
  language_code         : abap.lang;
  publication_year      : abap.numc(4);
  description           : abap.char(40);
  totalcopies           : abap.int2;
  available_copies      : abap.int2;
  location_shelf_id     : abap.char(40);
  lending_duration_days : abap.int2;
  status                : abap.char(40);
  cover_image_url       : abap.char(100);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2.&amp;nbsp;A &lt;STRONG&gt;RAP Business Object (BO)&lt;/STRONG&gt;&lt;SPAN&gt; is generated, followed by the requisite &lt;/SPAN&gt;&lt;STRONG&gt;UI artifacts&lt;/STRONG&gt;&lt;SPAN&gt;. The specific RAP BO scenario (Managed, Unmanaged, Draft, or Non-Draft) is noted as not influencing the core Excel upload use case. The &lt;/SPAN&gt;&lt;STRONG&gt;RAP Generator is used&lt;/STRONG&gt;&lt;SPAN&gt;&lt;SPAN&gt; to simplify the demonstration.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_0-1759617725687.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322874iBDE9FF5181449404/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Ramjee_korada_0-1759617725687.png" alt="Ramjee_korada_0-1759617725687.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. A &lt;STRONG&gt;root&amp;nbsp;abstract entity&lt;/STRONG&gt; is created for the file to be uploaded. (This entity is highly reusable and can be applied across different RAP BOs).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abs. Entity For Attachment'
define root abstract entity ZRK_D_FILE_STREAM
{
  @Semantics.largeObject.mimeType: 'MimeType'
  @Semantics.largeObject.fileName: 'FileName'
  @Semantics.largeObject.contentDispositionPreference: #INLINE
  @EndUserText.label: 'Select Excel file'
  StreamProperty : abap.rawstring(0);
  
  .hidden: true
  MimeType : abap.char(128);
  
  .hidden: true
  FileName : abap.char(128);   
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4. The &lt;STRONG&gt;abstract behavior definition&lt;/STRONG&gt; for the file entity is implemented.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;abstract;
strict(2);
with hierarchy;
define behavior for ZRK_D_FILE_STREAM {
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5. A second &lt;STRONG&gt;abstract entity is created&lt;/STRONG&gt; to serve as an action parameter. This entity includes an association to the file abstract entity (from Step 3).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Action Param for Uploading Excel'
define root abstract entity ZRK_D_UPLOAD_EXCEL
{
// Dummy is a dummy field
@UI.hidden: true
dummy : abap_boolean;
     _StreamProperties : association [1] to ZRK_D_FILE_STREAM on 1 = 1;
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6. The &lt;STRONG&gt;abstract behavior definition&lt;/STRONG&gt; for the action parameter is implemented, including the association to the earlier entity.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;abstract;
strict ( 2 );
with hierarchy;
define behavior for ZRK_D_UPLOAD_EXCEL //alias &amp;lt;alias_name&amp;gt;
{
association _StreamProperties with hierarchy;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7. An &lt;STRONG&gt;action is defined&lt;/STRONG&gt; on the RAP BO Behavior definition, with the parameter specified in Step 5.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  static action ExcelUpload deep parameter ZRK_D_UPLOAD_EXCEL ;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class ZRK_BP_R_LIB_LISTINGS unique;
strict ( 2 );
with draft;
extensible;
define behavior for ZRK_R_LIB_LISTINGS alias Listings
persistent table ZRK_LIB_LISTINGS
extensible
draft table ZRK_LIB_LSTNGS_D
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master( global )
{
  field ( readonly )
   ListingUUID,
   LocalCreatedBy,
   LocalCreatedAt,
   LocalLastChangedBy,
   LocalLastChangedAt,
   LastChangedAt;

  field ( numbering : managed )
   ListingUUID;


  create;
  update;
  delete;

  draft action Activate optimized;
  draft action Discard;
  draft action Edit;
  draft action Resume;
  draft determine action Prepare;

  static action ExcelUpload deep parameter ZRK_D_UPLOAD_EXCEL ;

  mapping for ZRK_LIB_LISTINGS corresponding extensible
  {
    ListingUUID = listing_uuid;
    ID = id;
    Title = title;
    Type = type;
    Author = author;
    PublisherStudio = publisher_studio;
    IsbnEan = isbn_ean;
    LanguageCode = language_code;
    PublicationYear = publication_year;
    Description = description;
    Totalcopies = totalcopies;
    AvailableCopies = available_copies;
    LocationShelfID = location_shelf_id;
    LendingDurationDays = lending_duration_days;
    Status = status;
    CoverImageUrl = cover_image_url;
    LocalCreatedBy = local_created_by;
    LocalCreatedAt = local_created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt = last_changed_at;
  }

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8. The &lt;STRONG&gt;business logic is implemented&lt;/STRONG&gt; to read the Excel content. A released API, XCO_CP_XLSX&amp;nbsp;&lt;FONT color="#000000"&gt;,&lt;/FONT&gt; is used for this demonstration.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; METHOD ExcelUpload.
    TYPES : BEGIN OF ty_sheet_data,
              id                  TYPE zrk_r_lib_listings-id,
              title               TYPE zrk_r_lib_listings-title,
              type                TYPE zrk_r_lib_listings-Type,
              author              TYPE zrk_r_lib_listings-author,
              PublisherStudio     TYPE zrk_r_lib_listings-PublisherStudio,
              IsbnEan             TYPE zrk_r_lib_listings-IsbnEan,
              LanguageCode        TYPE zrk_r_lib_listings-LanguageCode,
              PublicationYear     TYPE zrk_r_lib_listings-PublicationYear,
              description         TYPE zrk_r_lib_listings-Description,
              Totalcopies         TYPE zrk_r_lib_listings-Totalcopies,
              AvailableCopies     TYPE zrk_r_lib_listings-AvailableCopies,
              LocationShelfID     TYPE zrk_r_lib_listings-LocationShelfID,
              LendingDurationDays TYPE zrk_r_lib_listings-LendingDurationDays,
              status              TYPE zrk_r_lib_listings-Status,
            END OF ty_sheet_data.

    DATA lv_file_content   TYPE xstring.
    DATA lt_sheet_data     TYPE STANDARD TABLE OF ty_sheet_data.
    DATA lt_listing_create TYPE TABLE FOR CREATE zrk_r_lib_listings.

    lv_file_content = VALUE #( keys[ 1 ]-%param-_streamproperties-StreamProperty OPTIONAL ).

    " Error handling in case file content is initial

    DATA(lo_document) = xco_cp_xlsx=&amp;gt;document-&amp;gt;for_file_content( lv_file_content )-&amp;gt;read_access( ).

    DATA(lo_worksheet) = lo_document-&amp;gt;get_workbook( )-&amp;gt;worksheet-&amp;gt;at_position( 1 ).

    DATA(o_sel_pattern) = xco_cp_xlsx_selection=&amp;gt;pattern_builder-&amp;gt;simple_from_to(
      )-&amp;gt;from_column( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_alphabetic_value( 'A' )  " Start reading from Column A
      )-&amp;gt;to_column( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_alphabetic_value( 'N' )   " End reading at Column N
      )-&amp;gt;from_row( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_numeric_value( 2 )    " *** Start reading from ROW 2 to skip the header ***
      )-&amp;gt;get_pattern( ).

    lo_worksheet-&amp;gt;select( o_sel_pattern
                                     )-&amp;gt;row_stream(
                                     )-&amp;gt;operation-&amp;gt;write_to( REF #( lt_sheet_data )
                                     )-&amp;gt;set_value_transformation(
                                         xco_cp_xlsx_read_access=&amp;gt;value_transformation-&amp;gt;string_value
                                     )-&amp;gt;execute( ).

    lt_listing_create = CORRESPONDING #( lt_sheet_data ).

    MODIFY ENTITIES OF zrk_r_lib_listings IN LOCAL MODE
           ENTITY Listings
           CREATE AUTO FILL CID FIELDS ( Id Title Type author PublisherStudio IsbnEan LanguageCode PublicationYear description Totalcopies AvailableCopies LocationShelfID LendingDurationDays status )
           WITH lt_listing_create
           " TODO: variable is assigned but never used (ABAP cleaner)
           MAPPED DATA(lt_mapped)
           " TODO: variable is assigned but never used (ABAP cleaner)
           REPORTED DATA(lt_reported)
           " TODO: variable is assigned but never used (ABAP cleaner)
           FAILED DATA(lt_failed).

    " Communicate the messages to UI - not in scope of this demo
    IF lt_failed IS INITIAL.
      APPEND VALUE #( %msg = new_message_with_text( severity = if_abap_behv_message=&amp;gt;severity-success
                                                    text     = 'Listings have been uploaded - please refresh the list!!' ) )
             TO reported-listings.
    ENDIF.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9. The action is utilized on the &lt;STRONG&gt;projection behavior&lt;/STRONG&gt; and subsequently exposed in the &lt;STRONG&gt;metadata extension&lt;/STRONG&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  use action ExcelUpload;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection implementation in class ZRK_BP_C_LIB_LISTINGS unique;
strict ( 2 );
extensible;
use draft;
use side effects;
define behavior for ZRK_C_LIB_LISTINGS alias Listings
extensible
use etag
{
  use create;
  use update;
  use delete;

  use action Edit;
  use action Activate;
  use action Discard;
  use action Resume;
  use action Prepare;

  use action ExcelUpload;

}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;.lineItem: [{ type:#FOR_ACTION , dataAction: 'ExcelUpload' , label: 'Upload Excel' }]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;10. The &lt;STRONG&gt;service binding is published&lt;/STRONG&gt;, and the application is then ready for execution.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_2-1759616768674.png" style="width: 739px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322868iF1985AA5BDD03A2A/image-dimensions/739x181/is-moderation-mode/true?v=v2" width="739" height="181" role="button" title="Ramjee_korada_2-1759616768674.png" alt="Ramjee_korada_2-1759616768674.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_3-1759616871331.png" style="width: 721px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322869i040F7DA1CC5515C5/image-dimensions/721x392/is-moderation-mode/true?v=v2" width="721" height="392" role="button" title="Ramjee_korada_3-1759616871331.png" alt="Ramjee_korada_3-1759616871331.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_4-1759616921974.png" style="width: 720px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322870i5364BBC5623F81B7/image-dimensions/720x117/is-moderation-mode/true?v=v2" width="720" height="117" role="button" title="Ramjee_korada_4-1759616921974.png" alt="Ramjee_korada_4-1759616921974.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_5-1759617464764.png" style="width: 743px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322872i185A7C14C9E33C7E/image-dimensions/743x390/is-moderation-mode/true?v=v2" width="743" height="390" role="button" title="Ramjee_korada_5-1759617464764.png" alt="Ramjee_korada_5-1759617464764.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_6-1759617503382.png" style="width: 736px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322873iF922947957F6C08B/image-dimensions/736x407/is-moderation-mode/true?v=v2" width="736" height="407" role="button" title="Ramjee_korada_6-1759617503382.png" alt="Ramjee_korada_6-1759617503382.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1694451297"&gt;Note:&lt;/H3&gt;&lt;P&gt;This feature is currently &lt;STRONG&gt;functional on the BTP ABAP Environment&lt;/STRONG&gt;. However, an issue appears to exist with metadata generation on &lt;STRONG&gt;S/4HANA 2023 On-Premise&lt;/STRONG&gt; deployments, even though the objects are syntactically correct. It is anticipated that this constraint will be addressed in the &lt;STRONG&gt;S/4HANA 2025 release&lt;/STRONG&gt;, making the full feature set available on the S/4HANA On-Premise version following a brief waiting period.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-excel-upload-through-custom-action-popup-no-ui5-extension-no/ba-p/14234872"/>
    <published>2025-10-05T00:52:51.623000+02:00</published>
  </entry>
</feed>
