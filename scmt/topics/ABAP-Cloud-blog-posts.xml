<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/ABAP-Cloud-blog-posts.xml</id>
  <title>SAP Community - ABAP Cloud</title>
  <updated>2025-10-27T00:00:00.674032+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/ABAP Cloud/pd-p/9ada5ac7-3f77-49de-b5c9-9019df1d1e09" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>ABAP Cloud blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/foreign-entity-in-rap/ba-p/14227441</id>
    <title>Foreign entity in RAP</title>
    <updated>2025-09-29T09:05:47.440000+02:00</updated>
    <author>
      <name>Shyam4U</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1512208</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Description:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;A RAP BO entity which is not part of the BO composition tree for which it is defined. Defining a foreign entity in the behavior definition enables cross-BO message mapping between the two BOs.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Concepts:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;RAP foreign entity is a component of the BC-ESI-RAP RESTful ABAP Programming Model. It is a representation of an external entity, such as a web service, that can be used in an ABAP program. The foreign entity is defined in the ABAP program and can be used to access data from the external source.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Tips &amp;amp; Tricks:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;When defining a RAP foreign entity, it is important to ensure that all authentication information is correct. This will ensure that requests are sent securely and that responses are received correctly. Additionally, it is important to ensure that the URL of the external source is correct, as this will ensure that requests are sent to the correct location.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;How to use it:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;To use a RAP foreign entity, first define the entity in the ABAP program. This includes specifying the URL of the external source, as well as any authentication information that may be required. Once the entity is defined, it can be used to access data from the external source. This can be done using the RAP API, which provides methods for making requests and receiving responses from the external source.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_0-1758779361113.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319667i1BD7D26A3B6E12D5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_0-1758779361113.png" alt="Shyam4U_0-1758779361113.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;FONT face="arial black,avant garde"&gt;&lt;STRONG&gt;Example : &lt;/STRONG&gt;&lt;/FONT&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;"In our system, we have two distinct business entities: &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Inventory&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Sales Order&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. Although they are separate, they are fundamentally linked. We manage this connection by using the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;product ID&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; as the key identifier. This ensures that every time a sales order is created, the system automatically checks and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;deducts the correct quantity from the available stock&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; in the inventory. This process maintains accurate, real-time stock levels, which is critical for our operations."&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'inverty table' 
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #A 
@AbapCatalog.dataMaintenance : #ALLOWED 
define table zscn_t_inventory { 

key product_id : abap.char(10) not null; 
stock_level : abap.int4; 
product_name : abap.char(40); 
create_at : timestampl; 
last_chdate : timestampl; 

} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'INTERFACE VIEW INVERNTORY' 
@Metadata.ignorePropagatedAnnotations: true 
define root view entity ZSCN_i_INVENTORY as select from zscn_t_inventory 
{ 
key product_id as ProductId, 
stock_level as StockLevel, 
product_name as ProductName, 
create_at as CreateAt, 
last_chdate as LastChdate 
} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'INVENTORY CONSUMPATION VIEW' 
@Metadata.ignorePropagatedAnnotations: true 
@VDM.viewType: #TRANSACTIONAL 
define root view entity ZSCN_C_INVENTORY 
provider contract transactional_query 
as projection on ZSCN_i_INVENTORY 
{ 
@UI.facet: [{ type: #IDENTIFICATION_REFERENCE }] 

@UI.lineItem: [{ position: 10 , label: 'Product Id' }] 
@UI.identification:[{ position: 10 , label: 'Product Id' }] 
key ProductId, 
@UI.lineItem: [{ position: 20 , label: 'Stock Level' }] 
@UI.identification:[{ position: 20 , label: 'Stock Level' }] 
StockLevel, 
@UI.lineItem: [{ position: 30 , label: 'Product Name' }] 
@UI.identification:[{ position: 30 , label: 'Product Name' }] 
ProductName, 
@Semantics.systemDateTime.createdAt: true 
CreateAt, 
@Semantics.systemDateTime.lastChangedAt: true 
LastChdate 
} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_scn_i_inventory unique; 
strict ( 2 ); 
with draft; 

define behavior for ZSCN_i_INVENTORY //alias &amp;lt;alias_name&amp;gt; 
persistent table zscn_t_inventory 
lock master 
total etag LastChdate 
draft table zscn_t_invent_d 
authorization master ( instance ) 
late numbering 
//etag master &amp;lt;field_name&amp;gt; 
{ 
create ( authorization : global ); 
update; 
delete; 
field ( readonly ) ProductId; 

validation vali_Stock on save { create; update; } 

draft action Activate optimized ; 
draft action Discard ; 
draft action Edit ; 
draft action Resume ; 
draft determine action Prepare ; 

mapping for zscn_t_inventory { 
CreateAt = create_at ; 
LastChdate = last_chdate ; 
ProductId = product_id ; 
ProductName = product_name ; 
StockLevel = stock_level; 
} 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_1-1758779760747.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319670i23615557B62C460B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_1-1758779760747.png" alt="Shyam4U_1-1758779760747.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In our system, a key validation for inventory is to prevent the stock level from ever going into a negative value.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_0-1758780972739.png" style="width: 655px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319675i7F29A75ECBAD4A91/image-dimensions/655x264?v=v2" width="655" height="264" role="button" title="Shyam4U_0-1758780972739.png" alt="Shyam4U_0-1758780972739.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD vali_Stock.
    
LOOP AT keys INTO DATA(lv_key).

      READ ENTITY IN LOCAL MODE ZSCN_i_INVENTORY
       ALL FIELDS WITH VALUE #( (  %key = lv_key-%key ) )
      RESULT DATA(lt_result).

      CHECK lt_result IS NOT INITIAL.

      LOOP AT lt_result INTO DATA(lv_result).
        IF lv_result-StockLevel &amp;lt; 0 .
          APPEND VALUE #(  %tky = lv_result-%tky  ) TO failed-zscn_i_inventory.

          APPEND VALUE #(  %tky = lv_result-%tky
                 %msg = new_message_with_text( severity =
                 if_abap_behv_message=&amp;gt;severity-error
                 text = 'Stock value should not be negative value ' &amp;amp;&amp;amp; ' ' &amp;amp;&amp;amp; lv_result-StockLevel )
                 %element-stocklevel = if_abap_behv=&amp;gt;mk-on  ) TO reported-zscn_i_inventory .

        ENDIF.
      ENDLOOP.
    ENDLOOP.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_2-1758781361679.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319683i21B33569A1767987/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_2-1758781361679.png" alt="Shyam4U_2-1758781361679.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="arial black,avant garde"&gt;&lt;STRONG&gt;Sales order Entity&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="arial black,avant garde"&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'SALES ORDER' 
@AbapCatalog.enhancement.category : #EXTENSIBLE_ANY 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #A 
@AbapCatalog.dataMaintenance : #ALLOWED 
define table zscn_dt_salesord { 

key sales_order_id : abap.numc(10) not null; 
product_id : abap.char(10) not null; 
quantity : abap.numc(5); 
customer_id : abap.char(10); 
order_date : abap.dats; 
@Semantics.amount.currencyCode : 'zscn_dt_salesord.currency' 
total_amount : abap.curr(13,2); 
currency : abap.cuky; 
create_at : timestamp; 
last_changed : timestamp; 

} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'SALESORD CONSUMPATION VIEW' 
@Metadata.ignorePropagatedAnnotations: false 
define root view entity ZSCN_C_SALESORD 
provider contract transactional_query 
as projection on ZSCN_I_SALESORD 
{ 
@UI.facet: [{ type: #IDENTIFICATION_REFERENCE }] 

@UI.lineItem: [{ position: 10 , label: 'Sales Order Id' }] 
@UI.identification:[{ position: 10 , label: 'Sales Order Id' }] 
key SalesOrderId, 
@UI.lineItem: [{ position: 20 , label: 'Product Id' }] 
@UI.identification:[{ position: 20 , label: 'Product Id' }] 
@Consumption.valueHelpDefinition: [{ 
entity: { name: 'ZSCN_C_INVENTORY', element: 'ProductId' } }] 
ProductId, 
@UI.lineItem: [{ position: 30 , label: 'Quantity' }] 
@UI.identification:[{ position: 30 , label: 'Quantity' }] 
Quantity, 
@UI.lineItem: [{ position: 40 , label: 'Customer Id' }] 
@UI.identification:[{ position: 40 , label: 'Customer Id' }] 
CustomerId, 
@UI.lineItem: [{ position: 50 , label: 'Order Date' }] 
@UI.identification:[{ position: 50 , label: 'Order Date' }] 
OrderDate, 
@UI.lineItem: [{ position: 60 , label: 'Total Amount' }] 
@UI.identification:[{ position: 60 , label: 'Total Amount' }] 
TotalAmount, 
Currency, 
@Semantics.systemDateTime.createdAt: true 
CreateAt, 
@Semantics.systemDateTime.lastChangedAt: true 
LastChanged 

} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_scn_i_salesord unique; 
strict ( 2 ); 
with draft; 

//foreign entity Zscn_i_inventory alias _inventory ; 
define behavior for ZSCN_I_SALESORD //alias &amp;lt;alias_name&amp;gt; 
persistent table zscn_dt_salesord 
lock master 
total etag LastChanged 
draft table zscn_dt_salord_d 
authorization master ( instance ) 
early numbering 
//etag master &amp;lt;field_name&amp;gt; 
{ 

create ( authorization : global ); 
update; 
delete; 
field ( readonly ) SalesOrderId; 

validation valid_ProductId on save { create; update; } 
determination stock_upadte on save { field Quantity; } 
 
draft action Activate optimized ; 
draft action Discard ; 
draft action Edit ; 
draft action Resume ; 
draft determine action Prepare ; 

mapping for zscn_dt_salesord 
{ 
CreateAt = create_at; 
Currency = currency; 
CustomerId = customer_id; 
LastChanged = last_changed; 
OrderDate = order_date;
ProductId = product_id; 
SalesOrderId = sales_order_id; 
Quantity = quantity; 
TotalAmount = total_amount; 

} 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;without the foreign entity &lt;/SPAN&gt;&lt;SPAN class=""&gt;Zscn_i_inventory&lt;/SPAN&gt; &lt;SPAN class=""&gt;syntax ,&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp; behavior definition of the ZSCN_I_SALESORD it only holding the structure of ZSCN_I_SALESORD it &lt;/SPAN&gt;&lt;SPAN class=""&gt;doesn't&lt;/SPAN&gt;&lt;SPAN class=""&gt; hold the structure &lt;/SPAN&gt;&lt;SPAN class=""&gt;Zscn_i_inventory&lt;/SPAN&gt;&lt;SPAN class=""&gt; .&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_3-1758782312689.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319693i04E76CF2ACE2702F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_3-1758782312689.png" alt="Shyam4U_3-1758782312689.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_4-1758782320070.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319694iBE9FAD22C19ED3EF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_4-1758782320070.png" alt="Shyam4U_4-1758782320070.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Due to the separate entity definitions, errors from an inventory stock update cannot be directly propagated to the sales order user interface. In Failed and &lt;/SPAN&gt;&lt;SPAN class=""&gt;Reported structure will be miss &lt;/SPAN&gt;&lt;SPAN class=""&gt;match. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;T&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;o propagate &lt;/SPAN&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;SPAN class=""&gt; we use of foreign entity syntax&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;uncomment the&amp;nbsp;//foreign entity Zscn_i_inventory alias _inventory ;&amp;nbsp; in Behavior definition of&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Zscn_i_salesord .&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_0-1758782990181.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319700i976D6F6DBC5BC8E1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_0-1758782990181.png" alt="Shyam4U_0-1758782990181.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After adding the Foreign entity Zscn_i_inventory &amp;nbsp;alies _inventory ; &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We can see the change in the entity Zscn_i_salesord structure .&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_1-1758783042974.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319701i23555758241BE272/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_1-1758783042974.png" alt="Shyam4U_1-1758783042974.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_2-1758783077463.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319702i7ED69A661F19E1EF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_2-1758783077463.png" alt="Shyam4U_2-1758783077463.png" /&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_3-1758783109372.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319703iBBF8EBD3793DA2F3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_3-1758783109372.png" alt="Shyam4U_3-1758783109372.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_4-1758783178499.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319704iD42E5E0BC1A228ED/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_4-1758783178499.png" alt="Shyam4U_4-1758783178499.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Using the Determination we are update the stock of&amp;nbsp;the inventory table based on the Product id in Behavior definition implementation class .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A critical validation has been implemented: when a sales order is created, if the requested quantity is greater than the available stock level, an error is raised in the inventory business logic. This error is then propagated to the sales order entity, making it visible on the sales order screen.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD stock_upadte. 

LOOP AT keys INTO DATA(lv_key). 

READ ENTITY IN LOCAL MODE zscn_i_salesord ALL FIELDS WITH 
VALUE #( ( %key = lv_key-%key ) ) 
RESULT DATA(lt_result). 

CHECK lt_result IS NOT INITIAL. 

LOOP AT lt_result INTO DATA(lv_result). 
 
READ ENTITY ZSCN_i_INVENTORY 
ALL FIELDS WITH VALUE #( ( ProductId = lv_result-ProductId ) ) 
RESULT DATA(lt_result_inventory). 

LOOP AT lt_result_inventory INTO DATA(lv_inventory). 

 DATA(lv_stock) = CONV i( lv_inventory-StockLevel - lv_result-Quantity ). 

MODIFY ENTITY ZSCN_i_INVENTORY UPDATE FIELDS ( StockLevel ) 
WITH VALUE #( ( %key-ProductId = lv_inventory-%key-ProductId 
StockLevel = lv_stock ) ) REPORTED DATA(ltreported). 

if ltreported is not INITIAL. 
 
DATA: lt_dummy LIKE reported-_inventory. 
lt_dummy = CORRESPONDING #( ltreported-zscn_i_inventory ). 

APPEND LINES OF lt_dummy TO reported-_inventory.  

endif. 
      ENDLOOP. 
   ENDLOOP. 
ENDLOOP. 

ENDMETHOD. &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In &lt;/SPAN&gt;&lt;SPAN class=""&gt;above&lt;/SPAN&gt;&lt;SPAN class=""&gt; code &lt;/SPAN&gt;&lt;SPAN class=""&gt;I&lt;/SPAN&gt;&lt;SPAN class=""&gt; am using &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;CORRESPONDING #( &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ltreported&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;zscn_i_inventory&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ). &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;because &lt;/SPAN&gt;&lt;SPAN class=""&gt;of while&lt;/SPAN&gt; &lt;SPAN class=""&gt;using&lt;/SPAN&gt;&lt;SPAN class=""&gt; the EML syntax the report will be early but inside the Behavior &lt;/SPAN&gt;&lt;SPAN class=""&gt;definition it&lt;/SPAN&gt;&lt;SPAN class=""&gt; will be late &lt;/SPAN&gt;&lt;SPAN class=""&gt;structure.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_5-1758783700742.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319709i8DE267E217225D43/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_5-1758783700742.png" alt="Shyam4U_5-1758783700742.png" /&gt;&lt;/span&gt;&amp;nbsp; &lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_6-1758783731326.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319710i291685CEEACF10B0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_6-1758783731326.png" alt="Shyam4U_6-1758783731326.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In inventory entity this are the possible product we have in that &lt;/SPAN&gt;&lt;SPAN class=""&gt;i&lt;/SPAN&gt;&lt;SPAN class=""&gt; will &lt;/SPAN&gt;&lt;SPAN class=""&gt;chose&lt;/SPAN&gt;&lt;SPAN class=""&gt; Titan watch&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_0-1758784285024.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319716i82C35938198C8543/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_0-1758784285024.png" alt="Shyam4U_0-1758784285024.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;When creating a sales order for a Titan watch, if the requested quantity of 50 exceeds the available stock of 40, the system will prevent the transaction and display an error.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_1-1758784335793.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319717i0D9C69770EC165AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_1-1758784335793.png" alt="Shyam4U_1-1758784335793.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The error which is from the inventory entity by using the foreign entity concept we are propagating the error message of &lt;/SPAN&gt;&lt;SPAN class=""&gt;inventory in&lt;/SPAN&gt;&lt;SPAN class=""&gt; sales order entity.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_2-1758784368449.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319718i9251943C19615F88/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_2-1758784368449.png" alt="Shyam4U_2-1758784368449.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Related Information:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;For more information on using RAP foreign entities, please refer to the SAP Help documentation on BC-ESI-RAP RESTful ABAP Programming Model. Additionally, there are many tutorials available online which provide step-by-step instructions on how to use RAP foreign entities in an ABAP program.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thanks for &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.erplingo.com/sap-glossary/en/bc-esi-rap/rap-foreign-entity" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;What is RAP foreign entity in SAP BC-ESI-RAP? Definition &amp;amp; Tips&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/doc/abapdocu_cp_index_htm/CLOUD/en-US/index.htm?file=abenbdl_foreign.htm" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://help.sap.com/doc/abapdocu_cp_index_htm/CLOUD/en-US/index.htm?file=abenbdl_foreign.htm&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/foreign-entity-in-rap/ba-p/14227441"/>
    <published>2025-09-29T09:05:47.440000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/customer-amp-partner-roundtable-for-sap-btp-abap-environment-28/ba-p/14231467</id>
    <title>Customer &amp; Partner Roundtable for SAP BTP ABAP Environment #28</title>
    <updated>2025-09-30T11:14:17.098000+02:00</updated>
    <author>
      <name>iwona_hahn</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4326</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1860394371" id="toc-hId-1890871559"&gt;&lt;STRONG&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;The call for contributions for one of the upcoming roundtables is open!&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;If you want to show a demo or share a use case scenario for SAP BTP ABAP Environment, send us an&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="mailto:sap_btp_abap_environment@sap.com" target="_blank" rel="noopener nofollow noreferrer"&gt;email&lt;/A&gt;&amp;nbsp;and we will get back to you.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1534798147" id="toc-hId-1565275335"&gt;Introduction&lt;/H2&gt;&lt;DIV&gt;&lt;SPAN class=""&gt;A&lt;/SPAN&gt;&lt;SPAN class=""&gt;s&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform/abap/environment.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;SAP&amp;nbsp;BTP&amp;nbsp;ABAP&amp;nbsp;environment (aka Steampunk)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/A&gt;and ABAP Cloud&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;became&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;more popular&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;inside and outside of SAP, there is a high demand for rolling out the latest product news and updates, asking questions, and showing demos.&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;You can find the slides presented, recordings, and further references from the previous roundtables in this&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://github.com/iwonahahn/SAP-BTP-ABAP-Environment-Roundtable/tree/main" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub repository&lt;/A&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iwona_hahn_0-1751374366410.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281320iF5290A011527C9B9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="iwona_hahn_0-1751374366410.jpeg" alt="iwona_hahn_0-1751374366410.jpeg" /&gt;&lt;/span&gt;&lt;H2 id="toc-hId-1338284642" id="toc-hId-1368761830"&gt;Meeting Information&lt;BR /&gt;&lt;BR /&gt;&lt;/H2&gt;&lt;STRONG&gt;When:&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;October 30&lt;/SPAN&gt;&lt;/STRONG&gt;, 2:00 - 3:00 PM CET&amp;nbsp; – &lt;A href="https://sap-se.zoom.us/meeting/register/BNTQg36rTgWstLMzArws0g" target="_blank" rel="noopener nofollow noreferrer"&gt;Zoom Meeting&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(&lt;STRONG&gt;please register&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in advance)&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Who:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;All interested&amp;nbsp;&lt;STRONG&gt;customers, partners,&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;stakeholders&lt;/STRONG&gt;&amp;nbsp;are invited to join this roundtable&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BTP ABAP team&lt;/STRONG&gt;:&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/4296" target="_blank"&gt;Frank Jentsch&lt;/A&gt;&amp;nbsp;&lt;SPAN class=""&gt;(Product Lead for SAP BTP ABAP&amp;nbsp;Environment)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/4326" target="_self"&gt;&lt;SPAN class=""&gt;Iwona Hahn&lt;/SPAN&gt;&lt;/A&gt;&amp;nbsp;&lt;SPAN class=""&gt;(Product Management)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;Jan Ole Skirke (Development Expert)&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Preliminary Agenda:&lt;/STRONG&gt;&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;Product update for SAP BTP ABAP Environment&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Downtime-optimized hotfix collection updates for SAP BTP ABAP Environment &lt;STRONG&gt;including demo&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Q&amp;amp;A&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;SPAN&gt;Looking forward to meeting you!&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;A href="https://sap-se.zoom.us/meeting/register/BNTQg36rTgWstLMzArws0g" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iwona_hahn_1-1751374366424.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281321i39537B5D388BE6C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="iwona_hahn_1-1751374366424.png" alt="iwona_hahn_1-1751374366424.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;Check out our&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://pages.community.sap.com/topics/btp-abap-environment" target="_blank" rel="noopener noreferrer"&gt;SAP Business Technology ABAP Environment&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;page in SAP Community&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;for&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;product&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;updates&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;and&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;upcoming events.&lt;/SPAN&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/customer-amp-partner-roundtable-for-sap-btp-abap-environment-28/ba-p/14231467"/>
    <published>2025-09-30T11:14:17.098000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/rap-using-custom-entity-with-load-multiple-data-using-pagination-and/ba-p/14233901</id>
    <title>RAP Using Custom Entity with load multiple data using Pagination and Preview using UI annotations</title>
    <updated>2025-10-03T06:01:53.175000+02:00</updated>
    <author>
      <name>RakeshZore</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1759317</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This blog covers RAP development using a custom entity, showcasing data with UI annotations, and surpassing the standard SAP data preview limit through the use of pagination.&lt;/P&gt;&lt;P&gt;Lets Start....&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create a custom entity with the fields that need to be displayed or sent to the frontend.&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Custom entity for fetching data'
@ObjectModel.query.implementedBy: 'ABAP:ZCL_IMPLEMENT_EXT' //This is the class where the data is handle and processed
@UI:{ headerInfo:{  typeName: 'RAP Learn',
                             typeNamePlural: 'RAP Learn',
                             title: { label: 'RAP Learn',
                                       type: #STANDARD,
                                       value: 'component'
                                     },
                             description: { value: 'obj_desc' },
                                     typeImageUrl: 'sap-icon://activity-items' //Show Icon image on header of object layout
                           }
               }
@Search.searchable: true //for Searching the data from the output which is also need to implement in the implemented class above 
define root custom entity ZCE_MAIN
{
      .facet   : [{
                      id: 'ID1',
                      purpose: #STANDARD,
                      type: #IDENTIFICATION_REFERENCE,
                      label : 'Component detail',
                      position: 10
                    },
                    {
                id: 'FG1',
                purpose: #STANDARD,
                type: #FIELDGROUP_REFERENCE,
                label : 'Validity Date',
                targetQualifier: 'FG1',
                position: 10
              }]
               : {  selectionField: [{ position: 10 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                            entity : { name: 'ZIV_F4MATNR' , element: 'matnr'   } ,
                            additionalBinding: [{ localElement: 'werks', element: 'werks' },
                                                         {  localElement: 'stlan' , element: 'stlan' },
                                                         {  localElement: 'stlal' , element: 'stlal' }]}]
      @Consumption.filter.selectionType: #SINGLE
  key matnr       : matnr;
               : {  selectionField: [{ position: 20 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                      entity : { name: 'ZIV_F4WERKS', element: 'werks' }
                                                         }]
      @Consumption.filter.selectionType: #SINGLE
  key werks       : werks_d;
               : {  selectionField: [{ position: 30 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                entity : { name: 'ZIV_F4STLAN' , element: 'stlan' }
                                                   }]
      @Consumption.filter.selectionType: #SINGLE
  key stlan       : stlan;
               : {  selectionField: [{ position: 40 }]}
      @Consumption.filter.mandatory: true
      @Consumption.filter.selectionType: #SINGLE
  key stlal       : stlal;
               : { lineItem: [{ position: 10 }], identification: [{ position: 10 }]}
      @EndUserText.label: 'Level'
  key bom_level   : abap.dec( 2, 0 );
               : { lineItem: [{ position: 20 }], identification: [{ position: 20 }]}
      @EndUserText.label: 'Component'
      .defaultSearchElement: true
  key component   : idnrk;
               : {  selectionField: [{ position: 50 }]}
      @Consumption.filter.mandatory: true
      @Consumption.filter.selectionType: #SINGLE
      @EndUserText.label: 'Date'
      zdate       : abap.dats;
               : { lineItem: [{ position: 30, cssDefault: { width: '13rem' }  }], identification: [{ position: 30 }]}
      @EndUserText.label: 'Object Description'
      .defaultSearchElement: true
      obj_desc    : maktx;
               : { lineItem: [{ position: 35, cssDefault: { width: '8rem' } }], identification: [{ position: 35 }]}
      @EndUserText.label: 'Quantity'
      comp_qty    : kmpmg_bi;
               : { lineItem: [{ position: 45 }], identification: [{ position: 45 }]}
      @EndUserText.label: 'Unit'
      comp_unit   : kmpme;
               : { lineItem: [{ position: 55 }], fieldGroup: [{ position: 10 , qualifier: 'FG1', label: 'Valid From' }]}
      @EndUserText.label: 'Valid from'
      valid_from  : datuv_bi;
               : { lineItem: [{ position: 65 }], fieldGroup: [{ position: 11 , qualifier: 'FG1', label: 'Valid To' }]}
      @EndUserText.label: 'Valid to'
      valid_to    : datub_bi;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;While using the RAP framework, metadata extensions cannot be created for custom entities. Therefore, annotations must be directly included in the custom entity code itself for UI purposes.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2 : Create an implementation class for the custom entity mentioned above and name it&amp;nbsp;ZCL_IMPLEMENT_EXT&amp;nbsp;or use the custom name specified in the second line of the code.&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_implement_ext DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC
  SHARED MEMORY ENABLED .

  PUBLIC SECTION.
    DATA : et_final TYPE TABLE OF zce_main.
    INTERFACES if_rap_query_provider .

  PROTECTED SECTION.
  PRIVATE SECTION.

ENDCLASS.



CLASS ZCL_IMPLEMENT_EXT IMPLEMENTATION.

  METHOD if_rap_query_provider~select.
    CASE io_request-&amp;gt;get_entity_id( ).
      WHEN 'ZCE_MAIN'.
        TRY.
            DATA(lv_skip) = io_request-&amp;gt;get_paging( )-&amp;gt;get_offset( ). "gets the skip part from URL which means number of data to be skipped and default is 0 but later on it gets add by 20... till last data not get fetched
            DATA(lv_top) = io_request-&amp;gt;get_paging( )-&amp;gt;get_page_size( ). "gets the top part from URL which means number of data required and default is 20
            DATA(lt_filter) = io_request-&amp;gt;get_filter( )-&amp;gt;get_as_ranges( ). "gets the input value which is either pass in our filters or when click on single data line item
           
          CATCH cx_rap_query_filter_no_range.
            "handle exception
        ENDTRY.

        IF lv_top &amp;lt; 0.
*********** Start Logic
"Put logic for single data fetch in which it will trigger when you are going for object page while clicking on single item from display table
"Take inputs from LT_filter table for sending that particular data click 
*********** End Logic
            IF io_request-&amp;gt;is_total_numb_of_rec_requested( ).
              io_response-&amp;gt;set_total_number_of_records( lines( et_final ) ).
            ENDIF.
            IF io_request-&amp;gt;is_data_requested(  ).
              io_response-&amp;gt;set_data( et_final ).
            ENDIF.
        ELSE.
*********** Start Logic
"Put logic for actual multiple data fetch in which it will trigger when you click go button or any sort of actions like search, sort, excel download....
"Take inputs from LT_filter table for required data fetch 
*********** End Logic
          ENDIF.
********** Searching Logic
        DATA(lv_search) = io_request-&amp;gt;get_search_expression( ). "gets the value from Search field in the UI
          IF lv_search IS NOT INITIAL.
            DATA lt_search LIKE et_final.

            lv_search = |*{ lv_search }*|.
            lt_search = VALUE #( BASE lt_search
                          FOR ls_f IN et_final
                          WHERE ( field1 CP lv_search OR  "Put required field to be search instead of field1,field2.....
                                  field2 CP lv_search  OR
                                  field3 cp lv_search OR
                                  field4 cp lv_search OR                                                                
                                                       ( ls_f ) ).
            et_final = lt_search.
          ENDIF.
***********End of Searching logic
***********Sorting logic
        DATA(lt_sort_elements) = io_request-&amp;gt;get_sort_elements( ). "gets the detail table of ascending and descending of field we wants to be sorted from UI
          IF lt_sort_elements IS NOT INITIAL.
            LOOP AT lt_sort_elements INTO DATA(ls_sort).
              IF ls_sort-descending &amp;lt;&amp;gt; 'X'.
                SORT et_final BY (ls_sort-element_name) ASCENDING.
              ELSE.
                SORT et_final BY (ls_sort-element_name) DESCENDING.
              ENDIF.
            ENDLOOP.
          ENDIF.
**********End of sorting logic
**********Paging- logic for loading more data wrt Standard set amount of data
          IF lv_top IS NOT INITIAL OR lv_skip IS NOT INITIAL.
            /iwbep/cl_mgw_data_util=&amp;gt;paging( EXPORTING is_paging = VALUE #( top  = lv_top
                                                                            skip = lv_skip )
                                             CHANGING  ct_data   = et_final ).
          ENDIF.
*********End of Pagination

          IF io_request-&amp;gt;is_total_numb_of_rec_requested( ).
            io_response-&amp;gt;set_total_number_of_records( lines( et_final ) ). "set number of initial data to display overall
          ENDIF.

          IF io_request-&amp;gt;is_data_requested(  ).
            io_response-&amp;gt;set_data( et_final ). "Set data into the entity
          ENDIF.

        ENDIF.
    ENDCASE.
  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;The aforementioned class plays a crucial role as it encapsulates the entire logic for data processing, including searching, sorting, and most importantly, setting data for our custom entity.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3 : Create Service Definition of the Custom entity&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To create a service definition, simply right-click the custom entity in the Project Explorer, click 'New Service Definition', fill in the required inputs, and your service definition will be created.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service definition'
define service ZSD_MAIN {
  expose ZCE_MAIN;
  expose ZIV_F4MATNR; "This is for ValueHelp Definition, and it's okay not to expose it.
  expose ZIV_F4WERKS;
  expose ZIV_F4STLAN;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;Let's take a look at one of the interface views of the ValueHelpDefinition.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface view for ValueHelpDefinition - MATNR'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity ZIV_F4MATNR
  as select distinct from mast
    left outer join       makt on makt.matnr = mast.matnr
{
         : {  selectionField: [{ position: 10 }] , lineItem: [{ position: 10 }]}
      @EndUserText.label: 'Material No'
  key mast.matnr,
      @Consumption.filter.hidden: true
  key mast.werks,
      @Consumption.filter.hidden: true
  key mast.stlan,
      @Consumption.filter.hidden: true
  key mast.stlal,
      @Consumption.filter.hidden: true
         : {   lineItem: [{ position: 20 }]}
      @EndUserText.label: 'Material Desc'
      makt.maktx
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 4 : Create a Service Binding for the aforementioned service definition.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To create a service binding, simply right-click the created service definition in the Project Explorer, click 'New Service Binding', fill in the required inputs, and your service binding will be created. While creating the Service Binding, I selected OData V2 - UI. Then, activate and publish the service. To view the UI output, you can use the Preview option in Eclipse to see the output as shown in the image below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-02 211818.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322447iD800178661F5E9F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-02 211818.png" alt="Screenshot 2025-10-02 211818.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In conclusion, using RAP with custom entities and pagination facilitates efficient data handling. With UI annotations, you can easily preview and refine the user interface. We hope this guide has been helpful. Stay tuned for more tips!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Note: This program is created for a remote system. For cloud environments, you can use a service consumption model or access data through a remote system API in the implementation class.&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/rap-using-custom-entity-with-load-multiple-data-using-pagination-and/ba-p/14233901"/>
    <published>2025-10-03T06:01:53.175000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/collective-search-help-using-abstract-entity-in-rap/ba-p/14228696</id>
    <title>Collective Search Help Using Abstract Entity in RAP</title>
    <updated>2025-10-03T11:51:37.840000+02:00</updated>
    <author>
      <name>sanjay22</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1535416</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Collective Value Help with Abstract Entity in SAP RAP&lt;/SPAN&gt;&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;SPAN class=""&gt; you can define a Collective Search Help&amp;nbsp;that combines multiple elementary &lt;/SPAN&gt;&lt;SPAN class=""&gt;search&lt;/SPAN&gt;&lt;SPAN class=""&gt; helps. This allows users to choose between different search paths and fetch values from various sources in a single dialog. The same concept is available in SAP Fiori through a Collective Value Help&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;It is implemented using an Abstract &lt;/SPAN&gt;&lt;SPAN class=""&gt;Entity that&lt;/SPAN&gt;&lt;SPAN class=""&gt; aggregates multiple elementary value helps and defines potential field mappings&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;An Abstract Entity does not hold data. Instead, it acts as a container for the Collective Search Help. This means it only groups together multiple elementary value helps and defines how they are mapped, without storing any business data itself.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The Collective Value Help shall be annotated with &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;@ObjectModel.collectiveValueHelp.for.element&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; pointing to the field for which the collective value help is defined.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The referenced field must be assigned at least one elementary value help using the annotation &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;@Consumption.valueHelpDefinition.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;This setup ensures that your Collective Value Help aggregates multiple search options seamlessly for end-users.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Only specific keywords are allowed in a collective value help:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Entity.name&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Entity. Element&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;additional Binding local Element&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;additional Binding. Element qualifier&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Qualifier&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Create a&amp;nbsp;Abstract Entity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abstract entity'
@ObjectModel.supportedCapabilities: [ #COLLECTIVE_VALUE_HELP ]
@ObjectModel.collectiveValueHelp.for.element: 'Country'
define abstract entity ZSM_ABSTRACT_CDS_ENTITY

{
  @Consumption.valueHelpDefinition: [
  {
       entity: { name: 'I_Country' },
       label: 'Search by Country'
  },
   {
      entity: {
      name: 'I_RegionVH',
      element: 'Country'
  },
  additionalBinding: [{ localElement: 'Region', element: 'Region' }],
  label   : 'Search by Region',
  qualifier: 'Regionsearch'
   }
   ]
  Country : land1;
  Region  : regio;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_0-1758879930864.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320249i89C882018112B8B7/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_0-1758879930864.png" alt="sanjay22_0-1758879930864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;@ObjectModel.CollectiveValueHelp.for.element &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;→&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Specifies the field (Country) for which the collective value help is defined.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;The Abstract Entity (&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;zsm_abstract_cds_entity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;) &amp;nbsp;acts as a container, not holding data itself. acts as a Consumption value Help Definition search paths Defines multiple Search by Country (default value help) (alternative path with additional Search by Region binding to Region.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;@&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Consumption.valueHelpDefintion &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;→ Defines multiple search paths :&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Search by Country( default Value Help )&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Search by Region( Alternate path with additional binding to Region )&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create an Interface View&lt;/SPAN&gt;&lt;SPAN class=""&gt; on Database Table&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_0-1758880109210.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320250i35C6CA50B680760A/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_0-1758880109210.png" alt="sanjay22_0-1758880109210.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Assign a Value Help for the Country field inside a &lt;/SPAN&gt;&lt;SPAN class=""&gt;Metadata Extension&lt;/SPAN&gt;&lt;SPAN class=""&gt; CDS.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_1-1758880183958.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320251iCD87357B0371C953/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_1-1758880183958.png" alt="sanjay22_1-1758880183958.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Here Country field uses Collective search &lt;/SPAN&gt;&lt;SPAN class=""&gt;help( ZSM&lt;/SPAN&gt;&lt;SPAN class=""&gt;_I_&lt;/SPAN&gt;&lt;SPAN class=""&gt;TRAVEL) &lt;/SPAN&gt;&lt;SPAN class=""&gt;with&lt;/SPAN&gt;&lt;SPAN class=""&gt; binding to &lt;/SPAN&gt;&lt;SPAN class=""&gt;Region&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Behavior Definition for the above Interface View.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_2-1758880250069.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320252i495BFA8BE3403846/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_2-1758880250069.png" alt="sanjay22_2-1758880250069.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Projection View for the Above Interface view&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_0-1758880409200.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320255iBBBDF9FB40C44CFE/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_0-1758880409200.png" alt="sanjay22_0-1758880409200.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Behavior Definition for the Interface View&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_1-1758880499246.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320256i0DAD0BA5C278B5F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_1-1758880499246.png" alt="sanjay22_1-1758880499246.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Service Binding &lt;/SPAN&gt;&lt;SPAN class=""&gt;( OData&lt;/SPAN&gt;&lt;SPAN class=""&gt; – V&lt;/SPAN&gt;&lt;SPAN class=""&gt;4 )&lt;/SPAN&gt;&lt;SPAN class=""&gt; to expose the Entity &lt;/SPAN&gt;&lt;SPAN class=""&gt;( ZSM&lt;/SPAN&gt;&lt;SPAN class=""&gt;_C_&lt;/SPAN&gt;&lt;SPAN class=""&gt;TRAVEL )&lt;/SPAN&gt; &lt;SPAN class=""&gt;to the front end.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_2-1758880554639.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320257i45126292733C4314/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_2-1758880554639.png" alt="sanjay22_2-1758880554639.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;F4 for Country Field – Search by Country&lt;/SPAN&gt;&lt;SPAN class=""&gt;, Search by region two value help screen.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_3-1758880593273.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320258i131D140173B03D26/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_3-1758880593273.png" alt="sanjay22_3-1758880593273.png" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/collective-search-help-using-abstract-entity-in-rap/ba-p/14228696"/>
    <published>2025-10-03T11:51:37.840000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/validation-in-draft-with-state-messages-in-rap/ba-p/14228996</id>
    <title>Validation in Draft with State Messages in RAP</title>
    <updated>2025-10-03T16:34:11.013000+02:00</updated>
    <author>
      <name>harsh_raj1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/152044</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;When we build applications using the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ABAP RESTful Application Programming Model (RAP)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, one of the big advantages is the ability to work with &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;draft-enabled business objects&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. Draft handling lets users edit data, save it temporarily, and only activate it when they’re ready.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;But here’s the catch: even in draft mode, we can’t allow &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;just anything&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; to be saved. Business rules still need to be checked. This is where &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;validations with state messages&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; come in. They ensure data quality while giving users clear, contextual feedback right inside the Fiori UI.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this post, I’ll Walk you through how to set up such validations in RAP.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Why do we need validations in draft?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We need validation in a draft&amp;nbsp;to maintain data integrity and consistency throughout the business process by identifying inconsistencies early, providing immediate feedback to the user, and ensuring that data meets business requirements before it becomes active, thereby preventing errors and improving the overall reliability of the system.&amp;nbsp;&lt;/SPAN&gt; &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Ensures Data Integrity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;Validation checks if data entered into a draft is consistent with predefined criteria, preventing the storage of incomplete or incorrect data.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Provides Immediate Feedback&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;Users receive real-time messages indicating any inconsistencies or issues within the draft, allowing them to correct them before committing to the final active state.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Supports Data Consistency&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Validations are triggered at predefined points in the transaction cycle, ensuring that draft instances remain in a consistent and reliable state.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Prevents Business Errors&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;By catching errors in the draft stage, validation prevents them from propagating to the active data, avoiding costly mistakes and ensuring the accuracy of final data.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Enhances User Experience&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;Users are informed about missing or incorrect information, allowing them to modify their input without needing to complete the entire transaction to see the problem.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Facilitates Data Reliability&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;For developers, this means the data that eventually leaves an API can be trusted because it has been validated, leading to simpler and more reliable front-end code.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Validation:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A validation is an optional part of the business object behavior that checks the consistency of business object instances based on trigger conditions.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A validation is implicitly invoked by the business object’s framework if the trigger condition of the validation is fulfilled. Trigger conditions can be&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;modify&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;operations and modified fields. The trigger condition is evaluated at the trigger time, a predefined point during the BO runtime. An invoked validation can reject inconsistent instance data from being saved by passing the keys of failed instances to the corresponding table in the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;FAILED&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;structure. Additionally, a validation can return messages to the consumer by passing them to the corresponding table in the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;REPORTED&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;structure.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Points to be noted:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When working with validations, you have to consider the following runtime specifics:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;In unmanaged scenarios, validations are only supported for draft instances, not for active instances.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;SPAN&gt;The execution order of validations is not fixed. If there is more than one validation triggered by the same condition, you cannot know which validation is executed first.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It is not allowed to use EML modify statements in validations.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In a managed scenario with draft, it is strongly recommended to assign validations to the PREPARE, so that state messages from the validations are returned correctly to the consumer.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Messages in RAP:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;State Messages:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;State messages refer to a business object instance and its values.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;State messages must be always bound to a business object instance.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;You mustn’t define state messages in an action or function added on projection level(Dump).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Draft Scenario, They’re persisted until the state that caused the message is changed.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Managed scenario, the messages are buffered until the end of the session.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If a validation returns an error message regarding an incorrect value in a field,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The state message persisted until the value is changed and the save sequence is &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Triggered again.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Using State messages is only recommended for the following cases:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Business object with draft capabilities: Determinations and validation that are &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Allocated to the prepare or a determine action.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Unmanaged Business Object: Finalize/check before save code exit.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Managed Scenario: Determination/validation on save.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Transition Messages:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Refers to the current Request.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It can either be bound or unbound (not related to business object instances).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;      APPEND VALUE #( %tky = &amp;lt;ls_keys&amp;gt;-%tky
                     %msg = NEW /dmo/cm_flight_messages(
                        textid   = /dmo/cm_flight_messages=&amp;gt;discount_invalid
                        severity = if_abap_behv_message=&amp;gt;severity-error
      )                 %element-bookingfee = if_abap_behv=&amp;gt;mk-on
                       %action-deductdiscount =  if_abap_behv=&amp;gt;mk-on )
                       TO reported-zr_travel_d1.&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;        APPEND VALUE #( %msg      = new_message_with_text(
                        severity = if_abap_behv_message=&amp;gt;severity-error
                        text = 'operation not authorized!' ) )
                        TO reported-zr_travel_d1.&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    APPEND VALUE #(
            %tky                = booking-%tky
            %state_area         = 'VALIDATE_CUSTOMER'
            %msg                = NEW /dmo/cm_flight_messages( textid   = /dmo/cm_flight_messages=&amp;gt;enter_customer_id
                                                               severity = if_abap_behv_message=&amp;gt;severity-error )
            %path               = VALUE #( zR_Travel_D1-%tky = travel_booking_links[
                                                                   KEY id
                                                                   source-%tky = booking-%tky ]-target-%tky )
            %element-CustomerID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_booking_d1.&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Trigger condition can be: CUD operation or modified fields(Update for validation is only &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Supported in combination with create).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; validation validateCustomer on save { create; field CustomerID; }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Trigger Time:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Validation on save are executed:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In the check Before save method of the save sequence.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;On request by executing a determine action, if the validation has been assigned to&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Such an action in the behavior definition. For more information, see Determine Actions.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_5-1758884065427.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320421iEF8CD1D080ED6C91/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_5-1758884065427.png" alt="harsh_raj1_5-1758884065427.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For making the validation you have to make field as mandatory.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;field&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;(&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;mandatory&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;CustomerID&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;validation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;validateCustomer&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;on&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;save&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;{&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;create;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;field&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;CustomerID&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;;}&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Give &lt;/SPAN&gt;&lt;SPAN&gt;implementation for&amp;nbsp;validatecustomer&amp;nbsp;method in local handler class.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;When we are working with state messages in RAP first we need to invalidate it without msg and later&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If needed, we can validate with msg.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;      APPEND VALUE #( %tky        = travel-%tky
                      %state_area = 'VALIDATE_CUSTOMER' )
             TO reported-zr_travel_d1.&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Adding back with msg:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If we remove state area it will become transaction message.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;      IF travel-CustomerID IS INITIAL.
        APPEND VALUE #( %tky = travel-%tky ) TO failed-zr_travel_d1.

        APPEND VALUE #( %tky                = travel-%tky
                        %state_area         = 'VALIDATE_CUSTOMER'
                        %msg                = NEW /dmo/cm_flight_messages(
                                                      textid   = /dmo/cm_flight_messages=&amp;gt;enter_customer_id
                                                      severity = if_abap_behv_message=&amp;gt;severity-error )
                        %element-CustomerID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_travel_d1.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;On Fiori app:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we can see Customerid is 1 and it’s a valid value so it will not through any error &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Message whenever user click enter or save button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_8-1758884118570.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320425iC029A38130842A81/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_8-1758884118570.png" alt="harsh_raj1_8-1758884118570.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;Now I will edit it and pass some invalid value. See how it behaves.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;@Consumption.valueHelpDefinition:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;[{entity:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;{name:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;'/DMO/I_Customer_StdVH',&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;element:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;'CustomerID'&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;},&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;useForValidation:&amp;nbsp;true&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;}]&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Here am not using use for validation : true that’s why if user click on enter it will not throw any error message it will only throw error message when &amp;nbsp;User click on save button.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_9-1758884118573.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320429iB4D0F878C6A572B9/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_9-1758884118573.png" alt="harsh_raj1_9-1758884118573.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now i have added use for validation: true.&amp;nbsp;&lt;/P&gt;&lt;P&gt;See it will validate when user click on enter as well.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_10-1758884118575.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320430i2B4981D90DA5D176/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_10-1758884118575.png" alt="harsh_raj1_10-1758884118575.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;These messages are coming from read after performing&amp;nbsp; modify.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_11-1758884118576.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320428iDB8103322D917B99/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_11-1758884118576.png" alt="harsh_raj1_11-1758884118576.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As we are reading from parent entity travel for booking.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here are minor changes in validation from travel customer validation.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Apart from this most of the things are similar.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;%path is different and link data.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    READ ENTITIES OF zR_Travel_D1 IN LOCAL MODE
         ENTITY zr_booking_d1
         FIELDS ( CustomerID )
         WITH CORRESPONDING #( keys )
         RESULT DATA(bookings).&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    READ ENTITIES OF zR_Travel_D1 IN LOCAL MODE
         ENTITY zr_booking_d1 BY \_Travel1
         FROM CORRESPONDING #( bookings )
         LINK DATA(travel_booking_links).&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;            %path               = VALUE #( zR_Travel_D1-%tky = travel_booking_links[
                                                                   KEY id
                                                                   source-%tky = booking-%tky ]-target-%tky )
            %element-CustomerID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_booking_d1.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;For Booking:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Am not using here this annotation so here it's not validating at frontend with enter.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It will validate once user click on save button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_14-1758884118579.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320433i35F61C1F60FFA47E/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_14-1758884118579.png" alt="harsh_raj1_14-1758884118579.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I will pass incorrect value for&amp;nbsp;custoimerid.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;See what happen:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_15-1758884118580.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320435iD5879396589589F6/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_15-1758884118580.png" alt="harsh_raj1_15-1758884118580.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It is accepting while click on&amp;nbsp;enter.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It is giving error only after press save button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_16-1758884118581.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320434i0428B600F861A05E/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_16-1758884118581.png" alt="harsh_raj1_16-1758884118581.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Even if&amp;nbsp;customerid&amp;nbsp;is mandatory field it will accept empty value when we hit enter&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It will validate only after click on save button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_17-1758884118582.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320436i5EB8BCB53BA79A5D/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_17-1758884118582.png" alt="harsh_raj1_17-1758884118582.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_18-1758884118583.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320439i737C56412366A804/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_18-1758884118583.png" alt="harsh_raj1_18-1758884118583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;For Booking Supplement&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here am not passing any value and if we click on save button validation will be&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Trigger and throw&amp;nbsp;a&amp;nbsp;error message as Enter a&amp;nbsp;ProductID.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_19-1758884118584.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320438iDF194310794B3A8E/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_19-1758884118584.png" alt="harsh_raj1_19-1758884118584.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_20-1758884118585.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320437iDDAFCD19F0616B34/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_20-1758884118585.png" alt="harsh_raj1_20-1758884118585.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If&amp;nbsp;ProductID&amp;nbsp;it is wrong, it will throw error message as&amp;nbsp;ProductID&amp;nbsp;is unknown.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_21-1758884118586.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320442iC7CCFBC722AD47B9/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_21-1758884118586.png" alt="harsh_raj1_21-1758884118586.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_22-1758884118586.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320440i72F821F6D1A40646/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_22-1758884118586.png" alt="harsh_raj1_22-1758884118586.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Things needs to define:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In behavior definition:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;field ( mandatory ) SupplementID;
  validation validateSupplement on save { create; field SupplementID; }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;In local handler class&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we need to link both parent and child as it is grandchild entity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    READ ENTITIES OF zR_Travel_D1 IN LOCAL MODE
         ENTITY ZR_BookingSupplement_D1 BY \_Booking1
         FROM CORRESPONDING #( bookingsupplements )
         LINK DATA(booksuppl_booking_links).&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    READ ENTITIES OF zR_Travel_D1 IN LOCAL MODE
         ENTITY ZR_BookingSupplement_D1 BY \_Travel1
         FROM CORRESPONDING #( bookingsupplements )
         LINK DATA(booksuppl_travel_links).&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;            %path                 = VALUE #(
                zr_booking_d1-%tky = booksuppl_booking_links[ KEY id
                                                             source-%tky = &amp;lt;bookingsupplement&amp;gt;-%tky ]-target-%tky
                zR_Travel_D1-%tky  = booksuppl_travel_links[  KEY id
                                                            source-%tky = &amp;lt;bookingsupplement&amp;gt;-%tky ]-target-%tky )
            %element-SupplementID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_bookingsupplement_d1.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;These highlighted lines such as path are different from travel and booking entity as this is a type&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Of grandchild entity. So we have to link with both entity parent such as travel and child such as booking.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;            %path               = VALUE #(
                zR_Travel_D1-%tky = travel_booking_links[ KEY id
                                                          source-%tky = booking-%tky ]-target-%tky )
            %element-CustomerID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_booking_d1.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/validation-in-draft-with-state-messages-in-rap/ba-p/14228996"/>
    <published>2025-10-03T16:34:11.013000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/extensibility-in-the-age-of-ai-why-abcd-is-easier-and-smarter-than-you/ba-p/14234516</id>
    <title>Extensibility in the Age of AI: Why ABCD Is Easier (and Smarter) Than You Think</title>
    <updated>2025-10-03T20:04:58.498000+02:00</updated>
    <author>
      <name>Sonal_Gupta</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/789731</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;The CTO’s Concern&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Not long ago, during a client conversation, a CTO expressed a concern that resonated deeply:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;“We need to extend our system. But every time someone says ‘let’s customize this,’ I feel we’re piling risk. And now with AI coming, I’m afraid our mess gets worse.”&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;That statement captures the heart of a challenge many SAP customers face. Customization has been both the &lt;STRONG&gt;strength&lt;/STRONG&gt; and the &lt;STRONG&gt;Achilles’ heel&lt;/STRONG&gt; of enterprise landscapes. It allows us to adapt, innovate, and differentiate — but it often comes with &lt;STRONG&gt;technical debt, upgrade pain, and hidden complexity&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why Extensibility Matters More in the AI Era&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s pause here. Ten years ago, if you added a Z-table or tweaked a user exit, the worst-case scenario was some testing pain during an upgrade. Today?&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If your data model is inconsistent, your AI forecasts won’t align with reality.&lt;/LI&gt;&lt;LI&gt;If your logic is buried in old exits, Joule copilots can’t “see” your processes.&lt;/LI&gt;&lt;LI&gt;If your core is brittle, cloud updates feel like risks, not opportunities.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In other words: &lt;STRONG&gt;extensibility is no longer just about “making it work.” It’s about making AI possible.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;And now, with &lt;STRONG&gt;SAP’s AI ambitions&lt;/STRONG&gt; accelerating — embedded copilots, Joule agents, and business data clouds powering predictive intelligence — the &lt;STRONG&gt;messy customizations of the past&lt;/STRONG&gt; risk becoming blockers for the future.&lt;/P&gt;&lt;P&gt;This is where &lt;STRONG&gt;ABCD extensibility&lt;/STRONG&gt; comes in. Far from being abstract jargon, it’s a &lt;STRONG&gt;practical compass&lt;/STRONG&gt; to guide enterprises on &lt;EM&gt;how to extend the system smartly, safely, and in a way that enables AI instead of hindering it&lt;/EM&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The ABCD Levels: A Human Explanation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP’s &lt;STRONG&gt;ABCD framework&lt;/STRONG&gt; doesn’t exist to confuse us — it exists to &lt;STRONG&gt;help customers navigate the grey space between innovation and stability&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Here’s the official breakdown, with real-world translation:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sonal_Gupta_2-1759511624842.png" style="width: 657px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322697i9B5314686910CB23/image-dimensions/657x442?v=v2" width="657" height="442" role="button" title="Sonal_Gupta_2-1759511624842.png" alt="Sonal_Gupta_2-1759511624842.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;A Short Story: The MV45AFZZ Debate&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Anyone who has worked in SAP Sales and Distribution knows the legendary &lt;STRONG&gt;include MV45AFZZ&lt;/STRONG&gt;. For decades, it’s been the go-to spot for developers to implement custom sales order checks, validations, and logic.&lt;/P&gt;&lt;P&gt;At one client, a senior developer proudly said, &lt;EM&gt;“We’ve been using MV45AFZZ for 15 years, and it works just fine. Why change?”&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;And he wasn’t wrong. In many ways, that’s a &lt;STRONG&gt;Level B extensibility&lt;/STRONG&gt; choice: small, controlled, and serving the business well. (In fact, SAP even documented this in &lt;A href="https://me.sap.com/notes/3578329" target="_blank" rel="noopener noreferrer"&gt;SAP Note 3578329&lt;/A&gt;, proving that not all ‘old-school’ practices are bad.)&lt;/P&gt;&lt;P&gt;The problem comes when dozens of such exits pile up, undocumented, with overlapping logic — and suddenly the system feels like a house of cards.&lt;/P&gt;&lt;P&gt;Here’s the twist: &lt;STRONG&gt;ABCD extensibility is not about banning MV45AFZZ or exits. It’s about putting them in the right place, with the right intent.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The IDoc Question: Clean or Not?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;One of the most common debates I hear is:&amp;nbsp;&lt;EM&gt;“We use IDocs everywhere. Are they clean core?”&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The answer: Yes, IDocs are safe — they fall under Level B.&lt;/P&gt;&lt;P&gt;SAP clarified this in the &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/idocs-are-still-safe-for-sap-s-4hana-sap-clean-core-extensibility-level-b/ba-p/14225439?utm_source=chatgpt.com" target="_blank"&gt;IDoc Clean Core blog&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Why? Because IDocs are:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Officially documented.&lt;/LI&gt;&lt;LI&gt;Supported by SAP.&lt;/LI&gt;&lt;LI&gt;Used for integration and still relevant in S/4HANA.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;That said, if you’re starting a greenfield cloud project, you may want to move toward APIs and Event Mesh (Level A) instead. But if you’ve got an existing landscape with IDocs, don’t panic — they’re not “unclean.”&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Real-World Scenarios: Which Level to Choose?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sonal_Gupta_0-1759511476837.png" style="width: 672px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322695iA385FC19320A58EA/image-dimensions/672x344?v=v2" width="672" height="344" role="button" title="Sonal_Gupta_0-1759511476837.png" alt="Sonal_Gupta_0-1759511476837.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why This Matters for AI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;AI copilots like Joule don’t “guess.” They rely on:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Stable APIs (Level A).&lt;/LI&gt;&lt;LI&gt;Clear data models (A &amp;amp; B).&lt;/LI&gt;&lt;LI&gt;Trusted logic (not buried in Level C/D).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If your system is full of Level D hacks, AI copilots won’t understand your processes. But if you steer toward A and B (with C monitored), you create an AI-ready enterprise.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Closing Thought&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Extensibility is not the villain. Misuse is.&lt;/P&gt;&lt;P&gt;The ABCD framework gives us a shared language:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A when we want innovation + AI without worry.&lt;/LI&gt;&lt;LI&gt;B when proven frameworks like IDocs or MV45AFZZ still serve us.&lt;/LI&gt;&lt;LI&gt;C only if there’s no choice — and we track it closely.&lt;/LI&gt;&lt;LI&gt;D only if we want to leave a headache for the next generation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;So next time someone says &lt;EM&gt;“let’s customize,”&lt;/EM&gt; you don’t need to panic. You just need to ask:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Is this A, B, C, or D? A&lt;/EM&gt;nd that one question can mean the difference between a system that blocks AI — and one that accelerates it.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;#SAPCleanCore&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#SAPExtensibility&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#ABAPCloud&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#SAPAI&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#SAPBTP&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#S4HANACloud&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#IDoc&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/extensibility-in-the-age-of-ai-why-abcd-is-easier-and-smarter-than-you/ba-p/14234516"/>
    <published>2025-10-03T20:04:58.498000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-excel-upload-through-custom-action-popup-no-ui5-extension-no/ba-p/14234872</id>
    <title>ABAP RAP : Excel upload through custom action popup ( No UI5 Extension , No Object Page workaround )</title>
    <updated>2025-10-05T00:52:51.623000+02:00</updated>
    <author>
      <name>Ramjee_korada</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/10276</uri>
    </author>
    <content>&lt;P&gt;A frequent business requirement involves enabling mass changes to business objects via&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Excel uploads&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;executed through a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;custom action popup&lt;/STRONG&gt;. Historically, achieving this functionality has necessitated various workarounds, often involving&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI5 extensions&lt;/STRONG&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;third-party solutions&lt;/STRONG&gt;, or&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Object Page manipulations&lt;/STRONG&gt;, all of which present specific implementation challenges.&lt;/P&gt;&lt;P&gt;The existing workaround approaches present several drawbacks:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Custom UI Extensions:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Require specialized&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI5 development expertise&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Third-Party Solutions:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Introduce risks related to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;licensing compliance&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and potential&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;security vulnerabilities&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Object Page Manipulations:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Involve complex, multi-step processes, such as creating a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;dummy object page&lt;/STRONG&gt;, facilitating file upload, temporarily&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;storing the file data in a table field&lt;/STRONG&gt;, and requiring a final user action (a button press) to initiate processing. This temporary data storage is often&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;unnecessary&lt;/STRONG&gt;, complicating the data model.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;However, SAP has recently introduced&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ABAP / CAP annotations&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;that offer a cloud-ready solution, potentially&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;eliminating approximately 95% of the development effort&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;typically associated with integrating an Excel upload into the backend. This innovation allows developers to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;prioritize implementing core business logic&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;over developing reusable technical artifacts.&lt;/P&gt;&lt;P&gt;I will now detail the implementation steps.&lt;/P&gt;&lt;P&gt;A business requirement to manage &lt;STRONG&gt;mass processing listings for a library&lt;/STRONG&gt; was selected to demonstrate this use case. The implementation requires several steps, with steps 3 through 6 being the &lt;STRONG&gt;special or additional configurations&lt;/STRONG&gt; needed, while all others are considered routine.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_0-1759618459647.png" style="width: 691px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322875i27F4B6363B99B5FA/image-dimensions/691x376?v=v2" width="691" height="376" role="button" title="Ramjee_korada_0-1759618459647.png" alt="Ramjee_korada_0-1759618459647.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1890964802"&gt;Implementation Steps&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;A database table for the &lt;STRONG&gt;listing entity&lt;/STRONG&gt; is created. This involves fields such as &lt;CODE&gt;Id&lt;/CODE&gt;, &lt;CODE&gt;Title&lt;/CODE&gt;, &lt;CODE&gt;Type&lt;/CODE&gt;, and &lt;CODE&gt;Author&lt;/CODE&gt;.&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Library Listings'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zrk_lib_listings {

  key client            : abap.clnt not null;
  key listing_uuid      : sysuuid_x16 not null;
  id                    : abap.numc(10);
  title                 : abap.char(40);
  type                  : abap.char(5);
  author                : abap.char(40);
  publisher_studio      : abap.char(40);
  isbn_ean              : abap.char(40);
  language_code         : abap.lang;
  publication_year      : abap.numc(4);
  description           : abap.char(40);
  totalcopies           : abap.int2;
  available_copies      : abap.int2;
  location_shelf_id     : abap.char(40);
  lending_duration_days : abap.int2;
  status                : abap.char(40);
  cover_image_url       : abap.char(100);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2.&amp;nbsp;A &lt;STRONG&gt;RAP Business Object (BO)&lt;/STRONG&gt;&lt;SPAN&gt; is generated, followed by the requisite &lt;/SPAN&gt;&lt;STRONG&gt;UI artifacts&lt;/STRONG&gt;&lt;SPAN&gt;. The specific RAP BO scenario (Managed, Unmanaged, Draft, or Non-Draft) is noted as not influencing the core Excel upload use case. The &lt;/SPAN&gt;&lt;STRONG&gt;RAP Generator is used&lt;/STRONG&gt;&lt;SPAN&gt;&lt;SPAN&gt; to simplify the demonstration.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_0-1759617725687.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322874iBDE9FF5181449404/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ramjee_korada_0-1759617725687.png" alt="Ramjee_korada_0-1759617725687.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. A &lt;STRONG&gt;root&amp;nbsp;abstract entity&lt;/STRONG&gt; is created for the file to be uploaded. (This entity is highly reusable and can be applied across different RAP BOs).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abs. Entity For Attachment'
define root abstract entity ZRK_D_FILE_STREAM
{
  @Semantics.largeObject.mimeType: 'MimeType'
  @Semantics.largeObject.fileName: 'FileName'
  @Semantics.largeObject.contentDispositionPreference: #INLINE
  @EndUserText.label: 'Select Excel file'
  StreamProperty : abap.rawstring(0);
  
  .hidden: true
  MimeType : abap.char(128);
  
  .hidden: true
  FileName : abap.char(128);   
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4. The &lt;STRONG&gt;abstract behavior definition&lt;/STRONG&gt; for the file entity is implemented.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;abstract;
strict(2);
with hierarchy;
define behavior for ZRK_D_FILE_STREAM {
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5. A second &lt;STRONG&gt;abstract entity is created&lt;/STRONG&gt; to serve as an action parameter. This entity includes an association to the file abstract entity (from Step 3).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Action Param for Uploading Excel'
define root abstract entity ZRK_D_UPLOAD_EXCEL
{
// Dummy is a dummy field
@UI.hidden: true
dummy : abap_boolean;
     _StreamProperties : association [1] to ZRK_D_FILE_STREAM on 1 = 1;
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6. The &lt;STRONG&gt;abstract behavior definition&lt;/STRONG&gt; for the action parameter is implemented, including the association to the earlier entity.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;abstract;
strict ( 2 );
with hierarchy;
define behavior for ZRK_D_UPLOAD_EXCEL //alias &amp;lt;alias_name&amp;gt;
{
association _StreamProperties with hierarchy;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7. An &lt;STRONG&gt;action is defined&lt;/STRONG&gt; on the RAP BO Behavior definition, with the parameter specified in Step 5.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  static action ExcelUpload deep parameter ZRK_D_UPLOAD_EXCEL ;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class ZRK_BP_R_LIB_LISTINGS unique;
strict ( 2 );
with draft;
extensible;
define behavior for ZRK_R_LIB_LISTINGS alias Listings
persistent table ZRK_LIB_LISTINGS
extensible
draft table ZRK_LIB_LSTNGS_D
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master( global )
{
  field ( readonly )
   ListingUUID,
   LocalCreatedBy,
   LocalCreatedAt,
   LocalLastChangedBy,
   LocalLastChangedAt,
   LastChangedAt;

  field ( numbering : managed )
   ListingUUID;


  create;
  update;
  delete;

  draft action Activate optimized;
  draft action Discard;
  draft action Edit;
  draft action Resume;
  draft determine action Prepare;

  static action ExcelUpload deep parameter ZRK_D_UPLOAD_EXCEL ;

  mapping for ZRK_LIB_LISTINGS corresponding extensible
  {
    ListingUUID = listing_uuid;
    ID = id;
    Title = title;
    Type = type;
    Author = author;
    PublisherStudio = publisher_studio;
    IsbnEan = isbn_ean;
    LanguageCode = language_code;
    PublicationYear = publication_year;
    Description = description;
    Totalcopies = totalcopies;
    AvailableCopies = available_copies;
    LocationShelfID = location_shelf_id;
    LendingDurationDays = lending_duration_days;
    Status = status;
    CoverImageUrl = cover_image_url;
    LocalCreatedBy = local_created_by;
    LocalCreatedAt = local_created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt = last_changed_at;
  }

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8. The &lt;STRONG&gt;business logic is implemented&lt;/STRONG&gt; to read the Excel content. A released API, XCO_CP_XLSX&amp;nbsp;&lt;FONT color="#000000"&gt;,&lt;/FONT&gt; is used for this demonstration.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; METHOD ExcelUpload.
    TYPES : BEGIN OF ty_sheet_data,
              id                  TYPE zrk_r_lib_listings-id,
              title               TYPE zrk_r_lib_listings-title,
              type                TYPE zrk_r_lib_listings-Type,
              author              TYPE zrk_r_lib_listings-author,
              PublisherStudio     TYPE zrk_r_lib_listings-PublisherStudio,
              IsbnEan             TYPE zrk_r_lib_listings-IsbnEan,
              LanguageCode        TYPE zrk_r_lib_listings-LanguageCode,
              PublicationYear     TYPE zrk_r_lib_listings-PublicationYear,
              description         TYPE zrk_r_lib_listings-Description,
              Totalcopies         TYPE zrk_r_lib_listings-Totalcopies,
              AvailableCopies     TYPE zrk_r_lib_listings-AvailableCopies,
              LocationShelfID     TYPE zrk_r_lib_listings-LocationShelfID,
              LendingDurationDays TYPE zrk_r_lib_listings-LendingDurationDays,
              status              TYPE zrk_r_lib_listings-Status,
            END OF ty_sheet_data.

    DATA lv_file_content   TYPE xstring.
    DATA lt_sheet_data     TYPE STANDARD TABLE OF ty_sheet_data.
    DATA lt_listing_create TYPE TABLE FOR CREATE zrk_r_lib_listings.

    lv_file_content = VALUE #( keys[ 1 ]-%param-_streamproperties-StreamProperty OPTIONAL ).

    " Error handling in case file content is initial

    DATA(lo_document) = xco_cp_xlsx=&amp;gt;document-&amp;gt;for_file_content( lv_file_content )-&amp;gt;read_access( ).

    DATA(lo_worksheet) = lo_document-&amp;gt;get_workbook( )-&amp;gt;worksheet-&amp;gt;at_position( 1 ).

    DATA(o_sel_pattern) = xco_cp_xlsx_selection=&amp;gt;pattern_builder-&amp;gt;simple_from_to(
      )-&amp;gt;from_column( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_alphabetic_value( 'A' )  " Start reading from Column A
      )-&amp;gt;to_column( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_alphabetic_value( 'N' )   " End reading at Column N
      )-&amp;gt;from_row( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_numeric_value( 2 )    " *** Start reading from ROW 2 to skip the header ***
      )-&amp;gt;get_pattern( ).

    lo_worksheet-&amp;gt;select( o_sel_pattern
                                     )-&amp;gt;row_stream(
                                     )-&amp;gt;operation-&amp;gt;write_to( REF #( lt_sheet_data )
                                     )-&amp;gt;set_value_transformation(
                                         xco_cp_xlsx_read_access=&amp;gt;value_transformation-&amp;gt;string_value
                                     )-&amp;gt;execute( ).

    lt_listing_create = CORRESPONDING #( lt_sheet_data ).

    MODIFY ENTITIES OF zrk_r_lib_listings IN LOCAL MODE
           ENTITY Listings
           CREATE AUTO FILL CID FIELDS ( Id Title Type author PublisherStudio IsbnEan LanguageCode PublicationYear description Totalcopies AvailableCopies LocationShelfID LendingDurationDays status )
           WITH lt_listing_create
           " TODO: variable is assigned but never used (ABAP cleaner)
           MAPPED DATA(lt_mapped)
           " TODO: variable is assigned but never used (ABAP cleaner)
           REPORTED DATA(lt_reported)
           " TODO: variable is assigned but never used (ABAP cleaner)
           FAILED DATA(lt_failed).

    " Communicate the messages to UI - not in scope of this demo
    IF lt_failed IS INITIAL.
      APPEND VALUE #( %msg = new_message_with_text( severity = if_abap_behv_message=&amp;gt;severity-success
                                                    text     = 'Listings have been uploaded - please refresh the list!!' ) )
             TO reported-listings.
    ENDIF.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9. The action is utilized on the &lt;STRONG&gt;projection behavior&lt;/STRONG&gt; and subsequently exposed in the &lt;STRONG&gt;metadata extension&lt;/STRONG&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  use action ExcelUpload;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection implementation in class ZRK_BP_C_LIB_LISTINGS unique;
strict ( 2 );
extensible;
use draft;
use side effects;
define behavior for ZRK_C_LIB_LISTINGS alias Listings
extensible
use etag
{
  use create;
  use update;
  use delete;

  use action Edit;
  use action Activate;
  use action Discard;
  use action Resume;
  use action Prepare;

  use action ExcelUpload;

}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;.lineItem: [{ type:#FOR_ACTION , dataAction: 'ExcelUpload' , label: 'Upload Excel' }]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;10. The &lt;STRONG&gt;service binding is published&lt;/STRONG&gt;, and the application is then ready for execution.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_2-1759616768674.png" style="width: 739px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322868iF1985AA5BDD03A2A/image-dimensions/739x181?v=v2" width="739" height="181" role="button" title="Ramjee_korada_2-1759616768674.png" alt="Ramjee_korada_2-1759616768674.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_3-1759616871331.png" style="width: 721px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322869i040F7DA1CC5515C5/image-dimensions/721x392?v=v2" width="721" height="392" role="button" title="Ramjee_korada_3-1759616871331.png" alt="Ramjee_korada_3-1759616871331.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_4-1759616921974.png" style="width: 720px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322870i5364BBC5623F81B7/image-dimensions/720x117?v=v2" width="720" height="117" role="button" title="Ramjee_korada_4-1759616921974.png" alt="Ramjee_korada_4-1759616921974.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_5-1759617464764.png" style="width: 743px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322872i185A7C14C9E33C7E/image-dimensions/743x390?v=v2" width="743" height="390" role="button" title="Ramjee_korada_5-1759617464764.png" alt="Ramjee_korada_5-1759617464764.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_6-1759617503382.png" style="width: 736px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322873iF922947957F6C08B/image-dimensions/736x407?v=v2" width="736" height="407" role="button" title="Ramjee_korada_6-1759617503382.png" alt="Ramjee_korada_6-1759617503382.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1694451297"&gt;Note:&lt;/H3&gt;&lt;P&gt;This feature is currently &lt;STRONG&gt;functional on the BTP ABAP Environment&lt;/STRONG&gt;. However, an issue appears to exist with metadata generation on &lt;STRONG&gt;S/4HANA 2023 On-Premise&lt;/STRONG&gt; deployments, even though the objects are syntactically correct. It is anticipated that this constraint will be addressed in the &lt;STRONG&gt;S/4HANA 2025 release&lt;/STRONG&gt;, making the full feature set available on the S/4HANA On-Premise version following a brief waiting period.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-excel-upload-through-custom-action-popup-no-ui5-extension-no/ba-p/14234872"/>
    <published>2025-10-05T00:52:51.623000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-expands-to-private-cloud-accelerating-abap/ba-p/14237958</id>
    <title>SAP Joule for Developers Expands to Private Cloud:  Accelerating ABAP Innovation and Transformation</title>
    <updated>2025-10-08T10:27:45.674000+02:00</updated>
    <author>
      <name>lienards</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/227111</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1761972361"&gt;&lt;STRONG&gt;Key Highlights&lt;/STRONG&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Joule for Developers, ABAP AI capabilities&lt;/STRONG&gt; are now available in &lt;STRONG&gt;SAP S/4HANA Private Cloud Edition &lt;/STRONG&gt;&lt;STRONG&gt;2025&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;New &lt;STRONG&gt;Custom Code Migration &lt;/STRONG&gt;capabilities accelerate the transformation of classic ERP code to &lt;STRONG&gt;S/4HANA Cloud Private Edition&lt;/STRONG&gt;, including:&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Documentation Chat &lt;/STRONG&gt;- Get accurate answers on SAP S/4HANA simplifications.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;ABAP Program Explain &lt;/STRONG&gt;-&amp;nbsp;Understand the business purpose and logic of legacy code.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Explain&lt;/STRONG&gt;&lt;STRONG&gt; for SAP S/4HANA Test Cockpit Issues &lt;/STRONG&gt;-&amp;nbsp;Diagnose and resolve S/4HANA-related Test Cockpit issues using context from simplification items and cookbooks.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Earlier this year, SAP introduced &lt;STRONG&gt;Joule for Developers&lt;/STRONG&gt; — a set of embedded artificial intelligence capabilities in SAP Build, including ABAP, that helps developers accelerate application and extension development, reduce costs, and boost productivity.&lt;/P&gt;&lt;P&gt;Joule for Developers, ABAP AI capabilities are now available for S/4HANA Private Cloud Edition, version 2025, providing comprehensive support for ABAP Cloud use cases. The release also introduces the first Custom Code Migration capabilities, bringing a powerful suite of AI-assisted capabilities purpose-built for ABAP development and cloud delivery.&lt;/P&gt;&lt;P&gt;Best of all, Joule for Developers remains free of charge, enabling customers and partners to integrate it into daily operations and accelerate innovation without commercial barriers.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1565458856"&gt;&lt;STRONG&gt;What’s Included&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This release for Private Cloud delivers AI-powered support for the core development scenarios ABAP developers rely on every day. Key capabilities include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;inline code completion,&lt;/LI&gt;&lt;LI&gt;ABAP/CDS code explanation,&lt;/LI&gt;&lt;LI&gt;automated unit test generation for ABAP and ABAP core data services (CDS),&lt;/LI&gt;&lt;LI&gt;RAP business objects generation,&lt;/LI&gt;&lt;LI&gt;RAP predictive business logic, and&lt;/LI&gt;&lt;LI&gt;OData consumption.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All capabilities are designed to accelerate development, improve code quality, and boost productivity from day one. Additionally, this release introduces the first wave of&lt;STRONG&gt; Custom Code Migration capabilities&lt;/STRONG&gt;, designed to accelerate the move from classic SAP ERP to &lt;STRONG&gt;SAP S/4HANA Cloud Private Cloud Edition&lt;/STRONG&gt;. These AI-powered features simplify code analysis and adaptation by:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Providing &lt;STRONG&gt;Documentation Chat&lt;/STRONG&gt; for quick answers on SAP S/4HANA simplifications:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lienards_0-1759907233424.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324475i606AD92C02DAE239/image-size/large?v=v2&amp;amp;px=999" role="button" title="lienards_0-1759907233424.png" alt="lienards_0-1759907233424.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Using &lt;STRONG&gt;ABAP Program Explain&lt;/STRONG&gt; to clarify the business purpose and implementation logic of legacy code:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lienards_1-1759907233436.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324473iC9A1BA70B925AFD7/image-size/large?v=v2&amp;amp;px=999" role="button" title="lienards_1-1759907233436.png" alt="lienards_1-1759907233436.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Explaining &lt;STRONG&gt;ABAP Test Cockpit (ATC) findings&lt;/STRONG&gt; with step-by-step guidance on how to fix the issues, based on simplification items and technical documentation:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lienards_2-1759907233449.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324474i74D164B2F8FB58F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="lienards_2-1759907233449.png" alt="lienards_2-1759907233449.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;All capabilities are designed to reduce manual effort, speed up migration projects, and help your teams to modernize their ABAP landscapes with great confidence.&lt;/P&gt;&lt;P&gt;The ABAP AI software development kit, powered by Intelligent Scenario Lifecycle Management, is now available and offers centralized access to the generative AI hub in SAP AI Core. It leverages the same robust platform SAP uses internally, delivering proven, production-grade infrastructure to customer landscapes. With simplified configuration and governance, development teams can adopt AI capabilities quickly, providing a significant boost to integration efforts.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1368945351"&gt;&lt;STRONG&gt;Why This Matters &lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Private cloud customers require strict governance, security, and operational control - yet they also seek the speed and innovation modern AI-driven development delivers. This release addresses both priorities by enabling:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;faster development cycles&lt;/STRONG&gt; with AI-assisted coding and test generation,&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;stronger knowledge transfer&lt;/STRONG&gt; through automated code explanations and copilot interactions,&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;higher delivery quality&lt;/STRONG&gt; with automated testing and code migration support, and&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;secure innovation&lt;/STRONG&gt; within controlled environments.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1172431846"&gt;&lt;STRONG&gt;Looking Ahead&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;We’re building on this momentum with a series of targeted deliveries aligned to upcoming releases across the BTP ABAP Environment and S/4HANA Cloud Public Edition. Planned updates for &lt;STRONG&gt;BTP ABAP Environment 2511, 2602&lt;/STRONG&gt;, and &lt;STRONG&gt;S/4HANA Cloud Public Edition 2602&lt;/STRONG&gt; include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;documentation generation capabilities,&lt;/LI&gt;&lt;LI&gt;enhanced explanations for reports in the Custom Code Migration application,&lt;/LI&gt;&lt;LI&gt;AI-enabled insights on Clean Core–related ATC findings directly within the Custom Code Migration application,&lt;/LI&gt;&lt;LI&gt;code migration and adaptation proposals to support developers working on RISE code adaptation,&lt;/LI&gt;&lt;LI&gt;ABAP CDS annotation and metadata extension generation, and&lt;/LI&gt;&lt;LI&gt;ABAP CDS analytical model generation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These enhancements will extend Joule’s impact beyond code completion and test generation, supporting documentation, migration and Clean Core compliance, analytical use cases, and addressing more stages of the end-to-end development lifecycle.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-975918341"&gt;&lt;STRONG&gt;Free Offer Extended&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;SAP Joule for Developers will remain &lt;STRONG&gt;free of charge.&lt;/STRONG&gt; The extended promotion ensures that all customers and partners can continue to use Joule for Developers capabilities for free.&lt;/P&gt;&lt;P&gt;Access can be requested using the material numbers &lt;STRONG&gt;8019124&lt;/STRONG&gt; (customers) and &lt;STRONG&gt;8019541&lt;/STRONG&gt; (TDD partners). This offer now extends beyond the BTP ABAP environment and SAP Cloud ERP Public Edition to include &lt;STRONG&gt;SAP Cloud ERP Private Edition&lt;/STRONG&gt; customers running the latest 2025 release.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-779404836"&gt;&lt;STRONG&gt;Closing Remarks&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;SAP Joule for Developers’ delivery for Private Cloud is a significant milestone — combining end-to-end ABAP Cloud with AI use cases, innovative code migration scenarios, and a standardized ABAP AI SDK to bring practical AI assistance directly into everyday development workflows.&lt;/P&gt;&lt;P&gt;With extended free of charge access, we invite every customer and partner to explore SAP Joule for Developers, push its boundaries, and help shape the future of AI-assisted ABAP development.&lt;/P&gt;&lt;P&gt;Start using SAP Joule for Developers today and join us in building the next generation of intelligent, AI-driven ABAP innovation.&lt;/P&gt;&lt;P&gt;For a deeper dive, read the &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-ai-revolution-accelerates-the-abap-developer-who-built-enterprise-apps/ba-p/14216073" target="_blank"&gt;blog post&lt;/A&gt; by Simona Marincei, head of ABAP AI.&lt;/P&gt;&lt;P&gt;Learn more about SAP Joule for Developers capabilities &lt;A href="https://www.sap.com/products/artificial-intelligence/joule-for-developers.html" target="_blank" rel="noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-expands-to-private-cloud-accelerating-abap/ba-p/14237958"/>
    <published>2025-10-08T10:27:45.674000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-abap-ai-capabilities-for-sap-s-4hana-cloud-private/ba-p/14236954</id>
    <title>SAP Joule for Developers, ABAP AI capabilities for SAP S/4HANA Cloud Private Edition 2025</title>
    <updated>2025-10-08T12:44:10.622000+02:00</updated>
    <author>
      <name>SebastianBaskovich</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/10947</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Hi folks, &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Joule for Developers, ABAP AI capabilities are now also available for SAP S/4HANA Cloud Private Edition 2025.&lt;BR /&gt;The ABAP AI license materials for SAP S/4HANA Cloud Private Edition 2025 are the same as for SAP BTP ABAP Environment &amp;amp; SAP S/4HANA Public Cloud. For more information, please check out the following SAP Note&amp;nbsp;&lt;A href="https://me.sap.com/notes/3571857" target="_blank" rel="noopener noreferrer"&gt;3571857&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below, you can find a step-by-step guide on how to activate SAP Joule for Developers, ABAP AI capabilities in your SAP S/4HANA Cloud Private Edition 2025 system. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Have fun and stay tuned for TechEd soon!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Best,&lt;BR /&gt;Sebastian&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1761942566"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1565429061"&gt;Prerequisites&lt;/H2&gt;&lt;P&gt;You have a customer account on &lt;STRONG&gt;SAP Business Technology Platform (BTP) &lt;/STRONG&gt;and a development system on &lt;STRONG&gt;SAP&lt;/STRONG&gt; &lt;STRONG&gt;S/4HANA Cloud Private Edition 2025&lt;/STRONG&gt; and you have prepared the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Subscription to &lt;STRONG&gt;SAP Cloud Identity Services&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Subscription to &lt;STRONG&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Established trust to your &lt;STRONG&gt;SAP Cloud Identity Services tenant &lt;/STRONG&gt;in your BTP Subaccount, see this &lt;A href="•https:/help.sap.com/docs/btp/sap-business-technology-platform/trust-and-federation-with-identity-providers?locale=en-US" target="_blank" rel="noopener nofollow noreferrer"&gt;link&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Your user needs Administrator access to your &lt;STRONG&gt;SAP Cloud Identity Services tenant&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Your system needs to be configured so that it trusts server certificates according to the "required" section of the &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https%3A%2F%2Fgithub.com%2Fsap-software%2Fbtp-trust-store" target="_blank" rel="noopener noreferrer"&gt;BTP Trust Store&lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;LI&gt;Your system needs to use a client certificate issued by a CA listed in the "required" section of the &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https%3A%2F%2Fgithub.com%2Fsap-software%2Fbtp-trust-store" target="_blank" rel="noopener noreferrer"&gt;BTP Trust Store&lt;/A&gt;&lt;/SPAN&gt;. One way to obtain a client certificate can be found on &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/use-destination-certificates?version=Cloud#procedure" target="_blank" rel="noopener noreferrer"&gt;Manage Destination Certificates&lt;/A&gt;&lt;/SPAN&gt; (under "Generate a Certificate").&lt;/LI&gt;&lt;LI&gt;You've successfully applied SAP Note &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https://me.sap.com/notes/3627794" target="_blank" rel="noopener noreferrer"&gt;3627794 &lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;LI&gt;Your ABAP system needs to support TLS 1.3. If TLS 1.3 is not enabled, refer to SAP Note &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https://me.sap.com/notes/3318423" target="_blank" rel="noopener noreferrer"&gt;3318423 &lt;/A&gt;&lt;/SPAN&gt;&amp;nbsp;to activate it.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1368915556"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1172402051"&gt;Configuration steps in your SAP BTP subaccount&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;In your BTP subaccount, navigate to &lt;STRONG&gt;Entitlements&lt;/STRONG&gt;. You’ll see a table with all entitlements it already has.&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Configure Entitlements&lt;/STRONG&gt; &amp;gt; &lt;STRONG&gt;Add Service Plans&lt;/STRONG&gt;. A popover appears with all entitlements available for your directory/subaccount.&lt;/LI&gt;&lt;LI&gt;Select the service &lt;EM&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/EM&gt; and then the plan “default”&lt;/LI&gt;&lt;LI&gt;Select the amount of quota&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Add Service Plans&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Save&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 14.22.42.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323868iDD900DFB152B439E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 14.22.42.png" alt="Screenshot 2025-10-06 at 14.22.42.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Navigate to your subaccount in the SAP BTP cockpit&lt;/LI&gt;&lt;LI&gt;Go to &lt;STRONG&gt;Services &amp;gt; Service Marketplace&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Choose the &lt;EM&gt;SAP Joule for developers, ABAP AI capabilities&lt;/EM&gt; tile.&lt;/LI&gt;&lt;LI&gt;Choose &lt;STRONG&gt;Create&lt;/STRONG&gt; and select Plan &lt;EM&gt;default&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 13.48.40.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323870i4553F8A79364BEF0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 13.48.40.png" alt="Screenshot 2025-10-06 at 13.48.40.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 13.49.01.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323871i40511D518B24DB2A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 13.49.01.png" alt="Screenshot 2025-10-06 at 13.49.01.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;Once the service is created, go to your IAS and navigate to &lt;STRONG&gt;Users &amp;amp; Authorizations &amp;gt; Groups &lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Check that the group&lt;EM&gt; j4d-admin&lt;/EM&gt; was successfully created&lt;/LI&gt;&lt;LI&gt;Add your admin user to the created &lt;EM&gt;j4a-admin&lt;/EM&gt; group&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 16.58.21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323874iEDFF6732B4938C19/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 16.58.21.png" alt="Screenshot 2025-10-06 at 16.58.21.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Navigate to your subaccount in the SAP BTP cockpit&lt;/LI&gt;&lt;LI&gt;In the navigation go to &lt;STRONG&gt;Services&lt;/STRONG&gt; &amp;gt;&lt;STRONG&gt;Instances &amp;amp; Subscriptions&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Choose the &lt;EM&gt;SAP Joule for developers, ABAP AI capabilities&lt;/EM&gt; tile.&lt;/LI&gt;&lt;LI&gt;Click on &lt;STRONG&gt;&lt;STRONG&gt;Go to Application&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 17.28.39.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323877i61DEF73A53C3F81A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 17.28.39.png" alt="Screenshot 2025-10-06 at 17.28.39.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Maintain Certificate Mappings&lt;/STRONG&gt; app should be opened&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 13.56.56.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323878iD40F97D4176DFD17/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 13.56.56.png" alt="Screenshot 2025-10-06 at 13.56.56.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;H2 id="toc-hId-975888546"&gt;Configuration steps in your SAP S/4HANA Cloud Private Edition 2025 system&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;Go to your ABAP system, open the transaction &lt;STRONG&gt;APPLDESTCC&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Select &lt;EM&gt;scenario HTTP - Application Destination &lt;/EM&gt;and click on &lt;STRONG&gt;Execute&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.19.37.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323881i91B18A87610C7552/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.19.37.png" alt="Screenshot 2025-10-07 at 13.19.37.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Next, select &lt;EM&gt;AIC_ADT_HTTP_PROXY&lt;/EM&gt; and open the context menu. Choose &lt;STRONG&gt;Create New Application Destination&lt;/STRONG&gt;. Now, you're asked to enter the details of your application destination.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.20.21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323882i741A6289B0CC9B4D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.20.21.png" alt="Screenshot 2025-10-07 at 13.20.21.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Enter an &lt;STRONG&gt;Application Destination Name&lt;/STRONG&gt; of your choice and select the check mark.&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.21.49.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323886i24AFC5D420577B9A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.21.49.png" alt="Screenshot 2025-10-07 at 13.21.49.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Now, first enter a &lt;STRONG&gt;Description&lt;/STRONG&gt; and select the checkboxes &lt;STRONG&gt;Active&lt;/STRONG&gt; and &lt;STRONG&gt;Default&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.24.31.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323887iF167EBE198EF10A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.24.31.png" alt="Screenshot 2025-10-07 at 13.24.31.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Fill in the information in the &lt;STRONG&gt;Technical Settings&lt;/STRONG&gt; tab:&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Target System Settings: In the Host field, enter &lt;EM&gt;&lt;A href="https://proxy" target="_blank" rel="noopener nofollow noreferrer"&gt;https://proxy&lt;/A&gt;.&amp;lt;your region&amp;gt;.hub.j4a.services.sap.&lt;/EM&gt; As &lt;STRONG&gt;Protocol&lt;/STRONG&gt;, select &lt;STRONG&gt;HTTPS&lt;/STRONG&gt;&lt;EM&gt;.&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;(Optional) HTTP Proxy Options: This information is not mandatory.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt; &lt;EM&gt;The region you enter in &lt;SPAN&gt;&lt;A href="https://proxy" target="_blank" rel="noopener nofollow noreferrer"&gt;https://proxy&lt;/A&gt;.&amp;lt;your&lt;/SPAN&gt; region&amp;gt;.hub.j4a.services.sap must be the same region (not technical key) that you chose for your subaccount, for example "eu10". See &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/regions-and-api-endpoints-for-abap-environment?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Regions and API Endpoints for the ABAP Environment&lt;/A&gt;&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.24.31.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323890iEAC270D856B43D0D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.24.31.png" alt="Screenshot 2025-10-07 at 13.24.31.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Choose the &lt;STRONG&gt;Logon&lt;/STRONG&gt; tab&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;General Settings: Select &lt;STRONG&gt;Connection to External Server&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Logon Procedure: Select &lt;STRONG&gt;Client Certificate&lt;/STRONG&gt; and choose the certificate you wish to use from the dropdown menu&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Save&lt;/STRONG&gt;. You've successfully maintained the connection.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.25.26.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323892i5826C527B8DBAD8C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.25.26.png" alt="Screenshot 2025-10-07 at 13.25.26.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Now, continue in your subaccount in the SAP BTP Cockpit&lt;BR /&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Select the &lt;STRONG&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/STRONG&gt; subscription you have just created (see &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-ai/generative-ai-in-abap-cloud/subscribing-to-joule-for-developers-abap-ai-capabilities?locale=en-US&amp;amp;state=DRAFT&amp;amp;version=ADT_SHIP_Previews" target="_blank" rel="noopener noreferrer"&gt;Subscribing to SAP Joule for Developers, ABAP AI Capabilities&lt;/A&gt;&lt;/SPAN&gt;), or open its details and select &lt;STRONG&gt;Go to Application&lt;/STRONG&gt;. You are forwarded to the &lt;STRONG&gt;Maintain Certificate Mappings&lt;/STRONG&gt; page.&lt;/LI&gt;&lt;LI&gt;In the Certificate Mappings section, select &lt;STRONG&gt;Create&lt;/STRONG&gt; to receive a one-time password (OTP).&lt;/LI&gt;&lt;LI&gt;Copy the OTP.&lt;BR /&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Note&lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt;: the OTP is valid for five minutes. If you need a new one, close the pop-up and click on Create again.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.26.55.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323896iC87A756A333E09AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.26.55.png" alt="Screenshot 2025-10-07 at 13.26.55.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;Go to your corresponding ABAP system and run report &lt;EM&gt;AIC_ADT_PROXY_CERTIFICATE&lt;/EM&gt;. Select &lt;STRONG&gt;Execute&lt;/STRONG&gt;.&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Paste the one-time password that you've copied in the previous step&lt;/LI&gt;&lt;LI&gt;(Optional) If you wish to use a new certificate that you haven't used in step 1, select Use Custom SSL Client PSE ID. Click in the Client PSE ID field and choose the new certificate from the value help. Now, you can go back to step 1 and switch to the new certificate.&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Execute&lt;BR /&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.28.39.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323897i7D16DCB9D4AC4E94/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.28.39.png" alt="Screenshot 2025-10-07 at 13.28.39.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;You've successfully registered your certificate!&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.28.57.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323898i164769C8E47F1AEC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.28.57.png" alt="Screenshot 2025-10-07 at 13.28.57.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;You can now create a new ABAP Project in ADT (using its latest version) and check out SAP Joule for developers, ABAP AI capabilities&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Screenshot 2025-10-07 at 13.43.28.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323900iCE484B1826E38612/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.43.28.png" alt="Screenshot 2025-10-07 at 13.43.28.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-abap-ai-capabilities-for-sap-s-4hana-cloud-private/ba-p/14236954"/>
    <published>2025-10-08T12:44:10.622000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/is-it-rap-or-bopf-fiori-programming-model-analyzer-for-s-4hana/ba-p/14240651</id>
    <title>Is It RAP or BOPF? Fiori Programming Model Analyzer for S/4HANA</title>
    <updated>2025-10-10T17:21:44.866000+02:00</updated>
    <author>
      <name>AlessandroSpadoni</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/141302</uri>
    </author>
    <content>&lt;H5 id="toc-hId--2145034684"&gt;&lt;EM&gt;Update – 21 October 2025&lt;/EM&gt;&lt;/H5&gt;&lt;P&gt;The &lt;STRONG&gt;ABAP Generator&lt;/STRONG&gt; component of the &lt;EM&gt;Fiori Programming Model Analyzer&lt;/EM&gt; is now available on GitHub!&lt;/P&gt;&lt;P&gt;The project now consists of two complementary repositories:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://github.com/alespad/s4-fiori-model-generator" target="_self" rel="nofollow noopener noreferrer"&gt;ABAP Generator&lt;/A&gt;&lt;/STRONG&gt; – the backend engine running directly on your S/4HANA system.&lt;BR /&gt;It analyzes the &lt;CODE&gt;manifest.json&lt;/CODE&gt; of standard Fiori apps, cross-references them with CDS views and Service Definitions, and automatically classifies each app by programming model (&lt;STRONG&gt;RAP&lt;/STRONG&gt;, &lt;STRONG&gt;BOPF&lt;/STRONG&gt;, or &lt;EM&gt;Gateway Classic&lt;/EM&gt;).&lt;BR /&gt;It produces &lt;STRONG&gt;JSON&lt;/STRONG&gt; and &lt;STRONG&gt;CSV&lt;/STRONG&gt; outputs ready to be consumed by the viewer.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A class="" href="https://github.com/alespad/s4-fiori-model-analyzer" target="_new" rel="noopener nofollow noreferrer"&gt;Viewer Application&lt;/A&gt;&lt;/STRONG&gt; – the frontend visualization tool that lets you explore and compare the generated data interactively, including the “Compare” view for release-to-release analysis.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1824336388"&gt;Introduction: the Idea&lt;/H4&gt;&lt;P&gt;Last week at &lt;A href="https://community.sap.com/t5/rome-events/sap-inside-track-rome-2025/ev-p/14102611" target="_self"&gt;&lt;STRONG&gt;SAP Inside Track Rome 2025&lt;/STRONG&gt;&lt;/A&gt; I had the chance to present a session about a new tool I’ve been working on recently.&lt;/P&gt;&lt;P&gt;The goal of this tool is to &lt;STRONG&gt;support ABAP developers&lt;/STRONG&gt; in identifying the &lt;STRONG&gt;programming model&lt;/STRONG&gt; behind a given &lt;STRONG&gt;Fiori app&lt;/STRONG&gt;, showing useful information&amp;nbsp;such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;What programming model does this app use – &lt;STRONG&gt;BOPF&lt;/STRONG&gt; or &lt;STRONG&gt;RAP&lt;/STRONG&gt;?&lt;/LI&gt;&lt;LI&gt;What’s the name of the &lt;STRONG&gt;Business Object&lt;/STRONG&gt;&amp;nbsp;?&lt;/LI&gt;&lt;LI&gt;Has the &lt;STRONG&gt;Fiori Elements&lt;/STRONG&gt; app been &lt;STRONG&gt;extended with the Flexible Programming Model&lt;/STRONG&gt;?&lt;/LI&gt;&lt;LI&gt;For &lt;STRONG&gt;OData V2&lt;/STRONG&gt; apps – sometimes the OData name doesn’t match the &lt;STRONG&gt;SEGW project&lt;/STRONG&gt; name: which one is the correct SEGW project?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;You can explore the data directly here:&lt;BR /&gt;&lt;A class="" href="https://alespad.github.io/s4-fiori-model-analyzer/" target="_new" rel="noopener nofollow noreferrer"&gt;https://alespad.github.io/s4-fiori-model-analyzer/&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlessandroSpadoni_0-1760109394683.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325710i909D1E3FDB46FCFA/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="AlessandroSpadoni_0-1760109394683.png" alt="AlessandroSpadoni_0-1760109394683.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The app can also be run &lt;STRONG&gt;locally&lt;/STRONG&gt;, and all data files used by the Fiori viewer (in both &lt;STRONG&gt;JSON&lt;/STRONG&gt; and &lt;STRONG&gt;CSV&lt;/STRONG&gt; formats) are available in the GitHub project under:&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/alespad/s4-fiori-model-analyzer/tree/main/docs/data" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/alespad/s4-fiori-model-analyzer/tree/main/docs/data&lt;/A&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1627822883"&gt;Behind the story&lt;/H4&gt;&lt;P&gt;How did this idea come up?&lt;/P&gt;&lt;P&gt;At &lt;STRONG&gt;Syscons&lt;/STRONG&gt;, we regularly run internal and customer webinars we call &lt;STRONG&gt;“Fiori Enablement”&lt;/STRONG&gt;, designed to help experienced ABAP developers modernize their skills and get ready to work on the latest &lt;STRONG&gt;S/4HANA releases&lt;/STRONG&gt; (and even &lt;STRONG&gt;BTP-based&lt;/STRONG&gt; developments).&lt;/P&gt;&lt;P&gt;Some time ago,&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/38226"&gt;@SergioFerrariIt2&lt;/a&gt;&amp;nbsp;suggested a session called &lt;EM&gt;“Anatomy of a Fiori App”&lt;/EM&gt;. It wasn’t easy to prepare, since there’s no official end-to-end documentation on how to “dissect” a Fiori app. The goal was to show how an ABAP developer can look inside a standard app and understand &lt;EM&gt;what’s really happening&lt;/EM&gt; behind an action button, a navigation, or any specific UI behavior.&lt;/P&gt;&lt;P&gt;To prepare the session, I chose the &lt;STRONG&gt;Fiori App F1048A – Process Purchase Requisition&lt;/STRONG&gt;, and started documenting each step:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Identify the main object: start from the &lt;STRONG&gt;OData service&lt;/STRONG&gt; in the Fiori Library, or use &lt;STRONG&gt;Dev Tools (F12)&lt;/STRONG&gt; to see which entity is called when pressing “Go”.&lt;/LI&gt;&lt;LI&gt;Notice that there are &lt;STRONG&gt;three actions&lt;/STRONG&gt; in the table – but only &lt;STRONG&gt;one action&lt;/STRONG&gt; exists in the RAP object. Comparing &lt;STRONG&gt;ADT Preview&lt;/STRONG&gt; with the actual Fiori App, there are &lt;STRONG&gt;no @UI actions&lt;/STRONG&gt;, and even an extra column appears in the app. That means the app was &lt;STRONG&gt;extended with the Flexible Programming Model&lt;/STRONG&gt;. We can download the app and inspect it locally in &lt;STRONG&gt;VS Code&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;This app, based on a &lt;STRONG&gt;RAP&lt;/STRONG&gt; object, also navigates to other apps that use &lt;STRONG&gt;BOPF&lt;/STRONG&gt; via specific actions. Which BOPF objects are they? Here, F12 helps only partially — we need to go one level deeper to find the true &lt;STRONG&gt;BO names&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Following this process made me realize how useful it would be to have a &lt;STRONG&gt;tool that automatically shows this information&lt;/STRONG&gt;, starting from the app list in the Fiori Library.&lt;/P&gt;&lt;H4 id="toc-hId-1431309378"&gt;ABAP Generator&lt;/H4&gt;&lt;P&gt;If you’re only interested in &lt;STRONG&gt;browsing the analyzed data&lt;/STRONG&gt; in the viewer or &lt;STRONG&gt;downloading the JSON/CSV files&lt;/STRONG&gt;, then the &lt;A class="" href="https://github.com/alespad/s4-fiori-model-analyzer" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;Viewer Repository&lt;/STRONG&gt;&lt;/A&gt; is all you need.&lt;BR /&gt;However, if you want to &lt;STRONG&gt;generate the results directly in your own S/4HANA system&lt;/STRONG&gt;, improve the detection logic, or — in the near future — produce your &lt;STRONG&gt;own data for custom Fiori apps&lt;/STRONG&gt;, then you’ll definitely want to explore the &lt;A class="" href="https://github.com/alespad/s4-fiori-model-generator" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;ABAP Repository&lt;/STRONG&gt;&lt;/A&gt;.&lt;BR /&gt;For a deeper technical overview, you can refer directly to the README in that repository.&lt;/P&gt;&lt;P&gt;From a technical perspective, for each app the generator retrieves the corresponding BSP application and parses the &lt;CODE&gt;manifest.json&lt;/CODE&gt; to identify the OData service and main entity.&lt;BR /&gt;The logic then checks the presence of &lt;STRONG&gt;Service Bindings&lt;/STRONG&gt; (for RAP/V4) or &lt;STRONG&gt;SEGW projects&lt;/STRONG&gt; (for BOPF/V2), inspects the DDL source of CDS views to trace &lt;STRONG&gt;consumption and interface layers&lt;/STRONG&gt;, and classifies the app according to the detected programming model.&lt;BR /&gt;All results are consolidated into &lt;STRONG&gt;JSON&lt;/STRONG&gt; and &lt;STRONG&gt;CSV&lt;/STRONG&gt; output files that can be visualized directly through the Fiori Model Analyzer viewer.&lt;/P&gt;&lt;H4 id="toc-hId-1234795873"&gt;What's next?&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;Improve&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;N/A&lt;/EM&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;classification logic&lt;/LI&gt;&lt;LI&gt;Some SEGW Projects are not determined&lt;/LI&gt;&lt;LI&gt;Validate accuracy across different S/4HANA releases&lt;/LI&gt;&lt;LI&gt;Analyzing Custom Fiori Apps: Support detection of custom Fiori Elements apps built with SAP Fiori Tools&lt;/LI&gt;&lt;LI&gt;Continue improving by learning and adopting modern ABAP and open-source tools — currently using &lt;A href="https://abaplint.org/" target="_self" rel="nofollow noopener noreferrer"&gt;abaplint&lt;/A&gt; and exploring best practices for clean and collaborative development.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;I’ll keep posting updates about the progress — and if you have &lt;STRONG&gt;feedback, suggestions, or ideas&lt;/STRONG&gt;, they’re very welcome!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/is-it-rap-or-bopf-fiori-programming-model-analyzer-for-s-4hana/ba-p/14240651"/>
    <published>2025-10-10T17:21:44.866000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/mastering-total-etag-in-rap-a-practical-guide/ba-p/14227417</id>
    <title>Mastering Total ETag in RAP , A Practical Guide.</title>
    <updated>2025-10-13T07:44:59.204000+02:00</updated>
    <author>
      <name>Pradeep555</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451114</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this blog I have explained the mechanism of total etag&amp;nbsp; and also differnce between&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;E-TAG and total etag in RAP in restful abap programming model&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Introduction :&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;ETAG: the etag concept ensures that&amp;nbsp; the end user of an Odata service only changes instances with the state that is displayed on the UI&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Hence , the etag prevents changes of the BO that are not noticed by the Odata consumers&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.W&lt;/SPAN&gt;&lt;SPAN&gt;ith Etag master each BO&amp;nbsp; entity can be checked independently.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;TOTAL E-TAG:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;It enables optimistic concurrency checks durig the transition from draft to active data&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This total etag field on the database table is updated by the RAP runtime framework as soon as an active instance is changed&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Its value is compared when resuming a draft instance to ensure that the active data has not been changed after the exclusive lock has expired&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The total E-tag is used for edit-drafts, a draft that has a corresponding active instance .&lt;/SPAN&gt;&lt;SPAN&gt;As soon as the exclusive lock expires and&amp;nbsp; an edit-draft is resumed , the total etag value of the draft is compared to the total ETAG value of the active instance&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The total etag is compared for all entities of BO&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Total e-tag is useful when we are changing draft data to active data .&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_0-1758777107961.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319637iDB81940A0646880F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Pradeep555_0-1758777107961.png" alt="Pradeep555_0-1758777107961.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;why total etag? and scenario&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Suppose an application is not using draft concepts ,&amp;nbsp; if it is only using e-tag then that application is also modifying the same table&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;E-tag will work whenever we are loading the data in the front end , someone else changes the data&amp;nbsp; and&amp;nbsp; unknowingly&amp;nbsp; saving the data – etag will be compered&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In&amp;nbsp; order to save the data and override we use etag&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SCENARIO:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When we start working on a draft table , we will put exclusive lock on active instance (say BOOKING ID-1)so that nobody can change the data.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Active data base--&amp;gt;it will become active instance--&amp;gt; active instance to it will become draft instance&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Suppose&amp;nbsp; I&amp;nbsp; have made some changes in active instance and – forgot to save it ,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;But it will be automatically saved in draft instance – as we are working on draft&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;Chages made will be automatically saved in draft table&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As soon as we stop working – the exclusve lock will be removed from active instance (BOOKING ID-1)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So now&amp;nbsp; the I&amp;nbsp; will come again ad start working on the draft instance which&amp;nbsp; have&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Saved , again&amp;nbsp; I will put exclusive lock and make some changes in the data and save it .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;As soon as we save – draft instance will be converted into active instance&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;What happens if we don't use total eTag?&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Suppose somebody else did some changes and those changes are not saved in draft&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;(&lt;/SPAN&gt;&lt;SPAN&gt;the app is not using draft )&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;,&lt;/SPAN&gt;&lt;SPAN&gt;And we will be overwriting those changes with our changes, since we don't exactly now&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp; w&lt;/SPAN&gt;&lt;SPAN&gt;hether someone eles has changed the data or not&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Total etag will be matched automatically based on the field &lt;/SPAN&gt;&lt;SPAN&gt;@Semantics.systemDateTime.lastChangedAt: true&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We need to match these field in behaviour definition&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The framework will update total etag field each time --&amp;gt; whenever we are converting draft into&amp;nbsp; active data&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Example :&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1.create the table&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_1-1758777516837.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319638iBA50C280B96C856A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_1-1758777516837.png" alt="Pradeep555_1-1758777516837.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;2.create a consumption view and provide the necessary annotation&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_2-1758777601278.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319639iC5FD3820E1DB68BB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_2-1758777601278.png" alt="Pradeep555_2-1758777601278.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;3.&lt;/SPAN&gt;&lt;SPAN&gt;create behaviour definition and provide total Etag and respective field.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_3-1758777648461.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319642i24CEFCC17BCB1020/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_3-1758777648461.png" alt="Pradeep555_3-1758777648461.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;4. create draft table&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_4-1758777676405.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319643i715C25FB8A7E1322/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_4-1758777676405.png" alt="Pradeep555_4-1758777676405.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;create service def.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_5-1758777706631.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319645i36372182CFD9F5AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_5-1758777706631.png" alt="Pradeep555_5-1758777706631.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.Create&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;service binding.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_6-1758777736935.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319646i83155EF51634578F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_6-1758777736935.png" alt="Pradeep555_6-1758777736935.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;7.OUTPUT&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_7-1758777788413.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319647i5818315A1846CC63/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_7-1758777788413.png" alt="Pradeep555_7-1758777788413.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;8.now&amp;nbsp; user 1 opens the data&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_8-1758777841691.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319648i25DC4171796D1C7D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_8-1758777841691.png" alt="Pradeep555_8-1758777841691.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9.user 2 has the same data&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_9-1758777887709.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319649i6B063E5B03A49A2D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_9-1758777887709.png" alt="Pradeep555_9-1758777887709.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;10.now user 1 starts editing the data&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_10-1758777929109.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319652i91F42FE09E418B7B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_10-1758777929109.png" alt="Pradeep555_10-1758777929109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;11.suppose the user 2 trying to edit the same data--&amp;gt; he will get an error&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_11-1758777971032.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319656iC79AADF91C9F4BFF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_11-1758777971032.png" alt="Pradeep555_11-1758777971032.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_12-1758777991719.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319657i0883C4CDE67D4E2B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_12-1758777991719.png" alt="Pradeep555_12-1758777991719.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;13.we can see the entry in the dradft table&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_13-1758778026503.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319658i44DE883A4568A852/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_13-1758778026503.png" alt="Pradeep555_13-1758778026503.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;14.now the active draft is&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_14-1758778067261.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319659i78779C02AB84DA77/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_14-1758778067261.png" alt="Pradeep555_14-1758778067261.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;15.User2&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;Trying to edit active draft with different value-&amp;gt;g&lt;/SPAN&gt;&lt;SPAN class=""&gt;etting error-&amp;gt;No data found&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_15-1758778105887.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319660i1614DD58FD8874E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_15-1758778105887.png" alt="Pradeep555_15-1758778105887.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;16.Now user2&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;trying&lt;/SPAN&gt;&lt;SPAN class=""&gt; to edit&amp;nbsp; with&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;Same value-&amp;gt;updated&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_16-1758778144031.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319661i81539FD8305AC09E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_16-1758778144031.png" alt="Pradeep555_16-1758778144031.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So total etag comes into picture&amp;nbsp;!!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Conclusion:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt;&amp;lt; Whenever we wil save the data&amp;nbsp; from active to draft instance – before saving I will compare total e-tag&amp;nbsp; value&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If it matches --&amp;gt; I&amp;nbsp;shall save the data&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If it does not match --&amp;gt; i shall not save&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Whenever we change the&amp;nbsp; active data --&amp;gt; total etag changes each time .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;If nobody changes the data&amp;nbsp; ---&amp;gt; total etag will be matched&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If somebody changes the data--&amp;gt; total&amp;nbsp; etag will not be matched , we need to discrad the current draft and&amp;nbsp; we need to load the current data&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;NOTE: whenever we change the draft data into active data we need total etag&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;thank you !&lt;/P&gt;&lt;P&gt;- Pradeep Ishwar Devadiga&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/mastering-total-etag-in-rap-a-practical-guide/ba-p/14227417"/>
    <published>2025-10-13T07:44:59.204000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/file-upload-for-items-in-fiori-elements-list-report/ba-p/14240957</id>
    <title>File upload for items in Fiori Elements List Report</title>
    <updated>2025-10-13T12:30:19.100000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633604625"&gt;1. Introduction&lt;/H1&gt;&lt;P&gt;In this blog, we'll show you how to upload, browse, and delete files on a row-by-line basis by having each row (item) have an item like an "attachment" in the SAP Fiori Elements List Report.&lt;BR /&gt;The data source for the List Report covers OData V4 services developed using the ABAP RESTful Application Programming Model (RAP) framework, and provides information about the implementation required to achieve file upload in RAP development.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437091120"&gt;2. Key points for implementing file upload&lt;/H1&gt;&lt;P&gt;In the file upload implementation, two points are required: (1) define the table items required for file storage, and (2) provide appropriate annotations for file object storage fields and file type storage fields.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Defining the table items required to store files&lt;P&gt;Set the following three fields in the custom table (the field names are samples).&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;File object storage field (abap.rawstring(0) if file size is not specified)&lt;UL&gt;&lt;LI&gt;example：attachment: abap.rawstring(0);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Field for file name&lt;UL&gt;&lt;LI&gt;example：filename: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Field for file Type&lt;UL&gt;&lt;LI&gt;example：mimetype: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Proper Annotation of File Object and File Type Fields in CDS View&lt;UL&gt;&lt;LI&gt;File object storage field&lt;UL&gt;&lt;LI&gt;example：&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Semantics.largeObject : {
mimeType: 'Mimetype',
fileName: 'Filename',
contentDispositionPreference: #INLINE
}​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Field for file Type&lt;UL&gt;&lt;LI&gt;@Semantics.mimeType: true&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1240577615"&gt;3. Implementation sample&lt;/H1&gt;&lt;P&gt;In this blog, we will use the RAP Generator to simplify RAP development. RAP Generator is a tool that allows you to generate RAP objects such as CDS View and Behavior Definition from custom tables using only wizard settings. When using the RAP Generator to generate a RAP object, a service is generated that supports the Managed Runtime with a draft function. Therefore, the table definition must define the required fields for drafting functions and update processing. For more information about RAP Generator, please check the following SAP Help.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/generating-rap-business-service-with-generate-abap-repository-objects-wizard" target="_blank" rel="noopener noreferrer"&gt;Generating a RAP Business Service with the Generate ABAP Repository Objects Wizards&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This blog is an example implementation based on the &lt;SPAN&gt;SAP Help: &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/example-rap-business-service-generation" target="_blank" rel="noopener noreferrer"&gt;Example: OData UI Service Generation Based on a Database Table&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302229548"&gt;1. Create a package to store objects by the RAP Generator.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="0-1760157013761.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325823iFF67EF8A7D119B10/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760157013761.png" alt="hironobu_nakayama_0-1760157013761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1105716043"&gt;2. Create a custom table inside the package you created in 1.&lt;/H3&gt;&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="1-1760157057491.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325824i82D4DF7B553C56CD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_1-1760157057491.png" alt="hironobu_nakayama_1-1760157057491.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_2-1760157071905.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325825i0DDC00E4250B93BB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_2-1760157071905.png" alt="hironobu_nakayama_2-1760157071905.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Custom Table for file upload test'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zpt_file_upload {

  key client            : abap.clnt not null;
  key customer_id       : /dmo/customer_id not null;
  first_name            : /dmo/first_name;
  last_name             : /dmo/last_name;
  title                 : /dmo/title;
  street                : /dmo/street;
  postal_code           : /dmo/postal_code;
  city                  : /dmo/city;
  country_code          : land1;
  phone_number          : /dmo/phone_number;
  email_address         : /dmo/email_address;
  attachment            : abap.rawstring(0);
  filename              : abap.char(128);
  mimetype              : abap.char(128);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-909202538"&gt;3. Run the RAP Generator and follow the wizard to configure it.&lt;/H3&gt;&lt;P&gt;Right-click on the target custom table → run it with "Generate ABAP Repository Objects..."&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="3-1760157422206.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325826iC928155A8BCFAE9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_3-1760157422206.png" alt="hironobu_nakayama_3-1760157422206.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Selecting a Service Type&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="4-1760157441952.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325827iF0BB085AA624F8A4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_4-1760157441952.png" alt="hironobu_nakayama_4-1760157441952.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Selecting a package for storing generated objects&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="5-1760157464387.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325828iCA1BEBBB2C283DDC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_5-1760157464387.png" alt="hironobu_nakayama_5-1760157464387.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Review the generated object and rename or alias it as needed&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="6-1760157482071.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325829i0F2526AA45703F9D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_6-1760157482071.png" alt="hironobu_nakayama_6-1760157482071.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_7-1760157495656.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325830i9C6952F5528E2BD6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_7-1760157495656.png" alt="hironobu_nakayama_7-1760157495656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712689033"&gt;4. Add annotations for file upload to the generated data model (CDS View) and enable the CDS View.&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #CHECK
@EndUserText.label: '##GENERATED ZPT_FILE_UPLOAD'
define root view entity ZR_PT_FILE_UPLOAD
  as select from zpt_file_upload
{
  key customer_id           as CustomerID,
      first_name            as FirstName,
      last_name             as LastName,
      title                 as Title,
      street                as Street,
      postal_code           as PostalCode,
      city                  as City,
      country_code          as CountryCode,
      phone_number          as PhoneNumber,
      email_address         as EmailAddress,
      @Semantics.largeObject : {
            mimeType: 'Mimetype',
            fileName: 'Filename',
            contentDispositionPreference: #INLINE
          }
      attachment            as Attachment,
      filename              as Filename,
      @Semantics.mimeType: true
      mimetype              as Mimetype,
      @Semantics.user.createdBy: true
      local_created_by      as LocalCreatedBy,
      @Semantics.systemDateTime.createdAt: true
      local_created_at      as LocalCreatedAt,
      @Semantics.user.localInstanceLastChangedBy: true
      local_last_changed_by as LocalLastChangedBy,
      @Semantics.systemDateTime.localInstanceLastChangedAt: true
      local_last_changed_at as LocalLastChangedAt,
      @Semantics.systemDateTime.lastChangedAt: true
      last_changed_at       as LastChangedAt

}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-516175528"&gt;5. Publish the service binding.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="8-1760157523686.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325831i4F5DCB4410845F5A/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_8-1760157523686.png" alt="hironobu_nakayama_8-1760157523686.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-319662023"&gt;6. Select the entity and preview it.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="9-1760157563744.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325832iC927D9BEF8566E34/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_9-1760157563744.png" alt="hironobu_nakayama_9-1760157563744.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-123148518"&gt;7. From the "Create" button, perform data registration and file upload.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="10-1760157593131.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325833i2D10826CA744794B/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_10-1760157593131.png" alt="hironobu_nakayama_10-1760157593131.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="11-1760157628831.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325834iCBF6028E63ADA10C/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_11-1760157628831.png" alt="hironobu_nakayama_11-1760157628831.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="12-1760157647311.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325835iC7286B9648C140C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_12-1760157647311.png" alt="hironobu_nakayama_12-1760157647311.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="13-1760157663896.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325836i33B8FE451D47FCBE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_13-1760157663896.png" alt="hironobu_nakayama_13-1760157663896.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="14-1760157681275.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325837i22D13F546974AC37/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_14-1760157681275.png" alt="hironobu_nakayama_14-1760157681275.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="15-1760157702526.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325838iBABEDFAC843FB59D/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_15-1760157702526.png" alt="hironobu_nakayama_15-1760157702526.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="16-1760157721073.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325839i9A80962EABEC37F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_16-1760157721073.png" alt="hironobu_nakayama_16-1760157721073.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-438209658"&gt;4. Summary&lt;/H1&gt;&lt;P&gt;By implementing the above, using the OData V4 service using the ABAP RESTful Application Programming Model (RAP), you can use the "Attachment" for each row (item) in the SAP Fiori Elements List Report. It is possible to upload, read, and delete files on a line-by-line basis. Please take advantage of it.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-241696153"&gt;References&lt;/H1&gt;&lt;P&gt;SAPUI5 Document: &lt;A href="https://sapui5.hana.ondemand.com/#/topic/b236d32d48b74304887b3dd5163548c1" target="_blank" rel="noopener nofollow noreferrer"&gt;Enabling Stream Support&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/file-upload-for-items-in-fiori-elements-list-report/ba-p/14240957"/>
    <published>2025-10-13T12:30:19.100000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/dynamically-making-a-field-read-only-in-sap-rap/ba-p/14225542</id>
    <title>Dynamically Making a Field Read-Only in SAP RAP</title>
    <updated>2025-10-14T11:19:32.771000+02:00</updated>
    <author>
      <name>Faizan_khan1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451076</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Making a field read-only or non-editable dependent on the value of another field is a frequent requirement. This blog post will explain how to use the RAP model to accomplish this.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The scenario we'll cover is making the &lt;/SPAN&gt;&lt;SPAN&gt;VBTYP&lt;/SPAN&gt;&lt;SPAN&gt; field read-only based on the value of the &lt;/SPAN&gt;&lt;SPAN&gt;AUART&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp; field.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Setting Up the RAP Application&lt;/STRONG&gt;&amp;nbsp;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Before implementing the dynamic behavior, we need a basic RAP application structure.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Database Table&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Data base Table for sales order'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zdemo_dt_so {
  key vbeln : vbeln_va not null;
  erdat     : erdat;
  ernam     : ernam;
  vbtyp     : vbtypl;
  auart     : auart;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp; 2 . &lt;STRONG&gt;Interface View&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface view for sales order'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define root view entity ZDEMO_I_SO as select from zdemo_dt_so
{
    key vbeln as Vbeln,
    erdat as Erdat,
    ernam as Ernam,
    vbtyp as Vbtyp,
    auart as Auart
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;3 .&amp;nbsp;&lt;STRONG&gt;&lt;SPAN&gt;Projection View&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Projection view for Sales order'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
@Metadata.allowExtensions: true
define root view entity ZDEMO_P_SO as projection on ZDEMO_I_SO
{
    key Vbeln,
    Erdat,
    Ernam,
    Vbtyp,
    Auart
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; 4 .&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Behavior Definition&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_demo_i_so unique;
strict ( 2 );
define behavior for ZDEMO_I_SO //alias &amp;lt;alias_name&amp;gt;
persistent table zdemo_dt_so
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
field (features : instance ) Vbtyp ;
validation vbtyp_valid on save { field Auart , Vbtyp ; }
  create;
  update;
  delete;
}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection;
strict ( 2 );
define behavior for ZDEMO_P_SO //alias &amp;lt;alias_name&amp;gt;
{
  use create;
  use update;
  use delete;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;STRONG&gt; 5 .Service Definition and Binding&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service def SO'
define service ZDEMO_P_SO {
  expose ZDEMO_P_SO;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_1-1758626719811.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318831i36BA6EF83B11D5D0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_1-1758626719811.png" alt="Faizan_khan1_1-1758626719811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Once you click on preview you can see the application and create a record&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_2-1758626761985.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318832i87B00A509503C3FA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_2-1758626761985.png" alt="Faizan_khan1_2-1758626761985.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_3-1758626769228.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318833iC5D4AF65B649F8AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_3-1758626769228.png" alt="Faizan_khan1_3-1758626769228.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Implementing Dynamic Feature Control&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Our goal is to make the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;,&lt;/SPAN&gt;&lt;SPAN&gt;VBTYP&lt;/SPAN&gt;&lt;SPAN&gt; field read-only if the &lt;/SPAN&gt;&lt;SPAN&gt;AUART&lt;/SPAN&gt;&lt;SPAN&gt; field has a specific value, like 'KA'.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For Achieving this scenario first we need to Define a Dynamic feature control for the field 'VBTYP'&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_0-1758626860646.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318837i82B7069BF5FA3D0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_0-1758626860646.png" alt="Faizan_khan1_0-1758626860646.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The logic for making the field read-only&amp;nbsp; presents in the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;get_instance_features&lt;/SPAN&gt;&lt;SPAN&gt; method of your behavior implementation class. This method is automatically created&amp;nbsp; by the RAP framework. Here's the code you'll need to write:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; METHOD get_instance_features.

  READ ENTITIES OF ZDEMO_I_SO IN LOCAL MODE
   ENTITY zdemo_i_so FIELDS ( Vbeln  Auart )
   WITH CORRESPONDING #( keys )
   RESULT data(lt_result).
        LOOP AT lt_result INTO data(ls_result).
        if ls_result-Auart = 'KA'.
        result = VALUE #(
        (
        %tky = ls_result-%tky
        %features-%field-Vbtyp = if_abap_behv=&amp;gt;fc-f-read_only
        ) ).
        ELSE.
        result = VALUE #(
        (
        %tky = ls_result-%tky
        %features-%field-Vbtyp = if_abap_behv=&amp;gt;fc-f-unrestricted
        ) ).
        ENDIF.
        ENDLOOP.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;After implementing the logic, activate your behavior implementation class. Now, when you refresh your&amp;nbsp; application, the changes will be applied&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_0-1758627133505.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318841i9C3E65A60324E488/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_0-1758627133505.png" alt="Faizan_khan1_0-1758627133505.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In your application, you can create a few records with different&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;AUART&lt;/SPAN&gt;&lt;SPAN&gt; values, such as 'KA' and 'OR'. When you try to edit the record where&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;AUART&lt;/SPAN&gt;&lt;SPAN&gt; is 'KA', you will notice that the &lt;/SPAN&gt;&lt;SPAN&gt;VBTYP&lt;/SPAN&gt;&lt;SPAN&gt; field is grayed out and you are unable to change its value. However, if you edit a record where&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_1-1758627174853.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318842iD3CAFC6AD77B3851/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_1-1758627174853.png" alt="Faizan_khan1_1-1758627174853.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;AUART&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; is 'OR', the &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;VBTYP&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; field will remain editable, allowing you to change its value freely.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_0-1758627257369.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318867i9986E801A5B8F789/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_0-1758627257369.png" alt="Faizan_khan1_0-1758627257369.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;This &lt;/SPAN&gt;&lt;SPAN class=""&gt;demonstrates&lt;/SPAN&gt;&lt;SPAN class=""&gt; how the field's behavior is dynamically controlled.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Conclusion&amp;nbsp; :&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;The blog post effectively demonstrates how to &lt;/SPAN&gt;&lt;SPAN class=""&gt;dynamically make a field read-only&lt;/SPAN&gt;&lt;SPAN class=""&gt; within the &lt;/SPAN&gt;&lt;SPAN class=""&gt;SAP RAP.&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;The core method involves using&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;dynamic feature control&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/dynamically-making-a-field-read-only-in-sap-rap/ba-p/14225542"/>
    <published>2025-10-14T11:19:32.771000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/rap-event-consume-sap-standard-event-and-trigger-custom-rap-event/ba-p/14241235</id>
    <title>RAP Event: consume SAP standard event and trigger custom RAP event</title>
    <updated>2025-10-14T18:00:00.028000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633627625"&gt;1. Introduction&lt;/H1&gt;&lt;P&gt;Event-driven architecture (EDA) is an integrated model that detects critical business "events" and responds to them in real time. As modern businesses seek real-time operations and flexible, responsive systems, EDA has become an essential technology.&lt;BR /&gt;Many standard RAP events are provided for the implementation of the event-driven architecture in SAP S/4HANA, but the standard event payload may not meet business requirements and require customization. In particular, there is a use case where SAP standard events are extended with Derived Events for the purpose of filtering by event data and payload completion of standard events.&lt;BR /&gt;Derived Event is available in S/4HANA Cloud, private edition &amp;amp; S/4HANA 2023 / S/4HANA Cloud, public edition Introduced in the 2308 release, this feature allows you to define new events with custom payloads based on existing SAP standard events. This allows you to reuse standard event implementations while creating events with additional fields and filtering criteria that you need for your business.&lt;BR /&gt;SAP Community Blog: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/derived-events-how-to-trigger-custom-event-from-an-sap-standard-event/ba-p/13955193" target="_blank"&gt;Derived Events- How to Trigger Custom Event from an SAP Standard Event&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;On the other hand, a Derived Event requires that the SAP Standard object to be extended meets the following conditions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The business object containing the referring event must be extensible.&lt;/LI&gt;&lt;LI&gt;The referenced event must be published on the C0 and C1 released RAP BO interfaces&lt;/LI&gt;&lt;LI&gt;The CDS view entity used as the data source for the Derived Event payload must have been released in C1&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Therefore, some objects do not support extensibility with Derived Events in SAP Standard RAP BO. In this case, there may be cases where the requirements that should be solved by Derived Events cannot be realized.&lt;BR /&gt;So, in this blog, we will introduce a workaround approach that enables payload expansion with custom RAP BO for SAP standard events that cannot be extended with Derived Events.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437114120"&gt;2. Workaround Solutions&lt;/H1&gt;&lt;P&gt;If Derived Events are not available, a workaround approach that combines Local Event Consumption with custom RAP events can be an effective approach. This approach involves consuming SAP standard events locally (custom ABAP classes) and using them as triggers to raise custom RAP events. By setting the payload of a custom event to meet your business requirements, you can use event filters.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760225484634.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326000i65E19ECBA8BC68CD/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760225484634.png" alt="hironobu_nakayama_1-1760225484634.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1240600615"&gt;3. Implementation Sample&lt;/H1&gt;&lt;P&gt;In this blog, we will use a non-extensible r_purchaseordertp as the target object to extend the event payload for data changes in a PO document. SAP standard events have a payload of only the purchase order document number, whereas custom events have a purchase order document number and purchase order type as the payload. For more information on Event Binding and channel configuration with Event Mesh, please visit the SAP Community Blog: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-rap-business-events-in-sap-s-4hana-on-premise-2022/ba-p/13553312" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-rap-business-events-in-sap-s-4hana-on-premise-2022/ba-p/13553312&lt;/A&gt;&lt;/SPAN&gt;&amp;nbsp;. Please note that the RAP BO in the implementation sample in this blog does not implement CRUD or save processing other than events.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302252548"&gt;(1) Local Consumer (Custom ABAP Class for Local Event Consumption)&lt;/H3&gt;&lt;H5 id="toc-hId-1363904481"&gt;Global class: zcl_event_consump&lt;/H5&gt;&lt;P&gt;In the Global class, the definition FOR EVENTS OF r_purchaseordertp sets the standard events to be consumed.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_event_consump DEFINITION
  PUBLIC
  ABSTRACT
  FINAL
  FOR EVENTS OF r_purchaseordertp.

  PUBLIC SECTION.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_event_consump IMPLEMENTATION.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1167390976"&gt;Local class: zcl_event_consump&lt;/H5&gt;&lt;P&gt;The Local class performs additional data retrieval based on the data from the standard event payload consumed to trigger a custom RAP event.&lt;BR /&gt;It is important to note that triggering events is only possible in the RAP framework with a Save Sequence, so you must explicitly change it to Save Sequence by cl_abap_tx=&amp;gt;save( ).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*"* use this source file for the definition and implementation of
*"* local helper classes, interface definitions and type
*"* declarations
CLASS lcl_event_consump DEFINITION INHERITING FROM cl_abap_behavior_event_handler.
  PRIVATE SECTION.
    METHODS:
      consume_changed FOR ENTITY EVENT changed_instances FOR purchaseorder~changed.
ENDCLASS.

CLASS lcl_event_consump IMPLEMENTATION.

  METHOD consume_changed.
    cl_abap_tx=&amp;gt;save(  ).

    DATA lv_potype TYPE mm_purchaseordertype.

    CHECK changed_instances IS NOT INITIAL.

    LOOP AT changed_instances INTO DATA(changed_instance).

      SELECT SINGLE purchaseordertype
      FROM c_purchaseordertp
      INTO _potype
      WHERE purchaseorder = @changed_instance-purchaseorder.

      DATA(et_events) = VALUE zbp_i_purchseorder_test=&amp;gt;tt_events(
        (
        purchaseorder = changed_instance-purchaseorder
        purchaseordertype = lv_potype
        )
      ).

      zbp_i_purchseorder_event=&amp;gt;raise_po_changed_event( it_events = et_events ).

    ENDLOOP.

  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712712033"&gt;(2) Custom RAP BO (Custom Event)&lt;/H3&gt;&lt;H5 id="toc-hId-774363966"&gt;CDS View: &lt;SPAN&gt;ZI_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;In the CDS View, I define only the purchase order.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Consume purchase order event'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
  serviceQuality: #X,
  sizeCategory: #S,
  dataClass: #MIXED
}
define root view entity ZI_purchseorder_event as select from I_PurchaseOrder
{
  key PurchaseOrder
}&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId-577850461"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId-381336956"&gt;Behavior Definition: &lt;SPAN&gt;ZI_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;Custom RAP BO for event triggers does not define the create/update/delete function.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed with unmanaged save implementation in class zbp_i_purchseorder_event unique;
strict ( 2 );

define behavior for ZI_purchseorder_event //alias &amp;lt;alias_name&amp;gt;
//persistent table ekko
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
  //  create;
  //  update;
  //  delete;
  event purchaseorder_changed parameter ZAB_PO_changed_event;

  field ( readonly ) PurchaseOrder;
}&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--735379370"&gt;Behavior Implementation (Global class) : &lt;SPAN&gt;zbp_i_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;In the Global class, I define a method for triggering events.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zbp_i_purchseorder_event DEFINITION PUBLIC ABSTRACT FINAL FOR BEHAVIOR OF zi_purchseorder_event.

  TYPES tt_events TYPE TABLE FOR EVENT zi_purchseorder_event~purchaseorder_changed.

  PUBLIC SECTION.
        CLASS-METHODS raise_po_changed_event
            IMPORTING it_events TYPE tt_events.

ENDCLASS.

CLASS zbp_i_purchseorder_event IMPLEMENTATION.
METHOD raise_po_changed_event.
  lcl_event_handler=&amp;gt;on_po_changed_event( it_events ).
endmethod.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--931892875"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId--1128406380"&gt;Behavior Implementation (Local class) : &lt;SPAN&gt;lhc_zi_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;The Local class does not implement save processing, etc., but only implements methods for triggering events.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zi_purchseorder_event DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zi_purchseorder_event RESULT result.

ENDCLASS.

CLASS lhc_zi_purchseorder_event IMPLEMENTATION.

  METHOD get_instance_authorizations.
  ENDMETHOD.

ENDCLASS.

CLASS lsc_zi_purchseorder_event DEFINITION INHERITING FROM cl_abap_behavior_saver.
  PROTECTED SECTION.

    METHODS save_modified REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.

ENDCLASS.

CLASS lsc_zi_purchseorder_event IMPLEMENTATION.

  METHOD save_modified.
  ENDMETHOD.

  METHOD cleanup_finalize.
  ENDMETHOD.

ENDCLASS.

CLASS lcl_event_handler DEFINITION FRIENDS zbp_i_purchseorder_event.
  PUBLIC SECTION.
    CLASS-METHODS on_po_changed_event IMPORTING it_events TYPE zbp_i_purchseorder_event=&amp;gt;tt_events.
ENDCLASS.

CLASS lcl_event_handler IMPLEMENTATION.
   METHOD on_po_changed_event.

    RAISE ENTITY EVENT ZI_purchseorder_event~purchaseorder_changed FROM it_events.

   ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--1324919885"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId--1521433390"&gt;Abstract Entity: &lt;SPAN&gt;ZAB_PO_changed_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;Abstract entity adds a purchase order document type. This results in the payload of the custom RAP event being the purchase order document number and the purchase order document type.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abastract entity for po changed event'
define abstract entity ZAB_PO_changed_event
  //  with parameters parameter_name : parameter_type
{
  PurchaseOrderType : mm_purchaseordertype;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--544334867"&gt;4. Implementation Results&lt;/H1&gt;&lt;P&gt;Modify and save an existing purchase order document from the Manage Purchase Orders (F0842A) app.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_0-1760229645619.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326001iA137C622300D0D19/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760229645619.png" alt="hironobu_nakayama_0-1760229645619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can receive custom events triggered from S/4HANA in SAP Event Mesh.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760229707438.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326002i776A835D573B8867/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760229707438.png" alt="hironobu_nakayama_1-1760229707438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--740848372"&gt;5. Summary&lt;/H1&gt;&lt;P&gt;When it is not possible to scale with Derived Events in implementing an event-driven architecture, a workaround approach that combines Local Event Consumption with custom RAP events is an effective approach.&lt;BR /&gt;This approach enables custom payloads and filtering capabilities based on business requirements, providing event consumers with the data they need to optimize cross-system integration.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--937361877"&gt;References&lt;/H1&gt;&lt;P&gt;SAP Learning：&lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/discovering-event-driven-integration-with-sap-integration-suite-advanced-event-mesh/explaining-event-driven-architecture_d02a51bb-1ce4-4c2d-a25d-8b9c9198ffd2" target="_blank" rel="noopener noreferrer"&gt;Explaining Event-Driven Architecture&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Help: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/sap-btp-guidance-framework/integration-architecture-guide/event-driven-architecture?amp;state=PRODUCTION&amp;amp;amp;version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Event-driven Architecture&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-2-creating-custom-business/ba-p/13914171" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [2]: Creating custom business events&lt;/A&gt;&lt;BR /&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-5-consuming-a-local-business/ba-p/13915138" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [5]: Consuming a local business event&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-event-consume-sap-standard-event-and-trigger-custom-rap-event/ba-p/14241235"/>
    <published>2025-10-14T18:00:00.028000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/a-developer-s-guide-to-building-hybrid-transactional-fiori-apps-with-rap/ba-p/14245208</id>
    <title>A Developer’s Guide to Building Hybrid Transactional Fiori Apps with RAP and Analytical features</title>
    <updated>2025-10-16T01:11:17.894000+02:00</updated>
    <author>
      <name>VijayCR</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/38084</uri>
    </author>
    <content>&lt;P&gt;In many SAP S/4HANA implementations, particularly those involving Fiori List Reports, business users often require a unified experience that combines &lt;STRONG&gt;transactional capabilities ,&lt;/STRONG&gt;such as executing actions on records ,with &lt;STRONG&gt;analytical insights&lt;/STRONG&gt; like grouping, subtotals, and totals. This is especially relevant in operational reporting scenarios where decisions are made directly from the data view.&lt;BR /&gt;These hybrid use cases are common in operational reporting, where users need to analyze data and take immediate action within the same interface.However, when using &lt;STRONG&gt;analytical CDS views&lt;/STRONG&gt; (annotated with &lt;CODE&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/15206"&gt;@analytics&lt;/a&gt;.query: true&lt;/CODE&gt;), SAP RAP imposes architectural constraints that prevent the direct definition of &lt;STRONG&gt;actions&lt;/STRONG&gt; within the same view. This limitation can be a bottleneck when designing intelligent, user-centric applications.&lt;/P&gt;&lt;P&gt;To overcome this challenge, the following approach is recommended:&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Separate OData Services for Analytics and Transactions&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Analytical Service&lt;/STRONG&gt;: Built using a CDS view with &lt;CODE&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/15206"&gt;@analytics&lt;/a&gt;.query: true&lt;/CODE&gt;, enabling features like grouping, subtotals, and totals.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Transactional Service&lt;/STRONG&gt;: Developed using RAP with behavior definitions to support actions, determinations, and validations. This view excludes analytical annotations to maintain RAP compatibility.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;UI5 Extension Logic for Action Integration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Use &lt;STRONG&gt;SAPUI5 extensions&lt;/STRONG&gt; to wire up action buttons in the Fiori List Report.&lt;/LI&gt;&lt;LI&gt;These buttons trigger transactional logic from the RAP-based service, even though the data is displayed via the analytical service.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Workaround for Filtering on Aggregated Fields&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Since analytical views often aggregate fields (e.g., total amounts), filtering directly on these fields may not work as expected.&lt;/LI&gt;&lt;LI&gt;Introduce &lt;STRONG&gt;dummy fields&lt;/STRONG&gt; or helper logic to enable meaningful filtering in the UI.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This approach allows developers to deliver &lt;STRONG&gt;intelligent Fiori applications&lt;/STRONG&gt; that combine the best of both worlds: &lt;STRONG&gt;real-time analytical insights&lt;/STRONG&gt; and &lt;STRONG&gt;direct transactional capabilities&lt;/STRONG&gt;. It supports business scenarios such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Mass approvals with KPI-based filtering&lt;/LI&gt;&lt;LI&gt;Sales performance analysis with direct follow-up actions&lt;/LI&gt;&lt;LI&gt;Inventory grouping with replenishment triggers&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;By decoupling analytics and actions at the service level and integrating them at the UI layer, you can build scalable, maintainable, and user-friendly applications that align with SAP’s clean core principles.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Analytical CDS View (OData V2 or V4)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;You’ve correctly defined analytical views such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;CODE&gt;Z_I_APPRREQ_TOTAL&lt;/CODE&gt;: Aggregates planned costs using &lt;CODE&gt;sum(bpja.wtjhr)&lt;/CODE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;Z_I_APPRREQ_COSTS&lt;/CODE&gt;: Joins totals with individual cost records&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;Z_I_APPROPRIATEREQUEST&lt;/CODE&gt;: Combines investment request data with ledger and object info&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Appropriate Request Ledger Details.'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
define view entity Z_I_APPRREQ_LEDGER as select from tka01
inner join tbp0l on tbp0l.waers = tka01.waers
and tbp0l.periv = tka01.lmona
{

key tka01.kokrs as Kokrs,
tbp0l.periv as Periv,
tbp0l.waers as Waers,
tbp0l.lednr as Lednr

}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Appropriate Request Costs Details.'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
define view entity Z_I_APPRREQ_COSTS
as select from bpja
inner join Z_I_APPRREQ_TOTAL on Z_I_APPRREQ_TOTAL.Ledger = bpja.lednr
and Z_I_APPRREQ_TOTAL.ObjectNumber = bpja.objnr

{


key bpja.lednr as Ledger,
key bpja.objnr as ObjectNumber,
key bpja.gjahr as FiscalYear,
// @semantics.currencycode
bpja.twaer as Currency,
@Semantics.amount.currencyCode : 'Currency'
bpja.wtjhr as PlancostsYear,
Z_I_APPRREQ_TOTAL.Currency as Currency_Code,
@Semantics.amount.currencyCode : 'Currency_Code'
Z_I_APPRREQ_TOTAL.PlancostsYear as PlancostsTotal
}

where
bpja.wrttp = '40';&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Appropriate Request Costs Details.'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
define view entity Z_I_APPRREQ_TOTAL as select from bpja

{

key bpja.lednr as Ledger,
key bpja.objnr as ObjectNumber,

bpja.twaer as Currency ,
@Semantics.amount.currencyCode : 'Currency'
sum(bpja.wtjhr) as PlancostsYear

}
where bpja.wrttp = '40'
group by lednr,objnr,bpja.twaer;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'IMAK Details'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
@Analytics.dataCategory: #CUBE
define view entity Z_I_APPROPRIATEREQUEST
as select from imak
association [0..1] to imakpi on imakpi.posnr = imak.posnr
association [0..1] to imakt on imakt.posnr = imak.posnr
association [0..1] to imav on imav.posnr = imak.posnr
association [0..1] to Z_I_APPRREQ_LEDGER on Z_I_APPRREQ_LEDGER.Kokrs = imak.vkokrs
{
key
cast(imak.posnr as abap.char( 12 )) as Appr_Request,
imak.abukrs as CompanyCode,
imak.gjahr as FiscalYear,
imakpi.izwek as Izwek,
imakt.txt50 as Txt50,
imav.objnr as ObjectNumber,
Z_I_APPRREQ_LEDGER.Lednr as Ledger,
concat('IQ',imak.posnr) as IQOBJNR,

erdat as Erdat

}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-2020994856"&gt;&amp;nbsp;&lt;STRONG&gt;Consumption CDS View&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;This consumption view is designed to support a &lt;STRONG&gt;Fiori List Report&lt;/STRONG&gt; that displays investment request data with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Aggregated planned costs per fiscal year and overall&lt;/LI&gt;&lt;LI&gt;Currency semantics for proper formatting&lt;/LI&gt;&lt;LI&gt;Additional Filters for amounts as the original ones does not support in analytical views.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Bericht zur Freigabe der Maßnahmenanforderungen'

@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED

@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
@UI.headerInfo.typeName: 'Freigabeliste'
@UI.headerInfo.typeNamePlural: 'Freigabeliste'


define root view entity ZAPPR_APPRLLIST_MAIL
as select from Z_I_APPROPRIATEREQUEST
association [0..1] to Z_I_APPRREQ_COSTS as Investcosts on Investcosts.Ledger = Z_I_APPROPRIATEREQUEST.Ledger
and Investcosts.ObjectNumber = Z_I_APPROPRIATEREQUEST.ObjectNumber
and Investcosts.FiscalYear = Z_I_APPROPRIATEREQUEST.FiscalYear

{
@UI.facet : [
{
id : 'AppropRequest',
purpose : #STANDARD,
type : #IDENTIFICATION_REFERENCE,
label : 'Maßnahmenanforderung',
position : 10 }
]

@UI : {
lineItem : [{position: 10} ],

identification : [{position: 10 }],
selectionField : [{position: 10}]
}
@EndUserText: { label: 'Investitionsantragsnummer'}
key Z_I_APPROPRIATEREQUEST.Appr_Request,
@UI : {
lineItem : [{position: 20}],
identification : [{ position: 20 }],
selectionField : [{position: 20}]
}
@EndUserText: { label: 'Buchungskreis'}
Z_I_APPROPRIATEREQUEST.CompanyCode,

@UI : {
lineItem : [{position: 50}],
identification : [{position: 50}],
selectionField : [{position: 50}]
}
@EndUserText: { label: 'Bezeichnung'}
Z_I_APPROPRIATEREQUEST.Txt50,



Investcosts.Currency,
@UI : {
lineItem : [{position: 60}],
identification : [{position: 60}],
selectionField : [{position: 60}] }
@EndUserText: { label: 'Geplante Kosten [aktuelles GJ] in EUR'}
@Semantics.amount.currencyCode : 'Currency'
@Aggregation.default : #SUM
Investcosts.PlancostsYear as TotalPlancostsYear,
@UI : {
// lineItem : [{position: 70}],
identification : [{position: 70}],
selectionField : [{position: 70}] }
@EndUserText: { label: 'Geplante Kosten [aktuelles GJ] in EUR '}
@Semantics.amount.currencyCode : 'Currency'

Investcosts.PlancostsYear as TotalPlancostsYear1,


Investcosts.Currency_Code,
@UI : {
lineItem : [{position: 80}],
identification : [{position: 80}],
selectionField : [{position: 80}] }
@Semantics.amount.currencyCode : 'Currency_Code'
@EndUserText: { label: 'Geplante Kosten [GESAMT] in EUR'}
@Aggregation.default : #SUM
Investcosts.PlancostsTotal as PlancostsTotalSum,
@UI : {

identification : [{position: 90}],
selectionField : [{position: 90}] }
@Semantics.amount.currencyCode : 'Currency_Code'
@EndUserText: { label: 'Geplante Kosten [GESAMT] in EUR '}

Investcosts.PlancostsTotal as PlancostsTotalSum1,
@UI : {
selectionField : [{position: 100}] }
@Consumption.filter.selectionType: #INTERVAL

Z_I_APPROPRIATEREQUEST.Erdat

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once done create a Service Behaviour and Definition for the above CDS Entity .&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;CDS entity with Action Service&lt;/STRONG&gt;&lt;BR /&gt;RAP-Based CDS View with Behavior Definition with Action&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_appr_appremail unique;
strict ( 1 );

define behavior for ZAPPR_APPREMAIL //alias &amp;lt;alias_name&amp;gt;
persistent table ZAPPR_APPREMAIL
lock master
authorization master ( instance )

{
action Email parameter Z_APPROVER3 result [1] $self;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Abstract entity for the comments&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Approval 3 Input Details'
define abstract entity Z_APPROVER3
// with parameters parameter_name : parameter_type
{
comments : char255;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Behavior Definition code:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zappr_appremail DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.
    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zappr_appremail RESULT result.
    METHODS email FOR MODIFY
      IMPORTING keys FOR ACTION zappr_appremail~email RESULT result.
ENDCLASS.

CLASS lhc_zappr_appremail IMPLEMENTATION.
  METHOD get_instance_authorizations.
  ENDMETHOD.
  METHOD email.
 READ ENTITIES OF zappr_appremail IN LOCAL MODE
  ENTITY zappr_appremail
    FIELDS ( appr_request )
  WITH CORRESPONDING #( keys )
  RESULT DATA(lt_app_data).
    DATA: lv_recipient TYPE adr6-smtp_addr.
    DATA: lv_subject TYPE string.
    DATA: lv_content TYPE string.
    DATA : email_template_name TYPE smtg_tmpl_id VALUE 'ZEMAIL_APPROVAL'.
    DATA(email_api) =
  cl_smtg_email_api=&amp;gt;get_instance(
          iv_template_id = email_template_name  ).
    DATA(lv_html_text) = VALUE string( ).

    DATA(i_cds_key) = VALUE if_smtg_email_template=&amp;gt;ty_gt_data_key( ).
  " Get the RawHTML Content and Replace the palceholder with the INV Details in the email
    email_api-&amp;gt;render( EXPORTING
                                iv_language = sy-langu
                                  it_data_key =  i_cds_key
                              IMPORTING
                                ev_subject = DATA(lv_subject_tmp)
                                ev_body_html = DATA(lv_body_html) ).

    LOOP AT keys INTO DATA(appdetails) .
   lv_content = |{ appdetails-%param-comments }|.
    exit.
  endloop.

REPLACE 'ZCOMMENTS' WITH lv_content INTO lv_body_html.
lv_subject = lv_subject_tmp.
 DATA(lv_body_html_soli) = cl_bcs_convert=&amp;gt;string_to_soli( lv_body_html ).  " Build HTML for Sending
    DATA(lo_multipart_ref) = NEW cl_gbt_multirelated_service( ).
    lo_multipart_ref-&amp;gt;set_main_html(
        EXPORTING
          content     = lv_body_html_soli
          description = '' ).


TRY.

DATA(o_document) = cl_document_bcs=&amp;gt;create_document( i_type    = 'HTM'
 i_text    = lv_body_html_soli
 i_subject = CONV so_obj_des( lv_subject ) ).
* Sendrequest erzeugen
        DATA(o_send_request) = cl_bcs=&amp;gt;create_persistent( ).
* Email-Subject festlegen, ip_subject ist vom Typ String
        o_send_request-&amp;gt;set_message_subject( ip_subject = lv_subject ).
* Die Mail an den Sendrequest hängen
        o_send_request-&amp;gt;set_document( o_document ).
        o_send_request-&amp;gt;set_sender( o_sender ).
        DATA o_recipient TYPE REF TO cl_cam_address_bcs .
        LOOP AT recipients ASSIGNING FIELD-SYMBOL(&amp;lt;fs_email_recipient&amp;gt;).
          o_send_request-&amp;gt;add_recipient( i_recipient  = cl_cam_address_bcs=&amp;gt;create_internet_address( &amp;lt;fs_email_recipient&amp;gt;-email ) i_express = abap_true ).
        ENDLOOP.
* Sofort senden
        o_send_request-&amp;gt;set_send_immediately( abap_true ).
* Dokument senden
        IF o_send_request-&amp;gt;send( i_with_error_screen = abap_true ) = abap_true.
        ELSE.
        ENDIF.
      CATCH cx_root INTO DATA(e_text).
    ENDTRY.
  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now create CDS Entity with Annotation for action to Trigger transactional actions (e.g., sending approval emails) directly from the report&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Bericht zur Freigabe der Maßnahmenanforderungen'

@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED

@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
@UI.headerInfo.typeName: 'Freigabeliste'
@UI.headerInfo.typeNamePlural: 'Freigabeliste'
define root view entity ZAPPR_APPREMAIL
as select from Z_I_APPROPRIATEREQUEST
association [0..1] to Z_I_APPRREQ_COSTS as Investcosts on Investcosts.Ledger = Z_I_APPROPRIATEREQUEST.Ledger
and Investcosts.ObjectNumber = Z_I_APPROPRIATEREQUEST.ObjectNumber
and Investcosts.FiscalYear = Z_I_APPROPRIATEREQUEST.FiscalYear
association [0..1] to Z_I_APPRREQ_STATUS as ApprStatus on ApprStatus.Objnr = Z_I_APPROPRIATEREQUEST.IQOBJNR
and ApprStatus.spras = $session.system_language

{
@UI.facet : [
{
id : 'AppropRequest',
purpose : #STANDARD,
type : #IDENTIFICATION_REFERENCE,
label : 'Maßnahmenanforderung',
position : 10 }
]

@UI : {
lineItem : [{position: 10} ,{ type: #FOR_ACTION , dataAction: 'Email' ,label: 'FraigabeListe Email Senden' , invocationGrouping: #CHANGE_SET
}],

identification : [{position: 10 }],
selectionField : [{position: 10}]
}
@EndUserText: { label: 'Investitionsantragsnummer'}
key Z_I_APPROPRIATEREQUEST.Appr_Request,
@UI : {
lineItem : [{position: 20}],
identification : [{ position: 20 }],
selectionField : [{position: 20}]
}
@EndUserText: { label: 'Buchungskreis'}
Z_I_APPROPRIATEREQUEST.CompanyCode,



@UI : {
lineItem : [{position: 30}],
identification : [{position: 50}],
selectionField : [{position: 50}]
}
@EndUserText: { label: 'Bezeichnung'}
Z_I_APPROPRIATEREQUEST.Txt50,

@UI : {
lineItem : [{position: 40}],
identification : [{position: 40}],
selectionField : [{position: 40}] }
@EndUserText: { label: 'Status'}
ApprStatus.txt30 as Statustext,

Investcosts.Currency,
@UI : {
lineItem : [{position: 50}],
identification : [{position: 50}],
selectionField : [{position: 50}] }
@EndUserText: { label: 'Geplante Kosten [aktuelles GJ] in EUR'}
@Semantics.amount.currencyCode : 'Currency'
// @DefaultAggregation: #SUM
Investcosts.PlancostsYear as TotalPlancostsYear,
Investcosts.Currency_Code,
@UI : {
lineItem : [{position: 60}],
identification : [{position: 60}],
selectionField : [{position: 60}] }
@Semantics.amount.currencyCode : 'Currency_Code'
@EndUserText: { label: 'Geplante Kosten [GESAMT] in EUR'}
// @Aggregation.default : #SUM
Investcosts.PlancostsTotal as PlancostsTotalSum,
@UI : {
selectionField : [{position: 70}] }
Z_I_APPROPRIATEREQUEST.Erdat

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now genrate the Service definition and service&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1695398632"&gt;&lt;STRONG&gt;Create the Fiori List Report App&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-1627967846"&gt;In SAP Business Application Studio:&lt;/H4&gt;&lt;OL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;Create a new project from template&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;List Report Object Page&lt;/STRONG&gt;&amp;nbsp; with &lt;STRONG&gt;analytical table&lt;/STRONG&gt; and select the Odata entity generated from the &lt;STRONG&gt;aggregated Service&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;In the Manifest.json add additional Odata Service or use guided development&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="VijayCR_0-1760567958925.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328101i733541505FD7047B/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="VijayCR_0-1760567958925.png" alt="VijayCR_0-1760567958925.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Using the&amp;nbsp;guided development&amp;nbsp; add a action as shwon below .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VijayCR_1-1760568663616.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328106i00D01431AC68CC78/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="VijayCR_1-1760568663616.png" alt="VijayCR_1-1760568663616.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;core:FragmentDefinition xmlns:core='sap.ui.core'
    xmlns='sap.m'&amp;gt;

 &amp;lt;Dialog class="sapUiSizeCompact"
        xmlns="sap.m"
        xmlns:ca="sap.ca.ui"
        xmlns:layout="sap.ui.layout"
        xmlns:form="sap.ui.layout.form"
        xmlns:core="sap.ui.core"
        xmlns:unified="sap.ui.unified" title="{i18n&amp;gt;remarks}" contentWidth="200px" id="idremarks"&amp;gt;
        &amp;lt;content &amp;gt;
            &amp;lt;form:SimpleForm columnsL="1" columnsM="1" maxContainerCols="1" layout="ResponsiveGridLayout" id="formexlstat" editable="true"&amp;gt;
                &amp;lt;form:content &amp;gt;
                    &amp;lt;Label id="remarkslabel" text="{i18n&amp;gt;remarks}"/&amp;gt;
                    &amp;lt;Input id="idremarksinput" type="Text"/&amp;gt;
                &amp;lt;/form:content&amp;gt;
            &amp;lt;/form:SimpleForm&amp;gt;
        &amp;lt;/content&amp;gt;
        &amp;lt;beginButton &amp;gt;
            &amp;lt;Button text="{i18n&amp;gt;idEmail}" press="._onSend" id="idEmail"/&amp;gt;
        &amp;lt;/beginButton&amp;gt;
        &amp;lt;endButton&amp;gt;
            &amp;lt;Button text="{i18n&amp;gt;Cancel}" press="._onCancel" id="idcancelbtn"/&amp;gt;
        &amp;lt;/endButton&amp;gt;
    &amp;lt;/Dialog&amp;gt;
&amp;lt;/core:FragmentDefinition&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Handle the action using the below controller code&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
    "sap/m/MessageToast"
], function(MessageToast) {
    'use strict';
    return {
        onInit: function(){
           this.loadDialogFragment();
            this.AnalyticalTable = this.getView().byId('apprsendemail::sap.suite.ui.generic.template.ListReport.view.ListReport::apprListEmail--analyticalTable') 
            //this.getView(this.getView().getContent()[0].getContent().getItems()[0].getId())
        },
            _onCancel: function(oEvent){
        
            var oModel = this.getView().getModel();
            this._oDialog.close();
            if (this._oDialog) {
                this._oDialog.destroy();
                this._oDialog = null; // Important to nullify the reference
            }
          
          
               
        },
        _onSend: function (oEvent) {
            //var oInput = this.byId("inputParam");
           // var sValue = oInput.getValue();
        
            // Get selected items from the Analytical List Table
            var oTable = this.getView().byId("apprsendemail::sap.suite.ui.generic.template.ListReport.view.ListReport::apprListEmail--analyticalTable"); // Replace with your table ID
            var aSelectedIndices = oTable._getSelectionPlugin().getSelectedIndices();
            var aSelectedItems = [];
        
            aSelectedIndices.forEach(function (iIndex) {
                var oContext = oTable.getContextByIndex(iIndex);
                aSelectedItems.push(oContext.getObject());
            });
        
            // Call the backend action with the selected items and parameter
            this._callBackendAction(aSelectedItems);
            oTable.getModel().refresh(true);
            // Close the dialog
            this._oDialog.close();
            if (this._oDialog) {
                this._oDialog.destroy();
                this._oDialog = null; // Important to nullify the reference
            }
        },
        sendEmailList: function(oEvent) {
 //            MessageToast.show("Custom handler invoked.");
            if (!this._oDialog) {
                this._oDialog = sap.ui.xmlfragment("apprsendemail.ext.fragment.EmailListDialog", this);
                this.getView().addDependent(this._oDialog);
            }
            this._oDialog.open();
        },
        loadDialogFragment: function(){
            if (!this.ReleaseListDialog) {
                this.oDialog = this.loadFragment({
                    name: "apprsendemail.ext.fragment.EmailListDialog",
                    controller: this
                });
            }
        },
        _callBackendAction:  async function (aSelectedItems) {
            var oModel = this.getOwnerComponent().getModel("emailAction");

            var sPath = "/Email"; // Adjust the path as needed
            var mParameters = {
                batchGroupId: "myChangeset",
                changeSetId: "myChangeset"
            };
           
            var comments =     sap.ui.getCore().byId("idremarksinput").getValue();
            // Example of calling the backend for each selected item
            aSelectedItems.forEach(function (oItem) {
                oModel.callFunction(sPath, {
                    method: "POST",
                    mParameters: mParameters,
                    urlParameters: {
                        "Appr_Request": oItem.Appr_Request,
                        "comments" : comments,
                    },
                  
                });
            });
            //Submitting the function import batch call
oModel.submitChanges({
	batchGroupId: "myChangeset", //Same as the batch group id used previously

    success: function (oData) {
  
//      var  oTable = this.getView().byId("releaseapprreq::sap.suite.ui.generic.template.ListReport.view.ListReport::appropriatelist--analyticalTable");
 //       oTable._getSelectionPlugin().getModel().refresh(true);
        // Handle success
        MessageToast.show("E-Mail erfolgreich gesendet");
    }.bind(this),
    error: function (oError) {
        // Handle error
        MessageToast.show("E-Mail wurde nicht erfolgreich gesendet");
    }

});
        },
        
    };
});
    &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once done deploy the app and this will be available in the Workzone and you see the app showing totals and also actions as shown below :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VijayCR_2-1760569240360.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328109iC19213226438FE29/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="VijayCR_2-1760569240360.png" alt="VijayCR_2-1760569240360.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VijayCR_3-1760569271440.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328110i8A0D61FCD51356BE/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="VijayCR_3-1760569271440.png" alt="VijayCR_3-1760569271440.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The approach outlined in this guide demonstrates how to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Leverage CDS view annotations for &lt;STRONG&gt;grouping, subtotals, and totals&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Integrate &lt;STRONG&gt;status tracking&lt;/STRONG&gt; and multilingual support&lt;/LI&gt;&lt;LI&gt;Enable &lt;STRONG&gt;transactional actions&lt;/STRONG&gt; like sending approval emails via RAP behavior&lt;/LI&gt;&lt;LI&gt;Maintain a clean architecture by &lt;STRONG&gt;decoupling analytics and actions&lt;/STRONG&gt; at the service level and integrating them at the UI layer&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This design not only enhances &lt;STRONG&gt;user productivity&lt;/STRONG&gt; but also aligns with SAP’s &lt;STRONG&gt;clean core principles&lt;/STRONG&gt;, ensuring scalability, maintainability, and future readiness of your S/4HANA applications.&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/a-developer-s-guide-to-building-hybrid-transactional-fiori-apps-with-rap/ba-p/14245208"/>
    <published>2025-10-16T01:11:17.894000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/fiori-elements-list-report%E3%81%A7%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89/ba-p/14240934</id>
    <title>Fiori Elements List Reportでのファイルアップロード</title>
    <updated>2025-10-17T18:00:00.031000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633604560"&gt;1. はじめに&lt;/H1&gt;&lt;P&gt;このブログでは、SAP Fiori ElementsのList Reportで、各行（アイテム）に対して“添付ファイル“のような項目を持たせ、行単位でファイルのアップロード・参照・削除の実現方法を紹介します。&lt;BR /&gt;List Reportのデータソースは、ABAP RESTful Application Programming Model（RAP）フレームワークを使用して開発したOData V4サービスを対象とし、RAP開発においてファイルアップロードを実現するために必要な実装についての内容となっています。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437091055"&gt;2. ファイルアップロード実装のポイント&lt;/H1&gt;&lt;P&gt;ファイルアップロード実装においては、①ファイル格納に必要なテーブル項目の定義、および、②ファイルオブジェクト格納用項目とファイルタイプ格納用項目への適切なアノテーション付与の2点が必要となります。&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;ファイル格納に必要なテーブル項目の定義&lt;P&gt;カスタムテーブルに以下の3つの項目を設定します（項目名は、サンプルです。）&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;ファイルオブジェクト格納用項目（ファイルサイズを指定しない場合、abap.rawstring(0)とする）&lt;UL&gt;&lt;LI&gt;例：attachment: abap.rawstring(0);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;ファイル名格納用項目&lt;UL&gt;&lt;LI&gt;例：filename: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;ファイルタイプ格納用項目&lt;UL&gt;&lt;LI&gt;例：mimetype: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;CDS Viewでのファイルオブジェクト格納用項目とファイルタイプ格納用項目への適切なアノテーション付与&lt;UL&gt;&lt;LI&gt;ファイルオブジェクト格納用項目&lt;UL&gt;&lt;LI&gt;例：&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Semantics.largeObject : {
mimeType: 'Mimetype',
fileName: 'Filename',
contentDispositionPreference: #INLINE
}​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;ファイルタイプ格納用項目&lt;UL&gt;&lt;LI&gt;@Semantics.mimeType: true&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1240577550"&gt;3. 実装例&lt;/H1&gt;&lt;P&gt;本ブログでは、RAP開発の簡略化のため、RAP Generatorを使用します。RAP Generatorは、カスタムテーブルからCDS ViewやBehavior Definition等のRAP オブジェクト群をウィザードによる設定のみで生成可能なツールです。RAP Generator を利用して RAP オブジェクトを生成する場合、ドラフト機能を持つ更新処理（Managed Runtime）に対応したサービスが生成されます。そのため、テーブル定義にドラフト機能や更新処理に利用するための必須項目を定義している必要があります。RAP Generatorについては、以下のSAP Helpをご確認ください。&lt;/P&gt;&lt;P&gt;SAP Help: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/generating-rap-business-service-with-generate-abap-repository-objects-wizard" target="_blank" rel="noopener noreferrer"&gt;Generating a RAP Business Service with the Generate ABAP Repository Objects Wizards&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;以下の実装手順は、&lt;SPAN&gt;SAP Help: &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/example-rap-business-service-generation" target="_blank" rel="noopener noreferrer"&gt;Example: OData UI Service Generation Based on a Database Table&lt;/A&gt;のサンプルをベースとした実装例となります。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302229483"&gt;1. RAP Generatorによるオブジェクトを格納するためのパッケージを作成します。&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_0-1760157013761.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325823iFF67EF8A7D119B10/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760157013761.png" alt="hironobu_nakayama_0-1760157013761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1105715978"&gt;2. １で作成したパッケージ内にカスタムテーブルを作成します。&lt;/H3&gt;&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760157057491.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325824i82D4DF7B553C56CD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_1-1760157057491.png" alt="hironobu_nakayama_1-1760157057491.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_2-1760157071905.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325825i0DDC00E4250B93BB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_2-1760157071905.png" alt="hironobu_nakayama_2-1760157071905.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Custom Table for file upload test'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zpt_file_upload {

  key client            : abap.clnt not null;
  key customer_id       : /dmo/customer_id not null;
  first_name            : /dmo/first_name;
  last_name             : /dmo/last_name;
  title                 : /dmo/title;
  street                : /dmo/street;
  postal_code           : /dmo/postal_code;
  city                  : /dmo/city;
  country_code          : land1;
  phone_number          : /dmo/phone_number;
  email_address         : /dmo/email_address;
  attachment            : abap.rawstring(0);
  filename              : abap.char(128);
  mimetype              : abap.char(128);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-909202473"&gt;3. RAP Generatorを実行し、ウィザードに沿って設定します。&lt;/H3&gt;&lt;P&gt;対象のカスタムテーブルを右クリック→”Generate ABAP Repository Objects…” で実行&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_3-1760157422206.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325826iC928155A8BCFAE9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_3-1760157422206.png" alt="hironobu_nakayama_3-1760157422206.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;サービスタイプの選択&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_4-1760157441952.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325827iF0BB085AA624F8A4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_4-1760157441952.png" alt="hironobu_nakayama_4-1760157441952.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;生成オブジェクト格納用パッケージの選択&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_5-1760157464387.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325828iCA1BEBBB2C283DDC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_5-1760157464387.png" alt="hironobu_nakayama_5-1760157464387.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;生成されるオブジェクトを確認し、必要に応じて名称変更やエイリアス名を設定&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_6-1760157482071.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325829i0F2526AA45703F9D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_6-1760157482071.png" alt="hironobu_nakayama_6-1760157482071.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_7-1760157495656.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325830i9C6952F5528E2BD6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_7-1760157495656.png" alt="hironobu_nakayama_7-1760157495656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712688968"&gt;4. 生成されたデータモデル（CDS View）へファイルアップロードのためのアノテーションを追加し、有効化します。&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #CHECK
@EndUserText.label: '##GENERATED ZPT_FILE_UPLOAD'
define root view entity ZR_PT_FILE_UPLOAD
  as select from zpt_file_upload
{
  key customer_id           as CustomerID,
      first_name            as FirstName,
      last_name             as LastName,
      title                 as Title,
      street                as Street,
      postal_code           as PostalCode,
      city                  as City,
      country_code          as CountryCode,
      phone_number          as PhoneNumber,
      email_address         as EmailAddress,
      @Semantics.largeObject : {
            mimeType: 'Mimetype',
            fileName: 'Filename',
            contentDispositionPreference: #INLINE
          }
      attachment            as Attachment,
      filename              as Filename,
      @Semantics.mimeType: true
      mimetype              as Mimetype,
      @Semantics.user.createdBy: true
      local_created_by      as LocalCreatedBy,
      @Semantics.systemDateTime.createdAt: true
      local_created_at      as LocalCreatedAt,
      @Semantics.user.localInstanceLastChangedBy: true
      local_last_changed_by as LocalLastChangedBy,
      @Semantics.systemDateTime.localInstanceLastChangedAt: true
      local_last_changed_at as LocalLastChangedAt,
      @Semantics.systemDateTime.lastChangedAt: true
      last_changed_at       as LastChangedAt

}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-516175463"&gt;5. サービスバインディングを公開します。&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_8-1760157523686.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325831i4F5DCB4410845F5A/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_8-1760157523686.png" alt="hironobu_nakayama_8-1760157523686.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-319661958"&gt;6. エンティティを選択して、プレビューします。&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_9-1760157563744.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325832iC927D9BEF8566E34/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_9-1760157563744.png" alt="hironobu_nakayama_9-1760157563744.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-123148453"&gt;7. “Create”ボタンからデータの登録およびファイルのアップロードを実行します。&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_10-1760157593131.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325833i2D10826CA744794B/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_10-1760157593131.png" alt="hironobu_nakayama_10-1760157593131.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_11-1760157628831.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325834iCBF6028E63ADA10C/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_11-1760157628831.png" alt="hironobu_nakayama_11-1760157628831.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_12-1760157647311.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325835iC7286B9648C140C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_12-1760157647311.png" alt="hironobu_nakayama_12-1760157647311.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_13-1760157663896.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325836i33B8FE451D47FCBE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_13-1760157663896.png" alt="hironobu_nakayama_13-1760157663896.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_14-1760157681275.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325837i22D13F546974AC37/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_14-1760157681275.png" alt="hironobu_nakayama_14-1760157681275.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_15-1760157702526.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325838iBABEDFAC843FB59D/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_15-1760157702526.png" alt="hironobu_nakayama_15-1760157702526.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_16-1760157721073.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325839i9A80962EABEC37F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_16-1760157721073.png" alt="hironobu_nakayama_16-1760157721073.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-438209593"&gt;4. まとめ&lt;/H1&gt;&lt;P&gt;上記の実装により、ABAP RESTful Application Programming Model（RAP）を用いたOData V4サービスを利用し、SAP Fiori ElementsのList Reportで各行（アイテム）ごとに“添付ファイル”項目を持たせ、行単位でファイルのアップロード・参照・削除を実現することが可能です。是非ご活用下さい。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-241696088"&gt;参考情報&lt;/H1&gt;&lt;P&gt;SAPUI5 Document: &lt;A href="https://sapui5.hana.ondemand.com/#/topic/b236d32d48b74304887b3dd5163548c1" target="_blank" rel="noopener nofollow noreferrer"&gt;Enabling Stream Support&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/fiori-elements-list-report%E3%81%A7%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89/ba-p/14240934"/>
    <published>2025-10-17T18:00:00.031000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/rap%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88-sap%E6%A8%99%E6%BA%96%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E6%B6%88%E8%B2%BB%E3%81%A8%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0rap%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E3%83%88%E3%83%AA%E3%82%AC%E3%83%BC/ba-p/14241240</id>
    <title>RAPイベント：SAP標準イベントの消費とカスタムRAPイベントのトリガー</title>
    <updated>2025-10-18T18:00:00.033000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633627651"&gt;1. はじめに&lt;/H1&gt;&lt;P&gt;イベント駆動アーキテクチャ（&lt;SPAN&gt;EDA&lt;/SPAN&gt;）は、ビジネスにおける重要な“イベント”を検出し、リアルタイムで対応する統合モデルです。現代の企業がリアルタイム運用と柔軟で応答性の高いシステムを求める中で、&lt;SPAN&gt;EDA&lt;/SPAN&gt;は不可欠な技術となっています。&lt;BR /&gt;SAP S/4HANAにおけるイベント駆動アーキテクチャの実装において、標準&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントが多数提供されていますが、標準イベントのペイロードでは、業務要件に対応できず、カスタマイズが必要となる場合があります。特に、イベントデータによるフィルタリングや標準イベントのペイロード補完を目的として、&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントを&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;により拡張するユースケースがございます。&lt;BR /&gt;Derived Eventは、&lt;SPAN&gt;S/4HANA Cloud, private edition &amp;amp; S/4HANA 2023 / S/4HANA Cloud, public edition 2308&lt;/SPAN&gt;リリースで導入された機能で、既存の&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントをベースに、カスタムペイロードを持つ新しいイベントを定義できる機能です。これにより、標準イベントの実装を再利用しながら、業務に必要な追加フィールドやフィルタリング条件を適用したイベントを作成することが可能になります。&lt;BR /&gt;SAP Community Blog: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/derived-events-how-to-trigger-custom-event-from-an-sap-standard-event/ba-p/13955193" target="_blank"&gt;Derived Events- How to Trigger Custom Event from an SAP Standard Event&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;一方、&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;は、拡張対象の&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準オブジェクトが以下の条件を満たしている必要があります。&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;参照元イベントを含むビジネスオブジェクトが拡張可能&lt;SPAN&gt;(extensible)&lt;/SPAN&gt;であること&lt;/LI&gt;&lt;LI&gt;参照されるイベントが&lt;SPAN&gt;C0&lt;/SPAN&gt;および&lt;SPAN&gt;C1&lt;/SPAN&gt;リリースされた&lt;SPAN&gt;RAP BO&lt;/SPAN&gt;インターフェースで公開されている必要があること&lt;/LI&gt;&lt;LI&gt;Derived Eventのペイロードのデータソースとして使用される&lt;SPAN&gt;CDS&lt;/SPAN&gt;ビューエンティティが&lt;SPAN&gt;C1&lt;/SPAN&gt;リリースされている必要があること&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;そのため、&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準&lt;SPAN&gt;RAP BO&lt;/SPAN&gt;では、&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;による拡張に対応していないオブジェクトも存在します。この場合、本来であれば&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;で解決できるはずの要件が実現できないケースが発生します。&lt;BR /&gt;そこで本ブログでは、&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;による拡張が不可能な&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントに対して、カスタム&lt;SPAN&gt;RAP BO&lt;/SPAN&gt;によるペイロードの拡張を実現するワークアラウンドアプローチについて紹介します。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437114146"&gt;2. ワークアラウンドソリューション&lt;/H1&gt;&lt;P&gt;Derived Eventが使用できない場合、&lt;SPAN&gt;Local Event Consumption&lt;/SPAN&gt;とカスタム&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントを組み合わせたワークアラウンドアプローチが有効な手段となります。このアプローチは、&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントをローカル（カスタム&lt;SPAN&gt;ABAP&lt;/SPAN&gt;クラス）で消費し、それをトリガーとしてカスタム&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントを発生させる手法です。カスタムイベントのペイロードを業務要件に合わせたペイロードとすることで、イベントフィルタの利用等が可能となります。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760225484634.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326000i65E19ECBA8BC68CD/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760225484634.png" alt="hironobu_nakayama_1-1760225484634.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1240600641"&gt;3. 実装サンプル&lt;/H1&gt;&lt;P&gt;本ブログでは、拡張不可な&lt;SPAN&gt;r_purchaseordertp&lt;/SPAN&gt;を対象オブジェクトとし、購買発注伝票のデータ変更に対するイベントペイロードの拡張を実現します。&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントでは、購買発注伝票番号のみのペイロードあるのに対し、カスタムイベントでは、購買発注伝票番号と購買発注伝票タイプをペイロードとします。Event Bindingおよび&lt;SPAN&gt;Event Mesh&lt;/SPAN&gt;とのチャンネル設定等は、&lt;SPAN&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-rap-business-events-in-sap-s-4hana-on-premise-2022/ba-p/13553312" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-rap-business-events-in-sap-s-4hana-on-premise-2022/ba-p/13553312&lt;/A&gt; &lt;/SPAN&gt;をご確認ください。本ブログの実装サンプルでの&lt;SPAN&gt;RAP BO&lt;/SPAN&gt;では、イベント以外の&lt;SPAN&gt;CRUD&lt;/SPAN&gt;や保存等の処理は、実装していない点にご注意ください。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302252574"&gt;(1) Local Consumer (ローカルイベントハンドリングのためのカスタムABAPクラス)&lt;/H3&gt;&lt;H5 id="toc-hId-1363904507"&gt;グローバルクラス: zcl_event_consump&lt;/H5&gt;&lt;P&gt;グローバルクラスでは、&lt;SPAN&gt;FOR EVENTS OF r_purchaseordertp&lt;/SPAN&gt;の定義により、消費する標準イベントを設定します。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_event_consump DEFINITION
  PUBLIC
  ABSTRACT
  FINAL
  FOR EVENTS OF r_purchaseordertp.

  PUBLIC SECTION.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_event_consump IMPLEMENTATION.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1167391002"&gt;ローカルクラス: zcl_event_consump&lt;/H5&gt;&lt;P&gt;ローカルクラスでは、消費した標準イベントのペイロードのデータをもとに追加のデータ取得を行い、カスタム&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントをトリガーします。イベントのトリガーは、&lt;SPAN&gt;RAP&lt;/SPAN&gt;フレームワークにおいて、&lt;SPAN&gt;Save Sequence&lt;/SPAN&gt;でのみ可能なため、&lt;SPAN&gt;cl_abap_tx=&amp;gt;save(&amp;nbsp; ). &lt;/SPAN&gt;により、明示的に&lt;SPAN&gt;Save Sequence&lt;/SPAN&gt;に変更する必要がある点に注意が必要です。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*"* use this source file for the definition and implementation of
*"* local helper classes, interface definitions and type
*"* declarations
CLASS lcl_event_consump DEFINITION INHERITING FROM cl_abap_behavior_event_handler.
  PRIVATE SECTION.
    METHODS:
      consume_changed FOR ENTITY EVENT changed_instances FOR purchaseorder~changed.
ENDCLASS.

CLASS lcl_event_consump IMPLEMENTATION.

  METHOD consume_changed.
    cl_abap_tx=&amp;gt;save(  ).

    DATA lv_potype TYPE mm_purchaseordertype.

    CHECK changed_instances IS NOT INITIAL.

    LOOP AT changed_instances INTO DATA(changed_instance).

      SELECT SINGLE purchaseordertype
      FROM c_purchaseordertp
      INTO _potype
      WHERE purchaseorder = @changed_instance-purchaseorder.

      DATA(et_events) = VALUE zbp_i_purchseorder_test=&amp;gt;tt_events(
        (
        purchaseorder = changed_instance-purchaseorder
        purchaseordertype = lv_potype
        )
      ).

      zbp_i_purchseorder_event=&amp;gt;raise_po_changed_event( it_events = et_events ).

    ENDLOOP.

  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712712059"&gt;(2) Custom RAP BO (Custom Event)&lt;/H3&gt;&lt;H5 id="toc-hId-774363992"&gt;CDS View: &lt;SPAN&gt;ZI_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;CDS Viewでは、購買発注伝票番号のみ定義しています。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Consume purchase order event'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
  serviceQuality: #X,
  sizeCategory: #S,
  dataClass: #MIXED
}
define root view entity ZI_purchseorder_event as select from I_PurchaseOrder
{
  key PurchaseOrder
}&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId-577850487"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId-381336982"&gt;Behavior Definition: &lt;SPAN&gt;ZI_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;イベントトリガのためのカスタム&lt;SPAN&gt;RAP&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;BO&lt;/SPAN&gt;では、&lt;SPAN&gt;create / update / delete &lt;/SPAN&gt;機能を定義していません。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed with unmanaged save implementation in class zbp_i_purchseorder_event unique;
strict ( 2 );

define behavior for ZI_purchseorder_event //alias &amp;lt;alias_name&amp;gt;
//persistent table ekko
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
  //  create;
  //  update;
  //  delete;
  event purchaseorder_changed parameter ZAB_PO_changed_event;

  field ( readonly ) PurchaseOrder;
}&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--735379344"&gt;Behavior Implementation (Global class) : &lt;SPAN&gt;zbp_i_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;グローバルクラスでは、イベントトリガー用のメソッドを定義します。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zbp_i_purchseorder_event DEFINITION PUBLIC ABSTRACT FINAL FOR BEHAVIOR OF zi_purchseorder_event.

  TYPES tt_events TYPE TABLE FOR EVENT zi_purchseorder_event~purchaseorder_changed.

  PUBLIC SECTION.
        CLASS-METHODS raise_po_changed_event
            IMPORTING it_events TYPE tt_events.

ENDCLASS.

CLASS zbp_i_purchseorder_event IMPLEMENTATION.
METHOD raise_po_changed_event.
  lcl_event_handler=&amp;gt;on_po_changed_event( it_events ).
endmethod.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--931892849"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId--1128406354"&gt;Behavior Implementation (Local class) : &lt;SPAN&gt;lhc_zi_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;ローカルクラスでは、保存処理等は実装せず、イベントトリガー用のメソッドのみ実装しています。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zi_purchseorder_event DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zi_purchseorder_event RESULT result.

ENDCLASS.

CLASS lhc_zi_purchseorder_event IMPLEMENTATION.

  METHOD get_instance_authorizations.
  ENDMETHOD.

ENDCLASS.

CLASS lsc_zi_purchseorder_event DEFINITION INHERITING FROM cl_abap_behavior_saver.
  PROTECTED SECTION.

    METHODS save_modified REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.

ENDCLASS.

CLASS lsc_zi_purchseorder_event IMPLEMENTATION.

  METHOD save_modified.
  ENDMETHOD.

  METHOD cleanup_finalize.
  ENDMETHOD.

ENDCLASS.

CLASS lcl_event_handler DEFINITION FRIENDS zbp_i_purchseorder_event.
  PUBLIC SECTION.
    CLASS-METHODS on_po_changed_event IMPORTING it_events TYPE zbp_i_purchseorder_event=&amp;gt;tt_events.
ENDCLASS.

CLASS lcl_event_handler IMPLEMENTATION.
   METHOD on_po_changed_event.

    RAISE ENTITY EVENT ZI_purchseorder_event~purchaseorder_changed FROM it_events.

   ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--1324919859"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId--1521433364"&gt;Abstract Entity: &lt;SPAN&gt;ZAB_PO_changed_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;Abstract entityにより、購買発注伝票タイプを追加しています。これにより、カスタムRAPイベントのペイロードは、購買発注伝票番号と購買発注伝票タイプとなります。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abastract entity for po changed event'
define abstract entity ZAB_PO_changed_event
  //  with parameters parameter_name : parameter_type
{
  PurchaseOrderType : mm_purchaseordertype;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--544334841"&gt;4. 実装結果&lt;/H1&gt;&lt;P&gt;Manage Purchase Orders (F0842A) アプリから既存の購買発注伝票を変更して、保存します。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_0-1760229645619.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326001iA137C622300D0D19/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760229645619.png" alt="hironobu_nakayama_0-1760229645619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;SAP Event Meshで&lt;SPAN&gt;S/4HANA&lt;/SPAN&gt;からトリガされたカスタムイベントを受け取ることができます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760229707438.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326002i776A835D573B8867/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760229707438.png" alt="hironobu_nakayama_1-1760229707438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--740848346"&gt;5. まとめ&lt;/H1&gt;&lt;P&gt;イベント駆動アーキテクチャの実現において、&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;による拡張が不可能な場合、&lt;SPAN&gt;Local Event Consumption&lt;/SPAN&gt;とカスタム&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントを組み合わせたワークアラウンドアプローチが有効な手段となります。&lt;BR /&gt;こちらのアプローチにより、業務要件に応じたカスタムペイロードとフィルタリング機能を実現することで、必要なデータをイベントコンシューマに提供し、システム間連携の最適化を図ることが可能です。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--937361851"&gt;参考情報&lt;/H1&gt;&lt;P&gt;SAP Learning：&lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/discovering-event-driven-integration-with-sap-integration-suite-advanced-event-mesh/explaining-event-driven-architecture_d02a51bb-1ce4-4c2d-a25d-8b9c9198ffd2" target="_blank" rel="noopener noreferrer"&gt;Explaining Event-Driven Architecture&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Help: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/sap-btp-guidance-framework/integration-architecture-guide/event-driven-architecture?amp;state=PRODUCTION&amp;amp;amp;version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Event-driven Architecture&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-2-creating-custom-business/ba-p/13914171" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [2]: Creating custom business events&lt;/A&gt;&lt;BR /&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-5-consuming-a-local-business/ba-p/13915138" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [5]: Consuming a local business event&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88-sap%E6%A8%99%E6%BA%96%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E6%B6%88%E8%B2%BB%E3%81%A8%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0rap%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E3%83%88%E3%83%AA%E3%82%AC%E3%83%BC/ba-p/14241240"/>
    <published>2025-10-18T18:00:00.033000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/writable-entity-in-cds/ba-p/14249189</id>
    <title>Writable Entity in CDS</title>
    <updated>2025-10-22T07:56:59.929000+02:00</updated>
    <author>
      <name>kalmesh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1490139</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introduction to writable CDS Entities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;CDS provides a powerful way to define and consume data models.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Traditionally, CDS views were read-only, used primarily for data retrieval.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;However, with the evolution of SAP's ABAP platform, Writable CDS Entities were introduced to enable direct data manipulation (Update, modify).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Types of Writable CDS Entities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;1.Writable CDS View Entities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; - Wrap DDIC tables for direct writing access.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; 2.Writable External Entities &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;- Enable write access to eternal database.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog, we are going to focus on CDS Writable Entities. I will walk you through the concept step-by-step, using a practical example to demonstrate how it works and what operations—such as&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt; INSERT&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;UPDATE&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;—we can perform using a writable entity. Let's dive into the example.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create a Table&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_0-1761035674723.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330139i0E91AC394DB0288C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_0-1761035674723.png" alt="kalmesh_0-1761035674723.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Next, we will create a writable CDS entity on top of the database table &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ZTRL_T_AIRPORT, &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Using the writable CDS entity, we can perform &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;update &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;operations directly, and we can also &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;insert&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; new records by using the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;MODIFY&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; statement. We will explore how to implement these operations in the upcoming steps.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_1-1761035762682.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330140i8F18A3F4D2C62746/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_1-1761035762682.png" alt="kalmesh_1-1761035762682.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In the next step, we will create a class to perform all the required operations. We will use standard interface methods to execute these operations and display the output in the console for better visibility and testing.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_2-1761035834570.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330141i6A6F1BD2A833069C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_2-1761035834570.png" alt="kalmesh_2-1761035834570.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Let’s&lt;/SPAN&gt;&lt;SPAN class=""&gt; insert some data into the database table. Since we cannot perform insert operation directly through a writable CDS entity, I will &lt;/SPAN&gt;&lt;SPAN class=""&gt;proceed&lt;/SPAN&gt;&lt;SPAN class=""&gt; with inserting data into the underlying database &lt;/SPAN&gt;&lt;SPAN class=""&gt;table.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_3-1761035898193.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330142i477E22022DB56E99/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_3-1761035898193.png" alt="kalmesh_3-1761035898193.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Fetch &lt;/SPAN&gt;&lt;SPAN class=""&gt;the data from the database table to verify whether the records were successfully inserted, as performed in the &lt;/SPAN&gt;&lt;SPAN class=""&gt;p&lt;/SPAN&gt;&lt;SPAN class=""&gt;revious&lt;/SPAN&gt; &lt;SPAN class=""&gt;step.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_4-1761035941906.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330143i0ADEFA20BA444649/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_4-1761035941906.png" alt="kalmesh_4-1761035941906.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;UPDATE&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, let’s perform an update operation using the writable CDS entity (&lt;STRONG&gt;ZTRL&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;_I_WRENT_DEMO&lt;/STRONG&gt;)&lt;SPAN&gt;. In this example, we will update the name field to demonstrate how data can be modified through the entity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_5-1761036054229.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330145i4019B9CCE92DA46E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_5-1761036054229.png" alt="kalmesh_5-1761036054229.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;INSERT&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We will insert a new record by using the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;MODIFY&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; statement, which allows us to perform insert operations through the writable CDS entity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_6-1761036103280.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330146iF60E2A1020E11868/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_6-1761036103280.png" alt="kalmesh_6-1761036103280.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;DELETE&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Direct delete operations are not supported through writable CDS entities. If attempted, the system will raise an error, as shown below.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_7-1761036149147.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330147i142A233FDCF4405F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_7-1761036149147.png" alt="kalmesh_7-1761036149147.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_8-1761036170936.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330148i289A85701DAF27DC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_8-1761036170936.png" alt="kalmesh_8-1761036170936.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Conclusion&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Writable CDS Entities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; offer a powerful and flexible way to interact with database tables in SAP. Through these entities, we can perform &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;update operations &lt;/SPAN&gt;&lt;/STRONG&gt;and&lt;SPAN&gt;&amp;nbsp;even &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;insert new records&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; using the &lt;/SPAN&gt;&lt;SPAN&gt;MODIFY&lt;/SPAN&gt;&lt;SPAN&gt; statement.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Keep experimenting, keep learning—and happy coding! &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/writable-entity-in-cds/ba-p/14249189"/>
    <published>2025-10-22T07:56:59.929000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/automatic-retry-of-application-jobs-in-abap-in-cloud/ba-p/14249591</id>
    <title>Automatic retry of Application Jobs in ABAP in Cloud</title>
    <updated>2025-10-22T08:12:39.185000+02:00</updated>
    <author>
      <name>natanael1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1557162</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633869018"&gt;Introduction&lt;/H1&gt;&lt;P&gt;When moving from classic ABAP to ABAP in Cloud, one of the most common painpoints of the developers is the fact that they lose many familiar tools and options they had in the non-cloud systems. One of these tools are classical Batch Jobs, they have been replaced with Application Jobs in ABAP in Cloud, about this and some other issue&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/404361"&gt;@octavian_savu&lt;/a&gt;&amp;nbsp;has a very good &lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/abap-cloud-application-jobs-overcoming-key-challenges/ba-p/13929058" target="_self"&gt;blog post&lt;/A&gt;&amp;nbsp;where he explains some common challenges with Application Jobs in ABAP in Cloud.&lt;/P&gt;&lt;P&gt;In my case, we had multiple nightly Application Jobs that were occasionally failing &lt;STRONG&gt;due to network stability&lt;/STRONG&gt; or &lt;STRONG&gt;downtime&lt;/STRONG&gt;, and many of these failures were&lt;STRONG&gt; "fixable" with a simple retry&lt;/STRONG&gt;, however without a 24/7 support we could not make sure that these jobs were retried when they failed. And this is a common fallacy of the &lt;STRONG&gt;&lt;A href="https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing" target="_self" rel="nofollow noopener noreferrer"&gt;"The Eight Fallacies of Distributed Computing"&lt;/A&gt;, &lt;/STRONG&gt;specifically "&lt;STRONG&gt;The network is reliable"&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;My plan was to build a robust retry framework for Application Jobs that will overcome these type of transient issues. I was very much inspired by the Phoenix bird who's rising from the ashes, so my goal was to make sure that the Application Jobs can rise from the ashes as well. The full source code of this framework can be found in &lt;A href="https://github.com/legonmarian/abap-btp-phoenix-framework" target="_self" rel="nofollow noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;&lt;H1 id="toc-hId-1437355513"&gt;Problem Statement&lt;/H1&gt;&lt;P&gt;In classical process chains(TCODE: RSPC), you are given the opportunity of configuring an automatic retry for a certain Job step in case of failure.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-21 at 14.18.54.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330232iAE354CF85EF15A3A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-10-21 at 14.18.54.png" alt="Screenshot 2025-10-21 at 14.18.54.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;However in ABAP in Cloud you don't have such options unfortunately. So there's a gap in functionality that we'l need to address somehow. Why do we need to address it?&amp;nbsp;&lt;BR /&gt;That's simple, and I will give you an &lt;STRONG&gt;example&lt;/STRONG&gt; for that:&lt;/P&gt;&lt;H2 id="toc-hId-1369924727"&gt;Example&lt;/H2&gt;&lt;P&gt;Let's assume you somehow decided to implement the &lt;STRONG&gt;MRP&lt;/STRONG&gt;(or any other process, it doesn't matter)&amp;nbsp;runs in Cloud, you have your development / support teams that sits in Berlin, the working day is from 07:00 - 15:00 UTC. And you also have 2 factories, one in Warsaw(work day 07:00 - 15:00 UTC) and one in Shanghai(work day 01:00 - 09:00 UTC).&lt;BR /&gt;At both factories you also have some production planners that need the data from the MRP run in order to be able to work, if the data is not there, their time is wasted.&amp;nbsp;&lt;BR /&gt;Let's say you have one MRP run per each factory and it takes 1 hour to complete, and you must run it not sooner than 2 hours before the factory opens, otherwise you will miss some important orders.&lt;BR /&gt;Therefore you will have the next schedule:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Warsaw MRP -&amp;gt; 05:00 - 06:00&lt;/LI&gt;&lt;LI&gt;Shanghai MRP -&amp;gt; 23:00 - 00:00&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;And let's assume a theoretical scenario when both of these Jobs have failed.&amp;nbsp;The support team starts their work at ~07:00, this is when they restart the job, and at ~08:00 the job is completed.&amp;nbsp;How much time did the production planners lose?&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Warsaw - ~1-2 hours which is not that much, but still unpleasant&lt;/LI&gt;&lt;LI&gt;Shanghai - ~7-8 hours which is almost a full working day, completely unacceptable&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1044328503"&gt;Design goal&lt;/H1&gt;&lt;P&gt;The ultimate goal is making sure that the system is able to "heal" itself and try again in case of failure. In order to translate this into ABAP code we will need a framework with the next requirements:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Automatically retries in case of failure&lt;/LI&gt;&lt;LI&gt;Has a configurable timeout between the retries to allow external systems to recover&lt;/LI&gt;&lt;LI&gt;Follows SOLID principles&lt;/LI&gt;&lt;LI&gt;Can be fitted into existing jobs with minimal refactoring&lt;/LI&gt;&lt;LI&gt;The class should be able to control the flow of the framework if needed.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In order to achieve this behavior I will introduce the Phoenix Framework. The idea behind of the phoenix framework is to introduce a thin architectural layer on top of the standard ABAP APJ(Application Jobs) runtime. The goal of this layer is to separate the technical orchestration of retires from the actual business logic of the Application Job, this way each job stays focused on what it needs to do, while the framework handles how it should react when something goes wrong.&amp;nbsp;&lt;/P&gt;&lt;P&gt;This behavior will be achieved by introducing a two-tier class structure, a pretty common OOP design.&amp;nbsp;In general in most of the code we prefer composition over inheritance, but in this specific use case inheritance will be more suitable technique.&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Base Class&lt;/STRONG&gt; (&lt;CODE&gt;zcl_phoenix_base&lt;/CODE&gt;) - Handles job lifecycle, and implements APJ contracts, plus it provides the retry engine. It will implement&amp;nbsp;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;&amp;nbsp;and the encapsulated interfaces inside it.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Child Class&lt;/STRONG&gt; (f.ex.&amp;nbsp;&lt;CODE&gt;zcl_phoenix_job_mrp&lt;/CODE&gt;) - Inherits from&amp;nbsp;&lt;CODE&gt;zcl_phoenix_base&lt;/CODE&gt;, and will implement the business logic through hooks enforced by the interface.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;besides that we will create a facade for this framework&amp;nbsp;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;, this interface will be serving multiple purposes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Central point of keeping generic types specific for application jobs&lt;/LI&gt;&lt;LI&gt;Bundles multiple interfaces together&lt;/LI&gt;&lt;LI&gt;Defines an implementation contract for the child class.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-847814998"&gt;Implementation&lt;/H1&gt;&lt;H3 id="toc-hId-909466931"&gt;Interface&lt;/H3&gt;&lt;P&gt;I will first provide the source code, and below will be the explanation&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;"! Phoenix framework interface
INTERFACE zif_phoenix PUBLIC.

  TYPES:
    BEGIN OF ty_job_params_range,
      sign   TYPE c LENGTH 1,
      option TYPE c LENGTH 2,
      low    TYPE c LENGTH 50,
      high   TYPE c LENGTH 50,
    END OF ty_job_params_range.

  TYPES: tt_job_params_range TYPE STANDARD TABLE OF ty_job_params_range WITH EMPTY KEY.

  INTERFACES if_apj_dt_defaults.
  INTERFACES if_apj_rt_run.
  INTERFACES if_oo_adt_classrun.

  "! Run business logic &amp;lt;br&amp;gt;
  "! Implements the job-specific business logic. The framework invokes this
  "! once per attempt. If an exception derived from cx_root is raised, the
  "! framework logs it and may retry according to the configured retry settings.
  "! Keep this method idempotent or self-compensating so it remains safe under retries.
  "! @raising cx_root | Propagate any business error to signal failure to the framework.
  METHODS process RAISING cx_root.

  "! Set default attributes &amp;lt;br&amp;gt;
  "! Populate instance attributes that serve as defaults for scheduling and
  "! execution
  "! The base class calls this from if_apj_dt_defaults~fill_attribute_defaults
  "! so implementations do not depend on APJ types.
  METHODS fill_attribute_defaults.


  "! Get the delay before the next run &amp;lt;br/&amp;gt;
  "! @parameter retry_count | The retry count
  "! @parameter delay | How many seconds to wait before retrying the job
  METHODS get_next_delay IMPORTING retry_count TYPE i
                         RETURNING VALUE(delay) TYPE i.

ENDINTERFACE.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;So why do we implement the&amp;nbsp;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt; interface? Simply it is just encapsulating the structure of our future Application Jobs.&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;SPAN&gt;The type &lt;/SPAN&gt;&lt;SPAN&gt;&lt;SPAN&gt;&lt;CODE&gt;ty_job_params_range&lt;/CODE&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;is just made available in here for job parameters, as they will follow this shape if we want to be able to select multiple options, for more on this check &lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/example-implementation-using-interfaces-if-apj-dt-exec-object-and-if-apj-rt-exec-object?locale=en-US" target="_self" rel="noopener noreferrer"&gt;SAP Docs&lt;/A&gt;.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;SPAN&gt;And then we implement these 3 interfaces: &lt;/SPAN&gt;&lt;SPAN&gt;&lt;CODE&gt;if_apj_rt_run&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt;,&amp;nbsp;&lt;CODE&gt;if_apj_dt_defaults&lt;/CODE&gt;,&amp;nbsp;&lt;CODE&gt;if_oo_adt_classrun&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt;, but why do we need them?&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;So let's take them one by one:&lt;/SPAN&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;CODE&gt;if_apj_rt_run&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;- this is the default interface an application job should implement, without this interface a catalog cannot be created therefore we wouldn't be able to execute it as an application job, inside the &lt;/SPAN&gt;&lt;SPAN&gt;&lt;CODE&gt;if_apj_rt_run~main&lt;/CODE&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;you should encapsulate your business logic. By having it inside&amp;nbsp;&amp;nbsp;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt; we are basically saying that all the classes that implement &lt;/SPAN&gt;&lt;SPAN&gt;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt;(or spoiler alert inherits from a class that implements it) will be "schedulable" as a batch job.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;CODE&gt;if_apj_dt_defaults&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;- this is the interface where you define default values for the parameters passed ot the application job, you can either provide them in here, in the class constructor or as default values of the public attributes of the class.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;CODE&gt;if_oo_adt_classrun&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;- a scheduled application job cannot be debugged, therefore we will introduce this interface for easier debugging of the business logic&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-712953426"&gt;&lt;SPAN&gt;Base Class Definition&lt;/SPAN&gt;&lt;/H3&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_phoenix_base DEFINITION
  PUBLIC
  ABSTRACT
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES zif_phoenix.

    "! &amp;lt;p class="shorttext synchronized" lang="en"&amp;gt;Retry Enabled&amp;lt;/p&amp;gt;
    DATA retry_enabled TYPE zde_phoenix_retry_enabled VALUE 'X'.

    "! &amp;lt;p class="shorttext synchronized" lang="en"&amp;gt;Number of retries&amp;lt;/p&amp;gt;
    DATA retry_count TYPE zde_phoenix_retries VALUE 2.

    "! &amp;lt;p class="shorttext synchronized" lang="en"&amp;gt;Cooldown time(s)&amp;lt;/p&amp;gt;
    DATA sleep_value_s TYPE zde_phoenix_sleep VALUE 120.

  PROTECTED SECTION.
    DATA logger            TYPE REF TO zif_logger.

    "! Log informational message &amp;lt;br&amp;gt;
    "! Writes an informational entry to the application log (BALI) for the current attempt.
    "! Uses severity if_bali_constants=&amp;gt;c_severity_information.
    "! @parameter message | Text to persist in the application log.
    "! @raising   cx_bali_runtime | Thrown if the logger is not available or the log write fails.
    METHODS log_info
      IMPORTING !message TYPE cl_bali_free_text_setter=&amp;gt;ty_text
      RAISING   cx_bali_runtime.

    "! Log error message &amp;lt;br&amp;gt;
    "! Writes an error entry to the application log (BALI) for the current attempt.
    "! Uses severity if_bali_constants=&amp;gt;c_severity_error.
    "! @parameter message | Text to persist in the application log.
    "! @raising   cx_bali_runtime | Thrown if the logger is not available or the log write fails.
    METHODS log_error
      IMPORTING !message TYPE cl_bali_free_text_setter=&amp;gt;ty_text
      RAISING   cx_bali_runtime.

    "! Log warning message &amp;lt;br&amp;gt;
    "! Writes a warning entry to the application log (BALI) for the current attempt.
    "! Uses severity if_bali_constants=&amp;gt;c_severity_warning.
    "! Requires an initialized logger (created via create_logger( )).
    "! @parameter message | Text to persist in the application log.
    "! @raising   cx_bali_runtime | Thrown if the logger is not available or the log write fails.
    METHODS log_warning
      IMPORTING !message TYPE cl_bali_free_text_setter=&amp;gt;ty_text
      RAISING   cx_bali_runtime.

    "! Log success/status message &amp;lt;br&amp;gt;
    "! Writes a success entry to the application log (BALI) for the current attempt.
    "! Uses severity if_bali_constants=&amp;gt;c_severity_status.
    "! @parameter message | Text to persist in the application log.
    "! @raising   cx_bali_runtime | Thrown if the logger is not available or the log write fails.
    METHODS log_success
      IMPORTING !message TYPE cl_bali_free_text_setter=&amp;gt;ty_text
      RAISING   cx_bali_runtime.


  PRIVATE SECTION.
    CONSTANTS log_object_id            TYPE cl_bali_header_setter=&amp;gt;ty_object    VALUE 'ZLOG_PHOENIX'.
    CONSTANTS sublog_id_submission_job TYPE cl_bali_header_setter=&amp;gt;ty_subobject VALUE 'PHOENIX_LOG'.

    METHODS notify_about_failure.
    METHODS notify_teams.
    METHODS create_logger RAISING cx_bali_runtime
                                  cx_uuid_error.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-645522640"&gt;PUBLIC SECTION&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;We will of course implement the&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;interface that we defined before.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;And we will also define 3 public attributes&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;retry_enabled&lt;/CODE&gt;&lt;SPAN&gt;,&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;retry_count&lt;/CODE&gt;&lt;SPAN&gt;,&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;sleep_value_s&lt;/CODE&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;These public attributes will be visible in the Job Scheduling screen so the person who schedules the job can control if he wants to have the retry functionality enabled, how many time the framework will retry the job, and how much time to wait between the retries.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-21 at 16.48.53.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330306i5C61E0F2B2D53A89/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-21 at 16.48.53.png" alt="Screenshot 2025-10-21 at 16.48.53.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-449009135"&gt;PROTECTED SECTION&lt;/H4&gt;&lt;P&gt;In here we define the PROTECTED area of the class, and if you don't remember what it is, it's the method / types that's not available to other classes but it's available to the children classes(that implement this base class)&lt;BR /&gt;As protected we have one global object called&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;logger&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and I left it as protected on purpose, if any of the child classes would like to define some custom logging methods, they can access the logger object and define their own methods if the provided methods are not meeting the needs.&lt;/P&gt;&lt;P&gt;And we have 4 more logging methods that will log a message with a specific importance(info, success, warning, error), the consumer is encoruanegd to use these methods, and use the logger obejct itself only when these are not sufficient.&lt;/P&gt;&lt;P&gt;Using this logger and logging methods the consumer will be able to log to the Application Job Log that we see afterwards in the Fiori launchpad&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="natanael1_0-1761058386212.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330307iDBA940A45666AF9C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="natanael1_0-1761058386212.png" alt="natanael1_0-1761058386212.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-252495630"&gt;PRIVATE SECTION&lt;/H4&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;In the private section we defined some constants that we will use for logging into the application job log and also 2 methods for sending external notifications on a job failure, in our case we have a generic method that notifies about a failure, and this method just calls another method that will send a teams notification in case of failure.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;H3 id="toc-hId--148331963"&gt;Implementation&lt;/H3&gt;&lt;P&gt;Now we have this base class, and the purpose of it, is that multiple child classes will implement this base class, and each child class will be a "schedulable" job, but we need a mechanism of how we can make this connection between the child class and base class, and how the child class will indicate to the base class what business logic to run.&lt;BR /&gt;We will do that via the same interface that we created:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;, therefore we define 3 more methods&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;CODE&gt;get_next_delay&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;method will take as a parameter the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;retry_count&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and will return back the cooldown time the framework will need to wait before the next retry, this method will have a default implementation that simply returns the static input parameter of the job&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;sleep_value_s&lt;/CODE&gt;, this method shall not be redefined by the child class unless they want some custom cooldown functionality like exponential backoff&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;fill_attribute_defaults&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;method, this is just a wrapper for the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_dt_defaults~fill_attribute_defaults&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;method, and one could argue why do we need a wrapper why can't we just implement&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_dt_defaults~fill_attribute_defaults&lt;/CODE&gt;, we could, but we want to put an abstraction layer on top of it, and keep this concern into the base class, so the child class implements only the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and not any other interfaces like&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_dt_defaults&lt;/CODE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;process&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;method, probably the most important method, so the child class must redefine the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;process&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;method, and implement it's business logic inside it, so assuming that you're refactoring a class that used before&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_rt_run&lt;/CODE&gt;, you'd rename&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_rt_run~main&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;into&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix~process&lt;/CODE&gt;, the base class will afterwards call the process method again and again in case of retries&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Therefore we already have a default implementation for some methods:&lt;/P&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_dt_defaults~fill_attribute_defaults.
  " ------------------------------------------------------------------------
  " STANDARD IMPLEMENTATION
  " MUST NOT BE REDEFINED, INSTEAD USE EXTENSION POINT:
  "   zif_phoenix~fill_attribute_defaults( ).
  "
  " This is just calling the wrapper class zif_phoenix~fill_attribute_defaults( ).
  " ------------------------------------------------------------------------
  zif_phoenix~fill_attribute_defaults( ).
ENDMETHOD.

METHOD zif_phoenix~get_next_delay.
  " ------------------------------------------------------------------------
  " STANDARD IMPLEMENTATION
  " CAN BE REDEFINED BY CHILD CLASS IF NEEDED(OPTIONAL)
  "
  " By default it will return the configured sleep_value_s
  " This is an extension point if the job needs a custom backoff f.ex. exponential backoff
  " the class could implement it something like this:
  "   RETURN sleep_value_s * ( 2 ** ( retry_count - 1 ) ).
  " ------------------------------------------------------------------------
  RETURN sleep_value_s.
ENDMETHOD.

METHOD zif_phoenix~fill_attribute_defaults.
  " ------------------------------------------------------------------------
  " CUSTOM BUSINESS IMPLEMENTATION
  " CAN BE REDEFINED BY CHILD CLASS IF NEEDED(OPTIONAL)
  " WRAPPER FUNCTION FOR if_apj_dt_defaults~fill_attribute_defaults
  " Q: Why do we need zif_phoenix~fill_attribute_defaults if the
  "    child class can implement if_apj_dt_defaults~fill_attribute_defaults
  " A: We don't want the child class to implement other interfaces other
  "    than zif_phoenix, this way we abstractize the child class from
  "    knowing the inside implementation of the framework
  " ------------------------------------------------------------------------
ENDMETHOD.


METHOD zif_phoenix~process.
  " ------------------------------------------------------------------------
  " CUSTOM BUSINESS IMPLEMENTATION
  " MUST BE REDEFINED BY CHILD CLASS
  " ------------------------------------------------------------------------
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;I will skip over the implementation of the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;create_logger&lt;/CODE&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;log_info&lt;/CODE&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;log_error&lt;/CODE&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;log_success&lt;/CODE&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;log_warning&lt;/CODE&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;notify_about_failure&lt;/CODE&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;notify_teams&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;methods because they're less relevant for this example.&lt;/P&gt;&lt;P&gt;Given that we'd like to run everything inside the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_rt_run~execute&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;when we are running the class inside ADT, this will be the implementation of the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_oo_adt_classrun~main&lt;/CODE&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_oo_adt_classrun~main.
  " ------------------------------------------------------------------------
  " STANDARD IMPLEMENTATION
  " NO NEED FOR REDEFENITION, BUT IT IS OKAY TO
  " if_oo_adt_classrun~main MUST NOT BE USED IN PRODUCTIVE SCENARIOS
  " ------------------------------------------------------------------------
  TRY.
      if_apj_rt_run~execute( ).
      out-&amp;gt;write( |Finished executing at { cl_abap_context_info=&amp;gt;get_system_time( ) }| ).
    CATCH cx_root INTO FINAL(exception).
      out-&amp;gt;write( |Exception raised during execution: { exception-&amp;gt;get_text( ) }| ).
  ENDTRY.
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now we got to the most interesting part, what do we put inside&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_rt_run~execute&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in order to retry the job on failure&lt;BR /&gt;We will start simple, first thing first, we'll try to calculate the total_attempts of the run that we can do, if the retry is disabled it will be 1, so it will run once, and won't retry, if it's enabled it will be the passed retry_count parameter + 1(the first run)&lt;/P&gt;&lt;P&gt;Next via a simple&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;DO&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;loop we will execute the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix~process&lt;/CODE&gt;(which contains the job business logic inside), and if the execution is successful, we'll return, therefore we don't get to the next iteration of the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;DO&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;loop, it will stop there and exit prematurely.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_rt_run~execute.
  FINAL(max_retries)    = COND i( WHEN retry_enabled = abap_true THEN retry_count ELSE 0 ).
  FINAL(total_attempts) = max_retries + 1.

  DO total_attempts TIMES.
    zif_phoenix~process( ).
    RETURN.
  ENDDO.
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;But will this be fault tolerant? No, as soon as&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix~process( )&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;raises an exception&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_rt_run~execute&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;will be propagating the exception and prematurely terminate, so we don't get to the next&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;DO&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;iteration.&lt;/P&gt;&lt;P&gt;So we will just wrap it with a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;TRY CATCH&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;block:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_rt_run~execute.
  FINAL(max_retries)    = COND i( WHEN retry_enabled = abap_true THEN retry_count ELSE 0 ).
  FINAL(total_attempts) = max_retries + 1.

  DO total_attempts TIMES.
    TRY.
        zif_phoenix~process( ).
        RETURN.
      CATCH cx_root INTO FINAL(ex).
    ENDTRY.
  ENDDO.
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Congratulations, you have now a very simple fault tolerant application job framework, as soon as the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix~process( )&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;raises an exception, the catch block catches it, and goes to the next iteration of the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;DO&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;loop, as soon as the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix~process( )&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;is successfull it will return so we don't run it too many times.&lt;/P&gt;&lt;P&gt;But we don't have any sleep functionality, so let's add it&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_rt_run~execute.
  FINAL(max_retries)    = COND i( WHEN retry_enabled = abap_true THEN retry_count ELSE 0 ).
  FINAL(total_attempts) = max_retries + 1.

  DO total_attempts TIMES.
    TRY.
        zif_phoenix~process( ).
        RETURN.
      CATCH cx_root INTO FINAL(ex).
        IF sy-index &amp;lt;= max_retries.
          DATA(sleep_time_s) = zif_phoenix~get_next_delay( sy-index ).
          IF sleep_time_s &amp;gt; 0.
            WAIT UP TO sleep_time_s SECONDS.
          ENDIF.
          CONTINUE.
        ENDIF.
    ENDTRY.
  ENDDO.
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now on an exception we will get the next expected delay, will wait that amount of seconds and then continue with the next try.&lt;/P&gt;&lt;P&gt;But can you see the problem in this code?&lt;BR /&gt;The problem is that even if all the attempts of running the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix~process&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;are failing, the code will continue its normal flow after all failures, and will result in a succesfull job, which is false, so we'll raise an exception when we've exhausted all our attempts:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_rt_run~execute.
  FINAL(max_retries)    = COND i( WHEN retry_enabled = abap_true THEN retry_count ELSE 0 ).
  FINAL(total_attempts) = max_retries + 1.

  DO total_attempts TIMES.
    TRY.
        zif_phoenix~process( ).
        RETURN.
      CATCH cx_root INTO FINAL(ex).
        IF sy-index &amp;lt;= max_retries.
          DATA(sleep_time_s) = zif_phoenix~get_next_delay( sy-index ).
          IF sleep_time_s &amp;gt; 0.
            WAIT UP TO sleep_time_s SECONDS.
          ENDIF.
          CONTINUE.
        ENDIF.
        RAISE EXCEPTION NEW cx_apj_rt_content( previous = ex ).
    ENDTRY.
  ENDDO.
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now we'll add a bit of logging:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_rt_run~execute.
  " ------------------------------------------------------------------------
  " STANDARD IMPLEMENTATION DO NOT REDEFINE
  " FOLLOW STANDARD FLOW
  " Enhancement Points:
  "   - process() must be redefined
  " ------------------------------------------------------------------------
  TRY.
      FINAL(max_retries)    = COND i( WHEN retry_enabled = abap_true THEN retry_count ELSE 0 ).
      FINAL(total_attempts) = max_retries + 1.

      DO total_attempts TIMES.

        " new logger for each attempt, to have separation of logs in APJ
        create_logger( ).
        log_info( |Attempt { sy-index } of { total_attempts } started| ).

        TRY.
            zif_phoenix~process( ).
            log_success( |Processed successfully on attempt { sy-index }| ).
            RETURN.
          CATCH cx_root INTO FINAL(ex).
            IF sy-index &amp;lt;= max_retries.
              log_warning( |Attempt { sy-index } failed: { ex-&amp;gt;get_text( ) }| ).
              notify_about_failure( ).
              DATA(sleep_time_s) = zif_phoenix~get_next_delay( sy-index ).
              IF sleep_time_s &amp;gt; 0.
                log_info( |Retrying in { sleep_value_s } seconds| ).
                WAIT UP TO sleep_time_s SECONDS.
              ENDIF.
              CONTINUE.
            ENDIF.

            log_error( |Exhausted { total_attempts } attempts: { ex-&amp;gt;get_text( ) }| ).
            RAISE EXCEPTION NEW cx_apj_rt_content( previous = ex ).
        ENDTRY.

      ENDDO.

    CATCH cx_bali_runtime cx_uuid_error INTO FINAL(log_ex).
      RAISE EXCEPTION NEW cx_apj_rt_content( previous = log_ex ).
  ENDTRY.

ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Cool but what if the child class doesn't want to retry a specific exception, for example it knows for sure that this exception is not transient like some missing configuration, expired credentials, wrong data, etc?&lt;/P&gt;&lt;P&gt;In this case we will define a new exception class called&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zcx_phoenix_stop_retry&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and as soon as the child class raises this exception we don't retry, but just fail the job:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_rt_run~execute.
  " ------------------------------------------------------------------------
  " STANDARD IMPLEMENTATION DO NOT REDEFINE
  " FOLLOW STANDARD FLOW
  " Enhancement Points:
  "   - process() must be redefined
  " ------------------------------------------------------------------------
  TRY.
      FINAL(max_retries)    = COND i( WHEN retry_enabled = abap_true THEN retry_count ELSE 0 ).
      FINAL(total_attempts) = max_retries + 1.

      DO total_attempts TIMES.

        " new logger for each attempt, to have separation of logs in APJ
        create_logger( ).
        log_info( |Attempt { sy-index } of { total_attempts } started| ).

        TRY.
            zif_phoenix~process( ).
            log_success( |Processed successfully on attempt { sy-index }| ).
            RETURN.
          CATCH zcx_phoenix_stop_retry INTO FINAL(stop_retry_ex).
            log_error( |The retrial was intentionally canceled: { stop_retry_ex-&amp;gt;get_text( ) }| ).
            RAISE EXCEPTION NEW cx_apj_rt_content( previous = stop_retry_ex ).
          CATCH cx_root INTO FINAL(ex).
            IF sy-index &amp;lt;= max_retries.
              log_warning( |Attempt { sy-index } failed: { ex-&amp;gt;get_text( ) }| ).
              notify_about_failure( ).
              DATA(sleep_time_s) = zif_phoenix~get_next_delay( sy-index ).
              IF sleep_time_s &amp;gt; 0.
                log_info( |Retrying in { sleep_value_s } seconds| ).
                WAIT UP TO sleep_time_s SECONDS.
              ENDIF.
              CONTINUE.
            ENDIF.

            log_error( |Exhausted { total_attempts } attempts: { ex-&amp;gt;get_text( ) }| ).
            RAISE EXCEPTION NEW cx_apj_rt_content( previous = ex ).
        ENDTRY.

      ENDDO.

    CATCH cx_bali_runtime cx_uuid_error INTO FINAL(log_ex).
      RAISE EXCEPTION NEW cx_apj_rt_content( previous = log_ex ).
  ENDTRY.

ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If you'd like to see the full class implementation you can check out &lt;A href="https://github.com/legonmarian/abap-btp-phoenix-framework" target="_blank" rel="noopener nofollow noreferrer"&gt;this link for the full source code.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;So how to try it? Simply just inherit from the base class, so we will&lt;SPAN&gt;&amp;nbsp;create a&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zcl_phoenix_demo&lt;/CODE&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_phoenix_job_demo DEFINITION
  PUBLIC
  INHERITING FROM /lego/cl_phoenix_base
  FINAL
  CREATE PUBLIC .
  PUBLIC SECTION.
    METHODS /lego/if_phoenix~process REDEFINITION.
  PRIVATE SECTION.
    DATA: x TYPE i value -1. "anti-pattern, not recommended
ENDCLASS.
CLASS zcl_phoenix_job_demo IMPLEMENTATION.
  METHOD /lego/if_phoenix~process.
    x = x + 1.
    DATA(a) = 1 / x.
  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;What does this class do? Simply it will fail on the first run, and will be successful on the second run, because it will no longer be dividing by 0, but by 1. However I must warn you that the &lt;STRONG&gt;global variables should be avoided&lt;/STRONG&gt; in productive scenarios, I will explain why in the &lt;STRONG&gt;Limitations&lt;/STRONG&gt; section.&lt;/P&gt;&lt;P&gt;We'll create a Job Catalog Entry and Job Template in order to schedule the job:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="natanael1_0-1761067786183.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330406iCB8D1137A72B1341/image-size/medium?v=v2&amp;amp;px=400" role="button" title="natanael1_0-1761067786183.png" alt="natanael1_0-1761067786183.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="natanael1_2-1761067809210.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330408iD9ABA935221745C0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="natanael1_2-1761067809210.png" alt="natanael1_2-1761067809210.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now we can schedule it:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="natanael1_3-1761067909656.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330409i6174664CC9B27EBF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="natanael1_3-1761067909656.png" alt="natanael1_3-1761067909656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;And this is the Job Result:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-21 at 19.49.38.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330418iD54FEC62067DE9AC/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-10-21 at 19.49.38.png" alt="Screenshot 2025-10-21 at 19.49.38.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--51442461"&gt;Improvement points&lt;/H2&gt;&lt;P&gt;This code of course is not perfect, and there're various improvement points that could be done in order to make it better, however the goal of this blog post is not to showcase perfect code, but to explain conceptually how we can implement such a framework. Some of the improvements points could be:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;make the code less nested by using checks and guard clauses&lt;/LI&gt;&lt;LI&gt;add a method to the facade interface to allow external classes to schedule the job(not executing, but scheduling in a different session) by calling that method&lt;/LI&gt;&lt;LI&gt;add a cleanup hook to run before each new trial&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--247955966"&gt;Limitations, considerations, gotchas, and side cases&lt;/H2&gt;&lt;P&gt;And of course there're certain limitations to take into consideration and gotchas to avoid:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Biggest limitation is that you must design your classes to be stateless, because on a failure your class won't be reinstantiated instead the process method will run again, therefore you should try to avoid global variables as much as possible, because the state will be kept between runs&lt;BR /&gt;It is of course fine to have global variables objects from dependency injection that were just instantiated in the constructor, this is perfectly fine. But you should avoid as much as possible having business data in global variables, as the stale data might introduce unnecessary side effects on the re-run.&lt;/LI&gt;&lt;LI&gt;Another gotcha is that there're certain &lt;A href="https://help.sap.com/doc/abapdocu_cp_index_htm/CLOUD/en-US/ABENUNCATCHABLE_EXCEPTION_GLOSRY.html" target="_self" rel="noopener noreferrer"&gt;uncatchable exceptions&lt;/A&gt;&amp;nbsp;and the framework will unfortunately dump on these, because as the name suggests these are uncatchable and they will be propagated to a short dump, bypassing the try catch block.&lt;/LI&gt;&lt;LI&gt;One of the considerations is that you need to design your code in a manner where it will raise exceptions, instead of raising uncatchable exceptions, it might sound a bit confusing, but let me give you an example.&lt;BR /&gt;So let's assume that you make an RFC call to an on-prem system this way:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;"don't do this
call function 'some_rfc_fm'
  destination rfc_key
  exporting param       = 'value'
  importing return_data = return_data
  tables table_data     = table_data.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If the RFC call fails, it will raise an uncatchable exception and the program will dump, however we can modify it slightly in order to make it raise a catchable exception instead:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;"do this instead
call function 'some_rfc_fm'
  destination rfc_key
  exporting param       = 'value'
  importing return_data = return_data
  tables table_data     = table_data.
  exceptions others = 1.

if sy-subrc &amp;lt;&amp;gt; 0.
  raise exception type cx_rfc_dest_provider_error "or any other exception that you want
  exporting textid = cx_rfc_dest_provider_error=&amp;gt;connection_failed.
endif.​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;And a little caveat, it's not the best idea to put all the exception codes into 1 "bucket" with&amp;nbsp;&lt;CODE&gt;others = 1&lt;/CODE&gt;, and it's also probably not the best idea to raise just 1 type of exception, and specifically this type, but the goal of this example is to show how to convert an uncatchable exception into a catchable one.&lt;/P&gt;&lt;H2 id="toc-hId--444469471"&gt;Alternatives&lt;/H2&gt;&lt;P&gt;Now at this stage an obvious question is are there any alternatives or flavors of this implementation? Yes there're, and I will explain some now:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Instead of retry &lt;STRONG&gt;on all except&lt;/STRONG&gt; &lt;CODE&gt;zcx_phoenix&lt;/CODE&gt;, retry &lt;STRONG&gt;only on&lt;/STRONG&gt; &lt;CODE&gt;zcx_phoenix&lt;/CODE&gt;. In case that you have a very good exception handling, and you're controlling each exception you're raising, you can refactor the framework so it will retry only on a specific custom exception, instead of retrying on all exceptions. This way you have a bit more granular control over your execution flow. Similarly how it's done in the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-concepts/implementing-automatic-retry-of-failed-operations?locale=en-US" target="_self" rel="noopener noreferrer"&gt;bgPF framework&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;RAISE EXCEPTION NEW cx_bgmc_operation( 
	retry_settings = VALUE #( 
		delay_time = 2
		do_retry   = abap_true ) ).​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Another flavor of a fault-tolerant job framework would include a bit of a paradigm change, and we will need to give up the base class - child class relationship with a single job architecture in favor of a &lt;STRONG&gt;driver&amp;nbsp;&lt;/STRONG&gt;-&amp;nbsp;&lt;STRONG&gt;worker&amp;nbsp;&lt;/STRONG&gt;relationship. You will have a 2 job architecture, the 1st job will be the&amp;nbsp;&lt;STRONG&gt;driver&lt;/STRONG&gt; job, which will take as a parameter the name of the job with the business logic and it will schedule that job as the&amp;nbsp;&lt;STRONG&gt;worker&lt;/STRONG&gt; job, it will wait until that one has finished successfully, if it has failed then it will just &lt;STRONG&gt;spin up anothe&lt;/STRONG&gt;r worker job, until one finishes successfully. You should use this pattern in case the limitations listed in the limitations section are a&amp;nbsp;showstopper for you, f.ex. you need a stateful job class with state isolation between runs. In my opinion this is a good approach but for certain usecases only, in general I prefer the current approach being more lightweight and flexible&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId--347579969"&gt;Closing notes&lt;/H1&gt;&lt;P&gt;The Phoenix Framework demonstrate that robust doesn't necessary mean complex, reliability can be achieved with a relatively simple and lightweight setup. With a structured retry mechanism we managed to achieve fault-tolerant jobs, and reduce manual recovery efforts.&lt;/P&gt;&lt;P&gt;This framework is not perfect, nor it should be, it's main goal is to ensure that people's time is respected and not wasted because of preventable issues.&lt;/P&gt;&lt;P&gt;Thanks for reading until here, and as a closing remark I must say that it's often through our failures that we find opportunities to improve, just like the Phoenix, this framework was born from the ashes of failed jobs, rising stronger each time.&lt;/P&gt;&lt;P&gt;If you're curious please check the &lt;A href="https://github.com/legonmarian/abap-btp-phoenix-framework" target="_self" rel="nofollow noopener noreferrer"&gt;full source code here&lt;/A&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/automatic-retry-of-application-jobs-in-abap-in-cloud/ba-p/14249591"/>
    <published>2025-10-22T08:12:39.185000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/ux-and-application-development-with-ai-at-asug-tech-connect-2025-a/ba-p/14252832</id>
    <title>UX and application development with AI at ASUG Tech Connect 2025 a companion event to SAP TechEd</title>
    <updated>2025-10-24T18:39:30.067000+02:00</updated>
    <author>
      <name>PeterSpielvogel</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/543</uri>
    </author>
    <content>&lt;P&gt;This year, SAP TechEd has several options to allow you to learn about the latest SAP technologies and how to apply them to your organization. In addition to &lt;A href="https://www.sap.com/events/teched/berlin.html" target="_blank" rel="noopener noreferrer"&gt;TechEd in Berlin&lt;/A&gt; and the &lt;A href="https://www.sap.com/events/teched/virtual.html" target="_blank" rel="noopener noreferrer"&gt;virtual&lt;/A&gt; option, there are “SAP TechEd On Tour” events in &lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/asug-tech-connect" target="_blank" rel="nofollow noopener noreferrer"&gt;Louisville&lt;/A&gt;, &lt;A href="https://events.masteringsap.com/sydney2025" target="_blank" rel="noopener noreferrer"&gt;Sydney&lt;/A&gt;, and &lt;A href="https://go4.events.sap.com/apj-savethedatetechedontourbangalore2025/en_us/home.html" target="_blank" rel="noopener noreferrer"&gt;Bangalore&lt;/A&gt;. In this post, I’ll share the sessions on application development and user experience that we are presenting at ASUG Tech Connect in Louisville, Kentucky. As you would expect many have AI -assisted capabilities to make both business users and developers more productive.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="PeterSpielvogel_0-1761323767225.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/332120i0FE9DE5752B30851/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="PeterSpielvogel_0-1761323767225.png" alt="PeterSpielvogel_0-1761323767225.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;At ASUG Tech Connect, we have both lectures and hands-on workshops.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Lectures &lt;/STRONG&gt;are a chance to hear from SAP experts and have your questions answered in the room.&lt;/P&gt;&lt;P&gt;&lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda?session=4d6f1642-85e2-4252-aaee-3af28873ec3b&amp;amp;shareLink=true" target="_blank" rel="nofollow noopener noreferrer"&gt;Extensibility with ABAP Cloud and AI in SAP Cloud ERP&lt;/A&gt; (Jens Weiler)&lt;/P&gt;&lt;P&gt;Explore on-stack key user and developer tools in the ABAP Cloud development model, now enhanced with generative AI. Extend standard apps and manage custom ones in SAP Cloud ERP and explore transactional, analytical, and integration use cases like the extensibility AI assistant, queries for analytical SAP Fiori apps, and SQL services.&lt;BR /&gt;Tuesday, November 4, 2025, 11:15 AM-12:05 PM&lt;/P&gt;&lt;P&gt;&lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda?session=0691b1d5-cf70-45fd-bba8-b1043c308349&amp;amp;shareLink=true" target="_blank" rel="nofollow noopener noreferrer"&gt;What’s Next: AI-First Innovations in SAP Cloud ERP and SAP Business Suite&lt;/A&gt; (Ullas Holla, Peter Spielvogel)&lt;/P&gt;&lt;P&gt;Get a fast-paced look at how SAP is embedding AI and delivering cross-suite innovations that break down silos and speed up decision-making. We’ll cover the latest highlights from releases of SAP Cloud ERP and SAP Business Suite—plus give you a sneak peek at what’s coming in 2026 and beyond.&lt;BR /&gt;Tuesday, November 4, 2025, 3:30 PM-4:20 PM&lt;/P&gt;&lt;P&gt;&lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda?session=3a567dd4-0c26-460b-b297-f600995503ef&amp;amp;shareLink=true" target="_blank" rel="nofollow noopener noreferrer"&gt;Customer Show and Tell: From CDS View to Fiori Launchpad: Full-Stack Development with Eclipse ADT with Naturipe&lt;/A&gt; (Brian Galloway, Dario Cruz)&lt;/P&gt;&lt;P&gt;This session covers the end-to-end development workflow in the RISE with SAP S/4HANA Cloud, Private Edition environment using Eclipse ABAP Development Tools (ADT). It demonstrates how to define a data source and expose it via a CDS view, enabling consumption through SAP Fiori elements, Eclipse ADT, and Postman. A live demo illustrates the creation of a simple SAPUI5 application that consumes the same OData service and is deployed to the SAP Fiori Launchpad, showcasing full-stack integration from backend data modeling to frontend delivery.&lt;BR /&gt;Wednesday, November 5, 2025, 8:00 AM-9:30 AM&lt;/P&gt;&lt;P&gt;&lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda?session=49dcc5e0-c8c1-4a5d-b50b-0d207c4c9925&amp;amp;shareLink=true" target="_blank" rel="nofollow noopener noreferrer"&gt;Using Generative AI to Accelerate SAP Fiori App Development&lt;/A&gt; (Ullas Holla)&lt;/P&gt;&lt;P&gt;AI changes everything, especially for developing business applications. See how SAP’s latest coding agents let you build SAP Fiori elements apps using a conversational interface. Create apps using Joule, including a CAP service, sample data, and SAPUI5 customizations.&lt;BR /&gt;Wednesday, November 5, 2025, 4:10 PM-5:00 PM&lt;/P&gt;&lt;P&gt;&lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda?session=c82cf156-8203-47a2-8515-1ca1ca2ba24b&amp;amp;shareLink=true" target="_blank" rel="nofollow noopener noreferrer"&gt;Creating Better User Experiences with AI-Powered SAP Fiori Apps&lt;/A&gt; (Peter Spielvogel)&lt;/P&gt;&lt;P&gt;Discover how the latest AI features in SAP Fiori apps enhance user productivity and streamline onboarding. Starting with My Home and diving into commonly used SAP Fiori apps, see how AI simplifies information access, supports informed business decisions, and fosters seamless collaboration. Explore how conversational interactions are making SAP more intuitive than ever.&lt;BR /&gt;Thursday, November 6, 2025, 4:15 PM-5:05 PM&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Hands-on workshops &lt;/STRONG&gt;give you the opportunity to test the latest SAP innovations and gain access to the same tools and technologies we use to build apps for SAP S/4HANA.&lt;/P&gt;&lt;P&gt;&lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda?session=f181974d-585f-43a9-97ef-30cd0574d949&amp;amp;shareLink=true" target="_blank" rel="nofollow noopener noreferrer"&gt;Hands-on Lab: Get Started with ABAP Cloud for Classic ABAP Developers&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Familiar with classic ABAP development? Explore how similar development works with ABAP Cloud using the ABAP RESTful application programming model. Use ABAP Cloud to build cloud-ready business apps, services, and extensions that follow clean core principles by default—on SAP Business Technology Platform and in any edition of SAP S/4HANA.&lt;BR /&gt;Tuesday, November 4, 2025, 1:10 PM-3:10 PM&lt;/P&gt;&lt;P&gt;&lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda?session=2682f82f-fbb2-4989-a7f3-d6aa1548d32e&amp;amp;shareLink=true" target="_blank" rel="nofollow noopener noreferrer"&gt;Hands-on Lab: Explore Joule for Developers, ABAP AI Capabilities&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Learn how to develop transactional applications using the ABAP RESTful application model in ABAP Cloud while leveraging Joule capabilities for ABAP developers.&lt;BR /&gt;Wednesday, November 5, 2025, 8:00 AM-10:00 AM&lt;/P&gt;&lt;P&gt;&lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda?session=aa78a571-9325-4161-a0b3-e9d87184b311&amp;amp;shareLink=true" target="_blank" rel="nofollow noopener noreferrer"&gt;Hands-on Lab: Build On-Stack Extensions with ABAP Cloud in SAP Cloud ERP&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Discover how to build extensions, applications, and services with the ABAP Cloud development model, using the ABAP RESTful application programming model and generative AI. You can explore how to extend standard SAP applications, consume public SAP APIs, and build new apps and services from scratch while getting practical insights through exercises&lt;BR /&gt;Wednesday, November 5, 2025, 1:00 PM-3:00 PM&lt;/P&gt;&lt;P&gt;&lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda?session=fd8dd51b-0257-4fdf-b04e-7ba12e239d85&amp;amp;shareLink=true" target="_blank" rel="nofollow noopener noreferrer"&gt;Hands-on Lab: Modernize Classic Extensions for Clean Core in SAP Cloud ERP Private&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Practice clean core extensibility in SAP Cloud ERP Private. Learn how to govern clean core development using the ABAP test cockpit, and how to use the ABAP Cloud development model and clean core extensibility principles to modernize your custom on-stack extensions.&lt;BR /&gt;Thursday, November 6, 2025, 1:00 PM-3:00 PM&lt;/P&gt;&lt;P&gt;I hope you can join us.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/ux-and-application-development-with-ai-at-asug-tech-connect-2025-a/ba-p/14252832"/>
    <published>2025-10-24T18:39:30.067000+02:00</published>
  </entry>
</feed>
