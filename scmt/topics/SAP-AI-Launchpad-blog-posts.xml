<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-AI-Launchpad-blog-posts.xml</id>
  <title>SAP Community - SAP AI Launchpad</title>
  <updated>2025-08-03T11:11:29.838437+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP AI Launchpad/pd-p/73555000100800003283" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP AI Launchpad blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-4-rag-basics-hana-cloud/ba-p/14083287</id>
    <title>üöÄ SAP AI Core Agent QuickLaunch Series üöÄ - Part 4 RAG Basics ‚ë†: HANA Cloud VectorEngine&amp;Embedding</title>
    <updated>2025-05-19T06:28:48.468000+02:00</updated>
    <author>
      <name>Ryota_Ito</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1390198</uri>
    </author>
    <content>&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P class=""&gt;Generative&amp;nbsp;AI has leapt from research papers to daily business reality‚Äî and SAP is surfing that wave at full speed.&amp;nbsp;In&amp;nbsp;this hands‚Äëon series, I‚Äôll show you how to spin up a custom AI agent on SAP&amp;nbsp;AI&amp;nbsp;Core in minutes, then grow it into a production‚Äëready asset‚Äîwithout drowning in theory.&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Notice&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Êó•Êú¨Ë™ûÁâà„ÅØ&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part4-rag-%E5%9F%BA%E7%A4%8E-hana-cloud-vectorengine%E3%81%A8%E5%9F%8B%E3%82%81%E8%BE%BC%E3%81%BF%E5%87%A6%E7%90%86/ba-p/14093988" target="_self"&gt;„Åì„Å°„Çâ&lt;/A&gt;&lt;SPAN&gt;„Åß„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1967371303" id="toc-hId-1967371303"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":open_book:"&gt;üìñ&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;What You‚Äôll Learn in This Series&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;How to Run a Custom AI Agent on SAP AI Core in Seconds&lt;/LI&gt;&lt;LI&gt;Implementation Using LangChain, Google Search Tool, and RAG&lt;/LI&gt;&lt;LI&gt;Steps to Convert the AI Agent into a REST API, Integrate It into an SAPUI5/Fiori UI, and Deploy to Cloud Foundry&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Time Commitment&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Each part is designed to be completed in&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;10‚Äì15&amp;nbsp;minutes&lt;/STRONG&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1770857798" id="toc-hId-1770857798"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;üó∫&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Ô∏è Series Roadmap&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part0-prologue/ba-p/14104823" target="_self"&gt;Part 0 Prologue&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-1-env-setup-sap-aicore-amp-ai/ba-p/14104825" target="_self"&gt;Part 1 Env Setup: SAP AICore &amp;amp; AI Launchpad&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-2-building-a-chat-model-with/ba-p/14104832" target="_self"&gt;Part 2 Building a Chat Model with&amp;nbsp;LangChain&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-3-agent-tools-integrating-google/ba-p/14104844" target="_self"&gt;Part 3 Agent&amp;nbsp;Tools: Integrating Google&amp;nbsp;Search&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-4-rag-basics-hana-cloud/ba-p/14083287" target="_self"&gt;Part4 RAG Basics‚ë† HANA Cloud VectorEngine &amp;amp; Embedding&lt;/A&gt; [&lt;STRONG&gt;current blog&lt;/STRONG&gt;]&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-5-rag-basics-building-retriever/ba-p/14113412" target="_self"&gt;Part 5 RAG Basics ‚ë°: Building Retriever Tool&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-6-converting-the-ai-agent-into-a/ba-p/14121055" target="_self"&gt;Part 6: Converting the AI Agent into a REST API&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-7-building-the-chat-ui-with/ba-p/14127011" target="_self"&gt;Part 7: Building the Chat UI with SAPUI5&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-8-deploying-to-cloud-foundry/ba-p/14127673" target="_self"&gt;Part 8: Deploying to Cloud Foundry&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;P&gt;If you enjoyed this post, please give it a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;kudos&lt;/STRONG&gt;! Your support really motivates me. Also, if there‚Äôs anything you‚Äôd like to know more about, feel free to leave a comment!&lt;/P&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1316178855" id="toc-hId-1316178855"&gt;&lt;SPAN&gt;RAG Basics ‚ë†: HANA Cloud VectorEngine &amp;amp; Embedding&lt;BR /&gt;&lt;/SPAN&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-1248748069" id="toc-hId-1248748069"&gt;&lt;SPAN&gt;1&amp;nbsp;| Introduction&lt;/SPAN&gt;&lt;/H3&gt;&lt;P class=""&gt;General chat models often miss the mark because they don‚Äôt fully grasp a company‚Äôs specific terms or workflows. In the last chapter, we gave the agent a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Google search tool&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;so it could pull in the latest information from the web‚Äîbut that alone can‚Äôt handle internal documents or your own knowledge base.&lt;/P&gt;&lt;P class=""&gt;In this chapter, we‚Äôll preload your internal docs into&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP HANA Cloud VectorEngine&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and set up a similarity search‚Äîthe core of&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;RAG (Retrieval-Augmented Generation)&lt;/STRONG&gt;‚Äîso the agent can look up and reference that information when crafting its answers.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052234564" id="toc-hId-1052234564"&gt;&lt;SPAN&gt;2 | Prerequisites&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;BTP sub-account&lt;/LI&gt;&lt;LI&gt;SAP AI Core instance&lt;/LI&gt;&lt;LI&gt;SAP AI LaunchPad Subscription&lt;/LI&gt;&lt;LI&gt;Python 3.13 and pip&lt;/LI&gt;&lt;LI&gt;VSCode, BAS or any IDE&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note for the Trial Environment&lt;/STRONG&gt;&lt;BR /&gt;The HANA Cloud instance in the Trial enviroment automatically shuts down every night. If your work spans past midnight, please restart the instance the following day.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-855721059" id="toc-hId-855721059"&gt;&lt;SPAN&gt;3 | Create a HANA Cloud Instance&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;First, let's reveiw RAG (Retrieval-Augmented Generation). RAG follows a two-step workflow of "Retreive ‚Üí Generate":&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Retreive&lt;/STRONG&gt;&amp;nbsp;‚Äî Use vector Similarity to fetch documents that closely match the query.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Generate&amp;nbsp;&lt;/STRONG&gt;‚Äî Append those retreived documents to the LLM's prompt and produce an answer.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;By supplying reliable, in-house infomation during the retrieval ohase, you can curb LLM hallucinations while still addressing&amp;nbsp;&lt;STRONG&gt;your organization's unique knowledge&lt;/STRONG&gt;‚Äîone of the RAG's biggest benefits.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To prepare the indispensable&amp;nbsp;&lt;STRONG&gt;vector store&lt;/STRONG&gt;&amp;nbsp;for RAG, start by provisioning an SAP HANA Cloud instance in your BTP Trial enviroment. In the subsequent steps, you'll save the embedding vectors you generate into this database, creating a solid foundation for your agent's high-speed searches.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Follow the&amp;nbsp;&lt;STRONG&gt;tutorial&lt;/STRONG&gt;&amp;nbsp;"&lt;STRONG&gt;&amp;nbsp;&lt;A href="https://developers.sap.com/tutorials/hana-cloud-mission-trial-3.html" target="_self" rel="noopener noreferrer"&gt;Provision an Instance of SAP HANA Cloud, SAP HANA Database&lt;/A&gt;&amp;nbsp;&lt;/STRONG&gt;" to create your HANA Cloud instance.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When configuring your HANA Cloud instance, in addition to the tutorial steps, apply these settings:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Runtime Environment:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;change to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Cloud Foundry&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ryota_Ito_4-1747629956398.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262784iC212C1DFD2A756BB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ryota_Ito_4-1747629956398.png" alt="Ryota_Ito_4-1747629956398.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Additional Features:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;turn&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Natural Language Processing (NLP)&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ON&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Connection:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;set&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Allowed Connections&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Allow all IP addresses&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ryota_Ito_5-1747629956399.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262785i98DE72B3590B4DD8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ryota_Ito_5-1747629956399.png" alt="Ryota_Ito_5-1747629956399.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Once provisioning completes in HANA Cloud Central, the instance will appear in your BTP Cockpit.&lt;BR /&gt;As with SAP AI Core, generate a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;service key&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to prepare for RAG connectivity.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ryota_Ito_6-1747629956400.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262786iAC0760144184D0F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ryota_Ito_6-1747629956400.png" alt="Ryota_Ito_6-1747629956400.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-659207554" id="toc-hId-659207554"&gt;&lt;STRONG&gt;4 | Interact with HANA Cloud via LangChain&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;In this section, you‚Äôll use the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;official LangChain connector&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to hook into your HANA Cloud instance and prepare to invoke its built-in embedding model. The complete flow is covered in&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://python.langchain.com/docs/integrations/vectorstores/sap_hanavector/" target="_self" rel="nofollow noopener noreferrer"&gt;the official docs&lt;/A&gt;‚Äîgive them a quick read to familiarize yourself with the overall steps.&lt;/P&gt;&lt;P class=""&gt;Add your service-key details to a .env file. In keeping with our ‚Äúlearn in seconds‚Äù approach, we‚Äôll reuse the existing DBADMIN user rather than creating a new one. (For production, you should provision a dedicated service account.)&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Service-Key Field&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;.env Variable&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Example / Value&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="85px"&gt;host&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="85px"&gt;HANA_DB_ADDRESS&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="85px"&gt;‰æã:&amp;nbsp;XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXX.hana.trial-us10.hanacloud.ondemand.com&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;port&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;HANA_DB_PORT&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;e.g. 443&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;user&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;HANA_DB_USER&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;DBADMIN&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="57px"&gt;password&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="57px"&gt;HANA_DB_PASSWARD&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="57px"&gt;(the password you set when you created the instance)&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;With these environment variables in place, LangChain‚Äôs HANA Cloud connector will be able to authenticate and send your vectors to the database for RAG retrieval.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Install the necessary libraries by running the following commands in your terminal:&lt;/P&gt;&lt;PRE&gt;pip install langchain-hana hdbcli --quiet&lt;/PRE&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;langchain-hana&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;is the library that lets you access HANA Cloud‚Äôs vector store and built-in embedding models.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;hdbcli&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;is the SAP HANA Database Client for Python.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;HANA Cloud has offered&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;A href="https://help.sap.com/docs/hana-cloud-database/sap-hana-cloud-sap-hana-database-vector-engine-guide/vector-embedding-function-vector" target="_self" rel="noopener noreferrer"&gt;an internal embedding model&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;since Q4 2024. If you enabled Natural Language Processing (NLP) under Additional Features when you provisioned your instance, you can call it directly.&lt;BR /&gt;Add the following cell to your notebook:&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 6
from langchain_hana import HanaInternalEmbeddings

embeddings = HanaInternalEmbeddings(
    internal_embedding_model_id="SAP_NEB.20240715"
)&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P class=""&gt;This sets up the embeddings object to use the SAP_NEB.20240715 internal model for generating vectors.&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P class=""&gt;Finally, initialize the vector store (i.e., create the table). Name the table "TEST_TABLE" and add the following cell:&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 7
from langchain_hana import HanaDB
from hdbcli import dbapi
import os

connection = dbapi.connect(
    address=os.getenv("HANA_DB_ADDRESS"),
    port=os.getenv("HANA_DB_PORT"),
    user=os.getenv("HANA_DB_USER"),
    password=os.getenv("HANA_DB_PASSWORD"),
    sslValidateCertificate=False,
    autocommit=True,
)

db = HanaDB(
    embedding=embeddings,
    connection=connection,
    table_name="TEST_TABLE"
)

print("‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚úÖ‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå‚Äå HANA Vector Store is ready!")&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;With this, you‚Äôve set up LangChain to connect to HANA Cloud, configured the internal embedding model, and initialized your vector store. In the next step, you‚Äôll chunk your text files, generate embeddings, store them in TEST_TABLE, and build the similarity search needed for RAG.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-462694049" id="toc-hId-462694049"&gt;&lt;SPAN&gt;5 | Retrieve Relevant Documents via Similarity Search&lt;/SPAN&gt;&lt;/H3&gt;&lt;P class=""&gt;In this chapter, we‚Äôll build the Retrieve part by implementing a similarity search that returns two documents relevant to a query.&lt;/P&gt;&lt;P class=""&gt;First, load the text file that will feed the similarity search, and split it into text chunks of about 100 characters‚Äîan optimal size for embedding. Download the file&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;sap_jp_corpus.txt&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;from the link below and place it in the same folder as your notebook:&lt;BR /&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;üîó&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A class="" href="https://drive.google.com/drive/folders/1wYLPcKrsgUs6P7JqDgHS30qoGE-gt3Av?usp=sharing" target="_new" rel="noopener nofollow noreferrer"&gt;https://drive.google.com/drive/folders/1wYLPcKrsgUs6P7JqDgHS30qoGE-gt3Av?usp=sharing&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;Then add the following cell:&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 8
from langchain_community.document_loaders import TextLoader
from langchain.text_splitter import CharacterTextSplitter

# Load the entire text file as a single document
text_documents = TextLoader("sap_en_corpus.txt").load()

# Split into 100-character chunks, with no overlap
text_splitter = CharacterTextSplitter(
    chunk_size=100,
    chunk_overlap=0,
)

# Perform the split and inspect the number of chunks
text_chunks = text_splitter.split_documents(text_documents)
print(f"Number of document chunks: {len(text_chunks)}")&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;&lt;STRONG&gt;What this cell does:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;TextLoader&lt;/STRONG&gt;: Reads the text file as one document.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;CharacterTextSplitter&lt;/STRONG&gt;: Breaks the document into 100-character chunks.&lt;/LI&gt;&lt;LI&gt;The resulting list of Document objects is stored in text_chunks.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Next, store your text chunks in the HANA Cloud vector store by adding this cell:&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 9
# Clear any existing rows to reset the demo table
db.delete(filter={})

# Embed each text chunk and write them into TEST_TABLE
db.add_documents(text_chunks)&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;&lt;STRONG&gt;What this cell does:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;db.delete(filter={}): Deletes all existing rows to initialize the demo table.&lt;/LI&gt;&lt;LI&gt;db.add_documents(text_chunks): Embeds each text chunk and writes it into "TEST_TABLE".&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now let‚Äôs implement similarity search. Add the following cell:&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 10
# Define your query
query = "I want to know about the security"

# Retrieve the top 2 most similar chunks
docs = db.similarity_search(query, k=2)

# Print out the content of each retrieved chunk
for doc in docs:
    print("-" * 80)
    print(doc.page_content)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Here, the input query is vectorized using the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;same embedding model&lt;/STRONG&gt;, and HANA Cloud returns the two text chunks with the highest similarity.&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P class=""&gt;If the search results include related content‚Äîsuch as ‚Äúsecurity policies‚Äù or ‚Äúaccess control‚Äù‚Äîthen you‚Äôve succeeded!&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ryota_Ito_7-1747629956399.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262787iE364BC6F70C5B0C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ryota_Ito_7-1747629956399.png" alt="Ryota_Ito_7-1747629956399.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-266180544" id="toc-hId-266180544"&gt;6ÔΩúChallenge ‚Äì Compare Accuracy with Your Custom Embedding Model&lt;/H3&gt;&lt;P&gt;In Part 2 you deployed an OpenAI embedding model. Now let‚Äôs use that model to compare results on the same data and with the same query.&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 11
from gen_ai_hub.proxy.langchain.openai import OpenAIEmbeddings
from langchain_hana import HanaDB
from hdbcli import dbapi
import os

# Swap out the embedding
openai_embed = OpenAIEmbeddings(
    deployment_id=os.getenv("EMBED_DEPLOYMENT_ID")  # The ID you noted in Part 2
)

# Use a separate table for easy comparison
db_alt = HanaDB(
    embedding=openai_embed,
    connection=connection,
    table_name="TEST_TABLE_OAI"
)

# Initialize the alternate table
db_alt.delete(filter={})
db_alt.add_documents(text_chunks)

# Run the same query
alt_docs = db_alt.similarity_search(query, k=2)
print("\n=== Results with OpenAI Embeddings ===")
for doc in alt_docs:
    print("-" * 80)
    print(doc.page_content)&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;&lt;STRONG&gt;Points of Comparison&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;How do the top-hit chunks differ between&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;the HANA built-in model and the OpenAI model&lt;/STRONG&gt;?&lt;/LI&gt;&lt;LI&gt;Try both short and long queries (and other variations) to see where each model excels.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-69667039" id="toc-hId-69667039"&gt;&lt;SPAN&gt;7 | Next&amp;nbsp;Up&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-5-rag-basics-building-retriever/ba-p/14113412" target="_self"&gt;Part 5 RAG Basics ‚ë°: Building Retriever Tool&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In Part 5, we‚Äôll integrate the HANA Cloud vector store you‚Äôve just created as a RAG tool into a LangChain Agent. You‚Äôll see how to combine it with a Google Search tool to run a ‚Äútwo-pronged‚Äù agent. Stay tuned!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--788883849" id="toc-hId--788883849"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Disclaimer&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;SPAN&gt;All the views and opinions in the blog are my own and is made in my personal capacity and that SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-4-rag-basics-hana-cloud/ba-p/14083287"/>
    <published>2025-05-19T06:28:48.468000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/semantic-querying-with-sap-hana-cloud-knowledge-graph-using-rdf-sparql-and/ba-p/14109200</id>
    <title>Semantic Querying with SAP HANA Cloud Knowledge Graph using RDF, SPARQL, and Generative AI in Python</title>
    <updated>2025-05-22T12:40:07.914000+02:00</updated>
    <author>
      <name>jing_wen</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1923466</uri>
    </author>
    <content>&lt;P&gt;SAP Knowledge Graph is now generally available (Q1 2025) and is poised to fundamentally change how data relationships are mapped and queried. With grounded intelligence, knowledge graphs are crucial in enabling AI agents for reasoning and retrieval with context and high accuracy. SAP Knowledge Graph Engine includes a native RDF triplestore and supports SQL/SPARQL interoperability, allowing both semantic and relational access.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="1. SAP HANA.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265022i384F499585C329E4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="1. SAP HANA.png" alt="1. SAP HANA.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;A few key concepts when working with SAP Knowledge Graph:&lt;BR /&gt;&amp;nbsp;&lt;BR /&gt;&lt;STRONG&gt;Resource Description Framework (RDF): &lt;/STRONG&gt;Graph-like format utilizing the relationship between entities to connect information&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;RDF Triples&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Subject&lt;/STRONG&gt;&amp;nbsp;- The entity being described (e.g., a product, person, or organization).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Predicate&lt;/STRONG&gt;&amp;nbsp;- The relationship between the subject and the object (e.g., "manufactures," "owns," "located in").&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Object&lt;/STRONG&gt;&amp;nbsp;- The value or entity linked to the subject (e.g., a location, another person, or an attribute).&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;RDF enables storing and querying relationships dynamically, making it a key foundation for knowledge graphs and AI-driven reasoning.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;URI (Uniform Resource Identifier): &lt;/STRONG&gt;Unique identifier for an entity or relationship within the knowledge graph.&lt;/P&gt;&lt;P&gt;This blog covers an integration of SAP HANA Cloud Knowledge Graph with Gen AI Hub on Python, uploading and querying an RDF graph. For starters, refer to the SAP Discovery Center Mission ‚Äì &amp;nbsp;&lt;A href="https://discovery-center.cloud.sap/missiondetail/4568/4856/" target="_blank" rel="noopener nofollow noreferrer"&gt;Building Intelligent Data Applications with SAP HANA Cloud Knowledge Graphs&lt;/A&gt;. &lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="2. HANA Cloud Knowledge Graph.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265023i6F4426457B4BCFF2/image-size/large?v=v2&amp;amp;px=999" role="button" title="2. HANA Cloud Knowledge Graph.png" alt="2. HANA Cloud Knowledge Graph.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;Prerequisites&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Access to SAP HANA Cloud Knowledge Graph Engine&lt;/LI&gt;&lt;LI&gt;Access to SAP Generative AI Hub SDK (SAP AI Core on SAP BTP)&lt;/LI&gt;&lt;LI&gt;A Python environment&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Set up an SAP HANA Cloud instance where Triple Store is enabled&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Within SAP HANA Database, enable ‚ÄòTriple Store‚Äô on SAP HANA Cloud Central tool during instance provisioning&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Step 5: Advanced Setting tab&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Prerequisite: 3 vCPUs compute / 48 GB memory or more&lt;/LI&gt;&lt;LI&gt;Recommended: At least 8 vCPUs &amp;amp; more for enhanced performance&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="3. SAP HANA Triple Store Enablement.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265024i96E229A2276C2CE5/image-size/large?v=v2&amp;amp;px=999" role="button" title="3. SAP HANA Triple Store Enablement.png" alt="3. SAP HANA Triple Store Enablement.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The following steps uses Python programmatically.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Create Knowledge Graphs (RDF format)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We start by loading RDF/XML file into an RDFLib graph. RDFLib is a Python library that supports the creation and manipulation of RDF triples programmatically. The RDF file used in this example refers to the open-source &lt;A href="https://catalog.data.gov/dataset/financial-plan-statements-cash-flow/resource/bee3ae1b-657b-4bea-a02c-213a103ff6af" target="_blank" rel="noopener nofollow noreferrer"&gt;Financial Plan Statements ‚Äì Cash Flow&lt;/A&gt;. The raw data contains many predicates, but for this use case, we will filter triples containing specific predicates like rowID, dscrpt (description), and infl_outfl (inflow/outflow).&lt;/P&gt;&lt;P&gt;Define namespaces matching the RDF predicates. Create a new graph to store filtered triples that contain only relevant predicates. This reduces data noise and keeps the RDF data focused on important attributes.&lt;/P&gt;&lt;P&gt;Finally, the filtered data is saved in .ttl format for ingestion into SAP HANA.&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;from rdflib import Graph, Namespace

g = Graph()
g.parse("rows.rdf", format="xml")

ns1 = Namespace("http://www.socrata.com/rdf/terms#")
ns2 = Namespace("https://data.cityofnewyork.us/resource/_4ubz-8kkx/")
filtered = Graph()
filtered.bind("ns1", ns1)
filtered.bind("ns2", ns2)

for s, p, o in g:
    if p in (ns1.rowID, ns2.dscrpt, ns2.infl_outfl):
        filtered.add((s, p, o))
filtered.serialize(destination="rows_filtered_100.ttl", format="turtle")&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Loading RDF Graph into SAP HANA Cloud&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using SAP HANA‚Äôs dbapi, the filtered RDF data is uploaded into a named RDF graph within SAP HANA Cloud via a stored procedure (SPARQL_EXECUTE). This makes the semantic data available for SPARQL querying within the database.&lt;/P&gt;&lt;P&gt;This integration enables leveraging SAP HANA‚Äôs graph engine and SPARQL query capabilities on the ingested RDF.&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;from hdbcli import dbapi

conn = dbapi.connect(user="USERNAME", password="PASSWORD", address="ADDRESS", port=443)
cursor = conn.cursor()

rdf_filename = "rows_filtered_100.ttl"
graphname = 'financial_plan_statements_cashflow_filtered_100'

with open(rdf_filename, 'r') as rdf_file:
    rdf_data = rdf_file.read()

request_hdrs = (
    'rqx-load-protocol: true\r\n'
    f'rqx-load-filename: {rdf_filename}\r\n'
    f'rqx-load-graphname: {graphname}\r\n'
)

cursor.callproc('SPARQL_EXECUTE', (rdf_data, request_hdrs, '', None))
cursor.commit()&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once ready, the filtered RDF graph is loaded into SAP HANA Cloud‚Äôs graph store. You can view the triples that you‚Äôve uploaded via the HANA Cloud Central SQL Console. The SQL Console is configured to show a maximum number of 250,000 rows, configurable via settings.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="4. SAP HANA Cloud Central Database Objects.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265026i2E79605FA21B5952/image-size/large?v=v2&amp;amp;px=999" role="button" title="4. SAP HANA Cloud Central Database Objects.png" alt="4. SAP HANA Cloud Central Database Objects.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="5. SAP HANA Cloud SPARQL.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265027i92E54EB692D93BC8/image-size/large?v=v2&amp;amp;px=999" role="button" title="5. SAP HANA Cloud SPARQL.png" alt="5. SAP HANA Cloud SPARQL.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="6. SAP HANA Cloud SQL Console.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265028i0AD13E407DD5829C/image-size/large?v=v2&amp;amp;px=999" role="button" title="6. SAP HANA Cloud SQL Console.png" alt="6. SAP HANA Cloud SQL Console.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="7. SAP HANA SQL Endpoint.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265029i6B4FA085CE9AC575/image-size/large?v=v2&amp;amp;px=999" role="button" title="7. SAP HANA SQL Endpoint.png" alt="7. SAP HANA SQL Endpoint.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note: Under Instances, copy SQL Endpoint (top right) to use for HANA Cloud API connectivity.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: Setting Up Generative AI Hub SDK&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Generative AI Hub SDK provides an interface to LLMs.&lt;/P&gt;&lt;P&gt;To bridge natural language questions to RDF data queries, we configure an SAP AI Core client and proxy to use an LLM. In this case, anthropic‚Äîclaude-3.5-sonnet is used. Do note you‚Äôll have to deploy the model you‚Äôre using, and you can do so via SAP AI Launchpad.&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;from ai_core_sdk.ai_core_v2_client import AICoreV2Client
from gen_ai_hub.proxy.langchain.amazon import ChatBedrock
from gen_ai_hub.proxy.core.proxy_clients import get_proxy_client

def setup(): 
    proxy_client = get_proxy_client('gen-ai-hub')
    anthropic = ChatBedrock(
        model_name="anthropic--claude-3.5-sonnet",
        proxy_client=proxy_client
    )

    # Connect to SAP HANA Cloud
    conn = dbapi.connect(
        user='',
        password='',  # alternatively, set up os.environ 
        address='',
        port=443,
    )

    return anthropic, conn&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 5: Extracting Triples from RDF&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This retrieves RDF triples. The results are parsed from XML into Python data structures.&amp;nbsp;These triples represent graph data, not traditional database tables or columns.&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;def extract_schema(question: str, conn) -&amp;gt; list[dict]:
    sparql = """
    SELECT ?s ?p ?o WHERE {
        ?s ?p ?o.
        FILTER(STRSTARTS(STR(?s), "https://data.cityofnewyork.us/resource/_4ubz-8kkx"))
    }
    """
    # Execute SPARQL query via stored procedure
    # Parse response XML into triple dicts (subject, predicate, object)
    # Return list of triples as dictionaries or empty list if none found&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 6: Analyzing Triples with AI and Generating Natural Language Responses&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The extracted triples, combined with the user‚Äôs natural language question, are fed into Anthropic Claude (via Gen AI Hub SDK and LangChain integrations)&amp;nbsp;to generate a concise and coherent natural language answer.&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;def generate_response_structured(question: str, results: pd.DataFrame, anthropic) -&amp;gt; str:
    if results.empty:
        return "No results found for your query."
    
    prompt_template = """Convert the following query results into a natural language response to the user's question. 
    Keep the response concise but informative. Include relevant numbers and comparisons where appropriate.
    
    Question: {question}
    
    Results:
    {results}
    
    Response:
    """
    
    prompt = PromptTemplate.from_template(prompt_template).invoke({
        "question": question,
        "results": results.to_string()
    })
    
    response = anthropic.invoke(prompt)
    return response.content&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The output, adjusted to show only natural language:&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LLM Output 1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265030i01290E04BD2FA406/image-size/large?v=v2&amp;amp;px=999" role="button" title="LLM Output 1.png" alt="LLM Output 1.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LLM Output 2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265031iDD1BFB17DE0F4342/image-size/large?v=v2&amp;amp;px=999" role="button" title="LLM Output 2.png" alt="LLM Output 2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This end-to-end system enables users to ask complex questions over RDF graphs stored in SAP HANA Cloud ‚Äî all with natural language.&lt;/P&gt;&lt;P&gt;This pipeline showcases a powerful synergy of&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Semantic data&lt;/STRONG&gt; managed with RDF and SPARQL&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Enterprise-grade persistence and querying&lt;/STRONG&gt; on SAP HANA Cloud&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Generative AI&lt;/STRONG&gt; that interprets user intent and translates it into precise data queries&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Natural language explanations&lt;/STRONG&gt; that make complex data accessible&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;AI-assisted analytics and querying on complex RDF datasets is suitable for financial statements, geographical data, and more‚Äîdelivering real-time insights.&lt;/P&gt;&lt;P&gt;Leave any comments below!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/semantic-querying-with-sap-hana-cloud-knowledge-graph-using-rdf-sparql-and/ba-p/14109200"/>
    <published>2025-05-22T12:40:07.914000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-generative-ai/ba-p/14109699</id>
    <title>SAP -Generative AI</title>
    <updated>2025-05-22T21:00:10.067000+02:00</updated>
    <author>
      <name>MohanMujumale</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/171044</uri>
    </author>
    <content>&lt;P&gt;In today‚Äôs fast-evolving digital economy, businesses are increasingly seeking ways to enhance productivity, improve decision-making, and deliver personalized experiences. Artificial Intelligence (AI) has emerged as a cornerstone in this transformation, and SAP is at the forefront, embedding AI directly into its business processes through SAP Business AI.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-generative-ai/ba-p/14109699"/>
    <published>2025-05-22T21:00:10.067000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-architecture-blog-posts/generative-ai-with-sap-introduction-to-sap-business-ai/ba-p/14109720</id>
    <title>Generative AI with SAP ‚Äì Introduction to SAP Business AI</title>
    <updated>2025-05-23T18:22:39.281000+02:00</updated>
    <author>
      <name>MohanMujumale</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/171044</uri>
    </author>
    <content>&lt;P&gt;In today‚Äôs fast-evolving digital economy, businesses are increasingly seeking ways to enhance productivity, improve decision-making, and deliver personalized experiences. Artificial Intelligence (AI) has emerged as a cornerstone in this transformation, and SAP is at the forefront, embedding AI directly into its business processes through SAP Business AI.&lt;/P&gt;&lt;P&gt;This blog serves as an introduction to SAP Business AI, with a focus on Generative AI and its integration into the SAP ecosystem.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;What Is SAP Business AI?&lt;/P&gt;&lt;P&gt;SAP Business AI is SAP‚Äôs portfolio of AI technologies and services embedded across its applications and platforms. Unlike generic AI platforms, SAP Business AI is enterprise-ready, context-aware, and responsible by design, tailored to help businesses become more intelligent and agile.&lt;/P&gt;&lt;P&gt;Key components of SAP Business AI include:&lt;/P&gt;&lt;P&gt;1.Embedded AI capabilities in SAP applications (e.g., SAP S/4HANA, SAP SuccessFactors, SAP Customer Experience)&lt;/P&gt;&lt;P&gt;2.Industry-specific AI scenario&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Business-centric AI models trained on anonymized and consented SAP data&lt;/LI&gt;&lt;LI&gt;Tools for developing, deploying, and managing AI&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;What Is Generative AI?&lt;/P&gt;&lt;P&gt;Generative AI refers to AI systems capable of generating new content, such as text, images, code, and even designs. It leverages large language models (LLMs) and transformers to understand and produce human-like outputs based on prompts.&lt;/P&gt;&lt;P&gt;In a business context, Generative AI opens up possibilities for:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Automating document creation (e.g., invoices, job descriptions)&lt;/LI&gt;&lt;LI&gt;Summarizing reports and meeting notes&lt;/LI&gt;&lt;LI&gt;Writing personalized marketing content&lt;/LI&gt;&lt;LI&gt;Assisting in coding and debugging&lt;/LI&gt;&lt;LI&gt;Enhancing customer service with intelligent chatbots&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Generative AI in SAP Business AI&lt;/P&gt;&lt;P&gt;SAP integrates Generative AI within its solutions through a responsible and enterprise-focused approach.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;SAP Joule ‚Äì Your AI Copilot&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;SAP introduced Joule; a natural language copilot embedded across SAP cloud applications. Joule helps users:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Retrieve business insights in real time&lt;/LI&gt;&lt;LI&gt;Automate tasks with simple prompts&lt;/LI&gt;&lt;LI&gt;Interact conversationally with enterprise data&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;For example, a procurement officer can ask:&lt;BR /&gt;What are the top 5 vendors based on last quarter‚Äôs delivery performance?&lt;BR /&gt;Joule delivers a contextual, data-driven answer instantly.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Partnering with Leading LLM Providers&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;SAP collaborates with OpenAI, Anthropic, and Google Cloud Vertex AI to integrate advanced LLMs into its applications, while maintaining enterprise-grade data privacy and security.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;SAP AI Core and AI Launchpad&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;For developers, SAP AI Core provides infrastructure to manage and deploy AI models, including Generative AI. SAP AI Launchpad offers tools to monitor and govern these models responsibly.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Use Cases of Generative AI in SAP&lt;/P&gt;&lt;P&gt;Here are some real-world examples of how Generative AI is used across SAP solutions:&lt;/P&gt;&lt;TABLE width="537"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="188"&gt;Area&lt;/TD&gt;&lt;TD width="349"&gt;Use Case&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;HR (SuccessFactors)&lt;/TD&gt;&lt;TD&gt;Auto-generate job descriptions based on role requirements&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Finance (S/4HANA)&lt;/TD&gt;&lt;TD&gt;Summarize financial reports and detect anomalies&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Customer Service&lt;/TD&gt;&lt;TD&gt;Generate dynamic responses in chatbots&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Procurement&lt;/TD&gt;&lt;TD&gt;Draft vendor emails and contracts&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Sales &amp;amp; Marketing&lt;/TD&gt;&lt;TD&gt;Create personalized campaign content&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Responsible AI with SAP&lt;/P&gt;&lt;P&gt;SAP emphasizes ethical AI use, focusing on:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Transparency: Clearly informing users when AI is used&lt;/LI&gt;&lt;LI&gt;Privacy: Ensuring data is handled securely and anonymized&lt;/LI&gt;&lt;LI&gt;Fairness: Avoiding bias in model training and outputs&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;With its AI Ethics Policy and governance frameworks, SAP is committed to delivering AI that customers can trust.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Getting Started&lt;/P&gt;&lt;P&gt;To explore SAP Business AI:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Try out Joule in your SAP applications&lt;/LI&gt;&lt;LI&gt;Explore the SAP AI Core and Launchpad on SAP BTP&lt;/LI&gt;&lt;LI&gt;Visit the SAP Discovery Center for Generative AI use cases&lt;/LI&gt;&lt;LI&gt;Join the SAP Community to connect with AI experts and peers&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Generative AI is more than a buzzword - it‚Äôs a powerful tool driving intelligent automation and innovation across industries. With SAP Business AI, organizations can unlock the value of AI within familiar business processes, responsibly and securely.&lt;/P&gt;&lt;P&gt;Stay tuned for deep dives into specific use cases, technical integrations, and customer success stories in future posts.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;What Is Joule?&lt;/P&gt;&lt;P&gt;Imagine having a trusted AI companion by your side, ready to assist and enhance your daily operations using the power of natural language and generative capabilities across SAP‚Äôs cloud portfolio that‚Äôs Joule.&lt;/P&gt;&lt;P&gt;Joule is:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;An advanced, generative AI copilot embedded throughout SAP‚Äôs cloud enterprise portfolio&lt;/LI&gt;&lt;LI&gt;Designed to deliver proactive and contextualized insights from SAP applications and third-party sources&lt;/LI&gt;&lt;LI&gt;Built to help people get work done faster and drive better business outcomes in a secure, compliant way&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;How Will Customers Use Joule?&lt;/P&gt;&lt;P&gt;Joule quickly sorts through and contextualizes data from multiple systems to surface smarter insights. It will be embedded across applications including HR, finance, supply chain, procurement, and customer experience, and integrated into SAP Business Technology Platform (BTP).&lt;/P&gt;&lt;P&gt;Users can ask questions or present problems in plain language and receive intelligent, context-aware answers.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;A manufacturer asks Joule about sales performance.&lt;/LI&gt;&lt;LI&gt;Joule identifies underperforming regions, links it to supply chain data, and suggests fixes.&lt;/LI&gt;&lt;LI&gt;In HR, it can write inclusive job descriptions and suggest interview questions.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Some Important Facts About Joule&lt;/P&gt;&lt;P&gt;Integration with SAP Applications:&lt;BR /&gt;Joule provides a conversational UI integrated with SAP apps, using SAP Fiori-compliant components.&lt;/P&gt;&lt;P&gt;Enterprise-Readiness:&lt;BR /&gt;Out-of-the-box integration with SAP backend systems, aligned with AI ethics, GDPR, and privacy controls. Joule is SOC-II compliant.&lt;/P&gt;&lt;P&gt;Automatic Updates:&lt;BR /&gt;Joule is continuously updated to include new capabilities and improvements.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;How to Stay Updated on Joule&lt;/P&gt;&lt;P&gt;Explore these resources:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;SAP Joule product page&lt;/LI&gt;&lt;LI&gt;SAP Community for Joule updates&lt;/LI&gt;&lt;LI&gt;SAP Discovery Center for use cases&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Joule in Procurement ‚Äì Empowering Smart, AI-Driven Decisions&lt;/P&gt;&lt;P&gt;Procurement is a strategic function where speed, accuracy, and insight are critical. Joule brings transformative capabilities to procurement by enabling:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Conversational access to enterprise data&lt;/LI&gt;&lt;LI&gt;Automation of repetitive tasks&lt;/LI&gt;&lt;LI&gt;Enhanced decision-making&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Real-Time Spend Analysis&lt;/P&gt;&lt;P&gt;Instead of digging through reports, simply ask -&lt;BR /&gt;"What was our total spend on IT hardware in Q1 across all regions?"&lt;BR /&gt;Joule retrieves and visualizes the data instantly.&lt;/P&gt;&lt;P&gt;Supplier Evaluation&lt;/P&gt;&lt;P&gt;Ask:&lt;BR /&gt;Which suppliers had the highest late delivery rate last quarter?&lt;BR /&gt;Joule evaluates performance using embedded analytics and ML.&lt;/P&gt;&lt;P&gt;RFQ and Email Drafting&lt;/P&gt;&lt;P&gt;Joule can:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Draft RFQs&lt;/LI&gt;&lt;LI&gt;Create follow-up emails&lt;/LI&gt;&lt;LI&gt;Propose contract language&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Example:&lt;BR /&gt;Draft an RFQ for 500 ergonomic office chairs with delivery in two weeks.&lt;/P&gt;&lt;P&gt;Workflow Acceleration&lt;/P&gt;&lt;P&gt;Speed up approvals:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Show PRs needing my approval&lt;/LI&gt;&lt;LI&gt;Approve all low-risk PRs below $5,000&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Compliance &amp;amp; Risk Detection&lt;/P&gt;&lt;P&gt;Stay audit-ready:&lt;BR /&gt;Which POs are missing documentation?&lt;BR /&gt;Joule flags issues proactively.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Why It Matters&lt;/P&gt;&lt;P&gt;In procurement, Joule enables:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Faster decision-making&lt;/LI&gt;&lt;LI&gt;Improved collaboration&lt;/LI&gt;&lt;LI&gt;Proactive risk mitigation&lt;/LI&gt;&lt;LI&gt;Higher operational efficiency&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Joule doesn‚Äôt replace professionals ‚Äî it amplifies them.&lt;/P&gt;&lt;P&gt;Coming soon: Expanded capabilities across the entire procurement lifecycle ‚Äî from sourcing to supplier collaboration ‚Äî all within the trusted SAP ecosystem.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/products/artificial-intelligence/ai-assistant.html" target="_blank" rel="noopener noreferrer"&gt;https://www.sap.com/products/artificial-intelligence/ai-assistant.html&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thankyou...&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-architecture-blog-posts/generative-ai-with-sap-introduction-to-sap-business-ai/ba-p/14109720"/>
    <published>2025-05-23T18:22:39.281000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-5-rag-%E5%9F%BA%E7%A4%8E-retriever-tool%E3%81%AE%E6%A7%8B%E7%AF%89/ba-p/14108524</id>
    <title>üöÄ ÁßíÈÄü„ÅßÂ≠¶„Å∂ SAP AI Core Agent ÈñãÁô∫ üöÄ - Part 5 RAG Âü∫Á§é ‚ë°: Retriever Tool„ÅÆÊßãÁØâ</title>
    <updated>2025-05-27T08:59:11.056000+02:00</updated>
    <author>
      <name>Ryota_Ito</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1390198</uri>
    </author>
    <content>&lt;P class=""&gt;ÁîüÊàê AI „ÅØÁ†îÁ©∂ÂÆ§„ÅÆÂ§ñ„Å∏È£õ„Å≥Âá∫„Åó„ÄÅ‰ªä„ÇÑ„Éì„Ç∏„Éç„ÇπÁèæÂ†¥„ÅÆÂ∏∏Ë≠ò„ÇíÂ°ó„ÇäÊõø„Åà„Å¶„ÅÑ„Åæ„Åô„ÄÇSAP„ÅØÂÖ®ÈÄüÂäõ„Åß„Åù„ÅÆÊ≥¢„Å´‰πó„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Åì„ÅÆ„Éñ„É≠„Ç∞„Ç∑„É™„Éº„Ç∫„Åß„ÅØ„ÄÅSAP&amp;nbsp;AI&amp;nbsp;Core „ÅÆÊó¢ÂÆö„É¢„Éá„É´„ÇíÊúÄÈÄü„ÅßÂëº„Å≥Âá∫„Åó„ÄÅÂÆüÂãô„Åß‰Ωø„Åà„Çã AI „Ç®„Éº„Ç∏„Çß„É≥„Éà„Å∏Êã°Âºµ„Åô„Çã‚ÄúÁßíÈÄü„Éè„É≥„Ç∫„Ç™„É≥‚Äù„Çí„ÅäÂ±ä„Åë„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;„ÅäÁü•„Çâ„Åõ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;You can find the English version&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-5-rag-basics-building-retriever/ba-p/14113412" target="_self"&gt;here&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1967282760" id="toc-hId-1988763935"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":open_book:"&gt;üìñ&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;Êú¨„Ç∑„É™„Éº„Ç∫„ÅßÂ≠¶„Åπ„Çã„Åì„Å®&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;SAP&amp;nbsp;AI&amp;nbsp;Core ‰∏ä„Åß„Ç´„Çπ„Çø„É† AI Agent „Çí ‚ÄúÁßíÈÄü‚Äù „ÅßÂãï„Åã„ÅôÊñπÊ≥ï&lt;/LI&gt;&lt;LI&gt;LangChain„ÉªGoogle Ê§úÁ¥¢„ÉÑ„Éº„É´„ÉªRAG„Çí‰Ωø„Å£„ÅüÂÆüË£Ö&lt;/LI&gt;&lt;LI&gt;AI Agent „Çí REST&amp;nbsp;API Âåñ„Åó„ÄÅSAPUI5/Fiori „ÅÆ UI „Å´Ëºâ„Åõ„ÄÅCloud Foundry„Å´„Éá„Éó„É≠„Ç§„Åô„ÇãÊâãÈ†Ü&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Â≠¶ÁøíÊôÇÈñì&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;ÂêÑPart&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;„ÅØ&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;10‚Äì15 ÂàÜ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;„ÅßË™≠„ÇÅ„ÇãÔºÜÊâã„ÇíÂãï„Åã„Åõ„Çã„Éú„É™„É•„Éº„É†„Çí‰∫àÂÆö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1770769255" id="toc-hId-1792250430"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;üó∫&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;Ô∏è ÈÄ£Ëºâ„É≠„Éº„Éâ„Éû„ÉÉ„Éó&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part0-%E3%83%97%E3%83%AD%E3%83%AD%E3%83%BC%E3%82%B0/ba-p/14080340" target="_self"&gt;Part 0 „Éó„É≠„É≠„Éº„Ç∞&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-1-%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89-sap-ai-core%E3%81%A8ai-launchpad/ba-p/14081168" target="_self"&gt;Part 1 Áí∞Â¢ÉÊßãÁØâ: SAP AI Core„Å®AI Launchpad&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-2-langchain-%E3%81%A7%E3%83%81%E3%83%A3%E3%83%83%E3%83%88%E3%83%A2%E3%83%87%E3%83%AB%E3%82%92%E6%A7%8B%E7%AF%89/ba-p/14081270" target="_self"&gt;Part 2 LangChain „Åß„ÉÅ„É£„ÉÉ„Éà„É¢„Éá„É´„ÇíÊßãÁØâ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part3-agent%E3%83%84%E3%83%BC%E3%83%AB-google-%E6%A4%9C%E7%B4%A2%E3%82%92%E7%B5%B1%E5%90%88/ba-p/14082244" target="_self"&gt;Part 3 Agent„ÉÑ„Éº„É´: Google&amp;nbsp;Ê§úÁ¥¢„ÇíÁµ±Âêà&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part4-rag-%E5%9F%BA%E7%A4%8E-hana-cloud-vectorengine%E3%81%A8%E5%9F%8B%E3%82%81%E8%BE%BC%E3%81%BF%E5%87%A6%E7%90%86/ba-p/14093988" target="_self"&gt;Part 4 RAG Âü∫Á§é ‚ë†: HANA Cloud VectorEngine„Å®Âüã„ÇÅËæº„ÅøÂá¶ÁêÜ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-5-rag-%E5%9F%BA%E7%A4%8E-retriever-tool%E3%81%AE%E6%A7%8B%E7%AF%89/ba-p/14108524" target="_self"&gt;Part 5 RAG Âü∫Á§é ‚ë°: Retriever Tool„ÅÆÊßãÁØâ&lt;/A&gt;&amp;nbsp;[&lt;STRONG&gt;ÁèæÂú®„ÅÆ„Éñ„É≠„Ç∞&lt;/STRONG&gt;]&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-6-ai-agent-%E3%82%92-rest-api-%E5%8C%96/ba-p/14119805" target="_self"&gt;Part 6 AI Agent „Çí REST&amp;nbsp;API Âåñ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-7-sapui5-%E3%81%A7%E3%83%81%E3%83%A3%E3%83%83%E3%83%88ui-%E3%82%92%E6%A7%8B%E7%AF%89/ba-p/14124854" target="_self"&gt;Part 7 SAPUI5 „Åß„ÉÅ„É£„ÉÉ„ÉàUI „ÇíÊßãÁØâ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-8-cloudfoundry-%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4/ba-p/14126865" target="_self"&gt;Part 8 CloudFoundry „Å´„Éá„Éó„É≠„Ç§&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;P&gt;„Åì„ÅÆË®ò‰∫ã„Åå„ÅäÂΩπ„Å´Á´ã„Å£„Åü„Çâ„ÄÅ„Åú„Å≤‚ÄØ&lt;STRONG&gt;Kudos&lt;/STRONG&gt;‚ÄØ„ÇíÊäº„Åó„Å¶„ÅÑ„Åü„Å†„Åë„Çã„Å®Âä±„Åø„Å´„Å™„Çä„Åæ„Åô„ÄÇ „Äå„Åì„Åì„Çí„ÇÇ„Å£„Å®Ë©≥„Åó„ÅèÁü•„Çä„Åü„ÅÑ„Äç„ÄåÂà•„ÅÆ„ÉÜ„Éº„Éû„ÇÇÂèñ„Çä‰∏ä„Åí„Å¶„Åª„Åó„ÅÑ„Äç„Å™„Å©„ÄÅ„ÅîË¶ÅÊúõ„Åå„ÅÇ„Çå„Å∞„ÅäÊ∞óËªΩ„Å´„Ç≥„É°„É≥„Éà„Åè„Å†„Åï„ÅÑÔºÅ&lt;/P&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1316090312" id="toc-hId-1337571487"&gt;RAG Âü∫Á§é ‚ë°: Retriever Tool„ÅÆÊßãÁØâ&lt;/H2&gt;&lt;H3 id="toc-hId-1249678318" id="toc-hId-1270140701"&gt;1ÔΩú„ÅØ„Åò„ÇÅ„Å´&lt;/H3&gt;&lt;P&gt;ÂâçÂõû„ÅÆ Part „Åß„ÅØÁ§æÂÜÖ„Éâ„Ç≠„É•„É°„É≥„Éà„Çí &lt;STRONG&gt;SAP HANA Cloud VectorEngine&lt;/STRONG&gt; „Å´Ê†ºÁ¥ç„Åó„ÄÅ„Éô„ÇØ„Éà„É´„Å´„Çà„Çã„ÇØ„Ç®„É™ÔºàË≥™ÂïèÊñáÔºâ„Å®Á§æÂÜÖ„Éâ„Ç≠„É•„É°„É≥„Éà„Å®„ÅÆÈ°û‰ººÂ∫¶Ê§úÁ¥¢„ÇíÂÆüË°å„Åô„Çã„Å®„Åì„Çç„Åæ„ÅßÂÆå‰∫Ü„Åó„Åæ„Åó„Åü„ÄÇ‰ªäÂõû„ÅÆ Part „Åß„ÅØ„ÄÅ„Åù„ÅÆÊ§úÁ¥¢„É≠„Ç∏„ÉÉ„ÇØ„Çí &lt;STRONG&gt;AI Agent „ÅåÂëº„Å≥Âá∫„Åõ„Çã„ÉÑ„Éº„É´Âåñ&lt;/STRONG&gt;ÔºàRetriever Tool ÂåñÔºâ„Åó„Åæ„Åô„ÄÇ„Åì„Çå„Å´„Çà„Çä„ÄÅAI Agent „ÅØ„ÄåÁ§æÂÜÖ„Éô„ÇØ„Çø„Éº„Çπ„Éà„Ç¢ ‚Üí Web Ê§úÁ¥¢„Äç„ÅÆ‰∫åÊÆµ„É≠„Ç±„ÉÉ„Éà„ÅßÂõûÁ≠î„ÇíÁµÑ„ÅøÁ´ã„Å¶„Çâ„Çå„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-1073627196"&gt;&lt;SPAN&gt;2 | ‰∫ãÂâçÊ∫ñÂÇô&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;BTP „Çµ„Éñ„Ç¢„Ç´„Ç¶„É≥„Éà&lt;/LI&gt;&lt;LI&gt;SAP AI Core „Ç§„É≥„Çπ„Çø„É≥„Çπ&lt;/LI&gt;&lt;LI&gt;SAP AI Launchpad„ÅÆ„Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥&lt;/LI&gt;&lt;LI&gt;Python 3.13Áí∞Â¢É &amp;amp; pip&lt;/LI&gt;&lt;LI&gt;VSCode„ÇÑBAS„Å™„Å©„ÅÆIDE&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Trial Áí∞Â¢É„ÅÆÊ≥®ÊÑè&lt;BR /&gt;&lt;/STRONG&gt;Trial „ÅÆ HANA‚ÄØCloud „Ç§„É≥„Çπ„Çø„É≥„Çπ„ÅØ&amp;nbsp;&lt;STRONG&gt;ÊØéÊô©Ëá™ÂãïÂÅúÊ≠¢ „Åï„Çå„Åæ„Åô„ÄÇÊó•„Çí„Åæ„Åü„Åê‰ΩúÊ•≠„ÅÆÂ†¥Âêà„ÅØÁøåÊó•„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÇíÂÜçËµ∑Âãï„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-877113691"&gt;&lt;SPAN&gt;3 | Retriever Tool „ÅÆ‰ΩúÊàê&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Retriever „Å®„ÅØ„Äå&lt;STRONG&gt;„ÇØ„Ç®„É™„Å®ÂÜÖÂÆπ„Åå‰ºº„Å¶„ÅÑ„Çã„ÉÜ„Ç≠„Çπ„Éà„ÉÅ„É£„É≥„ÇØ„ÇíËøî„Åô„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà&lt;/STRONG&gt;„Äç„Åß„ÄÅLangChain „ÅÆ RAG „Éë„Ç§„Éó„É©„Ç§„É≥„ÅßÊúÄÂàù„Å´Âëº„Å∞„Çå„Åæ„Åô„ÄÇÂâçÂõû„ÅÆ Part „Åß‰Ωú„Å£„Åü db„Ç§„É≥„Çπ„Çø„É≥„Çπ„Å´„ÅØÊó¢„Å´„Éô„ÇØ„Éà„É´„Å®„É°„Çø„Éá„Éº„Çø„Åå‰øùÂ≠ò„Åï„Çå„Å¶„ÅÑ„Çã„Åü„ÇÅ„ÄÅ„Åì„Çå„Çí„Åù„ÅÆ„Åæ„Åæ Retriever „Å∏ÊòáÊ†º„Åï„Åõ„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;„Åæ„Åö„ÄÅÂâçÂõû„ÅÆ Part „ÅßÂüã„ÇÅËæº„ÅøÂá¶ÁêÜ&amp;amp;Ê†ºÁ¥ç„Åó„Åü„Éá„Éº„Çø„Çí HANA Cloud Explorer ‰∏ä„ÅßÁ¢∫Ë™ç„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇTEST_TABLE „ÉÜ„Éº„Éñ„É´„ÇíÈñã„Åè„Å®„ÄÅ„ÉÜ„Ç≠„Çπ„ÉàÂàó„Å®„Éô„ÇØ„Éà„É´Âàó„ÅåÊ†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„ÅÆ„ÅåÁ¢∫Ë™ç„Åß„Åç„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-05-23 at 17.23.22.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265457i4DF93AB7E4DFDEC5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-05-23 at 17.23.22.png" alt="Screenshot 2025-05-23 at 17.23.22.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;‚ÄÉ&lt;/P&gt;&lt;P&gt;LangChain „Å´„Åä„Åë„Çã Retriever „ÅØ .as_retriever() „ÅßÁ∞°Âçò„Å´ÁîüÊàê„Åß„Åç„Åæ„Åô„ÄÇÂâçÂõû‰Ωú„Å£„Åü db „Ç§„É≥„Çπ„Çø„É≥„ÇπÔºà„Éô„ÇØ„Çø„Éº„Çπ„Éà„Ç¢Ôºâ„Çí„Åù„ÅÆ„Åæ„ÅæÂÜçÂà©Áî®„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 11
retriever = db.as_retriever()

# „ÉÜ„Çπ„Éà„ÇØ„Ç®„É™„ÇíÊäï„Åí„Å¶ 1 ‰ª∂„Å†„ÅëÁ¢∫Ë™ç
retriever.invoke("Tell me about SAP security")[0]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;Á∂ö„ÅÑ„Å¶„ÄÅRetriever „Çí &lt;STRONG&gt;„ÉÑ„Éº„É´Âåñ&lt;/STRONG&gt; „Åó„Åæ„Åô„ÄÇcreate_retriever_tool „Å´ Retriever Êú¨‰Ωì„Éª„ÉÑ„Éº„É´Âêç„ÉªË™¨ÊòéÊñá„ÇíÊ∏°„Åô„Å†„Åë„Åß„Åô„ÄÇË™¨ÊòéÊñá„ÅØ LLM „ÅåË™≠„Çì„Åß‰ΩøÁî®ÂèØÂê¶„ÇíÂà§Êñ≠„Åô„ÇãÈáçË¶Å„Éë„É©„É°„Éº„Çø„Å™„ÅÆ„Åß„ÄÅÁõÆÁöÑ„ÇíÊòéÁ¢∫„Å´Êõ∏„Åç„Åæ„Åó„Çá„ÅÜ„ÄÇË™¨ÊòéÊñá„Å´„ÅØ„Äå‰Ωï„ÇíÊ§úÁ¥¢„Åß„Åç„Çã„Åã„Äç„Äå„ÅÑ„Å§‰Ωø„ÅÜ„Åπ„Åç„Åã„Äç„ÇíÂê´„ÇÅ„Çã„Åì„Å®„Çí„Ç™„Çπ„Çπ„É°„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 12
from langchain.tools.retriever import create_retriever_tool
retriever_tool = create_retriever_tool(
    retriever=retriever,
    name="hana_vectorengine",
    description=(
        "Use this tool to search internal SAP documents stored in HANA Cloud Vector Engine when the user asks about company-specific policies, security, or best practices."
    ),
)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-680600186"&gt;&lt;SPAN&gt;4 |&amp;nbsp;AI Agent „Å´ÁµÑ„ÅøËæº„Çì„ÅßÂãï„Åã„Åô&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;„Åì„Çå„Åß &lt;STRONG&gt;Google Search&lt;/STRONG&gt; „Å® &lt;STRONG&gt;HANA VectorEngine&lt;/STRONG&gt; „ÅÆ 2 Êú¨Á´ã„Å¶„ÉÑ„Éº„É´„Çª„ÉÉ„Éà„ÅåÊèÉ„ÅÑ„Åæ„Åó„Åü„ÄÇ&lt;BR /&gt;initialize_agent() „Åß‰∏°Êñπ„ÇíÊ∏°„Åó„Å¶ agent „Ç§„É≥„Çπ„Çø„É≥„Çπ„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ„Åù„Åó„Å¶„ÄÅË§áÈõë„Å™Ë≥™Âïè„Çí AI Agent „Å´Êäï„Åí„Å¶„Åø„Åæ„Åó„Çá„ÅÜÔºÅ&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 13
from langchain.agents import initialize_agent, AgentType

agent = initialize_agent(
    tools=[google_tool, retriever_tool],
    llm=chat_llm,
    agent=AgentType.OPENAI_FUNCTIONS,
    verbose=True,
)

result = agent.invoke("RISE with SAP „ÅÆ„Çµ„Éº„Éì„ÇπÂÜÖÂÆπ„Å®„ÄÅ2025 Âπ¥ÊôÇÁÇπ„Åß„ÅÆ„ÇØ„É©„Ç¶„ÉâÁßªË°åÂ∏ÇÂ†¥„Ç∑„Çß„Ç¢Ôºà‰ªñÁ§æÊØîËºÉÔºâ„Çí„ÅÇ„Çè„Åõ„Å¶Ëß£Ë™¨„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ")&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;"verbose=True"„Å®ÊåáÂÆö„Åô„Çã„Å®„ÄÅAI Agent „ÅÆ„Äé&lt;STRONG&gt;Thought ‚Üí Action ‚Üí Observation&lt;/STRONG&gt;„Äè„ÅÆÊµÅ„Çå„Åå„Åù„ÅÆ„Åæ„ÅæÂá∫Âäõ„Åï„Çå„Åæ„Åô„ÄÇ‰∏ã„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà„Å´„Åä„Åë„Çã„ÄÅ&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Invoking: hana_vectorengine with {'query': 'RISE with SAP „Çµ„Éº„Éì„ÇπÂÜÖÂÆπ'}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;„Åß„ÄÅ„Åæ„Åö&amp;nbsp;&lt;STRONG&gt;HANA Cloud VectorEngine&lt;/STRONG&gt; „ÅßÁ§æÂÜÖ„Éâ„Ç≠„É•„É°„É≥„ÉàÊ§úÁ¥¢„ÇíË°å„Å£„Å¶„ÅÑ„Çã„Åì„Å®„ÅåÂàÜ„Åã„Çä„Åæ„Åô„ÄÇ&lt;BR /&gt;Á∂ö„ÅèËµ§Êû†„ÄÅ&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Invoking: google_search with {'query': '2025 „ÇØ„É©„Ç¶„ÉâÁßªË°åÂ∏ÇÂ†¥„Ç∑„Çß„Ç¢ SAP ‰ªñÁ§æÊØîËºÉ'}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;„Åß„ÄÅ&lt;STRONG&gt;Google Search&lt;/STRONG&gt; „Å´„Çà„ÇãÊúÄÊñ∞Â∏ÇÂ†¥„Éá„Éº„Çø„ÅÆÂèñÂæó„ÇíË°®„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ&lt;BR /&gt;ÔºàÁí∞Â¢É„Å´„Çà„Å£„Å¶ÂÆüË°åÈ†Ü„ÇÑ„ÇØ„Ç®„É™ÊñáÂ≠óÂàó„ÅØÂ§öÂ∞ëÂ§â„Çè„ÇãÂ†¥Âêà„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÔºâ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-05-23 at 17.01.49.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265448i2ADEEFC9FFBF3107/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-05-23 at 17.01.49.png" alt="Screenshot 2025-05-23 at 17.01.49.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;ÊúÄÂæå„Å´„ÄÅ„Ç®„Éº„Ç∏„Çß„É≥„Éà„ÅÆÊúÄÁµÇÂõûÁ≠î„Çí Markdown „Å®„Åó„Å¶Ë°®Á§∫„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ&lt;BR /&gt;„Åì„Çå„Åß‰ªäÂõû„ÅÆ„Ç¥„Éº„É´‚Äï‚Äï„Äå&lt;STRONG&gt;Ê§úÁ¥¢„ÉÑ„Éº„É´„Å® HANA Cloud VectorEngine „Å´„Çà„Çã Retriever „Çí‰ΩµÁî®„Åô„Çã AI Agent&lt;/STRONG&gt;„Äç„ÅÆÂÆåÊàê„Åß„ÅôÔºÅÔºÅ&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 14
from IPython.display import Markdown, display

display(Markdown(result["output"]))&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-05-23 at 17.13.41.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265451i5C47F47C539D944C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-05-23 at 17.13.41.png" alt="Screenshot 2025-05-23 at 17.13.41.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-267110793" id="toc-hId-484086681"&gt;5ÔΩú„ÉÅ„É£„É¨„É≥„Ç∏ ‚Äì AI Agent „Å´ „É°„É¢„É™ „Çí‰ªò„Åë„Å¶„Åø„Çà„ÅÜ&lt;/H3&gt;&lt;P&gt;‰ªäÂõû„Åæ„Åß„Å´‰Ωú„Å£„Åü AI Agent „ÅØ‰ºöË©±Â±•Ê≠¥„Çí‰øùÊåÅ„Åó„Åæ„Åõ„Çì„ÄÇ„Åì„Çå„Åß„ÅØ„Äå„Åï„Å£„Åç„ÅÆË≥™Âïè„ÇíË∏è„Åæ„Åà„Å¶Á≠î„Åà„Çã„Äç„Äå„É¶„Éº„Ç∂Âêç„ÇíË¶ö„Åà„Çã„Äç„Å®„ÅÑ„Å£„ÅüËá™ÁÑ∂„Å™ÂØæË©±„Åå„Åß„Åç„Å™„ÅÑ„Åü„ÇÅ„ÄÅLangChain „ÅÆÂæìÊù•„É°„É¢„É™„ÇØ„É©„Çπ ConversationBufferMemory „Çí‰Ωø„Å£„Å¶Â±•Ê≠¥„Çí‰øùÂ≠ò„Åß„Åç„Çã„Çà„ÅÜ„Å´Êã°Âºµ„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;STRONG&gt;Â∞ÜÊù•ÁöÑ„Å™ÁßªË°å„Å´„Å§„ÅÑ„Å¶&lt;/STRONG&gt;&lt;BR /&gt;ConversationBufferMemory „ÅØ LangChain 0.3 Á≥ª„ÅßÈùûÊé®Â•®„Å®„Å™„Çä„ÄÅ‰ªäÂæå„ÅØ &lt;STRONG&gt;LangGraph&lt;/STRONG&gt; „ÇíÁî®„ÅÑ„Åü„É°„É¢„É™ÂÆüË£Ö„ÅåÊé®Â•®„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ&lt;BR /&gt;Êú¨„Ç∑„É™„Éº„Ç∫„Åß„ÅØ„Åæ„Åö ‚ÄúÁßíÈÄü‚Äù „ÅßÂãï„Åè„Åì„Å®„ÇíÂÑ™ÂÖà„Åó„ÄÅ‰ªäÂõû„ÅØÂæìÊù•„ÇØ„É©„Çπ„ÅßÂÆüË£Ö„Åó„Åæ„Åô„ÄÇÂæåÊó• &lt;STRONG&gt;Part 5.5&lt;/STRONG&gt; „Åß &lt;EM&gt;LangGraph Áâà„ÅÆ AI Agent Ôºã „É°„É¢„É™ÂÆüË£Ö&lt;/EM&gt; „Çí„ÅÇ„Çâ„Åü„ÇÅ„Å¶‰ΩúÊàê„Åó„ÄÅÁßªË°åÊâãÈ†Ü„Åæ„ÅßË©≥„Åó„ÅèÂèñ„Çä‰∏ä„Åí„Çã‰∫àÂÆö„Åß„Åô„ÄÇ&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 15
from langchain.chains.conversation.memory import ConversationBufferMemory
from langchain_core.prompts import MessagesPlaceholder
from langchain.agents import initialize_agent, AgentType

agent_kwargs = {
    "extra_prompt_messages": [MessagesPlaceholder(variable_name="memory")],
}

memory = ConversationBufferMemory(memory_key="memory", return_messages=True)

agent_with_memory = initialize_agent(
    tools=[google_tool, retriever_tool],
    llm=chat_llm,
    agent=AgentType.OPENAI_FUNCTIONS,
    verbose=True,
    agent_kwargs=agent_kwargs,
    memory=memory,
)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;‰∏ä„ÅÆ„Çª„É´„Åß„ÅØ ‚ë†Â±•Ê≠¥„Çí‰øùÊåÅ„Åô„Çã ConversationBufferMemory „ÇíÁîüÊàê„Åó„ÄÅ‚ë°initialize_agent „Å´ memory ÂºïÊï∞„Å®„Åó„Å¶Ê∏°„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇMessagesPlaceholder „ÇíËøΩÂä†„Åó„Åü„Åì„Å®„Åß„ÄÅÂ±•Ê≠¥„Åå„Éó„É≠„É≥„Éó„Éà„Å´Ëá™Âãï„ÅßÂ∑Æ„ÅóËæº„Åæ„Çå„Çã‰ªïÁµÑ„Åø„Å´„Å™„Çä„Åæ„Åó„Åü„ÄÇ&lt;/P&gt;&lt;P&gt;Á∂ö„ÅÑ„Å¶Âãï„Åç„ÇíÁ¢∫Ë™ç„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;result1 = agent_with_memory.invoke("ÁßÅ„ÅÆÂêçÂâç„ÅØ‰ºäËó§„Åß„Åô„ÄÇ")
result2 = agent_with_memory.invoke("ÁßÅ„ÅÆÂêçÂâç„ÅØÔºü")
print(result2["output"])&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2 ÂõûÁõÆ„ÅÆÂëº„Å≥Âá∫„Åó„Åß„Äå„ÅÇ„Å™„Åü„ÅÆÂêçÂâç„ÅØ‰ºäËó§„Åï„Çì„Åß„Åô„Å≠„Äç„Å™„Å©Ââç„ÅÆÁô∫Ë©±„ÇíÂèçÊò†„Åó„ÅüÁ≠î„Åà„ÅåËøî„Å£„Å¶„Åè„Çå„Å∞„ÄÅ„É°„É¢„É™„ÅåÊ©üËÉΩ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇÂá∫Âäõ„Åã„ÇâÂ±•Ê≠¥„ÅåÈÄ£Èéñ„Åó„Å¶„ÅÑ„ÇãÊßòÂ≠ê„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ‚ÄÉ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-05-24 at 13.56.19.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265591iC29D02216856EEA4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-05-24 at 13.56.19.png" alt="Screenshot 2025-05-24 at 13.56.19.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;„É°„É¢„É™‰ªò„Åç„Å´„Å™„Å£„Åü„Åì„Å®„Åß„ÄÅÂêå„Åò„Çª„ÉÉ„Ç∑„Éß„É≥ÂÜÖ„Åß„ÅÆ„Éï„Ç©„É≠„Éº„Ç¢„ÉÉ„ÉóË≥™Âïè„ÇÑ„ÄÅHANA Cloud„Åß„ÅÆÊ§úÁ¥¢ÁµêÊûú„ÉªGoogle Ê§úÁ¥¢ÁµêÊûú„ÇíË∏è„Åæ„Åà„ÅüËøΩÂä†Ë≥™Âïè„ÅåËá™ÁÑ∂„Å´Ë°å„Åà„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åô„ÄÇ„Åú„Å≤Ëâ≤„ÄÖË©¶„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑÔºÅ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-70597288" id="toc-hId-287573176"&gt;6ÔΩúÊ¨°Âõû‰∫àÂëä&lt;/H3&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-6-ai-agent-%E3%82%92-rest-api-%E5%8C%96/ba-p/14119805" target="_self"&gt;Part 6 AI Agent „Çí REST&amp;nbsp;API Âåñ&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;Part 6 „Åß„ÅØ„ÄÅ„Åì„Çå„Åæ„Åß„Å´‰ΩúÊàê„Åó„Åü Notebook „ÅÆ„Çª„É´„ÇíÁπã„Åí„Å¶„ÄÅÔºë„Å§„ÅÆ Web API „Å®„Åó„Å¶„Åæ„Å®„ÇÅ„Åæ„Åô„ÄÇ„Åæ„Åü„ÄÅ‰ΩúÊàê„Åó„Åü AI Agent API „ÅÆ„ÉÜ„Çπ„Éà„ÇÇÂÆüÊñΩ„Åó„Å¶„Åø„Åæ„Åô„ÄÇ„ÅäÊ•Ω„Åó„Åø„Å´ÔºÅ&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-327771873" id="toc-hId-349225109"&gt;&lt;SPAN&gt;&lt;STRONG&gt;ÂÖçË≤¨‰∫ãÈ†Ö&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;SPAN&gt;Êú¨„Éñ„É≠„Ç∞„Å´Ë®òËºâ„Åï„Çå„ÅüË¶ãËß£„Åä„Çà„Å≥ÊÑèË¶ã„ÅØ„Åô„Åπ„Å¶ÁßÅÂÄã‰∫∫„ÅÆ„ÇÇ„ÅÆ„Åß„ÅÇ„Çä„ÄÅÁßÅ„ÅÆÂÄã‰∫∫ÁöÑ„Å™Á´ãÂ†¥„ÅßÁô∫‰ø°„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇSAP „ÅØÊú¨„Éñ„É≠„Ç∞„ÅÆÂÜÖÂÆπ„Å´„Å§„ÅÑ„Å¶‰∏ÄÂàá„ÅÆË≤¨‰ªª„ÇíË≤†„ÅÑ„Åæ„Åõ„Çì„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-5-rag-%E5%9F%BA%E7%A4%8E-retriever-tool%E3%81%AE%E6%A7%8B%E7%AF%89/ba-p/14108524"/>
    <published>2025-05-27T08:59:11.056000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-5-rag-basics-building-retriever/ba-p/14113412</id>
    <title>üöÄ SAP AI Core Agent QuickLaunch Series üöÄ - Part 5 RAG Basics ‚ë°: Building Retriever Tool</title>
    <updated>2025-05-30T09:23:24.566000+02:00</updated>
    <author>
      <name>Ryota_Ito</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1390198</uri>
    </author>
    <content>&lt;P class=""&gt;Generative&amp;nbsp;AI has leapt from research papers to daily business reality‚Äî and SAP is surfing that wave at full speed.&amp;nbsp;In&amp;nbsp;this hands‚Äëon series, I‚Äôll show you how to spin up a custom AI agent on SAP&amp;nbsp;AI&amp;nbsp;Core in minutes, then grow it into a production‚Äëready asset‚Äîwithout drowning in theory.&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Notice&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Êó•Êú¨Ë™ûÁâà„ÅØ&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-5-rag-%E5%9F%BA%E7%A4%8E-retriever-tool%E3%81%AE%E6%A7%8B%E7%AF%89/ba-p/14108524" target="_self"&gt;„Åì„Å°„Çâ&lt;/A&gt;„Åß„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1967371303" id="toc-hId-1989537507"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":open_book:"&gt;üìñ&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;What You‚Äôll Learn in This Series&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;How to Run a Custom AI Agent on SAP AI Core in Seconds&lt;/LI&gt;&lt;LI&gt;Implementation Using LangChain, Google Search Tool, and RAG&lt;/LI&gt;&lt;LI&gt;Steps to Convert the AI Agent into a REST API, Integrate It into an SAPUI5/Fiori UI, and Deploy to Cloud Foundry&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Time Commitment&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Each part is designed to be completed in&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;10‚Äì15&amp;nbsp;minutes&lt;/STRONG&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1770857798" id="toc-hId-1793024002"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;üó∫&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Ô∏è Series Roadmap&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part0-prologue/ba-p/14104823" target="_self"&gt;Part 0 Prologue&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-1-env-setup-sap-aicore-amp-ai/ba-p/14104825" target="_self"&gt;Part 1 Env Setup: SAP AICore &amp;amp; AI Launchpad&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-2-building-a-chat-model-with/ba-p/14104832" target="_self"&gt;Part 2 Building a Chat Model with&amp;nbsp;LangChain&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-3-agent-tools-integrating-google/ba-p/14104844" target="_self"&gt;Part 3 Agent&amp;nbsp;Tools: Integrating Google&amp;nbsp;Search&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-4-rag-basics-hana-cloud/ba-p/14083287" target="_self"&gt;Part4 RAG Basics‚ë† HANA Cloud VectorEngine &amp;amp; Embedding&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-5-rag-basics-building-retriever/ba-p/14113412" target="_self"&gt;Part 5 RAG Basics ‚ë°: Building Retriever Tool&lt;/A&gt;&amp;nbsp;[&lt;STRONG&gt;current blog&lt;/STRONG&gt;]&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-6-converting-the-ai-agent-into-a/ba-p/14121055" target="_self"&gt;Part 6: Converting the AI Agent into a REST API&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-7-building-the-chat-ui-with/ba-p/14127011" target="_self"&gt;Part 7: Building the Chat UI with SAPUI5&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-8-deploying-to-cloud-foundry/ba-p/14127673" target="_self"&gt;Part 8: Deploying to Cloud Foundry&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Subsequent blogs will be published soon.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;P&gt;If you enjoyed this post, please give it a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;kudos&lt;/STRONG&gt;! Your support really motivates me. Also, if there‚Äôs anything you‚Äôd like to know more about, feel free to leave a comment!&lt;/P&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1316178855" id="toc-hId-1338345059"&gt;RAG Basics ‚ë°: Building Retriever Tool&lt;/H2&gt;&lt;H3 id="toc-hId-1248748069" id="toc-hId-1270914273"&gt;&lt;SPAN&gt;1&amp;nbsp;| Introduction&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;In the previous chapter, we stored our internal documents in the SAP HANA Cloud Vector Engine and completed the similarity search between user queries (as vectors) and those documents. In this chapter, we‚Äôll turn that search logic into a tool that our AI agent can invoke (a Retriever Tool). With this in place, the AI agent will be able to build its responses using a two-stage ‚Äúinternal vector store ‚Üí web search‚Äù process.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052234564" id="toc-hId-1074400768"&gt;&lt;SPAN&gt;2 | Prerequisites&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;BTP sub-account&lt;/LI&gt;&lt;LI&gt;SAP AI Core instance&lt;/LI&gt;&lt;LI&gt;SAP AI LaunchPad Subscription&lt;/LI&gt;&lt;LI&gt;Python 3.13 and pip&lt;/LI&gt;&lt;LI&gt;VSCode, BAS or any IDE&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note for the Trial Environment&lt;/STRONG&gt;&lt;BR /&gt;The HANA Cloud instance in the Trial enviroment automatically shuts down every night. If your work spans past midnight, please restart the instance the following day.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052234564" id="toc-hId-877887263"&gt;&lt;SPAN&gt;3 | Build the Retriever Tool&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;A &lt;STRONG&gt;retriever&lt;/STRONG&gt; is an object that returns text chunks whose content closely matches a given query, and it‚Äôs the first component invoked in LangChain‚Äôs RAG pipeline. Because our DB instance from the previous chapter already contains both vectors and metadata, we can promote it directly to a retriever.&lt;/P&gt;&lt;P&gt;First, let‚Äôs inspect the data we embedded and stored in the last chapter via the HANA Cloud Explorer. If you open the &lt;STRONG&gt;TEST_TABLE&lt;/STRONG&gt; table, you‚Äôll see that it holds both the text column and its corresponding vector column.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-05-28 at 17.16.48.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266823i35E6A8168FFA384F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-05-28 at 17.16.48.png" alt="Screenshot 2025-05-28 at 17.16.48.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In LangChain, you can turn your vector store into a Retriever in one line using the .as_retriever() method. Let‚Äôs reuse the db instance we created in the previous chapter:&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 11
retriever = db.as_retriever()

# Send a test query and retrieve just one result
retriever.invoke("Tell me about SAP security")[0]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Next, we‚Äôll package this Retriever as a tool. LangChain‚Äôs create_retriever_tool helper takes three arguments‚Äîthe Retriever itself, a tool name, and a description. Because the description is what the LLM reads to decide when to invoke the tool, be sure to state clearly what this tool searches and when it should be used. Here‚Äôs an example:&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 12
from langchain.tools.retriever import create_retriever_tool
retriever_tool = create_retriever_tool(
    retriever=retriever,
    name="hana_vectorengine",
    description=(
        "Use this tool to search internal SAP documents stored in HANA Cloud Vector Engine when the user asks about company-specific policies, security, or best practices."
    ),
)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052234564" id="toc-hId-681373758"&gt;&lt;SPAN&gt;4 | Integrate and Running in the AI Agent&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Now that we have a two-tool setup‚ÄîGoogle Search and our HANA VectorEngine retriever‚Äîwe can wire them into an AI Agent. Pass both tools into initialize_agent() to create the agent instance, then fire off a complex query:&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 13
from langchain.agents import initialize_agent, AgentType

agent = initialize_agent(
    tools=[google_tool, retriever_tool],
    llm=chat_llm,
    agent=AgentType.OPENAI_FUNCTIONS,
    verbose=True,
)

result = agent.invoke(
    "Please explain the services offered by RISE with SAP and, as of 2025, the cloud-migration market share compared to other vendors."
)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;By setting verbose=True, you‚Äôll see the agent‚Äôs full ‚ÄúThought ‚Üí Action ‚Üí Observation‚Äù trace. For example, in the screenshot below you‚Äôll spot:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Invoking: `google_search` with `cloud migration market share 2025 SAP compared to other vendors`&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;which shows the agent pulling the latest market‚Äêshare data via Google Search, followed by:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Invoking: `hana_vectorengine` with `{'query': 'services offered by RISE with SAP'}`&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;indicating that it‚Äôs then querying your internal SAP documents in HANA Cloud VectorEngine. (The exact order or query phrasing may vary slightly by environment.)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-05-28 at 17.23.14.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266826i5767FB1298C5E36C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-05-28 at 17.23.14.png" alt="Screenshot 2025-05-28 at 17.23.14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;‚ÄÉ‚ÄÉ&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Finally, let‚Äôs render the agent‚Äôs final answer as Markdown. With this step, we‚Äôve completed our chapter goal‚Äîan AI Agent that combines a web search tool with the HANA Cloud VectorEngine Retriever!&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 14
from IPython.display import Markdown, display

display(Markdown(result["output"]))&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-05-28 at 17.28.12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266827iF643B8A205D4912C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-05-28 at 17.28.12.png" alt="Screenshot 2025-05-28 at 17.28.12.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052234564" id="toc-hId-484860253"&gt;&lt;SPAN&gt;5 | Challenge ‚Äì Add Memory to the AI Agent&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;So far, the AI Agent we‚Äôve built does not retain any conversation history. Without this, it can‚Äôt handle natural dialogue features like ‚Äúanswer based on the previous question‚Äù or ‚Äúremember the user‚Äôs name.‚Äù To fix that, we‚Äôll extend it to store its history using LangChain‚Äôs conventional ConversationBufferMemory class.&lt;/SPAN&gt;&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Future migration note:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;ConversationBufferMemory is deprecated in LangChain 0.3, and going forward, memory implementations based on LangGraph are recommended. In this series, we‚Äôre prioritizing ‚Äúspeed to implementation,‚Äù so we‚Äôll stick with the traditional class for now. In Part 5.5, we‚Äôll revisit this and build an AI Agent with LangGraph‚Äìbased memory, covering the migration steps in detail.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# ‚ñ∂ Notebook Cell 15
from langchain.chains.conversation.memory import ConversationBufferMemory
from langchain_core.prompts import MessagesPlaceholder
from langchain.agents import initialize_agent, AgentType

agent_kwargs = {
    "extra_prompt_messages": [MessagesPlaceholder(variable_name="memory")],
}

memory = ConversationBufferMemory(memory_key="memory", return_messages=True)

agent_with_memory = initialize_agent(
    tools=[google_tool, retriever_tool],
    llm=chat_llm,
    agent=AgentType.OPENAI_FUNCTIONS,
    verbose=True,
    agent_kwargs=agent_kwargs,
    memory=memory,
)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In the cell above, we did two things:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;Created a ConversationBufferMemory instance to hold the conversation history.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Passed that memory into initialize_agent.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;By including a MessagesPlaceholder, LangChain will now automatically inject the stored history into each prompt.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Next, let‚Äôs verify that it‚Äôs working:&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;result1 = agent_with_memory.invoke("My name is Ryota")
result2 = agent_with_memory.invoke("Who am I")
print(result2["output"])&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;On the second call, you should see a reply like ‚ÄúYour name is Mr. Ito,‚Äù which shows that the agent remembered your earlier message. Check the output to confirm that the history is being threaded through.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-05-28 at 17.29.13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266829i7BF6DE9719856D40/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-05-28 at 17.29.13.png" alt="Screenshot 2025-05-28 at 17.29.13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;With memory enabled, you can now naturally ask follow-up questions in the same session, or build on results from HANA Cloud searches and Google searches. Give it a try!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-69667039" id="toc-hId-288346748"&gt;&lt;SPAN&gt;7 | Next&amp;nbsp;Up&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-6-converting-the-ai-agent-into-a/ba-p/14121055" target="_self"&gt;Part 6: Converting the AI Agent into a REST API&lt;/A&gt;&lt;/P&gt;&lt;P&gt;In Part 6, we‚Äôll link together the notebooks we‚Äôve created so far to turn them into a &lt;STRONG&gt;web API&lt;/STRONG&gt;, and we‚Äôll also run tests on the AI Agent API we‚Äôve developed. Stay tuned!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--788883849" id="toc-hId-349998681"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Disclaimer&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;SPAN&gt;All the views and opinions in the blog are my own and is made in my personal capacity and that SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-5-rag-basics-building-retriever/ba-p/14113412"/>
    <published>2025-05-30T09:23:24.566000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-6-ai-agent-%E3%82%92-rest-api-%E5%8C%96/ba-p/14119805</id>
    <title>üöÄ ÁßíÈÄü„ÅßÂ≠¶„Å∂ SAP AI Core Agent ÈñãÁô∫ üöÄ - Part 6 AI Agent „Çí REST API Âåñ</title>
    <updated>2025-06-06T09:41:19.738000+02:00</updated>
    <author>
      <name>Ryota_Ito</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1390198</uri>
    </author>
    <content>&lt;P class=""&gt;ÁîüÊàê AI „ÅØÁ†îÁ©∂ÂÆ§„ÅÆÂ§ñ„Å∏È£õ„Å≥Âá∫„Åó„ÄÅ‰ªä„ÇÑ„Éì„Ç∏„Éç„ÇπÁèæÂ†¥„ÅÆÂ∏∏Ë≠ò„ÇíÂ°ó„ÇäÊõø„Åà„Å¶„ÅÑ„Åæ„Åô„ÄÇSAP„ÅØÂÖ®ÈÄüÂäõ„Åß„Åù„ÅÆÊ≥¢„Å´‰πó„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Åì„ÅÆ„Éñ„É≠„Ç∞„Ç∑„É™„Éº„Ç∫„Åß„ÅØ„ÄÅSAP&amp;nbsp;AI&amp;nbsp;Core „ÅÆÊó¢ÂÆö„É¢„Éá„É´„ÇíÊúÄÈÄü„ÅßÂëº„Å≥Âá∫„Åó„ÄÅÂÆüÂãô„Åß‰Ωø„Åà„Çã AI „Ç®„Éº„Ç∏„Çß„É≥„Éà„Å∏Êã°Âºµ„Åô„Çã‚ÄúÁßíÈÄü„Éè„É≥„Ç∫„Ç™„É≥‚Äù„Çí„ÅäÂ±ä„Åë„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;„ÅäÁü•„Çâ„Åõ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;You can find the English version &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-6-converting-the-ai-agent-into-a/ba-p/14121055" target="_self"&gt;here&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1967282760" id="toc-hId-1989720069"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":open_book:"&gt;üìñ&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;Êú¨„Ç∑„É™„Éº„Ç∫„ÅßÂ≠¶„Åπ„Çã„Åì„Å®&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;SAP&amp;nbsp;AI&amp;nbsp;Core ‰∏ä„Åß„Ç´„Çπ„Çø„É† AI Agent „Çí ‚ÄúÁßíÈÄü‚Äù „ÅßÂãï„Åã„ÅôÊñπÊ≥ï&lt;/LI&gt;&lt;LI&gt;LangChain„ÉªGoogle Ê§úÁ¥¢„ÉÑ„Éº„É´„ÉªRAG„Çí‰Ωø„Å£„ÅüÂÆüË£Ö&lt;/LI&gt;&lt;LI&gt;AI Agent „Çí REST&amp;nbsp;API Âåñ„Åó„ÄÅSAPUI5/Fiori „ÅÆ UI „Å´Ëºâ„Åõ„ÄÅCloud Foundry„Å´„Éá„Éó„É≠„Ç§„Åô„ÇãÊâãÈ†Ü&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Â≠¶ÁøíÊôÇÈñì&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;ÂêÑPart „ÅØ&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;10‚Äì15 ÂàÜ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;„ÅßË™≠„ÇÅ„ÇãÔºÜÊâã„ÇíÂãï„Åã„Åõ„Çã„Éú„É™„É•„Éº„É†„Çí‰∫àÂÆö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1770769255" id="toc-hId-1793206564"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;üó∫&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;Ô∏è ÈÄ£Ëºâ„É≠„Éº„Éâ„Éû„ÉÉ„Éó&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part0-%E3%83%97%E3%83%AD%E3%83%AD%E3%83%BC%E3%82%B0/ba-p/14080340" target="_self"&gt;Part 0 „Éó„É≠„É≠„Éº„Ç∞&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-1-%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89-sap-ai-core%E3%81%A8ai-launchpad/ba-p/14081168" target="_self"&gt;Part 1 Áí∞Â¢ÉÊßãÁØâ: SAP AI Core„Å®AI Launchpad&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-2-langchain-%E3%81%A7%E3%83%81%E3%83%A3%E3%83%83%E3%83%88%E3%83%A2%E3%83%87%E3%83%AB%E3%82%92%E6%A7%8B%E7%AF%89/ba-p/14081270" target="_self"&gt;Part 2 LangChain „Åß„ÉÅ„É£„ÉÉ„Éà„É¢„Éá„É´„ÇíÊßãÁØâ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part3-agent%E3%83%84%E3%83%BC%E3%83%AB-google-%E6%A4%9C%E7%B4%A2%E3%82%92%E7%B5%B1%E5%90%88/ba-p/14082244" target="_self"&gt;Part 3 Agent„ÉÑ„Éº„É´: Google&amp;nbsp;Ê§úÁ¥¢„ÇíÁµ±Âêà&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part4-rag-%E5%9F%BA%E7%A4%8E-hana-cloud-vectorengine%E3%81%A8%E5%9F%8B%E3%82%81%E8%BE%BC%E3%81%BF%E5%87%A6%E7%90%86/ba-p/14093988" target="_self"&gt;Part 4 RAG Âü∫Á§é ‚ë†: HANA Cloud VectorEngine„Å®Âüã„ÇÅËæº„ÅøÂá¶ÁêÜ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-5-rag-%E5%9F%BA%E7%A4%8E-retriever-tool%E3%81%AE%E6%A7%8B%E7%AF%89/ba-p/14108524" target="_self"&gt;Part 5 RAG Âü∫Á§é ‚ë°: Retriever Tool„ÅÆÊßãÁØâ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-6-ai-agent-%E3%82%92-rest-api-%E5%8C%96/ba-p/14119805" target="_self"&gt;Part 6 AI Agent „Çí REST&amp;nbsp;API Âåñ&lt;/A&gt;&amp;nbsp;[&lt;STRONG&gt;ÁèæÂú®„ÅÆ„Éñ„É≠„Ç∞&lt;/STRONG&gt;]&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-7-sapui5-%E3%81%A7%E3%83%81%E3%83%A3%E3%83%83%E3%83%88ui-%E3%82%92%E6%A7%8B%E7%AF%89/ba-p/14124854" target="_self"&gt;Part 7 SAPUI5 „Åß„ÉÅ„É£„ÉÉ„ÉàUI „ÇíÊßãÁØâ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-8-cloudfoundry-%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4/ba-p/14126865" target="_self"&gt;Part 8 CloudFoundry „Å´„Éá„Éó„É≠„Ç§&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Ê≥®Ë®ò&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Á∂öÁ∑®„ÅØÈ†ÜÊ¨°ÂÖ¨Èñã‰∫àÂÆö„Åß„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;P&gt;„Åì„ÅÆË®ò‰∫ã„Åå„ÅäÂΩπ„Å´Á´ã„Å£„Åü„Çâ„ÄÅ„Åú„Å≤‚ÄØ&lt;STRONG&gt;Kudos&lt;/STRONG&gt;‚ÄØ„ÇíÊäº„Åó„Å¶„ÅÑ„Åü„Å†„Åë„Çã„Å®Âä±„Åø„Å´„Å™„Çä„Åæ„Åô„ÄÇ „Äå„Åì„Åì„Çí„ÇÇ„Å£„Å®Ë©≥„Åó„ÅèÁü•„Çä„Åü„ÅÑ„Äç„ÄåÂà•„ÅÆ„ÉÜ„Éº„Éû„ÇÇÂèñ„Çä‰∏ä„Åí„Å¶„Åª„Åó„ÅÑ„Äç„Å™„Å©„ÄÅ„ÅîË¶ÅÊúõ„Åå„ÅÇ„Çå„Å∞„ÅäÊ∞óËªΩ„Å´„Ç≥„É°„É≥„Éà„Åè„Å†„Åï„ÅÑÔºÅ&lt;/P&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1316090312" id="toc-hId-1338527621"&gt;&lt;SPAN&gt;AI Agent „Çí REST&amp;nbsp;API Âåñ&lt;/SPAN&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-1249678318" id="toc-hId-1271096835"&gt;1ÔΩú„ÅØ„Åò„ÇÅ„Å´&lt;/H3&gt;&lt;P&gt;‰ªäÂõû„ÅÆPart „Åß„ÅØ„ÄÅ„Åì„Çå„Åæ„Åß Notebook ‰∏ä„ÅßÈñãÁô∫„Åó„Å¶„Åç„Åü AI Agent „Çí &lt;STRONG&gt;REST API &lt;/STRONG&gt;„Å®„Åó„Å¶ÂÖ¨Èñã„Åó„ÄÅÂæå„Åß &lt;STRONG&gt;Cloud FoundryÔºàCFÔºâ &lt;/STRONG&gt;„Å´„Éá„Éó„É≠„Ç§„Åß„Åç„ÇãÂΩ¢„Å´„Åæ„Å®„ÇÅ„Åæ„Åô„ÄÇAPIÂåñ „Åô„Çã„Åì„Å®„Åß„ÄÅ‰ª•‰∏ã„ÅÆ„É°„É™„ÉÉ„Éà„Åå„ÅÇ„Çä„Åæ„Åô:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;ÂÜçÂà©Áî®ÊÄß&lt;/STRONG&gt;ÔºöCLI „ÇÑÂà•„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÄÅSAP UI5 „ÅÆ„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„Å™„Å©„ÄÅ„ÅÇ„Çâ„ÇÜ„Çã„ÇØ„É©„Ç§„Ç¢„É≥„Éà„Åã„Çâ HTTP„É™„ÇØ„Ç®„Çπ„Éà „ÅßÂëº„Å≥Âá∫„Åõ„Çã&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;„Çπ„Ç±„Éº„É©„Éì„É™„ÉÜ„Ç£&lt;/STRONG&gt;Ôºö„Éó„É≠„Çª„Çπ„Çí Web„Çµ„Éº„Éê „Å´Â∏∏Èßê„Åï„Åõ„Çã„Åì„Å®„ÅßË§áÊï∞„É™„ÇØ„Ç®„Çπ„Éà„Å´ÂØæÂøú„Åß„Åç„Çã&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;ÈÅãÁî®ÊÄß&lt;/STRONG&gt;ÔºöCF‰∏ä„Åß„ÅÆËá™Âãï„Çπ„Ç±„Éº„É´„ÇÑ„É≠„Ç∞ÁÆ°ÁêÜ„ÄÅË™çË®ºÂà∂Âæ°„Å™„Å©„ÄÅ„ÇØ„É©„Ç¶„ÉâÁí∞Â¢É„ÅÆÊ®ôÊ∫ñÁöÑ„Å™‰ªïÁµÑ„Åø„ÇíÊ¥ªÁî®„Åß„Åç„Çã&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;‰ªäÂõû„ÅØ„ÄÅFastAPI „ÇíÁî®„ÅÑ„Å¶Á∞°Âçò„Å™ WebAPI „ÇíÂÆüË£Ö„Åó„ÄÅLangChain „Éô„Éº„Çπ„ÅÆ AI Agent „Çí„Ç®„É≥„Éâ„Éù„Ç§„É≥„ÉàÂåñ„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-1074583330"&gt;&lt;SPAN&gt;2 | ‰∫ãÂâçÊ∫ñÂÇô&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;BTP „Çµ„Éñ„Ç¢„Ç´„Ç¶„É≥„Éà&lt;/LI&gt;&lt;LI&gt;SAP AI Core „Ç§„É≥„Çπ„Çø„É≥„Çπ&lt;/LI&gt;&lt;LI&gt;SAP AI Launchpad„ÅÆ„Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥&lt;/LI&gt;&lt;LI&gt;Python 3.13Áí∞Â¢É &amp;amp; pip&lt;/LI&gt;&lt;LI&gt;VSCode„ÇÑBAS„Å™„Å©„ÅÆIDE&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Trial Áí∞Â¢É„ÅÆÊ≥®ÊÑè&lt;BR /&gt;&lt;/STRONG&gt;Trial „ÅÆ HANA‚ÄØCloud „Ç§„É≥„Çπ„Çø„É≥„Çπ„ÅØ&amp;nbsp;&lt;STRONG&gt;ÊØéÊô©Ëá™ÂãïÂÅúÊ≠¢ „Åï„Çå„Åæ„Åô„ÄÇÊó•„Çí„Åæ„Åü„Åê‰ΩúÊ•≠„ÅÆÂ†¥Âêà„ÅØÁøåÊó•„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÇíÂÜçËµ∑Âãï„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-878069825"&gt;&lt;SPAN&gt;3 | „Éï„Ç©„É´„ÉÄÊßãÊàê„Å®„É©„Ç§„Éñ„É©„É™Ê∫ñÂÇô&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;CF „Å∏„Éá„Éó„É≠„Ç§„Åô„Çã„Åì„Å®„ÇíË¶ãÊçÆ„Åà„ÄÅ„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÁî®„ÅÆ„Éï„Ç©„É´„ÉÄ„ÇíÊñ∞„Åó„ÅèÁî®ÊÑè„Åó„Åæ„Åô„ÄÇ‰ª•ÈôçË™¨Êòé„Åô„Çã„Ç≥„Éº„Éâ„ÇÑË®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅØ„ÄÅÂÖ®„Å¶„Åì„ÅÆ„Éï„Ç©„É´„ÉÄÂÜÖ„ÅßÁÆ°ÁêÜ„Åó„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# „Éï„Ç©„É´„ÉÄÊßãÊàê
my-ai-agent-api/
‚îú‚îÄ‚îÄ main.py
‚îú‚îÄ‚îÄ requirements.txt
‚îú‚îÄ‚îÄ .env
‚îî‚îÄ‚îÄ Ôºà„Éá„Éó„É≠„Ç§„Å´ÂøÖË¶Å„Å™„Éï„Ç°„Ç§„É´„ÇíËøΩÂä†‰∫àÂÆöÔºâ&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;CF „Å´„Éá„Éó„É≠„Ç§„Åô„Çã„Åì„Å®„ÇíË¶ãÊçÆ„Åà„Å¶ requirements.txt „Åß„ÄÅÂøÖË¶Å„Å™ Python „Éë„ÉÉ„Ç±„Éº„Ç∏„ÇíÊòéÁ§∫„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇCF „Åß„ÅØ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥Ëµ∑ÂãïÊôÇ„ÄÅrequirements.txt „Å´„Åó„Åü„Åå„Å£„Å¶„É©„Ç§„Éñ„É©„É™„ÇíËá™Âãï„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÄÇ‰ªäÂõûÊñ∞„Åó„ÅèË®òËºâ„Åó„Åü fastapi „ÇÑ uvicorn„ÄÅgunicorn „ÅØ Web„Çµ„Éº„Éê „Å®„Åó„Å¶ÂøÖÈ†à„ÅÆ„É©„Ç§„Éñ„É©„É™„Åß„Åô„ÄÇ&lt;BR /&gt;‰ª•‰∏ã„Å´„Çà„ÅÜ„Å´„É©„Ç§„Éñ„É©„É™„ÇíÂàóÊåô„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# generative-ai-hub-sdk „ÅÆÂÖ¨Âºè„Éâ„Ç≠„É•„É°„É≥„Éà„ÅßÊåáÂÆö„Åï„Çå„Å¶„ÅÑ„Çã‰æùÂ≠òÈñ¢‰øÇÁæ§
generative-ai-hub-sdk
ai_core_sdk&amp;gt;=2.5.7
pydantic==2.9.2
openai&amp;gt;=1.56.0
langchain~=0.3.0
langgraph==0.3.30
langchain-community~=0.3.0
langchain-openai&amp;gt;=0.2.14
langchain-google-vertexai==2.0.1
langchain-google-community==2.0.7
langchain-aws==0.2.9
google-cloud-aiplatform==1.61.0
boto3==1.35.76

# SAP HANA Cloud VectorSearch Áî®
hdbcli==2.24.24
langchain-hana==0.1.0

# .env „Éï„Ç°„Ç§„É´„ÇíË™≠„ÅøËæº„ÇÄ„Åü„ÇÅ
python-dotenv==1.1.0

# FastAPIÔºèASGI „Çµ„Éº„Éê„Éº
fastapi==0.109.0
gunicorn
uvicorn[standard]==0.27.0&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;„É≠„Éº„Ç´„É´„ÅßÂãï‰ΩúÁ¢∫Ë™ç„Åô„Çã„Åü„ÇÅ„Å´„ÄÅÊñ∞„Åü„Å´‰ªÆÊÉ≥Áí∞Â¢É„ÇíÁî®ÊÑè„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ Part 5 „Åæ„Åß„Å´‰ΩøÁî®„Åó„Åü‰ªÆÊÉ≥Áí∞Â¢É„ÇíÊµÅÁî®„Åó„Å¶„ÇÇÊßã„ÅÑ„Åæ„Åõ„Çì„Åå„ÄÅ„Åì„Åì„Åß„ÅØÂøµ„ÅÆ„Åü„ÇÅÊñ∞Ë¶è„Åß‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cd my-ai-agent-api
python -m venv .venv
source .venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;ÂêåÊßò„Å´„ÄÅÁí∞Â¢ÉÂ§âÊï∞„Éï„Ç°„Ç§„É´Ôºà.envÔºâ„ÇÇÁî®ÊÑè„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# SAP AI Core Ë™çË®ºÊÉÖÂ†±
AICORE_CLIENT_ID = "&amp;lt;YOUR_AICORE_CLIENT_ID&amp;gt;"
AICORE_CLIENT_SECRET = "&amp;lt;YOUR_AICORE_CLIENT_SECRET&amp;gt;"
AICORE_AUTH_URL = "https://&amp;lt;your-region&amp;gt;.authentication.&amp;lt;your-region&amp;gt;.hana.ondemand.com"
AICORE_BASE_URL = "https://api.ai.prod.&amp;lt;your-region&amp;gt;.aws.ml.hana.ondemand.com"
AICORE_RESOURCE_GROUP = "&amp;lt;YOUR_RESOURCE_GROUP&amp;gt;"
DEVELOPMENT_ID = "&amp;lt;YOUR_OPENAI_DEPLOYMENT_ID&amp;gt;"

# HANA Cloud Êé•Á∂öÊÉÖÂ†±
HANA_DB_ADDRESS = "&amp;lt;YOUR_HANA_DB_HOST&amp;gt;.hana.trial-&amp;lt;region&amp;gt;.hanacloud.ondemand.com"
HANA_DB_PORT = &amp;lt;YOUR_HANA_DB_PORT&amp;gt;          # ‰æã: 443
HANA_DB_USER = "&amp;lt;YOUR_HANA_DB_USER&amp;gt;"
HANA_DB_PASSWORD = "&amp;lt;YOUR_HANA_DB_PASSWORD&amp;gt;"

# Google „Ç´„Çπ„Çø„É†Ê§úÁ¥¢ API
GOOGLE_CSE_ID = "&amp;lt;YOUR_GOOGLE_CSE_ID&amp;gt;"
GOOGLE_API_KEY = "&amp;lt;YOUR_GOOGLE_API_KEY&amp;gt;"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;„Åì„Çå„Åß„ÄÅÂøÖË¶Å„Å™„Éë„ÉÉ„Ç±„Éº„Ç∏„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´„Å®Áí∞Â¢ÉÂ§âÊï∞„ÅÆÁî®ÊÑè„ÅåÂÆå‰∫Ü„ÄÅAPI ÈñãÁô∫„ÅÆÊ∫ñÂÇô„ÅåÊï¥„ÅÑ„Åæ„Åó„ÅüÔºÅ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-681556320"&gt;&lt;SPAN&gt;4 | main.py „ÅÆ‰ΩúÊàê&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;„Åì„Åì„Åã„Çâ„ÅØ main.py „Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê„Åó„ÄÅFastAPI „Çí‰Ωø„Å£„Å¶ AI Agent „ÇíÂëº„Å≥Âá∫„Åô„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÇíÂÆüË£Ö„Åó„Å¶„ÅÑ„Åç„Åæ„Åô„ÄÇPart5 „Åß‰Ωø„Å£„Å¶„ÅÑ„Åü„Éé„Éº„Éà„Éñ„ÉÉ„ÇØ„ÅÆ„Çª„É´„Çí„Åª„Å®„Çì„Å©„Åù„ÅÆ„Åæ„ÅæÁµÑ„ÅøÂêà„Çè„Åõ„Å¶‰ΩúÊàê„Åó„Åæ„Åô„Åå„ÄÅ&lt;STRONG&gt;AI Agent „Åå„Å©„ÅÆ„Çà„ÅÜ„Å´ËÄÉ„Åà„ÄÅ‰Ωï„ÅÆ„Ç¢„ÇØ„Ç∑„Éß„É≥„ÇíÂèñ„Å£„Åü„ÅÆ„Åã&lt;/STRONG&gt;„ÉÅ„É£„ÉÉ„ÉàÁîªÈù¢„ÅßÁ¢∫Ë™ç„Åß„Åç„Çã„Çà„ÅÜ„Å´„ÄÅ„ÅÑ„Åè„Å§„Åã‰øÆÊ≠£„ÇíÂä†„Åà„Åæ„Åô„ÄÇ&lt;BR /&gt;ÂÖ∑‰ΩìÁöÑ„Å´„ÅØ„ÄÅ‰ª•‰∏ã„ÅÆÊµÅ„Çå„ÅßÊßãÈÄ†Âåñ„Åï„Çå„Åü„É¨„Çπ„Éù„É≥„Çπ„ÇíËøî„Åô„Çà„ÅÜ„Å´„Åó„Åæ„Åô:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Áí∞Â¢ÉÂ§âÊï∞„ÅÆË™≠„ÅøËæº„ÅøÔºà.envÔºâ&lt;/LI&gt;&lt;LI&gt;FastAPI „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆÂàùÊúüÂåñ&lt;/LI&gt;&lt;LI&gt;LangChain / Google Ê§úÁ¥¢„ÉªHANA Cloud Retriever Tool „ÅÆ‰ΩúÊàê&lt;/LI&gt;&lt;LI&gt;AI Agent „ÅÆÂàùÊúüÂåñÔºàAgentType „Çí &lt;STRONG&gt;CHAT_ZERO_SHOT_REACT_DESCRIPTION&lt;/STRONG&gt;Ôºâ&lt;/LI&gt;&lt;LI&gt;„É≠„Ç∞„Åã„Çâ Thought / Action / Observation „ÇíÂèñ„ÇäÂá∫„ÅôÈñ¢Êï∞„ÅÆÂÆöÁæ©&lt;/LI&gt;&lt;LI&gt;AI Agent „Åã„Çâ„ÅÆ„É¨„Çπ„Éù„É≥„Çπ„ÇíÂ§âÊèõ&lt;/LI&gt;&lt;LI&gt;/agent/chat „Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÅÆÂÆüË£Ö&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;import os
import re
import uvicorn
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from dotenv import load_dotenv

# LangChainÈñ¢ÈÄ£„ÅÆ„Ç§„É≥„Éù„Éº„Éà
from gen_ai_hub.proxy.langchain.openai import ChatOpenAI
from langchain.tools import Tool
from langchain.tools.retriever import create_retriever_tool
from langchain_google_community import GoogleSearchAPIWrapper
from langchain.agents import initialize_agent, AgentType

# HANAÈñ¢ÈÄ£„ÅÆ„Ç§„É≥„Éù„Éº„Éà
from langchain_hana import HanaInternalEmbeddings
from langchain_hana import HanaDB
from hdbcli import dbapi

# Áí∞Â¢ÉÂ§âÊï∞„ÇíË™≠„ÅøËæº„ÇÄ
load_dotenv(verbose=True)

# FastAPI„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÇíÂàùÊúüÂåñ
app = FastAPI()

# CORSË®≠ÂÆö
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# „É™„ÇØ„Ç®„Çπ„Éà„É¢„Éá„É´
class QueryRequest(BaseModel):
    query: str

# ChatOpenAI„ÇíÂàùÊúüÂåñ
chat_llm = ChatOpenAI(deployment_id=os.getenv("DEVELOPMENT_ID"))

# GoogleÊ§úÁ¥¢„ÉÑ„Éº„É´„ÇíË®≠ÂÆö
search = GoogleSearchAPIWrapper(k=5)
google_tool = Tool.from_function(
    name="google_search",
    description="Search Google and return the first results",
    func=search.run
)

# embeddings„ÇíÂàùÊúüÂåñ
embeddings = HanaInternalEmbeddings(
    internal_embedding_model_id="SAP_NEB.20240715"
)

# HANA Cloud„Å®Êé•Á∂ö
connection = dbapi.connect(
    address=os.getenv("HANA_DB_ADDRESS"),
    port=os.getenv("HANA_DB_PORT"),
    user=os.getenv("HANA_DB_USER"),
    password=os.getenv("HANA_DB_PASSWORD"),
    sslValidateCertificate=False,
    autocommit=True,
)

# „Éá„Éº„Çø„Éô„Éº„Çπ„ÅÆÁ´ã„Å°‰∏ä„Åí
db = HanaDB(
    embedding=embeddings,
    connection=connection,
    table_name="TEST_TABLE"
)

# retriever„ÉÑ„Éº„É´„ÇíË®≠ÂÆö
retriever_tool = create_retriever_tool(
    retriever=db.as_retriever(),
    name="hana_vectorengine",
    description=(
        "Use this tool to search internal SAP documents stored "
        "in HANA Cloud Vector Engine when the user asks company-specific questions."
    ),
)

# „Ç®„Éº„Ç∏„Çß„É≥„Éà„ÇíÂàùÊúüÂåñ
agent = initialize_agent(
    tools=[google_tool, retriever_tool],
    llm=chat_llm,
    agent=AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION,
    verbose=True,
    return_intermediate_steps=True,
)

def extract_thought_from_log(log):
    if not log or not isinstance(log, str):
        return ""

    # Ê≠£Ë¶èË°®Áèæ„Çí‰ΩøÁî®„Åó„Å¶ "Thought" ÈÉ®ÂàÜ„ÇíÊäΩÂá∫
    patterns = [
        r'Thought:\s*(.*?)(?:\nAction:|$)',
        r'^(.*?)(?:\nAction:|$)',
        # Êó•Êú¨Ë™ûÂØæÂøú
        r'ÊÄùËÄÉ:\s*(.*?)(?:\n„Ç¢„ÇØ„Ç∑„Éß„É≥:|$)',
        r'^(.*?)(?:\n„Ç¢„ÇØ„Ç∑„Éß„É≥:|$)'
        ]

    # Ë§áÊï∞„ÅÆ„Éë„Çø„Éº„É≥„ÇíË©¶Ë°å
    for pattern in patterns:
        match = re.search(pattern, log, re.DOTALL | re.IGNORECASE)
        if match:
            thought = match.group(1).strip()
            # Á©∫ÊñáÂ≠óÂàó„ÇÑÊîπË°å„ÅÆ„Åø„ÅÆÂ†¥Âêà„ÅØ„Çπ„Ç≠„ÉÉ„Éó
            if thought and not thought.isspace():
                return thought

    # „Éû„ÉÉ„ÉÅ„Åó„Å™„ÅÑÂ†¥Âêà„ÅØÂÖÉ„ÅÆ„É≠„Ç∞„ÇíËøî„Åô
    return log.strip()

def transform_response(raw_response):
    if not isinstance(raw_response, dict):
        return {"output": "", "intermediate_steps": []}

    output = raw_response.get('output', '')
    intermediate_steps = raw_response.get('intermediate_steps', [])

    if not isinstance(intermediate_steps, list):
        intermediate_steps = []

    structured_steps = []

    for idx, step in enumerate(intermediate_steps, 1):
        try:
            # „Çπ„ÉÜ„ÉÉ„Éó„ÅåËæûÊõ∏ÂΩ¢Âºè„ÅÆÂ†¥ÂêàÔºàÊó¢„Å´ÊßãÈÄ†Âåñ„Åï„Çå„Å¶„ÅÑ„ÇãÂ†¥ÂêàÔºâ
            if isinstance(step, dict):
                structured_steps.append(step)
                continue

            # „Çπ„ÉÜ„ÉÉ„Éó„Åå„Çø„Éó„É´ÂΩ¢Âºè„ÅÆÂ†¥Âêà
            if isinstance(step, tuple) and len(step) == 2:
                action, observation = step

                # „É≠„Ç∞„Åã„ÇâThought„ÇíÊäΩÂá∫
                thought = ""
                if hasattr(action, 'log') and action.log:
                    thought = extract_thought_from_log(action.log)

                # ÊßãÈÄ†Âåñ„Åï„Çå„Åü„Çπ„ÉÜ„ÉÉ„Éó„Çí‰ΩúÊàê
                structured_step = {
                    "step_no": idx,
                    "thought": thought,
                    "action": getattr(action, 'tool', 'unknown'),
                    "action_input": getattr(action, 'tool_input', {}),
                    "observation": observation if observation is not None else ""
                }
                structured_steps.append(structured_step)

        except Exception:
            # „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„ÅüÂ†¥Âêà„ÅØ„Çπ„Ç≠„ÉÉ„Éó
            continue

    return {
        "output": output,
        "intermediate_steps": structured_steps
    }

@app.post("/agent/chat")
async def chat(request: QueryRequest):
    """„Ç®„Éº„Ç∏„Çß„É≥„Éà„Å´„ÇØ„Ç®„É™„ÇíÂÆüË°å„Åó„ÄÅÊßãÈÄ†Âåñ„Åï„Çå„Åü„É¨„Çπ„Éù„É≥„Çπ„ÇíËøî„Åô"""
    # „Ç®„Éº„Ç∏„Çß„É≥„Éà„ÇíÂÆüË°å
    raw_response = agent.invoke({"input": request.query})

    # „É¨„Çπ„Éù„É≥„Çπ„ÇíÂ§âÊèõ
    structured_response = transform_response(raw_response)

    return structured_response

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;„Åì„ÅÆ„Çª„É´„Åß‰Ωï„Çí„Åó„Å¶„ÅÑ„Çã„Åã&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION&lt;/STRONG&gt;: „Åì„ÅÆË®≠ÂÆö„ÇíÊåáÂÆö„Åô„Çã„Åì„Å®„Åß„ÄÅAI Agent „Åå„ÄåThought ‚Üí Action ‚Üí Observation„Äç„Å®„ÅÑ„ÅÜÂΩ¢„ÅßÂÜÖÈÉ®„Çπ„ÉÜ„ÉÉ„Éó„ÇíÂá∫Âäõ„Åó„Åæ„Åô„ÄÇÔºà return_intermediate_steps=True „ÇíÊåáÂÆö„Åó„Å™„ÅÑ„Å® response „Å´Âê´„Åæ„Çå„Å™„ÅÑ„ÅÆ„ÅßÊ≥®ÊÑèÔºâ&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;extract_thought_from_log()&lt;/STRONG&gt;: AI Agent „ÅÆÂá∫Âäõ„É≠„Ç∞ÔºàËã±Ë™û„ÉªÊó•Êú¨Ë™ûÔºâ„Åã„Çâ„ÄåThought„Äç„ÅÆÈÉ®ÂàÜ„ÇíÊäΩÂá∫„Åô„Çã„ÄÅËá™‰Ωú„ÅÆÊ≠£Ë¶èË°®ÁèæÈñ¢Êï∞„Åß„Åô„ÄÇ&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;transform_response()&lt;/STRONG&gt;: (action, observation)ÂΩ¢Âºè„ÅÆ„Çø„Éó„É´„Çí { step_no, thought, action, action_input, observation } „Å®„ÅÑ„ÅÜËæûÊõ∏ÂΩ¢Âºè„Å´Â§âÊèõ„Åó„Åæ„Åô„ÄÇ&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION „ÅÆÊ≥®ÊÑè&lt;BR /&gt;&lt;/STRONG&gt;„Åì„ÅÆ„Ç∑„É™„Éº„Ç∫„Åß„ÅØ„ÄÅ„ÉÅ„É£„ÉÉ„ÉàUI ‰∏ä„Å´ AI Agent „ÅÆÊÄùËÄÉ„Éó„É≠„Çª„Çπ„ÇíË°®Á§∫„Åô„Çã„Åü„ÇÅ„ÄÅAgentType.&lt;STRONG&gt;CHAT_ZERO_SHOT_REACT_DESCRIPTION&lt;/STRONG&gt; „ÇíÊé°Áî®„Åó„Åæ„Åô„ÄÇ„Åü„Å†„Åó„ÄÅ„Åì„ÅÆ AgentType „ÅØ "„ÉÑ„Éº„É´„Çí‰Ωø„Çè„Å™„ÅÑË≥™Âïè" „Å´ÂØæ„Åó„Å¶„Ç®„É©„Éº„ÇíËøî„Åô„Åì„Å®„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÁèæÂú®„ÄÅ„Çà„ÇäËâØ„ÅÑÂØæÂá¶ÊñπÊ≥ï„ÇíÊ§úË®é‰∏≠„Åß„Åô„ÅÆ„Åß„ÄÅÊö´ÂÆöÁöÑ„Å´„Åì„ÅÆÁÇπ„Å´„ÅîÁïôÊÑè„Åè„Å†„Åï„ÅÑ„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-485042815"&gt;&lt;SPAN&gt;5 | Âãï‰Ωú„ÇíÁ¢∫Ë™ç„Åô„Çã&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;„Åù„Çå„Åß„ÅØ„ÄÅÁî®ÊÑè„Åó„Åü Python „Éï„Ç°„Ç§„É´„ÇíÂÆüË°å„Åó„ÄÅ‰ΩúÊàê„Åó„Åü API „ÅåÊÑèÂõ≥ÈÄö„Çä„Å´Âãï‰Ωú„Åô„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇÊúÄÂàù„Å´„É≠„Éº„Ç´„É´Áí∞Â¢É„Åß FastAPI „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÇíËµ∑Âãï„Åó„ÄÅAPI „Éâ„Ç≠„É•„É°„É≥„ÉàÁîªÈù¢„ÇíË¶ã„Å™„Åå„ÇâÂÆüÈöõ„Å´„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Å∏„É™„ÇØ„Ç®„Çπ„Éà„ÇíÈ£õ„Å∞„Åó„Å¶„Åø„Åæ„Åô„ÄÇ„Åù„ÅÆÂæå„ÄÅÂ∏∞„Å£„Å¶„Åç„Åü JSON „Åå„Äåoutput„Äç„Å®„Äåintermediate_steps„Äç„ÅÆÊßãÈÄ†„ÇíÊ∫Ä„Åü„Åó„Å¶„ÅÑ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;‰ªÆÊÉ≥Áí∞Â¢É„Å´ÂÖ•„Å£„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Å§„Å§„ÄÅ„Çø„Éº„Éü„Éä„É´„Åß‰ª•‰∏ã„ÅÆ„Ç≥„Éû„É≥„Éâ„ÇíÂÆüË°å„Åó„ÄÅFastAPI „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Çí„É≠„Éº„Ç´„É´„Çµ„Éº„Éê„Å®„Åó„Å¶Á´ã„Å°‰∏ä„Åí„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;gunicorn -w 1 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:${PORT:-8000}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Ëµ∑Âãï„ÅåÂÆå‰∫Ü„Åô„Çã„Å®„ÄÅ„ÄåApplication startup complete„Äç„Å®„ÅÑ„ÅÜ„É≠„Ç∞„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇBusiness Application StudioÔºàBASÔºâ„ÅßÂÆüË°å„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å™ÁîªÈù¢„ÅåÁ¢∫Ë™ç„Åß„Åç„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-06 at 15.53.45.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270650i9D8E5C504CFBCA69/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-06 at 15.53.45.png" alt="Screenshot 2025-06-06 at 15.53.45.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;„Éù„ÉÉ„Éó„Ç¢„ÉÉ„Éó„ÅßÂá∫„Å¶„Åç„ÅüÂè≥‰∏ã„ÅÆ„ÄåOpen in a New Tab„Äç„ÇíÊäº„Åó„ÄÅURL„Å´/docs„ÇíËøΩÂä†„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ FastAPI „ÅåËá™ÂãïÁîüÊàê„Åó„Åü Swagger UI „ÅåË°®Á§∫„Åï„Çå„ÄÅ/agent/chat „ÅÆ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Å´ÂØæ„Åó„Å¶„Å©„ÅÆ„Çà„ÅÜ„Å™„É™„ÇØ„Ç®„Çπ„Éà„ÇíÊäï„Åí„Çâ„Çå„Çã„Åã„ÄÅ„Ç§„É≥„Çø„É©„ÇØ„ÉÜ„Ç£„Éñ„Å´Á¢∫Ë™ç„Åß„Åç„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-06 at 15.58.56.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270652i7EDD5623F5C3EE39/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-06 at 15.58.56.png" alt="Screenshot 2025-06-06 at 15.58.56.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;„ÄéPOST - /agent/chat„Äè„ÅÆ„Ç¢„Ç≥„Éº„Éá„Ç£„Ç™„É≥„É°„Éã„É•„Éº„ÇíÈñã„Åç„ÄÅ„ÄåTry it out„Äç„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Åæ„Åô„ÄÇRequest „Éú„Éá„Ç£„Å´ JSON ÂΩ¢Âºè„Åß { "query": "‰ªªÊÑè„ÅÆË≥™ÂïèÊñá" } „ÇíÂÖ•Âäõ„Åó„ÄÅÈÄÅ‰ø°„Éú„Çø„É≥„ÇíÊäº„Åô„Å® API „ÅåÂç≥Â∫ß„Å´ÂøúÁ≠î„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-06 at 16.02.34.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270657i8E9FCF60BE5F2A6A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-06 at 16.02.34.png" alt="Screenshot 2025-06-06 at 16.02.34.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;ÁîªÈù¢„ÅÆÊúÄ‰∏ãÈÉ®„ÅÆ„Çà„ÅÜ„Å´ HTTP„Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ"200" „ÅåËøî„Çä„ÄÅResponse Body „Åå&lt;SPAN&gt;„Äåoutput„Äç„Å®„Äåintermediate_steps„Äç„ÅÆÊßãÈÄ†„ÇíÊ∫Ä„Åü„Åó„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åß„Åç„Åü„ÇâÊàêÂäü„Åß„ÅôÔºÅ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-267110793" id="toc-hId-288529310"&gt;6ÔΩú„ÉÅ„É£„É¨„É≥„Ç∏ ‚Äì „ÉÜ„Ç≠„Çπ„Éà„Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÊ©üËÉΩ„ÇíËøΩÂä†„Åó„Çà„ÅÜ&lt;/H3&gt;&lt;P&gt;„É¶„Éº„Ç∂„ÅåÊñ∞„Åó„ÅèÁî®ÊÑè„Åó„Åü„ÉÜ„Ç≠„Çπ„Éà„Éï„Ç°„Ç§„É´„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„ÄÅHANA Cloud VectorEngine „Å´Ê†ºÁ¥ç„Åï„Çå„Çã„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÇíËøΩÂä†„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ„Åì„ÅÆÊ©üËÉΩ„ÇíÁî®ÊÑè„Åó„Å¶„Åä„Åè„Åì„Å®„Åß„ÄÅ„É¶„Éº„Ç∂„ÅØ„ÉÅ„É£„ÉÉ„ÉàÁîªÈù¢„Åã„Çâ„Éâ„Ç≠„É•„É°„É≥„Éà„Çí AI Agent „Å´Ê∏°„Åô„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;‰ª•‰∏ã„ÅÆ„Ç≥„Éº„Éâ„Çí„ÄÅmain.py „ÅÆ„Ç§„É≥„Éù„Éº„ÉàÈÉ®„ÇÑ„É¢„Éá„É´ÂÆöÁæ©„ÄÅ„Ç®„É≥„Éâ„Éù„Ç§„É≥„ÉàÂÆöÁæ©„ÅÆÈÅ©Âàá„Å™‰ΩçÁΩÆ„Å´„Åæ„Å®„ÇÅ„Å¶ÊåøÂÖ•„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇÂÖ∑‰ΩìÁöÑ„Å™Ë°åÁï™Âè∑„ÇÑ„Çª„ÇØ„Ç∑„Éß„É≥„ÅØ„Åä‰ªª„Åõ„Åó„Åæ„Åô„Åå„ÄÅ„Ç§„É≥„Éù„Éº„Éà„ÇÑ„É¢„Éá„É´„ÅÆ„Åù„Çå„Åû„Çå„Å´ÂØæÂøú„Åô„Çã„Çà„ÅÜ„Å´ÊåøÂÖ•„Åô„Çã„Åã„ÄÅ„ÅÇ„Çã„ÅÑ„ÅØ„Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂ∞ÇÁî®„ÅÆ„Éñ„É≠„ÉÉ„ÇØ„Å®„Åó„Å¶„Åæ„Å®„ÇÅ„Çã„Å®ËâØ„ÅÑ„Åã„ÇÇ„Åó„Çå„Åæ„Åõ„Çì„Å≠„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# „Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÁî®„ÅÆ„Ç§„É≥„Éù„Éº„Éà
import shutil
import tempfile
from fastapi import File, UploadFile, HTTPException
from langchain_community.document_loaders import TextLoader
from langchain.text_splitter import CharacterTextSplitter

# „É¨„Çπ„Éù„É≥„Çπ„É¢„Éá„É´
class UploadResponse(BaseModel):
    message: str
    filename: str
    chunks_created: int

@app.post("/agent/upload")
async def upload_file(file: UploadFile = File(...)):
    """„ÉÜ„Ç≠„Çπ„Éà„Éï„Ç°„Ç§„É´„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Å¶HANA„Å´Âüã„ÇÅËæº„Åø„Éá„Éº„Çø„Å®„Åó„Å¶Ê†ºÁ¥ç"""
    
    # „Éï„Ç°„Ç§„É´ÂΩ¢Âºè„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ
    if not file.filename.endswith('.txt'):
        raise HTTPException(
            status_code=400,
            detail="txtÂΩ¢Âºè„ÅÆ„Éï„Ç°„Ç§„É´„ÅÆ„Åø„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂèØËÉΩ„Åß„Åô„ÄÇ"
        )
    
    try:
        # ‰∏ÄÊôÇ„Éï„Ç°„Ç§„É´„Å®„Åó„Å¶‰øùÂ≠ò
        with tempfile.NamedTemporaryFile(delete=False, suffix='.txt') as tmp_file:
            shutil.copyfileobj(file.file, tmp_file)
            tmp_file_path = tmp_file.name
        
        # „ÉÜ„Ç≠„Çπ„Éà„Éï„Ç°„Ç§„É´„ÇíË™≠„ÅøËæº„Åø
        text_documents = TextLoader(
            tmp_file_path
        ).load()
        
        # „ÉÜ„Ç≠„Çπ„Éà„ÇíÈÅ©Âàá„Å™„ÉÅ„É£„É≥„ÇØ„Å´ÂàÜÂâ≤
        text_splitter = CharacterTextSplitter(
            chunk_size = 50,
            chunk_overlap = 0,
        )
        
        text_chunks = text_splitter.split_documents(text_documents)
        
        # HANA„Éô„ÇØ„Çø„Éº„Éá„Éº„Çø„Éô„Éº„Çπ„Å´Ê†ºÁ¥ç
        db.add_documents(text_chunks)
        
        # ‰∏ÄÊôÇ„Éï„Ç°„Ç§„É´„ÇíÂâäÈô§
        os.unlink(tmp_file_path)
        
        return UploadResponse(
            message="„Éï„Ç°„Ç§„É´„ÅåÊ≠£Â∏∏„Å´„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åï„Çå„ÄÅÂüã„ÇÅËæº„ÅøÂá¶ÁêÜ„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü„ÄÇ",
            filename=file.filename,
            chunks_created=len(text_chunks)
        )
        
    except Exception as e:        
        raise HTTPException(
            status_code=500,
            detail=f"„Éï„Ç°„Ç§„É´Âá¶ÁêÜ‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: {str(e)}"
        )&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;„Éù„Ç§„É≥„Éà„ÅØ„ÄÅFastAPI „ÅßÂèó„ÅëÂèñ„Å£„Åü UploadFile „Çí„Åù„ÅÆ„Åæ„ÅæÊâ±„ÅÜ„ÅÆ„Åß„ÅØ„Å™„Åè„ÄÅÂøÖ„Åö tempfile.NamedTemporaryFile „Å´„Ç≥„Éî„Éº„Åó„Å¶„Éë„Çπ„ÇíÂèñÂæó„Åó„ÄÅ„Åù„ÅÆ„Éë„Çπ„Çí TextLoader „Å´Ê∏°„ÅôÁÇπ„Åß„Åô„ÄÇ„Åì„ÅÜ„Åô„Çã„Åì„Å®„Åß„ÄÅ„Éï„Ç°„Ç§„É´„ÅÆ‰∏≠Ë∫´„ÇíÂÆâÂÖ®„Å´„É≠„Éº„Ç´„É´„Éá„Ç£„Çπ„ÇØ„Å´‰øùÂ≠ò„Åó„Å§„Å§„ÄÅ„Åù„ÅÆÂæå„ÉÅ„É£„É≥„ÇØÂàÜÂâ≤„Åó„Å¶HANA Cloud „Å´ÈÄÅ„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;„Ç≥„Éº„Éâ„ÇíËøΩÂä†„Åó„Åü„Çâ„ÄÅÂÖà„Åª„Å©„Å®ÂêåÊßò„ÅÆÊâãÈ†Ü„ÅßÂãï‰ΩúÁ¢∫Ë™ç„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-06 at 16.31.55.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270676i9D61EE1A41549648/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-06 at 16.31.55.png" alt="Screenshot 2025-06-06 at 16.31.55.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂæå„ÄÅHANA Cloud Database Explorer „ÇíÈñã„Åç„ÄÅ„ÉÜ„Éº„Éñ„É´ "TEST_TABLE" „ÇíÁ¢∫Ë™ç„Åó„Åæ„Åô„ÄÇ„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Åü„ÉÜ„Ç≠„Çπ„Éà„Åå„ÉÅ„É£„É≥„ÇØ„Å´ÂàÜÂâ≤„Åï„Çå„Å¶Êñ∞Ë¶è„É¨„Ç≥„Éº„Éâ„Å®„Åó„Å¶ËøΩÂä†„Åï„Çå„Å¶„Åä„Çä„ÄÅÂêÑ„É¨„Ç≥„Éº„Éâ„Å´ÂØæ„Åó„Å¶„Éô„ÇØ„Éà„É´„ÅåÁîüÊàê„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-06 at 16.34.49.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270678iE350C100A735463F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-06 at 16.34.49.png" alt="Screenshot 2025-06-06 at 16.34.49.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;„Åì„Çå„Çâ„ÅåÊ≠£„Åó„ÅèÂèçÊò†„Åï„Çå„Å¶„ÅÑ„Çå„Å∞„ÄÅ„Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÊ©üËÉΩ„ÅÆÂÆüË£Ö„ÅØÂÆå‰∫Ü„Åß„ÅôÔºÅ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-70597288" id="toc-hId-92015805"&gt;7ÔΩúÊ¨°Âõû‰∫àÂëä&lt;/H3&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-7-sapui5-%E3%81%A7%E3%83%81%E3%83%A3%E3%83%83%E3%83%88ui-%E3%82%92%E6%A7%8B%E7%AF%89/ba-p/14124854" target="_self"&gt;Part 7 SAPUI5 „Åß„ÉÅ„É£„ÉÉ„ÉàUI „ÇíÊßãÁØâ&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;Part 7 „Åß„ÅØ„ÄÅ„Åì„Çå„Åæ„Åß„Å´‰ΩúÊàê„Åó„Åü AI Agent API „ÇíÂëº„Å≥Âá∫„Åô„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„Å®„Åó„Å¶„ÄÅ&lt;STRONG&gt;SAPUI5&amp;nbsp;&lt;/STRONG&gt;„Éô„Éº„Çπ„ÅÆ„ÉÅ„É£„ÉÉ„Éà UI „ÇíÁµÑ„ÅøÁ´ã„Å¶„Åæ„Åô„ÄÇ„ÅäÊ•Ω„Åó„Åø„Å´ÔºÅ&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-327771873" id="toc-hId--766535083"&gt;&lt;SPAN&gt;&lt;STRONG&gt;ÂÖçË≤¨‰∫ãÈ†Ö&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;SPAN&gt;Êú¨„Éñ„É≠„Ç∞„Å´Ë®òËºâ„Åï„Çå„ÅüË¶ãËß£„Åä„Çà„Å≥ÊÑèË¶ã„ÅØ„Åô„Åπ„Å¶ÁßÅÂÄã‰∫∫„ÅÆ„ÇÇ„ÅÆ„Åß„ÅÇ„Çä„ÄÅÁßÅ„ÅÆÂÄã‰∫∫ÁöÑ„Å™Á´ãÂ†¥„ÅßÁô∫‰ø°„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇSAP „ÅØÊú¨„Éñ„É≠„Ç∞„ÅÆÂÜÖÂÆπ„Å´„Å§„ÅÑ„Å¶‰∏ÄÂàá„ÅÆË≤¨‰ªª„ÇíË≤†„ÅÑ„Åæ„Åõ„Çì„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-6-ai-agent-%E3%82%92-rest-api-%E5%8C%96/ba-p/14119805"/>
    <published>2025-06-06T09:41:19.738000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-6-converting-the-ai-agent-into-a/ba-p/14121055</id>
    <title>üöÄ SAP AI Core Agent QuickLaunch Series üöÄ - Part 6: Converting the AI Agent into a REST API</title>
    <updated>2025-06-10T19:57:54.460000+02:00</updated>
    <author>
      <name>Ryota_Ito</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1390198</uri>
    </author>
    <content>&lt;P class=""&gt;Generative&amp;nbsp;AI has leapt from research papers to daily business reality‚Äî and SAP is surfing that wave at full speed.&amp;nbsp;In&amp;nbsp;this hands‚Äëon series, I‚Äôll show you how to spin up a custom AI agent on SAP&amp;nbsp;AI&amp;nbsp;Core in minutes, then grow it into a production‚Äëready asset‚Äîwithout drowning in theory.&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Notice&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Êó•Êú¨Ë™ûÁâà„ÅØ&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-6-ai-agent-%E3%82%92-rest-api-%E5%8C%96/ba-p/14119805" target="_self"&gt;„Åì„Å°„Çâ&lt;/A&gt;„Åß„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1967371303" id="toc-hId-1990397729"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":open_book:"&gt;üìñ&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;What You‚Äôll Learn in This Series&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;How to Run a Custom AI Agent on SAP AI Core in Seconds&lt;/LI&gt;&lt;LI&gt;Implementation Using LangChain, Google Search Tool, and RAG&lt;/LI&gt;&lt;LI&gt;Steps to Convert the AI Agent into a REST API, Integrate It into an SAPUI5/Fiori UI, and Deploy to Cloud Foundry&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Time Commitment&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Each part is designed to be completed in&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;10‚Äì15&amp;nbsp;minutes&lt;/STRONG&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1770857798" id="toc-hId-1793884224"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;üó∫&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Ô∏è Series Roadmap&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part0-prologue/ba-p/14104823" target="_self"&gt;Part 0 Prologue&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-1-env-setup-sap-aicore-amp-ai/ba-p/14104825" target="_self"&gt;Part 1 Env Setup: SAP AICore &amp;amp; AI Launchpad&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-2-building-a-chat-model-with/ba-p/14104832" target="_self"&gt;Part 2 Building a Chat Model with&amp;nbsp;LangChain&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-3-agent-tools-integrating-google/ba-p/14104844" target="_self"&gt;Part 3 Agent&amp;nbsp;Tools: Integrating Google&amp;nbsp;Search&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-4-rag-basics-hana-cloud/ba-p/14083287" target="_self"&gt;Part4 RAG Basics‚ë† HANA Cloud VectorEngine &amp;amp; Embedding&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-5-rag-basics-building-retriever/ba-p/14113412" target="_self"&gt;Part 5 RAG Basics ‚ë°: Building Retriever Tool&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-6-converting-the-ai-agent-into-a/ba-p/14121055" target="_self"&gt;Part 6: Converting the AI Agent into a REST API&lt;/A&gt;&amp;nbsp;[&lt;STRONG&gt;current blog&lt;/STRONG&gt;]&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-7-building-the-chat-ui-with/ba-p/14127011" target="_self"&gt;Part 7: Building the Chat UI with SAPUI5&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-8-deploying-to-cloud-foundry/ba-p/14127673" target="_self"&gt;Part 8: Deploying to Cloud Foundry&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Subsequent blogs will be published soon.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;P&gt;If you enjoyed this post, please give it a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;kudos&lt;/STRONG&gt;! Your support really motivates me. Also, if there‚Äôs anything you‚Äôd like to know more about, feel free to leave a comment!&lt;/P&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1316178855" id="toc-hId-1339205281"&gt;Converting the AI Agent into a REST API&lt;/H2&gt;&lt;H3 id="toc-hId-1248748069" id="toc-hId-1271774495"&gt;&lt;SPAN&gt;1&amp;nbsp;| Introduction&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;In this chapter, we will take the AI agent we have been developing in the notebook and expose it as a REST API, packaging it so that it can later be deployed on Cloud Foundry (CF). By turning our agent into an API, we gain the following advantages:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Reusability: Any client‚Äîwhether it‚Äôs a CLI tool, another application, or an SAP UI5 frontend‚Äîcan invoke the agent via HTTP requests.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Scalability: Running the agent as a dedicated web server allows it to handle multiple simultaneous requests.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Maintainability: On CF, we can leverage built-in cloud features such as automatic scaling, centralized logging, and authentication controls.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;In this chapter, we will use FastAPI to implement a minimal web API and expose our LangChain-based AI agent as an endpoint.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052234564" id="toc-hId-1075260990"&gt;&lt;SPAN&gt;2 | Prerequisites&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;BTP sub-account&lt;/LI&gt;&lt;LI&gt;SAP AI Core instance&lt;/LI&gt;&lt;LI&gt;SAP AI LaunchPad Subscription&lt;/LI&gt;&lt;LI&gt;Python 3.13 and pip&lt;/LI&gt;&lt;LI&gt;VSCode, BAS or any IDE&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note for the Trial Environment&lt;/STRONG&gt;&lt;BR /&gt;The HANA Cloud instance in the Trial enviroment automatically shuts down every night. If your work spans past midnight, please restart the instance the following day.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-878747485"&gt;&lt;STRONG&gt;3 | Folder Structure and Library Preparation&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;With an eye toward deploying on CF, create a new folder for this project. All of the code and configuration files described below will be managed inside this folder.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# Folder Structure
my-ai-agent-api/
‚îú‚îÄ‚îÄ main.py
‚îú‚îÄ‚îÄ requirements.txt
‚îú‚îÄ‚îÄ .env
‚îî‚îÄ‚îÄ (Additional deployment-related files to be added)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Because we plan to deploy on CF, we explicitly list the required Python packages in requirements.txt. When the application starts on CF, it will automatically install libraries according to requirements.txt. In this file, we include fastapi, uvicorn, and gunicorn‚Äîall of which are essential for running a web server. Below is an example of how to enumerate these libraries in requirements.txt.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# Dependencies Specified in the Official generative-ai-hub-sdk Documentation
generative-ai-hub-sdk
ai_core_sdk&amp;gt;=2.5.7
pydantic==2.9.2
openai&amp;gt;=1.56.0
langchain~=0.3.0
langgraph==0.3.30
langchain-community~=0.3.0
langchain-openai&amp;gt;=0.2.14
langchain-google-vertexai==2.0.1
langchain-google-community==2.0.7
langchain-aws==0.2.9
google-cloud-aiplatform==1.61.0
boto3==1.35.76

# For SAP HANA Cloud VectorSearch
hdbcli==2.24.24
langchain-hana==0.1.0

# To Load the .env File
python-dotenv==1.1.0

# FastAPI / ASGI Server
fastapi==0.109.0
gunicorn
uvicorn[standard]==0.27.0&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;To verify everything works locally, let‚Äôs create a new virtual environment (you can reuse the one from Part 5 if you prefer, but here we‚Äôll create a fresh one):&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cd my-ai-agent-api
python -m venv .venv
source .venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Next, prepare the environment-variable file (.env):&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# SAP AI Core credentials
AICORE_CLIENT_ID="&amp;lt;YOUR_AICORE_CLIENT_ID&amp;gt;"
AICORE_CLIENT_SECRET="&amp;lt;YOUR_AICORE_CLIENT_SECRET&amp;gt;"
AICORE_AUTH_URL="https://&amp;lt;your-region&amp;gt;.authentication.&amp;lt;your-region&amp;gt;.hana.ondemand.com"
AICORE_BASE_URL="https://api.ai.prod.&amp;lt;your-region&amp;gt;.aws.ml.hana.ondemand.com"
AICORE_RESOURCE_GROUP="&amp;lt;YOUR_RESOURCE_GROUP&amp;gt;"
DEVELOPMENT_ID="&amp;lt;YOUR_OPENAI_DEPLOYMENT_ID&amp;gt;"

# HANA Cloud connection information
HANA_DB_ADDRESS="&amp;lt;YOUR_HANA_DB_HOST&amp;gt;.hana.trial-&amp;lt;region&amp;gt;.hanacloud.ondemand.com"
HANA_DB_PORT=&amp;lt;YOUR_HANA_DB_PORT&amp;gt;          # e.g., 443
HANA_DB_USER="&amp;lt;YOUR_HANA_DB_USER&amp;gt;"
HANA_DB_PASSWORD="&amp;lt;YOUR_HANA_DB_PASSWORD&amp;gt;"

# Google Custom Search API
GOOGLE_CSE_ID="&amp;lt;YOUR_GOOGLE_CSE_ID&amp;gt;"
GOOGLE_API_KEY="&amp;lt;YOUR_GOOGLE_API_KEY&amp;gt;"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;With the required packages installed and the .env file in place, you‚Äôre all set to begin API development!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-682233980"&gt;4 | Create main.py&lt;/H3&gt;&lt;P&gt;From here, we will create the main.py file and implement an endpoint using FastAPI to invoke our AI agent. We‚Äôll largely reuse the notebook cells from Part 5, but we‚Äôll make some adjustments so that we can see, in the chat interface, how the AI agent arrives at its thoughts and what actions it takes. Specifically, we‚Äôll structure the response as follows:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Load environment variables (from .env)&lt;/LI&gt;&lt;LI&gt;Initialize the FastAPI application&lt;/LI&gt;&lt;LI&gt;Create the LangChain/Google Search and HANA Cloud Retriever tools&lt;/LI&gt;&lt;LI&gt;Initialize the AI agent (using AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION)&lt;/LI&gt;&lt;LI&gt;Define a function that extracts Thought/Action/Observation entries from the agent‚Äôs log&lt;/LI&gt;&lt;LI&gt;Transform the AI agent‚Äôs raw response into our structured format&lt;/LI&gt;&lt;LI&gt;Implement the /agent/chat endpoint&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;import os
import re
import uvicorn
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from dotenv import load_dotenv

# LangChain-related imports
from gen_ai_hub.proxy.langchain.openai import ChatOpenAI
from langchain.tools import Tool
from langchain.tools.retriever import create_retriever_tool
from langchain_google_community import GoogleSearchAPIWrapper
from langchain.agents import initialize_agent, AgentType

# HANA-related imports
from langchain_hana import HanaInternalEmbeddings
from langchain_hana import HanaDB
from hdbcli import dbapi

# Load environment variables
load_dotenv(verbose=True)

# Initialize the FastAPI application
app = FastAPI()

# CORS settings
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Request model
class QueryRequest(BaseModel):
    query: str

# Initialize ChatOpenAI
chat_llm = ChatOpenAI(deployment_id=os.getenv("DEVELOPMENT_ID"))

# Set up Google search tool
search = GoogleSearchAPIWrapper(k=5)
google_tool = Tool.from_function(
    name="google_search",
    description="Search Google and return the first results",
    func=search.run
)

# Initialize embeddings
embeddings = HanaInternalEmbeddings(
    internal_embedding_model_id="SAP_NEB.20240715"
)

# Connect to HANA Cloud
connection = dbapi.connect(
    address=os.getenv("HANA_DB_ADDRESS"),
    port=os.getenv("HANA_DB_PORT"),
    user=os.getenv("HANA_DB_USER"),
    password=os.getenv("HANA_DB_PASSWORD"),
    sslValidateCertificate=False,
    autocommit=True,
)

# Initialize the database
db = HanaDB(
    embedding=embeddings,
    connection=connection,
    table_name="TEST_TABLE_EN"
)

# Set up retriever tool
retriever_tool = create_retriever_tool(
    retriever=db.as_retriever(),
    name="hana_vectorengine",
    description=(
        "Use this tool to search internal SAP documents stored "
        "in HANA Cloud Vector Engine when the user asks company-specific questions."
    ),
)

# Initialize the agent
agent = initialize_agent(
    tools=[google_tool, retriever_tool],
    llm=chat_llm,
    agent=AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION,
    verbose=True,
    return_intermediate_steps=True,
)

def extract_thought_from_log(log):
    if not log or not isinstance(log, str):
        return ""

    # Use regex to extract the "Thought" portion
    patterns = [
        r'Thought:\s*(.*?)(?:\nAction:|$)',
        r'^(.*?)(?:\nAction:|$)'
    ]

    # Try multiple patterns
    for pattern in patterns:
        match = re.search(pattern, log, re.DOTALL | re.IGNORECASE)
        if match:
            thought = match.group(1).strip()
            # Skip if it's empty or only whitespace
            if thought and not thought.isspace():
                return thought

    # If no match, return the original log trimmed
    return log.strip()

def transform_response(raw_response):
    if not isinstance(raw_response, dict):
        return {"output": "", "intermediate_steps": []}

    output = raw_response.get('output', '')
    intermediate_steps = raw_response.get('intermediate_steps', [])

    if not isinstance(intermediate_steps, list):
        intermediate_steps = []

    structured_steps = []

    for idx, step in enumerate(intermediate_steps, 1):
        try:
            # If the step is already in dictionary format (already structured)
            if isinstance(step, dict):
                structured_steps.append(step)
                continue

            # If the step is a tuple
            if isinstance(step, tuple) and len(step) == 2:
                action, observation = step

                # Extract Thought from the log
                thought = ""
                if hasattr(action, 'log') and action.log:
                    thought = extract_thought_from_log(action.log)

                # Create a structured step
                structured_step = {
                    "step_no": idx,
                    "thought": thought,
                    "action": getattr(action, 'tool', 'unknown'),
                    "action_input": getattr(action, 'tool_input', {}),
                    "observation": observation if observation is not None else ""
                }
                structured_steps.append(structured_step)

        except Exception:
            # Skip if an error occurs
            continue

    return {
        "output": output,
        "intermediate_steps": structured_steps
    }

@app.post("/agent/chat")
async def chat(request: QueryRequest):
    """Run the agent on the given query and return a structured response."""
    # Run the agent
    raw_response = agent.invoke({"input": request.query})

    # Transform the response
    structured_response = transform_response(raw_response)

    return structured_response

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;What this cell does:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION&lt;/STRONG&gt;: By choosing this agent type, the AI Agent will output its internal reasoning steps in the form of ‚ÄúThought ‚Üí Action ‚Üí Observation.‚Äù (Note that you must set return_intermediate_steps=True; otherwise, these intermediate steps will not be included in the response.)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;extract_thought_from_log()&lt;/STRONG&gt;: This is a custom regular-expression function that parses the agent‚Äôs log output (in English or Japanese) to extract the ‚ÄúThought‚Äù portion.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;transform_response()&lt;/STRONG&gt;: Converts each (action, observation) tuple into a dictionary of the form { step_no, thought, action, action_input, observation }.&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note on AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION&lt;BR /&gt;&lt;/STRONG&gt;In this series, we use AgentType.&lt;STRONG&gt;CHAT_ZERO_SHOT_REACT_DESCRIPTION&lt;/STRONG&gt; so that the agent‚Äôs thought process is visible in the chat UI. However, with this agent type, you may occasionally encounter an error when asking questions that don‚Äôt require any tools. We are currently investigating better workarounds, so please be aware of this limitation for now.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-485720475"&gt;&lt;SPAN&gt;5 | Verify the Operation&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Now let‚Äôs run the Python file we created and confirm that the API behaves as expected. First, start the FastAPI application locally and, while viewing the API documentation page, send a request to the endpoint. Then, check that the returned JSON follows the structure with ‚Äúoutput‚Äù and ‚Äúintermediate_steps.‚Äù&lt;/P&gt;&lt;P&gt;With your virtual environment activated, run the following command in the terminal to launch the FastAPI application as a local server:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;gunicorn -w 1 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:${PORT:-8000}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once startup is complete, you‚Äôll see a log entry saying ‚ÄúApplication startup complete.‚Äù If you‚Äôre running this inside Business Application Studio (BAS), you‚Äôll see a screen like this:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-06 at 17.18.16.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270704i583019D373F12DCE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-06 at 17.18.16.png" alt="Screenshot 2025-06-06 at 17.18.16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click ‚ÄúOpen in a New Tab‚Äù in the lower-right corner of the popup, and then append /docs to the URL. This will bring up the Swagger UI automatically generated by FastAPI, where you can interactively see what kind of requests you can send to the /agent/chat endpoint.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-06 at 15.58.56.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270705i3DD592F99111CEC6/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-06 at 15.58.56.png" alt="Screenshot 2025-06-06 at 15.58.56.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Open the ‚ÄúPOST ‚Äì /agent/chat‚Äù accordion and click ‚ÄúTry it out.‚Äù In the Request Body, enter JSON in the form: { "query": "any question you like" }. Then click the Send button, and the API will respond immediately.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-06 at 17.22.43.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270706i29923FC5AB2AD2D6/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-06 at 17.22.43.png" alt="Screenshot 2025-06-06 at 17.22.43.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;At the bottom of the screen, you should see an HTTP status code of 200. If the Response Body includes both output and intermediate_steps in its JSON structure, then your test has succeeded!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-267110793" id="toc-hId-289206970"&gt;6ÔΩúChallenge ‚Äì Add a Text-File Upload Feature&lt;/H3&gt;&lt;P&gt;Let‚Äôs add an endpoint that allows users to upload a text file and have its contents stored in HANA Cloud Vector Engine. By providing this functionality, users can send documents directly to the AI Agent from the chat interface.&lt;/P&gt;&lt;P&gt;Below is a snippet of code you can insert into main.py‚Äîplace the imports, model definitions, and endpoint definition at the appropriate locations. You can decide exactly where to put each part, but it‚Äôs often helpful to group all file-upload‚Äìrelated code into its own block or to insert imports where you collect similar imports, models where you define other request schemas, and so on.&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# Imports for file upload
import shutil
import tempfile
from fastapi import File, UploadFile, HTTPException
from langchain_community.document_loaders import TextLoader
from langchain.text_splitter import CharacterTextSplitter

# Response model
class UploadResponse(BaseModel):
    message: str
    filename: str
    chunks_created: int

@app.post("/agent/upload")
async def upload_file(file: UploadFile = File(...)):
    """Upload a text file and store it as embeddings in HANA."""
    
    # Check file extension
    if not file.filename.endswith('.txt'):
        raise HTTPException(
            status_code=400,
            detail="Only files with a .txt extension can be uploaded."
        )
    
    try:
        # Save the uploaded file to a temporary file
        with tempfile.NamedTemporaryFile(delete=False, suffix='.txt') as tmp_file:
            shutil.copyfileobj(file.file, tmp_file)
            tmp_file_path = tmp_file.name
        
        # Load the text file
        text_documents = TextLoader(tmp_file_path).load()
        
        # Split the text into appropriate chunks
        text_splitter = CharacterTextSplitter(
            chunk_size=50,
            chunk_overlap=0,
        )
        text_chunks = text_splitter.split_documents(text_documents)
        
        # Store the chunks into the HANA vector database
        db.add_documents(text_chunks)
        
        # Delete the temporary file
        os.unlink(tmp_file_path)
        
        return UploadResponse(
            message="File uploaded successfully, and embeddings have been stored.",
            filename=file.filename,
            chunks_created=len(text_chunks)
        )
        
    except Exception as e:
        raise HTTPException(
            status_code=500,
            detail=f"An error occurred while processing the file: {str(e)}"
        )&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Key Point is , instead of using the UploadFile object directly, to firstly copy it into a tempfile.NamedTemporaryFile to obtain a filesystem path that can be passed to TextLoader. This ensures that the file‚Äôs contents are safely written to local disk, after which we can split it into chunks and send them to HANA Cloud for embedding.&lt;/P&gt;&lt;P&gt;Once you‚Äôve added this code to your main.py, follow the same steps as before to verify that everything works as expected.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-06 at 18.31.13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270737iD5DF94BAC9F53BA4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-06 at 18.31.13.png" alt="Screenshot 2025-06-06 at 18.31.13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;After uploading, open the HANA Cloud Database Explorer and check the table named ‚ÄúTEST_TABLE.‚Äù Verify that the uploaded text has been split into chunks and inserted as new records, and that a vector has been generated for each record.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-06 at 18.32.43.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270740i54AB93E1EFFD634E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-06 at 18.32.43.png" alt="Screenshot 2025-06-06 at 18.32.43.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If everything is reflected correctly, then the file upload feature is complete!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-69667039" id="toc-hId-92693465"&gt;&lt;SPAN&gt;7 | Next&amp;nbsp;Up&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-7-building-the-chat-ui-with/ba-p/14127011" target="_self"&gt;Part 7: Building the Chat UI with SAPUI5&lt;/A&gt;&lt;/P&gt;&lt;P&gt;In Part 7, we will assemble a chat UI based on SAPUI5, which will act as the frontend that calls the AI Agent API we have created so far. Stay tuned!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--788883849" id="toc-hId--765857423"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Disclaimer&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;SPAN&gt;All the views and opinions in the blog are my own and is made in my personal capacity and that SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-6-converting-the-ai-agent-into-a/ba-p/14121055"/>
    <published>2025-06-10T19:57:54.460000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-7-sapui5-%E3%81%A7%E3%83%81%E3%83%A3%E3%83%83%E3%83%88ui-%E3%82%92%E6%A7%8B%E7%AF%89/ba-p/14124854</id>
    <title>üöÄ ÁßíÈÄü„ÅßÂ≠¶„Å∂ SAP AI Core Agent ÈñãÁô∫ üöÄ - Part 7 SAPUI5 „Åß„ÉÅ„É£„ÉÉ„ÉàUI „ÇíÊßãÁØâ</title>
    <updated>2025-06-13T16:08:06.307000+02:00</updated>
    <author>
      <name>Ryota_Ito</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1390198</uri>
    </author>
    <content>&lt;P class=""&gt;ÁîüÊàê AI „ÅØÁ†îÁ©∂ÂÆ§„ÅÆÂ§ñ„Å∏È£õ„Å≥Âá∫„Åó„ÄÅ‰ªä„ÇÑ„Éì„Ç∏„Éç„ÇπÁèæÂ†¥„ÅÆÂ∏∏Ë≠ò„ÇíÂ°ó„ÇäÊõø„Åà„Å¶„ÅÑ„Åæ„Åô„ÄÇSAP„ÅØÂÖ®ÈÄüÂäõ„Åß„Åù„ÅÆÊ≥¢„Å´‰πó„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Åì„ÅÆ„Éñ„É≠„Ç∞„Ç∑„É™„Éº„Ç∫„Åß„ÅØ„ÄÅSAP&amp;nbsp;AI&amp;nbsp;Core „ÅÆÊó¢ÂÆö„É¢„Éá„É´„ÇíÊúÄÈÄü„ÅßÂëº„Å≥Âá∫„Åó„ÄÅÂÆüÂãô„Åß‰Ωø„Åà„Çã AI „Ç®„Éº„Ç∏„Çß„É≥„Éà„Å∏Êã°Âºµ„Åô„Çã‚ÄúÁßíÈÄü„Éè„É≥„Ç∫„Ç™„É≥‚Äù„Çí„ÅäÂ±ä„Åë„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;„ÅäÁü•„Çâ„Åõ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;You can find the English version &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-7-building-the-chat-ui-with/ba-p/14127011" target="_self"&gt;here&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1967282760" id="toc-hId-1990494789"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":open_book:"&gt;üìñ&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;Êú¨„Ç∑„É™„Éº„Ç∫„ÅßÂ≠¶„Åπ„Çã„Åì„Å®&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;SAP&amp;nbsp;AI&amp;nbsp;Core ‰∏ä„Åß„Ç´„Çπ„Çø„É† AI Agent „Çí ‚ÄúÁßíÈÄü‚Äù „ÅßÂãï„Åã„ÅôÊñπÊ≥ï&lt;/LI&gt;&lt;LI&gt;LangChain„ÉªGoogle Ê§úÁ¥¢„ÉÑ„Éº„É´„ÉªRAG„Çí‰Ωø„Å£„ÅüÂÆüË£Ö&lt;/LI&gt;&lt;LI&gt;AI Agent „Çí REST&amp;nbsp;API Âåñ„Åó„ÄÅSAPUI5/Fiori „ÅÆ UI „Å´Ëºâ„Åõ„ÄÅCloud Foundry„Å´„Éá„Éó„É≠„Ç§„Åô„ÇãÊâãÈ†Ü&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Â≠¶ÁøíÊôÇÈñì&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;ÂêÑPart „ÅØ&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;10‚Äì15 ÂàÜ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;„ÅßË™≠„ÇÅ„ÇãÔºÜÊâã„ÇíÂãï„Åã„Åõ„Çã„Éú„É™„É•„Éº„É†„Çí‰∫àÂÆö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1770769255" id="toc-hId-1793981284"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;üó∫&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;Ô∏è ÈÄ£Ëºâ„É≠„Éº„Éâ„Éû„ÉÉ„Éó&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part0-%E3%83%97%E3%83%AD%E3%83%AD%E3%83%BC%E3%82%B0/ba-p/14080340" target="_self"&gt;Part 0 „Éó„É≠„É≠„Éº„Ç∞&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-1-%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89-sap-ai-core%E3%81%A8ai-launchpad/ba-p/14081168" target="_self"&gt;Part 1 Áí∞Â¢ÉÊßãÁØâ: SAP AI Core„Å®AI Launchpad&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-2-langchain-%E3%81%A7%E3%83%81%E3%83%A3%E3%83%83%E3%83%88%E3%83%A2%E3%83%87%E3%83%AB%E3%82%92%E6%A7%8B%E7%AF%89/ba-p/14081270" target="_self"&gt;Part 2 LangChain „Åß„ÉÅ„É£„ÉÉ„Éà„É¢„Éá„É´„ÇíÊßãÁØâ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part3-agent%E3%83%84%E3%83%BC%E3%83%AB-google-%E6%A4%9C%E7%B4%A2%E3%82%92%E7%B5%B1%E5%90%88/ba-p/14082244" target="_self"&gt;Part 3 Agent„ÉÑ„Éº„É´: Google&amp;nbsp;Ê§úÁ¥¢„ÇíÁµ±Âêà&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part4-rag-%E5%9F%BA%E7%A4%8E-hana-cloud-vectorengine%E3%81%A8%E5%9F%8B%E3%82%81%E8%BE%BC%E3%81%BF%E5%87%A6%E7%90%86/ba-p/14093988" target="_self"&gt;Part 4 RAG Âü∫Á§é ‚ë†: HANA Cloud VectorEngine„Å®Âüã„ÇÅËæº„ÅøÂá¶ÁêÜ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-5-rag-%E5%9F%BA%E7%A4%8E-retriever-tool%E3%81%AE%E6%A7%8B%E7%AF%89/ba-p/14108524" target="_self"&gt;Part 5 RAG Âü∫Á§é ‚ë°: Retriever Tool„ÅÆÊßãÁØâ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-6-ai-agent-%E3%82%92-rest-api-%E5%8C%96/ba-p/14119805" target="_self"&gt;Part 6 AI Agent „Çí REST&amp;nbsp;API Âåñ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-7-sapui5-%E3%81%A7%E3%83%81%E3%83%A3%E3%83%83%E3%83%88ui-%E3%82%92%E6%A7%8B%E7%AF%89/ba-p/14124854" target="_self"&gt;Part 7 SAPUI5 „Åß„ÉÅ„É£„ÉÉ„ÉàUI „ÇíÊßãÁØâ&lt;/A&gt;&amp;nbsp;[&lt;STRONG&gt;ÁèæÂú®„ÅÆ„Éñ„É≠„Ç∞&lt;/STRONG&gt;]&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-8-cloudfoundry-%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4/ba-p/14126865" target="_self"&gt;Part 8 CloudFoundry „Å´„Éá„Éó„É≠„Ç§&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;P&gt;„Åì„ÅÆË®ò‰∫ã„Åå„ÅäÂΩπ„Å´Á´ã„Å£„Åü„Çâ„ÄÅ„Åú„Å≤‚ÄØ&lt;STRONG&gt;Kudos&lt;/STRONG&gt;‚ÄØ„ÇíÊäº„Åó„Å¶„ÅÑ„Åü„Å†„Åë„Çã„Å®Âä±„Åø„Å´„Å™„Çä„Åæ„Åô„ÄÇ „Äå„Åì„Åì„Çí„ÇÇ„Å£„Å®Ë©≥„Åó„ÅèÁü•„Çä„Åü„ÅÑ„Äç„ÄåÂà•„ÅÆ„ÉÜ„Éº„Éû„ÇÇÂèñ„Çä‰∏ä„Åí„Å¶„Åª„Åó„ÅÑ„Äç„Å™„Å©„ÄÅ„ÅîË¶ÅÊúõ„Åå„ÅÇ„Çå„Å∞„ÅäÊ∞óËªΩ„Å´„Ç≥„É°„É≥„Éà„Åè„Å†„Åï„ÅÑÔºÅ&lt;/P&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1316090312" id="toc-hId-1339302341"&gt;&lt;SPAN&gt;SAPUI5 „Åß„ÉÅ„É£„ÉÉ„ÉàUI „ÇíÊßãÁØâ&lt;/SPAN&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-1271871555"&gt;1 | „ÅØ„Åò„ÇÅ„Å´&lt;/H3&gt;&lt;P&gt;‰ªäÂõû„ÅÆPart „Åß„ÅØ„ÄÅÂâçÂõû&lt;SPAN&gt;„Åæ„Åß„Å´ÊßãÁØâ„Åó„Åü &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;AI Agent&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „Çí„ÄÅSAP UI5/Fiori „Éô„Éº„Çπ„ÅÆ„ÉÅ„É£„ÉÉ„Éà UI „Åã„ÇâÂëº„Å≥Âá∫„Åõ„Çã„Çà„ÅÜ„Å´„Åó„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;SAP UI5 „ÅØ SAP „ÅåÊèê‰æõ„Åô„Çã UI „Éï„É¨„Éº„É†„ÉØ„Éº„ÇØ„Åß„ÅÇ„Çä„ÄÅ‰ºÅÊ•≠Âêë„Åë„ÅÆ„É¢„ÉÄ„É≥„Å™ Web „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÇíÁü≠ÊôÇÈñì„ÅßÈñãÁô∫„Åß„Åç„ÇãÁÇπ„ÅåÁâπÂæ¥„Åß„Åô„ÄÇÁâπ„Å´ &lt;STRONG&gt;SAP Business Application StudioÔºàBASÔºâ&lt;/STRONG&gt; „ÇíÂà©Áî®„Åô„Çã„Å®„ÄÅFiori Áî®„ÉÜ„É≥„Éó„É¨„Éº„Éà„Åã„Çâ„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÊßãÊàê„ÇíËá™ÂãïÁîüÊàê„Åß„Åç„Çã„Åü„ÇÅ„ÄÅ„Éá„Ç£„É¨„ÇØ„Éà„É™„ÇÑË®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆÊâãÂãï‰ΩúÊàê„Åå‰∏çË¶Å„Å´„Å™„Çä„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-1075358050"&gt;2 | ‰∫ãÂâçÊ∫ñÂÇô&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;BTP „Çµ„Éñ„Ç¢„Ç´„Ç¶„É≥„Éà&lt;/LI&gt;&lt;LI&gt;SAP AI Core „Ç§„É≥„Çπ„Çø„É≥„Çπ&lt;/LI&gt;&lt;LI&gt;SAP AI Launchpad„ÅÆ„Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥&lt;/LI&gt;&lt;LI&gt;Python 3.13Áí∞Â¢É &amp;amp; pip&lt;/LI&gt;&lt;LI&gt;VSCode„ÇÑBAS„Å™„Å©„ÅÆIDE&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Trial Áí∞Â¢É„ÅÆÊ≥®ÊÑè&lt;BR /&gt;&lt;/STRONG&gt;Trial „ÅÆ HANA‚ÄØCloud „Ç§„É≥„Çπ„Çø„É≥„Çπ„ÅØ&amp;nbsp;&lt;STRONG&gt;ÊØéÊô©Ëá™ÂãïÂÅúÊ≠¢ „Åï„Çå„Åæ„Åô„ÄÇÊó•„Çí„Åæ„Åü„Åê‰ΩúÊ•≠„ÅÆÂ†¥Âêà„ÅØÁøåÊó•„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÇíÂÜçËµ∑Âãï„Åó„Å¶„Åè„Å†„Åï„ÅÑ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-878844545"&gt;3 | Fiori „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆÊ∫ñÂÇô&lt;/H3&gt;&lt;P&gt;SAP Á≥ª UI ÈñãÁô∫„Åß„ÅØ„ÄÅBAS „ÅÆ„ÉÜ„É≥„Éó„É¨„Éº„ÉàÊ©üËÉΩ„ÅÆÂà©Áî®„ÇíÂº∑„ÅèÊé®Â•®„Åó„Åæ„Åô„ÄÇ„ÉÜ„É≥„Éó„É¨„Éº„Éà„Åã„ÇâÁîüÊàê„Åï„Çå„Çã„Éï„Ç©„É´„ÉÄÊßãÊàê„Å®Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„Çí„Éô„Éº„Çπ„Å´„Åô„Çã„Åì„Å®„Åß„ÄÅFiori „Ç¢„Éó„É™Âõ∫Êúâ„ÅÆ„Éû„Éã„Éï„Çß„Çπ„ÉàÔºàmta.yamlÔºâ„ÇÑ„É¢„Ç∏„É•„Éº„É´ÊßãÊàê„ÇíÁ¥†Êó©„ÅèÊï¥ÂÇô„Åß„Åç„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;BAS „Åß Create Dev Space „Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„ÄÅ„ÉÜ„É≥„Éó„É¨„Éº„Éà„Å´ &lt;STRONG&gt;SAP Fiori&lt;/STRONG&gt; „ÇíÈÅ∏Êäû„Åó„Åæ„Åô„ÄÇ‰Ωµ„Åõ„Å¶ÂâçÂõû„Å´‰ΩúÊàê„Åó„Åü Python API „Çí„É≠„Éº„Ç´„É´„ÅßËµ∑Âãï„Åó„Åü„ÅÑ„ÅÆ„Åß„ÄÅ&lt;STRONG&gt;Additional SAP Extensions&lt;/STRONG&gt; „Åã„Çâ &lt;STRONG&gt;Python Tools&lt;/STRONG&gt; „ÇíÈÅ∏Êäû„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-10 at 16.58.38.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273590i20E993087D53650B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-10 at 16.58.38.png" alt="Screenshot 2025-06-10 at 16.58.38.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Â∑¶‰∏ä„ÅÆ„Éè„É≥„Éê„Éº„Ç¨„Éº„É°„Éã„É•„Éº ‚Üí &lt;STRONG&gt;File &amp;gt; New Project From Template&lt;/STRONG&gt; „ÇíÈÅ∏Êäû„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-07 at 15.54.13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273591iDCB6D40772C1E465/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-07 at 15.54.13.png" alt="Screenshot 2025-06-07 at 15.54.13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Template Selection „ÅØ &lt;STRONG&gt;Basic&lt;/STRONG&gt; „ÇíÈÅ∏Êäû„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-07 at 15.53.57.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273593iD3C430EAD2CD15AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-07 at 15.53.57.png" alt="Screenshot 2025-06-07 at 15.53.57.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Data Source and Service Selection „Åß„ÅØ„ÄÅUI „Å´Ë°®Á§∫„Åô„Çã„Éá„Éº„Çø„ÅØ Python API „Åã„ÇâÂèñÂæó„Åô„Çã„Åü„ÇÅ &lt;STRONG&gt;None&lt;/STRONG&gt; „ÇíÈÅ∏Êäû„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-07 at 15.55.09.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273595iE79E8A1D606CA6E1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-07 at 15.55.09.png" alt="Screenshot 2025-06-07 at 15.55.09.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Entity Selection „Åß Entity name „Å´ &lt;STRONG&gt;ChatEntity&lt;/STRONG&gt; „Å®ÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-07 at 15.57.51.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273596i67C2667C200F2B49/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-07 at 15.57.51.png" alt="Screenshot 2025-06-07 at 15.57.51.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Project Attributes&lt;SPAN&gt; „Çí‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å´Ë®≠ÂÆö„Åó„ÄÅ&lt;/SPAN&gt;Add deployment configuration&lt;SPAN&gt; „Çí &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;Yes&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „Å´„Åó„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;È†ÖÁõÆ&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;ÂÄ§&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;SPAN&gt;Module Name&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;my-ai-agent-ui&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;SPAN&gt;Application Title&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;SPAN&gt;My AI Chat&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;SPAN&gt;Description&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;Chat UI for AI Agent&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-11 at 13.59.53.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273599iC0458B2EFEEE596D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-11 at 13.59.53.png" alt="Screenshot 2025-06-11 at 13.59.53.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Deployment Configuration&lt;SPAN&gt; „Åß„ÅØÊ¨°„ÅÆ„Çà„ÅÜ„Å´Ë®≠ÂÆö„Åó„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;È†ÖÁõÆ&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;ÂÄ§&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Target&lt;/TD&gt;&lt;TD width="50%"&gt;Cloud Foundry&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Destination&lt;/TD&gt;&lt;TD width="50%"&gt;None&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Add Router Module&lt;/TD&gt;&lt;TD width="50%"&gt;Add Application to Managed Application Router&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-11 at 14.00.18.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273600iA6D3EC92C474F44E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-11 at 14.00.18.png" alt="Screenshot 2025-06-11 at 14.00.18.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;„Åæ„Çå„Å´ &lt;/SPAN&gt;Target&lt;SPAN&gt; „Çí CF „Å´„Åó„Å¶„ÇÇ Router Module „ÅÆ„Ç™„Éó„Ç∑„Éß„É≥„ÅåË°®Á§∫„Åï„Çå„Å™„ÅÑ„Åì„Å®„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ„Åù„ÅÆÂ†¥Âêà„ÅØ„ÄÅ‰∏ÄÂ∫¶ &lt;/SPAN&gt;Target&lt;SPAN&gt; „Çí &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;ABAP&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „Å´Âàá„ÇäÊõø„Åà„Å¶„Åã„Çâ &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;Cloud Foundry&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „Å´Êàª„Åô„Å®Ê≠£„Åó„ÅèË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;ÊúÄÂæå„Å´„ÄÅPython API „ÅÆÈÖçÁΩÆ„Å®Âãï‰ΩúÁ¢∫Ë™ç„ÇíÂÆüÊñΩ„Åó„Åæ„Åô„ÄÇ&lt;SPAN&gt;ÊßãÊàê„ÅØÊ¨°„ÅÆ„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# „Éï„Ç©„É´„ÉÄÊßãÊàê
PROJECTS
‚îú‚îÄ‚îÄ my-ai-agent-ui/
‚îú‚îÄ‚îÄ my-ai-agent-api/
    ‚îú‚îÄ‚îÄ main.py
    ‚îú‚îÄ‚îÄ requirements.txt
    ‚îî‚îÄ‚îÄ .env&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;my-ai-agent-api&amp;nbsp;&lt;SPAN&gt;ÈÖç‰∏ã„Åß‰ªÆÊÉ≥Áí∞Â¢É„Çí‰ΩúÊàê„ÉªÊúâÂäπÂåñ„Åó„ÄÅ‰ª•‰∏ã„ÅÆ„Ç≥„Éû„É≥„Éâ„Åß„É≠„Éº„Ç´„É´„Çµ„Éº„Éê„ÅåËµ∑Âãï„Åô„Çã„ÅãÁ¢∫Ë™ç„Åó„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;gunicorn -w 1 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:${PORT:-8000}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;„Åì„Çå„Åß„ÄÅFiori„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆÊßãÁØâÊ∫ñÂÇô„ÅåÊï¥„ÅÑ„Åæ„Åó„ÅüÔºÅ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-682331040"&gt;4 | Fiori „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆÊîπËâØ&lt;/H3&gt;&lt;P&gt;ÁîüÊàê„Åï„Çå„Åü Fiori „Éó„É≠„Ç∏„Çß„ÇØ„Éà„Çí„Éô„Éº„Çπ„Å´„ÄÅ„ÉÅ„É£„ÉÉ„Éà UI „Åå AI Agent „Å®ÈÄö‰ø°„Åß„Åç„Çã„Çà„ÅÜ„Å´„Ç≥„Éº„Éâ„ÇíË™øÊï¥„Åó„Å¶„ÅÑ„Åç„Åæ„Åó„Çá„ÅÜ„ÄÇ&lt;/P&gt;&lt;P&gt;„Åæ„Åö„Ç≥„É≥„Éà„É≠„Éº„É©„ÉºÔºàmy-ai-agent-ui/webapp/controller/ChatEntity.controller.jsÔºâ„Çí‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å´Êõ∏„Åç„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
  "sap/ui/core/mvc/Controller",
  "sap/ui/model/json/JSONModel",
  "sap/m/MessageToast",
  "sap/ui/core/BusyIndicator"
], function (Controller, JSONModel, MessageToast, BusyIndicator) {
  "use strict";

  // Áí∞Â¢É„Å´„Çà„Å£„Å¶„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÇíÂàá„ÇäÊõø„Åà
  const ENDPOINT = (
    ["localhost", "applicationstudio"].some(h =&amp;gt; window.location.hostname.includes(h)) ||
    window.location.port === "8080"
  ) ? "" : "https://my-ai-agent-api-relaxed-raven-ie.cfapps.us10-001.hana.ondemand.com";

  return Controller.extend("myaiagentui.controller.ChatEntity", {
    /** ÂàùÊúüÂåñ */
    onInit() {
      this.getView().setModel(new JSONModel({
        busy: false,
        txtInput: "",
        uploadedFiles: [],
        messages: [{
          role: "assistant",
          content: "„Åì„Çì„Å´„Å°„ÅØÔºÅÁßÅ„ÅØ„ÉÅ„É£„ÉÉ„Éà„Éú„ÉÉ„Éà„Åß„Åô„ÄÇ‰Ωï„Åã„ÅäÊâã‰ºù„ÅÑ„Åß„Åç„Çã„Åì„Å®„ÅØ„ÅÇ„Çä„Åæ„Åô„ÅãÔºü",
          hasThinkingProcess: false
        }]
      }), "ui");

      this.byId("fileUploader")?.setUploadUrl(`${ENDPOINT}/agent/upload`);
    },

    /** „ÉÅ„É£„ÉÉ„ÉàÂ±•Ê≠¥„ÇíÂàùÊúüÂåñ */
    onClearChatPress() {
      this.getView().getModel("ui").setProperty("/messages", [{
        role: "assistant",
        content: "„Åì„Çì„Å´„Å°„ÅØÔºÅÁßÅ„ÅØ„ÉÅ„É£„ÉÉ„Éà„Éú„ÉÉ„Éà„Åß„Åô„ÄÇ‰Ωï„Åã„ÅäÊâã‰ºù„ÅÑ„Åß„Åç„Çã„Åì„Å®„ÅØ„ÅÇ„Çä„Åæ„Åô„ÅãÔºü",
        hasThinkingProcess: false
      }]);
      MessageToast.show("„ÉÅ„É£„ÉÉ„Éà„Çí„ÇØ„É™„Ç¢„Åó„Åæ„Åó„Åü");
    },

    /** „É°„ÉÉ„Çª„Éº„Ç∏ÈÄÅ‰ø° */
    async onBtnChatbotSendPress(){
      const ui=this.getView().getModel("ui");
      const input=(ui.getProperty("/txtInput")||"").trim();
      if(!input) return;
      const msgs=ui.getProperty("/messages");
      msgs.push({role:"user", content:input});
      ui.setProperty("/messages", msgs);
      ui.setProperty("/txtInput", "");
      ui.setProperty("/busy", true);
      try{
        const {output, intermediate_steps=[]}=await this._apiChatCompletion(input);
        msgs.push({role:"assistant", content:output, hasThinkingProcess:Boolean(intermediate_steps.length), thinkingProcess:intermediate_steps.map((s,i)=&amp;gt;({...s, stepIndex:i+1, observationTruncated:s.observation?.slice(0,100)+(s.observation?.length&amp;gt;100?"...":""), observationFull:s.observation, isObservationExpanded:false, hasLongObservation:(s.observation?.length||0)&amp;gt;100})), isExpanded:false});
        ui.setProperty("/messages", msgs);
        this._scrollToBottom();
      }catch(err){
        console.error(err);
        MessageToast.show(`„Ç®„É©„Éº: ${err.message}`);
      }finally{
        ui.setProperty("/busy", false);
      }
    },

    /** ÊÄùËÄÉ„Éó„É≠„Çª„ÇπË°®Á§∫ÂàáÊõø */
    onToggleThinkingProcess(oEvent) {
      const ctx = oEvent.getSource()?.getBindingContext("ui");
      if (ctx) this._toggleFlag(ctx, "isExpanded");
    },    

    /** Observation Ë°®Á§∫ÂàáÊõø */
    onToggleObservation(oEvent) {
      const ctx = oEvent.getSource()?.getBindingContext("ui");
      if (ctx) this._toggleFlag(ctx, "isObservationExpanded");
    },

    /** ‰ªªÊÑè„Éï„É©„Ç∞„ÇíÂèçËª¢ */
    _toggleFlag(ctx, flag) {
      const ui = this.getView().getModel("ui");
      const path = ctx.getPath();
      ui.setProperty(`${path}/${flag}`, !ui.getProperty(`${path}/${flag}`));
    },

    /** „ÉÅ„É£„ÉÉ„Éà„ÇíÊúÄ‰∏ãÈÉ®„Å∏„Çπ„ÇØ„É≠„Éº„É´ */
    _scrollToBottom() {
      setTimeout(() =&amp;gt; {
        const sc = this.byId("chatScrollContainer");
        const items = sc?.getContent()[0].getItems();
        if (items?.length) sc.scrollToElement(items[items.length - 1]);
      }, 100);
    },

    /** AI „ÉÅ„É£„ÉÉ„Éà API Âëº„Å≥Âá∫„Åó */
    async _apiChatCompletion(query) {
      const res = await fetch(`${ENDPOINT}/agent/chat`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ query })
      });
      if (!res.ok) throw new Error(`„Çµ„Éº„Éê„Éº„Ç®„É©„Éº (${res.status}): ${await res.text()}`);
      return res.json();
    }
  });
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Ê¨°„Å´ ViewÔºàmy-ai-agent-ui/webapp/view/ChatEntity.view.xmlÔºâ„Çí‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å´Â§âÊõ¥„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;mvc:View controllerName="myaiagentui.controller.ChatEntity"
    xmlns:core="sap.ui.core"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns:f="sap.f"
    xmlns:u="sap.ui.unified"
    displayBlock="true"
    xmlns="sap.m"&amp;gt;

    &amp;lt;f:DynamicPage id="mainDynamicPage" stickySubheaderProvider="iconTabBar" class="sapUiNoContentPadding"&amp;gt;
        &amp;lt;f:title&amp;gt;
            &amp;lt;f:DynamicPageTitle id="mainDynamicTitle"&amp;gt;
                &amp;lt;f:heading&amp;gt;
                    &amp;lt;Title id="pageTitle" text="AI „ÉÅ„É£„ÉÉ„Éà with Fiori"/&amp;gt;
                &amp;lt;/f:heading&amp;gt;
                &amp;lt;f:actions&amp;gt;
                    &amp;lt;Button id="clearChatButton" 
                            text="„ÉÅ„É£„ÉÉ„Éà„Çí„ÇØ„É™„Ç¢" 
                            icon="sap-icon://refresh"
                            type="Emphasized"
                            press="onClearChatPress"/&amp;gt;
                &amp;lt;/f:actions&amp;gt;
            &amp;lt;/f:DynamicPageTitle&amp;gt;
        &amp;lt;/f:title&amp;gt;

        &amp;lt;f:content&amp;gt;
            &amp;lt;!-- „ÉÅ„É£„ÉÉ„Éà UI „É°„Ç§„É≥„Ç®„É™„Ç¢ --&amp;gt;
            &amp;lt;VBox id="chatMainAreaBox" class="sapUiNoContentPadding chatMainArea"&amp;gt;
                &amp;lt;IconTabBar id="iconTabBar"
                            class="sapUiNoContentPadding"
                            stretchContentHeight="true"
                            expanded="true"
                            expandable="false"&amp;gt;

                    &amp;lt;items&amp;gt;
                        &amp;lt;IconTabFilter id="chatbotTab" text="„ÉÅ„É£„ÉÉ„Éà„Éú„ÉÉ„Éà" class="sapUiNoContentPadding"&amp;gt;
                            &amp;lt;VBox id="chatContainerBox" class="chatContainer sapUiNoContentPadding"&amp;gt;
                                &amp;lt;!-- „ÉÅ„É£„ÉÉ„Éà„É°„ÉÉ„Çª„Éº„Ç∏„Ç®„É™„Ç¢ --&amp;gt;
                                &amp;lt;ScrollContainer id="chatScrollContainer"
                                               height="100%" 
                                               width="100%" 
                                               vertical="true" 
                                               focusable="true"
                                               class="chatScrollContainer"&amp;gt;
                                    &amp;lt;VBox id="chatMessagesBox" items="{ui&amp;gt;/messages}" class="chatMessagesContainer"&amp;gt;
                                        &amp;lt;VBox id="messageItemBox"&amp;gt;
                                            &amp;lt;!-- assistant „Ç≥„É°„É≥„Éà --&amp;gt;
                                            &amp;lt;VBox id="assistantMessageVBox" visible="{= ${ui&amp;gt;role} === 'assistant'}"
                                                  class="chatMessageWrapper"&amp;gt;
                                                &amp;lt;HBox id="assistantMessageHBox" direction="Row" class="chatMessageRow"&amp;gt;
                                                    &amp;lt;HBox id="assistantMessageHBox1" backgroundDesign="Solid"
                                                          class="chatBubbleAssistant"&amp;gt;
                                                        &amp;lt;core:Icon id="assistantMessageIcon" decorative="true"
                                                                   src="sap-icon://ai"
                                                                   class="chatIcon"/&amp;gt;
                                                        &amp;lt;FormattedText id="assistantMessageFormattedText" htmlText="{ui&amp;gt;content}"/&amp;gt;
                                                    &amp;lt;/HBox&amp;gt;
                                                &amp;lt;/HBox&amp;gt;
                                                
                                                &amp;lt;!-- ÊÄùËÄÉ„Éó„É≠„Çª„Çπ„Ç¢„Ç≥„Éº„Éá„Ç£„Ç™„É≥ --&amp;gt;
                                                &amp;lt;HBox id="thinkingToggleBox" visible="{ui&amp;gt;hasThinkingProcess}" 
                                                      class="thinkingProcessContainer"&amp;gt;
                                                    &amp;lt;Button id="thinkingToggleButton" icon="{= ${ui&amp;gt;isExpanded} ? 'sap-icon://collapse' : 'sap-icon://expand' }"
                                                            text="ÊÄùËÄÉ„Éó„É≠„Çª„Çπ„Çí{= ${ui&amp;gt;isExpanded} ? 'Èö†„Åô' : 'Ë°®Á§∫' }"
                                                            type="Transparent"
                                                            press="onToggleThinkingProcess"
                                                            class="thinkingProcessToggle"/&amp;gt;
                                                &amp;lt;/HBox&amp;gt;
                                                
                                                &amp;lt;VBox id="thinkingVBox" visible="{= ${ui&amp;gt;isExpanded} &amp;amp;amp;&amp;amp;amp; ${ui&amp;gt;hasThinkingProcess} }"
                                                      class="thinkingProcessContent"&amp;gt;
                                                    &amp;lt;VBox id="thinkingVBox1" items="{ui&amp;gt;thinkingProcess}"&amp;gt;
                                                        &amp;lt;VBox id="thinkingStepBox" class="thinkingStepBox"&amp;gt;
                                                            &amp;lt;Title id="thinkingStepTitle"
                                                                   text="{= 'Step ' + ${ui&amp;gt;stepIndex} }" 
                                                                   level="H5" 
                                                                   class="thinkingStepTitle"/&amp;gt;
                                                        &amp;lt;VBox id="thinkingStepContent" class="thinkingStepContent"&amp;gt;
                                                            &amp;lt;HBox id="thinkingStepThought" class="thinkingStepItem"&amp;gt;
                                                                &amp;lt;Label id="ThoughtLabel" text="Thought:" design="Bold" class="thinkingLabel"/&amp;gt;
                                                                &amp;lt;Text id="ThoughtText" text="{ui&amp;gt;thought}" wrapping="true" class="thinkingText"/&amp;gt;
                                                            &amp;lt;/HBox&amp;gt;
                                                            &amp;lt;HBox id="thinkingStepAction" class="thinkingStepItem"&amp;gt;
                                                                &amp;lt;Label id="ActionLabel" text="Action:" design="Bold" class="thinkingLabel"/&amp;gt;
                                                                &amp;lt;Text id="ActionText" text="{ui&amp;gt;action}" class="thinkingText"/&amp;gt;
                                                            &amp;lt;/HBox&amp;gt;
                                                            &amp;lt;HBox id="thinkingStepInput" class="thinkingStepItem"&amp;gt;
                                                                &amp;lt;Label id="InputLabel" text="Input:" design="Bold" class="thinkingLabel"/&amp;gt;
                                                                &amp;lt;Text id="InputText" text="{ui&amp;gt;action_input}" class="thinkingText"/&amp;gt;
                                                            &amp;lt;/HBox&amp;gt;
                                                            &amp;lt;HBox id="thinkingStepObservation" class="thinkingStepItem"&amp;gt;
                                                                &amp;lt;Label id="ObservationLabel" text="Observation:" design="Bold" class="thinkingLabel"/&amp;gt;
                                                                &amp;lt;VBox id="ObservationVBox" class="thinkingText"&amp;gt;
                                                                    &amp;lt;Text id="ObservationText" text="{= ${ui&amp;gt;isObservationExpanded} ? ${ui&amp;gt;observationFull} : ${ui&amp;gt;observationTruncated} }" 
                                                                          wrapping="true"/&amp;gt;
                                                                    &amp;lt;Link id="ObservationLink"
                                                                          text="{= ${ui&amp;gt;isObservationExpanded} ? 'Êäò„Çä„Åü„Åü„ÇÄ' : 'Á∂ö„Åç„ÇíË™≠„ÇÄ' }"
                                                                          visible="{ui&amp;gt;hasLongObservation}"
                                                                          press="onToggleObservation"
                                                                          class="observationToggleLink"/&amp;gt;
                                                                &amp;lt;/VBox&amp;gt;
                                                            &amp;lt;/HBox&amp;gt;
                                                        &amp;lt;/VBox&amp;gt;
                                                    &amp;lt;/VBox&amp;gt;
                                                    &amp;lt;/VBox&amp;gt;
                                                &amp;lt;/VBox&amp;gt;
                                            &amp;lt;/VBox&amp;gt;

                                            &amp;lt;!-- user „Ç≥„É°„É≥„Éà --&amp;gt;
                                            &amp;lt;HBox id="UserComment"
                                                  visible="{= ${ui&amp;gt;role} === 'user'}"
                                                  direction="RowReverse"
                                                  class="chatMessageRow"&amp;gt;
                                                &amp;lt;HBox id="UserCommentBox"
                                                      direction="RowReverse"
                                                      backgroundDesign="Solid"
                                                      class="chatBubbleUser sapThemeBrand-asBackgroundColor"&amp;gt;
                                                    &amp;lt;core:Icon id="UserCommentIcon"
                                                               decorative="true"
                                                               src="sap-icon://customer"
                                                               class="chatIcon sapThemeTextInverted"/&amp;gt;
                                                    &amp;lt;Text id="UserCommentText" class="sapThemeTextInverted" text="{ui&amp;gt;content}"/&amp;gt;
                                                &amp;lt;/HBox&amp;gt;
                                            &amp;lt;/HBox&amp;gt;
                                        &amp;lt;/VBox&amp;gt;
                                    &amp;lt;/VBox&amp;gt;
                                &amp;lt;/ScrollContainer&amp;gt;

                                &amp;lt;!-- ÂÖ•ÂäõÊ¨ÑÔºãÈÄÅ‰ø°„Éú„Çø„É≥ --&amp;gt;
                                &amp;lt;HBox id="chatInputAreaBox" class="chatInputArea"&amp;gt;
                                    &amp;lt;TextArea id="chatInput" value="{ui&amp;gt;/txtInput}"
                                              width="100%"
                                              growing="true"
                                              placeholder="„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ..."
                                              editable="{= !${ui&amp;gt;/busy}}"
                                              busyIndicatorDelay="0"
                                              class="chatTextArea"&amp;gt;
                                        &amp;lt;layoutData&amp;gt;
                                            &amp;lt;FlexItemData id="InputData" growFactor="1"/&amp;gt;
                                        &amp;lt;/layoutData&amp;gt;
                                    &amp;lt;/TextArea&amp;gt;

                                    &amp;lt;Button id="sendButton" class="chatSendButton"
                                            type="Emphasized"
                                            icon="sap-icon://paper-plane"
                                            text="ÈÄÅ‰ø°"
                                            press="onBtnChatbotSendPress"
                                            busy="{ui&amp;gt;/busy}"
                                            busyIndicatorDelay="0"/&amp;gt;
                                &amp;lt;/HBox&amp;gt;
                            &amp;lt;/VBox&amp;gt;
                        &amp;lt;/IconTabFilter&amp;gt;
                    &amp;lt;/items&amp;gt;
                &amp;lt;/IconTabBar&amp;gt;
            &amp;lt;/VBox&amp;gt;
        &amp;lt;/f:content&amp;gt;
    &amp;lt;/f:DynamicPage&amp;gt;
&amp;lt;/mvc:View&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;„Åï„Çâ„Å´„ÄÅUI „ÅÆË©≥Á¥∞„Å™„Éá„Ç∂„Ç§„É≥Ë®≠ÂÆö„Å®„Åó„Å¶„ÄÅ„Çπ„Çø„Ç§„É´Ôºàmy-ai-agent-ui/webapp/css/style.cssÔºâ„ÇíË®≠ÂÆö„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-css"&gt;&lt;code&gt;/* „ÉÅ„É£„ÉÉ„Éà„É°„Ç§„É≥„Ç®„É™„Ç¢ */
.chatMainArea {
    height: 100vh;
    min-height: 300px;
}

/* „ÉÅ„É£„ÉÉ„Éà„Ç≥„É≥„ÉÜ„Éä */
.chatContainer {
    display: flex;
    flex-direction: column;
    height: calc(90vh - 100px);
    padding: 0;
}

/* „ÉÅ„É£„ÉÉ„Éà„Çπ„ÇØ„É≠„Éº„É´„Ç≥„É≥„ÉÜ„Éä */
.chatScrollContainer {
    flex: 1;
    min-height: 300px;
    background-color: #f8f9fa;
    border: none;
    border-radius: 0;
    padding: 0;
    margin: 0;
}

/* „ÉÅ„É£„ÉÉ„Éà„É°„ÉÉ„Çª„Éº„Ç∏„Ç≥„É≥„ÉÜ„Éä */
.chatMessagesContainer {
    padding: 1rem;
}

/* „ÉÅ„É£„ÉÉ„Éà„É°„ÉÉ„Çª„Éº„Ç∏Ë°å */
.chatMessageRow {
    width: 100%;
    margin-bottom: 0.5rem;
}

/* „ÉÅ„É£„ÉÉ„Éà„É°„ÉÉ„Çª„Éº„Ç∏„É©„ÉÉ„Éë„Éº */
.chatMessageWrapper {
    margin-bottom: 1rem;
}

/* „ÉÅ„É£„ÉÉ„Éà„Ç≥„É°„É≥„Éà - „Ç¢„Ç∑„Çπ„Çø„É≥„Éà */
.chatBubbleAssistant {
    max-width: 70%;
    min-width: 100px;
    background-color: #ffffff;
    border: 1px solid #d0d7de;
    border-radius: 18px;
    padding: 12px 16px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    align-items: flex-start;
}

.chatBubbleAssistant .sapMFormattedText {
    word-wrap: break-word;
    line-height: 1.4;
}

/* „ÉÅ„É£„ÉÉ„Éà„Ç≥„É°„É≥„Éà - „É¶„Éº„Ç∂„Éº */
.chatBubbleUser {
    max-width: 70%;
    min-width: 100px;
    border-radius: 18px;
    padding: 12px 16px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    align-items: flex-start;
}

.chatBubbleUser .sapMText {
    word-wrap: break-word;
    line-height: 1.4;
}

/* ÊÄùËÄÉ„Éó„É≠„Çª„Çπ„Ç≥„É≥„ÉÜ„Éä */
.thinkingProcessContainer {
    margin-top: 0.5rem;
    margin-left: 2.5rem;
}

/* ÊÄùËÄÉ„Éó„É≠„Çª„Çπ„Éà„Ç∞„É´„Éú„Çø„É≥ */
.thinkingProcessToggle {
    font-size: 0.875rem;
    color: #0073e6;
}

.thinkingProcessToggle:hover {
    background-color: rgba(0, 115, 230, 0.08) !important;
}

/* ÊÄùËÄÉ„Éó„É≠„Çª„Çπ„Ç≥„É≥„ÉÜ„É≥„ÉÑ */
.thinkingProcessContent {
    margin-left: 2.5rem;
    margin-top: 0.5rem;
    max-width: 70%;
}

/* ÊÄùËÄÉ„Çπ„ÉÜ„ÉÉ„Éó„Éú„ÉÉ„ÇØ„Çπ */
.thinkingStepBox {
    margin-bottom: 1.5rem;
    padding: 1rem;
    background-color: #f5f7fa;
    border: 1px solid #e4e7ea;
    border-radius: 8px;
}

.thinkingStepBox:last-child {
    margin-bottom: 0;
}

/* ÊÄùËÄÉ„Çπ„ÉÜ„ÉÉ„Éó„Çø„Ç§„Éà„É´ */
.thinkingStepTitle {
    color: #0a6ed1;
    margin-bottom: 0.75rem;
    font-size: 1rem;
}

/* ÊÄùËÄÉ„Çπ„ÉÜ„ÉÉ„Éó„Ç≥„É≥„ÉÜ„É≥„ÉÑ */
.thinkingStepContent {
    padding-left: 0.5rem;
}

/* ÊÄùËÄÉ„Çπ„ÉÜ„ÉÉ„ÉóÈ†ÖÁõÆ */
.thinkingStepItem {
    margin-bottom: 0.5rem;
    align-items: flex-start;
}

.thinkingStepItem:last-child {
    margin-bottom: 0;
}

/* ÊÄùËÄÉ„É©„Éô„É´ */
.thinkingLabel {
    min-width: 100px;
    margin-right: 1rem;
    color: #32363a;
    font-size: 0.875rem;
}

/* ÊÄùËÄÉ„ÉÜ„Ç≠„Çπ„Éà */
.thinkingText {
    flex: 1;
    font-size: 0.875rem;
    color: #515456;
    line-height: 1.5;
}

/* ObservationÁ∂ö„Åç„ÇíË™≠„ÇÄ„É™„É≥„ÇØ */
.observationToggleLink {
    margin-top: 0.25rem;
    font-size: 0.875rem;
}

/* ÂÖ•Âäõ„Ç®„É™„Ç¢ */
.chatInputArea {
    background-color: #ffffff;
    padding: 1rem;
    border-top: 1px solid #e4e7ea;
    align-items: flex-end;
    flex-shrink: 0;
}

/* „ÉÜ„Ç≠„Çπ„Éà„Ç®„É™„Ç¢„ÅÆ„Çπ„Çø„Ç§„É´Ë™øÊï¥ */
.chatTextArea .sapMTextAreaInner {
    border: 2px solid #e4e7ea;
    background-color: #ffffff;
}

.chatTextArea .sapMTextAreaInner:focus-within {
    border-color: #0073e6;
}

/* ÈÄÅ‰ø°„Éú„Çø„É≥ */
.chatSendButton {
    min-height: 40px;
    border-radius: 20px;
    margin-left: 0.5rem;
}

/* „Ç¢„Ç§„Ç≥„É≥Ë™øÊï¥ */
.chatIcon {
    font-size: 1.2rem;
    margin-top: 2px;
}

.chatBubbleAssistant .chatIcon {
    margin-right: 0.5rem;
}

.chatBubbleUser .chatIcon {
    margin-left: 0.5rem;
}

/* IconTabBar „ÅÆ„Éë„Éá„Ç£„É≥„Ç∞ÂâäÈô§ */
.sapMITB {
    padding: 0;
}

.sapMITBContent {
    padding: 0;
    background-color: transparent;
}

/* „É¨„Çπ„Éù„É≥„Ç∑„ÉñÂØæÂøú */
@media (max-width: 768px) {
    .chatBubbleAssistant,
    .chatBubbleUser {
        max-width: 85%;
    }
    
    .chatContainer {
        height: calc(100vh - 80px);
    }
    
    .chatScrollContainer {
        min-height: 300px;
    }
    
    .chatSendButton .sapMBtnInner .sapMBtnContent {
        font-size: 0;
    }
    
    .chatSendButton .sapMBtnIcon {
        margin-right: 0;
    }
    
    .thinkingProcessContent {
        max-width: 85%;
    }
    
    .thinkingLabel {
        min-width: 80px;
        margin-right: 0.5rem;
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;„ÉÅ„É£„ÉÉ„Éà UI „Åã„Çâ Python API „Å∏„É™„ÇØ„Ç®„Çπ„Éà„ÇíËª¢ÈÄÅ„Åô„Çã„Åü„ÇÅ„ÄÅ„Éó„É≠„Ç≠„Ç∑„Éü„Éâ„É´„Ç¶„Çß„Ç¢„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇ„Åæ„Åö‰æùÂ≠òÈñ¢‰øÇ„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm install ui5-middleware-simpleproxy --save-dev&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;„Åù„Åó„Å¶ my-ai-agent-ui/package.json „Å´Ê¨°„ÅÆË®≠ÂÆö„ÇíËøΩË®ò„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;...
  "main": "webapp/index.html",
  "devDependencies": {
   (ÁúÅÁï•)
  },
  /* „Åì„Åì„Åã„Çâ
  "ui5": {
  "dependencies": [
    "ui5-middleware-simpleproxy"
  „ÄÄ„ÄÄ]
  },
„ÄÄ„Åì„Åì„Åæ„Åß */
  "scripts": {
....&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;„Åì„Çå„Åß„ÉÅ„É£„ÉÉ„Éà UI „Åã„Çâ„ÅÆ /api „É™„ÇØ„Ç®„Çπ„Éà„Åå„É≠„Éº„Ç´„É´„ÅÆ Python API „Å∏Ëª¢ÈÄÅ„Åï„Çå„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-485817535"&gt;5 | Fiori „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ„ÉÜ„Çπ„Éà&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;„É≠„Éº„Ç´„É´Áí∞Â¢É„Åß„Ç¢„Éó„É™„Å® API „ÇíÂêåÊôÇ„Å´Ëµ∑Âãï„Åó„ÄÅÂÆüÈöõ„Å´„ÉÅ„É£„ÉÉ„ÉàÊ©üËÉΩ„ÅåÂãï‰Ωú„Åô„Çã„ÅãÁ¢∫Ë™ç„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;„Åæ„Åö„ÄÅmy-ai-agent-api „Éá„Ç£„É¨„ÇØ„Éà„É™„Åß‰ª•‰∏ã„ÅÆ„Ç≥„Éû„É≥„Éâ„ÇíÂÆüË°å„Åó„Å¶ Python API „ÇíËµ∑Âãï„Åó„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;gunicorn -w 1 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:${PORT:-8000}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;„Åæ„Åü„ÄÅÂà•„ÅÆ„Çø„Éº„Éü„Éä„É´„ÇíÈñã„Åç„ÄÅmy-ai-agent-ui „ÅÆ„É´„Éº„Éà„ÅßÊ¨°„ÅÆ„Ç≥„Éû„É≥„Éâ„ÇíÂÆüË°å„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-12 at 21.19.19.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273612i786F540B114ADE5F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-12 at 21.19.19.png" alt="Screenshot 2025-06-12 at 21.19.19.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;„É≠„Ç∞„Å´Ë°®Á§∫„Åï„Çå„Åü URLÔºàÈÄöÂ∏∏„ÅØ &lt;A href="http://localhost:8080Ôºâ" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080Ôºâ&lt;/A&gt;„Çí„Éñ„É©„Ç¶„Ç∂„ÅßÈñã„Åç„ÄÅ„ÉÅ„É£„ÉÉ„ÉàÂÖ•ÂäõÊ¨Ñ„Å´„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ„Å£„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇAI „Ç®„Éº„Ç∏„Çß„É≥„Éà„Åã„ÇâËøîÁ≠î„ÅåË°®Á§∫„Åï„Çå„Çå„Å∞ÊàêÂäü„Åß„ÅôÔºÅ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-12 at 21.22.04.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273613i2DA8C44B226327FA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-12 at 21.22.04.png" alt="Screenshot 2025-06-12 at 21.22.04.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;„ÉÅ„É£„ÉÉ„ÉàÁîªÈù¢„ÅÆ &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;„ÉÅ„É£„ÉÉ„Éà„Çí„ÇØ„É™„Ç¢&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®Â±•Ê≠¥„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„ÄÅ„Äå„ÉÅ„É£„ÉÉ„Éà„Çí„ÇØ„É™„Ç¢„Åó„Åæ„Åó„Åü„Äç„Å®Á¢∫Ë™ç„Åß„Åç„Åæ„Åô„ÄÇÊñ∞„Åó„ÅÑ‰ºöË©±„ÇíÂïèÈ°å„Å™„ÅèÂßã„ÇÅ„Çâ„Çå„Çã„ÅãÁ¢∫Ë™ç„Åó„Åæ„Åó„Çá„ÅÜÔºÅ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-12 at 21.22.42.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273617iCFFD818A642C66C2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-12 at 21.22.42.png" alt="Screenshot 2025-06-12 at 21.22.42.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-289304030"&gt;6 | „ÉÅ„É£„É¨„É≥„Ç∏ ‚Äì „ÉÜ„Ç≠„Çπ„Éà„Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Éú„Çø„É≥„ÇíËøΩÂä†„Åó„Çà„ÅÜ&lt;/H3&gt;&lt;P&gt;„ÉÜ„Ç≠„Çπ„Éà„ÇíËøΩÂä†„Åß„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Å¶„ÄÅËøΩÂä†„Åó„Åü„Éâ„Ç≠„É•„É°„É≥„Éà„ÇíË∏è„Åæ„Åà„Åü AI Agent „Å®„ÅÆ„ÇÑ„Çä„Å®„Çä„ÇíÂÆüÁèæ„Åó„Å¶Ë¶ã„Åæ„Åó„Çá„ÅÜ„ÄÇ„Å™„Åä„ÄÅ„Åì„ÅÆ„ÉÅ„É£„É¨„É≥„Ç∏„ÅØÂâçÂõû„ÅÆ„ÉÅ„É£„É¨„É≥„Ç∏„ÇíÂÆüÊñΩ„Åó„Å¶„ÅÑ„Å™„ÅÑ„Å®ÂÆüË£Ö„Åß„Åç„Å™„ÅÑ„ÅÆ„ÅßÊ≥®ÊÑè„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;„ÉÅ„É£„ÉÉ„Éà UI „ÅÆ„Éò„ÉÉ„ÉÄ„Éº„Å´ &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;.txt „Éï„Ç°„Ç§„É´Â∞ÇÁî®„ÅÆ„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Éú„Çø„É≥&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „ÇíËøΩÂä†„Åó„ÄÅÈÅ∏Êäû„Åó„Åü„Éï„Ç°„Ç§„É´„Çí Python API „Å∏ÈÄÅ‰ø°„Åó„ÄÅ„Çµ„Éº„ÉêÂÅ¥„Åß„Éï„Ç°„Ç§„É´„Çí„ÉÅ„É£„É≥„ÇØÂåñ„Åó„Å¶‰øùÂ≠ò„Åô„Çã„Çà„ÅÜ„Å´„Åó„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;ÈÄî‰∏≠ÁµåÈÅé„Çí„Çè„Åã„Çä„ÇÑ„Åô„Åè„Åô„Çã„Åü„ÇÅ„ÄÅ„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ‰∏≠„ÅØ BusyIndicator „ÅßÁîªÈù¢„Çí„Éñ„É≠„ÉÉ„ÇØ„Åô„Çã„Çà„ÅÜ„Å´„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ChatEntity.controller.js „ÅßÊ¨°„ÅÆ 3 ÁÇπ„ÇíËøΩÂä†„Åó„Åæ„ÅôÔºà„Éë„Çπ„ÇÑÂêçÂâçÁ©∫Èñì„ÅØÁí∞Â¢É„Å´Âêà„Çè„Åõ„Å¶„Åè„Å†„Åï„ÅÑÔºâ:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;ÂÜíÈ†≠„ÅÆ sap/ui/core/BusyIndicator „Ç§„É≥„Éù„Éº„Éà&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;onFileChange „Éè„É≥„Éâ„É© ‚Äì „Éï„Ç°„Ç§„É´Á®ÆÂà•„ÉÅ„Çß„ÉÉ„ÇØ &amp;amp; „Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂëº„Å≥Âá∫„Åó&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;_uploadFile „É°„ÇΩ„ÉÉ„Éâ ‚Äì fetch + FormData „Åß API /agent/upload „Å∏ POST&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;/** „Éï„Ç°„Ç§„É´ÈÅ∏ÊäûÊôÇ */
async onFileChange(oEvent) {
  const oFileUploader = oEvent.getSource();
  const file = (oEvent.getParameter("files") || [])[0];
  if (!file) return;
  if (!file.name.endsWith(".txt")) {
    MessageToast.show("txtÂΩ¢Âºè„ÅÆ„Éï„Ç°„Ç§„É´„ÅÆ„Åø„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂèØËÉΩ„Åß„Åô„ÄÇ");
    oFileUploader.clear();
    return;
  }
  await this._uploadFile(file);
  oFileUploader.clear();
},

/** „Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ */
async _uploadFile(file) {
  const ui = this.getView().getModel("ui");
  ui.setProperty("/busy", true);
  BusyIndicator.show(0);
  try {
    const fd = new FormData();
    fd.append("file", file);
    const res = await fetch(`${ENDPOINT}/agent/upload`, {
      method: "POST",
      body: fd
    });
    if (!res.ok) throw new Error(await res.text());
    const { filename, chunks_created } = await res.json();
    const files = ui.getProperty("/uploadedFiles") || [];
    ui.setProperty("/uploadedFiles", [...files, {
      name: filename,
      chunks: chunks_created,
      uploadedAt: new Date()
    }]);
    MessageToast.show(`"${filename}" „Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Åæ„Åó„ÅüÔºà${chunks_created} „ÉÅ„É£„É≥„ÇØ‰ΩúÊàêÔºâ`);
  } catch (err) {
    console.error(err);
    MessageToast.show(`„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Ç®„É©„Éº: ${err.message}`);
  } finally {
    ui.setProperty("/busy", false);
    BusyIndicator.hide();
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Ê¨°„Å´„ÄÅ„Éò„ÉÉ„ÉÄ„Éº„Å∏ FileUploader „Å® Clear „Éú„Çø„É≥„Çí‰∏¶„Åπ„Åæ„Åô„ÄÇFileUploader „ÅØ buttonOnly="true" „Å´„Åó„Å¶„ÄÅ„Ç¢„Ç§„Ç≥„É≥„Éú„Çø„É≥„Å´„Åô„Çã„ÅÆ„Åå„Ç≥„ÉÑ„Åß„Åô„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;f:actions&amp;gt;
  &amp;lt;u:FileUploader id="fileUploader"
                  name="file"
                  placeholder="„Éï„Ç°„Ç§„É´„ÇíÈÅ∏Êäû..."
                  fileType="txt"
                  change="onFileChange"
                  buttonText=""
                  buttonOnly="true"
                  icon="sap-icon://upload"
                  class="fileUploaderButton" /&amp;gt;
  &amp;lt;Button id="clearChatButton"
          text="„ÉÅ„É£„ÉÉ„Éà„Çí„ÇØ„É™„Ç¢"
          icon="sap-icon://refresh"
          type="Emphasized"
          press="onClearChatPress" /&amp;gt;
&amp;lt;/f:actions&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;„Åï„Çâ„Å´„Éò„ÉÉ„ÉÄ„Éº‰∏ãÈÉ®„Å´&amp;nbsp;&lt;SPAN&gt;"„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÊ∏à„Éï„Ç°„Ç§„É´‰∏ÄË¶ß" „ÇíÂá∫„Åô„Åì„Å®„Åß„ÄÅ„Å©„ÅÆ„Éï„Ç°„Ç§„É´„Åå‰Ωï„ÉÅ„É£„É≥„ÇØ„Å´ÂàÜÂâ≤„Åï„Çå„Åü„Åã„ÇíË¶ñË¶öÂåñ„Åß„Åç„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;HBox id="fileUploadAreaBox"
      visible="{= ${ui&amp;gt;/uploadedFiles}.length &amp;gt; 0}"&amp;gt;
  &amp;lt;Text text="ËøΩÂä†„Åß„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Åü„Éï„Ç°„Ç§„É´:" /&amp;gt;
  &amp;lt;HBox items="{ui&amp;gt;/uploadedFiles}"&amp;gt;
    &amp;lt;ObjectStatus text="{ui&amp;gt;name}" icon="sap-icon://document-text" /&amp;gt;
  &amp;lt;/HBox&amp;gt;
&amp;lt;/HBox&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-92790525"&gt;&lt;SPAN&gt;‰∏äÁ¥ö„ÉÅ„É£„É¨„É≥„Ç∏ ‚Äì „É™„Çª„ÉÉ„Éà„Éú„Çø„É≥&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;„Éï„Ç°„Ç§„É´„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Å¶„ÅÑ„Åè„Å®„Éô„ÇØ„Éà„É´ DB „Åå„Å©„Çì„Å©„ÇìËÜ®„Çâ„Åø„Åæ„Åô„ÄÇ„ÉÜ„Çπ„ÉàÁî®„Å´ &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;„Éá„Éº„Çø„Éô„Éº„Çπ„Çí‰∏ÄÊã¨„É™„Çª„ÉÉ„Éà&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „Åô„Çã„Éú„Çø„É≥„ÇíËøΩÂä†„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;API ÂÅ¥&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;SPAN&gt;/agent/delete&lt;/SPAN&gt;&lt;SPAN&gt; „ÇíÂÆüË£ÖÔºà„Éí„É≥„Éà: Part4 „Å´„Åä„Åë„Çã DB „ÇíÂàùÊúüÂåñ„Åô„Çã„Ç≥„Éº„ÉâÔºâ„ÄÇ&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Controller&lt;/STRONG&gt;&lt;SPAN&gt;: &lt;/SPAN&gt;onDeletePress&lt;SPAN&gt; „ÇíÂÆüË£Ö„Åó„ÄÅ&lt;/SPAN&gt;/agent/delete&lt;SPAN&gt; „ÇíÂëº„Å≥Âá∫„Åó„Å¶ UI „ÅÆ„Éï„Ç°„Ç§„É´‰∏ÄË¶ß„ÇÇÁ©∫„Å´„Åô„Çã„ÄÇ&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;View&lt;/STRONG&gt;&lt;SPAN&gt;: „Éò„ÉÉ„ÉÄ„Éº„ÅÆ„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Éú„Çø„É≥„Å®„ÇØ„É™„Ç¢„Éú„Çø„É≥„ÅÆÈñì„Å´ Delete „Éú„Çø„É≥„ÇíÈÖçÁΩÆ„ÄÇ&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;ÂÆüË£Ö„Éí„É≥„Éà&lt;BR /&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;UI Model „ÅÆ &lt;/SPAN&gt;&lt;SPAN&gt;/uploadedFiles&lt;/SPAN&gt;&lt;SPAN&gt; „ÇíÁ©∫ÈÖçÂàó &lt;/SPAN&gt;&lt;SPAN&gt;[]&lt;/SPAN&gt;&lt;SPAN&gt; „Å´„Åô„Çã„Å®„ÄÅ„Éï„Ç°„Ç§„É´‰∏ÄË¶ß„Ç®„É™„Ç¢„ÅåËá™ÂãïÁöÑ„Å´ÈùûË°®Á§∫„Å´„Å™„Çä„Åæ„Åô„ÄÇ‚ÄÉ&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-13 at 11.32.45.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273824iD07400D3C3D598BB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-13 at 11.32.45.png" alt="Screenshot 2025-06-13 at 11.32.45.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--178954349"&gt;7 | Ê¨°Âõû‰∫àÂëä&lt;/H3&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-8-cloudfoundry-%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4/ba-p/14126865" target="_self"&gt;Part 8 CloudFoundry „Å´„Éá„Éó„É≠„Ç§&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Part‚ÄØ8 „Åß„ÅØ„ÄÅÂÆåÊàê„Åó„Åü„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Çí Cloud Foundry „Å∏„Éá„Éó„É≠„Ç§„Åó„Åæ„Åô„ÄÇUI „ÅØ mta build ‚Üí cf deploy„ÄÅPython „Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„ÅØ manifest.yaml „Çí‰Ωø„Å£„Å¶ cf push ‚Äï 2 Êú¨Á´ã„Å¶„Åß ‚ÄúÁßíÈÄü„Éá„Éó„É≠„Ç§‚Äù „Å´ÊåëÊà¶„Åó„Åæ„Åô„ÄÇ„ÅäÊ•Ω„Åó„Åø„Å´ÔºÅ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-327771873" id="toc-hId--962273868"&gt;&lt;SPAN&gt;&lt;STRONG&gt;ÂÖçË≤¨‰∫ãÈ†Ö&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;SPAN&gt;Êú¨„Éñ„É≠„Ç∞„Å´Ë®òËºâ„Åï„Çå„ÅüË¶ãËß£„Åä„Çà„Å≥ÊÑèË¶ã„ÅØ„Åô„Åπ„Å¶ÁßÅÂÄã‰∫∫„ÅÆ„ÇÇ„ÅÆ„Åß„ÅÇ„Çä„ÄÅÁßÅ„ÅÆÂÄã‰∫∫ÁöÑ„Å™Á´ãÂ†¥„ÅßÁô∫‰ø°„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇSAP „ÅØÊú¨„Éñ„É≠„Ç∞„ÅÆÂÜÖÂÆπ„Å´„Å§„ÅÑ„Å¶‰∏ÄÂàá„ÅÆË≤¨‰ªª„ÇíË≤†„ÅÑ„Åæ„Åõ„Çì„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-7-sapui5-%E3%81%A7%E3%83%81%E3%83%A3%E3%83%83%E3%83%88ui-%E3%82%92%E6%A7%8B%E7%AF%89/ba-p/14124854"/>
    <published>2025-06-13T16:08:06.307000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-7-building-the-chat-ui-with/ba-p/14127011</id>
    <title>üöÄ SAP AI Core Agent QuickLaunch Series üöÄ - Part 7: Building the Chat UI with SAPUI5</title>
    <updated>2025-06-13T16:08:09.778000+02:00</updated>
    <author>
      <name>Ryota_Ito</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1390198</uri>
    </author>
    <content>&lt;P class=""&gt;Generative&amp;nbsp;AI has leapt from research papers to daily business reality‚Äî and SAP is surfing that wave at full speed.&amp;nbsp;In&amp;nbsp;this hands‚Äëon series, I‚Äôll show you how to spin up a custom AI agent on SAP&amp;nbsp;AI&amp;nbsp;Core in minutes, then grow it into a production‚Äëready asset‚Äîwithout drowning in theory.&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Notice&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Êó•Êú¨Ë™ûÁâà„ÅØ&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-7-sapui5-%E3%81%A7%E3%83%81%E3%83%A3%E3%83%83%E3%83%88ui-%E3%82%92%E6%A7%8B%E7%AF%89/ba-p/14124854" target="_self"&gt;„Åì„Å°„Çâ&lt;/A&gt;„Åß„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1967371303" id="toc-hId-1990576347"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":open_book:"&gt;üìñ&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;What You‚Äôll Learn in This Series&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;How to Run a Custom AI Agent on SAP AI Core in Seconds&lt;/LI&gt;&lt;LI&gt;Implementation Using LangChain, Google Search Tool, and RAG&lt;/LI&gt;&lt;LI&gt;Steps to Convert the AI Agent into a REST API, Integrate It into an SAPUI5/Fiori UI, and Deploy to Cloud Foundry&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Time Commitment&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Each part is designed to be completed in&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;10‚Äì15&amp;nbsp;minutes&lt;/STRONG&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1770857798" id="toc-hId-1794062842"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;üó∫&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Ô∏è Series Roadmap&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part0-prologue/ba-p/14104823" target="_self"&gt;Part 0 Prologue&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-1-env-setup-sap-aicore-amp-ai/ba-p/14104825" target="_self"&gt;Part 1 Env Setup: SAP AICore &amp;amp; AI Launchpad&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-2-building-a-chat-model-with/ba-p/14104832" target="_self"&gt;Part 2 Building a Chat Model with&amp;nbsp;LangChain&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-3-agent-tools-integrating-google/ba-p/14104844" target="_self"&gt;Part 3 Agent&amp;nbsp;Tools: Integrating Google&amp;nbsp;Search&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-4-rag-basics-hana-cloud/ba-p/14083287" target="_self"&gt;Part4 RAG Basics‚ë† HANA Cloud VectorEngine &amp;amp; Embedding&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-5-rag-basics-building-retriever/ba-p/14113412" target="_self"&gt;Part 5 RAG Basics ‚ë°: Building Retriever Tool&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-6-converting-the-ai-agent-into-a/ba-p/14121055" target="_self"&gt;Part 6: Converting the AI Agent into a REST API&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-7-building-the-chat-ui-with/ba-p/14127011" target="_self"&gt;Part 7: Building the Chat UI with SAPUI5&lt;/A&gt;&amp;nbsp;[&lt;STRONG&gt;current blog&lt;/STRONG&gt;]&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-8-deploying-to-cloud-foundry/ba-p/14127673" target="_self"&gt;Part 8: Deploying to Cloud Foundry&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Subsequent blogs will be published soon.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;P&gt;If you enjoyed this post, please give it a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;kudos&lt;/STRONG&gt;! Your support really motivates me. Also, if there‚Äôs anything you‚Äôd like to know more about, feel free to leave a comment!&lt;/P&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1316178855" id="toc-hId-1339383899"&gt;Building the Chat UI with SAPUI5&lt;/H2&gt;&lt;H3 id="toc-hId-1248748069" id="toc-hId-1271953113"&gt;&lt;SPAN&gt;1&amp;nbsp;| Introduction&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;In this chapter, we‚Äôll make it possible to invoke the AI agent you built in the previous chapters from a chat UI based on SAP UI5/Fiori. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP UI5 is a UI framework provided by SAP that lets you develop modern, enterprise-grade web applications in very little time. In particular, by using SAP Business Application Studio (BAS), you can auto-generate your project‚Äôs structure from Fiori templates‚Äîso you don‚Äôt have to create directories or configuration files by hand.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052234564" id="toc-hId-1075439608"&gt;&lt;SPAN&gt;2 | Prerequisites&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;BTP sub-account&lt;/LI&gt;&lt;LI&gt;SAP AI Core instance&lt;/LI&gt;&lt;LI&gt;SAP AI LaunchPad Subscription&lt;/LI&gt;&lt;LI&gt;Python 3.13 and pip&lt;/LI&gt;&lt;LI&gt;VSCode, BAS or any IDE&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note for the Trial Environment&lt;/STRONG&gt;&lt;BR /&gt;The HANA Cloud instance in the Trial enviroment automatically shuts down every night. If your work spans past midnight, please restart the instance the following day.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-878926103"&gt;&lt;SPAN&gt;3 | Preparing the Fiori Application&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;In SAP UI development, we strongly recommend leveraging BAS‚Äôs template feature. By basing your project on the folder structure and configuration files it generates, you can quickly set up your Fiori app‚Äôs manifest (mta.yaml) and module structure without manual effort.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In BAS, click Create Dev Space and select the &lt;STRONG&gt;SAP Fiori&lt;/STRONG&gt; template. Since we‚Äôll also want to run the Python API you created in the previous chapter locally, choose &lt;STRONG&gt;Python Tools&lt;/STRONG&gt; under &lt;STRONG&gt;Additional SAP Extensions&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-10 at 16.58.38.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273872iEEFB01A1D8FAB57D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-10 at 16.58.38.png" alt="Screenshot 2025-06-10 at 16.58.38.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click the hamburger menu in the upper-left corner and choose &lt;STRONG&gt;File &amp;gt; New Project From Template&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-07 at 15.54.13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273873iD632B0B7C0148C4B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-07 at 15.54.13.png" alt="Screenshot 2025-06-07 at 15.54.13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For Template Selection, choose &lt;STRONG&gt;Basic&lt;/STRONG&gt;.‚ÄÉ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-07 at 15.53.57.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273876i71A5F054481CD4E1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-07 at 15.53.57.png" alt="Screenshot 2025-06-07 at 15.53.57.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In Data Source and Service Selection, select &lt;STRONG&gt;None&lt;/STRONG&gt;, since the UI will fetch its data from the Python API.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-07 at 15.55.09.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273877i655AED45D72A76C9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-07 at 15.55.09.png" alt="Screenshot 2025-06-07 at 15.55.09.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Under Entity Selection, enter &lt;STRONG&gt;ChatEntity&lt;/STRONG&gt; for the Entity name.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-07 at 15.57.51.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273878i756ED500F496DA23/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-07 at 15.57.51.png" alt="Screenshot 2025-06-07 at 15.57.51.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure Project Attributes as follows, and set Add deployment configuration to &lt;STRONG&gt;Yes&lt;/STRONG&gt;:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Item&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Value&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;Module Name&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;my-ai-agent-ui&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;Application Title&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;My AI Chat&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;Description&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&amp;nbsp;Chat UI for AI Agent&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-11 at 13.59.53.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273881i7E7C8CBE3BD9A268/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-11 at 13.59.53.png" alt="Screenshot 2025-06-11 at 13.59.53.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In Deployment Configuration, set the options as directed by the template:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Item&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Value&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;Target&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;Cloud Foundry&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Destination&lt;/TD&gt;&lt;TD width="50%"&gt;&amp;nbsp;None&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Add Router Module&lt;/TD&gt;&lt;TD width="50%"&gt;&amp;nbsp;Add Application to Managed Application Router&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-11 at 14.00.18.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273883i566F77C5A8856387/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-11 at 14.00.18.png" alt="Screenshot 2025-06-11 at 14.00.18.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;If you don‚Äôt see the Router Module option after setting Target to CF, switch Target to ABAP once, then back to Cloud Foundry‚Äîthe Router Module option will appear correctly.&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Finally, deploy the Python API and verify that it‚Äôs running. The structure will look like this:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;PROJECTS
‚îú‚îÄ‚îÄ my-ai-agent-ui/
‚îî‚îÄ‚îÄ my-ai-agent-api/
    ‚îú‚îÄ‚îÄ main.py
    ‚îú‚îÄ‚îÄ requirements.txt
    ‚îî‚îÄ‚îÄ .env&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In the my-ai-agent-api folder, create and activate a virtual environment, then verify that the local server starts by running:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;gunicorn -w 1 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:${PORT:-8000}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;With that, your Fiori application setup is complete and ready to go!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-682412598"&gt;4 | Refine the Fiori Application&lt;/H3&gt;&lt;P&gt;With that, your Fiori application setuUsing the generated Fiori project as a foundation, let‚Äôs adjust the code so that the chat UI can communicate with the AI Agent.&lt;/P&gt;&lt;P&gt;First, implement the controller (my-ai-agent-ui/webapp/controller/ChatEntity.controller.js) as follows:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
  "sap/ui/core/mvc/Controller",
  "sap/ui/model/json/JSONModel",
  "sap/m/MessageToast",
  "sap/ui/core/BusyIndicator"
], function (Controller, JSONModel, MessageToast, BusyIndicator) {
  "use strict";

  // Switch endpoint based on environment
  const ENDPOINT = (
    ["localhost", "applicationstudio"].some(h =&amp;gt; window.location.hostname.includes(h)) ||
    window.location.port === "8080"
  ) ? "" : "https://my-ai-agent-api-relaxed-raven-ie.cfapps.us10-001.hana.ondemand.com";

  return Controller.extend("myaiagentui.controller.ChatEntity", {
    /** Initialization */
    onInit() {
      this.getView().setModel(new JSONModel({
        busy: false,
        txtInput: "",
        uploadedFiles: [],
        messages: [{
          role: "assistant",
          content: "Hello! I‚Äôm a chatbot. Is there anything I can help you with?",
          hasThinkingProcess: false
        }]
      }), "ui");

      this.byId("fileUploader")?.setUploadUrl(`${ENDPOINT}/agent/upload`);
    },

    /** Clear chat history */
    onClearChatPress() {
      this.getView().getModel("ui").setProperty("/messages", [{
        role: "assistant",
        content: "Hello! I‚Äôm a chatbot. Is there anything I can help you with?",
        hasThinkingProcess: false
      }]);
      MessageToast.show("Chat cleared");
    },

    /** Send message */
    async onBtnChatbotSendPress() {
      const ui = this.getView().getModel("ui");
      const input = (ui.getProperty("/txtInput") || "").trim();
      if (!input) return;

      const msgs = ui.getProperty("/messages");
      msgs.push({ role: "user", content: input });
      ui.setProperty("/messages", msgs);
      ui.setProperty("/txtInput", "");
      ui.setProperty("/busy", true);

      try {
        const { output, intermediate_steps = [] } = await this._apiChatCompletion(input);
        msgs.push({
          role: "assistant",
          content: output,
          hasThinkingProcess: Boolean(intermediate_steps.length),
          thinkingProcess: intermediate_steps.map((s, i) =&amp;gt; ({
            ...s,
            stepIndex: i + 1,
            observationTruncated: s.observation?.slice(0, 100) + (s.observation?.length &amp;gt; 100 ? "..." : ""),
            observationFull: s.observation,
            isObservationExpanded: false,
            hasLongObservation: (s.observation?.length || 0) &amp;gt; 100
          })),
          isExpanded: false
        });
        ui.setProperty("/messages", msgs);
        this._scrollToBottom();
      } catch (err) {
        console.error(err);
        MessageToast.show(`Error: ${err.message}`);
      } finally {
        ui.setProperty("/busy", false);
      }
    },

    /** Toggle thinking process display */
    onToggleThinkingProcess(oEvent) {
      const ctx = oEvent.getSource()?.getBindingContext("ui");
      if (ctx) this._toggleFlag(ctx, "isExpanded");
    },

    /** Toggle observation display */
    onToggleObservation(oEvent) {
      const ctx = oEvent.getSource()?.getBindingContext("ui");
      if (ctx) this._toggleFlag(ctx, "isObservationExpanded");
    },

    /** Toggle a boolean flag */
    _toggleFlag(ctx, flag) {
      const ui = this.getView().getModel("ui");
      const path = ctx.getPath();
      ui.setProperty(`${path}/${flag}`, !ui.getProperty(`${path}/${flag}`));
    },

    /** Scroll chat to bottom */
    _scrollToBottom() {
      setTimeout(() =&amp;gt; {
        const sc = this.byId("chatScrollContainer");
        const items = sc?.getContent()[0].getItems();
        if (items?.length) sc.scrollToElement(items[items.length - 1]);
      }, 100);
    },

    /** Call AI chat API */
    async _apiChatCompletion(query) {
      const res = await fetch(`${ENDPOINT}/agent/chat`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ query })
      });
      if (!res.ok) throw new Error(`Server error (${res.status}): ${await res.text()}`);
      return res.json();
    }
  });
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Next, update the View file (my-ai-agent-ui/webapp/view/ChatEntity.view.xml) as follows:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;mvc:View controllerName="myaiagentui.controller.ChatEntity"
    xmlns:core="sap.ui.core"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns:f="sap.f"
    xmlns:u="sap.ui.unified"
    displayBlock="true"
    xmlns="sap.m"&amp;gt;

    &amp;lt;f:DynamicPage id="mainDynamicPage" stickySubheaderProvider="iconTabBar" class="sapUiNoContentPadding"&amp;gt;
        &amp;lt;f:title&amp;gt;
            &amp;lt;f:DynamicPageTitle id="mainDynamicTitle"&amp;gt;
                &amp;lt;f:heading&amp;gt;
                    &amp;lt;Title id="pageTitle" text="AI Chat with Fiori"/&amp;gt;
                &amp;lt;/f:heading&amp;gt;
                &amp;lt;f:actions&amp;gt;
                    &amp;lt;Button id="clearChatButton" 
                            text="Clear Chat" 
                            icon="sap-icon://refresh"
                            type="Emphasized"
                            press="onClearChatPress"/&amp;gt;
                &amp;lt;/f:actions&amp;gt;
            &amp;lt;/f:DynamicPageTitle&amp;gt;
        &amp;lt;/f:title&amp;gt;

        &amp;lt;f:content&amp;gt;
            &amp;lt;!-- Main chat UI area --&amp;gt;
            &amp;lt;VBox id="chatMainAreaBox" class="sapUiNoContentPadding chatMainArea"&amp;gt;
                &amp;lt;IconTabBar id="iconTabBar"
                            class="sapUiNoContentPadding"
                            stretchContentHeight="true"
                            expanded="true"
                            expandable="false"&amp;gt;

                    &amp;lt;items&amp;gt;
                        &amp;lt;IconTabFilter id="chatbotTab" text="Chatbot" class="sapUiNoContentPadding"&amp;gt;
                            &amp;lt;VBox id="chatContainerBox" class="chatContainer sapUiNoContentPadding"&amp;gt;
                                &amp;lt;!-- Chat messages area --&amp;gt;
                                &amp;lt;ScrollContainer id="chatScrollContainer"
                                               height="100%" 
                                               width="100%" 
                                               vertical="true" 
                                               focusable="true"
                                               class="chatScrollContainer"&amp;gt;
                                    &amp;lt;VBox id="chatMessagesBox" items="{ui&amp;gt;/messages}" class="chatMessagesContainer"&amp;gt;
                                        &amp;lt;VBox id="messageItemBox"&amp;gt;
                                            &amp;lt;!-- Assistant message --&amp;gt;
                                            &amp;lt;VBox id="assistantMessageVBox" visible="{= ${ui&amp;gt;role} === 'assistant'}"
                                                  class="chatMessageWrapper"&amp;gt;
                                                &amp;lt;HBox id="assistantMessageHBox" direction="Row" class="chatMessageRow"&amp;gt;
                                                    &amp;lt;HBox id="assistantMessageHBox1" backgroundDesign="Solid"
                                                          class="chatBubbleAssistant"&amp;gt;
                                                        &amp;lt;core:Icon id="assistantMessageIcon" decorative="true"
                                                                   src="sap-icon://ai"
                                                                   class="chatIcon"/&amp;gt;
                                                        &amp;lt;FormattedText id="assistantMessageFormattedText" htmlText="{ui&amp;gt;content}"/&amp;gt;
                                                    &amp;lt;/HBox&amp;gt;
                                                &amp;lt;/HBox&amp;gt;
                                                
                                                &amp;lt;!-- Thinking process accordion --&amp;gt;
                                                &amp;lt;HBox id="thinkingToggleBox" visible="{ui&amp;gt;hasThinkingProcess}" 
                                                      class="thinkingProcessContainer"&amp;gt;
                                                    &amp;lt;Button id="thinkingToggleButton" icon="{= ${ui&amp;gt;isExpanded} ? 'sap-icon://collapse' : 'sap-icon://expand' }"
                                                            text="Toggle Thinking Process"
                                                            type="Transparent"
                                                            press="onToggleThinkingProcess"
                                                            class="thinkingProcessToggle"/&amp;gt;
                                                &amp;lt;/HBox&amp;gt;
                                                
                                                &amp;lt;VBox id="thinkingVBox" visible="{= ${ui&amp;gt;isExpanded} &amp;amp;amp;&amp;amp;amp; ${ui&amp;gt;hasThinkingProcess} }"
                                                      class="thinkingProcessContent"&amp;gt;
                                                    &amp;lt;VBox id="thinkingVBox1" items="{ui&amp;gt;thinkingProcess}"&amp;gt;
                                                        &amp;lt;VBox id="thinkingStepBox" class="thinkingStepBox"&amp;gt;
                                                            &amp;lt;Title id="thinkingStepTitle"
                                                                   text="{= 'Step ' + ${ui&amp;gt;stepIndex} }" 
                                                                   level="H5" 
                                                                   class="thinkingStepTitle"/&amp;gt;
                                                        &amp;lt;VBox id="thinkingStepContent" class="thinkingStepContent"&amp;gt;
                                                            &amp;lt;HBox id="thinkingStepThought" class="thinkingStepItem"&amp;gt;
                                                                &amp;lt;Label id="ThoughtLabel" text="Thought:" design="Bold" class="thinkingLabel"/&amp;gt;
                                                                &amp;lt;Text id="ThoughtText" text="{ui&amp;gt;thought}" wrapping="true" class="thinkingText"/&amp;gt;
                                                            &amp;lt;/HBox&amp;gt;
                                                            &amp;lt;HBox id="thinkingStepAction" class="thinkingStepItem"&amp;gt;
                                                                &amp;lt;Label id="ActionLabel" text="Action:" design="Bold" class="thinkingLabel"/&amp;gt;
                                                                &amp;lt;Text id="ActionText" text="{ui&amp;gt;action}" class="thinkingText"/&amp;gt;
                                                            &amp;lt;/HBox&amp;gt;
                                                            &amp;lt;HBox id="thinkingStepInput" class="thinkingStepItem"&amp;gt;
                                                                &amp;lt;Label id="InputLabel" text="Input:" design="Bold" class="thinkingLabel"/&amp;gt;
                                                                &amp;lt;Text id="InputText" text="{ui&amp;gt;action_input}" class="thinkingText"/&amp;gt;
                                                            &amp;lt;/HBox&amp;gt;
                                                            &amp;lt;HBox id="thinkingStepObservation" class="thinkingStepItem"&amp;gt;
                                                                &amp;lt;Label id="ObservationLabel" text="Observation:" design="Bold" class="thinkingLabel"/&amp;gt;
                                                                &amp;lt;VBox id="ObservationVBox" class="thinkingText"&amp;gt;
                                                                    &amp;lt;Text id="ObservationText" text="{= ${ui&amp;gt;isObservationExpanded} ? ${ui&amp;gt;observationFull} : ${ui&amp;gt;observationTruncated} }" 
                                                                          wrapping="true"/&amp;gt;
                                                                    &amp;lt;Link id="ObservationLink"
                                                                          text="{= ${ui&amp;gt;isObservationExpanded} ? 'Collapse' : 'Read more' }"
                                                                          visible="{ui&amp;gt;hasLongObservation}"
                                                                          press="onToggleObservation"
                                                                          class="observationToggleLink"/&amp;gt;
                                                                &amp;lt;/VBox&amp;gt;
                                                            &amp;lt;/HBox&amp;gt;
                                                        &amp;lt;/VBox&amp;gt;
                                                    &amp;lt;/VBox&amp;gt;
                                                    &amp;lt;/VBox&amp;gt;
                                                &amp;lt;/VBox&amp;gt;
                                            &amp;lt;/VBox&amp;gt;

                                            &amp;lt;!-- User message --&amp;gt;
                                            &amp;lt;HBox id="UserComment"
                                                  visible="{= ${ui&amp;gt;role} === 'user'}"
                                                  direction="RowReverse"
                                                  class="chatMessageRow"&amp;gt;
                                                &amp;lt;HBox id="UserCommentBox"
                                                      direction="RowReverse"
                                                      backgroundDesign="Solid"
                                                      class="chatBubbleUser sapThemeBrand-asBackgroundColor"&amp;gt;
                                                    &amp;lt;core:Icon id="UserCommentIcon"
                                                               decorative="true"
                                                               src="sap-icon://customer"
                                                               class="chatIcon sapThemeTextInverted"/&amp;gt;
                                                    &amp;lt;Text id="UserCommentText" class="sapThemeTextInverted" text="{ui&amp;gt;content}"/&amp;gt;
                                                &amp;lt;/HBox&amp;gt;
                                            &amp;lt;/HBox&amp;gt;
                                        &amp;lt;/VBox&amp;gt;
                                    &amp;lt;/VBox&amp;gt;
                                &amp;lt;/ScrollContainer&amp;gt;

                                &amp;lt;!-- Input area + send button --&amp;gt;
                                &amp;lt;HBox id="chatInputAreaBox" class="chatInputArea"&amp;gt;
                                    &amp;lt;TextArea id="chatInput" value="{ui&amp;gt;/txtInput}"
                                              width="100%"
                                              growing="true"
                                              placeholder="Type your message..."
                                              editable="{= !${ui&amp;gt;/busy}}"
                                              busyIndicatorDelay="0"
                                              class="chatTextArea"&amp;gt;
                                        &amp;lt;layoutData&amp;gt;
                                            &amp;lt;FlexItemData id="InputData" growFactor="1"/&amp;gt;
                                        &amp;lt;/layoutData&amp;gt;
                                    &amp;lt;/TextArea&amp;gt;

                                    &amp;lt;Button id="sendButton" class="chatSendButton"
                                            type="Emphasized"
                                            icon="sap-icon://paper-plane"
                                            text="Send"
                                            press="onBtnChatbotSendPress"
                                            busy="{ui&amp;gt;/busy}"
                                            busyIndicatorDelay="0"/&amp;gt;
                                &amp;lt;/HBox&amp;gt;
                            &amp;lt;/VBox&amp;gt;
                        &amp;lt;/IconTabFilter&amp;gt;
                    &amp;lt;/items&amp;gt;
                &amp;lt;/IconTabBar&amp;gt;
            &amp;lt;/VBox&amp;gt;
        &amp;lt;/f:content&amp;gt;
    &amp;lt;/f:DynamicPage&amp;gt;
&amp;lt;/mvc:View&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Additionally, for detailed UI design configuration, set up the styles in my-ai-agent-ui/webapp/css/style.css:&lt;/P&gt;&lt;pre class="lia-code-sample language-css"&gt;&lt;code&gt;/* Chat main area */
.chatMainArea {
    height: 100vh;
    min-height: 300px;
}

/* Chat container */
.chatContainer {
    display: flex;
    flex-direction: column;
    height: calc(90vh - 100px);
    padding: 0;
}

/* Chat scroll container */
.chatScrollContainer {
    flex: 1;
    min-height: 300px;
    background-color: #f8f9fa;
    border: none;
    border-radius: 0;
    padding: 0;
    margin: 0;
}

/* Chat messages container */
.chatMessagesContainer {
    padding: 1rem;
}

/* Chat message row */
.chatMessageRow {
    width: 100%;
    margin-bottom: 0.5rem;
}

/* Chat message wrapper */
.chatMessageWrapper {
    margin-bottom: 1rem;
}

/* Assistant chat bubble */
.chatBubbleAssistant {
    max-width: 70%;
    min-width: 100px;
    background-color: #ffffff;
    border: 1px solid #d0d7de;
    border-radius: 18px;
    padding: 12px 16px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    align-items: flex-start;
}

.chatBubbleAssistant .sapMFormattedText {
    word-wrap: break-word;
    line-height: 1.4;
}

/* User chat bubble */
.chatBubbleUser {
    max-width: 70%;
    min-width: 100px;
    border-radius: 18px;
    padding: 12px 16px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    align-items: flex-start;
}

.chatBubbleUser .sapMText {
    word-wrap: break-word;
    line-height: 1.4;
}

/* Thinking process container */
.thinkingProcessContainer {
    margin-top: 0.5rem;
    margin-left: 2.5rem;
}

/* Thinking process toggle button */
.thinkingProcessToggle {
    font-size: 0.875rem;
    color: #0073e6;
}

.thinkingProcessToggle:hover {
    background-color: rgba(0, 115, 230, 0.08) !important;
}

/* Thinking process content */
.thinkingProcessContent {
    margin-left: 2.5rem;
    margin-top: 0.5rem;
    max-width: 70%;
}

/* Individual thinking step box */
.thinkingStepBox {
    margin-bottom: 1.5rem;
    padding: 1rem;
    background-color: #f5f7fa;
    border: 1px solid #e4e7ea;
    border-radius: 8px;
}

.thinkingStepBox:last-child {
    margin-bottom: 0;
}

/* Thinking step title */
.thinkingStepTitle {
    color: #0a6ed1;
    margin-bottom: 0.75rem;
    font-size: 1rem;
}

/* Thinking step content wrapper */
.thinkingStepContent {
    padding-left: 0.5rem;
}

/* Thinking step item */
.thinkingStepItem {
    margin-bottom: 0.5rem;
    align-items: flex-start;
}

.thinkingStepItem:last-child {
    margin-bottom: 0;
}

/* Label within thinking process */
.thinkingLabel {
    min-width: 100px;
    margin-right: 1rem;
    color: #32363a;
    font-size: 0.875rem;
}

/* Text within thinking process */
.thinkingText {
    flex: 1;
    font-size: 0.875rem;
    color: #515456;
    line-height: 1.5;
}

/* ‚ÄúRead more‚Äù link for observations */
.observationToggleLink {
    margin-top: 0.25rem;
    font-size: 0.875rem;
}

/* Input area at bottom */
.chatInputArea {
    background-color: #ffffff;
    padding: 1rem;
    border-top: 1px solid #e4e7ea;
    align-items: flex-end;
    flex-shrink: 0;
}

/* TextArea styling */
.chatTextArea .sapMTextAreaInner {
    border: 2px solid #e4e7ea;
    background-color: #ffffff;
}

.chatTextArea .sapMTextAreaInner:focus-within {
    border-color: #0073e6;
}

/* Send button styling */
.chatSendButton {
    min-height: 40px;
    border-radius: 20px;
    margin-left: 0.5rem;
}

/* Icon adjustments */
.chatIcon {
    font-size: 1.2rem;
    margin-top: 2px;
}

.chatBubbleAssistant .chatIcon {
    margin-right: 0.5rem;
}

.chatBubbleUser .chatIcon {
    margin-left: 0.5rem;
}

/* Remove padding from IconTabBar */
.sapMITB {
    padding: 0;
}

.sapMITBContent {
    padding: 0;
    background-color: transparent;
}

/* Responsive tweaks */
@media (max-width: 768px) {
    .chatBubbleAssistant,
    .chatBubbleUser {
        max-width: 85%;
    }
    
    .chatContainer {
        height: calc(100vh - 80px);
    }
    
    .chatScrollContainer {
        min-height: 300px;
    }
    
    .chatSendButton .sapMBtnInner .sapMBtnContent {
        font-size: 0;
    }
    
    .chatSendButton .sapMBtnIcon {
        margin-right: 0;
    }
    
    .thinkingProcessContent {
        max-width: 85%;
    }
    
    .thinkingLabel {
        min-width: 80px;
        margin-right: 0.5rem;
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;To forward requests from the chat UI to the Python API, we‚Äôll add a proxy middleware. First, install the dependency:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm install ui5-middleware-simpleproxy --save-dev&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;And then, in my-ai-agent-ui/package.json, add the following section:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;  ...
  "main": "webapp/index.html",
  "devDependencies": {
    // (your existing devDependencies)
  },
  "ui5": {
    "dependencies": [
      "ui5-middleware-simpleproxy"
    ]
  },
  "scripts": {
    // (your existing scripts)
  }
  ...&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;And with this in place, any API requests from the chat UI will be forwarded to your local Python API.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-485899093"&gt;5 | Test the Fiori Application&lt;/H3&gt;&lt;P&gt;Run both the app and the API locally to confirm that the chat feature works as expected.&lt;/P&gt;&lt;P&gt;First, start the Python API in the my-ai-agent-api directory:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;gunicorn -w 1 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:${PORT:-8000}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Then, open a new terminal, navigate to the my-ai-agent-ui root folder, and run:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-12 at 21.19.19.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273884i307A80A66CFA7AA2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-12 at 21.19.19.png" alt="Screenshot 2025-06-12 at 21.19.19.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Finally, open the URL shown in the console (typically &lt;A href="http://localhost:8080" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080&lt;/A&gt;) in your browser, type a message into the chat input field, and send it. If you see a response from the AI agent, your setup is working correctly!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-13 at 17.04.40.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273885i16CBC4ECD6517EEF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-13 at 17.04.40.png" alt="Screenshot 2025-06-13 at 17.04.40.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;‚ÄÉ&lt;/P&gt;&lt;P&gt;When you click the Clear Chat button on the chat screen, the history will be reset and you‚Äôll see the confirmation ‚ÄúChat cleared.‚Äù Verify that you can start a new conversation without any issues!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-13 at 17.05.37.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273886iE17E3888E8A4565F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-13 at 17.05.37.png" alt="Screenshot 2025-06-13 at 17.05.37.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-289385588"&gt;6 | Challenge ‚Äì Add a Text-File Upload Button&lt;/H3&gt;&lt;P&gt;Let‚Äôs try uploading extra text and interacting with the AI Agent using the newly added documents. Be aware that you won‚Äôt be able to implement this challenge unless you‚Äôve already completed the previous chapter‚Äôs challenge.&lt;/P&gt;&lt;P&gt;Add a dedicated .txt file upload button to the header of the chat UI, send the selected file to the Python API, and have the server chunk and store the file. To make the process clearer for users, block the screen with a BusyIndicator while the upload is in progress.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Add the following three items to ChatEntity.controller.js (adjust the paths and namespaces as needed for your environment):&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Import sap/ui/core/BusyIndicator at the top&lt;/LI&gt;&lt;LI&gt;onFileChange handler ‚Äî performs file-type validation and triggers the upload&lt;/LI&gt;&lt;LI&gt;_uploadFile method ‚Äî uses fetch with FormData to POST to the /agent/upload API&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;/** When a file is selected */
async onFileChange(oEvent) {
  const oFileUploader = oEvent.getSource();
  const file = (oEvent.getParameter("files") || [])[0];
  if (!file) return;
  if (!file.name.endsWith(".txt")) {
    MessageToast.show("Only .txt files can be uploaded.");
    oFileUploader.clear();
    return;
  }
  await this._uploadFile(file);
  oFileUploader.clear();
},

/** File upload */
async _uploadFile(file) {
  const ui = this.getView().getModel("ui");
  ui.setProperty("/busy", true);
  BusyIndicator.show(0);
  try {
    const fd = new FormData();
    fd.append("file", file);
    const res = await fetch(`${ENDPOINT}/agent/upload`, {
      method: "POST",
      body: fd
    });
    if (!res.ok) throw new Error(await res.text());
    const { filename, chunks_created } = await res.json();
    const files = ui.getProperty("/uploadedFiles") || [];
    ui.setProperty("/uploadedFiles", [
      ...files,
      {
        name: filename,
        chunks: chunks_created,
        uploadedAt: new Date()
      }
    ]);
    MessageToast.show(`Uploaded "${filename}" (${chunks_created} chunks created)`);
  } catch (err) {
    console.error(err);
    MessageToast.show(`Upload error: ${err.message}`);
  } finally {
    ui.setProperty("/busy", false);
    BusyIndicator.hide();
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Next, place the FileUploader and Clear buttons side-by-side in the header. The key point is to set buttonOnly="true" on the FileUploader so it appears as an icon button.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;f:actions&amp;gt;
  &amp;lt;u:FileUploader id="fileUploader"
                  name="file"
                  placeholder="Select a file..."
                  fileType="txt"
                  change="onFileChange"
                  buttonText=""
                  buttonOnly="true"
                  icon="sap-icon://upload"
                  class="fileUploaderButton" /&amp;gt;
  &amp;lt;Button id="clearChatButton"
          text="Clear Chat"
          icon="sap-icon://refresh"
          type="Emphasized"
          press="onClearChatPress" /&amp;gt;
&amp;lt;/f:actions&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Finally, display an &lt;STRONG&gt;‚Äú&lt;/STRONG&gt;Uploaded Files&lt;STRONG&gt;‚Äù&lt;/STRONG&gt; list beneath the header so users can quickly see how many chunks each file was split into.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;HBox id="fileUploadAreaBox"
      visible="{= ${ui&amp;gt;/uploadedFiles}.length &amp;gt; 0}"&amp;gt;
  &amp;lt;Text text="Additional uploaded files:" /&amp;gt;
  &amp;lt;HBox items="{ui&amp;gt;/uploadedFiles}"&amp;gt;
    &amp;lt;ObjectStatus text="{ui&amp;gt;name}" icon="sap-icon://document-text" /&amp;gt;
  &amp;lt;/HBox&amp;gt;
&amp;lt;/HBox&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-92872083"&gt;Advanced Challenge ‚Äì Reset Button&lt;/H3&gt;&lt;P&gt;When you keep uploading files, the vector DB grows larger and larger. For testing purposes, let‚Äôs add a button that resets the entire database at once.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;API: Implement /agent/delete (hint ‚Äì see the DB-initialization code from Part 4).&lt;/LI&gt;&lt;LI&gt;Controller: Implement onDeletePress, call /agent/delete, and clear the UI‚Äôs file list.&lt;/LI&gt;&lt;LI&gt;View: Place a Delete button between the upload and clear-chat buttons in the header.&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Implementation tip&lt;BR /&gt;&lt;/STRONG&gt;If you set the UI model‚Äôs /uploadedFiles to an empty array [ ] , the uploaded-files area automatically disappears.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-13 at 17.36.46.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273903iF742F72DD9A79293/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-13 at 17.36.46.png" alt="Screenshot 2025-06-13 at 17.36.46.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-69667039" id="toc-hId--178872791"&gt;&lt;SPAN&gt;7 | Next&amp;nbsp;Up&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-8-deploying-to-cloud-foundry/ba-p/14127673" target="_self"&gt;Part 8 Deploying to Cloud Foundry&lt;/A&gt;&lt;/P&gt;&lt;P&gt;In Part 8 we‚Äôll deploy the completed application to Cloud Foundry. The UI will go through &lt;STRONG&gt;mta build ‚Üí cf deploy&lt;/STRONG&gt;, while the Python backend will use &lt;STRONG&gt;manifest.yaml&lt;/STRONG&gt; with &lt;STRONG&gt;cf push&lt;/STRONG&gt;‚Äîa two-track approach aimed at ‚Äúblazing-fast deployment.‚Äù Stay tuned!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--788883849" id="toc-hId--962192310"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Disclaimer&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;SPAN&gt;All the views and opinions in the blog are my own and is made in my personal capacity and that SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-7-building-the-chat-ui-with/ba-p/14127011"/>
    <published>2025-06-13T16:08:09.778000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-8-cloudfoundry-%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4/ba-p/14126865</id>
    <title>üöÄ ÁßíÈÄü„ÅßÂ≠¶„Å∂ SAP AI Core Agent ÈñãÁô∫ üöÄ - Part 8 CloudFoundry „Å´„Éá„Éó„É≠„Ç§</title>
    <updated>2025-06-16T16:01:54.125000+02:00</updated>
    <author>
      <name>Ryota_Ito</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1390198</uri>
    </author>
    <content>&lt;P class=""&gt;ÁîüÊàê AI „ÅØÁ†îÁ©∂ÂÆ§„ÅÆÂ§ñ„Å∏È£õ„Å≥Âá∫„Åó„ÄÅ‰ªä„ÇÑ„Éì„Ç∏„Éç„ÇπÁèæÂ†¥„ÅÆÂ∏∏Ë≠ò„ÇíÂ°ó„ÇäÊõø„Åà„Å¶„ÅÑ„Åæ„Åô„ÄÇSAP„ÅØÂÖ®ÈÄüÂäõ„Åß„Åù„ÅÆÊ≥¢„Å´‰πó„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Åì„ÅÆ„Éñ„É≠„Ç∞„Ç∑„É™„Éº„Ç∫„Åß„ÅØ„ÄÅSAP&amp;nbsp;AI&amp;nbsp;Core „ÅÆÊó¢ÂÆö„É¢„Éá„É´„ÇíÊúÄÈÄü„ÅßÂëº„Å≥Âá∫„Åó„ÄÅÂÆüÂãô„Åß‰Ωø„Åà„Çã AI „Ç®„Éº„Ç∏„Çß„É≥„Éà„Å∏Êã°Âºµ„Åô„Çã‚ÄúÁßíÈÄü„Éè„É≥„Ç∫„Ç™„É≥‚Äù„Çí„ÅäÂ±ä„Åë„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;„ÅäÁü•„Çâ„Åõ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;You can find the English version &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-8-deploying-to-cloud-foundry/ba-p/14127673" target="_self"&gt;here&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1967282760" id="toc-hId-1990554403"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":open_book:"&gt;üìñ&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;Êú¨„Ç∑„É™„Éº„Ç∫„ÅßÂ≠¶„Åπ„Çã„Åì„Å®&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;SAP&amp;nbsp;AI&amp;nbsp;Core ‰∏ä„Åß„Ç´„Çπ„Çø„É† AI Agent „Çí ‚ÄúÁßíÈÄü‚Äù „ÅßÂãï„Åã„ÅôÊñπÊ≥ï&lt;/LI&gt;&lt;LI&gt;LangChain„ÉªGoogle Ê§úÁ¥¢„ÉÑ„Éº„É´„ÉªRAG„Çí‰Ωø„Å£„ÅüÂÆüË£Ö&lt;/LI&gt;&lt;LI&gt;AI Agent „Çí REST&amp;nbsp;API Âåñ„Åó„ÄÅSAPUI5/Fiori „ÅÆ UI „Å´Ëºâ„Åõ„ÄÅCloud Foundry„Å´„Éá„Éó„É≠„Ç§„Åô„ÇãÊâãÈ†Ü&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Â≠¶ÁøíÊôÇÈñì&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;ÂêÑPart „ÅØ&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;10‚Äì15 ÂàÜ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;„ÅßË™≠„ÇÅ„ÇãÔºÜÊâã„ÇíÂãï„Åã„Åõ„Çã„Éú„É™„É•„Éº„É†„Çí‰∫àÂÆö„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1770769255" id="toc-hId-1794040898"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;üó∫&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;Ô∏è ÈÄ£Ëºâ„É≠„Éº„Éâ„Éû„ÉÉ„Éó&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part0-%E3%83%97%E3%83%AD%E3%83%AD%E3%83%BC%E3%82%B0/ba-p/14080340" target="_self"&gt;Part 0 „Éó„É≠„É≠„Éº„Ç∞&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-1-%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89-sap-ai-core%E3%81%A8ai-launchpad/ba-p/14081168" target="_self"&gt;Part 1 Áí∞Â¢ÉÊßãÁØâ: SAP AI Core„Å®AI Launchpad&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-2-langchain-%E3%81%A7%E3%83%81%E3%83%A3%E3%83%83%E3%83%88%E3%83%A2%E3%83%87%E3%83%AB%E3%82%92%E6%A7%8B%E7%AF%89/ba-p/14081270" target="_self"&gt;Part 2 LangChain „Åß„ÉÅ„É£„ÉÉ„Éà„É¢„Éá„É´„ÇíÊßãÁØâ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part3-agent%E3%83%84%E3%83%BC%E3%83%AB-google-%E6%A4%9C%E7%B4%A2%E3%82%92%E7%B5%B1%E5%90%88/ba-p/14082244" target="_self"&gt;Part 3 Agent„ÉÑ„Éº„É´: Google&amp;nbsp;Ê§úÁ¥¢„ÇíÁµ±Âêà&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part4-rag-%E5%9F%BA%E7%A4%8E-hana-cloud-vectorengine%E3%81%A8%E5%9F%8B%E3%82%81%E8%BE%BC%E3%81%BF%E5%87%A6%E7%90%86/ba-p/14093988" target="_self"&gt;Part 4 RAG Âü∫Á§é ‚ë†: HANA Cloud VectorEngine„Å®Âüã„ÇÅËæº„ÅøÂá¶ÁêÜ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-5-rag-%E5%9F%BA%E7%A4%8E-retriever-tool%E3%81%AE%E6%A7%8B%E7%AF%89/ba-p/14108524" target="_self"&gt;Part 5 RAG Âü∫Á§é ‚ë°: Retriever Tool„ÅÆÊßãÁØâ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-6-ai-agent-%E3%82%92-rest-api-%E5%8C%96/ba-p/14119805" target="_self"&gt;Part 6 AI Agent „Çí REST&amp;nbsp;API Âåñ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-7-sapui5-%E3%81%A7%E3%83%81%E3%83%A3%E3%83%83%E3%83%88ui-%E3%82%92%E6%A7%8B%E7%AF%89/ba-p/14124854" target="_self"&gt;Part 7 SAPUI5 „Åß„ÉÅ„É£„ÉÉ„ÉàUI „ÇíÊßãÁØâ&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-8-cloudfoundry-%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4/ba-p/14126865" target="_self"&gt;Part 8 CloudFoundry „Å´„Éá„Éó„É≠„Ç§&lt;/A&gt; [&lt;STRONG&gt;ÁèæÂú®„ÅÆ„Éñ„É≠„Ç∞&lt;/STRONG&gt;]&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;P&gt;„Åì„ÅÆË®ò‰∫ã„Åå„ÅäÂΩπ„Å´Á´ã„Å£„Åü„Çâ„ÄÅ„Åú„Å≤‚ÄØ&lt;STRONG&gt;Kudos&lt;/STRONG&gt;‚ÄØ„ÇíÊäº„Åó„Å¶„ÅÑ„Åü„Å†„Åë„Çã„Å®Âä±„Åø„Å´„Å™„Çä„Åæ„Åô„ÄÇ „Äå„Åì„Åì„Çí„ÇÇ„Å£„Å®Ë©≥„Åó„ÅèÁü•„Çä„Åü„ÅÑ„Äç„ÄåÂà•„ÅÆ„ÉÜ„Éº„Éû„ÇÇÂèñ„Çä‰∏ä„Åí„Å¶„Åª„Åó„ÅÑ„Äç„Å™„Å©„ÄÅ„ÅîË¶ÅÊúõ„Åå„ÅÇ„Çå„Å∞„ÅäÊ∞óËªΩ„Å´„Ç≥„É°„É≥„Éà„Åè„Å†„Åï„ÅÑÔºÅ&lt;/P&gt;&lt;DIV&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1316090312" id="toc-hId-1339361955"&gt;&lt;SPAN&gt;CloudFoundry „Å´„Éá„Éó„É≠„Ç§&lt;/SPAN&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-1271871555" id="toc-hId-1271931169"&gt;1 | „ÅØ„Åò„ÇÅ„Å´&amp;nbsp;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;„Åì„Çå„Åæ„Åß„É≠„Éº„Ç´„É´„ÅßÈñãÁô∫„Åó„Å¶„Åç„Åü &lt;/SPAN&gt;Python API&lt;SPAN&gt; „Å® &lt;/SPAN&gt;Fiori UI&lt;SPAN&gt; „Çí„ÄÅ„Éì„Ç∏„Éç„ÇπÂêë„Åë PaaS „Åß„ÅÇ„Çã &lt;/SPAN&gt;Cloud Foundry&lt;SPAN&gt; Áí∞Â¢É„Å∏„Éá„Éó„É≠„Ç§„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Cloud Foundry „ÅØ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ„Éì„É´„Éâ„Éë„ÉÉ„ÇØ„ÇíËá™ÂãïÂà§ÂÆö„Åó„ÄÅÂøÖË¶Å„Å™„É©„É≥„Çø„Ç§„É†„ÇíÁî®ÊÑè„Åó„Åü„ÅÜ„Åà„Åß„Çπ„Ç±„Éº„É´„ÇÑ„Çµ„Éº„Éì„ÇπÈÄ£Êê∫„ÇíÁ∞°Á¥†Âåñ„Åó„Å¶„Åè„Çå„Çã„ÅÆ„ÅåÈ≠ÖÂäõ„Åß„Åô„ÄÇ‰ªäÂõû„ÅØ &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;„ÄåUI „Çí‚ÄØmta build ‚Üí cf deploy„Äç„ÄåPython „Çí manifest.yaml ‚Üí cf push„Äç&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „ÅÆ 2 Êú¨Á´ã„Å¶„Åß„ÄÅ‚ÄúÁßíÈÄü‚Äù Êú¨Áï™„Éá„Éó„É≠„Ç§„ÇíÁõÆÊåá„Åó„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-1075417664"&gt;2 | ‰∫ãÂâçÊ∫ñÂÇô&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;BTP „Çµ„Éñ„Ç¢„Ç´„Ç¶„É≥„Éà&lt;/LI&gt;&lt;LI&gt;SAP AI Core „Ç§„É≥„Çπ„Çø„É≥„Çπ&lt;/LI&gt;&lt;LI&gt;SAP AI Launchpad„ÅÆ„Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥&lt;/LI&gt;&lt;LI&gt;Python 3.13Áí∞Â¢É &amp;amp; pip&lt;/LI&gt;&lt;LI&gt;VSCode„ÇÑBAS„Å™„Å©„ÅÆIDE&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Trial Áí∞Â¢É„ÅÆÊ≥®ÊÑè&lt;BR /&gt;&lt;/STRONG&gt;Trial „ÅÆ HANA‚ÄØCloud „Ç§„É≥„Çπ„Çø„É≥„Çπ„ÅØ&amp;nbsp;&lt;STRONG&gt;ÊØéÊô©Ëá™ÂãïÂÅúÊ≠¢ „Åï„Çå„Åæ„Åô„ÄÇÊó•„Çí„Åæ„Åü„Åê‰ΩúÊ•≠„ÅÆÂ†¥Âêà„ÅØÁøåÊó•„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÇíÂÜçËµ∑Âãï„Åó„Å¶„Åè„Å†„Åï„ÅÑ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052173960" id="toc-hId-878904159"&gt;3 | Cloud Foundry „Å´„Éá„Éó„É≠„Ç§&lt;/H3&gt;&lt;P&gt;„É≠„Éº„Ç´„É´„ÅßÂÆåÊàê„Åó„Åü UI „Å® API „Çí„ÇØ„É©„Ç¶„Éâ„Å∏ÊåÅ„Å°‰∏ä„Åí„Çã„Åü„ÇÅ„Å´„ÄÅ„Åæ„Åö„ÅØ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„Éï„Ç©„É´„ÉÄÊßãÊàê„ÇíÂÜçÁ¢∫Ë™ç„Åó„Åæ„Åô„ÄÇUI ÂÅ¥„ÅØ MTA „Éó„É≠„Ç∏„Çß„ÇØ„Éà„Å®„Åó„Å¶ my-ai-agent-ui/ „Å´„ÄÅ„Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„ÅÆ Python API „ÅØ my-ai-agent-api/ „Å´ÂàÜ„Åã„Çå„Å¶„ÅÑ„Çã„ÅØ„Åö„Åß„Åô„ÄÇ&lt;/P&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# „Éï„Ç©„É´„ÉÄÊßãÊàê
PROJECTS
‚îú‚îÄ‚îÄ my-ai-agent-ui/
‚îÇ   ‚îú‚îÄ‚îÄ mta.yaml
‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îî‚îÄ‚îÄ my-ai-agent-api/
    ‚îú‚îÄ‚îÄ main.py
    ‚îî‚îÄ‚îÄ ...&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;ÊúÄÂàù„Å´„Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„Åã„Çâ„Éá„Éó„É≠„Ç§„Åó„Åæ„Åô„ÄÇmy-ai-agent-api Áõ¥‰∏ã„Å´ manifest.yaml „ÇíÁî®ÊÑè„Åó„ÄÅÂøÖË¶Å„Å™„É°„É¢„É™„ÇÑ„Éì„É´„Éâ„Éë„ÉÉ„ÇØ„ÄÅËµ∑Âãï„Ç≥„Éû„É≥„Éâ„ÇíÂÆ£Ë®Ä„Åó„Å¶„Åä„Åç„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;applications:
- name: my-ai-agent-api
  memory: 256M
  disk_quota: 2G
  instances: 1
  buildpack: python_buildpack
  command: gunicorn -w 1 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:${PORT:-8000}
  random-route: true&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Ê¨°„Å´ Cloud Foundry CLI „Åß„Çµ„Éñ„Ç¢„Ç´„Ç¶„É≥„Éà„Å∏„É≠„Ç∞„Ç§„É≥„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf login -a &amp;lt;CF_API_Endpoint&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-13 at 14.48.35.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273837i7EE1C91AE303C722/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-13 at 14.48.35.png" alt="Screenshot 2025-06-13 at 14.48.35.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Ê¨°„Å´„ÄÅmy-ai-agent-api „Éï„Ç©„É´„ÉÄ„Åß cf push „ÇíÂÆüË°å„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cd my-ai-agent-api
cf push&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;„Éá„Éó„É≠„Ç§„ÅåÂÆå‰∫Ü„Åô„Çã„Å®„Ç≥„É≥„ÇΩ„Éº„É´„Å´ routes: „ÅåË°®Á§∫„Åï„Çå„ÄÅ„Åù„Åì„ÅåÂÖ¨Èñã URL „Å´„Å™„Çä„Åæ„Åô„ÄÇ„Éñ„É©„Ç¶„Ç∂„Åß &amp;lt;route&amp;gt;/docs „Å´„Ç¢„ÇØ„Çª„Çπ„Åó„Å¶ FastAPI „ÅÆ Swagger UI „ÅåÈñã„Åë„Å∞„ÄÅAPI „ÅØÊ≠£„Åó„Åè„Éõ„Çπ„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„ÅôÔºÅ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-13 at 14.55.43.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273838iEF6E3F76FEAC6E97/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-13 at 14.55.43.png" alt="Screenshot 2025-06-13 at 14.55.43.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„Çí„Éá„Éó„É≠„Ç§„Åô„ÇãÂâç„Å´„ÄÅ„ÉÅ„É£„ÉÉ„ÉàÁîªÈù¢„Åå„ÇØ„É©„Ç¶„Éâ‰∏ä„ÅÆ API „Å´Ê≠£„Åó„ÅèÊé•Á∂ö„Åß„Åç„Çã„Çà„ÅÜ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÇíÂ∑Æ„ÅóÊõø„Åà„Å¶„Åä„Åç„Åæ„Åô„ÄÇmy-ai-agent-ui/webapp/controller/ChatEntity.controller.js „ÅÆÂÜíÈ†≠‰ªòËøë„Å´„ÅÇ„Çã ENDPOINT ÂÆöÊï∞„Çí„ÄÅÂÖà„Åª„Å© Cloud Foundry „Å´„Éá„Éó„É≠„Ç§„Åó„Åü Python API „ÅÆ URL „Å´ÁΩÆ„ÅçÊèõ„Åà„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;  // Áí∞Â¢É„Å´„Çà„Å£„Å¶„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÇíÂàá„ÇäÊõø„Åà
  const ENDPOINT = (
    ["localhost", "applicationstudio"].some(h =&amp;gt; window.location.hostname.includes(h)) ||
    window.location.port === "8080"
  ) ? "" : "https://my-ai-agent-api-relaxed-raven-ie.cfapps.us10-001.hana.ondemand.com";&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;„É≠„Éº„Ç´„É´ÈñãÁô∫‰∏≠„ÅØÁ©∫ÊñáÂ≠óÂàóÔºàUI5 „Éü„Éâ„É´„Ç¶„Çß„Ç¢„ÅÆ„Éó„É≠„Ç≠„Ç∑ÁµåÁî±Ôºâ„Çí‰Ωø„ÅÑ„ÄÅCloud Foundry „Å´„Éá„Éó„É≠„Ç§„Åï„Çå„Åü„Ç¢„Éó„É™„ÅåÂÆüË°å„Åï„Çå„ÇãÁí∞Â¢É„Åß„ÅØ„Éï„É´ URL „Åå‰Ωø„Çè„Çå„Çã‰ªïÁµÑ„Åø„Åß„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Á∂ö„ÅÑ„Å¶„ÄÅ„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„Çí Cloud Foundry „Å´Ëºâ„Åõ„Åæ„Åô„ÄÇmy-ai-agent-ui „Éï„Ç©„É´„ÉÄ„Å´ÁßªÂãï„Åó„Å¶ mbt build „ÇíÂÆüË°å„Åô„Çã„Å®„ÄÅmta_archives „Éá„Ç£„É¨„ÇØ„Éà„É™„Å´ MTAR „Éï„Ç°„Ç§„É´„ÅåÁîüÊàê„Åï„Çå„Åæ„Åô„ÄÇÁîüÊàêÁâ©„Çí cf deploy „Åß„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åô„Çå„Å∞„ÄÅUI ÂÅ¥„ÇÇ„ÇØ„É©„Ç¶„Éâ„Å∏ÂèçÊò†„Åï„Çå„Åæ„Åô.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cd ../my-ai-agent-ui
mbt build
cf deploy mta_archives/my-ai-agent-ui_0.0.1.mtar -f&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;„Éá„Éó„É≠„Ç§Âæå„ÄÅBTP Cockpit „ÅÆ HTML5 Applications „ÇíÈñã„Åè„Å®„ÄÅÂÖà„Åª„Å©„ÅÆ„Ç¢„Éó„É™„Åå„Çø„Ç§„É´„Å®„Åó„Å¶Ë°®Á§∫„Åï„Çå„Çã„ÅÆ„Åß„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶Ëµ∑Âãï„Åó„Åæ„Åô„ÄÇ&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-13 at 15.08.49.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273841i7B7FDACFD7CB5F19/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-13 at 15.08.49.png" alt="Screenshot 2025-06-13 at 15.08.49.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;„ÇÇ„Åó„ÉÅ„É£„ÉÉ„Éà„Åå API „Å´Êé•Á∂ö„Åß„Åç„Å¶„ÅÑ„Å™„Åë„Çå„Å∞„ÄÅENDPOINT ÂÆöÊï∞„ÇÑ Destination „ÅÆ URL „ÇíÂÖà„Åª„Å©Êéß„Åà„Åü API „É´„Éº„Éà„Å´Âêà„Çè„Åõ„Å¶‰øÆÊ≠£„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ‚ÄÉ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-682390654"&gt;4 | „ÉÅ„É£„É¨„É≥„Ç∏ ‚Äì WorkZone „Å´Ëºâ„Åõ„Çà„ÅÜ&lt;/H3&gt;&lt;P&gt;SAP Build Work Zone, Standard Edition „Çí‰Ωø„ÅÜ„Å®„ÄÅ‰ªä„Éá„Éó„É≠„Ç§„Åó„Åü HTML5 „Ç¢„Éó„É™„ÇíÁ§æÂÜÖ„Éù„Éº„Çø„É´„Å´„ÉØ„É≥„ÇØ„É™„ÉÉ„ÇØ„ÅßËøΩÂä†„Åß„Åç„Åæ„Åô„ÄÇ&lt;A href="https://developers.sap.com/tutorials/integrate-with-work-zone.html" target="_self" rel="noopener noreferrer"&gt;Integrate Your Application with SAP Build Work Zone, Standard Edition&lt;/A&gt; „ÇíÂèÇËÄÉ„Å´„ÄÅÊ¨°„ÅÆÊµÅ„Çå„Åß„ÉÅ„É£„É¨„É≥„Ç∏„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇ&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;„Ç≥„É≥„ÉÜ„É≥„ÉÑÂêåÊúü ‚Äî BTP Cockpit „ÅÆ Channel Manager „Åß Fetch Updated Content „ÇíÂÆüË°å„ÄÇ&lt;/LI&gt;&lt;LI&gt;Content Explorer „Åß„Ç¢„Éó„É™„ÇíËøΩÂä† ‚Äî ÂØæË±°„Ç¢„Éó„É™„ÇíÈÅ∏Êäû„Åó Add „ÇíÊäº„Åô„Å†„Åë„ÄÇ&lt;/LI&gt;&lt;LI&gt;„Ç∞„É´„Éº„Éó &amp;amp; „É≠„Éº„É´Ë®≠ÂÆö ‚Äî ‰æã„Åà„Å∞ Everyone „Å´Ââ≤„ÇäÂΩì„Å¶„Å¶ÂÖ®Á§æÂì°„Å∏ÂÖ¨Èñã„ÄÇ&lt;/LI&gt;&lt;LI&gt;Site ‰ΩúÊàê ‚Äî Site Directory „ÅßÊñ∞Ë¶è„Çµ„Ç§„Éà„Çí‰Ωú„Çä„ÄÅ„Çø„Ç§„É´„Çí„Éâ„É©„ÉÉ„Ç∞&amp;amp;„Éâ„É≠„ÉÉ„Éó„ÅßÈÖçÁΩÆ„ÄÇ&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-13 at 15.13.44.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273842iF8F3979767D0520B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-13 at 15.13.44.png" alt="Screenshot 2025-06-13 at 15.13.44.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-485877149"&gt;5 | ÁµÇ„Çè„Çä„Å´&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;SAP BTP „Åß„Ç´„Çπ„Çø„É†‚ÄØAI „ÇíÁµÑ„ÇÄÊÑèÁæ©„ÅØ„Ç∑„É≥„Éó„É´„Åß„Åô„ÄÇÊ•≠Âãô„Éá„Éº„Çø„Å®„É¢„Éá„É´„ÇíÂêå„ÅòÂü∫Áõ§„Å´ÁΩÆ„Åë„Çã„Åü„ÇÅ &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;„Éá„Éº„ÇøÁßªÈÄÅ„ÇÑ„Ç¨„Éê„Éä„É≥„ÇπË™øÊï¥„ÅåÊúÄÂ∞èÈôê&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „Å´„Å™„Çä„ÄÅFiori „ÇÑ Work‚ÄØZone „Å´„Åù„ÅÆ„Åæ„ÅæÂüã„ÇÅËæº„ÇÅ„Çã„ÅÆ„Åß &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;„É¶„Éº„Ç∂„ÅØÊÖ£„Çå„Åü SAP ÁîªÈù¢„Åã„Çâ AI „ÇíÂëº„Å≥Âá∫„Åõ„Åæ„Åô&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;„ÄÇ„Åï„Çâ„Å´ MTA „ÇÑ AI‚ÄØCore „ÅåÈñãÁô∫„ÄúÂÜçÂ≠¶Áøí„Åæ„Åß„Çí‰∏ÄË≤´„Åó„Å¶ÊîØ„Åà„Çã„Åü„ÇÅ„ÄÅ&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;PoC „Åã„ÇâÊú¨Áï™„Åæ„Åß„ÅÆË∑ùÈõ¢„ÅåÁü≠„ÅÑ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;‚Äî‚Äî„Åì„Çå„Åå SAP „Åß„ÇÑ„ÇãÊúÄÂ§ß„ÅÆ„É°„É™„ÉÉ„Éà„Åß„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;‰ªäÂõû„ÅÆÊµÅ„Çå„Çí„ÉÜ„É≥„Éó„É¨„Éº„ÉàÂåñ„Åó„Å¶„Åä„Åë„Å∞„ÄÅ„Éó„É≠„É≥„Éó„Éà„Å® UI „ÇíÂ∑Æ„ÅóÊõø„Åà„Çã„Å†„Åë„ÅßÊñ∞„Åó„ÅÑ AI „Ç¢„Éó„É™„ÇíÈáèÁî£„Åß„Åç„Åæ„Åô„ÄÇ„Åú„Å≤Ëá™Á§æ„ÅÆ„É¶„Éº„Çπ„Ç±„Éº„Çπ„Å´Âêà„Çè„Åõ„Å¶Êã°Âºµ„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑÔºÅ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;„Åì„Åì„Åæ„Åß„ÄÅ„ÅäÁñ≤„ÇåÊßò„Åß„Åó„ÅüÔºÅ„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åó„ÅüÔºÅ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-327771873" id="toc-hId-547529082"&gt;&lt;SPAN&gt;&lt;STRONG&gt;ÂÖçË≤¨‰∫ãÈ†Ö&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;SPAN&gt;Êú¨„Éñ„É≠„Ç∞„Å´Ë®òËºâ„Åï„Çå„ÅüË¶ãËß£„Åä„Çà„Å≥ÊÑèË¶ã„ÅØ„Åô„Åπ„Å¶ÁßÅÂÄã‰∫∫„ÅÆ„ÇÇ„ÅÆ„Åß„ÅÇ„Çä„ÄÅÁßÅ„ÅÆÂÄã‰∫∫ÁöÑ„Å™Á´ãÂ†¥„ÅßÁô∫‰ø°„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇSAP „ÅØÊú¨„Éñ„É≠„Ç∞„ÅÆÂÜÖÂÆπ„Å´„Å§„ÅÑ„Å¶‰∏ÄÂàá„ÅÆË≤¨‰ªª„ÇíË≤†„ÅÑ„Åæ„Åõ„Çì„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-8-cloudfoundry-%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4/ba-p/14126865"/>
    <published>2025-06-16T16:01:54.125000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-8-deploying-to-cloud-foundry/ba-p/14127673</id>
    <title>üöÄ SAP AI Core Agent QuickLaunch Series üöÄ - Part 8: Deploying to Cloud Foundry</title>
    <updated>2025-06-16T16:01:56.368000+02:00</updated>
    <author>
      <name>Ryota_Ito</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1390198</uri>
    </author>
    <content>&lt;P class=""&gt;Generative&amp;nbsp;AI has leapt from research papers to daily business reality‚Äî and SAP is surfing that wave at full speed.&amp;nbsp;In&amp;nbsp;this hands‚Äëon series, I‚Äôll show you how to spin up a custom AI agent on SAP&amp;nbsp;AI&amp;nbsp;Core in minutes, then grow it into a production‚Äëready asset‚Äîwithout drowning in theory.&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Notice&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Êó•Êú¨Ë™ûÁâà„ÅØ&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E7%A7%92%E9%80%9F%E3%81%A7%E5%AD%A6%E3%81%B6-sap-ai-core-agent-%E9%96%8B%E7%99%BA-part-8-cloudfoundry-%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4/ba-p/14126865" target="_self"&gt;„Åì„Å°„Çâ&lt;/A&gt;„Åß„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1967371303" id="toc-hId-1990582301"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":open_book:"&gt;üìñ&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;What You‚Äôll Learn in This Series&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;How to Run a Custom AI Agent on SAP AI Core in Seconds&lt;/LI&gt;&lt;LI&gt;Implementation Using LangChain, Google Search Tool, and RAG&lt;/LI&gt;&lt;LI&gt;Steps to Convert the AI Agent into a REST API, Integrate It into an SAPUI5/Fiori UI, and Deploy to Cloud Foundry&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Time Commitment&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Each part is designed to be completed in&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;10‚Äì15&amp;nbsp;minutes&lt;/STRONG&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1770857798" id="toc-hId-1794068796"&gt;&lt;SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;üó∫&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Ô∏è Series Roadmap&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part0-prologue/ba-p/14104823" target="_self"&gt;Part 0 Prologue&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-1-env-setup-sap-aicore-amp-ai/ba-p/14104825" target="_self"&gt;Part 1 Env Setup: SAP AICore &amp;amp; AI Launchpad&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-2-building-a-chat-model-with/ba-p/14104832" target="_self"&gt;Part 2 Building a Chat Model with&amp;nbsp;LangChain&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-3-agent-tools-integrating-google/ba-p/14104844" target="_self"&gt;Part 3 Agent&amp;nbsp;Tools: Integrating Google&amp;nbsp;Search&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-4-rag-basics-hana-cloud/ba-p/14083287" target="_self"&gt;Part4 RAG Basics‚ë† HANA Cloud VectorEngine &amp;amp; Embedding&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-5-rag-basics-building-retriever/ba-p/14113412" target="_self"&gt;Part 5 RAG Basics ‚ë°: Building Retriever Tool&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-6-converting-the-ai-agent-into-a/ba-p/14121055" target="_self"&gt;Part 6: Converting the AI Agent into a REST API&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-7-building-the-chat-ui-with/ba-p/14127011" target="_self"&gt;Part 7: Building the Chat UI with SAPUI5&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-8-deploying-to-cloud-foundry/ba-p/14127673" target="_self"&gt;Part 8: Deploying to Cloud Foundry&lt;/A&gt;&amp;nbsp;[&lt;STRONG&gt;current blog&lt;/STRONG&gt;]&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Subsequent blogs will be published soon.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;P&gt;If you enjoyed this post, please give it a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;kudos&lt;/STRONG&gt;! Your support really motivates me. Also, if there‚Äôs anything you‚Äôd like to know more about, feel free to leave a comment!&lt;/P&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1316178855" id="toc-hId-1339389853"&gt;Deploying to Cloud Foundry&lt;/H2&gt;&lt;H3 id="toc-hId-1248748069" id="toc-hId-1271959067"&gt;&lt;SPAN&gt;1&amp;nbsp;| Introduction&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Let‚Äôs deploy the Python API and Fiori UI, which we've been developing locally, to a business-oriented PaaS environment: Cloud Foundry.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;One of the key benefits of Cloud Foundry is its ability to automatically detect the appropriate buildpack, prepare the necessary runtime, and simplify tasks like scaling and service integration. In this session, we'll aim for a ‚Äúlightning-fast‚Äù production deployment using a two-pronged approach:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;For the UI: mta build ‚Üí cf deploy&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;For the Python API: manifest.yaml ‚Üí cf push&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1052234564" id="toc-hId-1075445562"&gt;&lt;SPAN&gt;2 | Prerequisites&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;BTP sub-account&lt;/LI&gt;&lt;LI&gt;SAP AI Core instance&lt;/LI&gt;&lt;LI&gt;SAP AI LaunchPad Subscription&lt;/LI&gt;&lt;LI&gt;Python 3.13 and pip&lt;/LI&gt;&lt;LI&gt;VSCode, BAS or any IDE&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note for the Trial Environment&lt;/STRONG&gt;&lt;BR /&gt;The HANA Cloud instance in the Trial enviroment automatically shuts down every night. If your work spans past midnight, please restart the instance the following day.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-878932057"&gt;3 | Deploy to Cloud Foundry&lt;/H3&gt;&lt;P&gt;To move the locally developed UI and API to the cloud, let‚Äôs first review the project folder structure. The UI should be set up as an MTA (Multi-Target Application) project under my-ai-agent-ui/, while the backend Python API is located in my-ai-agent-api/.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# Folder Structure:
PROJECTS
‚îú‚îÄ‚îÄ my-ai-agent-ui/
‚îÇ   ‚îú‚îÄ‚îÄ mta.yaml
‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îî‚îÄ‚îÄ my-ai-agent-api/
    ‚îú‚îÄ‚îÄ main.py
    ‚îî‚îÄ‚îÄ ...&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We‚Äôll start by deploying the backend. Inside the my-ai-agent-api directory, create a manifest.yaml file to define the necessary settings such as memory allocation, buildpack, and startup command.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;applications:
- name: my-ai-agent-api
  memory: 256M
  disk_quota: 2G
  instances: 1
  buildpack: python_buildpack
  command: gunicorn -w 1 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:${PORT:-8000}
  random-route: true&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Next, log in to your Cloud Foundry subaccount using the CLI:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf login -a &amp;lt;CF_API_Endpoint&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-13 at 14.48.35.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274135i0A91B81B3B8B5B3B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-13 at 14.48.35.png" alt="Screenshot 2025-06-13 at 14.48.35.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Then, navigate to the my-ai-agent-api folder and run:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cd my-ai-agent-api
cf push&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once deployment is complete, the console will display a routes: section‚Äîthis is your public URL. Open &amp;lt;route&amp;gt;/docs in your browser, and if the FastAPI Swagger UI appears, your API is successfully hosted!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-13 at 14.55.43 (1).png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274137iB0487A3D221214CF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-13 at 14.55.43 (1).png" alt="Screenshot 2025-06-13 at 14.55.43 (1).png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Before deploying the frontend, make sure the chat screen can correctly connect to the API hosted on the cloud. Update the ENDPOINT constant near the top of my-ai-agent-ui/webapp/controller/ChatEntity.controller.js with the URL of the Python API you just deployed to Cloud Foundry. Replace it like this:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// Switch endpoint based on environment
const ENDPOINT = (
  ["localhost", "applicationstudio"].some(h =&amp;gt; window.location.hostname.includes(h)) ||
  window.location.port === "8080"
) ? "" : "https://my-ai-agent-api-relaxed-raven-ie.cfapps.us10-001.hana.ondemand.com";&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This setup uses an empty string during local development (so it routes through the UI5 middleware proxy), and switches to the full Cloud Foundry API URL when running in the deployed environment.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Next, let's deploy the frontend to Cloud Foundry. Move to the my-ai-agent-ui folder and run mbt build. This will generate an MTAR file in the mta_archives directory. Upload the build artifact using cf deploy to deploy the UI to the cloud:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cd ../my-ai-agent-ui
mbt build
cf deploy mta_archives/my-ai-agent-ui_0.0.1.mtar -f&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;After deployment, open HTML5 Applications in the BTP Cockpit. You‚Äôll see the application displayed as a tile‚Äîclick it to launch the UI.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-13 at 15.08.49.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274138iD50B9B8B6BE585EA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-13 at 15.08.49.png" alt="Screenshot 2025-06-13 at 15.08.49.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If the chat interface fails to connect to the API, double-check the ENDPOINT constant in your code or the configured Destination URL. Make sure they match the API route you noted earlier.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-682418552"&gt;4 | Challenge ‚Äì Deploy to Work Zone&lt;/H3&gt;&lt;P&gt;With SAP Build Work Zone, Standard Edition, you can easily add the HTML5 app you just deployed to an internal company portal with just a few clicks. Using the guide Integrate Your Application with SAP Build Work Zone, Standard Edition, try the following steps:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Content Sync&lt;/STRONG&gt;&lt;BR /&gt;In the BTP Cockpit, go to Channel Manager and click Fetch Updated Content.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Add App via Content Explorer&lt;/STRONG&gt;&lt;BR /&gt;Open Content Explorer, find your app, and click Add to include it.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Set Groups &amp;amp; Roles&lt;/STRONG&gt;&lt;BR /&gt;Assign the app to a group‚Äîe.g., assign it to Everyone to make it available to all employees.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Create a Site&lt;/STRONG&gt;&lt;BR /&gt;In Site Directory, create a new site and drag &amp;amp; drop the app tile into place on the layout.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-13 at 15.13.44.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274139i0B9789C0B005BECC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-13 at 15.13.44.png" alt="Screenshot 2025-06-13 at 15.13.44.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-485905047"&gt;5 | Conclusion&lt;/H3&gt;&lt;P&gt;The value of building custom AI on SAP BTP is clear: by placing both your business data and AI models on the same platform, you &lt;STRONG&gt;minimize data transfer and governance overhead&lt;/STRONG&gt;. Since &lt;STRONG&gt;you can embed the AI directly into familiar SAP interfaces&lt;/STRONG&gt; like Fiori and Work Zone, users can interact with AI from the screens they already know.&lt;/P&gt;&lt;P&gt;Moreover, with tools like MTA and AI Core supporting the entire lifecycle‚Äîfrom development to retraining‚Äî&lt;STRONG&gt;you can move quickly from proof of concept to production&lt;/STRONG&gt;. That‚Äôs the true strength of doing AI on SAP.&lt;/P&gt;&lt;P&gt;By turning this setup into a reusable template, you can rapidly create new AI applications‚Äîjust swap out the prompt and UI to match different use cases. Feel free to expand on it to meet your company‚Äôs specific needs.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thanks for following along, and great job making it this far!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--788883849" id="toc-hId-547556980"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Disclaimer&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;SPAN&gt;All the views and opinions in the blog are my own and is made in my personal capacity and that SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ai-core-agent-quicklaunch-series-part-8-deploying-to-cloud-foundry/ba-p/14127673"/>
    <published>2025-06-16T16:01:56.368000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/artificial-intelligence-and-machine-learning-blogs/benchmarking-generative-ai-for-drug-safety-using-sap-ai-launchpad-part-2-of/ba-p/14126525</id>
    <title>Benchmarking Generative AI for Drug Safety Using SAP AI Launchpad - Part 2 of 3</title>
    <updated>2025-06-17T13:00:57.882000+02:00</updated>
    <author>
      <name>LucaToldo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/44202</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1861468677"&gt;&lt;SPAN&gt;End-to-End Workflow and Data Preparation&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;The benchmarking and evaluation workflow for large language models and prompt strategies follows the design illustrated in Figure 1 (taken from&amp;nbsp;&lt;A title="GenAI Evaluations with SAP AI Core" href="https://developers-qa-blue.wcms-nonprod.c.eu-de-2.cloud.sap/tutorials/ai-core-generative-ai-evaluation.html" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Generative AI evaluation&lt;/A&gt; tutorial ). Although that tutorial targets Python programmers and some implementation details differ, this blog focuses on the no-code, low-code approach available within SAP AI Launchpad; future official tutorials may address these workflows explicitly.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 1.jpg" style="width: 904px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273580i4F173EC36BEB9794/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 1.jpg" alt="Picture 1.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Figure 1. SAP AI Launchpad ADR Evaluation Workflow Overview&lt;/P&gt;&lt;H3 id="toc-hId-1664955172"&gt;&lt;SPAN&gt;Key Concepts in Designing AI Evaluation&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;When building an AI-powered pharmacovigilance evaluation, key design decisions include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Dataset selection: Choosing a high-quality, reference corpus for benchmarking ADR detection.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Model selection: Identifying and comparing suitable large language models deployed on SAP AI Launchpad.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Prompt engineering: Designing effective prompts to extract drug-event relationships reliably.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Evaluation metrics: Defining metrics (e.g., precision, recall, F1 score) to assess AI output against gold standards.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1468441667"&gt;&lt;SPAN&gt;Pharmacovigilance Dataset&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;As previously mentioned, the dataset used in this study is the ‚ÄúADE Benchmark Corpus‚Äù (&lt;A title="Development of a benchmark corpus to support the automatic extraction of drug-related adverse effects from medical case reports" href="https://doi.org/10.1016/j.jbi.2012.04.008" target="_blank" rel="noopener nofollow noreferrer"&gt;Gurulingappa et al., 2012&lt;/A&gt;), publicly available at &lt;A title="ade_corpus_v2" href="https://huggingface.co/datasets/ade-benchmark-corpus/ade_corpus_v2" target="_blank" rel="noopener nofollow noreferrer"&gt;Huggingface&lt;/A&gt;. This dataset contains systematically annotated MEDLINE case reports, and is widely regarded as a gold standard for ADR information extraction.&lt;/P&gt;&lt;H4 id="toc-hId-1401010881"&gt;&lt;SPAN&gt;Original Data Structure&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;The dataset consists of three primary files,:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;A href="https://github.com/lucatoldo/Benchmarking-Generative-AI-for-Drug-Safety-Using-SAP-AI-Launchpad/blob/main/DRUG-AE.txt" target="_blank" rel="noopener nofollow noreferrer"&gt;DRUG-AE.txt&lt;/A&gt; (6,821 lines) use vertical pipe symbol as field separator:&lt;BR /&gt;PMID | Sentence | Adverse Event | AE start | AE end | Drug | Drug start | Drug end&lt;BR /&gt;Example:&lt;/LI&gt;&lt;/OL&gt;&lt;PRE&gt;2316232 | An 83-year-old man receiving glipizide 10 mg bid developed symptomatic hypoglycemia within three days of adding trimethoprim/sulfamethoxazole (TMP/SMX) to his regimen. | symptomatic hypoglycemia | 363 | 387 | glipizide | 333 | 342&lt;/PRE&gt;&lt;OL&gt;&lt;LI&gt;&lt;A href="https://github.com/lucatoldo/Benchmarking-Generative-AI-for-Drug-Safety-Using-SAP-AI-Launchpad/blob/main/DRUG-DOSE.txt" target="_blank" rel="noopener nofollow noreferrer"&gt;DRUG-DOSE.txt&lt;/A&gt; (279 lines)use vertical pipe symbol as field separator:&lt;BR /&gt;PMID | Sentence | Dose | Dose start | Dose end | Drug | Drug start | Drug end&lt;BR /&gt;Example:&lt;/LI&gt;&lt;/OL&gt;&lt;PRE&gt;2316232 | ... | 10 mg | 343 | 348 | glipizide | 333 | 342&lt;/PRE&gt;&lt;OL&gt;&lt;LI&gt;&lt;A href="https://github.com/lucatoldo/Benchmarking-Generative-AI-for-Drug-Safety-Using-SAP-AI-Launchpad/blob/main/ADE-NEG.txt" target="_blank" rel="noopener nofollow noreferrer"&gt;ADE-NEG.txt&lt;/A&gt; (16,695 lines)use space symbol as field separator between the first three fields:&lt;BR /&gt;PMID NEG Sentence&lt;BR /&gt;Example:&lt;/LI&gt;&lt;/OL&gt;&lt;PRE&gt;6460590 NEG Clioquinol intoxication occurring in the treatment of acrodermatitis enteropathica with reference to SMON outside of Japan.&lt;/PRE&gt;&lt;P&gt;To facilitate model evaluation, a&lt;A title="Jupiter notebook python code" href="https://github.com/lucatoldo/Benchmarking-Generative-AI-for-Drug-Safety-Using-SAP-AI-Launchpad/blob/main/ConsolidateADE2-dataset.ipynb" target="_blank" rel="noopener nofollow noreferrer"&gt; Python script&lt;/A&gt; was used to merge these files into a single unified JSON dataset with the structure:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ "Phrase", "HasAE", "Drug", "Doses", "Adverse Event" }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Because individual sentences can contain multiple drug and adverse event entities, the merging process results in more rows than the original files (e.g., one sentence may appear multiple times, once per entity combination). According to the annotation guidelines for the ADE corpus, all drugs in a sentence associated with an adverse event are labeled accordingly.&lt;/P&gt;&lt;P&gt;Sample (Table 1): Merged Dataset Structure&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="144"&gt;&lt;P&gt;&lt;STRONG&gt;Adverse Effect&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="144"&gt;&lt;P&gt;&lt;STRONG&gt;Drug&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="144"&gt;&lt;P&gt;&lt;STRONG&gt;HasAE&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="144"&gt;&lt;P&gt;&lt;STRONG&gt;Doses&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="144"&gt;&lt;P&gt;&lt;STRONG&gt;symptomatic hypoglycemia&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="144"&gt;&lt;P&gt;trimethoprim&lt;/P&gt;&lt;/TD&gt;&lt;TD width="144"&gt;&lt;P&gt;Positive&lt;/P&gt;&lt;/TD&gt;&lt;TD width="144"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="144"&gt;&lt;P&gt;&lt;STRONG&gt;symptomatic hypoglycemia&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="144"&gt;&lt;P&gt;sulfamethoxazole&lt;/P&gt;&lt;/TD&gt;&lt;TD width="144"&gt;&lt;P&gt;Positive&lt;/P&gt;&lt;/TD&gt;&lt;TD width="144"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="144"&gt;&lt;P&gt;&lt;STRONG&gt;symptomatic hypoglycemia&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="144"&gt;&lt;P&gt;glipizide&lt;/P&gt;&lt;/TD&gt;&lt;TD width="144"&gt;&lt;P&gt;Positive&lt;/P&gt;&lt;/TD&gt;&lt;TD width="144"&gt;&lt;P&gt;10 mg&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;The processed and merged dataset contains:&lt;BR /&gt;- 23,540 rows in total&lt;BR /&gt;- 6,845 rows containing ADRs&lt;BR /&gt;- 400 rows containing dose information&lt;BR /&gt;- 16,695 rows without adverse events&lt;/P&gt;&lt;P&gt;To create a manageable and representative evaluation sample, I randomly selected 300 examples from the merged dataset:&lt;BR /&gt;- 100 rows with doses,&lt;BR /&gt;- 100 rows with ADRs but no dose annotation,&lt;BR /&gt;- 100 rows without ADRs.&lt;/P&gt;&lt;P&gt;This sampling was done using a &lt;A title="Jupiter notebook python code " href="https://github.com/lucatoldo/Benchmarking-Generative-AI-for-Drug-Safety-Using-SAP-AI-Launchpad/blob/main/ConsolidateADE2-dataset.ipynb" target="_blank" rel="noopener nofollow noreferrer"&gt;Python&lt;/A&gt; script.&lt;/P&gt;&lt;H4 id="toc-hId-1204497376"&gt;&lt;SPAN&gt;Data Formatting for SAP AI Launchpad&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;Each evaluation item in the JSON sample takes the form:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "Phrase": "An 83-year-old man receiving glipizide 10 mg bid developed symptomatic hypoglycemia within three days of adding trimethoprim/sulfamethoxazole (TMP/SMX) to his regimen.",
  "goldenTruth": "POSITIVE|TRIMETHOPRIM|10 MG|SYMPTOMATIC HYPOGLYCEMIA"
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;- Phrase: The sentence to be processed by the large language model.&lt;BR /&gt;- goldenTruth: The expected output, using pipes as delimiters due to current limitations in structured JSON output. The name used in the SAP AI Launchpad for this value is "reference", however for consistency with the published paper and to demonstrate how to use different names in datasets we chose to use the more academically used term of "golden Truth".&lt;BR /&gt;&lt;BR /&gt;The alignment between the "Phrase" (input) and "goldenTruth" (expected reference output) forms the basis for evaluating SAP AI Launchpad‚Äôs information extraction performance.&lt;/P&gt;&lt;H2 id="toc-hId-749818433"&gt;&lt;SPAN&gt;Methods / Technical Implementation&lt;/SPAN&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-682387647"&gt;&lt;SPAN&gt;Models&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;The choice of models depends heavily on the intended use case, and as well on the cost of using the model. Currently it is common experience that generic models perform the best for question answering tasks, while tuned models are more appropriate for fact extraction.&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-614956861"&gt;&lt;SPAN&gt;Generative AI Hub / Model Library&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;The Model Library allows to easily inspect which models are available, as well as their capabilities and properties. The Generative AI Hub is continuously updated with new LLMs having different capabilities, with Figure 2 below showing the status of the Model Library at the time of this writing.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 2.png" style="width: 904px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273597i86922DF048604B99/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 2.png" alt="Picture 2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Figure 2. SAP AI Launchpad Generative AI HUB Model Library&lt;/P&gt;&lt;P&gt;By clicking on a specific model one can get more information about that model. In Figure 3 below for example, are shown the details for&amp;nbsp; GPT 4.0. Among them, one can see that the model name is&amp;nbsp; ‚Äúgpt-4.0‚Äù ( lowercase) and the version ‚Äúlatest‚Äù . These values must be used precisely later in the configuration file.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 3.png" style="width: 904px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273603i8D46E0E35853E312/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 3.png" alt="Picture 3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Figure 3. Details for the GPT-4o LLM in the SAP AI Launchpad Generative AI HUB Library&lt;/P&gt;&lt;P&gt;In this blog,&amp;nbsp; I am comparing some of the large language model available for processing and generating text:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Gemini 2.0 Flash&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Mistral Large instruct&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;GPT 3.5-turbo&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;GPT 4.0&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-289360637"&gt;&lt;SPAN&gt;Prompt Engineering&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Generative AI approaches are non deterministic and therefore require some level of experimentation before to achieve best results. The SAP AI Launchpad offers 2 different approaches to refine the prompt, namely through the &lt;STRONG&gt;Chat&lt;/STRONG&gt; or through the &lt;STRONG&gt;Prompt Editor&lt;/STRONG&gt;.&lt;/P&gt;&lt;H4 id="toc-hId-221929851"&gt;&lt;SPAN&gt;Generative AI Hub / Chat&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;At first one can try out the Chat, as shown below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 4.png" style="width: 904px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273606i78471A5FF6A0D570/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 4.png" alt="Picture 4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Figure 4. The Chat window&amp;nbsp;in the SAP AI Launchpad&lt;/P&gt;&lt;P&gt;The first step is to&amp;nbsp; configure the Chat, this is done by clicking on ‚ÄúConfigure‚Äù&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 5.png" style="width: 904px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273608i432EEA64EBF60C10/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 5.png" alt="Picture 5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Figure 5. The Configuration of the Chat tool in the SAP AI Launchpad&lt;/P&gt;&lt;P&gt;Here you can choose which model to use, and as well which parameters. The most important one is the ‚Äútemperature‚Äù: setting it to the left end (0.0) makes the LLM delivering very conservative results, while setting to the right end (2.0) makes it more ‚Äúcreative‚Äù.&lt;/P&gt;&lt;P&gt;By typing or pasting the following text into the ‚ÄúEnter your message here‚Äù&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;I am a pharmacovigilance expert and i need to know if a phrase contains evidence of a potential adverse drug event. For this reason i need you to support me by doing the following tasks, in the strict mode and without explanations. Do the following:
1. classify if a phrase as a whole could be indicative of a potential adverse drug event. if the first step is YES, then the output parameter "hasAE" must be set to "POSITIVE", otherwise to "NEGATIVE".
2.1 identify the drug name, UPPERCASE it and use it as value for the output variable "Drug", otherwise set it to X.
2.2 identify the amount of drug used, UPPERCASE it and use it as value for the output variable "Dose", otherwise set it to X.
2.3 identify the adverse event reported, UPPERCASE it and use it as value for the output variable "AdverseEvent", otherwise set it to X. 
The output must have the following structure:
hasAE|Drug|Dose|AdverseEvent.

Phrase: "An 83-year-old man receiving glipizide 10 mg bid developed symptomatic hypoglycemia within three days of adding trimethoprim/sulfamethoxazole (TMP/SMX) to his regimen&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;and then clicking the blue button results in an execution to be performed, and the results shown in Figure 6.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 6.png" style="width: 904px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273609i43A05BECD507952D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 6.png" alt="Picture 6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Figure 6. The result of execution of the SAP AI Launchpad&lt;/P&gt;&lt;P&gt;One&amp;nbsp; obtains the result that in this case is&lt;/P&gt;&lt;PRE&gt;POSITIVE|GLIPIZIDE|10 MG|SYMPTOMATIC HYPOGLYCEMIA&lt;/PRE&gt;&lt;P&gt;By clicking on the ‚ÄúDownload‚Äù button the resulting output is a corresponding &lt;A title="Downloadable version of the Chat" href="https://github.com/lucatoldo/Benchmarking-Generative-AI-for-Drug-Safety-Using-SAP-AI-Launchpad/blob/main/GenAIChat.json" target="_blank" rel="noopener nofollow noreferrer"&gt;JSON&lt;/A&gt; representation as shown below.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;[
  {
    "role": "user",
    "content": [
      {
        "type": "text",
        "mimeType": "text/plain",
        "data": "I am a pharmacovigilance expert and i need to know if a phrase contains evidence of a potential adverse drug event. For this reason i need you to support me by doing the following tasks, in the strict mode and without explanations. Do the following: \n1. classify if a phrase as a whole could be indicative of a potential adverse drug event.\n2. if the first step is YES, then the output parameter \"hasAE\" must be set to \"POSITIVE\", otherwise to \"NEGATIVE\".\n2.1 identify the drug name, UPPERCASE it and use it as value for the output variable \"Drug\", otherwise set it to X.\n2.2 identify the amount of drug used, UPPERCASE it and use it as value for the output variable \"Dose\", otherwise set it to X\n2.3 identify the adverse event reported, UPPERCASE it and use it as value for the output variable \"AdverseEvent\", otherwise set it to X.\n3. The output must have the following structure:\nhasAE|Drug|Dose|AdverseEvent.\nPhrase: \"An 83-year-old man receiving glipizide 10 mg bid developed symptomatic hypoglycemia within three days of adding trimethoprim/sulfamethoxazole (TMP/SMX) to his regimen\"\n",
        "size": 1099
      }
    ]
  },
  {
    "role": "assistant",
    "content": [
      {
        "type": "text",
        "mimeType": "text/plain",
        "data": "POSITIVE|GLIPIZIDE|10 MG|SYMPTOMATIC HYPOGLYCEMIA",
        "size": 49
      }
    ]
  }
]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The &lt;STRONG&gt;content.data&lt;/STRONG&gt; element of t&lt;U&gt;he first section&lt;/U&gt; of the file could be then reused directly in the configuration runs (explained below) since it is properly formatted (new line characters are escaped, as well as quotes).&amp;nbsp;&lt;/P&gt;&lt;P&gt;The &lt;STRONG&gt;content.data&lt;/STRONG&gt; element of &lt;U&gt;the second section&lt;/U&gt; of the file contains the output.[&lt;/P&gt;&lt;P&gt;The disadvantage of using the &lt;STRONG&gt;Chat&lt;/STRONG&gt; tool for prompt refinement is that (currently) there is no persistence, and therefore once a chat window is closed, everything is lost.&lt;/P&gt;&lt;H4 id="toc-hId--472300749"&gt;&lt;SPAN&gt;Generative AI Hub / Prompt Editor&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;Working with the &lt;STRONG&gt;Prompt Editor&lt;/STRONG&gt; is similar to using the &lt;STRONG&gt;Chat&lt;/STRONG&gt; , since one has to configure the same parameters, and one has to provide the Prompt, as shown in Figure 7.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 7.png" style="width: 904px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273622i7F6A153F5A1BDA1D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 7.png" alt="Picture 7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Figure 7. Using the &lt;STRONG&gt;Prompt Editor&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Please notice that if the variable ‚Äústreaming response‚Äù is not ticked, also the intermediate steps will be returned, as shown in Figure 8.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 8.png" style="width: 904px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273623i86C87539F1C702D8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 8.png" alt="Picture 8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Figure 8. The result of execution in the &lt;STRONG&gt;Prompt Editor&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;In the &lt;STRONG&gt;Prompt Editor&lt;/STRONG&gt; one can copy/paste the prompt into the ‚Äúmessage blocks‚Äù, and one can as well save the prompt as template. This is very useful for additional changes and manual comparisons. Additionally, through using the prompt editor one introduce the concept of Variable Definitions and Variable Mapping. This is an essential step for the Evaluation later. Comparing the Prompts used in the chat vs in the prompt editor, one can see that the prompt editor does include the phrase to be analysed but instead uses a variable .&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="301"&gt;&lt;P&gt;&lt;STRONG&gt;Chat&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="301"&gt;&lt;P&gt;&lt;STRONG&gt;Prompt Editor&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="301"&gt;&lt;P&gt;I am a pharmacovigilance expert and i need to know if a phrase contains evidence of a potential adverse drug event. For this reason i need you to support me by doing the following tasks, in the strict mode and without explanations. Do the following: \n1. classify if a phrase as a whole could be indicative of a potential adverse drug event.\n2. if the first step is YES, then the output parameter \"hasAE\" must be set to \"POSITIVE\", otherwise to \"NEGATIVE\".\n2.1 identify the drug name, UPPERCASE it and use it as value for the output variable \"Drug\", otherwise set it to X.\n2.2 identify the amount of drug used, UPPERCASE it and use it as value for the output variable \"Dose\", otherwise set it to X\n2.3 identify the adverse event reported, UPPERCASE it and use it as value for the output variable \"AdverseEvent\", otherwise set it to X.\n3. The output must have the following structure:\nhasAE|Drug|Dose|AdverseEvent.\nPhrase: &lt;STRONG&gt;\"An 83-year-old man receiving glipizide 10 mg bid developed symptomatic hypoglycemia within three days of adding trimethoprim/sulfamethoxazole (TMP/SMX) to his regimen\"\n&lt;/STRONG&gt;"&lt;/P&gt;&lt;/TD&gt;&lt;TD width="301"&gt;&lt;P&gt;I am a pharmacovigilance expert and i need to know if a phrase contains evidence of a potential adverse drug event. For this reason i need you to support me by doing the following tasks, in the strict mode and without explanations. Do the following: \n1. classify if a phrase as a whole could be indicative of a potential adverse drug event.\n2. if the first step is YES, then the output parameter \"hasAE\" must be set to \"POSITIVE\", otherwise to \"NEGATIVE\".\n2.1 identify the drug name, UPPERCASE it and use it as value for the output variable \"Drug\", otherwise set it to X.\n2.2 identify the amount of drug used, UPPERCASE it and use it as value for the output variable \"Dose\", otherwise set it to X\n2.3 identify the adverse event reported, UPPERCASE it and use it as value for the output variable \"AdverseEvent\", otherwise set it to X.\n3. The output must have the following structure:\nhasAE|Drug|Dose|AdverseEvent.&lt;BR /&gt;&lt;STRONG&gt;{{?Phrase}}&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;That is precisely the same approach that will be used for the large scale evaluation, where 300 hundreds of different phrases will have to be processed by the four different large language model and compared to the expected result.&lt;/P&gt;&lt;H3 id="toc-hId--375411247"&gt;&lt;SPAN&gt;Metrics&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;The precision, recall and F1 measures are the metric used in the reference paper (&lt;A title="Extraction of potential adverse drug events from medical case reports" href="https://doi.org/10.1186/2041-1480-3-15" target="_blank" rel="noopener nofollow noreferrer"&gt;Gurulingappa, Rajput &amp;amp; Toldo, 2012&lt;/A&gt;) and here briefly explained:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;True positive&amp;nbsp;(TP) - These are the correct predictions made that are labeled as positive. You can input this and the below values in the confusion matrix calculator's first section.&lt;/LI&gt;&lt;LI&gt;False negative&amp;nbsp;(FN) - These are the wrong predictions made that are labeled as negative.&lt;/LI&gt;&lt;LI&gt;False positive&amp;nbsp;(FP) - These are the wrong predictions made that are labeled as positive.&lt;/LI&gt;&lt;LI&gt;True negative&amp;nbsp;(TN) - These are the correct predictions made that are labeled as negative.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Using these four components, we can calculate various metrics to help us in analyzing the performance of AI strategy:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;precision&amp;nbsp;-&amp;nbsp;Precision&amp;nbsp;is the proportion of the correct predictions in the confusion matrix out of all positive predictions. precision = TP / (TP + FP)&lt;/LI&gt;&lt;LI&gt;recall&amp;nbsp;-&amp;nbsp;Recall&amp;nbsp;is the proportion of correct predictions in the confusion matrix out of all positive classes. recall = TP / (TP + FN)&lt;/LI&gt;&lt;LI&gt;F1 score&amp;nbsp;-&amp;nbsp;F1 score&amp;nbsp;allows you to compare low-precision models to high-recall models, or vice versa, by using the harmonic mean of&amp;nbsp;precision&amp;nbsp;and&amp;nbsp;recall&amp;nbsp;to punish extreme values. F1 score = (2 * precision * recall) / (precision + recall)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;(Source: &lt;A href="https://www.omnicalculator.com/statistics/confusion-matrix" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.omnicalculator.com/statistics/confusion-matrix&lt;/A&gt;)&lt;/P&gt;&lt;P&gt;In information extraction (IE), the classical confusion matrix concepts of TP/FP/FN/TN must be adapted carefully, and the ‚ÄúTrue Negative‚Äù often loses relevance.&lt;/P&gt;&lt;P&gt;In practice:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;TP = prediction matches golden truth (exact string match).&lt;/LI&gt;&lt;LI&gt;FP = system predicted something wrong (a wrong extraction).&lt;/LI&gt;&lt;LI&gt;FN = system missed the correct thing (no prediction or wrong prediction).&lt;/LI&gt;&lt;LI&gt;TN = usually not counted, because the ‚Äúset of things not to extract‚Äù is unbounded.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This is why precision and recall in IE are usually defined as in the following formulas:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="precision-recall.png" style="width: 521px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273624iC6BD944E85649456/image-dimensions/521x175?v=v2" width="521" height="175" role="button" title="precision-recall.png" alt="precision-recall.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Example:&lt;/P&gt;&lt;P&gt;If your system:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Correctly extracts 80 entities (TP)&lt;/LI&gt;&lt;LI&gt;Extracts 100 entities total (so 20 are wrong ‚Üí FP)&lt;/LI&gt;&lt;LI&gt;There were 90 true entities to extract (so 10 were missed ‚Üí FN)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Then:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Precision = 80 / 100 = 0.80&lt;/LI&gt;&lt;LI&gt;Recall = 80 / 90 = 0.89&lt;/LI&gt;&lt;LI&gt;F1 = 2 * (0.80 * 0.89) / (0.80 + 0.89) ‚âà 0.84&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The SAP AI Launchpad provides a choice of several different metrics. These are shown in the step 3 of the configuration (see Figure 25).&lt;/P&gt;&lt;P&gt;BERT score is an automatic evaluation metric for text generation that computes a similarity score for each token in the candidate sentence with each token in the reference sentence.&lt;BR /&gt;It leverages the pre-trained contextual embeddings from BERT models and matches words in candidate and reference sentences by cosine similarity. Moreover, BERT score computes precision, recall, and F1 measure, which can be useful for evaluating different language generation tasks and therefore the appropriate choice for this work. However, one shall not be surprised in case of exact matches since due to the probabilistic approach, BERTscore calculation of precision and recall might slightly deviate from the mathematical one. Thus, precision and recall while theoretically range only between 0 and 1, when computed by BERTscore could exceed 1, perhaps at the 6th decimal digit. Practically, this difference should however have no impact on business use.&lt;/P&gt;&lt;H3 id="toc-hId--571924752"&gt;&lt;SPAN&gt;Orchestration Configuration&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Quantitative Benchmarking AI strategies involves typically large number of ‚Äúgolden-truth‚Äù to be processeed, by different configurations consisting in different parameters and prompts. In the SAP AI terminology, this overall setup is described as an ‚Äúorchestration‚Äù.&lt;/P&gt;&lt;P&gt;Each combination of Model, Prompt, Dataset, Grounding, Masking and Metrics that one wants to have executed must be specified in an Orchestration Configuration.&lt;/P&gt;&lt;P&gt;Given the design of the evaluation, in our case we are going to run 1 configuration per each model, while keeping all other parameters the same. The prompt, properly formatted, needs to be pasted into the &lt;STRONG&gt;template&lt;/STRONG&gt;.&lt;STRONG&gt;content&lt;/STRONG&gt; part of the JSON file.&lt;/P&gt;&lt;P&gt;Hereafter the content of the configuration file ‚Äúgpt35-turbo.json‚Äù.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "module_configurations": {
      "llm_module_config": {
        "model_name": "gpt-35-turbo",
        "model_params": {
          "max_tokens": 2000,
          "temperature": 0
        },
        "model_version": "latest"
      },
      "templating_module_config": {
        "template": [
          {
            "role": "user",
            "content": "I am a pharmacovigilance expert and i need to know if a phrase contains evidence of a potential adverse drug event. For this reason i need you to support me by doing the following tasks, in strict mode and without explanations. Do the following:\n1. Classify if a phrase as a whole could be indicative of a potential adverse drug event\n2. if the first step is YES, then the output parameter \"hasAE\" must be set to \"POSITIVE\", otherwise to \"NEGATIVE\". \n2.1 identify the drug name, UPPERCASE it and use it as value for the output variable \"Drug\", otherwise set it to X\n2.2. identify the amount of drug used, UPPERCASE it and use it as value for the output variable \"Dose\" , otherwise set it to X\n2.3 identify the adverse event reported, ensuring that it is part of the MEDDRA terminology, UPPERCASE it and use it as value for the output variable \"AdverseEvent\",otherwise set it to X.\n 3.The output must have the following structure:\nhasAE|Drug|Dose|AdverseEvent\n.{{?Phrase}}."
          }
        ],
        "defaults": {
        }
      }
    }
  }&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--768438257"&gt;SAP Object Store&lt;/H3&gt;&lt;P&gt;The SAP Object Store plays a key role in the &lt;STRONG&gt;Evaluation&lt;/STRONG&gt;. It is in the SAP Object Store that all the orchestration artifacts are stored and as well results of the different runs. The SAP AI Launchpad allows several different types of SAP Object Store to be used. In this blog I am using the AWS S3 implementation.&lt;/P&gt;&lt;H4 id="toc-hId--1258354769"&gt;&lt;SPAN&gt;Preconditions&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;Following are the steps that needs to be done by the BTP Administrator of your account:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Have an entitlement for SAP Object Store&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create an instance of the SAP Object Store&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 9.png" style="width: 654px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273638iE79361F57D55DC7F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 9.png" alt="Picture 9.png" /&gt;&lt;/span&gt;&lt;BR /&gt;Figure 9. The result of creating an &lt;STRONG&gt;Object Store&lt;/STRONG&gt; instance.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create&amp;nbsp; a service key of the SAP Object Store and hand that over to you as JSON file.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 10.png" style="width: 904px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273640i8DA25D51970E1331/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 10.png" alt="Picture 10.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Figure 10. The result of creating a &lt;STRONG&gt;Service Key&lt;/STRONG&gt; from the&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;Object Store&lt;/STRONG&gt; instance.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;Hereafter the content of that service key, that i used in this blog.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "access_key_id": "AKIAU6GD22UIKT273FOW",
  "bucket": "hcp-cc9c52a2-5f62-4563-bcc2-fdfb0d582164",
  "secret_access_key": "Z4Rtp+/X/q5T/VzOhE1x/v9CM4Da41AGo/fIMNjd",
  "host": "s3-eu-central-1.amazonaws.com",
  "region": "eu-central-1",
  "uri": "s3://AKIAU6GD22UIKT273FOW:Z4Rtp%2B%2FX%2Fq5T%2FVzOhE1x%2Fv9CM4Da41AGo%2FfIMNjd@s3-eu-central-1.amazonaws.com/hcp-cc9c52a2-5f62-4563-bcc2-fdfb0d582164",
  "username": "hcp-s3-4755316a-f001-4ad4-9a1b-330767b77e0d"
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Actions&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1. Install aws client v2.&lt;BR /&gt;&lt;SPAN&gt;Once the artifacts are created ( the test dataset and the configurations for the runs that one wants to execute ) they need to be transferred into the Object Store. When using AWS S3 as object store implementation, then one needs to have the aws client locally installed and properly configured.&lt;/SPAN&gt;&lt;BR /&gt;A local installation of the AWS client v2 is required, and something that is described in the &lt;A title="Installing or updating to the latest version of the AWS CLI" href="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html&amp;nbsp;" target="_blank" rel="noopener nofollow noreferrer"&gt;corresponding documentation&lt;/A&gt; of AWS.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;2. Configure the aws client&lt;BR /&gt;The configuration of the aws client requires information from the previously created service key.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Of all the parametrs of the service key the following are needed to configure the aws client:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;key&lt;/TD&gt;&lt;TD width="50%"&gt;values&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;SPAN&gt;access_key_id&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;SPAN&gt;AKIAU6GD22UIKT273FOW&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;SPAN&gt;bucket&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;SPAN&gt;hcp-cc9c52a2-5f62-4563-bcc2-fdfb0d582164&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;SPAN&gt;secret_access_key&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&amp;nbsp;&lt;SPAN&gt;4Rtp+/X/q5T/VzOhE1x/v9CM4Da41AGo/fIMNjd&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;SPAN&gt;region&lt;BR /&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN&gt;eu-central-1&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;SPAN&gt;The configuration of aws client is performed as shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;PRE&gt;%aws configure&lt;BR /&gt;&lt;SPAN&gt;AWS Access Key ID [None]:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; AKIAU6GD22UIKT273FOW&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;AWS Secret Access Key [None]: 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&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Default region name [None]:&amp;nbsp;&amp;nbsp; eu-central-1&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Default output format [None]:&lt;/SPAN&gt;&lt;/PRE&gt;&lt;P&gt;&lt;SPAN&gt;By executing the above command, the files&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;PRE&gt;&lt;SPAN&gt;.aws/config&lt;BR /&gt;.aws/credentials&lt;/SPAN&gt;&lt;/PRE&gt;&lt;P&gt;&lt;SPAN&gt;will be created in your home directory and utilised by the aws commands for any subsequent operation.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;These are plain text files and their content can be easily inspected&lt;/SPAN&gt;&lt;/P&gt;&lt;PRE&gt;&lt;SPAN&gt;&amp;nbsp;.aws/config&lt;BR /&gt;[default]&lt;BR /&gt;region = eu-central-1&lt;BR /&gt;&lt;BR /&gt;.aws/credentials&lt;BR /&gt;[default]&lt;BR /&gt;aws_access_key_id = AKIAU6GD22UIKT273FOW&lt;BR /&gt;aws_secret_access_key = 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&lt;/SPAN&gt;&lt;/PRE&gt;&lt;P&gt;&lt;SPAN&gt;2. testing of the aws client&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Detailed documentation of the commands available by the aws client is provided in the &lt;A href="https://docs.aws.amazon.com/cli/latest/userguide/cli_s3_code_examples.html" target="_blank" rel="noopener nofollow noreferrer"&gt;aws documentation&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The proper installation and configuration of the aws client can be simply verified by typing the following command:&lt;/SPAN&gt;&lt;/P&gt;&lt;PRE&gt;&lt;SPAN&gt;aws s3api get-bucket-location --bucket hcp-cc9c52a2-5f62-4563-bcc2-fdfb0d582164&lt;BR /&gt;&lt;/SPAN&gt;&lt;/PRE&gt;&lt;P&gt;If the aws client has been properly configured, then it should return the value of the region parameter from the service key.&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
"LocationConstraint": "eu-central-1"
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId--868062260"&gt;&lt;SPAN&gt;Uploading of Artifacts&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Once the artifacts ( configuration run, test dataset)&amp;nbsp; are created, one needs to push them to the appropriate folder structure to the S3 Object Store location as described in the&lt;A title="SAP AI Launchpad" href="https://help.sap.com/docs/ai-launchpad" target="_blank" rel="noopener noreferrer"&gt; documentation&lt;/A&gt;&amp;nbsp; Hereafter the local file structure as I createad for this explicit case, that included&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;one dataset, with 300 pairs of phrases and corresponding golden truth&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;four different run configurations, all having the same prompt and only changing the model used, since&amp;nbsp;the onnline prompt management storage cannot be accessed by the execution runs.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Figure 11 shows the local file structure that i created for this blog.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 11.png" style="width: 628px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273642iA68B57D05E04C689/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 11.png" alt="Picture 11.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;SPAN&gt;Figure 11. The local file structure used in this blog.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;To facilitate understanding of this blog,&amp;nbsp; a copy of the &lt;A title="Folder containing run and testdata files" href="https://github.com/lucatoldo/Benchmarking-Generative-AI-for-Drug-Safety-Using-SAP-AI-Launchpad/tree/main/eval-data" target="_blank" rel="noopener nofollow noreferrer"&gt;eval-data folder&lt;/A&gt; is accessible from the &lt;A href="https://github.com/lucatoldo/Benchmarking-Generative-AI-for-Drug-Safety-Using-SAP-AI-Launchpad" target="_blank" rel="noopener nofollow noreferrer"&gt;github repository created for this tutorial&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;To push all of that data to AWS S3 one can simply perform the following command from within the eval-data folder:&lt;/P&gt;&lt;PRE&gt;aws s3 cp ‚Äìrecursive . s3://hcp-cc9c52a2-5f62-4563-bcc2-fdfb0d582164/ade-v2/eval/&lt;/PRE&gt;&lt;P&gt;That will generate the folder structure on AWS S3 precisely as locally, and the files will be appropriately copied over. One can verify the successful result by :&lt;/P&gt;&lt;PRE&gt;aws s3 ls --recursive s3://hcp-cc9c52a2-5f62-4563-bcc2-fdfb0d582164/ade-v2/eval/&lt;BR /&gt;2025-05-28 14:20:20&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1388 ade-v2/eval/runs/gemini-2.0-flash.json&lt;BR /&gt;2025-05-28 14:20:20&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1382 ade-v2/eval/runs/gpt-4o.json&lt;BR /&gt;2025-05-28 14:20:20&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1384 ade-v2/eval/runs/gpt35turbo.json&lt;BR /&gt;2025-05-28 14:20:20&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1405 ade-v2/eval/runs/mistral-large-instruct.json&lt;BR /&gt;2025-05-28 14:20:20&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 70662 ade-v2/eval/testdata/ade-v2-300-dataset.json&lt;/PRE&gt;&lt;H3 id="toc-hId--1357978772"&gt;&lt;SPAN&gt;SAP AI Core Administration / Object Store Secrets&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Due to the abstraction layer provided by platform, Object Store Secrets needs to be created in the SAP AI Core Administration.&amp;nbsp;&lt;/P&gt;&lt;P&gt;These secrets must be created in the resource group "default‚Äù , and one of them must have the variable "name" set equal to&amp;nbsp; ‚Äúdefault‚Äù, as shown in the Figures below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273689iF87C84E357036B86/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 13.png" alt="Picture 13.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 14.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273688i3485D68CB04E56A5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture 14.png" alt="Picture 14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In this example, the ‚Äúade-v2‚Äù object store secret is used to store the name and AWS credentials of the root folder where all input and output are stored. In our case, ‚Äúade-v2‚Äù.&lt;/P&gt;&lt;P&gt;The ‚Äúdefault‚Äù object store secret is used to store the name and AWS credentials of the folder where the output for each run are going to be saved. In our case ‚Äúoutput‚Äù.&lt;/P&gt;&lt;P&gt;To save or modify the secrets one has to enter in the ‚ÄúSecret‚Äù text area a properly formatted JSON object containing the corresponding fields from the Object Store Service Key and used for the&amp;nbsp; aws configuration too.&lt;/P&gt;&lt;P&gt;It is very practical to keep the following JSON object (make sure that the keys are CAPITAL as shown below, otherwise will not work ) easily available during the configuration creation process.&lt;/P&gt;&lt;PRE&gt;{&lt;BR /&gt;"AWS_ACCESS_KEY_ID"&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; : "AKIAU6GD22UIKT273FOW",&lt;BR /&gt;"AWS_SECRET_ACCESS_KEY" : "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"&lt;BR /&gt;}&lt;/PRE&gt;&lt;H3 id="toc-hId--1554492277"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--1751005782"&gt;&lt;SPAN&gt;ML Operations&amp;nbsp; / Other Artifacts&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Due to the Object Store abstraction layer, that enables customers using different Object Store implementations, there is need of defining an additional ‚Äúartifact‚Äù that provides the ‚Äúroot location‚Äù for all the artifacts used during the Evaluation run. This is a very important and required activity and hereafter i describe step by step how to do it.&lt;/P&gt;&lt;P&gt;Add new artifact is the starting activity.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 15.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273694i490005CBB8481E80/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 15.png" alt="Picture 15.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The User Interface helps the creation of the artifact using a guided approach. After creating "add"&amp;nbsp; the step by step procedure is guided.&lt;/P&gt;&lt;H5 id="toc-hId-1760641995"&gt;STEP 1 Select Scenario&lt;/H5&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 16.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273695i23A2DC051B20C8E2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 16.png" alt="Picture 16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Genai-evaluations is the option to be used as first step, as shown above.&lt;/P&gt;&lt;H5 id="toc-hId-1732312181"&gt;&lt;SPAN&gt;STEP 2 General Information&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 17.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273698i78B4F0105CE336E8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 17.png" alt="Picture 17.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The value used for the ‚ÄúName‚Äù variable, is going to be used through the configuration and must be unique across all ‚Äúother artifact‚Äù. It is a very important variable and therefore should be thought carefully. In my case due to the purpose of that variable, i named according to the location of the folder that contains both the run and the testdata.&lt;/P&gt;&lt;P&gt;In my case, this is /ade-v2/eval/, and therefore I called this variable &lt;STRONG&gt;ade-v2-eval&lt;/STRONG&gt;.&lt;/P&gt;&lt;H5 id="toc-hId-1535798676"&gt;&lt;SPAN&gt;&lt;SPAN&gt;STEP 3 URL&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 18.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273709iB612326A94199344/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 18.png" alt="Picture 18.png" /&gt;&lt;/span&gt;The value of the URL in step 3 is very critical:&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The URL prefix must be ai://&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The url must not finish with a ‚Äú/‚Äù&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The URL must be ai://fullpath-to-the-rootFolder&lt;BR /&gt;where all the files are stored.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;In our case&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%"&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;PRE&gt;&lt;SPAN&gt;/ade-v2/eval&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/PRE&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;SPAN&gt;&amp;nbsp; is the root folder since&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;PRE&gt;&lt;SPAN&gt;/ade-v2/eval/runs&lt;/SPAN&gt;&lt;/PRE&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;SPAN&gt;contains the configuration files&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;PRE&gt;&lt;SPAN&gt;/ade-v2/eval/testdata&lt;/SPAN&gt;&lt;/PRE&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&amp;nbsp;&lt;SPAN&gt;contains the JSON formatted of the input data&lt;/SPAN&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;SPAN&gt;Therefore the value for the URL is:&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--2075473104"&gt;&lt;SPAN&gt;ai://ade-v2/eval&lt;/SPAN&gt;&lt;/H2&gt;&lt;H5 id="toc-hId-1142771666"&gt;&lt;SPAN&gt;STEP 4 Labels&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 19.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273710i8F24F2FE9A6F7559/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 19.png" alt="Picture 19.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;No labels are required and therefore we can easily proceed to the last step.&lt;/P&gt;&lt;H5 id="toc-hId-946258161"&gt;&lt;SPAN&gt;STEP 5 Review&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 20.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273711i903BDC3C1C0EBF1D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 20.png" alt="Picture 20.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As for previous configuration activity, also for the ‚Äúother artifact‚Äù creation it is possible to review all parameters before it being created.&lt;/P&gt;&lt;P&gt;The final outcome of that configuration can be seen in the ‚ÄúML Operations / Other Artifacts‚Äù&amp;nbsp; page:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273713i55B2BAE4EC046980/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 21.png" alt="Picture 21.png" /&gt;&lt;/span&gt;‚ÄÉ&lt;/P&gt;&lt;P&gt;The ade-v2-eval will be used later as the first step in the creation of the Configuration in the Evaluation page.&lt;/P&gt;&lt;H2 id="toc-hId-1629953677"&gt;&lt;SPAN&gt;Experiments and Results &lt;/SPAN&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-1140037165"&gt;&lt;SPAN&gt;Configuration and Execution&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;At this point everything is ready to create an overall configuration orchestration, and then have execute the 1200 runs.&lt;/P&gt;&lt;P&gt;To create an Evaluation one simply click on the ‚Äúcreate‚Äù button.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 22.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273715i15E4A4AC86661F8B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 22.png" alt="Picture 22.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;That initiates a 4 step guided approach:&lt;/P&gt;&lt;H5 id="toc-hId-356717646"&gt;STEP 1 Select the Test artifact.&lt;/H5&gt;&lt;P&gt;This step requires 4 variables to be specified&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Test Artifact&lt;/STRONG&gt;&lt;BR /&gt;this is the previously generated artifact that has the location of the rootFolder.&lt;BR /&gt;in our case ‚Äúade-v2-eval‚Äù that points to ‚Äúade-v2/eval‚Äù&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Runs&lt;/STRONG&gt;&lt;BR /&gt;this is simply the folder name , relative to the root, where the run configuration files have been saved.&lt;BR /&gt;In our case the root is ‚Äúade-v2/eval‚Äù, the folder is ‚Äúade-v2/eval/runs‚Äù and therefore here goes only ‚Äúruns‚Äù.&lt;BR /&gt;&lt;/SPAN&gt;We want to have all those 1200 runs executed, therefore we only specify the folder name. Otherwise one could have selected individual files only.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Dataset Format&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;The dataset can be provided in either JSON or CVS, in our case we choose &lt;STRONG&gt;JSON&lt;/STRONG&gt;, &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Dataset Location, &lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;related&amp;nbsp; to the rootFolder: &lt;/SPAN&gt;&lt;STRONG&gt;testdata/ade-v2-300-dataset.json&lt;/STRONG&gt;&lt;BR /&gt;since it is in ‚Äúade-v2/eval/testdata‚Äù folder.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 24.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273716i0EE38B721C1BFB5B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 24.png" alt="Picture 24.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-160204141"&gt;&lt;SPAN&gt;&amp;nbsp;STEP 2&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Select the Metric&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;As previously mentioned, the SAP AI Launchpad offers several metrics to calculate the quality of the results and compare them to your reference&amp;nbsp; golden standard. One or more metrics can be selected by simply clicking on the user interface.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 25.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273717i408A09C839C31CD2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 25.png" alt="Picture 25.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Each metric might require mapping variables between your dataset and the internal configuration of the metric. This is achieved in the ‚ÄúAdditional Configurations‚Äù step as shown below.&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--36309364"&gt;&lt;SPAN&gt;STEP 3 Additional Configuration&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;As described in the &lt;A href="https://help.sap.com/docs/sap-ai-core" target="_blank" rel="noopener noreferrer"&gt;SAP AI Core documentation&lt;/A&gt;&amp;nbsp; documentation, BERTscore requires a variable ‚Äú&lt;STRONG&gt;reference&lt;/STRONG&gt;‚Äù mapped to the ‚ÄúThe ground truth reference string provided by the user‚Äù. This implies, that BERTscore can only be applied to a single ‚Äústring‚Äù and not to a JSON object with sub-component. Ideally, we would like to have aBERTscore for each of the components of the ADE: Drug, Dose, Adverse Event, hasAE, however that is currently not yet supported. Therefore we combine all of those outputs in a single string, pipe separated so that at postprocessing (outside the SAP AI Launchpad) one could compute those individual components too. While we are using only the BERTscore in our run, to facilitate usage of multiple metrics one can use the target prefix &lt;STRONG&gt;all_metrics&lt;/STRONG&gt;, and that is what is shown below.&lt;BR /&gt;In the reference dataset, we called "goldenTruth" the reference value. Here we therefore have to specify that&lt;/P&gt;&lt;PRE&gt;&lt;STRONG&gt;all_metrics&lt;/STRONG&gt;.&lt;STRONG&gt;reference&lt;/STRONG&gt; needs to be mapped to the &lt;STRONG&gt;data&lt;/STRONG&gt;.&lt;STRONG&gt;goldenTruth&lt;/STRONG&gt;&lt;/PRE&gt;&lt;P&gt;If in the input dataset instead of using "goldenTruth" we would have used the string "reference", then no mapping would be required.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 26.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273718i2CAA9B406D324DFC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 26.png" alt="Picture 26.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId--64639178"&gt;&lt;SPAN&gt;STEP 4 Review and Create Execution Job&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;Once all parameters are provided, a final page allows to review them and eventually navigate back and modify them accordingly.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 27.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273719i8E36FDA6C01DB3AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 27.png" alt="Picture 27.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;By clicking on the ‚Äúcreate‚Äù button, the following 2 things will happen:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;A new configuration is created and displayed in the ML Operations / Configurations tab&lt;BR /&gt;Here you can see a list of many configurations that I created in the past.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Unfortunately at the moment it is not possible to delete configurations, but perhaps this will change in future versions.&lt;/SPAN&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 28.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273720iBDE047DD5B6C8FC3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 28.png" alt="Picture 28.png" /&gt;&lt;/span&gt;‚ÄÉ&lt;BR /&gt;By clicking on a ‚ÄúML Operations / Configurations‚Äù item, one can see all the details specific for that configuration.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 29.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273722iE94C5A27B0FE231E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 29.png" alt="Picture 29.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;The button ‚ÄúCreate Execution‚Äù is very useful, for example when modifying the content of the runs folder or of the testDataset, and then wanting to resubmit the same configuration without modifying the&amp;nbsp; parameters.&lt;BR /&gt;However, if the configuration creation has been successful, the configuration will have been already automatically submitted for execution&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;A new Execution is created in the ML Operations / Executions tab.&lt;BR /&gt;That page can be inspected to follow the progress of the execution and / or identify changes required due to errors in the configuration or in the data‚ÄÉ.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture 30.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273724i0DAD10B98B8528ED/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture 30.png" alt="Picture 30.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;You can monitor the status of the execution by clicking on ‚ÄúML Operations / Executions‚Äú and then selecting the appropriate one.&amp;nbsp; All executions that one has performed can be seen in the ‚ÄúML Operations / Execution‚Äù page, however, in that page one can also delete individual executions (and is good practice to keep a clean environment).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;This was the longest part of this blog series, in the next one we are going to see the output that has been generated, and therefore answer the initial question: are the LLM going to potentially revolutionise Pharmacovigilance ?&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/artificial-intelligence-and-machine-learning-blogs/benchmarking-generative-ai-for-drug-safety-using-sap-ai-launchpad-part-2-of/ba-p/14126525"/>
    <published>2025-06-17T13:00:57.882000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/artificial-intelligence-and-machine-learning-blogs/benchmarking-generative-ai-for-drug-safety-using-sap-ai-launchpad-part-1-of/ba-p/14126211</id>
    <title>Benchmarking Generative AI for Drug Safety Using SAP AI Launchpad - Part 1 of 3</title>
    <updated>2025-06-17T13:01:02.040000+02:00</updated>
    <author>
      <name>LucaToldo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/44202</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1861465759"&gt;Rethinking Pharmacovigilance with Generative AI&lt;/H3&gt;&lt;P&gt;This blog post is the first in a three-part series that I authored to showcase the capabilities and maturity of the SAP AI Launchpad. It illustrates how the platform supports quantitative evaluation of diverse AI strategies. While pharmacovigilance is not currently within the scope of any SAP AI product offering, I chose this domain due to the complexity of the task, my personal expertise in assessing outcome quality, and the availability of high-quality public datasets.&lt;/P&gt;&lt;P&gt;All datasets, configurations, results, and technical resources can be found here:&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;üëâ&lt;/span&gt;&lt;A class="" href="https://github.com/lucatoldo/Benchmarking-Generative-AI-for-Drug-Safety-Using-SAP-AI-Launchpad" target="_new" rel="noopener nofollow noreferrer"&gt;GitHub Repository&lt;/A&gt;&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;‚ö†Ô∏è&lt;/span&gt;&lt;STRONG&gt;Important Note:&lt;/STRONG&gt;&lt;BR /&gt;This study is based on the internal May/June 2025 release of SAP AI Launchpad. While minor changes may appear in the general availability (GA) version, the overall workflow, challenges, and key insights will remain applicable.&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt; Pharmacovigilance is a highly regulated area governed by GxP requirements. This blog does not address GxP compliance or the suitability of SAP AI Launchpad for GxP-regulated applications, nor does it make recommendations in this regard.&lt;/P&gt;&lt;H3 id="toc-hId-1664952254"&gt;&lt;EM&gt;&lt;STRONG&gt;PART 1- Rethinking Drug Safety with Generative AI and SAP AI Launchpad&lt;/STRONG&gt;&lt;/EM&gt;&lt;/H3&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Key Highlights:&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;EM&gt;Historical context: Hippocrates, Paracelsus, and the evolution of pharmacovigilance&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;The rise of Adverse Drug Reactions (ADRs)&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;Motivation for AI in drug safety&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;SAP AI Launchpad as a business-user-ready, zero-code solution&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Theme&lt;/STRONG&gt;: The problem space and the promise of AI in pharmacovigilance&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Target audience&lt;/STRONG&gt;: Healthcare professionals, AI enthusiasts, SAP users&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Goal&lt;/STRONG&gt;: Set the stage for why this work matters and how SAP AI Launchpad fits into the future of pharmacovigilance.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Abbreviations used:&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;EM&gt;LLM: Large Language Models&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;ADRs: Adverse Drug Reactions (singular form: ADR)&amp;nbsp;&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1468438749"&gt;&lt;EM&gt;Primum Non Nocere&lt;/EM&gt;&lt;/H3&gt;&lt;P&gt;Hippocrates of Kos (circa 460‚Äì370 BCE), often regarded as the father of modern medicine, is credited with the maxim "First, do no harm" (&lt;EM&gt;primum non nocere&lt;/EM&gt;), which underpins medical ethics to this day. This foundational principle dictates that every medical intervention should enhance, or at the very least, not diminish the patient‚Äôs quality of life. Even in antiquity, it was recognized that any therapeutic action could entail risks, potentially exacerbating a patient‚Äôs condition.&lt;/P&gt;&lt;H3 id="toc-hId-1271925244"&gt;&lt;EM&gt;Sola Dosis Facit Venenum&lt;/EM&gt;&lt;/H3&gt;&lt;P&gt;Approximately 1,500 years after Hippocrates, Philippus Aureolus Theophrastus Bombastus von Hohenheim‚Äîbetter known as Paracelsus (1493‚Äì1541 CE)‚Äîfamously asserted in his work&amp;nbsp;"Third Defense": "Solely the dose determines that a thing is not a poison" (&lt;EM&gt;Sola dosis facit venenum&lt;/EM&gt;). Paracelsus‚Äôs insight laid the foundation for the field of toxicology (&lt;A title="Theophrastus Bombastus Von Hohenheim (Paracelsus) (1493‚Äì1541): The eminent physician and pioneer of toxicology" href="https://doi.org/10.1016/j.toxrep.2021.02.012" target="_blank" rel="noopener nofollow noreferrer"&gt;Michaleas SN et al.,2021&lt;/A&gt;). Today, the determination of the LD50 (lethal dose for 50% of a tested animal population) remains a key step in the safety assessment of new compounds prior to their approval for human use (&lt;A title="A Review of the LD50 and Its Current Role in Hazard Communication" href="https://doi.org/10.1021/acs.chas.0c00096" target="_blank" rel="noopener nofollow noreferrer"&gt;Morris-Schaffer, K &amp;amp; McCoy, MJ., 2021&lt;/A&gt;).&lt;/P&gt;&lt;H3 id="toc-hId-1075411739"&gt;&lt;SPAN&gt;Adverse Drug Reactions&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Subsequent centuries of medical practice revealed that even minimal doses of drugs could precipitate severe adverse outcomes, such as anaphylactic reactions. This recognition compelled the implementation of more rigorous preclinical and clinical assessments prior to drug approval. Regulatory authorities were established to oversee the approval and withdrawal of pharmaceuticals, supported by a standardized definition of Adverse Drug Reactions (ADRs) (&lt;A title="Adverse Drug Reactions" href="https://www.ncbi.nlm.nih.gov/books/NBK599521/" target="_blank" rel="noopener nofollow noreferrer"&gt;Kommu S et al.,2024)&lt;/A&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;A response to a drug which is noxious and unintended, and which occurs at doses normally used for prophylaxis, diagnosis, or therapy of disease or the modification of physiologic function&lt;/EM&gt;.&lt;/P&gt;&lt;P&gt;While clinical trials involve relatively small cohorts, the evaluation of ADRs is an ongoing process that extends well beyond initial market authorization.&lt;/P&gt;&lt;P&gt;The societal impact of ADRs has grown markedly over recent years. In 2012, it was estimated that 6% of hospitalizations involved severe ADRs; by 2018, that figure had risen to nearly 10%. In 2012, ADR-related deaths in the United States were estimated at 100,000 annually; by 2025, this number is projected to have tripled. While this increase may partially reflect improved reporting and an aging population, the absolute numbers remain alarming. ADRs are now the fourth leading cause of death in the United States, representing a major obstacle to drug development and a primary reason for drug withdrawals, with considerable societal and financial consequences.&lt;/P&gt;&lt;H2 id="toc-hId-749815515"&gt;&lt;SPAN&gt;Background &amp;amp; Problem Statement&lt;/SPAN&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-682384729"&gt;&lt;SPAN&gt;Revolution in Pharmacovigilance&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;According to harmonized international guidelines‚Äîsuch as the International Conference on Harmonisation of Technical Requirements for Registration of Pharmaceuticals for Human Use (ICH E2C R2,&amp;nbsp;&lt;A title="ICH HARMONISED TRIPARTITE GUIDELINE PERIODIC BENEFIT-RISK EVALUATION REPORT (PBRER) E2C(R2)" href="https://database.ich.org/sites/default/files/E2C_R2_Guideline.pdf" target="_blank" rel="noopener nofollow noreferrer"&gt;ICH, 2012&lt;/A&gt;)‚Äîthe Marketing Authorization Holder is obliged to continuously assess all relevant safety information for their products. This information may originate from clinical trials, spontaneous reports by healthcare professionals, scientific literature, or even social media. The goal is an ongoing reassessment of benefit‚Äìrisk profiles throughout the lifecycle of a medicinal product.&lt;/P&gt;&lt;P&gt;Until the late 1990s, pharmacovigilance primarily involved manually querying scientific literature databases and laboriously reviewing reports. However, with the advent of the World Wide Web and the democratization of content publishing, it became increasingly evident that manual methods were inadequate to tackle the exponential growth in information sources.&lt;/P&gt;&lt;P&gt;Modern pharmacovigilance now faces an overwhelming and ever-expanding array of data sources‚Äîcomprising millions of case reports, scientific publications, regulatory filings, and real-time social media feeds. These data streams are often multilingual and highly unstructured, making comprehensive signal detection and timely intervention a formidable challenge. Manual methods and even traditional machine learning techniques, while valuable, are increasingly unable to keep pace with the scale, complexity, and evolving nature of adverse event data.&lt;/P&gt;&lt;P&gt;By 2013, automated methods for identifying potential ADRs in free text had been developed and demonstrated high accuracy (&lt;A title="Automatic detection of adverse events to predict drug label changes using text and data mining techniques" href="https://doi.org/10.1002/pds.3493" target="_blank" rel="noopener nofollow noreferrer"&gt;Gurulingappa et al., 2013&lt;/A&gt;). These approaches typically relied on manually annotated corpora (&lt;A title="Development of a benchmark corpus to support the automatic extraction of drug-related adverse effects from medical case reports" href="https://doi.org/10.1016/j.jbi.2012.04.008" target="_blank" rel="noopener nofollow noreferrer"&gt;Gurulingappa et al., 2012&lt;/A&gt;) and traditional machine learning algorithms. More recently, the introduction of generative AI models has been identified as a transformative advance for drug safety and pharmacovigilance (&lt;A title="Leveraging Generative AI for Drug Safety and Pharmacovigilance" href="http://dx.doi.org/10.2174/0127724328311400240823062829" target="_blank" rel="noopener nofollow noreferrer"&gt;Mishra HP and Gupta R,2025&lt;/A&gt;).&lt;/P&gt;&lt;P&gt;&lt;A title="SAP AI Launchpad" href="https://help.sap.com/docs/ai-launchpad" target="_blank" rel="noopener noreferrer"&gt;SAP AI Launchpad&lt;/A&gt;, with its code-free interface and flexible integration of large language models (LLMs), represents a potential paradigm shift. By empowering professionals and business users‚Äîregardless of their programming expertise‚Äîto configure, evaluate, and deploy advanced AI models, &lt;A title="SAP AI Launchpad" href="https://help.sap.com/docs/ai-launchpad" target="_blank" rel="noopener noreferrer"&gt;SAP AI Launchpad&amp;nbsp;&lt;/A&gt;offers the promise of dramatically accelerating signal detection, streamlining regulatory compliance, and reducing the human and economic toll of undetected safety signals.&lt;/P&gt;&lt;H3 id="toc-hId-485871224"&gt;&lt;SPAN&gt;Automatic Detection of Potential Adverse Drug Reactions&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;For this study, I employ the benchmark dataset created by &lt;A title="Development of a benchmark corpus to support the automatic extraction of drug-related adverse effects from medical case reports" href="https://doi.org/10.1016/j.jbi.2012.04.008" target="_blank" rel="noopener nofollow noreferrer"&gt;Gurulingappa et al. (2012)&lt;/A&gt;, as detailed in&amp;nbsp;their publication&amp;nbsp;and available at&amp;nbsp;&lt;A title="ADE Corpus v2" href="https://huggingface.co/datasets/ade-benchmark-corpus/ade_corpus_v2" target="_blank" rel="noopener nofollow noreferrer"&gt;Hugging Face&lt;/A&gt;. This gold standard corpus comprises systematically annotated MEDLINE case reports, capturing mentions of drugs, adverse effects, dosages, and the relationships between them. Stringent annotation protocols have ensured the reliability of the data for information extraction research. The creation process and quality evaluation are thoroughly described in the original paper. Notably, this corpus was the first of its kind to address adverse drug events with such scientific rigor and has become a central resource for subsequent natural language processing&amp;nbsp; competitions in this domain.&lt;/P&gt;&lt;P&gt;A specific aim of this work is to evaluate how&amp;nbsp;&lt;A title="SAP AI Launchpad" href="https://help.sap.com/docs/ai-launchpad" target="_blank" rel="noopener noreferrer"&gt;SAP AI Launchpad&amp;nbsp;&lt;/A&gt;compares to the previously published results that utilized relational semantic extraction technologies‚Äîsuch as support vector machines‚Äîfor ADR detection (&lt;A title="Extraction of potential adverse drug events from medical case reports" href="https://doi.org/10.1186/2041-1480-3-15" target="_blank" rel="noopener nofollow noreferrer"&gt;Gurulingappa, Matteen-Rajput &amp;amp; Toldo, 2012&lt;/A&gt;&amp;nbsp;). Demonstrating that &lt;A title="SAP AI Launchpad" href="https://help.sap.com/docs/ai-launchpad" target="_blank" rel="noopener noreferrer"&gt;SAP AI Launchpad&lt;/A&gt;&amp;nbsp;can meet or exceed these benchmarks would have significant implications, not only for enabling scalable, cost-effective pharmacovigilance within the pharmaceutical industry, but also for contributing to improved patient safety outcomes throughout healthcare systems worldwide.&lt;/P&gt;&lt;H2 id="toc-hId-160275000"&gt;&lt;SPAN&gt;Solution Overview: Leveraging SAP AI Launchpad for Pharmacovigilance&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;By applying SAP AI Launchpad to public ADR datasets, I demonstrate that sophisticated pharmacovigilance tasks can be performed:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Without programming knowledge&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Without specialized hardware&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Using an enterprise-grade, SaaS-based LLM solution&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This unlocks advanced text mining and signal detection capabilities for healthcare professionals and regulatory teams‚Äîat scale, reliably, and efficiently.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/artificial-intelligence-and-machine-learning-blogs/benchmarking-generative-ai-for-drug-safety-using-sap-ai-launchpad-part-1-of/ba-p/14126211"/>
    <published>2025-06-17T13:01:02.040000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-6/ba-p/14107264</id>
    <title>What‚Äôs new in Mobile development kit client 25.6</title>
    <updated>2025-06-17T16:23:00.452000+02:00</updated>
    <author>
      <name>Jitendra_Kansal78</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3305</uri>
    </author>
    <content>&lt;P&gt;Hello Community,&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;I am happy to announce that a new release of the Mobile Development Kit(MDK) is available for all Mobile Services customers and can be downloaded on the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://me.sap.com/softwarecenter/template/products/_APP=00200682500000001943&amp;amp;_EVENT=DISPHIER&amp;amp;HEADER=Y&amp;amp;FUNCTIONBAR=N&amp;amp;EVENT=TREE&amp;amp;NE=NAVIGATE&amp;amp;ENR=73554900100900009591&amp;amp;V=MAINT" target="_blank" rel="noopener noreferrer"&gt;SAP Software Center&lt;/A&gt;&amp;nbsp;and will soon be available on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://developers.sap.com/trials-downloads.html?search=Mobile%20development%20kit" target="_blank" rel="noopener noreferrer"&gt;community Download page&lt;/A&gt;&amp;nbsp;as well.&lt;/P&gt;&lt;P&gt;The SAP Mobile Services Client has also been updated to 25.6.0 both in the Google Play Store and in Apple App Store.&lt;/P&gt;&lt;P&gt;SAP Mobile Development Kit enables developers and technical business users to build cross-platform mobile applications. It allows you to build your application once, in an integrated development environment (SAP Business Application Studio / VSCode extension) and run it natively on Mobile (Android &amp;amp; iOS). &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Below enhancements are available only on iOS and Android platforms:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;New UI enhancements&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&amp;nbsp;Support Grouping in Object Table Control&lt;/LI&gt;&lt;LI&gt;Support Body Elements in Card Collection Control&lt;/LI&gt;&lt;LI&gt;Donut Chart Support&lt;/LI&gt;&lt;LI&gt;Support Customizing Placeholder in Form Cell List Picker Control&lt;/LI&gt;&lt;LI&gt;Bottom Sheet Support for Popover Menu (Android Only)&lt;/LI&gt;&lt;LI&gt;Support Top Caption in Form Cell Segmented Control (iOS Only)&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;API and Syntax enhancements&lt;/STRONG&gt;&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;Support Lock and Wipe Settings in the MDK Client&lt;/LI&gt;&lt;LI&gt;Support Device Compliance in MDK Client&lt;/LI&gt;&lt;LI&gt;Expose Generate Content API from Gemini LLM&lt;/LI&gt;&lt;LI&gt;Simplify Application Launcher and Splash Screen Generation in MDK Branded Client&lt;/LI&gt;&lt;LI&gt;Support for getCell in DataTableRowProxy&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1730565947"&gt;&lt;STRONG&gt;&lt;U&gt;Support Grouping in Object Table Control&amp;nbsp;&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;MDK now supports grouping items in an Object Table section, making it easier to get an overview of data on large list screens.&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;//excerpt of a page 
"Grouping": {
    "GroupingProperties": [
        "CategoryName"
    ],
    "Header": {
        "Items": [{
            "Title": "Category: {CategoryName} ",
            "Styles": {
                "Title": "DataTableGroupHeaderItem",
                "BackgroundColor": "sectionBgColor"
            }
        }]
    }
},
"_Type": "Section.Type.ObjectTable",
‚Ä¶.&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Grouping in Object Table control" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273843i13B985440A719E1F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ObjectTableGrouping.png" alt="Grouping in Object Table control" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Grouping in Object Table control&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For more information, refer to the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/doc/f53c64b93e5140918d676b927a3cd65b/Cloud/en-US/docs-en/guides/features/fiori-ui/mdk/grouping.html" target="_blank" rel="noopener noreferrer"&gt;Grouping&lt;/A&gt;&amp;nbsp;documentation and its &lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Page/SectionedTable/Container/ObjectTable.schema.html#grouping" target="_blank" rel="noopener noreferrer"&gt;API Reference&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1534052442"&gt;&lt;STRONG&gt;&lt;U&gt;Support Body Elements in Card Collection Control&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The Card Collection control provides brief, related pieces of information and serves as an entry point, teaser, or preview for more detailed content. By tapping on a card, users can select it and navigate to a dedicated page with expanded information.&lt;/P&gt;&lt;P&gt;We have now introduced &lt;EM&gt;&lt;STRONG&gt;Body&lt;/STRONG&gt;&lt;/EM&gt; Elements in the Collection control. The card body is the central part of the card, used to display additional information alongside the content shown in the card header. It is a separate container that can hold various components, with a flexible height to accommodate a reasonable number of UI elements.&lt;/P&gt;&lt;P&gt;Following contents can currently displayed in Card Body Elements currently supports:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Text&lt;/LI&gt;&lt;LI&gt;Label Bar&lt;/LI&gt;&lt;LI&gt;Space&lt;/LI&gt;&lt;LI&gt;Separator&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;//excerpt of a page
   "Body": {
        "_Type": "Card.Type.Body",
        "OnPress": "/MDK2504/Rules/Card/ShowToastMessage.js",
        "Contents": [
            {
                "_Type": "CardBodyContent.Type.Text",
                "Text": "The card body is the central part of the card that is used to display additional information alongside the content shown in the card header.",
                "NumberOfLines": 5
            },
            {
                "_Type": "CardBodyContent.Type.LabelBar",
                "Layout": {
                    "LayoutType": "Vertical"
                },
                "ItemSeparator": true,
                "Items": "/MDK2504/Rules/Card/CardStaticContentLabelBarItems.js"
            },
            {
                "_Type": "CardBodyContent.Type.Space",
                "NumberOfSpacings": 3
            },
            {
                "_Type": "CardBodyContent.Type.Separator",
                "_Style": "card-label-2"
            }
        ]
    },&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-1337538937"&gt;&lt;STRONG&gt;&lt;U&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Body Elements in Card Collection Control" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273847iD955701A65C35120/image-size/medium?v=v2&amp;amp;px=400" role="button" title="CardCollectionBody.png" alt="Body Elements in Card Collection Control" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Body Elements in Card Collection Control&lt;/span&gt;&lt;/span&gt;&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;For more information, refer to th&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/doc/f53c64b93e5140918d676b927a3cd65b/Cloud/en-US/docs-en/guides/features/fiori-ui/mdk/card-collection.html#card-structure" target="_blank" rel="noopener noreferrer"&gt;Card Collection&lt;/A&gt;&amp;nbsp;documentation and its &lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Page/SectionedTable/Control/Card/Card.schema.html#body" target="_blank" rel="noopener noreferrer"&gt;API Reference&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1141025432"&gt;&lt;STRONG&gt;&lt;U&gt;Donut &lt;/U&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;U&gt;Chart Support &amp;nbsp;&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;You can now use the Donut Chart type to visualize data in a new way that emphasizes various aspects of the dataset. Donut charts are ideal for displaying proportions of categorical data in a part-to-whole analysis. They take a single dataset and represent the ratios in a circular format.&lt;/P&gt;&lt;P&gt;Support for the Donut Chart type is available in the &lt;STRONG&gt;Analytic Card Collection&lt;/STRONG&gt;, &lt;STRONG&gt;Chart Content Section&lt;/STRONG&gt;, and &lt;STRONG&gt;Object Header Chart view&lt;/STRONG&gt; UI controls.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Donut Chart in iOS" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273848i1E5F9608F5CB12D1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DonutChart_iOS.png" alt="Donut Chart in iOS" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Donut Chart in iOS&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Donut Chart in Android" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273849i6D59C4850523C726/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DonutChart_iAndroid.png" alt="Donut Chart in Android" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Donut Chart in Android&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For more information, see these documentation on Donut chart support in&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Page/SectionedTable/Control/ChartCard.schema.html#charttype" target="_blank" rel="noopener noreferrer"&gt;Analytic Card Collection&lt;/A&gt;, &lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/definitions/ChartView.schema.html#charttype" target="_blank" rel="noopener noreferrer"&gt;Chart Content Section,&lt;/A&gt; and &lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/definitions/ChartView.schema.html#charttype" target="_blank" rel="noopener noreferrer"&gt;Object Header&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-944511927"&gt;&lt;STRONG&gt;&lt;U&gt;Support Customizing Placeholder in Form Cell List Picker Control&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;P&gt;We have introduced a new property, &lt;STRONG&gt;&lt;EM&gt;Placeholder&lt;/EM&gt;&lt;/STRONG&gt;, for the List Picker Form Cell control to customize the placeholder text when no value is selected. This property provides contextual cues to guide business users in making their selections.&lt;/P&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;//excerpt of a page 
{
    "_Type": "Control.Type.FormCell.ListPicker",
    "_Name": "FormCellListPicker0",
    "PickerPrompt": "Please select one single item",
    "PlaceHolder": "Select Item",
    "IsEditable": true,
    "PickerItems": [
        "Alpha",
        "Bravo",
        --
    ]
}‚Äã&lt;/code&gt;&lt;/pre&gt;&lt;DIV&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ListPicker.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273850i2795FBCF58D228D8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ListPicker.png" alt="ListPicker.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;For more information, see this&amp;nbsp;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Page/FormCell/ListPicker.schema.html#placeholder" target="_blank" rel="noopener noreferrer"&gt;documentation. &lt;/A&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId-747998422"&gt;&lt;STRONG&gt;&lt;U&gt;Bottom Sheet Support for Popover Menu (Android Only)&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;A new property, &lt;STRONG&gt;&lt;EM&gt;IsBottomSheet&lt;/EM&gt;&lt;/STRONG&gt;, has been introduced for the &lt;STRONG&gt;Popver Menu Action&lt;/STRONG&gt;.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;When set to &lt;STRONG&gt;&lt;EM&gt;true&lt;/EM&gt;&lt;/STRONG&gt;, the popover is displayed as a &lt;STRONG&gt;bottom sheet.&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;When set to &lt;STRONG&gt;&lt;EM&gt;false&lt;/EM&gt;&lt;/STRONG&gt; or not defined, the popover is displayed as a &lt;STRONG&gt;dialog&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "PopoverItems": [{
            "Icon": "sap-icon://synchronize",
            "OnPress": "/MDK2504/Actions/Service/SyncStartedMessage.action",
            "Title": "Sync Changes"
        }
    ],
    "_Type": "Action.Type.PopoverMenu",
    "IsBottomSheet": true
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BottomSheet_Android.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273851i9A98DDB5571F5327/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BottomSheet_Android.png" alt="BottomSheet_Android.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For more information, see this&amp;nbsp;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Action/PopoverMenu.schema.html#isbottomsheet" target="_blank" rel="noopener noreferrer"&gt;documentation. &lt;/A&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId-551484917"&gt;&lt;STRONG&gt;&lt;U&gt;Support Top Caption in Form Cell Segmented Control (iOS Only)&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Prior to this release, MDK displayed segmented Form Cell controls on iOS as single-line buttons, which &amp;nbsp;would dynamically switch to a stacked layout. With this release, we are introducing a new property for the Segmented Control: &lt;STRONG&gt;&lt;EM&gt;CaptionPosition&lt;/EM&gt;&lt;/STRONG&gt;. When this property is set to &lt;STRONG&gt;&lt;EM&gt;Top&lt;/EM&gt;&lt;/STRONG&gt;, the control will always use stacked layout.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "CaptionPosition": "Top", //"Adaptive"
    "_Type": "Control.Type.FormCell.SegmentedControl",
    "_Name": "FormCellSegmentedControl2",
    "Caption": "Top Caption",
    "ApportionsSegmentWidthsByContent": false,
    "Segments": [
        "Low",
        "Medium",
        "High"
    ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Segmented_iOS.png" style="width: 199px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273852iFC9B4028D0F05632/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Segmented_iOS.png" alt="Segmented_iOS.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For more information, see this&amp;nbsp;&amp;nbsp;&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Page/FormCell/Segmented.schema.html#captionposition" target="_blank" rel="noopener noreferrer"&gt;documentation. &lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-354971412"&gt;&lt;STRONG&gt;&lt;U&gt;Support Lock and Wipe Settings in the MDK Client&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;We are adding support for Locking and Wiping settings on MDK client. This new feature will significantly improve security and protect business users' sensitive information, helping safeguard them against unauthorized access or misuse of their devices.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Lock&lt;/STRONG&gt; (users): Lock users on the specified device and force them to re-authenticate to continue using the app.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Wipe&lt;/STRONG&gt; (device registration) : Lock the user and clear all app data (including any local changes) on the device. User has to re-onboard to continue using the app.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;Administrator can lock users and wipe device registrations through the following options:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Initiate Locking or Wiping actions directly from the mobile services Admin UI using toggle buttons.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LockWipe_UserRegistration.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273856iC821E85E0954FC7D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="LockWipe_UserRegistration.png" alt="LockWipe_UserRegistration.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LockWipe_mobile.png" style="width: 393px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273857i2530F304214D2D01/image-size/medium?v=v2&amp;amp;px=400" role="button" title="LockWipe_mobile.png" alt="LockWipe_mobile.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;EM&gt;Set up offline locking/wiping policies that automatically lock or wipe the device when the configured number of days expires. Number of days are based on how long the app is offline (without connecting to server).&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LockWipe_ClientPolicy.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273860i72D523E13968FA06/image-size/medium?v=v2&amp;amp;px=400" role="button" title="LockWipe_ClientPolicy.png" alt="LockWipe_ClientPolicy.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For more information, see this&amp;nbsp;&amp;nbsp;&lt;A href="https://help.sap.com/doc/f53c64b93e5140918d676b927a3cd65b/Cloud/en-US/docs-en/guides/features/security/mdk/client-policy.html" target="_blank" rel="noopener noreferrer"&gt;documentation. &lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-158457907"&gt;&lt;STRONG&gt;&lt;U&gt;Support Device Compliance in MDK Client &lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;MDK introduces &lt;STRONG&gt;Device Compliance Detection&lt;/STRONG&gt;, a security feature that allows app developers to perform various security checks to determine whether a device has been compromised.&lt;/P&gt;&lt;P&gt;Administrators must enable the &lt;STRONG&gt;Device Compliance Detection&lt;/STRONG&gt; policies in the mobile services Admin UI to ensure compliance reports are sent to Mobile Services. &amp;nbsp;&lt;/P&gt;&lt;P&gt;When the &lt;STRONG&gt;Compliance Policy&lt;/STRONG&gt; is enabled in the Mobile Services Admin UI:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Detection is automatically performed during app login and each time the app is restarted.&lt;/LI&gt;&lt;LI&gt;The compliance status for each registration will be visible in the Mobile Services Admin UI.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For more information, see this&amp;nbsp;&amp;nbsp;&lt;A href="https://help.sap.com/doc/f53c64b93e5140918d676b927a3cd65b/Cloud/en-US/docs-en/guides/features/security/mdk/client-policy.html#device-compliance" target="_blank" rel="noopener noreferrer"&gt;documentation. &lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DeviceCompliance_mobileSerivces.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273862iE60788DB3D7E47CE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DeviceCompliance_mobileSerivces.png" alt="DeviceCompliance_mobileSerivces.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To check the status of your device, we have added a new Client API &lt;STRONG&gt;&lt;EM&gt;&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/apidoc/interfaces/iclientapi.html#isdevicecompliant" target="_blank" rel="noopener noreferrer"&gt;isDeviceCompliant()&lt;/A&gt;.&amp;nbsp;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If it returns &lt;STRONG&gt;&lt;EM&gt;true&lt;/EM&gt;&lt;/STRONG&gt;, the device is compliant.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;If it returns &lt;STRONG&gt;&lt;EM&gt;false&lt;/EM&gt;&lt;/STRONG&gt;, the device is non-compliant or has been compromised.&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;var isRootDevices = clientAPI.isDeviceCompliant(); &lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId--38055598"&gt;&lt;STRONG&gt;&lt;U&gt;Support Generate Content API from Gemini LLM&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In MDK‚Äôs previous release 24.11, we introduced support for leveraging the Chat Completion LLM API.&lt;/P&gt;&lt;P&gt;In this release, we are now introducing a new&amp;nbsp;&lt;STRONG&gt;MDK Action&lt;/STRONG&gt;&amp;nbsp;called&amp;nbsp;&lt;STRONG&gt;Generate Content&lt;/STRONG&gt;, which connects to&amp;nbsp;&lt;STRONG&gt;SAP AI Core&lt;/STRONG&gt;&amp;nbsp;and &lt;STRONG&gt;explicitly&lt;/STRONG&gt; supports integration with &lt;STRONG&gt;Gemini Generate Content API,&lt;/STRONG&gt; enabling seamless content generation. This API allows developers to create dynamic, structured content for articles, reports, and multimedia outputs, leveraging advanced AI models like Gemini 1.0 Pro and Gemini 1.5 Pro.&lt;/P&gt;&lt;P&gt;Instead of calling an LLM API provided directly by an LLM service provider,&amp;nbsp;&lt;STRONG&gt;SAP AI Core&lt;/STRONG&gt;&amp;nbsp;offers a unified way to access LLM APIs from the most popular LLM service platforms. SAP AI Core manages the AI model and ensures scalable deployment in enterprise applications, maintaining compliance and security.&lt;/P&gt;&lt;P&gt;&amp;nbsp;The&amp;nbsp;&lt;STRONG&gt;Generate Content LLM API&lt;/STRONG&gt;&amp;nbsp;can address various scenarios, including:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Text Input:&lt;/STRONG&gt;&amp;nbsp;Submit text prompts to the API to receive AI-generated responses.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Image Input&lt;/STRONG&gt;: Enhance the interaction by including images, allowing for a multimodal conversational experience.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Function Calling&lt;/STRONG&gt;: Enable the AI model to invoke specific functions or execute commands based on the conversation‚Äôs context.&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "_Type": "Action.Type.AICore.Generate.Content",
  "Target": {
    "Service": "/MDKDemoApp/Services/OpenAI.service",
    "Path": "/models/gemini-1.5-pro:generateContent"
  },
  "Properties": {
    "Contents": []
  },
  "ShowActivityIndicator": true,
  "ActivityIndicatorText": "Processing ...",
  "ActionResult": {
    "_Name": "GenerateContent"
  },
  "OnFailure": "/MDKDemoApp/Actions/Failure.action"
}‚Äã&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;For more information, see this&amp;nbsp;&amp;nbsp;&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Action/AICore/GenerateContent.schema.html" target="_blank" rel="noopener noreferrer"&gt;documentation. &lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-112685254"&gt;&lt;STRONG&gt;&lt;U&gt;Simplify Application Launcher and Splash Screen Generation in MDK Branded Client&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Prior to this release, the effort required to customize Application Launcher icon and Splash screen is non-trivial. A developer has to generate these icons and screens using different ways and different sizes for different platforms as documented &lt;A href="https://help.sap.com/doc/f53c64b93e5140918d676b927a3cd65b/Cloud/en-US/docs-en/guides/getting-started/mdk/custom-client/branding-custom-client.html#custom-logo-and-splash-screen" target="_blank" rel="noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;We have simplified and unified generating these application launcher icon and Splash screen for developers to provide these images under a single location.&lt;/P&gt;&lt;P&gt;A new property, &lt;STRONG&gt;&lt;EM&gt;AppImages&lt;/EM&gt;&lt;/STRONG&gt;, has been introduced in &lt;STRONG&gt;&lt;EM&gt;MDKProject.json&lt;/EM&gt;&lt;/STRONG&gt; , where you can mention the file details in the given properties.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;"AppImages": {
  "Launcher": {
    "Logo": "launcher",
    "Background": "android_launcher_background", // Android only
  },
  "Splash": {
    "Logo": "splash_logo",
    "Background": "background", // iOS only
    "LogoBackground": "android_splash_background", // Android only
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;All those files should be placed under &lt;EM&gt;yourMDKApp.mdkproject&amp;gt;App_Resources&amp;gt;MDK&amp;gt;Images&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Please note you can still continue previous way of customization as mentioned in our documentation. However, in order to use this new way, we highly suggest to remove any customization or override files added for the launcher and splash screens in the&amp;nbsp;App_Resources&amp;nbsp;and&amp;nbsp;App_Resources_Merge&amp;nbsp;folders for both iOS and Android.&lt;/P&gt;&lt;P&gt;For more information, see this&amp;nbsp;&amp;nbsp;&lt;A href="https://help.sap.com/doc/f53c64b93e5140918d676b927a3cd65b/Cloud/en-US/docs-en/guides/getting-started/mdk/custom-client/app-icon-splash-screen.html#automate-application-launcher-and-splash-icon-generation" target="_blank" rel="noopener noreferrer"&gt;documentation. &lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--83828251"&gt;&lt;STRONG&gt;&lt;U&gt;Support for getCell in DataTableRowProxy &lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;With this release, we are introducing&amp;nbsp;&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/apidoc/classes/datatablerowproxy.html#getcell" target="_blank" rel="noopener noreferrer"&gt;getCell&lt;/A&gt;&amp;nbsp;feature in&amp;nbsp;DataTableRowProxy, enabling you to retrieve a&amp;nbsp;DataTableCellProxy&amp;nbsp;object using the column index of the target cell. This new functionality will seamlessly let you access and interact with specific cells within a table row.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;let cellParent = context.getParent();
let columnIndex = context.getColumnIndex();
let getCell = cellParent.getCell(columnIndex).getValue();&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;New to MDK development?&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;Follow&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/doc/f53c64b93e5140918d676b927a3cd65b/Cloud/en-US/docs-en/guides/getting-started/mdk/overview.html#tutorials" target="_blank" rel="noopener noreferrer"&gt;these tutorials&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;to get started and learn more about Mobile development kit!&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;I am looking forward to your feedback/comments.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-6/ba-p/14107264"/>
    <published>2025-06-17T16:23:00.452000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-architecture-blog-posts/ai-agents-simple-guide-for-enterprise-architects/ba-p/14140506</id>
    <title>AI Agents: Simple Guide for Enterprise Architects</title>
    <updated>2025-06-30T16:11:47.712000+02:00</updated>
    <author>
      <name>arpin</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13521</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1734054193"&gt;Understanding Future Automation for Business&lt;/H2&gt;&lt;P&gt;The words "AI agent" were very popular in 2024. From what I see, it is a big trend for 2025. For &lt;STRONG&gt;Enterprise Architects&lt;/STRONG&gt;, our job is to check new technologies and put them into our IT systems. This helps our companies change to digital ways. This guide explains AI agents in a simple way. It talks about how they work and what we, as architects, need to think about. This is based on my own work experience.&lt;/P&gt;&lt;H2 id="toc-hId-1537540688"&gt;What is an AI Agent? New Digital Helper&lt;/H2&gt;&lt;P&gt;An AI agent is an autonomous computer program. It perceives its environment, processes information, makes decisions, and then acts autonomously to achieve predefined goals. Unlike AI chatbots, which just reply to what users say, AI agents can make their own decisions.&lt;/P&gt;&lt;P&gt;This helps them automate complex tasks in companies, like customer service, data analysis, or even helping with coding. They can either fully automate tasks or augment human capabilities in daily work. For instance, I've observed AI agents in online retail. They recommend products, answer questions, and process orders. If they need more information, they ask the user themselves.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="arpin_0-1751289819982.png" style="width: 543px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280685iC2F1B479D663730C/image-dimensions/543x311?v=v2" width="543" height="311" role="button" title="arpin_0-1751289819982.png" alt="arpin_0-1751289819982.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1341027183"&gt;AI Agent vs. AI Chatbot: What is Different?&lt;/H2&gt;&lt;P&gt;Many people use "AI agent" and "AI chatbot" as the same thing. They are alike in some ways. Both use Natural Language Processing (NLP) to understand language. Often, Large Language Models (LLMs) power them. And both can connect to other systems. But AI agents are different in important ways. Here is how you can tell them apart:&lt;/P&gt;&lt;TABLE width="624"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="208"&gt;&lt;P&gt;&lt;STRONG&gt;Feature&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;&lt;STRONG&gt;AI Chatbots&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;&lt;STRONG&gt;AI Agents&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="208"&gt;&lt;P&gt;&lt;STRONG&gt;Purpose&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;Talks to users for small tasks.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;Automates big tasks, makes choices, and does many steps.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="208"&gt;&lt;P&gt;&lt;STRONG&gt;Decision-Making&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;Reacts to user input, follows rules.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;Thinks, plans, and acts by itself, no direct user input.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="208"&gt;&lt;P&gt;&lt;STRONG&gt;Form&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;Usually a chat box on a website or app.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;Can work in the background or be a chat interface.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;This difference is key for choosing the right solution. A sales chatbot answers questions. But a sales AI agent can guess which customers will buy more and send them personalized messages. It's about acting first, not just reacting.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="arpin_1-1751289906773.png" style="width: 495px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280686iEFC6904B93FB087B/image-dimensions/495x125?v=v2" width="495" height="125" role="button" title="arpin_1-1751289906773.png" alt="arpin_1-1751289906773.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1144513678"&gt;How AI Agents Work: They See, Think, Do, and Learn&lt;/H2&gt;&lt;P&gt;To really use AI agents, we must understand how they operate. When I see them work, they always follow a clear process. It's like a loop: they see, they process, they decide, and then they act. From a technical view, it is very smart:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Getting Information (Perceiving):&lt;/STRONG&gt; Agents first get information. This can be from sensors (like cameras in self-driving cars), from users (like voice commands), or from company data (databases, logs, documents). The &lt;STRONG&gt;Perception Module&lt;/STRONG&gt; takes this raw information and makes it ready for the agent to understand.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Thinking &amp;amp; Deciding (Processing &amp;amp; Decision-Making):&lt;/STRONG&gt; After getting data, the agent analyzes it to decide what to do. They use NLP for text and check data signals. Decisions can be based on simple rules, or on &lt;STRONG&gt;Machine Learning (ML) predictions&lt;/STRONG&gt; from past data. Some use &lt;STRONG&gt;Reinforcement Learning (RL)&lt;/STRONG&gt;, learning by trying and getting feedback. Advanced agents use &lt;STRONG&gt;Retrieval Augmented Generation (RAG)&lt;/STRONG&gt;. This helps them find correct information from big databases &lt;EM&gt;before&lt;/EM&gt; answering, which makes answers right and reduces errors. Also, &lt;STRONG&gt;Prompt Engineering&lt;/STRONG&gt; guides the LLM to think step-by-step and pick the right tools.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Taking Action (Performing Tasks):&lt;/STRONG&gt; When the agent decides, its &lt;STRONG&gt;Action Module&lt;/STRONG&gt; does the task. This can be giving a text answer, controlling a device, running business processes (like orders in ERP), using APIs to connect to other systems, or managing many tasks at once. Agents can complete whole workflows.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Learning &amp;amp; Getting Better (Improvement):&lt;/STRONG&gt; What makes AI agents smart is that they &lt;STRONG&gt;learn from what they do&lt;/STRONG&gt;. They watch what happens after their actions and get better over time. This happens with feedback. Like a system that recommends things learning what you like, AI agents keep improving.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="arpin_2-1751289956144.png" style="width: 675px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280687i2295E30BFADFD84D/image-dimensions/675x373?v=v2" width="675" height="373" role="button" title="arpin_2-1751289956144.png" alt="arpin_2-1751289956144.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-948000173"&gt;The AI Agent's Inside Parts: How It's Built (Technical View)&lt;/H2&gt;&lt;P&gt;For Enterprise Architects like us, knowing how AI agents are built inside is important. It's how the smart software works with the computer systems. There are four main parts, often made with special frameworks:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Profiling Module:&lt;/STRONG&gt; This part defines &lt;EM&gt;who&lt;/EM&gt; the agent is and &lt;EM&gt;what its main goal is&lt;/EM&gt;. This is set using a "system prompt" for the LLM. It also handles the first information from the environment.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Memory Module:&lt;/STRONG&gt; This is key for the agent to remember and use past information. It has two types:&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Short-Term Memory:&lt;/STRONG&gt; What the agent is thinking about right now, like a recent conversation.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Long-Term Memory:&lt;/STRONG&gt; Old knowledge stored outside, like in &lt;STRONG&gt;vector databases&lt;/STRONG&gt;, used with RAG to find information quickly.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Planning Module:&lt;/STRONG&gt; This is the agent's "brain" for making strategies. It takes big goals and breaks them into smaller steps. It also chooses the right tools. LLMs can do this planning, or older AI methods can be used.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Action Module:&lt;/STRONG&gt; This part makes the agent's decisions happen. It translates choices into commands for tools, APIs, or other systems. For robots, these are physical parts. For software, there are links to other programs.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;So, &lt;STRONG&gt;Agent = Architecture + Agent Program&lt;/STRONG&gt;. The architecture is the system it runs on, and the program tells it what to do.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Key Frameworks:&lt;/STRONG&gt; To build these agents, we use frameworks. These help us build faster and better:&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;LangChain:&lt;/STRONG&gt; A popular framework for LLM agents, memory, and tools.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;CrewAI:&lt;/STRONG&gt; Good for making many AI agents work together.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Microsoft Semantic Kernel:&lt;/STRONG&gt; Helps add AI to existing apps.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;AutoGen (Microsoft):&lt;/STRONG&gt; For multi-agent conversations.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="arpin_0-1751291166611.png" style="width: 635px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280713i1DE85A930AAF84B8/image-dimensions/635x331?v=v2" width="635" height="331" role="button" title="arpin_0-1751291166611.png" alt="arpin_0-1751291166611.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-751486668"&gt;Different Kinds of AI Agents&lt;/H2&gt;&lt;P&gt;To pick the right AI agent for a business problem, we need to know different kinds exist. An &lt;STRONG&gt;agent&lt;/STRONG&gt; sees, decides, and acts by itself for specific goals. Here are common types for us:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;How They Act:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Reactive Agents:&lt;/STRONG&gt; Act fast based on what they see &lt;EM&gt;now&lt;/EM&gt;. Like a smart light turning on when it's dark.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Proactive Agents:&lt;/STRONG&gt; Plan ahead for future goals. Like an agent planning a sales strategy for next month.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Where They Work:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fixed Environments:&lt;/STRONG&gt; Rules don't change.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Dynamic Environments:&lt;/STRONG&gt; Always changing, agents must adapt fast.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;How Many Agents:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Single-Agent Systems:&lt;/STRONG&gt; One agent works alone.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Multi-Agent Systems (MAS):&lt;/STRONG&gt; Many agents work together to reach a big goal. They can be same or different, work together or against each other.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Rational Agents:&lt;/STRONG&gt; They always try to make the &lt;EM&gt;best&lt;/EM&gt; choice.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Other Types (based on how they are built):&lt;/STRONG&gt; Simple Reflex, Model-Based Reflex, Goal-Based, Utility-Based, Learning, Belief-Desire-Intention (BDI), Logic-Based, Hierarchical Agents. Each for different kinds of tasks.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-554973163"&gt;What AI Agents Can Do: Real Uses in Companies&lt;/H2&gt;&lt;P&gt;The best thing about AI agents, for me, is how flexible they are. I've seen them make many different processes much smoother across all kinds of businesses. For Enterprise Architects, knowing these uses helps us find good places to start:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Software &amp;amp; IT Work:&lt;/STRONG&gt; Agents can be like co-pilots for coders, helping with debugging and writing code. They can also automate IT support, check system logs, and send alerts. This really helps engineers.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Customer Service &amp;amp; Sales:&lt;/STRONG&gt; More than just chatbots, agents improve how we talk to customers. They give personal product suggestions, find good sales leads, and talk to customers first.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Knowledge Management:&lt;/STRONG&gt; This is very helpful. Agents can find information fast from company documents, help centers, and solve problems, saving lots of time.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Workflow Automation:&lt;/STRONG&gt; This is where AI agents show their true power. They manage many steps across different systems. Like buying things for the company, helping new employees, managing deliveries, or changing prices online. It's smart, connected automation.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Virtual Assistants:&lt;/STRONG&gt; They are like super helpers. They can plan schedules, do research, analyze data, write emails, or plan trips by themselves.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Special Industries:&lt;/STRONG&gt; They are making a big impact in areas like finance (trading, finding fraud), healthcare (patient help), and transport (traffic).&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-358459658"&gt;Why AI Agents Are Good for Your Company: The Benefits&lt;/H2&gt;&lt;P&gt;Bringing AI agents into your company offers many advantages. They are flexible and can make decisions independently, speeding up tasks. They're also versatile, so an agent built for one job can often handle others without being rebuilt.&lt;/P&gt;&lt;P&gt;AI agents are available 24/7, which is great for global businesses, and can save money by automating tasks that people used to do. They can complete entire workflows, from connecting with other systems to getting approvals, streamlining your processes. They connect easily with your existing tools, making your IT systems work better together. Plus, they learn quickly, so you'll see faster results and a quicker return on your investment. Finally, they're more accurate and compliant, strictly following company rules and regulations, which is key for safety and governance.&lt;/P&gt;&lt;P&gt;However, there are risks to consider. Compliance is a big one; agents need to follow laws like GDPR, and mistakes can lead to legal and financial issues. Sometimes AI can make up facts (hallucinations), but this can be managed by giving agents correct information and having people check their work. It can also be hard to understand why an agent made a certain decision, especially in regulated industries. To fix this, you should record their thought process and get human approval for important choices. Lastly, AI agents aren't a "set and forget" solution; they need ongoing monitoring and updates as your business changes.&lt;/P&gt;&lt;H2 id="toc-hId-161946153"&gt;The Way Forward: AI Agents and the Future of ERP&lt;/H2&gt;&lt;P&gt;The shift from simple data retrieval (RAG) to full AI Agents is a game-changer for businesses. Picture your old ERP system, once just a record keeper, becoming a super-smart, active hub. It won't just list tasks; it'll complete, improve, and adapt them using clever AI.&lt;/P&gt;&lt;P&gt;Imagine your AI-powered ERP system:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Proactive Supply Chain:&lt;/STRONG&gt; It could spot problems before they happen, adjust inventory automatically, and even negotiate with suppliers for better deals, all while following your company's rules.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Automated Finances:&lt;/STRONG&gt; It could intelligently check bills, detect fraud, fix payment issues, and predict money trends in real-time, keeping your finances healthy and accurate.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Enhanced Customer &amp;amp; Employee Experiences:&lt;/STRONG&gt; AI agents could directly handle complex customer queries, take care of routine HR tasks, and offer personalized help. This frees up your team to focus on more important, creative work.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This is the future: your ERP as the central brain of your company, making operations faster, stronger, and much smarter. It empowers your people to innovate and tackle complex challenges.&lt;/P&gt;&lt;P&gt;So, as Enterprise Architects, how will you integrate AI Agents into your company? How do you envision them transforming your ERP systems and overall business operations? Let's discuss and share our insights.&lt;/P&gt;&lt;H2 id="toc-hId--34567352"&gt;Learn More: Deeper into AI Agents&lt;/H2&gt;&lt;P&gt;For Enterprise Architects and technical people who want to learn more about AI agents &amp;amp; SAP Business AI, here are some helpful places I have found:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;How They Work &amp;amp; How They're Built:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;IBM: What Are AI Agents?&lt;/STRONG&gt; - Good overview of how agents work, with focus on tools. [ &lt;A href="https://www.ibm.com/think/topics/ai-agents" target="_blank" rel="nofollow noopener noreferrer"&gt;Link&lt;/A&gt; ]&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Azilen Technologies: AI Agent Architecture: Explained with Real Examples&lt;/STRONG&gt; - Shows how agents are built, step by step. [ &lt;A href="https://www.azilen.com/blog/ai-agent-architecture/" target="_blank" rel="nofollow noopener noreferrer"&gt;Link&lt;/A&gt; ]&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Tools &amp;amp; Libraries for Building Agents:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;LangChain Documentation:&lt;/STRONG&gt; A very popular tool for making LLM agents. [ &lt;A href="https://www.langchain.com/docs/" target="_blank" rel="nofollow noopener noreferrer"&gt;Search "LangChain agents" on their official docs&lt;/A&gt; (Exact URL may vary by version). ]&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Prompt Engineering Guide: LLM Agents&lt;/STRONG&gt; - Learn about making agents with LLMs and how to give them good instructions. [ &lt;A href="https://www.promptingguide.ai/research/llm-agents" target="_blank" rel="nofollow noopener noreferrer"&gt;Link&lt;/A&gt; ]&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Botpress: Top AI Agent Frameworks&lt;/STRONG&gt; - Compares different tools like Botpress, LangChain, CrewAI. [ &lt;A href="https://botpress.com/blog/ai-agent-frameworks" target="_blank" rel="nofollow noopener noreferrer"&gt;Link&lt;/A&gt; ]&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;ControlFlow:&lt;/STRONG&gt; A Python tool to build AI workflows, good for control. [ &lt;A href="https://controlflow.ai/welcome" target="_blank" rel="nofollow noopener noreferrer"&gt;Link&lt;/A&gt; ]&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Research &amp;amp; New Ideas:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;GitHub: A collection of AI Agents papers (Updated often)&lt;/STRONG&gt; - Many academic papers about AI agents. [ &lt;A href="https://github.com/masamasa59/ai-agent-papers" target="_blank" rel="nofollow noopener noreferrer"&gt;Link&lt;/A&gt; ]&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;MIT Initiative on the Digital Economy: New studies about agentic AI&lt;/STRONG&gt; - Recent research from MIT. [ &lt;A href="https://mitsloan.mit.edu/ideas-made-to-matter/4-new-studies-about-agentic-ai-mit-initiative-digital-economy" target="_blank" rel="nofollow noopener noreferrer"&gt;Link&lt;/A&gt; ]&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;SAP Business AI | Product Resources &amp;amp; News:&lt;/STRONG&gt; &lt;A href="https://www.sap.com/canada/products/artificial-intelligence/resources.html" target="_blank" rel="noopener noreferrer"&gt;https://www.sap.com/canada/products/artificial-intelligence/resources.html&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Unlock the Power of SAP Business AI Through Learning and Certification:&lt;/STRONG&gt; &lt;A href="https://www.sap.com/documents/2025/05/7e1cdd1b-067f-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;https://www.sap.com/documents/2025/05/7e1cdd1b-067f-0010-bca6-c68f7e60039b.html&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Artificial Intelligence | SAP Learning:&lt;/STRONG&gt; &lt;A href="https://learning.sap.com/artificial-intelligence" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/artificial-intelligence&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Exploring the SAP Business AI Portfolio - SAP Learning:&lt;/STRONG&gt; &lt;A href="https://learning.sap.com/learning-journeys/exploring-the-sap-business-ai-portfolio-1" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/exploring-the-sap-business-ai-portfolio-1&amp;nbsp;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-architecture-blog-posts/ai-agents-simple-guide-for-enterprise-architects/ba-p/14140506"/>
    <published>2025-06-30T16:11:47.712000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/exploring-sap-generative-ai-sdk-python-javascript-and-java-libraries/ba-p/14150705</id>
    <title>Exploring SAP Generative AI SDK: Python, JavaScript, and Java Libraries üéÅ</title>
    <updated>2025-07-11T20:59:21.243000+02:00</updated>
    <author>
      <name>Yogananda</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/75</uri>
    </author>
    <content>&lt;P&gt;&lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/libraries-and-sdks" target="_self" rel="noopener noreferrer"&gt;SAP's Generative AI SDK&lt;/A&gt; offers powerful tools for integrating AI capabilities into your business applications.&lt;/P&gt;&lt;P&gt;This blog will guide you through the libraries available for &lt;FONT color="#0000FF"&gt;Python, JavaScript, and Java&lt;/FONT&gt;, and how to use them effectively.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-07-11_20-51-00.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285646iE39F1A18CFDFB822/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-07-11_20-51-00.png" alt="2025-07-11_20-51-00.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1993145073"&gt;1.&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":blue_circle:"&gt;üîµ&lt;/span&gt;&amp;nbsp;&lt;/SPAN&gt;SAP Generative AI SDK for Python&lt;/H4&gt;&lt;P&gt;The SAP Generative AI SDK for Python allows developers to leverage generative models from the SAP AI Core. This SDK supports models from providers like OpenAI, Amazon, and Google, and integrates with LangChain for enhanced functionality.&lt;/P&gt;&lt;P&gt;Documentation and Examples :&amp;nbsp;&lt;A href="https://help.sap.com/doc/generative-ai-hub-sdk/CLOUD/en-US/index.html" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/doc/generative-ai-hub-sdk/CLOUD/en-US/index.html&lt;/A&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Yogananda_1-1752259770526.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285644i13469DC27D9AC732/image-size/large?v=v2&amp;amp;px=999" role="button" title="Yogananda_1-1752259770526.png" alt="Yogananda_1-1752259770526.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Installation:&amp;nbsp;To install the SDK, use the following command:&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;pip install sap-ai-sdk-gen[all]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;You can also install specific model providers:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;pip install "sap-ai-sdk-gen[google, amazon]"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Configuration:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Set up your environment variables or configuration file to authenticate and connect to SAP AI Core:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;export AICORE_CLIENT_ID="your_client_id"
export AICORE_CLIENT_SECRET="your_client_secret"
export AICORE_AUTH_URL="your_auth_url"
export AICORE_BASE_URL="your_base_url"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Usage:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Here's a simple example to generate text using the OpenAI model:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;from sap_ai_sdk_gen import OpenAI

client = OpenAI()
response = client.generate_text(prompt="Hello, world!")
print(response)&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-1796631568"&gt;2.&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":blue_circle:"&gt;üîµ&lt;/span&gt;&amp;nbsp;&lt;/SPAN&gt;SAP Generative AI SDK for JavaScript&lt;/H4&gt;&lt;P&gt;The JavaScript SDK enables Node.js applications to interact with SAP AI Core, providing seamless integration with generative models.&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/SAP/ai-sdk-js" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP/ai-sdk-js&lt;/A&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Yogananda_0-1752259610583.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285643iBB7D6B6568C71C17/image-size/large?v=v2&amp;amp;px=999" role="button" title="Yogananda_0-1752259610583.png" alt="Yogananda_0-1752259610583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Installation:&amp;nbsp;Install the SDK via npm:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;npm install -ai-sdk/ai-api&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Configuration:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Ensure your environment variables are set up correctly:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;export AICORE_CLIENT_ID="your_client_id"
export AICORE_CLIENT_SECRET="your_client_secret"
export AICORE_AUTH_URL="your_auth_url"
export AICORE_BASE_URL="your_base_url"&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-1600118063"&gt;&lt;STRONG&gt;Usage:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Here's a basic example to generate text:&lt;/SPAN&gt;&lt;/H4&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import { OpenAI } from '@sap-ai-sdk/ai-api';

const client = new OpenAI();
client.generateText('Hello, world!').then(response =&amp;gt; {
  console.log(response);
});&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-1403604558"&gt;3.&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":blue_circle:"&gt;üîµ&lt;/span&gt;&amp;nbsp;&lt;/SPAN&gt;SAP Generative AI SDK for Java&lt;/H4&gt;&lt;P&gt;The Java SDK integrates AI capabilities into Java-based applications, leveraging the SAP AI Core's generative models.&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/SAP/ai-sdk-java" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP/ai-sdk-java&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Installation:&amp;nbsp;Add the SDK to your Maven project:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;com.sap.ai&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;sap-ai-sdk&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;5.6.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Configuration:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Configure your application properties:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;aicore.client.id=your_client_id
aicore.client.secret=your_client_secret
aicore.auth.url=your_auth_url
aicore.base.url=your_base_url&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Usage:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Here's an example to generate text:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.ai.sdk.OpenAI;

public class Main {
    public static void main(String[] args) {
        OpenAI client = new OpenAI();
        String response = client.generateText("Hello, world!");
        System.out.println(response);
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-1078008334"&gt;Conclusion&lt;/H3&gt;&lt;P&gt;SAP's Generative AI SDKs for Python, JavaScript, and Java provide robust tools for integrating AI into your applications. By following the installation, configuration, and usage examples provided, you can start leveraging the power of generative AI in your projects.&lt;/P&gt;&lt;P&gt;Feel free to reach out if you have any questions or need further assistance! Happy coding!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/exploring-sap-generative-ai-sdk-python-javascript-and-java-libraries/ba-p/14150705"/>
    <published>2025-07-11T20:59:21.243000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/security-and-compliance-blogs/securing-agentic-ai-through-threat-modeling-at-sap/ba-p/14155323</id>
    <title>Securing Agentic AI Through Threat Modeling at SAP</title>
    <updated>2025-07-17T18:17:00.624000+02:00</updated>
    <author>
      <name>helenoakley</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/221997</uri>
    </author>
    <content>&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="agentic-ai.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288025i83B23ADACD168DDC/image-size/large?v=v2&amp;amp;px=999" role="button" title="agentic-ai.jpg" alt="agentic-ai.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;EM&gt;By&amp;nbsp;&lt;A href="https://www.linkedin.com/in/helen-oakley/" target="_self" rel="nofollow noopener noreferrer"&gt;Helen Oakley&lt;/A&gt;, Senior Director of Software and AI Security, SAP Global Security &amp;amp; Cloud Compliance&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This year, at SAP Sapphire, SAP unveiled its expanded vision for Business AI, introducing a growing network of Joule Agents that work across systems and lines of business. This marks a clear step into the era of Agentic AI ‚Äì systems that can understand context, take initiative, and drive outcomes autonomously. ‚ÄúSAP combines the world‚Äôs most powerful suite of business applications with uniquely rich data and the latest AI innovations to create a flywheel of customer value,‚Äù &lt;/SPAN&gt;&lt;A href="https://news.sap.com/2025/05/sap-business-ai-reimagine-how-enterprises-run/" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;said CEO Christian Klein&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;. While this evolution opens exciting possibilities for automation and productivity, it also introduces a new layer of complexity in how we approach security. Agentic systems challenge traditional safeguards, making it essential to identify and mitigate risks early through tailored threat modeling.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;At its core, threat modeling is about asking the right questions early in the development process, while the system is still being designed and built. Rather than simply looking for bugs or code flaws, it forces us to think through how a system might behave in the real world. What could go wrong if an agent‚Äôs goals are manipulated? Could someone poison its memory over time? What if an agent uses a tool in an unintended or unsafe way? How could agent-generated content be used to mislead or overload human decision-makers? What happens when agents collaborate or collide in ways that expose the system to cascading failures or manipulation?&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;These are not hypothetical questions. They reflect the real and emerging risks of agentic systems. The &lt;/SPAN&gt;&lt;A href="https://genai.owasp.org/resource/agentic-ai-threats-and-mitigations/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;OWASP Agentic AI Threats &amp;amp; Mitigations Guide&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; is a valuable resource that brings structure to this thinking. It highlights specific threats such as memory poisoning, cascading hallucinations, privilege compromise, and agent communication poisoning. For teams building these systems, it helps provide a common vocabulary and practical examples to guide threat modeling work.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To give an example of how threat modeling helps in practice, let‚Äôs take the case of goal manipulation ‚Äì one of the emerging risks identified in the OWASP guide. In agentic systems, attackers don‚Äôt necessarily need to exploit traditional software flaws. Instead, they can attempt to influence an agent‚Äôs behavior over time by subtly manipulating its objectives. This might happen through indirect prompt injection, compromised data sources, or crafted tool responses. Imagine an agent responsible for prioritizing financial transactions; if adversarial inputs gradually shift its decision logic, it could start approving risky payments outside of the intended policy. In threat modeling exercises, we explore how such scenarios could play out by analyzing how the agent forms and updates its goals, how memory and feedback loops could reinforce undesired behaviors, and how downstream actions might be impacted. This helps define targeted mitigations, such as isolating goal-setting logic from external inputs, monitoring shifts in agent behavior, and adding human validation for sensitive decisions.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The OWASP Agentic AI Threats &amp;amp; Mitigations Guide provides a helpful reference architecture that illustrates where these types of risks can emerge. The diagram below maps threats to key components in a typical agentic system, making it easier to visualize how threat modeling applies in practice.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="helenoakley_0-1752751657687.png" style="width: 844px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287897iD3D301C81278E582/image-dimensions/844x449?v=v2" width="844" height="449" role="button" title="helenoakley_0-1752751657687.png" alt="helenoakley_0-1752751657687.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Image Source: OWASP Agentic AI Threats and Mitigations guide, ‚ÄúThreat Model Summary‚Äù&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;At SAP, threat modeling has long been part of our &lt;/SPAN&gt;&lt;A href="https://www.sap.com/documents/2016/03/a248a699-627c-0010-82c7-eda71af511fa.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;Secure Software Development and Operations Lifecycle (Secure SDOL)&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;, which is certified under ISO 27001. This framework ensures security is built into every phase of the product lifecycle, from design to operations. With Agentic AI, we are expanding our threat modeling approach to address risks that don‚Äôt typically appear in traditional application security. This includes analyzing agent memory behavior, reasoning patterns, system autonomy, human interaction points, and the dynamics of multi-agent ecosystems. The focus shifts from identifying static vulnerabilities to understanding how autonomy and learning can lead to unintended behaviors. From there, we define appropriate controls and mitigations to reduce those risks.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The field of Agentic AI security continues to take shape. Standards like ISO 42001 and regulations such as the EU AI Act are in development, and industry best practices are actively maturing. That‚Äôs why collaboration is essential. SAP is contributing to the conversations held with industry groups focused on these challenges, including &lt;/SPAN&gt;&lt;A href="https://genai.owasp.org/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;OWASP GenAI&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; initiatives. We‚Äôre not just adopting ideas, we‚Äôre helping shape them, working with peers and regulators to advance the state of AI security. Our teams bring deep expertise in both enterprise security and AI systems, offering a perspective that‚Äôs helping guide how the broader ecosystem approaches agentic risks.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Transparency remains central to how SAP approaches product security. As we continue evolving our work with AI, we‚Äôre committed to sharing what we learn through resources like the &lt;/SPAN&gt;&lt;A href="https://www.sap.com/about/trust-center.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Trust Center&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;. Security is not a one-time effort. It is a continuous process, especially with systems as dynamic as Agentic AI.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Threat modeling helps us stay ahead of these evolving risks and supports the design of systems that are both capable and safe. As Agentic AI becomes more embedded in enterprise workflows, this kind of proactive thinking becomes essential.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP is proud to contribute to shaping the future of secure AI. By collaborating across the industry and applying deep expertise from our teams, we‚Äôre helping advance practical, forward-looking approaches to securing the next generation of intelligent systems.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/security-and-compliance-blogs/securing-agentic-ai-through-threat-modeling-at-sap/ba-p/14155323"/>
    <published>2025-07-17T18:17:00.624000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/purchase-pilot-%E3%81%A7%E3%83%95%E3%83%AA%E3%83%BC%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E7%99%BA%E6%B3%A8%E3%82%92-ai-%E5%A4%89%E9%9D%A9-sap-btp-hackathon-2025-%E6%88%90%E6%9E%9C%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/ba-p/14157520</id>
    <title>Purchase¬†Pilot „Åß„Éï„É™„Éº„ÉÜ„Ç≠„Çπ„ÉàÁô∫Ê≥®„Çí AI Â§âÈù© ‚Äî SAP¬†BTP Hackathon 2025 ÊàêÊûú„É¨„Éù„Éº„Éà</title>
    <updated>2025-07-28T03:39:05.459000+02:00</updated>
    <author>
      <name>Ryota_Ito</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1390198</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;2025 Âπ¥Êò•„ÄÅ&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;SAP „Ç∏„É£„Éë„É≥&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „ÅÆÊúâÂøó„É°„É≥„Éê„Éº„ÅßÁµêÊàê„Åó„Åü„ÉÅ„Éº„É† &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;„ÄåTO&amp;nbsp;BEs„Äç&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „ÅØ„ÄÅ&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;SAP&amp;nbsp;BTP Hackathon&amp;nbsp;2025&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „Å´ÂèÇÂä†„Åó„ÄÅ Êú¨„Éè„ÉÉ„Ç´„ÇΩ„É≥„ÅÆÂÖ¨Âºè„ÉÜ„Éº„Éû„Äå&lt;STRONG&gt;SAPÊ•≠Âãô„Å´AI„ÅßSurprise„ÇíÔºÅ„Åù„Çå„ÄÅAI„Å´‰ªª„Åõ„Åæ„Åõ„ÇìÔºü&lt;/STRONG&gt;„Äç„ÅÆ„ÇÇ„Å®„ÄÅÁ§æÂÜÖ„Åß‚Äú„ÇÇ„ÅóËá™ÂàÜ„Åü„Å°„ÅåÁèæÂ†¥„Åß„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥„ÇíÊßãÁØâ„Åô„Çã„Å®„Åó„Åü„ÇâÔºü‚Äù„Å®„ÅÑ„ÅÜ„Ç®„Ç≠„Ç∑„Éì„Ç∑„Éß„É≥„Å®„Åó„Å¶ÊåëÊà¶„Åó„Åæ„Åó„Åü„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Êú¨Ë®ò‰∫ã„ÅØ„ÄÅ„Åù„ÅÆÊàêÊûú„Å®„Åó„Å¶ÈñãÁô∫„Åó„Åü &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;Purchase&amp;nbsp;Pilot&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „ÅÆÊ¶ÇË¶Å„Å®ÊäÄË°ì„Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£„ÄÅ„Åä„Çà„Å≥„Éá„É¢„Çí„Åæ„Å®„ÇÅ„Åü„É¨„Éù„Éº„Éà„Åß„Åô„ÄÇSAP Community „ÅÆÁöÜ„Åï„Çì„Åã„Çâ„ÅÆ„Éï„Ç£„Éº„Éâ„Éê„ÉÉ„ÇØ„ÇíÊ•Ω„Åó„Åø„Å´„Åó„Å¶„ÅÑ„Åæ„ÅôÔºÅ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1735186307"&gt;&lt;SPAN&gt;ËÉåÊôØ&amp;nbsp;‚Äî&amp;nbsp;„Éï„É™„Éº„ÉÜ„Ç≠„Çπ„ÉàÁô∫Ê≥®„ÅåÁîü„ÇÄ 3 „Å§„ÅÆË™≤È°å&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;SAP&amp;nbsp;S/4HANA „Å™„Å©„ÅÆË≥ºË≤∑Ê•≠Âãô„Åß„ÅØ„ÄÅÂìÅÁõÆ„Éû„Çπ„Çø„ÅåÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥Âêà„Å´„Äå&lt;STRONG&gt;„ÉÜ„Ç≠„Çπ„ÉàÁô∫Ê≥®&lt;/STRONG&gt;„Äç„Åå‰Ωø„Çè„Çå„Åæ„Åô„ÄÇ„Åó„Åã„Åó„Åì„ÅÆÈÅãÁî®„Å´„ÅØ„ÄÅ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å™ÂïèÈ°å„Åå„Å§„Åç„Åæ„Å®„ÅÑ„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Ê•≠ÂãôË≤†Ëç∑„ÅÆÂ¢óÂ§ß&amp;nbsp;‚Äî È†ÖÁõÆ„Çí 1&amp;nbsp;Ë°å„Åö„Å§ÂÖ•Âäõ„ÉªÁ¢∫Ë™ç„Åô„ÇãÊâãÈñì„ÄÇ &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;„Éá„Éº„ÇøÂìÅË≥™„ÅÆ‰Ωé‰∏ã&amp;nbsp;‚Äî Ë®òËø∞„ÇÜ„Çå„ÇÑÂÖ•Âäõ„Éü„Çπ„Åß KPI „ÅåÁµÑ„ÇÅ„Å™„ÅÑ„ÄÇ &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;ÊÑèÊÄùÊ±∫ÂÆö„ÅÆÈÅÖÂª∂&amp;nbsp;‚Äî Á≤æÂ∫¶„ÅÆ‰Ωé„ÅÑÂÆüÁ∏æ„Éá„Éº„Çø„ÅåÁµåÂñ∂Âà§Êñ≠„ÇíÈàç„Çâ„Åõ„Çã„ÄÇ&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;ÁßÅ„Åü„Å°„ÅØ„ÄÅ„Åì„ÅÆ &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;‚ÄúÊõñÊòß„ÅßÈùûÂÆöÂûã‚Äù&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „Å™È†òÂüü„Åì„Åù AI „ÅåÁúü‰æ°„ÇíÁô∫ÊèÆ„Åô„Çã‰ΩôÂú∞„Å†„Å®ËÄÉ„Åà„Åæ„Åó„Åü„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1538672802"&gt;&lt;SPAN&gt;„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥&amp;nbsp;‚Äî&amp;nbsp;Purchase&amp;nbsp;Pilot „Å®„ÅØÔºü&lt;/SPAN&gt;&lt;/H2&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Ëø∑„Çè„Åö„Éª„Éü„Çπ„Å™„Åè„ÉªÂäπÁéáÁöÑ„Å´„ÄÇ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Purchase&amp;nbsp;Pilot&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „ÅØ„ÄÅÁèæÂ†¥ÊãÖÂΩìËÄÖ„Åå„ÉÜ„Ç≠„Çπ„ÉàÁô∫Ê≥®„ÇíÂÖ•Âäõ„Åô„ÇãÈöõ„Å´ &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;AI „Åå„É™„Ç¢„É´„Çø„Ç§„É†„ÅßÊîØÊè¥&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „Åô„Çã„ÉÑ„Éº„É´„Åß„Åô„ÄÇ„Ç≥„Ç¢Ê©üËÉΩ„ÅØÊ¨°„ÅÆ 2 „Å§„Åß„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ryota_Ito_0-1753143863163.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289549i9BB73D89F20CFC22/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ryota_Ito_0-1753143863163.png" alt="Ryota_Ito_0-1753143863163.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1342159297"&gt;&lt;SPAN&gt;‰ªïÁµÑ„Åø ‚Äî 2 „Å§„ÅÆ„Ç≥„Ç¢Ê©üËÉΩ„ÇíÊ∑±Êéò„Çä&lt;/SPAN&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-1274728511"&gt;&lt;SPAN&gt;1. „Ç§„É≥„ÉÜ„É™„Ç∏„Çß„É≥„Éà„Å™ÂÖ•ÂäõË£úÂÆå ‚Äî Âá¶ÁêÜ„Éï„É≠„Éº&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;„Åñ„Å£„Åè„Çä 3 „Çπ„ÉÜ„ÉÉ„Éó„ÅßÂÆåÁµê„Åó„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;ÈÅéÂéª„É¨„Ç≥„Éº„Éâ„Çí„Éô„ÇØ„Éà„É´„Å®„Åó„Å¶Ê∫ñÂÇô&lt;BR /&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- ÈÅéÂéª„ÅÆÊ≠£Á¢∫„Å™„ÉÜ„Ç≠„Çπ„ÉàÁô∫Ê≥®„É¨„Ç≥„Éº„Éâ„ÇíÊäΩÂá∫„Åó„ÄÅShort‚ÄØText „Çí„Éô„ÇØ„Éà„É´Âåñ„Åó„Å¶ Vector‚ÄØEngine „Å∏‰øùÂ≠ò„ÄÇ &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;È°û‰ºº„É¨„Ç≥„Éº„Éâ √ó Few‚Äëshot&lt;BR /&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- „Éû„Éã„É•„Ç¢„É´ÂÖ•Âäõ„Åï„Çå„Åü Short‚ÄØText „Çí„Éô„ÇØ„Éà„É´Âåñ„Åó„ÄÅÈ°û‰ººÂ∫¶Ê§úÁ¥¢„Åß„Éà„ÉÉ„Éó 3 ‰ª∂„ÇíÂèñÂæó„ÄÇ&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;ÊÑèÂë≥ÊÉÖÂ†±„ÇíÂä†„Åà„Å¶Ë£úÂÆå&lt;BR /&gt;&lt;/STRONG&gt;- S/4HANA Cloud „Åã„Çâ„Ç≥„Çπ„Éà„Çª„É≥„ÇøÂêç„Å™„Å© ‚ÄúÊÑèÂë≥„ÉÜ„Ç≠„Çπ„Éà‚Äù „ÇíÂèñÂæó„ÄÇ&lt;BR /&gt;- LLM „Åå Few‚Äëshot „Å®„Éï„Ç£„Éº„É´„ÉâÂÆöÁæ©ÊÉÖÂ†±„ÇíÂü∫„Å´ÂêÑÂøÖË¶ÅÈ†ÖÁõÆ„ÇíÊé®ÂÆö„Åó„ÄÅUI ‰∏ä„ÅßÊèêÊ°à„ÄÇ&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;EM&gt;Few‚Äëshot&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „Å®„ÅØ„ÄÅÈÅéÂéª„É¨„Ç≥„Éº„Éâ„Çí "„ÅäÊâãÊú¨" „Å®„Åó„Å¶Êï∞‰ª∂Ê∏°„Åô„Åì„Å®„Åß„ÄÅLLM „Å´„Çà„ÇäÊ≠£Á¢∫„Å™Âá∫Âäõ„Çí‰øÉ„ÅôÊâãÊ≥ï„Åß„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ryota_Ito_0-1753081997364.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289082i30B7ADB0F66FFB03/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ryota_Ito_0-1753081997364.png" alt="Ryota_Ito_0-1753081997364.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1078215006"&gt;&lt;SPAN&gt;2. „É™„Ç¢„É´„Çø„Ç§„É†„Å™Áï∞Â∏∏Ê§úÁü• ‚Äî Âá¶ÁêÜ„Éï„É≠„Éº&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;ÊµÅ„Çå„ÅØÊ¨°„ÅÆ 4 „Çπ„ÉÜ„ÉÉ„Éó„Åß„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;ÈÅéÂéª„É¨„Ç≥„Éº„Éâ„Çí„Éô„ÇØ„Éà„É´„Å®„Åó„Å¶Ê∫ñÂÇô&lt;BR /&gt;&lt;/STRONG&gt;- ÈÅéÂéª„ÅÆÊ≠£Á¢∫„Å™„ÉÜ„Ç≠„Çπ„ÉàÁô∫Ê≥®„É¨„Ç≥„Éº„Éâ„ÇíÊäΩÂá∫„Åó„ÄÅShort‚ÄØText „Çí„Éô„ÇØ„Éà„É´Âåñ„Åó„Å¶ Vector‚ÄØEngine „Å∏‰øùÂ≠ò„ÄÇ &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;ÂìÅÁõÆ„Ç∞„É´„Éº„Éó„ÉªÁô∫Ê≥®Âçò‰Ωç„ÇíÊé®ÂÆö&lt;BR /&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- „Éû„Éã„É•„Ç¢„É´ÂÖ•Âäõ„Åï„Çå„Åü Short‚ÄØText „Çí„Éô„ÇØ„Éà„É´Âåñ„Åó„ÄÅÈ°û‰ººÂ∫¶Ê§úÁ¥¢„Åß„Éà„ÉÉ„Éó 3 ‰ª∂„ÇíÂèñÂæó„ÄÇ&lt;BR /&gt;- Few‚Äëshot „Å®„Éï„Ç£„Éº„É´„ÉâÂÆöÁæ©ÊÉÖÂ†±„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Å¶„ÄÅLLM „ÅåÂìÅÁõÆ„Ç∞„É´„Éº„Éó„Å®Áô∫Ê≥®Âçò‰Ωç„ÇíÊé®ÂÆö„ÄÇ &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;„É¨„É≥„Ç∏„ÇíË®àÁÆó&lt;BR /&gt;&lt;/STRONG&gt;- Êé®ÂÆö„Åó„ÅüÂìÅÁõÆ„Ç∞„É´„Éº„Éó„Çí„Ç≠„Éº„Å´ S/4HANA Cloud „Å∏Âïè„ÅÑÂêà„Çè„Åõ„ÄÅÈÅéÂéª„É¨„Ç≥„Éº„Éâ„Åã„ÇâÂçò‰æ°„ÉªÂÄãÊï∞„É¨„É≥„Ç∏„ÇíÂãïÁöÑ„Å´ÁÆóÂá∫„ÄÇ&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Áï∞Â∏∏„ÇíÂà§ÂÆö &amp;amp; Ë≠¶Âëä&lt;BR /&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- ÂÖ•Âäõ„Åï„Çå„ÅüÂçò‰æ°„ÉªÂÄãÊï∞„Åå„É¨„É≥„Ç∏Â§ñ„Å™„ÇâÂç≥Ë≠¶Âëä„ÄÇ„É¶„Éº„Ç∂„Éº„ÅØÁ¢∫Ë™ç„É¢„Éº„ÉÄ„É´ÁµåÁî±„Åß‰∏äÊõ∏„ÅçÁ¢∫ÂÆö„ÇÇÂèØËÉΩ„ÄÇ&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ryota_Ito_1-1753082145295.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289085i047D8DF8E0B9F36F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ryota_Ito_1-1753082145295.png" alt="Ryota_Ito_1-1753082145295.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-752618782"&gt;&lt;SPAN&gt;„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥„Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ryota_Ito_2-1753082217107.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289086iA7C4DF5BB47CA2AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ryota_Ito_2-1753082217107.png" alt="Ryota_Ito_2-1753082217107.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;* Âç∞„ÅØ„Éè„ÉÉ„Ç´„ÇΩ„É≥ÊôÇÁÇπ„Åß„ÅØÊú™ÂÆüË£Ö„ÅÆ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Åß„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;H3 id="toc-hId-685187996"&gt;&lt;SPAN&gt;„Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£Âõ≥„ÅÆ„Éù„Ç§„É≥„Éà&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;SAP BTP Cloud Foundry&lt;/STRONG&gt; ‰∏ä„Å´ CAP „Ç¢„Éó„É™ (Node.js/Python) „ÇíÈÖçÁΩÆ„Åó„ÄÅ&lt;STRONG&gt;SAP HANA Cloud&lt;/STRONG&gt; „Å® &lt;STRONG&gt;SAP AI Core/Gen&amp;nbsp;AI&amp;nbsp;Hub&lt;/STRONG&gt; „Çí„Çµ„Éº„Éì„Çπ„Éñ„É≠„Éº„Ç´„ÉºÁµåÁî±„ÅßÁµ±Âêà„ÄÇ&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Embedding&lt;/STRONG&gt; Âá¶ÁêÜ„Åß„ÉÜ„Ç≠„Çπ„Éà„Çí„Éô„ÇØ„Éà„É´Âåñ„Åó„ÄÅHANA Cloud „ÅÆ Vector Engine „Å´‰øùÂ≠ò„ÉªÊ§úÁ¥¢„ÄÇ&lt;/LI&gt;&lt;LI&gt;„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„ÅØ &lt;STRONG&gt;SAP Build Work Zone&lt;/STRONG&gt; „Å´„Éá„Éó„É≠„Ç§„Åï„Çå„Åü Fiori Elements „Ç¢„Éó„É™„Å®„Åó„Å¶Êèê‰æõ„ÄÇ&lt;/LI&gt;&lt;LI&gt;„Ç™„É≥„Éó„É¨ SAP&amp;nbsp;S/4HANA „Å®„ÅØ &lt;STRONG&gt;Cloud Connector&lt;/STRONG&gt; „ÅßÂÆâÂÖ®„Å´„Éà„É≥„Éç„É™„É≥„Ç∞„Åó„ÄÅË≥ºË≤∑‰ºùÁ•®„ÇÑ„Éû„Çπ„Çø„ÇíÈÄ£Êê∫„ÄÇÔºà*„ÅØ PoC „Åß„ÅØÊú™Êé•Á∂öÔºâ&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP Cloud Solutions&lt;/STRONG&gt;ÔºàS/4HANA Cloud, Ariba „Å™„Å©Ôºâ„Å®„ÇÇÂêå„Åò OData/SAP&amp;nbsp;BTP Êé•Á∂ö„É¢„Éá„É´„ÅßÊã°ÂºµÂèØËÉΩ„ÄÇ&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-359591772"&gt;&lt;SPAN&gt;„Éá„É¢ÂãïÁîª ‚Äî ‚Äú5 ÂàÜÂÖ•Âäõ‚Äù „Åå ‚ÄúÊï∞ÂçÅÁßí‚Äù „Å´Áü≠Á∏Æ&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FEN_q5fhrTfU%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DEN_q5fhrTfU&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FEN_q5fhrTfU%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="600" height="337" scrolling="no" title="Purchase Pilot Demo Video - BTP Hackathon 2025" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-421243705"&gt;&lt;SPAN&gt;ÂãïÁîª„ÅÆÊµÅ„Çå&lt;/SPAN&gt;&lt;/H4&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;SAP GUI „ÅßÂæìÊù•„ÅÆ„Éï„É™„Éº„ÉÜ„Ç≠„Çπ„ÉàÁô∫Ê≥®&lt;BR /&gt;&lt;/STRONG&gt;-&amp;nbsp; „Éû„Éã„É•„Ç¢„É´„Åß„ÅÆ„ÉÜ„Ç≠„Çπ„ÉàÁô∫Ê≥®ÂÖ•Âäõ„ÅØ„ÄÅÊìç‰Ωú„Å´ÊÖ£„Çå„Åü„É¶„Éº„Ç∂„Åß„ÇÇÁ¥Ñ&amp;nbsp;5&amp;nbsp;ÂàÜ„Åª„Å©„ÅÆÊôÇÈñì„ÇíË¶Å„Åó„ÄÅ„ÅÑ„Åè„Å§„Åã„ÅÆÂÖ•Âäõ„Éü„Çπ„ÅåÁô∫Áîü„Åó„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Purchase&amp;nbsp;Pilot - Ëá™ÂãïË£úÂÆåÊ©üËÉΩ„ÅÆÂÆüÊºî&lt;BR /&gt;&lt;/STRONG&gt;- &lt;STRONG&gt;Recommend&lt;/STRONG&gt; „Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ„ÉÜ„Ç≠„Çπ„Éà„Åã„ÇâÂãòÂÆö„Ç≥„Éº„Éâ„ÉªÂçò‰Ωç„Éª„Ç≥„Çπ„Éà„Çª„É≥„Çø„Å™„Å©„ÇíËá™ÂãïË£úÂÆå„Åó„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Purchase&amp;nbsp;Pilot - Áï∞Â∏∏Ê§úÁü•Ê©üËÉΩ„ÅÆÂÆüÊºî&lt;BR /&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- ÊâãÂÖ•Âäõ„Åó„Åü‰ºùÁ•®„Å´ÂØæ„Åó„Å¶ &lt;STRONG&gt;Validate&lt;/STRONG&gt; „Éú„Çø„É≥„ÇíÊäº„Åô„Å®„ÄÅAI „Åå‰∏çË∂≥È†ÖÁõÆ„ÇÑÁï∞Â∏∏ÂÄ§„ÇíÂç≥ÊôÇÊåáÊëò„Åó„ÄÅ‰øÆÊ≠£„Ç¢„Éâ„Éê„Ç§„Çπ„ÇíÊèêÁ§∫„Åó„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;„Åì„ÅÆ„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥„Å´„Çà„Çä„ÄÅ&lt;STRONG&gt;ÂÖ•ÂäõÊôÇÈñì„ÅÆÂâäÊ∏õ „ÇÑ ÂÖ•Âäõ„Éü„Çπ„ÅÆËªΩÊ∏õ &lt;/STRONG&gt;„ÇíÂÆüÁèæ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„ÅôÔºÅ„Åæ„Åü„ÄÅÁï∞Â∏∏„Çí„É™„Ç¢„É´„Çø„Ç§„É†Ê§úÁü•„Åô„Çã„Åì„Å®„Åß„ÄÅ&lt;STRONG&gt;ÊâãÊàª„Çä„Åå„Çº„É≠ &lt;/STRONG&gt;„Å´„Å™„Çä„ÄÅ„ÇØ„É™„Éº„É≥„Å™„Éá„Éº„Çø„Å´„Çà„ÇãÁµåÂñ∂ÊåáÊ®ô„ÇíÈ´òÈÄüÊõ¥Êñ∞„Å´Áπã„Åå„Çä„Åæ„ÅôÔºÅ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--33435238"&gt;&lt;SPAN&gt;„Åæ„Å®„ÇÅ&lt;/SPAN&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;SAP „Ç∏„É£„Éë„É≥ „ÉÅ„Éº„É† TO&amp;nbsp;BEs „ÅÆÊåëÊà¶&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;: Á§æÂì°Ë¶ñÁÇπ„Åß ‚ÄúÁèæÂ†¥ DX‚Äù „Çí„ÉÜ„Éº„Éû„Å´„ÄÅAI √ó BTP „ÅÆÂèØËÉΩÊÄß„ÇíÊ§úË®º&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Purchase&amp;nbsp;Pilot „ÅÆ‰æ°ÂÄ§&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;: „ÉÜ„Ç≠„Çπ„ÉàÁô∫Ê≥®„Å®„ÅÑ„ÅÜ "ÊúÄÂæå„ÅÆÊâãÂÖ•ÂäõÈ†òÂüü" „Çí AI „ÅßÂ§âÈù©„Åó„ÄÅÊìç‰ΩúÊÄß„Å®„Éá„Éº„ÇøÂìÅË≥™„ÇíÂêåÊôÇ„Å´Âêë‰∏ä„ÄÇ&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;„ÅîÊÑèË¶ã„Çí„ÅäËÅû„Åã„Åõ„Åè„Å†„Åï„ÅÑÔºÅ&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; „Ç≥„É°„É≥„ÉàÊ¨Ñ„ÇÑ SNS „Åß„ÅÆ„Éï„Ç£„Éº„Éâ„Éê„ÉÉ„ÇØ„Çí„ÅäÂæÖ„Å°„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/purchase-pilot-%E3%81%A7%E3%83%95%E3%83%AA%E3%83%BC%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E7%99%BA%E6%B3%A8%E3%82%92-ai-%E5%A4%89%E9%9D%A9-sap-btp-hackathon-2025-%E6%88%90%E6%9E%9C%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/ba-p/14157520"/>
    <published>2025-07-28T03:39:05.459000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-evaluate-an-idea-of-custom-ai-scenario-for-your-business-system-like/ba-p/14166637</id>
    <title>How to evaluate an idea of custom AI scenario for your business system like SAP S/4HANA Cloud in AI</title>
    <updated>2025-07-30T11:32:09.577000+02:00</updated>
    <author>
      <name>Jacky_Liu1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/132085</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://discovery-center.cloud.sap/ai-catalog/" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Business AI&lt;/A&gt; has listed all the&amp;nbsp; pre-delivered AI Scenarios for our business systems like SAP S/4HANA Cloud. Which means once we finished the initial setup like&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/joule-in-sap-s-4hana-cloud-public-edition-setup-guide/ba-p/13965333" target="_blank"&gt;Joule in SAP S/4HANA Cloud Public Edition - Setup Guide&lt;/A&gt;, our end users can use the pre-delivered AI Scenarios.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In some situations, our business systems' users and other associates have some genius ideas to use LLM in the system. Then how to quickly evaluate the idea and the Effect of the idea? Give an example, in SAP S/4HANA Cloud, Outbound Delivery documents are create again Sales Orders, then the routes are&amp;nbsp; determined based on route determination logic. Are there any better options? For example, can we ask LLM to give some suggestions on routes based on more information like destinations' weather forecast, or even based on some freight charge information as grounding? I don't know yet. But I can quickly evaluate my idea With SAP AI Core and SAP AI Launchpad before the developer starts to develop.&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1994246474"&gt;&lt;STRONG&gt;Prerequisites:&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/enabling-service-in-cloud-foundry" target="_self" rel="noopener noreferrer"&gt;SAP AI Core has been initially set up in your BTP Sub Account&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/ai-launchpad/sap-ai-launchpad/initial-setup" target="_self" rel="noopener noreferrer"&gt;SAP AI Launchpad has been initially set up in your BTP Sub Account.&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1797732969"&gt;Steps:&lt;/H4&gt;&lt;H5 id="toc-hId-1730302183"&gt;1.&amp;nbsp; Prepare the data which can fetched from release API or&amp;nbsp; CDS View.&amp;nbsp; I have prepared data as the following:&lt;/H5&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "DeliveryDocument": "80000000",
    "HeaderGrossWeight": "3.000",
    "HeaderNetWeight": "2.700",
    "HeaderWeightUnit": "KG",
    "HeaderVolume": "0.000",
    "HeaderVolumeUnit": "",
    "ShipFromAddress": { //from shop point address
        "CityName": "Palo Alto",
        "CompanyPostalCode": "",
        "CorrespondenceLanguage": "EN",
        "Country": "US",
        "EmailAddress": "",
        "FaxNumber": "",
        "FaxNumberExtension": "",
        "Floor": "",
        "FormOfAddress": "0003",
        "HomeCityName": "",
        "HouseNumber": "3475",
        "HouseNumberSupplementText": "",
        "MobilePhoneNumber": "",
        "PhoneNumber": "",
        "PostalCode": "94304-1355",
        "PrfrdCommMediumType": "",
        "Region": "CA",
        "RoomNumber": "",
        "StreetName": "Deer Creek",
        "StreetPrefixName": "",
        "StreetSuffixName": "",
        "TaxJurisdiction": "GA00000000"
    },
        "ShipToAddress": {   //from ship to party address
        "DeliveryDocument": "80000000",
        "PartnerFunction": "SP",
        "AddressID": "22900",
        "BusinessPartnerName1": "Domestic US Customer 1",
        "AddressTimeZone": "EST",
        "CityName": "Atlanta",
        "CompanyPostalCode": "",
        "CorrespondenceLanguage": "EN",
        "Country": "US",
        "EmailAddress": "mrinal.kanti.chanda@sap.com",
        "FaxNumber": "",
        "FaxNumberExtension": "",
        "Floor": "",
        "FormOfAddress": "0003",
        "HomeCityName": "",
        "HouseNumber": "200",
        "HouseNumberSupplementText": "",
        "MobilePhoneNumber": "",
        "PhoneNumber": "999 555 6721",
        "PostalCode": "30315-1402",
        "PrfrdCommMediumType": "",
        "Region": "GA",
        "RoomNumber": "",
        "StreetName": "Augusta Ave SE",
        "StreetPrefixName": "",
        "StreetSuffixName": "",
        "TaxJurisdiction": "GA00000000"
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1533788678"&gt;2.&amp;nbsp; Test in SAP AI Launchpad:&lt;/H5&gt;&lt;P&gt;I prepared the follow Sytem prompt:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;You are an expert of logistic.You have received a user's outbound delivery information in JSON. The user need you to suggest a best route based outbound delivery JSON information.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;The User Prompt is the JSON file in Step 1 .&lt;/P&gt;&lt;P&gt;Let's test in SAP AI Launchpad with GPT-4.1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jacky_Liu1_0-1753867130469.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293807iBE2B80EDFE2E9A8A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jacky_Liu1_0-1753867130469.png" alt="Jacky_Liu1_0-1753867130469.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jacky_Liu1_1-1753867149938.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293808i2A973FE59A175261/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jacky_Liu1_1-1753867149938.png" alt="Jacky_Liu1_1-1753867149938.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jacky_Liu1_2-1753867170822.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293809i26D00F9BAF60BF85/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jacky_Liu1_2-1753867170822.png" alt="Jacky_Liu1_2-1753867170822.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The following is the response from GPT-4.1&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;Based on your outbound delivery JSON, here‚Äôs your **delivery scenario**:

- **Ship From:** 3475 Deer Creek, Palo Alto, CA 94304-1355
- **Ship To:** 200 Augusta Ave SE, Atlanta, GA 30315-1402
- **Weight:** 3.0 kg (Net: 2.7 kg)
- **Country:** US (Domestic shipment)
- **Time Zone Difference:** Palo Alto (Pacific) ‚Üí Atlanta (Eastern)
- **No special volume requirement or hazardous cargo flagged**

---

## Best Route Suggestion

### 1. **Route Options Overview**

#### **A. Air Freight**
- **Best for:** Speed (overnight or 1-2 day delivery)
- **Cost:** Highest (but the shipment weight is low, so the cost is manageable)
- **Process:**
  - Pickup from Palo Alto
  - Deliver to SFO, OAK, or SJC airport
  - Direct flight to ATL
  - Local delivery in Atlanta

#### **B. Ground Courier (Expedited)**
- **Best for:** Fast and reliable ground service (2-3 days typical with express)
- **Carriers:** FedEx, UPS, USPS Priority Express, DHL
- **Cost:** Lower than air freight, still fast for lightweight parcels

#### **C. Ground Courier (Standard)**
- **Best for:** Cost efficiency, less urgency (4-6 days)
- **Carriers:** FedEx Ground, UPS Ground, USPS Priority

---

### 2. **Recommended (Best) Route for Your Delivery**

Given your shipment details (very light, no hazardous/volume concerns), and typical business shipping needs:

#### **FedEx/UPS/DHL Express Air Service**
1. **Pickup:** Arrange for parcel pickup at 3475 Deer Creek, Palo Alto, CA.
2. **Transport:** 
   - Collected and sent same day to a regional hub (San Francisco/Oakland/San Jose for air departure).
   - Overnight air transport to Atlanta Hartsfield International Airport.
3. **Delivery:** 
   - Early-morning or same-day handoff for final-mile delivery in Atlanta.
   - Will reach consignee at 200 Augusta Ave SE, Atlanta, within 24-36 hours.

**Features:**
- **Tracking &amp;amp; Signature**: Included.
- **Best for:** Business-critical, customer satisfaction.
- **Estimated Delivery Time:** Next business day or 2 business days.
- **Estimated Cost:** Moderate (due to low parcel weight).

---

### 3. **Alternative: Ground Courier Service**

If premium speed is not critical:

- **FedEx Ground, UPS Ground, or USPS Priority Mail**
- Delivery estimate: 4-6 business days
- Pickup same as above, direct line haul across the US
- Cost: Lower

---

## **Suggested Carrier and Service**

- **Carrier:** FedEx, UPS, or DHL Express (all ideal for coast-to-coast shipments)
- **Service:** FedEx Priority Overnight, UPS Next Day Air Saver, or DHL Express Worldwide
- **Booking:** You can book online, arrange for pickup, label your parcel at origin. Given the low weight, most shipping managers select air express for coast-to-coast in the US.

---

### **Route Mapping Summary**

```
1. Palo Alto, CA (your facility)
      ‚Üì
2. SFO/SJC/OAK Airport (CA hub, air transfer)
      ‚Üì
3. ATL Airport (GA hub, air arrival)
      ‚Üì
4. Atlanta last-mile depot
      ‚Üì
5. 200 Augusta Ave SE, Atlanta, GA (customer)
```

---

## **Action Steps**
- Package and label your shipment.
- Get quotes from FedEx, UPS, DHL online or through your logistics provider for **air express service**.
- Book for next day pickup/drop-off.
- Share tracking with your customer.

**Note:** If your delivery is not time-critical or if budget is the priority, use a ground service instead, accepting the longer transit time.

---

**Do you need carrier recommendations, rate estimation, or step-by-step booking guidance?** Let me know how I can specifically assist next!&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Of course, you can adjust the prompt or even you grounding some document information in AI Launchpad.&lt;/P&gt;&lt;P&gt;If the result is acceptable, then Architecture can design. Then the developer can start to realize back end with CAP NodeJS, CAP Java, RAP(Cloud ABAP), Python. The listed Languages are supported by the SAP AI SDK.&lt;/P&gt;&lt;P&gt;The end!&lt;/P&gt;&lt;P&gt;Thanks for your time!&lt;/P&gt;&lt;P&gt;Jacky Liu&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-evaluate-an-idea-of-custom-ai-scenario-for-your-business-system-like/ba-p/14166637"/>
    <published>2025-07-30T11:32:09.577000+02:00</published>
  </entry>
</feed>
