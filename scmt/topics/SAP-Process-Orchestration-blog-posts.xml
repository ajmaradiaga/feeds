<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Process-Orchestration-blog-posts.xml</id>
  <title>SAP Community - SAP Process Orchestration</title>
  <updated>2025-10-07T17:01:56.381276+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Process Orchestration/pd-p/477916618626075516391832082074785" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Process Orchestration blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-create-and-expose-odata-apis/ba-p/14025789</id>
    <title>how to create and expose OData APIs</title>
    <updated>2025-02-26T17:10:05.673000+01:00</updated>
    <author>
      <name>SaiPrudhviRajTaduva</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1501949</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;The capabilities of an OData API allow you to support new integration use cases with SAP Cloud Integration where you expose an OData API which can be consumed by SAP Fiori applications, SAP Business Technology Platform, mobiles services or any other custom applications to fulfil user-centric scenarios&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;As an example, we will create an OData API&amp;nbsp;which delivers product data.&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Note:&amp;nbsp;Go to POSTMAN, save meta data of ODATA service in .edmx format&lt;BR /&gt;URl:&amp;nbsp;&lt;SPAN&gt;&lt;A href="http://services.odata.org/V2/Northwind/Northwind.svc/$metadata" target="_blank" rel="nofollow noopener noreferrer"&gt;http://services.odata.org/V2/Northwind/Northwind.svc/$metadata&lt;/A&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_0-1740415090818.png" style="width: 662px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229783i01741137711449C6/image-dimensions/662x450?v=v2" width="662" height="450" role="button" title="SaiPrudhviRajTaduva_0-1740415090818.png" alt="SaiPrudhviRajTaduva_0-1740415090818.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step1:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Open Cloud Integration via the tab “Design, Develop and Operate Integration Scenarios” in your SAP Integration Suite Landing page.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_0-1740400555151.png" style="width: 691px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229587iF70BC9FFDCD7CFA1/image-dimensions/691x221?v=v2" width="691" height="221" role="button" title="SaiPrudhviRajTaduva_0-1740400555151.png" alt="SaiPrudhviRajTaduva_0-1740400555151.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Click on create and enter the details and click on save&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_2-1740401083296.png" style="width: 702px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229592i7CE87ABEFAD8DA29/image-dimensions/702x218?v=v2" width="702" height="218" role="button" title="SaiPrudhviRajTaduva_2-1740401083296.png" alt="SaiPrudhviRajTaduva_2-1740401083296.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_3-1740404698275.png" style="width: 679px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229675i242C4302200FB222/image-dimensions/679x238?v=v2" width="679" height="238" role="button" title="SaiPrudhviRajTaduva_3-1740404698275.png" alt="SaiPrudhviRajTaduva_3-1740404698275.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3:Navigate to Artifacts tab&amp;nbsp;Click on Add -&amp;gt;API-&amp;gt;select runtime profile as cloud integration and click on next&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_4-1740404858974.png" style="width: 687px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229678iF5E39A4CC356F8B0/image-dimensions/687x207?v=v2" width="687" height="207" role="button" title="SaiPrudhviRajTaduva_4-1740404858974.png" alt="SaiPrudhviRajTaduva_4-1740404858974.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_5-1740404986836.png" style="width: 673px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229680iBF216D2F969BC676/image-dimensions/673x482?v=v2" width="673" height="482" role="button" title="SaiPrudhviRajTaduva_5-1740404986836.png" alt="SaiPrudhviRajTaduva_5-1740404986836.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 4:&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Select the API type AS OData API and click on next then click on the method create using wizard&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_7-1740405145217.png" style="width: 689px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229684i3326B0A95D5EAC65/image-dimensions/689x493?v=v2" width="689" height="493" role="button" title="SaiPrudhviRajTaduva_7-1740405145217.png" alt="SaiPrudhviRajTaduva_7-1740405145217.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_8-1740405278191.png" style="width: 677px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229685iD0E6B9E16D65ACF8/image-dimensions/677x491?v=v2" width="677" height="491" role="button" title="SaiPrudhviRajTaduva_8-1740405278191.png" alt="SaiPrudhviRajTaduva_8-1740405278191.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5:&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Provide the API details as shown in the below and click on create&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_9-1740405385944.png" style="width: 674px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229686i8446A24E72F08054/image-dimensions/674x488?v=v2" width="674" height="488" role="button" title="SaiPrudhviRajTaduva_9-1740405385944.png" alt="SaiPrudhviRajTaduva_9-1740405385944.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6:&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;After performing above step you will be able to see below screen then click on edit&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_10-1740405526981.png" style="width: 687px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229687iD3D37E49993C58A2/image-dimensions/687x388?v=v2" width="687" height="388" role="button" title="SaiPrudhviRajTaduva_10-1740405526981.png" alt="SaiPrudhviRajTaduva_10-1740405526981.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Click on Import Model wizards as shown in below&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_11-1740405582297.png" style="width: 679px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229688iCE988EB28D75FDBB/image-dimensions/679x361?v=v2" width="679" height="361" role="button" title="SaiPrudhviRajTaduva_11-1740405582297.png" alt="SaiPrudhviRajTaduva_11-1740405582297.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7:&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Select the&amp;nbsp; Data Source Type as ODATA and browse the .edmx file which is saved in your local desktop then click on step 2 and select the required entity type in our case we are selecting Product then click on step3 and select finish&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_13-1740405815286.png" style="width: 695px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229691i792F858C229176EF/image-dimensions/695x278?v=v2" width="695" height="278" role="button" title="SaiPrudhviRajTaduva_13-1740405815286.png" alt="SaiPrudhviRajTaduva_13-1740405815286.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_14-1740405986584.png" style="width: 678px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229692i77A1FEEA8D0DB206/image-dimensions/678x315?v=v2" width="678" height="315" role="button" title="SaiPrudhviRajTaduva_14-1740405986584.png" alt="SaiPrudhviRajTaduva_14-1740405986584.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_15-1740406073391.png" style="width: 674px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229694iB217E2B4BA0678BD/image-dimensions/674x316?v=v2" width="674" height="316" role="button" title="SaiPrudhviRajTaduva_15-1740406073391.png" alt="SaiPrudhviRajTaduva_15-1740406073391.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8&lt;/STRONG&gt;:&lt;BR /&gt;&lt;STRONG&gt;Click on bind then provide Entity sets and End Point as shown in the below, here in our case I have used free ODATA service " &lt;A href="https://services.odata.org/V2/Northwind/Northwind.svc/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://services.odata.org/V2/Northwind/Northwind.svc/&lt;/A&gt; " then clock on ok&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_0-1740410230913.png" style="width: 679px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229726i1B578559C1127B2D/image-dimensions/679x297?v=v2" width="679" height="297" role="button" title="SaiPrudhviRajTaduva_0-1740410230913.png" alt="SaiPrudhviRajTaduva_0-1740410230913.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_1-1740410284210.png" style="width: 677px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229727i2704B35B304375F0/image-dimensions/677x314?v=v2" width="677" height="314" role="button" title="SaiPrudhviRajTaduva_1-1740410284210.png" alt="SaiPrudhviRajTaduva_1-1740410284210.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 9:&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Now you will see below option navigate to Integration flow editor&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_3-1740410648216.png" style="width: 660px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229734i1015ECB996B9F2A0/image-dimensions/660x317?v=v2" width="660" height="317" role="button" title="SaiPrudhviRajTaduva_3-1740410648216.png" alt="SaiPrudhviRajTaduva_3-1740410648216.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 10:&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Click on Navigate to Integration flow editor it will route you to the below integration flow now&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_4-1740410780671.png" style="width: 655px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229735i5464332895AD25EA/image-dimensions/655x329?v=v2" width="655" height="329" role="button" title="SaiPrudhviRajTaduva_4-1740410780671.png" alt="SaiPrudhviRajTaduva_4-1740410780671.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 11&lt;/STRONG&gt;:&lt;BR /&gt;&lt;STRONG&gt;Click on Response message mapping and map all the fields one to one&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_5-1740410909499.png" style="width: 671px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229736iB2AE724351600AF8/image-dimensions/671x222?v=v2" width="671" height="222" role="button" title="SaiPrudhviRajTaduva_5-1740410909499.png" alt="SaiPrudhviRajTaduva_5-1740410909499.png" /&gt;&lt;/span&gt;&lt;BR /&gt;Now click on ODATA receiver connector as below and provide the details&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_6-1740411004616.png" style="width: 657px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229737i62AEA134037695A2/image-dimensions/657x303?v=v2" width="657" height="303" role="button" title="SaiPrudhviRajTaduva_6-1740411004616.png" alt="SaiPrudhviRajTaduva_6-1740411004616.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Click on browse and select .edmx file and click on step2 then select entity and the required fields then click on finish&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_7-1740411076770.png" style="width: 653px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229739iD9E1A4EDAFB9401C/image-dimensions/653x249?v=v2" width="653" height="249" role="button" title="SaiPrudhviRajTaduva_7-1740411076770.png" alt="SaiPrudhviRajTaduva_7-1740411076770.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_8-1740411212335.png" style="width: 658px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229740i17763CFE2FA086F7/image-dimensions/658x329?v=v2" width="658" height="329" role="button" title="SaiPrudhviRajTaduva_8-1740411212335.png" alt="SaiPrudhviRajTaduva_8-1740411212335.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 12&lt;/STRONG&gt;:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Click on Ok and go back to the OADATAAPIproduct to deploy&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_9-1740411407475.png" style="width: 665px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229742i0D004C37B1C35C07/image-dimensions/665x346?v=v2" width="665" height="346" role="button" title="SaiPrudhviRajTaduva_9-1740411407475.png" alt="SaiPrudhviRajTaduva_9-1740411407475.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_10-1740411483544.png" style="width: 680px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229743i43A9B37B4D84C733/image-dimensions/680x333?v=v2" width="680" height="333" role="button" title="SaiPrudhviRajTaduva_10-1740411483544.png" alt="SaiPrudhviRajTaduva_10-1740411483544.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step13&lt;/STRONG&gt;:&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Now our ODATAAPI is ready to test for this we have to go to Monitor-&amp;gt;Integrations and APIs&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_11-1740411669672.png" style="width: 678px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229744iCED99F5BE46396A5/image-dimensions/678x231?v=v2" width="678" height="231" role="button" title="SaiPrudhviRajTaduva_11-1740411669672.png" alt="SaiPrudhviRajTaduva_11-1740411669672.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Copy the endpoint to test it using Postman&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_12-1740411785887.png" style="width: 676px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229746i057CEE5ADB8CF12D/image-dimensions/676x254?v=v2" width="676" height="254" role="button" title="SaiPrudhviRajTaduva_12-1740411785887.png" alt="SaiPrudhviRajTaduva_12-1740411785887.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;For testing the above endpoint using Postman&amp;nbsp;Enter the URL you copied&amp;nbsp;For Authorization choose Type as Basic Auth from the dropdown list. Enter&amp;nbsp; your user Id and password of CPI tenant&amp;nbsp;And finally click on Send for sending out the request to your new OData API on&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_13-1740412009221.png" style="width: 595px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229748i9827AC6F503B63BC/image-dimensions/595x381?v=v2" width="595" height="381" role="button" title="SaiPrudhviRajTaduva_13-1740412009221.png" alt="SaiPrudhviRajTaduva_13-1740412009221.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;If you get a response which shows that a collection ProductSet is available, then the OData API is registered on the CPI tenant.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Next, call GET operation of this OData API for retrieving the list of orders out of the OData source.&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;In Postman append /ProductSet to the previous Url click on send&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SaiPrudhviRajTaduva_15-1740412422459.png" style="width: 696px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/229752iF3EA9C7EC17B86E3/image-dimensions/696x454?v=v2" width="696" height="454" role="button" title="SaiPrudhviRajTaduva_15-1740412422459.png" alt="SaiPrudhviRajTaduva_15-1740412422459.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Thanks for reading the blog, happy Integrating&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Regards,&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Sai Prudhvi Raj Taduva&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-create-and-expose-odata-apis/ba-p/14025789"/>
    <published>2025-02-26T17:10:05.673000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-learning-blog-posts/how-do-i-use-the-migration-tool/ba-p/14042000</id>
    <title>How do I use the migration tool?</title>
    <updated>2025-03-12T12:26:21.872000+01:00</updated>
    <author>
      <name>Margit_Wagner</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/491</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="3"&gt;&lt;SPAN&gt;I&amp;nbsp;&lt;/SPAN&gt;recommend to access our&amp;nbsp;&lt;A title="Migrating to SAP Integration Suite" href="https://learning.sap.com/learning-journeys/migrating-to-sap-integration-suite" target="_blank" rel="noopener noreferrer"&gt;Migrating to SAP Integration Suite&lt;/A&gt;&lt;/FONT&gt;&amp;nbsp;learning journey.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Overview&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;After completing this learning journey, you will be able to migrate integration scenarios from SAP Process Orchestration / SAP Process Integration to SAP Integration Suite.&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Learning objectives&lt;BR /&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;This learning journey provides guidance for integration developers to migrate from SAP Process Orchestration / SAP Process Integration to SAP Integration Suite.&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Experience creating iFlows with SAP Integration Suite&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;Please ask a question related&amp;nbsp;to the digital learning Journey in the&amp;nbsp;&lt;/STRONG&gt;&lt;A href="https://groups.community.sap.com/t5/sap-learning-q-a/qa-p/learningqanda-board" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Q&amp;amp;A area&lt;/STRONG&gt;&lt;/A&gt;&lt;STRONG&gt;.&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Our SAP Learning Experts will get back to you as soon as possible!&amp;nbsp;We are here to support you.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;I appreciate your feedback and we will make sure to continue sharing interesting topics.&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;Kind regards&lt;BR /&gt;Margit&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/sap-learning-blog-posts/how-do-i-use-the-migration-tool/ba-p/14042000"/>
    <published>2025-03-12T12:26:21.872000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/exciting-opportunity-for-sap-partners-join-the-sap-customer-engagement/ba-p/14051471</id>
    <title>Exciting Opportunity for SAP Partners: Join the SAP Customer Engagement Initiative - Cycle 1, 2025</title>
    <updated>2025-03-20T13:51:32.601000+01:00</updated>
    <author>
      <name>nadine_p</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/762608</uri>
    </author>
    <content>&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="All Projects 1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/240468i2B01BE5AC9C7C8BF/image-size/large?v=v2&amp;amp;px=999" role="button" title="All Projects 1.png" alt="All Projects 1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Dear SAP Partners,&lt;/P&gt;&lt;P&gt;We're thrilled to announce that the first cycle of the SAP Customer Engagement Initiative for 2025 is still &lt;STRONG&gt;open for your registrations!&lt;/STRONG&gt; This is a unique opportunity for you to collaborate with SAP and help shape the future of our products. This is your chance to make a real impact and contribute valuable insights to the development of SAP's upcoming products, features, and applications. Don't miss out – &lt;STRONG&gt;register by March 28, 2025&lt;/STRONG&gt;, to join the current projects open to SAP partners. We look forward to hearing your perspectives and ideas on the following initiatives:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;ABAP&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3895" target="_blank" rel="noopener noreferrer"&gt;ABAP Cloud Development Assistant&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3893" target="_blank" rel="noopener noreferrer"&gt;OData UI Service from scratch Generator&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;SAP Business Technology Platform&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3860" target="_blank" rel="noopener noreferrer"&gt;Create AI-driven extensions and automations with SAP Build&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3853" target="_blank" rel="noopener noreferrer"&gt;SAP BPM, SAP BRM and SAP Process Orchestration migration to Cloud&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3850" target="_blank" rel="noopener noreferrer"&gt;SAP BTP Cockpit, Cloud Foundry UIs&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3861" target="_blank" rel="noopener noreferrer"&gt;SAP BTP Usability Event - User research project&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3854" target="_blank" rel="noopener noreferrer"&gt;SAP Integration Suite&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;SAP&lt;/STRONG&gt;&amp;nbsp;&lt;STRONG&gt;Customer&lt;/STRONG&gt;&amp;nbsp;&lt;STRONG&gt;Experience&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3849" target="_blank" rel="noopener noreferrer"&gt;SAP CX AI Toolkit&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Data &amp;amp; Analytics&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3859" target="_blank" rel="noopener noreferrer"&gt;SAP HANA Cloud Elastic Compute Node&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3857" target="_blank" rel="noopener noreferrer"&gt;SAP HANA Database Migration to SAP HANA Cloud&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;SAP S/4HANA Cloud&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3862" target="_blank" rel="noopener noreferrer"&gt;Fiori First for Sales Order Management&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3869" target="_blank" rel="noopener noreferrer"&gt;Identifying and resolving critical situations in a production planners day in S/4HANA Public Cloud&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3868" target="_blank" rel="noopener noreferrer"&gt;Identity and Access Management in SAP S/4HANA Cloud Public Edition&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3866" target="_blank" rel="noopener noreferrer"&gt;Insights into Business processes with Business Event Logging&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3890" target="_blank" rel="noopener noreferrer"&gt;New Financial Reporting for Enterprise Project (Project Booklet) including ETO&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3872" target="_blank" rel="noopener noreferrer"&gt;Planned New Solution for Cost Component Breakdown&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3845" target="_blank" rel="noopener noreferrer"&gt;SAP S/4HANA Cloud Private Edition - Product Change Management&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3848" target="_blank" rel="noopener noreferrer"&gt;Simplification of transports in SAP S/4HANA® Cloud Public Edition, three-system landscape&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;SAP&lt;/STRONG&gt;&amp;nbsp;&lt;STRONG&gt;Globalization&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3877" target="_blank" rel="noopener noreferrer"&gt;Australia and New Zealand: GST requirement for Down payments&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3876" target="_blank" rel="noopener noreferrer"&gt;Australia: Modified Payment Times Report - AASB 8 and Taxable Payments Annual Report&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Lifecycle Management&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3863" target="_blank" rel="noopener noreferrer"&gt;DevOps with ABAP&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Others&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3846" target="_blank" rel="noopener noreferrer"&gt;SAP Reference Architecture in SAP LeanIX&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;&lt;A href="https://influence.sap.com/sap/ino/#campaign/3864" target="_blank" rel="noopener noreferrer"&gt;Shape the future of SAP Cloud ALM Configuration &amp;amp; Security Analysis&lt;/A&gt;&lt;/U&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We believe collaboration is at the heart of innovation. By working together with our customers and partners, we can reshape the future of SAP products and transform the way businesses operate.&lt;/P&gt;&lt;P&gt;Don't wait – register today on&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/calling-all-sap-partners-join-the-sap-customer-engagement-initiative-cycle/ba-p/influence.sap.com" target="_blank"&gt;influence.sap.com&lt;/A&gt;&amp;nbsp;and join the SAP Customer Engagement Initiative Cycle 1 in 2025!&lt;/P&gt;&lt;P&gt;Warm regards,&lt;/P&gt;&lt;P&gt;Your SAP Customer Engagement Initiative Team&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Follow-up after registration: When you register for a project, you will be invited to an introductory call&amp;nbsp;with the SAP project lead. At this point further participation is optional. Typically, all activities are governed by the&amp;nbsp;&lt;/EM&gt;&lt;A href="https://www.sap.com/about/customer-involvement/influence-adopt.html#pdf-asset=c4f10951-db7c-0010-82c7-eda71af511fa&amp;amp;page=1" target="_blank" rel="noopener noreferrer"&gt;&lt;EM&gt;Feedback Agreement with SAP&lt;/EM&gt;&lt;/A&gt;&lt;EM&gt;.&lt;/EM&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/exciting-opportunity-for-sap-partners-join-the-sap-customer-engagement/ba-p/14051471"/>
    <published>2025-03-20T13:51:32.601000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/new-pipeline-concept-features-supporting-service-interface-operations-and/ba-p/14049909</id>
    <title>New Pipeline Concept features: Supporting service interface operations and others</title>
    <updated>2025-03-25T18:35:40.028000+01:00</updated>
    <author>
      <name>alex_bundschuh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45178</uri>
    </author>
    <content>&lt;P&gt;With the latest version 1.0.10 of the &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/introducing-the-new-pipeline-concept-in-cloud-integration/ba-p/13639651" target="_blank"&gt;Pipeline Concept&lt;/A&gt;, we have shipped the following features:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Supporting service interface operations&lt;/LI&gt;&lt;LI&gt;Updated the allowed header list&lt;/LI&gt;&lt;LI&gt;Have done script optimizations&lt;/LI&gt;&lt;LI&gt;Converted the XI message ID to upper case&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The package can be accessed from the&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://hub.sap.com/package/PIPipelineGenericIntegrationFlows/integrationflow" target="_blank" rel="noopener noreferrer"&gt;SAP Business Accelerator Hub&lt;/A&gt;&lt;SPAN&gt;. If you have already copied the package to your workspace in your SAP Integration Suite tenant, you can simply run the update of the package to be able to use the latest features.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;With respect to the &lt;STRONG&gt;allowed header&lt;/STRONG&gt; list, we did some minor changes to increase the flexibility when using SAP headers starting with the terms &lt;EM&gt;SAP_Sender&lt;/EM&gt; and &lt;EM&gt;SAP_Receiver&lt;/EM&gt; as well as custom headers starting with the term &lt;EM&gt;customX&lt;/EM&gt;. So, now any header starting with those terms are allowed.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Script optimizations&lt;/STRONG&gt; have been carried out for the scripts in the provided script collection. Here, we used the new features to fix script incompatibilities and optimizing Groovy scripts via generative AI. Actually, not much had to be changed, the scripts are actually not that complex and in most cases already most efficiently coded.&lt;/P&gt;&lt;P&gt;With respect to the &lt;STRONG&gt;XI message ID&lt;/STRONG&gt;, we received feedback from a customer that it was hard to track an XI message from the sending system in the message monitor of the Cloud Integration. The issue was that the ID in the Integration Engine monitor was all capital letter whereas in the Cloud Integration message monitor it was lower case. So, copy and past into the search field was not really supported. In the generic XI inbound processing flow &lt;EM&gt;Pipeline Generic Step01 - Inbound Processing for XI&lt;/EM&gt; we now simply&amp;nbsp;&lt;SPAN&gt;convert the XI message IDs to upper case to be compatible with the format which is displayed in the message monitoring of the Integration Engine of the sender system.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Finally, we now support integration scenarios with multiple &lt;STRONG&gt;operations of the sender service interface&lt;/STRONG&gt;, see Scenarios with &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/special-cases#scenarios-with-sender-service-interface-operations" target="_blank" rel="noopener noreferrer"&gt;Sender Service Interface Operations&lt;/A&gt;. For this,&amp;nbsp;you need to pass the SAP header &lt;EM&gt;SAP_SenderOperation&lt;/EM&gt; from either the scenario-specific inbound processing flow or the scenario-specific inbound conversion flow to the generic integration flows to be able to determine receiving systems or receiver interfaces based on the operation. In the XSLT to determine receivers and receiver interfaces you can then refer to the SAP header as parameter, see example below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="22_02_Scenario10_xslt.png" style="width: 928px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/239679iF903157412893347/image-size/large?v=v2&amp;amp;px=999" role="button" title="22_02_Scenario10_xslt.png" alt="22_02_Scenario10_xslt.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can either implement your own logic to determine the operation or you can reuse the templates provided in the integration package for scenario-specific inbound processing or scenario-specific inbound conversion where we have implemented the following logic:&lt;/P&gt;&lt;P&gt;We assume that&amp;nbsp;there is a one-to-one relationship between the service interface operation and the message type, i.e., each operation of one and the same service interface must have a unique message type. This is exactly the same restriction that we have in SAP Process Orchestration which allows us to uniquely determine the operation based on the message type.&lt;/P&gt;&lt;P&gt;For this, we need to maintain the mapping between the operation and the root node name of the incoming XML message. Optionally, if the incoming message is not in XML format, you can maintain the mapping in the scenario-specific inbound conversion flow assuming that after the conversion your message is in XML format.&lt;/P&gt;&lt;P&gt;In a content modifier step, for each operation you need to create an exchange property to map the operation to the message type adhering to the naming convention as shown in the figure below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="22_01_Scenario10_inbound_flow.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/239681iFF52E0F75C3E3CF4/image-size/large?v=v2&amp;amp;px=999" role="button" title="22_01_Scenario10_inbound_flow.png" alt="22_01_Scenario10_inbound_flow.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the example, we map the operation &lt;EM&gt;Create&lt;/EM&gt; to the message type &lt;EM&gt;MTOrderCreate&lt;/EM&gt; and the operation&amp;nbsp;&lt;EM&gt;Change&lt;/EM&gt; to the message type &lt;EM&gt;MTOrderChange&lt;/EM&gt;. In addition, we need to store the name of the XML root node in the exchange property &lt;EM&gt;messageTypeFromXMLRoot&lt;/EM&gt;&amp;nbsp;via the xpath&amp;nbsp;&lt;EM&gt;/*/local-name()&lt;/EM&gt;.&lt;/P&gt;&lt;P&gt;After the content modifier, we need to carry out the Groovy script &lt;EM&gt;mapMessageTypeToOperation&lt;/EM&gt;. The script compares the value of all exchange properties having the prefix &lt;EM&gt;SAP-MT2OP-&lt;/EM&gt; with the value of the exchange property &lt;EM&gt;messageTypeFromXMLRoot&lt;/EM&gt; to determine the operation. This operation will then at the end be stored in the header &lt;EM&gt;SAP_SenderOperation&lt;/EM&gt;.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you like to try out the pipeline concept in general and the new features in particular, check out this&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://github.com/peasantsboot/ProcessIntegrationPipelineSampleScenarios" target="_blank" rel="noopener nofollow noreferrer"&gt;github repository&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;where we describe how to setup sample scenarios using the pipeline concept. Here, we have added a new scenario &lt;A href="https://github.com/peasantsboot/ProcessIntegrationPipelineSampleScenarios/tree/main/scenarios/Scenario10" target="_blank" rel="noopener nofollow noreferrer"&gt;Scenario 10&lt;/A&gt; leveraging the new service interface operation feature.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;If you have feedback, feel free to reach out to me or add your comment here.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/new-pipeline-concept-features-supporting-service-interface-operations-and/ba-p/14049909"/>
    <published>2025-03-25T18:35:40.028000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/migration-tooling-now-supporting-migration-via-the-pipeline-approach/ba-p/14073721</id>
    <title>Migration Tooling now supporting migration via the pipeline approach</title>
    <updated>2025-04-11T16:53:11.596000+02:00</updated>
    <author>
      <name>alex_bundschuh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45178</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;With the latest Cloud Integration update, the SAP Process Orchestration to SAP Integration Suite&amp;nbsp;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/migration-tooling" target="_blank" rel="noopener noreferrer"&gt;migration tool&lt;/A&gt; now supports the automatic creation of integration artifacts supporting the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/pipeline-concept" target="_blank" rel="noopener noreferrer"&gt;Pipeline for Cloud Integration&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For an introduction to the migration tool, check out this &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/migration-tool-in-cloud-integration-capability-of-sap-integration-suite/ba-p/13555109" target="_blank"&gt;blog post&lt;/A&gt;. For more details about the pipeline for Cloud Integration incl. example implementations, see this &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/introducing-the-new-pipeline-concept-in-cloud-integration/ba-p/13639651" target="_blank"&gt;blog post&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the migration tool, you can now decide between two migration approaches: &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/migrate-integration-objects-from-sap-process-orchestration-and-sap-process-integration" target="_blank" rel="noopener noreferrer"&gt;standard&lt;/A&gt; vs &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/pipeline-approach" target="_blank" rel="noopener noreferrer"&gt;pipeline&lt;/A&gt;. If you select standard, then one integration flow is created based on one integration scenario (an Integrated Configuration Object or a decoupled PI dual stack configuration) in the SAP Process Integration / SAP Process Orchestration system. If you like to run your scenarios using the pipeline for Cloud Integration, multiple integration flows and the corresponding Partner Directory objects are automatically created.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Let me showcase you the pipeline support in the migration tool along two examples, one for a content-based-router scenario and one for a point-to-point scenario.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1708286957"&gt;&lt;SPAN&gt;Migrating a Content-based-router scenario using the pipeline approach&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;So, we have created a new package where we like to migrate the scenario to. Once we switch to the edit mode, we see a Migrate button to start the migration wizard.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="01 Migrate button.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249850i3EA58439399604B7/image-size/large?v=v2&amp;amp;px=999" role="button" title="01 Migrate button.png" alt="01 Migrate button.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the wizard, we first need to connect to the SAP Process Orchestration system.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="02 Connect to PO system.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249852i73B32769625B4603/image-size/large?v=v2&amp;amp;px=999" role="button" title="02 Connect to PO system.png" alt="02 Connect to PO system.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Once done, we select the scenario that we like to migrate, in our case we select an Integrated Configuration of pattern Content-based-router.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="03 Select ICO.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249853iF50D4972791E5E9C/image-size/large?v=v2&amp;amp;px=999" role="button" title="03 Select ICO.png" alt="03 Select ICO.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On the next screen, the best fit pattern is identified, here we can choose between Content-Based Router and Recipient List. Furthermore, we select the migration approach. In our case Pipeline. Btw, for Pipeline, it doesn't really matter whether you select&amp;nbsp;Content-Based Router or&amp;nbsp;Recipient List for scenario with more than one receiver because here we use the provided generic pipeline steps and hence the generated objects are the same. For the Standard approach it differs.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="04 Select PIP Approach.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249854i7549230405F3539A/image-size/large?v=v2&amp;amp;px=999" role="button" title="04 Select PIP Approach.png" alt="04 Select PIP Approach.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On the next screen, you can either create mappings that are uploaded to your integration flows or you can create reusable artifacts. In our case, we go for reusable artifacts. Btw, this step and the next are identical with the Standard approach.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="05 Message Mappings.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249855iC3CC0DBEE848757B/image-size/large?v=v2&amp;amp;px=999" role="button" title="05 Message Mappings.png" alt="05 Message Mappings.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The next screen just informs about which mapping objects are created or reused.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="06 Message Mapping Resources.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249856iD71CE2AB18737D37/image-size/large?v=v2&amp;amp;px=999" role="button" title="06 Message Mapping Resources.png" alt="06 Message Mapping Resources.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On the Scenario screen, you need to maintain a unique scenario name. This scenario name is used for the naming of the created integration flows and Partner Directory entries. Furthermore, you need to maintain the name of the very first JMS queue of the pipeline. By default, it's PIPX01 following our recommendations. So, we assume that you like to use the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/integrated-messaging-runtime-asynchronous" target="_blank" rel="noopener noreferrer"&gt;integrated messaging runtime&lt;/A&gt;. If you like to use the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/pipeline-steps" target="_blank" rel="noopener noreferrer"&gt;fully decoupled pipeline&lt;/A&gt;, you need to change to PIPQ01. If you have configured an own queue prefix, then you need to maintain the queue name accordingly.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="07a Scenario.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249857i23AE1036F3BA7228/image-size/large?v=v2&amp;amp;px=999" role="button" title="07a Scenario.png" alt="07a Scenario.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you scroll down, you can see that one inbound conversion flow and three receiver flows will be created. Here, you have the option to maintain the xpath conditions just in case that the xpaths haven't been properly resolved from the conditions in the SAP Process Orchestration system. If you like, you can also change the end points of the scenario-specific conversion flow and the outbound flows to your needs.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="07b Scenario.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249858i37E1C14FE7C41995/image-size/large?v=v2&amp;amp;px=999" role="button" title="07b Scenario.png" alt="07b Scenario.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On the Review screen, select Migrate.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="08 Migrate.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249859iEB2F7689A2AB1A94/image-size/large?v=v2&amp;amp;px=999" role="button" title="08 Migrate.png" alt="08 Migrate.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Once, the migration has been successfully carried out, you get a list of all objects created. On the first tab, you can see that 5 integration flows have been created. The first one is the scenario-specific inbound flow. The second flow runs the inbound conversion, in our case it converts the incoming message in JSON format to XML. The last 3 flows are the scenario-specific outbound flows, one for each receiver. From here, you can navigate to the flow models. The naming convention for the integration flow names are defined as follows:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt;Your sceneario name&amp;gt;_&amp;lt;pipeline step&amp;gt;_&amp;lt;pipeline type&amp;gt;[_&amp;lt;receiver name&amp;gt;_&amp;lt;interface index&amp;gt;]&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="09a Success.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249860i7E8011BE1E528550/image-size/large?v=v2&amp;amp;px=999" role="button" title="09a Success.png" alt="09a Success.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On the Partner Directory tab, you see an overview of the partner ID which has been created and its parameters.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="09c Success.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249861i0608BE7030D9CF78/image-size/large?v=v2&amp;amp;px=999" role="button" title="09c Success.png" alt="09c Success.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The Next Steps provides you information what activities may have to be carried out post migration, like for the pipeline approach the prerequisite is that you have copied the latest pipeline package to your workspace and have deployed the script collection and all the generic flows.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="09d Success.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249862i9A9D3779336023D3/image-size/large?v=v2&amp;amp;px=999" role="button" title="09d Success.png" alt="09d Success.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Let's take a look at the created Partner Directory entry. You can see that a partner ID has been created with the scenario name maintained in the wizard. Because we need to run an inbound conversion from JSON to XML, the string parameter InboundConversionEndpoint has been created pointing to the ProcessDirect endpoint of the corresponding scenario-specific flow. If you like, you can add further string parameters to customize the runtime behaviour, like the max number of retries, see &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/using-partner-directory-in-pipeline-concept" target="_blank" rel="noopener noreferrer"&gt;Using the Partner Directory in the Pipeline Concept&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="10a PD.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249863iFAFA15674C22452F/image-size/large?v=v2&amp;amp;px=999" role="button" title="10a PD.png" alt="10a PD.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On the Alternative Partners tab, you can see that the sender system name and the sender interface is mapped to the scenario. The sender information is actually used to determine the partner ID.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="10b PD.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249864iAEF7FADC29D94E1B/image-size/large?v=v2&amp;amp;px=999" role="button" title="10b PD.png" alt="10b PD.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On the Binary Parameters tab, you can see that a binary parameter with ID receiverDetermination has been created. This is the XSLT which is carried out to determine the receivers. Let's download the same.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="10c PD.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249865i20CF1910991F6E08/image-size/large?v=v2&amp;amp;px=999" role="button" title="10c PD.png" alt="10c PD.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here you can see the xpaths which are carried out to determine the receivers and interfaces. Btw, using the migration tool, we only support XSLTs combining receiver and interface determination in one single XSLT to keep it simple, see &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/special-cases" target="_blank" rel="noopener noreferrer"&gt;Special Cases&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="10d PD.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249866iC4D723DB1B07C8CD/image-size/large?v=v2&amp;amp;px=999" role="button" title="10d PD.png" alt="10d PD.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1511773452"&gt;&lt;SPAN&gt;Migrating a P2P scenario using the pipeline approach&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Now, let's run through a P2P scenarios. The steps are the same like for the case above, so we skip most of the steps here to focus on the difference. Once we have started the wizard, connected to the system, we select a P2P scenario.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="11 P2P ICO.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249867iE3D06C1FD95BDED8/image-size/large?v=v2&amp;amp;px=999" role="button" title="11 P2P ICO.png" alt="11 P2P ICO.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This time Point-to-Point Asynchronous has been identified as the fitting pattern. We again select Pipeline as approach. In addition, we can either select or deselect the Idempotent Process at Receiver Side flag. If selected, we add an idempotent process when calling the receiver to identify duplicate messages in case that the receiver is not idempotent.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="12 P2P Select PIP.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249868i8CD1142B88CEE9BB/image-size/large?v=v2&amp;amp;px=999" role="button" title="12 P2P Select PIP.png" alt="12 P2P Select PIP.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here again, we need to maintain a scenario name.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="15a P2P Scenario.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249869i1429A80074F45362/image-size/large?v=v2&amp;amp;px=999" role="button" title="15a P2P Scenario.png" alt="15a P2P Scenario.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And further below, you can see that we only have one single receiver.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="15b P2P Scenario.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249870i054930A4BA1AC449/image-size/large?v=v2&amp;amp;px=999" role="button" title="15b P2P Scenario.png" alt="15b P2P Scenario.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Once migrated, you see that two integration flows have been created, one for the inbound and one for the outbound.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="17a Success.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249871i41AB5E286CC13668/image-size/large?v=v2&amp;amp;px=999" role="button" title="17a Success.png" alt="17a Success.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, let's take a look at the generated Partner Directory object. For P2P, we only need string parameters. The name of the receiver is stored in the receiverDetermination parameter, the endpoint in the interfaceDetermination_&amp;lt;system name&amp;gt; parameter.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="18a PD.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/249872i3D3A68813EA87275/image-size/large?v=v2&amp;amp;px=999" role="button" title="18a PD.png" alt="18a PD.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In case that you can't see the pipeline approach option in your tenant, you may need to wait for the upcoming weekend where the rest of the data centers should be updated, so stay tuned, hopefully on coming Monday you can hold of this new feature.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/migration-tooling-now-supporting-migration-via-the-pipeline-approach/ba-p/14073721"/>
    <published>2025-04-11T16:53:11.596000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/fixed-length-file-display-tool/ba-p/14076941</id>
    <title>Fixed Length File Display Tool</title>
    <updated>2025-04-15T20:08:33.864000+02:00</updated>
    <author>
      <name>RaghuVamseedhar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/191580</uri>
    </author>
    <content>&lt;P&gt;When dealing with text-based data, two common formats emerge—delimited files and fixed-length files. A delimited file, such as CSV, uses characters like commas or pipes to separate fields, making it easy to open and interpret in tools like Notepad++ or MS Excel. In contrast, a fixed-length file assigns a predefined width to each field, offering consistency for legacy systems but making column identification more complex. Unlike CSV files, fixed-length files often lack a header row, requiring developers to reference external documentation to understand the structure.&lt;/P&gt;&lt;P&gt;Working with fixed-length files presents unique challenges. Programming languages like Groovy (SAP Cloud Integration) and Java (SAP Process Orchestration) index characters starting from 0, whereas text editors (Notepad++) start from 1. This discrepancy can lead to errors such as reading extra characters or encountering ArrayIndexOutOfBoundsException. String substring(int begin, int end) begin index starts with 0. Debugging and testing require precision, especially when aligning data fields correctly. Functional teams reviewing fixed-length files often resort to guessing column names based on data patterns.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/251103i3A725AA3C0B02E61/image-size/large?v=v2&amp;amp;px=999" role="button" title="1.png" alt="1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This HTML-based Fixed-Length File Display Tool offers a practical solution. This tool allows to define column names and sizes while deciding whether indexing should start at 0 or 1. By submitting text for display, the tool color-codes fields, enabling visual distinction between columns. Even if column names are unavailable, alternating colors help segment the data in blocks of 10 characters. The tool is useful across development, testing, and support phases, making it easier to identify column boundaries.&lt;/P&gt;&lt;P&gt;As this is a simple HTML file, users can save formatted files, creating structured references for each integrations which are using fixed-length files. Right click and select 'Save As'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/251104i40257B8A13100FBA/image-size/large?v=v2&amp;amp;px=999" role="button" title="2.png" alt="2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note:- Save this code as Tool.html and open with a browser (Chrome, Edge...).&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset="UTF-8" /&amp;gt;
        &amp;lt;title&amp;gt;Fixed Length File Display Tool&amp;lt;/title&amp;gt;
        &amp;lt;style&amp;gt;
            body {
                font-family: monospace;
            }
            textarea {
                width: 100%;
                overflow: auto;
                white-space: nowrap;
            }
            /* Tooltip &amp;amp; Popup Styling */
            .tooltip, .popup {
                position: absolute;
                display: none;
                pointer-events: none;
                z-index: 1000;
            }
            .tooltip {
                background: #333;
                color: #fff;
                padding: 6px 10px;
                border-radius: 4px;
                font-size: 13px;
                white-space: nowrap;
            }
            .popup {
                /* Background color will be set dynamically */
                color: #fff;
                font-size: 30px;
                font-weight: bold;
                padding: 5px 10px;
                border: 1px solid #aaa;
                border-radius: 5px;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
            }
            /* Output Area &amp;amp; Span Styling */
            #output {
                font-size: 18px;
                white-space: pre;
                overflow: auto;
                border: 1px solid #ccc;
                padding: 10px;
                margin-top: 10px;
                max-height: 300px;
            }
            #output div {
                display: block;
            }
            #output span {
                display: inline-block;
                cursor: pointer;
                user-select: none;
                padding: 2px;
            }
            #output .selected {
                background-color: #ffeb3b;
            }
        &amp;lt;/style&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;label&amp;gt;
            &amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;Line Index Start:
            &amp;lt;input type="radio" name="lineIndexStart" value="0" checked&amp;gt; 0
            &amp;lt;input type="radio" name="lineIndexStart" value="1"&amp;gt; 1
        &amp;lt;/label&amp;gt;

        &amp;lt;label&amp;gt;
            &amp;lt;br/&amp;gt;Character Index Start:
            &amp;lt;input type="radio" name="charIndexStart" value="0" checked&amp;gt; 0
            &amp;lt;input type="radio" name="charIndexStart" value="1"&amp;gt; 1
        &amp;lt;/label&amp;gt;

        &amp;lt;label&amp;gt;
            &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Column Names:&amp;lt;/label&amp;gt;
        &amp;lt;textarea id="columnNames" style="height:20px" placeholder="Enter column names (e.g. SNo,ID,Name,Subject)"&amp;gt;SNo,ID,Name,Subject&amp;lt;/textarea&amp;gt;

        &amp;lt;label&amp;gt;
            &amp;lt;br/&amp;gt;Column Sizes:
            &amp;lt;textarea id="groupSizes" style="height:20px" placeholder="Enter column sizes (e.g. 2,5,15,10)"&amp;gt;2,5,15,10&amp;lt;/textarea&amp;gt;
        &amp;lt;/label&amp;gt;
        &amp;lt;label&amp;gt;
            &amp;lt;br/&amp;gt;Input Text:
            &amp;lt;textarea id="inputText" style="height:100px" placeholder="Enter text here"&amp;gt;01  101James          English   ..............&amp;amp;#10;02  102Vamsee         Science   Something Else&amp;amp;#10;10  202Ahmed          English   ..............&amp;lt;/textarea&amp;gt;
        &amp;lt;/label&amp;gt;
        &amp;lt;br/&amp;gt;
        &amp;lt;button id="submitBtn" style="width: 100%;" onclick="updateText()"&amp;gt;Submit&amp;lt;/button&amp;gt;


        &amp;lt;!-- Output Area and Helper Elements --&amp;gt;
        &amp;lt;div id="output"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div id="tooltip" class="tooltip"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div id="popup" class="popup"&amp;gt;&amp;lt;/div&amp;gt;

        &amp;lt;script&amp;gt;
            const output = document.getElementById("output");
            const tooltip = document.getElementById("tooltip");
            const popup = document.getElementById("popup");
            const submitBtn = document.getElementById("submitBtn");

            // Global selection variables.
            let selecting = false;
            let startIndex = null;
            let endIndex = null;

            function getCharIndexStart() {
                return parseInt(document.querySelector('input[name="charIndexStart"]:checked').value, 10);
            }

            function getLineIndexStart() {
                return parseInt(document.querySelector('input[name="lineIndexStart"]:checked').value, 10);
            }

            function clearSelection() {
                output.querySelectorAll("span").forEach(span =&amp;gt; span.classList.remove("selected"));
            }

            function highlightRange(start, end) {
                const minIndex = Math.min(start.index, end.index);
                const maxIndex = Math.max(start.index, end.index);
                output.querySelectorAll(`div[data-line="${start.line}"] span`).forEach(span =&amp;gt; {
                    const idx = parseInt(span.dataset.index, 10);
                    if (idx &amp;gt;= minIndex &amp;amp;&amp;amp; idx &amp;lt;= maxIndex) {
                        span.classList.add("selected");
                    }
                });
            }

            /*Core Logic:- When Submit is pressed. For each char in input text create a div and add it to output. When mouse hovers over it, element attributes are displayed
             * Sample div:- &amp;lt;span data-index="4" data-line="0" style="color: black;" data-column="ID" class="selected"&amp;gt;1&amp;lt;/span&amp;gt;
             * */
            function updateText() {
                const charOffset = getCharIndexStart();
                const lineOffset = getLineIndexStart();

                // Parse column names.
                const columnNamesInput = document.getElementById("columnNames").value.trim();
                const columnNames = columnNamesInput ? columnNamesInput.split(",").map(s =&amp;gt; s.trim()).filter(s =&amp;gt; s !== "") : [];

                // Parse group sizes.
                const groupSizesRaw = document.getElementById("groupSizes").value;
                let groupSizes = groupSizesRaw.split(",").map(Number).filter(n =&amp;gt; n &amp;gt; 0);

                const validGroupSizes = groupSizes.length &amp;gt; 0;
                const validColumnNames = columnNames.length &amp;gt; 0;
                // Use popup column if both valid group sizes and column names are provided.
                const usePopupColumn = validGroupSizes &amp;amp;&amp;amp; validColumnNames;

                output.innerHTML = ""; //Reset output area. i.e. drop all child &amp;lt;div&amp;gt;.
                const text = document.getElementById("inputText").value.replaceAll(" ", "\u00A0"); //Replace space with \u00A0. Reason: In HTML multiple spaces are automatically collapsed into a single space.

                startIndex = endIndex = null;

                text.split("\n").forEach((line, lineIndexRaw) =&amp;gt; {
                    const lineIndex = lineIndexRaw + lineOffset;
                    let lineDiv = document.createElement("div");
                    lineDiv.dataset.line = lineIndex;

                    if (!validGroupSizes) {
                        // Default grouping: every 10 characters, alternating blue and black.
                        line.split("").forEach((char, idx) =&amp;gt; {
                            const charIndex = idx + charOffset;
                            const span = document.createElement("span");
                            span.innerHTML = char;
                            span.dataset.index = charIndex;
                            span.dataset.line = lineIndex;

                            let groupNumber = Math.floor(idx / 10);
                            // Here: even groups are blue and odd groups are black.
                            span.style.color = (groupNumber % 2 === 0) ? "blue" : "black";
                            // Without valid grouping, popup shows the character.
                            span.dataset.column = char;
                            addCommonEventHandlers(span, lineIndex, charIndex, char, false);
                            lineDiv.appendChild(span);
                        });
                    } else {
                        // Valid group sizes provided.
                        let groupIndex = 0;
                        let countInGroup = 0;
                        line.split("").forEach((char, idx) =&amp;gt; {
                            const charIndex = idx + charOffset;
                            const span = document.createElement("span");
                            span.innerHTML = char;
                            span.dataset.index = charIndex;
                            span.dataset.line = lineIndex;

                            if (groupIndex &amp;lt; groupSizes.length) {
                                // Color: even groups → blue, odd groups → black.
                                span.style.color = (groupIndex % 2 === 0) ? "blue" : "black";
                                // Use the corresponding column name if available; otherwise, fallback to the character.
                                const label = (groupIndex &amp;lt; columnNames.length) ? columnNames[groupIndex] : char;
                                span.dataset.column = label;
                                countInGroup++;
                                if (countInGroup &amp;gt;= groupSizes[groupIndex]) {
                                    groupIndex++;
                                    countInGroup = 0;
                                }
                            } else {
                                // For characters beyond the provided groups.
                                span.style.color = "purple";
                                span.dataset.column = char;
                            }
                            addCommonEventHandlers(span, lineIndex, charIndex, char, usePopupColumn);
                            lineDiv.appendChild(span);
                        });
                    }
                    output.appendChild(lineDiv);
                });
            }

            // Attach common event handlers for each span.
            function addCommonEventHandlers(span, lineIndex, charIndex, char, usePopupColumn) {
                span.addEventListener("mousedown", () =&amp;gt; {
                    selecting = true;
                    startIndex = {line: lineIndex, index: charIndex};
                    clearSelection();
                    span.classList.add("selected");
                });

                span.addEventListener("mouseover", (e) =&amp;gt; {
                    const rect = span.getBoundingClientRect();
                    const popupLabel = usePopupColumn ? span.dataset.column : char;
                    // Pass the span's color for popup background matching.
                    showPopup(rect, popupLabel, span.style.color);
                    if (selecting &amp;amp;&amp;amp; startIndex !== null) {
                        const currentPosition = {line: lineIndex, index: charIndex};
                        if (startIndex.line === currentPosition.line) {
                            endIndex = currentPosition;
                            highlightRange(startIndex, endIndex);
                            showTooltip(e.pageX, e.pageY, `Line: ${lineIndex}, Start: ${startIndex.index} | End: ${endIndex.index} | Count: ${Math.abs(endIndex.index - startIndex.index) + 1}`);
                        }
                    } else {
                        showTooltip(e.pageX, e.pageY, `Line: ${lineIndex}, Char: '${char}' | Index: ${charIndex}`);
                    }
                });

                span.addEventListener("mouseout", () =&amp;gt; {
                    hidePopup();
                    hideTooltip();
                });
            }

            // Tooltip helper functions with viewport bounds adjustments.
            function showTooltip(x, y, content) {
                tooltip.textContent = content;
                tooltip.style.display = "block";

                const viewportWidth = window.innerWidth;
                const viewportHeight = window.innerHeight;
                const tooltipPadding = 10;

                let left = x + 10;
                let top = y + 10;

                // Adjust horizontal position
                if (left + tooltip.offsetWidth &amp;gt; viewportWidth) {
                    left = viewportWidth - tooltip.offsetWidth - tooltipPadding;
                }
                if (left &amp;lt; tooltipPadding) {
                    left = tooltipPadding;
                }

                // Adjust vertical position
                if (top + tooltip.offsetHeight &amp;gt; viewportHeight) {
                    top = viewportHeight - tooltip.offsetHeight - tooltipPadding;
                }
                if (top &amp;lt; tooltipPadding) {
                    top = tooltipPadding;
                }

                tooltip.style.left = left + "px";
                tooltip.style.top = top + "px";
            }

            function hideTooltip() {
                tooltip.style.display = "none";
            }

            // Popup helper functions with viewport bounds adjustments.
            function showPopup(rect, content, colColor) {
                const viewportWidth = window.innerWidth;
                const viewportHeight = window.innerHeight;
                const popupPadding = 10; // Extra padding to avoid screen edges

                let left = rect.left + window.scrollX;
                let top = rect.top - 40 + window.scrollY;

                // Adjust if the popup goes beyond the right edge
                if (left + popup.offsetWidth &amp;gt; viewportWidth) {
                    left = viewportWidth - popup.offsetWidth - popupPadding;
                }
                // Adjust if the popup goes beyond the left edge
                if (left &amp;lt; popupPadding) {
                    left = popupPadding;
                }
                // Adjust if the popup goes beyond the bottom edge
                if (top + popup.offsetHeight &amp;gt; viewportHeight) {
                    top = viewportHeight - popup.offsetHeight - popupPadding;
                }
                // Adjust if the popup goes above the top edge
                if (top &amp;lt; popupPadding) {
                    top = popupPadding;
                }

                popup.style.left = `${left}px`;
                popup.style.top = `${top}px`;
                popup.textContent = content;
                // Set the popup's background color to match the column color.
                popup.style.backgroundColor = colColor;
                popup.style.display = "block";
            }

            function hidePopup() {
                popup.style.display = "none";
            }

            document.addEventListener("mouseup", () =&amp;gt; {
                selecting = false;
            });

            document.addEventListener("keydown", (e) =&amp;gt; {
                if (e.key === "Escape") {
                    clearSelection();
                    selecting = false;
                    startIndex = endIndex = null;
                }
            });
        &amp;lt;/script&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/fixed-length-file-display-tool/ba-p/14076941"/>
    <published>2025-04-15T20:08:33.864000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/new-pipeline-for-cloud-integration-features-with-version-1-0-11/ba-p/14093335</id>
    <title>New Pipeline for Cloud Integration features with version 1.0.11</title>
    <updated>2025-05-07T07:52:30.826000+02:00</updated>
    <author>
      <name>alex_bundschuh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45178</uri>
    </author>
    <content>&lt;P&gt;A new version 1.0.11 of the &lt;A href="https://hub.sap.com/package/PIPipelineGenericIntegrationFlows/overview" target="_blank" rel="noopener noreferrer"&gt;Process Integration Pipeline package&lt;/A&gt; has been recently shipped, this time with rather minor changes but two changes &lt;STRONG&gt;require your attention&lt;/STRONG&gt; because here we decided to change default configurations to follow our recommendations. If you nevertheless like to use the old default settings, you need to configure your integration flows before deployment.&lt;/P&gt;&lt;P&gt;So, here the list of new features/changes at a glance:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The search based on IDoc number in the message monitor has been improved by removing the leading zeros from IDoc number in ApplicationID and custom header properties.&lt;/LI&gt;&lt;LI&gt;For the XI inbound flow, the partner ID is determined also based on service interface namespace in addition to system name and service interface name.&lt;/LI&gt;&lt;LI&gt;We fixed an error with wrong inbound queue in case of custom error handling for the integrated messaging runtime.&lt;/LI&gt;&lt;LI&gt;We introduced a configuration option to switch off the option to determine the partner ID using the so called "tilde option". The default is that this option is switched off.&lt;/LI&gt;&lt;LI&gt;We changed the default inbound processing queue of the XI inbound and the IDoc inbound flows from PIPQ01 to PIPX01 so that by default the integrated messaging runtime is used.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Here some more details:&lt;/P&gt;&lt;H3 id="toc-hId-1839212909"&gt;Switch off "tilde option"&lt;/H3&gt;&lt;P&gt;The partner ID unambiguously defines the configuration scenarios and is usually based on the sender system name and the sender interface name. The recommended approach is to define the partner ID as configuration scenario name and then to map&amp;nbsp;sender system name and the sender interface name to the partner ID using an alternative partner.&lt;/P&gt;&lt;P&gt;An alternative option is to define the partner ID by combining the&amp;nbsp;sender system name and the sender interface name separated by a tilde, hence I call it "tilde option". This was the only option when we shipped the first version of the pipeline concept and so we still support it for compatibility reasons.&lt;/P&gt;&lt;P&gt;We do not recommend to use the&amp;nbsp;"tilde option" because with this you may exceed the maximum length of the partner ID in the Partner Directory which is 60 characters. So, we came up with the option defining alternative partners. This also has the advantage that it easily supports sender wildcard scenarios, so different sender systems with same sender interface sharing the same configuration. Here, you simply add another alternative partner to the configuration scenario.&lt;/P&gt;&lt;P&gt;In a first attempt, the partner ID is determined based on an alternative partner matching the headers SAP_Sender and SAP_SenderInterface which are passed from the scenario-specific inbound flows. So far, if no partner ID could be determined, in a second attempt a partner ID was constructed by combining the two headers separated by tilde assuming that this option should be used.&lt;/P&gt;&lt;P&gt;If you however did not intend to use the "tilde option" and for whatever reason the partner ID could not be determined, e.g., because you missed to maintain the alternative partner, the partner ID was unintentionally constructed in a wrong way. The message most likely went into an error because the constructed partner ID did not exist in the Partner Directory. The message was not lost because it stayed on the first JMS queue in the pipeline, but the issue was that there was no way that you could change the partner ID header of the message to get the message restarted with a correct partner ID.&lt;/P&gt;&lt;P&gt;To avoid such a situation, we introduced an externalized parameter&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;CustomXPid_SwitchOffTilde. The default value is true, so the "tilde option" is switched off. The new behaviour is that if we could not determine the partner ID based on an alternative partner, we do not automatically construct the partner ID and the message rather goes into an error. The difference is that you are now able to resolve the error resolution by fixing the Partner Directory entry and restarting the message.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;We intentionally decided to set the default to true which unfortunately is an incompatible change if you like to use the "tilde option". For those of you who prefer to use the "tilde option", you need to &lt;STRONG&gt;take the following action&lt;/STRONG&gt; before deploying the generic flows of the updated package:&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Select the following generic flows where the script to determine the partner ID is called and for each flow&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;change the value of the externalized parameter&amp;nbsp;CustomXPid_SwitchOffTilde from true to false&lt;/SPAN&gt;&lt;/SPAN&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Pipeline Generic Step01 - Inbound Processing for &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Idoc&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Pipeline Generic Step01 - Inbound Processing for XI&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Pipeline Generic Step02 - Inbound Processing&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Pipeline Generic Step02 - Integrated Messaging Runtime Async&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Pipeline Generic Step02 - Integrated Messaging Runtime &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;S&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ync&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;No action required&lt;/STRONG&gt; when you like to stick to our recommendation &lt;STRONG&gt;using alternative partner&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Tilde vs Alternative Partner.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258268i068826F6DA385514/image-size/large?v=v2&amp;amp;px=999" role="button" title="Tilde vs Alternative Partner.png" alt="Tilde vs Alternative Partner.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;U&gt;Figure 1:&lt;/U&gt; Tilde option vs alternative partner&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1642699404"&gt;Default inbound processing queue&lt;/H3&gt;&lt;P&gt;For each scenario-specific flow, you explixitly define the inbound processing queue where you store the incoming message. Depending on the queue chosen, the message is either processed within the fully decoupled pipeline or the integrated messaging runtime. If you keep the JMS queue prefix to the default value which is PIP, PIPQ01 stands for the fully decoupled pipeline whereas messages that are stored in PIPX01 are picked up by the integrated messaging runtime.&lt;/P&gt;&lt;P&gt;The&amp;nbsp;fully decoupled pipeline consists of separate integration flows for each pipeline step so that you end up at 4 JMS queues required to decouple the pipeline steps. Furthermore, for a recipient list pattern with additional interface determination it requires an XSLT for the receiver determination and for each receiver an XSLT for the interface determination.&lt;/P&gt;&lt;P&gt;The&amp;nbsp;integrated messaging runtime has been evolved from the&amp;nbsp;fully decoupled pipeline by combining several pipeline steps into one integration flow. Here, you only need 2 JMS queues and only one single XSLT mapping per scenario to determine receivers and interfaces.&lt;/P&gt;&lt;P&gt;Recommendation is to use the integrated messaging runtime for reasons of better tenant resource consumption and better runtime behaviour due to less number of logs, less number of JMS queues and less number of XSLT mappings. The only scenarios that are not supported on the integrated messaging runtime are those where you would like to reuse extended receiver determination because here you separate the receiver determination from the interface determination, however the integrated messaging runtime only supports a combined XSLT.&amp;nbsp;&lt;/P&gt;&lt;P&gt;The generic XI inbound flow and the generic IDoc inbound flow are used across multiple scenarios and hence the inbound processing queue is generally defined across multiple scenarios. If you like to define an inbound queue for a particular scenario, you need to configure the string parameter inboundQueue in the Partner Directory to overwrite the default value for this particular scenario. For compatibility reasons, so far the default inbound processing queue was configured as PIPQ01. In order to&amp;nbsp;follow our recommendation to use the integrated messaging runtime instead of the fully decoupled pipeline, we decided to change the default&amp;nbsp;from PIPQ01 to PIPX01.&lt;/P&gt;&lt;P&gt;So, with this change the XI and IDoc messages are now routed to the&amp;nbsp;integrated messaging runtime by default, and if you like to route the message for a particular scenario to the fully decoupled pipeline you need to create a string parameter inboundQueue with value PIPQ01.&lt;/P&gt;&lt;P&gt;If you however like to stick to the old behaviour, you need to &lt;STRONG&gt;take action&lt;/STRONG&gt; before deploying the two generic flows:&amp;nbsp;&lt;SPAN class=""&gt;Select the following generic flows and for each flow&amp;nbsp;change the value of the externalized parameter DefaultJMSQueueNumber from X01 to Q01:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN class=""&gt;Pipeline Generic Step01 - Inbound Processing for XI&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Pipeline Generic Step01 - Inbound Processing for Idoc&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;No action required&lt;/STRONG&gt; when you like to stick to our recommendation &lt;STRONG&gt;using X01&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1446185899"&gt;Partner ID for XI inbound&lt;/H3&gt;&lt;P&gt;For ABAP proxy scenarios, there might be situations where the combination of sender system name and sender interface name alone is not unambiguous, namely if you have a scenario with the same sender system name and the same sender interface name but different sender system namespaces which is actually supported in SAP Process Orchestration. For this reason, the approach determining the partner ID has been extended for the XI inbound flow. If you like to leverage the new feature, you need to define the alternative partner in your configuration scenario differently:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The agent remains the same, here you maintain the sender system name.&lt;/LI&gt;&lt;LI&gt;The scheme was constant before, now you need to maintain the sender interface name.&lt;/LI&gt;&lt;LI&gt;And for the ID, you maintain the sender interface namespace.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;When matching the alternative partner to a partner ID, in a first attempt such a combination incl. namespace is checked. If we do not have a match, then in a second attempt the usual approach without namespace is applied.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Namespace support.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258269i5BFEBAD751B060F1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Namespace support.png" alt="Namespace support.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;Figure 2:&lt;/U&gt; Determine partner ID based on sender system name, sender interface name and sender interface namespace&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/new-pipeline-for-cloud-integration-features-with-version-1-0-11/ba-p/14093335"/>
    <published>2025-05-07T07:52:30.826000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/new-pipeline-concept-features-with-version-1-0-12-improved-handling-of/ba-p/14112869</id>
    <title>New Pipeline Concept features with version 1.0.12: improved handling of Custom Header Properties</title>
    <updated>2025-05-28T08:56:53.692000+02:00</updated>
    <author>
      <name>slava_kuzyakin</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/171238</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;A new version (1.0.12) of the Process Integration Pipeline package has recently been released, featuring several minor technical updates, bug fixes, and a reworked approach to handling custom header properties. This blog outlines the enhancements made in the area of custom header property processing.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1731346284"&gt;Intro&lt;/H2&gt;&lt;P&gt;Starting with &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/integration-blog-posts/new-pipeline-concept-features-supporting-custom-header-properties-and/ba-p/13894048" target="_blank"&gt;version 1.0.7 of the Process Integration Pipeline package&lt;/A&gt;&lt;/SPAN&gt;, support for &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/monitoring-and-error-handling-pipeline-concept#custom-header-properties" target="_blank" rel="noopener noreferrer"&gt;custom header properties&lt;/A&gt;&lt;/SPAN&gt; was introduced. Custom header properties enable enhanced searchability of the message processing log by allowing key-value pairs – extracted from the message payload or other relevant attributes – to be indexed and queried.&lt;/P&gt;&lt;P&gt;To use this feature, you must configure the &lt;FONT face="courier new,courier"&gt;customHeaderProperties&lt;/FONT&gt; header in a scenario-specific integration flow step. This header is then propagated to the generic integration flows. The header value is defined as a pipe-delimited (&lt;FONT face="courier new,courier"&gt;'|'&lt;/FONT&gt;) string, where each key-value pair is separated by a colon (&lt;FONT face="courier new,courier"&gt;':'&lt;/FONT&gt;). For example:&lt;/P&gt;&lt;P&gt;&lt;FONT face="courier new,courier"&gt;purchaseOrder:${property.purchaseOrder}|companyCode:${property.companyCode}|vendorNumber:${property.vendorNumber}&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;This implementation meets basic requirements for transmitting custom header properties across multiple integration flows via a single header. However, it is somewhat error-prone due to the use of fixed delimiter characters. If any value contains reserved characters such as colons (e.g., in timestamps), parsing may fail.&lt;/P&gt;&lt;P&gt;Another limitation is the two-step setup required when extracting multiple key fields from an XML payload using XPath: first, each value must be stored in a message header or exchange property, and only then can they be combined into a single &lt;FONT face="courier new,courier"&gt;customHeaderProperties&lt;/FONT&gt; string.&lt;/P&gt;&lt;P&gt;To address these limitations, an enhanced processing option has been introduced. Instead of using a delimited string, you can define exchange properties with the prefix &lt;FONT face="courier new,courier"&gt;'customHeader_'&lt;/FONT&gt; and invoke the Groovy script &lt;FONT face="courier new,courier"&gt;addCustomHeaderProperties&lt;/FONT&gt;. This script generates the &lt;FONT face="courier new,courier"&gt;customHeaderProperties&lt;/FONT&gt; header as a Base64-encoded JSON object, preserving all key-value pairs.&lt;/P&gt;&lt;P&gt;With this approach, special characters within header values – such as colons, pipes, or quotes – are fully supported and correctly handled, making the process more robust and reliable.&lt;/P&gt;&lt;H2 id="toc-hId-1534832779"&gt;New processing option: Using exchange properties&lt;/H2&gt;&lt;P&gt;For each custom header property, you can create an exchange property with prefix &lt;FONT face="courier new,courier"&gt;'customHeader_'&lt;/FONT&gt; in a content modifier step. The name of the exchange property without the prefix becomes the name of the custom header property.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="slava_kuzyakin_0-1748413946601.png" style="width: 598px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266765iE896E08A7C2EB36C/image-dimensions/598x144?v=v2" width="598" height="144" role="button" title="slava_kuzyakin_0-1748413946601.png" alt="slava_kuzyakin_0-1748413946601.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After the Content Modifier step, you need to invoke the Groovy script &lt;FONT face="courier new,courier"&gt;addCustomHeaderProperties&lt;/FONT&gt; from the script collection &lt;FONT face="courier new,courier"&gt;Pipeline Generic - Script Collection&lt;/FONT&gt;, which is part of the provided integration package. This script reads all exchange properties prefixed with &lt;FONT face="courier new,courier"&gt;'customHeader_'&lt;/FONT&gt;, constructs a JSON object from their name-value pairs, and Base64-encodes the result.&lt;/P&gt;&lt;P&gt;In addition to generating the &lt;FONT face="courier new,courier"&gt;customHeaderProperties&lt;/FONT&gt; header, the script also attaches these custom header values to the message processing log, ensuring they are available for monitoring and diagnostics. The resulting &lt;FONT face="courier new,courier"&gt;customHeaderProperties&lt;/FONT&gt; header is then seamlessly passed along to the generic integration flows.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="slava_kuzyakin_1-1748413989061.png" style="width: 501px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266767i39AB1A0F5AFD25CC/image-dimensions/501x328?v=v2" width="501" height="328" role="button" title="slava_kuzyakin_1-1748413989061.png" alt="slava_kuzyakin_1-1748413989061.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the generic integration flows, the &lt;FONT face="courier new,courier"&gt;addCustomHeaderProperties&lt;/FONT&gt; Groovy script splits the header value using the pipe character (&lt;FONT face="courier new,courier"&gt;'|'&lt;/FONT&gt;) for backward compatibility. It then evaluates each resulting segment (or the original value if no pipe is present) to determine whether it is Base64-encoded. All key-value pairs extracted from the decoded or raw segments are stored in a map, which is subsequently used as the source for custom header properties.&lt;/P&gt;&lt;P&gt;In the message monitor, the custom headers are displayed in the Properties tab of the message processing logs of the generic integration flows. In the filter section, you can search for specific custom header values.&lt;/P&gt;&lt;H2 id="toc-hId-1338319274"&gt;Previous Approach Still Supported: Manually Setting customHeaderProperties&lt;/H2&gt;&lt;P&gt;In a content modifier step, you can create a new header &lt;FONT face="courier new,courier"&gt;customHeaderProperties&lt;/FONT&gt;. The source value of the header &lt;FONT face="courier new,courier"&gt;customHeaderProperties&lt;/FONT&gt; must follow the following pattern:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Name and value are separated by colon (&lt;FONT face="courier new,courier"&gt;':'&lt;/FONT&gt;)&lt;/LI&gt;&lt;LI&gt;Name and value pairs are separated by pipe (&lt;FONT face="courier new,courier"&gt;'|'&lt;/FONT&gt;)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="slava_kuzyakin_2-1748414016626.png" style="width: 589px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266771iFCA4A72C7812ABA3/image-dimensions/589x106?v=v2" width="589" height="106" role="button" title="slava_kuzyakin_2-1748414016626.png" alt="slava_kuzyakin_2-1748414016626.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Optionally, you can invoke the &lt;FONT face="courier new,courier"&gt;addCustomHeaderProperties&lt;/FONT&gt; script to add custom header properties to your scenario-specific flow.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="slava_kuzyakin_3-1748414052318.png" style="width: 494px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266772iCBDEA4974900AD09/image-dimensions/494x320?v=v2" width="494" height="320" role="button" title="slava_kuzyakin_3-1748414052318.png" alt="slava_kuzyakin_3-1748414052318.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;At the same time, the script transforms the previously defined pipe-delimited string into a JSON object, encodes it in Base64, and updates the &lt;FONT face="courier new,courier"&gt;customHeaderProperties&lt;/FONT&gt; header accordingly: &lt;FONT face="courier new,courier"&gt;{"docType":"Z0","docRefId":"Test Doc 01"}&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="slava_kuzyakin_4-1748414079341.png" style="width: 562px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266773iDD6B7CB692D9A83F/image-dimensions/562x240?v=v2" width="562" height="240" role="button" title="slava_kuzyakin_4-1748414079341.png" alt="slava_kuzyakin_4-1748414079341.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the generic integration flows, the Groovy script &lt;FONT face="courier new,courier"&gt;addCustomHeaderProperties&lt;/FONT&gt; splits up the list of name and value pairs and adds the custom header properties accordingly.&lt;/P&gt;&lt;P&gt;In the message monitor, the custom headers are displayed in the Properties tab of the message processing logs of the generic integration flows. In the filter section, you can search for specific custom header values.&lt;/P&gt;&lt;H2 id="toc-hId-1141805769"&gt;Combined approach&lt;/H2&gt;&lt;P&gt;A combined approach is also supported: you can use the &lt;FONT face="courier new,courier"&gt;customHeaderProperties&lt;/FONT&gt; header with a pipe-delimited string, and simultaneously define exchange properties with the prefix &lt;FONT face="courier new,courier"&gt;'customHeader_'&lt;/FONT&gt; in the same Content Modifier.&lt;/P&gt;&lt;P&gt;In the example below, the custom header key &lt;FONT face="courier new,courier"&gt;companyCode&lt;/FONT&gt; is included both in the delimited string and as an exchange property.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="slava_kuzyakin_5-1748414115983.png" style="width: 664px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266776iE404C0B1AAA94A10/image-dimensions/664x123?v=v2" width="664" height="123" role="button" title="slava_kuzyakin_5-1748414115983.png" alt="slava_kuzyakin_5-1748414115983.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="slava_kuzyakin_6-1748414132720.png" style="width: 573px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266777i3051A4E4AA94DCA8/image-dimensions/573x165?v=v2" width="573" height="165" role="button" title="slava_kuzyakin_6-1748414132720.png" alt="slava_kuzyakin_6-1748414132720.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When the &lt;FONT face="courier new,courier"&gt;addCustomHeaderProperties&lt;/FONT&gt; script is invoked, it merges the entries from the &lt;FONT face="courier new,courier"&gt;customHeaderProperties&lt;/FONT&gt; header and the &lt;FONT face="courier new,courier"&gt;'customHeader_'&lt;/FONT&gt; exchange properties into a single map. It then logs the resulting custom header properties in the message processing log and sets a new merged value – encoded as a Base64 JSON object – back to the &lt;FONT face="courier new,courier"&gt;customHeaderProperties&lt;/FONT&gt; header.&lt;/P&gt;&lt;P&gt;In this case, the value from the exchange property &lt;FONT face="courier new,courier"&gt;customHeader_companyCode&lt;/FONT&gt; takes precedence over the one from the delimited string. This is because the script first reads values from the existing header, then adds or overwrites them with those from the exchange properties – allowing you to override specific values if needed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="slava_kuzyakin_7-1748414176916.png" style="width: 455px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266778iBE0B372A7AD69573/image-dimensions/455x363?v=v2" width="455" height="363" role="button" title="slava_kuzyakin_7-1748414176916.png" alt="slava_kuzyakin_7-1748414176916.png" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/new-pipeline-concept-features-with-version-1-0-12-improved-handling-of/ba-p/14112869"/>
    <published>2025-05-28T08:56:53.692000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/a-look-into-the-migration-assessment-modernization-recommendation-clean/ba-p/14107032</id>
    <title>A look into the Migration Assessment Modernization Recommendation - Clean Core</title>
    <updated>2025-05-30T09:23:11.898000+02:00</updated>
    <author>
      <name>DeniseRodrigues</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1974289</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Moving from SAP Process Orchestration to SAP Integration Suite shouldn’t be just about &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;migrating&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In order to unlock full potential, increase agility and flexibility and reduce technical debts we have to think about &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;modernization&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;The modernization recommendations are used in the &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/migration-assessment" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;Migration Assessment&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; capability of Cloud Integration. Once you´ve extracted your integration scenarios and executed the Scenario Evaluation, you can find the modernization recommendations in the Dashboard and in the downloadable &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;Evaluation Run Results&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; reports - under the &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;Modernization Recommendations&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; section of the pdf and in the &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;Recommendations&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;API Recommendations&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; tabs of the excel, as shown below:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;So, you have done your data extraction&amp;nbsp;and opened the respective &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;Scenario Evaluation Dashboard&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;. There you can see the &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;Modernization Recommendations&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; under the &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;Overview&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; tab, and you have the option to export the results to a spreadsheet or to generate a report.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_0-1747918237840.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265090i8057D1C044D4B315/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_0-1747918237840.png" alt="DeniseRodrigues_0-1747918237840.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;When you open &lt;/SPAN&gt;&lt;SPAN class=""&gt;the pdf &lt;/SPAN&gt;&lt;SPAN class=""&gt;report&lt;/SPAN&gt;&lt;SPAN class=""&gt; there is a section &lt;/SPAN&gt;&lt;SPAN class=""&gt;dedicated to &lt;/SPAN&gt;&lt;SPAN class=""&gt;modernization&lt;/SPAN&gt;&lt;SPAN class=""&gt; recommendations, where you can have an &lt;/SPAN&gt;&lt;SPAN class=""&gt;idea of the integration scenarios that could be improved.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_0-1748364555864.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266553i49CFA93B69780C38/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_0-1748364555864.png" alt="DeniseRodrigues_0-1748364555864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In &lt;/SPAN&gt;&lt;SPAN class=""&gt;a similar way&lt;/SPAN&gt;&lt;SPAN class=""&gt;, w&lt;/SPAN&gt;&lt;SPAN class=""&gt;hen you &lt;/SPAN&gt;&lt;SPAN class=""&gt;open the excel &lt;/SPAN&gt;&lt;SPAN class=""&gt;results&lt;/SPAN&gt; &lt;SPAN class=""&gt;you can check &lt;/SPAN&gt;&lt;SPAN class=""&gt;the recommendations for the &lt;/SPAN&gt;&lt;SPAN class=""&gt;possible modernization item &lt;/SPAN&gt;&lt;SPAN class=""&gt;of the &lt;/SPAN&gt;&lt;SPAN class=""&gt;integration scenario&lt;/SPAN&gt; &lt;SPAN class=""&gt;and&lt;/SPAN&gt;&lt;SPAN class=""&gt; the category it falls into.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_1-1747918237841.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265091i4FE0FFF8ABC05DF6/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_1-1747918237841.png" alt="DeniseRodrigues_1-1747918237841.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On a different tab, you can also analyze the API recommendations presented based on the extracted &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;Object ID&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;, its type, and the proposed solution.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_2-1747918237843.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265092i7314F690F2E27018/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_2-1747918237843.png" alt="DeniseRodrigues_2-1747918237843.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;And on the next tab, you can see the &lt;/SPAN&gt;&lt;SPAN class=""&gt;recommendations for the existing &lt;/SPAN&gt;&lt;SPAN class=""&gt;Business Event &lt;/SPAN&gt;&lt;SPAN class=""&gt;scenarios.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_1-1748364643847.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266555i125C3F4E3B1835AA/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_1-1748364643847.png" alt="DeniseRodrigues_1-1748364643847.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Those &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/modernization-recommendations" target="_blank" rel="noopener noreferrer"&gt;recommendations&lt;/A&gt; point out where your existing integration scenarios show potential to be updated for optimal usage in Cloud Integration and can be divided in the following categories:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Clean Core:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; Recommendations on replacing outdated or custom interfaces with standard content or standard APIs to be up to date and in line with SAP product strategy&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration Style:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; Recommendations on integration patterns&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Mapping:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; Recommendations on using different mapping approaches&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Monitoring &amp;amp; Operation:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; Recommendations on enhancing monitoring and operations&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Protocol:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; Recommendations on using state-of-the-art communication protocols&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Security:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; Recommendations on using state-of-the-art security options in integration scenarios&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Today we will focus on the category&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Clean Core Modernization Recommendations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As SAP landscapes evolve to meet the demands of agility, scalability, and innovation, the concept of &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Clean Core&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; has become a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;key priority&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. It refers to maintaining a stable, upgrade-friendly SAP system by minimizing customizations and relying on standardized, modern integration practices.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Guiding Principles&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Having that in mind the guiding principles for the clean core modernization rely on four pillars:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Avoid&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; extensions where not necessary and stay as close as possible to SAP standards.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Be Aware &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;of your technical debts, evaluate them on a regular basis and establish a binding governance framework.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Be Cloud Ready &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;by extending and integrating in a stable and transparent manner.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Decouple &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;by leveraging BTP as a platform to innovate for additional differentiation and automate with standard APIs and Events.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration Dimension&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;There are some main aspects regarding the integration implementation that you can follow to keep your landscape reliable:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Integrations shall be based on &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;standard APIs&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (OData and SOAP).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Aim for &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;side-by-side extensibility&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; with API integration or even SAP Build, by utilizing the tight coupling with the SAP Cloud Integration.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Loosely coupled integrations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; could be realized in an event-driven design based on standard events.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Avoid&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; traditional APIs (&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;RFC and IDoc&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;) and their related classical extension options.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Ensure&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; proper &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;monitoring&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; and error resolution capabilities by utilizing SAP Application Interface Framework.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Three of the most impactful modernization moves include:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;&lt;STRONG&gt;&lt;SPAN&gt;1. Replacing RFCs (BAPIs) with SOAP/OData APIs&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Modern APIs are better suited for integration with both SAP and non-SAP systems, &lt;/SPAN&gt;&lt;SPAN&gt;offering:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Greater flexibility for future changes&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Public documentation and support via SAP Business Accelerator Hub&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Cleaner, standardized interfaces&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;2. Replacing custom interfaces with Pre-Delivered Packages&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Pre-delivered content accelerates implementation and ensures consistency:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Saves development time with ready-to-use mappings and flows&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Built on best practices and regularly updated by SAP&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Scalable and adaptable for enterprise growth&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;3. Replace IDOCs with SOAP/OData APIS or Business Events&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Using open and standardized protocols like SOAP or OData for event communication &lt;/SPAN&gt;&lt;SPAN&gt;provides benefits like:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Interoperability&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Wider adoption&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Easier integration with non-SAP systems&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The central access point to discover integration artifacts like standard APIs, events and integration flows is &lt;/SPAN&gt;&lt;A href="https://api.sap.com/" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Business Accelerator Hub&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt;&lt;STRONG&gt;&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below you have a step by step of how to find the recommended API and business event highlighted in the &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;API Recommendation &lt;/SPAN&gt;&lt;/I&gt;and&lt;I&gt;&lt;SPAN&gt; Business Event Recommendation&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;&amp;nbsp;tabs of the &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;Evaluation Run Results&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; excel.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;So, you opt to move forward with the API &lt;/SPAN&gt;&lt;SPAN class=""&gt;and the Business Event &lt;/SPAN&gt;&lt;SPAN class=""&gt;recommendation&lt;/SPAN&gt;&lt;SPAN class=""&gt;s&lt;/SPAN&gt;&lt;SPAN class=""&gt; and choose the object&lt;/SPAN&gt; &lt;SPAN class=""&gt;you want to replace.&lt;/SPAN&gt; &lt;SPAN class=""&gt;Let’s&lt;/SPAN&gt;&lt;SPAN class=""&gt; take the second line as an &lt;/SPAN&gt;&lt;SPAN class=""&gt;example,&lt;/SPAN&gt; &lt;SPAN class=""&gt;the Object ID is &lt;/SPAN&gt;&lt;SPAN class=""&gt;ORDERS05,&lt;/SPAN&gt; &lt;SPAN class=""&gt;and you will be replacing an &lt;/SPAN&gt;&lt;SPAN class=""&gt;I&lt;/SPAN&gt;&lt;SPAN class=""&gt;DOC &lt;/SPAN&gt;&lt;SPAN class=""&gt;for &lt;/SPAN&gt;&lt;SPAN class=""&gt;an &lt;/SPAN&gt;&lt;SPAN class=""&gt;SAP S/4HANA &lt;/SPAN&gt;&lt;SPAN class=""&gt;or SAP S/4HANA &lt;/SPAN&gt;&lt;SPAN class=""&gt;Cloud Public Edition&lt;/SPAN&gt; &lt;SPAN class=""&gt;SOAP &lt;/SPAN&gt;&lt;SPAN class=""&gt;API&lt;/SPAN&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;SPAN class=""&gt;depending on your context&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_3-1747918237844.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265094i8AC2076F234BEEE6/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_3-1747918237844.png" alt="DeniseRodrigues_3-1747918237844.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;As for the business event&lt;/SPAN&gt;&lt;SPAN class=""&gt;, you will be replacing the IDOC for &lt;/SPAN&gt;&lt;SPAN class=""&gt;a Purchase&lt;/SPAN&gt;&lt;SPAN class=""&gt; Order &lt;/SPAN&gt;&lt;SPAN class=""&gt;Event&lt;/SPAN&gt;&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;SPAN class=""&gt; available either on&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP S/4HANA&lt;/SPAN&gt;&lt;SPAN class=""&gt; Business Event&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;s&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; or SAP S/4HANA Cloud Public Edition&lt;/SPAN&gt;&lt;SPAN class=""&gt; for Business &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Events,&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;according to &lt;/SPAN&gt;&lt;SPAN class=""&gt;your context&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_3-1748365155886.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266558iE7BBFCF01AC95E88/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_3-1748365155886.png" alt="DeniseRodrigues_3-1748365155886.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Note that &lt;/SPAN&gt;&lt;SPAN class=""&gt;in&lt;/SPAN&gt;&lt;SPAN class=""&gt; th&lt;/SPAN&gt;&lt;SPAN class=""&gt;ese&lt;/SPAN&gt; &lt;SPAN class=""&gt;cases&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;we can see that there is a solution available for both S/4HANA versions, but sometimes the &lt;/SPAN&gt;&lt;SPAN class=""&gt;suggestion &lt;/SPAN&gt;&lt;SPAN class=""&gt;might &lt;/SPAN&gt;&lt;SPAN class=""&gt;be only&lt;/SPAN&gt;&lt;SPAN class=""&gt; available for one of the versions (public or private&lt;/SPAN&gt;&lt;SPAN class=""&gt; edition&lt;/SPAN&gt;&lt;SPAN class=""&gt;).&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To find the recommended object you must open the Business Accelerator Hub and look for it. There are multiple ways to do it.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can go to the general categories of APIs/Events, where both SAP S/4HANA and SAP S/4HANA Cloud Public Edition will show up.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_4-1748365229041.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266559iE49286DD8C7615B0/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_4-1748365229041.png" alt="DeniseRodrigues_4-1748365229041.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;There, you can search by the name and protocol provided in the &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Evaluation Run Results&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; excel&lt;/SPAN&gt;&lt;SPAN class=""&gt; or by the event name, respectively&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_5-1748365254785.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266560iCF0ADCED9BBFE5EE/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_5-1748365254785.png" alt="DeniseRodrigues_5-1748365254785.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_6-1748365277186.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266561iCE63B520A609ED24/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_6-1748365277186.png" alt="DeniseRodrigues_6-1748365277186.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;As an alternative&lt;/SPAN&gt;&lt;SPAN class=""&gt; you can go directly to SAP S/4HANA Cloud Public Edition &lt;/SPAN&gt;&lt;SPAN class=""&gt;and search there&lt;/SPAN&gt;&lt;SPAN class=""&gt; for the &lt;/SPAN&gt;&lt;SPAN class=""&gt;P&lt;/SPAN&gt;&lt;SPAN class=""&gt;ublic &lt;/SPAN&gt;&lt;SPAN class=""&gt;Edition&lt;/SPAN&gt;&lt;SPAN class=""&gt; solution&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_7-1748365370809.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266562iEB9CA1A2CE5644D6/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_7-1748365370809.png" alt="DeniseRodrigues_7-1748365370809.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_8-1748365406059.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266563iEFFFCF0256A3C1C6/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_8-1748365406059.png" alt="DeniseRodrigues_8-1748365406059.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_9-1748365417920.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266564i2B29CC403FE7C628/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_9-1748365417920.png" alt="DeniseRodrigues_9-1748365417920.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In &lt;/SPAN&gt;&lt;SPAN class=""&gt;a similar way&lt;/SPAN&gt;&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;SPAN class=""&gt; you can go directly to SAP S/4HANA Cloud Private Edition and search there&lt;/SPAN&gt;&lt;SPAN class=""&gt; for the S/4HANA solution either for the API or for the business event&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For an even more refined result&lt;/SPAN&gt;&lt;SPAN class=""&gt; you can search by the API &lt;/SPAN&gt;&lt;SPAN class=""&gt;or the event &lt;/SPAN&gt;&lt;SPAN class=""&gt;technical name&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;and get a 1:1 match.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_10-1748365482987.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266565i2D27684F9825FCD4/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_10-1748365482987.png" alt="DeniseRodrigues_10-1748365482987.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_11-1748365498619.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266566i8B81AECC8F20E560/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_11-1748365498619.png" alt="DeniseRodrigues_11-1748365498619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;Once you find &lt;/SPAN&gt;&lt;SPAN class=""&gt;it,&lt;/SPAN&gt;&lt;SPAN class=""&gt; you can &lt;/SPAN&gt;&lt;SPAN class=""&gt;access the specification&lt;/SPAN&gt;&lt;SPAN class=""&gt; and use it&lt;/SPAN&gt;&lt;SPAN class=""&gt; on Cloud Integration.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_12-1748365540469.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266567iA0C84BF37AE10453/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_12-1748365540469.png" alt="DeniseRodrigues_12-1748365540469.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeniseRodrigues_13-1748365550321.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266568iB0757FA357CDAA9D/image-size/large?v=v2&amp;amp;px=999" role="button" title="DeniseRodrigues_13-1748365550321.png" alt="DeniseRodrigues_13-1748365550321.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Note that &lt;/SPAN&gt;&lt;SPAN class=""&gt;after th&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt; replacement, either by&lt;/SPAN&gt; &lt;SPAN class=""&gt;S/4HANA or &lt;/SPAN&gt;&lt;SPAN class=""&gt;S/4HANA&lt;/SPAN&gt;&lt;SPAN class=""&gt; Cloud&lt;/SPAN&gt;&lt;SPAN class=""&gt; Public&lt;/SPAN&gt; &lt;SPAN class=""&gt;Edition &lt;/SPAN&gt;&lt;SPAN class=""&gt;API&lt;/SPAN&gt;&lt;SPAN class=""&gt;/&lt;/SPAN&gt;&lt;SPAN class=""&gt;Event,&lt;/SPAN&gt;&lt;SPAN class=""&gt; further &lt;/SPAN&gt;&lt;SPAN class=""&gt;changes in the &lt;/SPAN&gt;&lt;SPAN class=""&gt;i&lt;/SPAN&gt;&lt;SPAN class=""&gt;F&lt;/SPAN&gt;&lt;SPAN class=""&gt;low&lt;/SPAN&gt; &lt;SPAN class=""&gt;may &lt;/SPAN&gt;&lt;SPAN class=""&gt;be &lt;/SPAN&gt;&lt;SPAN class=""&gt;required&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt; &lt;SPAN class=""&gt;At the moment&lt;/SPAN&gt;&lt;SPAN class=""&gt; that &lt;/SPAN&gt;&lt;SPAN class=""&gt;additional&lt;/SPAN&gt;&lt;SPAN class=""&gt; effort is not being &lt;/SPAN&gt;&lt;SPAN class=""&gt;considered&lt;/SPAN&gt; &lt;SPAN class=""&gt;on the effort estimation&lt;/SPAN&gt;&lt;SPAN class=""&gt; results,&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;so it is important&lt;/SPAN&gt; &lt;SPAN class=""&gt;not only &lt;/SPAN&gt;&lt;SPAN class=""&gt;to have that in mind &lt;/SPAN&gt;&lt;SPAN class=""&gt;but also &lt;/SPAN&gt;&lt;SPAN class=""&gt;to &lt;/SPAN&gt;&lt;SPAN class=""&gt;verify &lt;/SPAN&gt;&lt;SPAN class=""&gt;if th&lt;/SPAN&gt;&lt;SPAN class=""&gt;at&lt;/SPAN&gt;&lt;SPAN class=""&gt; given &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;A class="" href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/modernization-recommendations#loiod337a6f0d324405f9ef0c410fd0d3739__section_kfp_nmx_fbc" target="_blank" rel="noreferrer noopener"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;recommendation&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;fulfills &lt;/SPAN&gt;&lt;SPAN class=""&gt;all the necessary functional requirements &lt;/SPAN&gt;&lt;SPAN class=""&gt;currently in place for the given business scenario&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Final Thoughts&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;Modernizing your integration landscape isn’t just about following trends—it’s about future-proofing your SAP environment. By replacing outdated technologies with standardized APIs and leveraging prebuilt content, you move closer to a Clean Core that’s easier to maintain, more responsive to business needs, and ready for the future.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;Think strategically, start simple, and scale confidently by adopting SAP’s recommendations and incrementally build a cleaner and smarter core.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;SAP Help Pages&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;To explore in more detail the Migration Assessment, refer to &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/migration-assessment" target="_blank" rel="noopener noreferrer"&gt;Migration Assessment&lt;/A&gt;&amp;nbsp;or&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/automatically-assess-your-migration-from-sap-process-orchestration-systems/ba-p/13555563" target="_blank"&gt;Automatically assess your migration&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;To get information on Modernization Recommendations, refer to&amp;nbsp;&lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/modernization-recommendations#loiod337a6f0d324405f9ef0c410fd0d3739__section_kfp_nmx_fbc" target="_blank" rel="noopener noreferrer"&gt;Modernization Recommendations&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/a-look-into-the-migration-assessment-modernization-recommendation-clean/ba-p/14107032"/>
    <published>2025-05-30T09:23:11.898000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/partner-directory-accelerator-tool-for-pipeline-concept/ba-p/14095019</id>
    <title>Partner Directory Accelerator Tool for Pipeline Concept</title>
    <updated>2025-06-16T17:00:09.584000+02:00</updated>
    <author>
      <name>LorenaHanser</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1471152</uri>
    </author>
    <content>&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;&amp;nbsp;&lt;STRONG&gt;Disclaimer&lt;/STRONG&gt;: The helper tool described in this blog post is not an official product by SAP, but is available as &lt;A title="SAP Open Source project &amp;quot;Partner Directory Accelerator for Pipeline Concept&amp;quot;" href="https://github.com/SAP-samples/integration-suite-partner-directory-accelerator-for-pipeline-concept" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Open Source project&lt;/A&gt;, intended to accelerate the interaction with the Partner Directory for the Pipeline Concept.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1581104112"&gt;&lt;FONT size="6"&gt;Purpose&lt;/FONT&gt;&lt;/H1&gt;&lt;P&gt;The Partner Directory Accelerator Tool supports the Pipeline Concept, which is introduced in a&amp;nbsp;&lt;A title="SAP Community blog: Introducing the new pipeline concept in Cloud Integration" href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-new-pipeline-concept-in-cloud-integration/ba-p/13639651" target="_blank"&gt;SAP Community blog&lt;/A&gt;&amp;nbsp;by&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/45178"&gt;@alex_bundschuh&lt;/a&gt;&amp;nbsp;and further documented in&amp;nbsp;&lt;A title="SAP Help on Pipeline Concept" href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/pipeline-concept" target="_blank" rel="noopener noreferrer"&gt;SAP Help&lt;/A&gt;. Before using this helper tool, please make yourself familiar with the Pipeline Concept itself.&lt;/P&gt;&lt;P&gt;The Pipeline Concept relies on data from the Partner Directory which is needed during message processing. The Partner Directory can be accessed through a user interface (UI) in the SAP Integration Suite (or via the Partner Directory API). Here, you can upload existing &lt;A title="SAP Help on XSLT mappings for Pipeline Concept" href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/using-partner-directory-in-pipeline-concept#xslt-mappings" target="_blank" rel="noopener noreferrer"&gt;XSLT mappings&lt;/A&gt; after creating them manually, yet the Partner Directory UI itself does not support you in creating these XSLTs.&lt;/P&gt;&lt;P&gt;That is why the purpose of the helper tool is to accelerate the interaction with the Partner Directory for the Pipeline Concept. To do so, a Pipeline Concept-specific UI is provided which accesses the Partner Directory data via its &lt;A title="Partner Directory API in SAP Business Accelerator Hub" href="https://hub.sap.com/api/PartnerDirectory/overview" target="_blank" rel="noopener noreferrer"&gt;API&lt;/A&gt;, allowing you to easily create or update XSLT mappings and other required content, and to replicate these Partner Directory entries to another tenant.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1384590607"&gt;&lt;FONT size="6"&gt;Key Features&lt;/FONT&gt;&lt;/H1&gt;&lt;H2 id="toc-hId-1317159821"&gt;&lt;FONT size="5"&gt;XSLT Generation for Receiver Determination and Interface Determination&lt;/FONT&gt;&lt;/H2&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="LorenaHanser_0-1749108800168.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/269980i9C3A4417D35F147B/image-size/large?v=v2&amp;amp;px=999" role="button" title="LorenaHanser_0-1749108800168.png" alt="LorenaHanser_0-1749108800168.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;P&gt;For receiver determination and interface determination, the Pipeline Concept offers different options on XSLT mappings, e.g., either&lt;STRONG&gt; one combined or multiple single XSLT mappings&lt;/STRONG&gt; can be used. For both options, the helper tool supports the &lt;STRONG&gt;creation and&amp;nbsp;maintenance&lt;/STRONG&gt; of new and existing XSLT mappings. For that, a &lt;STRONG&gt;tabular input format&lt;/STRONG&gt; is used in which you can maintain XPath conditions (if required) and the resulting receiver system / receiver interface. When triggering the generation of an XSLT, a &lt;STRONG&gt;XSLT syntax check&lt;/STRONG&gt; is performed and the resulting XSLT is shown, which can be directly sent to the API.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1120646316"&gt;&lt;FONT size="5"&gt;Replication of Partner Directory Entries to another Tenant&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="LorenaHanser_1-1749108832111.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/269981i7A179DC65FFDBB45/image-size/large?v=v2&amp;amp;px=999" role="button" title="LorenaHanser_1-1749108832111.png" alt="LorenaHanser_1-1749108832111.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the helper tool, you can configure multiple tenants by providing respective credentials (which are only stored locally). Once you have configured more than one tenant, you can &lt;STRONG&gt;replicate Partner Directory entries to another tenant&lt;/STRONG&gt;. To do so, select the relevant entries as well as the target tenant, and the tool takes over for you to create (and update if desired) these entries in your selected target tenant. One use case could be to replicate Partner Directory entries from a development tenant to a productive tenant.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-795050092"&gt;&lt;FONT size="6"&gt;Use the Tool&lt;/FONT&gt;&lt;/H1&gt;&lt;P&gt;&lt;STRONG&gt;The tool is publicly available as SAP Open Source Project&lt;/STRONG&gt;. All information on supported features, setup, usage, and contribution is maintained in this repository:&amp;nbsp;&lt;BR /&gt;&lt;STRONG&gt;&lt;A href="https://github.com/SAP-samples/integration-suite-partner-directory-accelerator-for-pipeline-concept" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-samples/integration-suite-partner-directory-accelerator-for-pipeline-concept&lt;/A&gt;&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/partner-directory-accelerator-tool-for-pipeline-concept/ba-p/14095019"/>
    <published>2025-06-16T17:00:09.584000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/process-integration-pipeline-extension-restart-via-data-store/ba-p/14153116</id>
    <title>Process Integration Pipeline Extension - Restart via Data Store</title>
    <updated>2025-07-23T17:38:26.286000+02:00</updated>
    <author>
      <name>mate_moricz</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/191315</uri>
    </author>
    <content>&lt;P&gt;If you use the &lt;A href="https://hub.sap.com/package/PIPipelineGenericIntegrationFlows/overview" target="_self" rel="noopener noreferrer"&gt;Process Integration Pipeline concept&lt;/A&gt; on your SAP Cloud Integration tenant, then you'll be familiar with the error handling process. In case of a message processing error, the message will be retried from the JMS processing queues and upon reaching the maximum number of retries, the message is sent to a Dead Letter Queue (DLQ) to stop further processing. The message then has to be &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/monitoring-and-error-handling-pipeline-concept#dead-letter-queue-handling" target="_self" rel="noopener noreferrer"&gt;moved&lt;/A&gt; from the DLQ back to the processing queues of the pipeline.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="move_jms.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286931iB391DAA7CA2855E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="move_jms.png" alt="move_jms.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The move feature in the queue monitor enables you to move either all messages within a queue or you can select one-by-one which messages you'd like to move.&amp;nbsp;&lt;/P&gt;&lt;P&gt;There are multiple restrictions imposed by this retry handling process:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;It is not possible to figure out to which scenarios the messages belong in the DLQ&lt;/LI&gt;&lt;LI&gt;It is not possible to schedule a restart job with periodic retries of erroneous messages.&lt;/LI&gt;&lt;LI&gt;There is no API to move messages from DLQ to normal processing queues.&lt;/LI&gt;&lt;LI&gt;There is no API to read JMS queue content and select required messages based on query conditions (JMS Message ID cannot be set from an Integration Flow and there is not any configurable tag for JMS message).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;An additional aspect is the resource limit of the JMS broker:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;There is a hard size limit of JMS broker and JMS queues (default 95% of broker). In case of an unplanned outage of a receiver system, messages might be flooding generic pipeline queues like Outbound (Q4) JMS queue.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;To solve these issues, we have created a package called the&amp;nbsp;&lt;A href="https://hub.sap.com/package/processintegrationpipelineextensionrestartviadatastore/overview" target="_self" rel="noopener noreferrer"&gt;Process Integration Pipeline Extension - Restart via Data Store&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;which is now available in SAP Business Accelerator Hub. This package helps to automate message retries via scheduled jobs and APIs by utilizing Data Stores instead of DLQs on the JMS broker. There is no change required to the standard&amp;nbsp;Process Integration Pipeline package due to the available &lt;A href="https://community.sap.com/t5/integration-blog-posts/latest-pipeline-concept-enhancements-custom-error-handling-and-others/ba-p/13757664" target="_self"&gt;custom error handling extension&lt;/A&gt;&amp;nbsp;from version&amp;nbsp;1.0.5 on.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This blog describes the concept of the extension, but not the detailed configuration of each Integration Flow.. A detailed configuration guide is attached to the Integration Package.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1735063274"&gt;Integration Package contents&lt;/H2&gt;&lt;P&gt;The package consists of multiple Integration Flows and a Script Collection. Below schema describes the logical connection between the Integration Flows.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_1-1753260008506.png" style="width: 911px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290178i5594727031643E89/image-dimensions/911x435?v=v2" width="911" height="435" role="button" title="mate_moricz_1-1753260008506.png" alt="mate_moricz_1-1753260008506.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&lt;/STRONG&gt;&lt;SPAN&gt;. This Integration Flow implements Custom Error Handling for exceptions occurring in the generic steps of the Process Integration Pipeline. It leverages the public Pipeline extension exit, as described in the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/monitoring-and-error-handling-pipeline-concept#loioed9b82cb928049e6990a4d784aa6aac7__section_pm1_ggs_5bc" target="_blank" rel="noopener noreferrer"&gt;Custom Exception Handling documentation&lt;/A&gt;. Its primary function is to determine whether retries should continue through the JMS persistence layer or, if all configured JMS retries are exhausted, to move the message out of the queue into the Data Store while capturing all necessary restart attributes and forming the Data Store entry body.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline DS Retry - Restart Executor from Data Store to JMS&lt;/STRONG&gt;&lt;SPAN&gt;. This Integration Flow handles message reprocessing by moving messages from the Data Store back to the source JMS processing queue, allowing the JMS layer to manage the actual retry process. It is triggered via Process Direct and requires XML input specifying the source Data Store, maximum retry count, and the retry subject – either a list of Data Store entry names or an Interface PID for dynamically retrying all associated Data Store entries.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline DS Retry - Template - Restart Job&lt;/STRONG&gt;&lt;SPAN&gt;. This Integration Flow represents a Restart Job that automatically reprocesses messages from the Data Store based on assigned restart configuration profiles. Execution is scheduled using a Start Timer event. Provided as a template, this Integration Flow allows for the creation of multiple customized copies in a custom package, with different Job Profiles maintained in the Partner Directory.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline API - Data Store Manage Retries &lt;/STRONG&gt;&lt;SPAN&gt;(Optional). This Integration Flow enables on-demand restart operations via API clients like Postman. It exposes an HTTP endpoint to trigger restarts for specified Data Store entries or based on selection criteria. Additional operations allow users to retrieve a list of Data Stores in the tenant, fetch entries from a specific Data Store, and move entries between Data Stores (e.g., transferring entries from the “Retry” Data Store to the “NoRetry” Data Store to prevent automatic retriggering).&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline API - Data Store Manage Entries &lt;/STRONG&gt;&lt;SPAN&gt;(Optional). This Integration Flow provides API-based management of Data Store entries, separate from the "Manage Retries" API, to enforce role-based access. It allows users to read messages from a selected Data Store, delete messages (individually or based on query conditions), and add messages to the Data Store (this capability can be disabled at the Integration Flow level).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1538549769"&gt;Data Store Entry Format&lt;/H2&gt;&lt;P&gt;The&amp;nbsp;&lt;EM&gt;Pipeline DS Retry - Custom Error Handling with Data Stores &lt;/EM&gt;Integration Flow will write the messages into Data Stores in a specific pattern which can be used to easily identify the corresponding scenario, message restart by filter criteria.&amp;nbsp; The following pattern is used:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;PartnerId&lt;SPAN&gt;~PipelineStage(~Receiver )~MplId~UTC-Timestamp(~RetryCount )&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;PartnerId (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – A unique identifier in the Process Integration Pipeline that defines the configuration scenario. It is derived from the sender system name and sender interface name. More details can be found in the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/using-partner-directory-in-pipeline-concept#partner-id" target="_blank" rel="noopener noreferrer"&gt;Partner ID documentation&lt;/A&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;PipelineStage (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – Identifies the stage in the Process Integration Pipeline where the exception occurred. &lt;/SPAN&gt;It uses predefined two-letter identifiers enclosed in parentheses (e.g., (IB)), resulting in a four-character code&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;(IB)&lt;/STRONG&gt;&lt;SPAN&gt; – Inbound Stage: The message was received by an inbound Integration Flow, stored in the first JMS queue, and encountered an exception during the next processing step.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(RD)&lt;/STRONG&gt;&lt;SPAN&gt; – Receiver Determination Stage: The inbound conversion was successful, but an error occurred while identifying the receiver system.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(ID)&lt;/STRONG&gt;&lt;SPAN&gt; – Interface Determination Stage: The receiver system was identified, but an error occurred while determining the target inbound interface for that receiver (i.e., the Process Direct endpoint of the outbound Integration Flow).&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(OB)&lt;/STRONG&gt;&lt;SPAN&gt; – Outbound Stage: The message was successfully routed, but an error occurred during message conversion to the outbound format or while transmitting data to the receiver. This is the most common error-handling stage.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(NA)&lt;/STRONG&gt;&lt;SPAN&gt; – The error originated from an unknown or custom Integration Flow (e.g., a copy of the generic flow or an interface-specific flow connected to the retry extension).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Receiver (Optional)&lt;/STRONG&gt;&lt;SPAN&gt; – The receiver business system or alias to which the message is to be delivered. This field is optional because in the |IB| and |RD| stages, the receiver is still unknown. It is assigned only starting from the |ID| stage.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;MplId (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – The Message Processing Log ID (Message GUID) of the erroneous message, a 28-character unique identifier assigned to each message in Cloud Integration. Even though the Message Processing Log ID is directly visible in the Data Store UI, this identifier is required to guarantee uniqueness in terms of Data Store entry ID as a timestamp will not guarantee uniqueness.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;UTC-Timestamp (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – A timestamp marking when the message first entered the Custom Error Handling Integration Flow. It follows the ISO 8601 format:&amp;nbsp;&lt;/SPAN&gt;yyyy-MM-dd'T'HH:mm:ss.SSS'Z' (Example: 2025-04-20T06:51:11.123Z)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;RetryCount (Optional)&lt;/STRONG&gt;&lt;SPAN&gt; – A counter tracking Data Store restart attempts. For a new erroneous message using Data Store-based restarts, this counter starts at 0 and increments with each retry attempt. This prevents exceeding the maximum allowed retries (MaxDataStoreRetries).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The entry written to the Data Store contains the message payload and the potential attachments in a Base64-encoded format. Additionally a message header is included which contains metadata required for further processing such as:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The source JMS queue where the message will be placed for reprocessing&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The entry name of the Data Store record&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The Data Store name used for reprocessing&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The maximum retry count assigned to the interface in the Partner Directory (or a default of 3 retries from the Data Store)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The exception message, also stored in Base64-encoded format&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The structure looks as follows:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;Message&amp;gt;
	&amp;lt;MsgHeader&amp;gt;
		&amp;lt;RestartQueue&amp;gt;${property.SourceJMSQueue}&amp;lt;/RestartQueue&amp;gt;
		&amp;lt;EntryID&amp;gt;${property.EntryID}&amp;lt;/EntryID&amp;gt;
		&amp;lt;RetryDataStore&amp;gt;${property.RetryDataStore}&amp;lt;/RetryDataStore&amp;gt;
		&amp;lt;MaxRetryCount&amp;gt;${property.MaxDataStoreRetries}&amp;lt;/MaxRetryCount&amp;gt;
		&amp;lt;Error&amp;gt;exception.message.Base64encoded&amp;lt;/Error&amp;gt;
	&amp;lt;/MsgHeader&amp;gt;
	&amp;lt;Payload&amp;gt;Payload.Base64encoded&amp;lt;/Payload&amp;gt;
	&amp;lt;Attachments&amp;gt; (minOccurs="0")
		&amp;lt;Attachment&amp;gt; (maxOccurs="unbounded")
			&amp;lt;AttachmentName&amp;gt;attachmentName&amp;lt;/AttachmentName&amp;gt;
			&amp;lt;AttachmentContentType&amp;gt;contType&amp;lt;/AttachmentContentType&amp;gt;
			&amp;lt;AttachmentContent&amp;gt;content.Base64&amp;lt;/AttachmentContent&amp;gt;
		&amp;lt;/Attachment&amp;gt;
	&amp;lt;/Attachments&amp;gt;
&amp;lt;/Message&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1342036264"&gt;Data Store Options&lt;/H2&gt;&lt;P&gt;The extension package utilizes two data store options: RetryStore and NoRetryStore. The Integration Flow &lt;EM&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&lt;/EM&gt;&amp;nbsp;determines – based on the number of JMS retries, PartnerId configuration in Partner Directory and the pipeline Stage where the error occurred – into which kind of Data Store the message is placed.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;RetryStore&lt;/STRONG&gt;&lt;SPAN&gt; – If a message should be automatically restarted in case of an error in inbound or outbound processing or in the integrated runtime, it will be put into this store. The messages in this store option can be restarted via the Restart Job Template Integration Flow. If the maximum number of retries is not reached for restarted messages, they will be put back into this store with an increased retry counter.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;NoRetryStore&lt;/STRONG&gt;&lt;SPAN&gt; – If a message should not be restarted automatically in case of failing receiver or interface determination or when the maximum number of retries have been reached by an already restarted message, it will be put into this store. The messages in this store option can be restarted explicitly &lt;/SPAN&gt;&lt;SPAN&gt;via the Integration Flow &lt;EM&gt;Pipeline API - Data Store Manage Retries&amp;nbsp;&lt;/EM&gt;or via even by the Restart Job if needed.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1145522759"&gt;Restart configuration settings for scenarios&lt;/H2&gt;&lt;P&gt;The Integration Flow &lt;EM&gt;&lt;I&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&lt;/I&gt;&lt;/EM&gt;&amp;nbsp;will put the failed messages into Data Stores based on &lt;EM&gt;&lt;I&gt;PartnerId&lt;/I&gt;&lt;/EM&gt; configuration defined in the Partner Directory via String Parameters. If the configuration is missing in the Partner Directory for a given &lt;EM&gt;&lt;I&gt;PartnerId&lt;/I&gt;&lt;/EM&gt;, default values will be applied.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;RetryDataStore&lt;/STRONG&gt;&lt;SPAN&gt; – Defines the name of the Data Store where the erroneous message should be stored in case of exceeding maximum number of retry attempts at JMS layer.&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Note that even when set to a specific value, messages destined for the &lt;EM&gt;&lt;I&gt;NoRetryStore&lt;/I&gt;&lt;/EM&gt; will have the “&lt;EM&gt;&lt;I&gt;_NoRetry”&lt;/I&gt;&lt;/EM&gt; postfix appended to the Data Store name and they require no explicit configuration.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If &lt;EM&gt;&lt;I&gt;RetryDataStore&lt;/I&gt;&lt;/EM&gt; String parameter is not set for the &lt;EM&gt;&lt;I&gt;PartnerId&lt;/I&gt;&lt;/EM&gt;, then the data store names used will be &lt;EM&gt;&lt;I&gt;&amp;lt;PartnerId&amp;gt;_Retry&lt;/I&gt;&lt;/EM&gt; and &lt;EM&gt;&lt;I&gt;&amp;lt;PartnerId&amp;gt;_NoRetry&lt;/I&gt;&lt;/EM&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;restartMode&lt;/STRONG&gt;&lt;SPAN&gt; – Can be set to either &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;DS&lt;/I&gt;&lt;/EM&gt; &lt;/STRONG&gt;(Data Store) or &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;JMS&lt;/I&gt;&lt;/EM&gt; &lt;/STRONG&gt;(JMS queue) to define how the messages should be restarted. Default option is &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;DS&lt;/I&gt;&lt;/EM&gt;&lt;/STRONG&gt; if not set.&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;DS:&lt;/STRONG&gt;&lt;SPAN&gt; putting a message back to the JMS queue, but in case of an error immediately taking it to a Data Store (preferred and default)&lt;/SPAN&gt;&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;JMS:&lt;/STRONG&gt;&lt;SPAN&gt; putting a message back to the JMS queue and in case of an error executing retries in this JMS queue according to the maximum number of JMS retries&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;MaxDataStoreRetries&lt;/STRONG&gt;&lt;SPAN&gt; – Defines the number of retries after a restart of a message. If the limit is reached, the messaged is moved into the “&lt;EM&gt;&lt;I&gt;_NoRetry”&lt;/I&gt;&lt;/EM&gt; Data Store. &lt;/SPAN&gt;Default number is 5.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_2-1753260232208.png" style="width: 679px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290183iB0248737819ED8F1/image-dimensions/679x404?v=v2" width="679" height="404" role="button" title="mate_moricz_2-1753260232208.png" alt="mate_moricz_2-1753260232208.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-949009254"&gt;Restart job configuration&amp;nbsp;&lt;/H2&gt;&lt;P&gt;The Integration Flow “&lt;EM&gt;&lt;I&gt;Pipeline DS Retry - Template - Restart Job&lt;/I&gt;&lt;/EM&gt;” relies on the configuration of different Restart Job Profiles. Multiple variants can be configured to have different scheduled versions of the Restart Job for specific interfaces.&lt;/P&gt;&lt;P&gt;Note that interfaces must be explicitly specified, no regex pattern is applicable in the profiles. Also, there is no default Job Profile applicable for all integration scenarios, i.e. if there is no defined job profile for the interface – the messages won’t be restarted&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Status&lt;/STRONG&gt;&lt;SPAN&gt; – Can be set to “&lt;EM&gt;&lt;I&gt;active”&lt;/I&gt;&lt;/EM&gt; or “&lt;EM&gt;&lt;I&gt;inactive”&lt;/I&gt;&lt;/EM&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;InterfacePidList&lt;/STRONG&gt;&lt;SPAN&gt; – Defines the list of the interfaces (or integration scenarios) for which the message restarts should be triggered. Multiple scenarios can be set by using the character semicolon &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;“;”&lt;/I&gt;&lt;/EM&gt;&lt;/STRONG&gt; as a delimiter. The Restart Job will consider the scenario-specific configuration defined in the Partner Directory (assigned Data Store, number of retries and restart mode).&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Store&lt;/STRONG&gt;&lt;SPAN&gt; – (&lt;/SPAN&gt;&lt;SPAN&gt; If not set, &lt;EM&gt;&lt;I&gt;Retry&lt;/I&gt;&lt;/EM&gt; stores will be always&amp;nbsp;used (with value &lt;EM&gt;&lt;I&gt;Retry&lt;/I&gt;&lt;/EM&gt;). In case of emergencies or if the API based restart can’t be used, restart from the &lt;EM&gt;&lt;I&gt;NoRetryStore&lt;/I&gt;&lt;/EM&gt; can be set for scheduled Restart Jobs. &lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Filters within the Restart Job Profile. If not set, all entries from the given Data Store will be restarted.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Receiver&lt;/STRONG&gt;&lt;SPAN&gt; – (&lt;/SPAN&gt; &lt;SPAN&gt;Receiver name to select all the entries from the Data Store that belong to the specified receiver (for the stages when receiver is unknown (e.g. Inbound), the value “&lt;EM&gt;&lt;I&gt;null&lt;/I&gt;&lt;/EM&gt;” can be sent and then all entries without receiver will be selected). Example of value: &lt;EM&gt;&lt;I&gt;“S4HCLNT100”. &lt;/I&gt;&lt;/EM&gt;Note that the parameter setting is global for all interfaces maintained in the &lt;EM&gt;&lt;I&gt;InterfacePidList&lt;/I&gt;&lt;/EM&gt; parameter, it can’t be set for each interface separately.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;TimeFrom&lt;/STRONG&gt;&lt;SPAN&gt; – (Optional parameter): Interval start timestamp in UTC format to select all the entries from the Data Store that have timestamp in DS Entry name later than specified timestamp. Example of value: “&lt;EM&gt;&lt;I&gt;2025-06-01T09:00:00.000Z&lt;/I&gt;&lt;/EM&gt;”.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;TimeTo&lt;/STRONG&gt;&lt;SPAN&gt; – (Optional parameter): Interval end timestamp in UTC format to select all the entries from the Data Store that have timestamp in DS Entry name earlier than specified timestamp. Example of value: “&lt;EM&gt;&lt;I&gt;2025-06-02T09:00:00.000Z&lt;/I&gt;&lt;/EM&gt;”.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_1-1753261119683.png" style="width: 601px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290215i9B8F1F9C2D096BAA/image-dimensions/601x275?v=v2" width="601" height="275" role="button" title="mate_moricz_1-1753261119683.png" alt="mate_moricz_1-1753261119683.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Below screenshot shows a Restart Job profile with the optional parameters.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_2-1753261204824.png" style="width: 599px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290216iC66249024E4F1415/image-dimensions/599x384?v=v2" width="599" height="384" role="button" title="mate_moricz_2-1753261204824.png" alt="mate_moricz_2-1753261204824.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The Restart Job from the template Integration Flow &lt;EM&gt;&lt;I&gt;Pipeline DS Retry - Template - Restart Job&lt;/I&gt;&lt;/EM&gt;&amp;nbsp;can be configured to use a schedule-based trigger (start Timer event). Default configuration is to run &lt;EM&gt;&lt;I&gt;On Deployment.&lt;/I&gt;&lt;/EM&gt;&lt;/P&gt;&lt;DIV&gt;&lt;H2 id="toc-hId-752495749"&gt;&lt;SPAN&gt;On-Demand Restarts or Data Store management via HTTP API&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;There are 2 optional Integration Flows in the package which can be used for on-demand operations. They expose 2 HTTP endpoints to manage Retry related operations and to manage Data Store entries. The functionality is divided into 2 Integration Flows for more granular control on authorization level who is allowed to call Restart operations only and who is allowed to Cancel messages (manipulate Data Store entries).&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_0-1753261055289.png" style="width: 947px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290213i2EE2FC23FCB080E3/image-dimensions/947x424?v=v2" width="947" height="424" role="button" title="mate_moricz_0-1753261055289.png" alt="mate_moricz_0-1753261055289.png" /&gt;&lt;/span&gt;&lt;DIV&gt;&lt;P&gt;These 2 additional Integration Flows are acting as APIs for more granular control of messages in the Data Stores than the Restart Job. On the other hand, these must be handled with caution as it requires deep understanding of the extension package on how to restart a corresponding package.&lt;/P&gt;&lt;H2 id="toc-hId-555982244"&gt;Configuration steps to use the package&lt;/H2&gt;&lt;DIV&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Configure and Deploy mandatory Integration Artefacts of DS Restart Extension package.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Assign Data Store Restart Configuration for Configuration Scenarios in Partner Directory.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Enable Custom Exception Handling in generic Integration Flows of Process Integration Pipeline package.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create Restart Job Profiles in Partner Directory.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create a Restart Job Integration Flow from Template, Configure Parameters and Deploy.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;(Optional) Configure and Deploy Integration Flows for On-Demand Restarts or Data Store management via HTTP API.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-359468739"&gt;Further improvements&lt;/H2&gt;&lt;P&gt;We are planning to add further improvements to the package such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Configurable no restart stages&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Add default Restart Job Profile if scenarios are not maintained explicitly&lt;/LI&gt;&lt;LI&gt;Catch mapping errors in the outbound stages and move these messages into the NoRetry store (as there is no option to edit a message like in SAP PO)&lt;/LI&gt;&lt;LI&gt;Catch routing errors for the Integrated Messaging Runtime&lt;/LI&gt;&lt;LI&gt;Current Receiver filter in the Restart Job Profile setting is global, needs to be changed to scenario-specific filter&lt;/LI&gt;&lt;LI&gt;Add extension point in the&amp;nbsp;&lt;EM&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&amp;nbsp;&lt;/EM&gt;Integration Flow for potential custom alerting requirement&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you have any further ideas to enhance the package, let us know in the comments.&lt;/P&gt;&lt;P&gt;Update - October 2, 2025: We have released a new version of the package. You can find more information in the blog post&amp;nbsp;&lt;A href="https://community.sap.com/t5/integration-blog-posts/new-ci-pipeline-restart-extension-features-supporting-new-pipeline-package/ba-p/14230547" target="_blank"&gt;New CI Pipeline Restart Extension features: supporting new Pipeline package and improved Restart Job&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-162955234"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;The &lt;EM&gt;Process Integration Pipeline Extension - Restart via Data Store&lt;/EM&gt; package offers a viable solution to the challenges faced when utilizing the Process Integration Pipeline concept. By automating message retries through scheduled jobs and APIs, and shifting reliance from Dead Letter Queues to Data Stores,&amp;nbsp;&lt;SPAN&gt;users can effectively manage message restarts as an alternative to the standard error handling of the Pipeline concept. By leveraging the Pipeline’s custom exit for error handling, this can be achieved without requiring changes to the standard Process Integration Pipeline package.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/process-integration-pipeline-extension-restart-via-data-store/ba-p/14153116"/>
    <published>2025-07-23T17:38:26.286000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339</id>
    <title>New integration packages for the Pipeline for Cloud Integration</title>
    <updated>2025-08-08T15:08:45.923000+02:00</updated>
    <author>
      <name>alex_bundschuh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45178</uri>
    </author>
    <content>&lt;P&gt;I would like to share with you an important change for the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/pipeline-concept" target="_blank" rel="noopener noreferrer"&gt;Pipeline for Cloud Integration&lt;/A&gt; that we did based on feedback we received from customers running the Pipeline. As a result, &lt;STRONG&gt;new integration packages for supporting the Pipeline for Cloud Integration has been recently shipped&lt;/STRONG&gt; on the&amp;nbsp;&lt;A href="https://hub.sap.com/" target="_blank" rel="noopener noreferrer"&gt;SAP Business Accelerator Hub&lt;/A&gt;. Those packages replace the so far provided package&amp;nbsp;&lt;A href="https://hub.sap.com/package/PIPipelineGenericIntegrationFlows/overview" target="_blank" rel="noopener noreferrer"&gt;Process Integration Pipeline - Generic Integration Flows &amp;amp; Templates&lt;/A&gt; &lt;STRONG&gt;which will be deprecated soon&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;To be more flexible in setting up your different pipelines, different sender-specific IDoc and XI inbound flows, and receiver-specific outbound flows if required, we decided to split up the&amp;nbsp;Process Integration Pipeline - Generic Integration Flows &amp;amp; Templates into four packages. For the same reason, the script collection has been replaced by local scripts.&lt;/P&gt;&lt;P&gt;Customers like to run different pipelines, e.g., for distributing their critical and non-critical scenarios across different pipelines, or setting up different pipelines in a shared tenant environment. Also, it makes sense to define an own IDoc or XI inbound flow for each sender system to be able for instance to define a sender-specific user role or to stop incoming messages for a specific sender system. For those uses cases, so far you had to copy the package with the complete number of integration flows from the Discovery to the Design adding a suffix. This ensured that the copied packages were not cut off from future updates. However, downside was that this resulted in a large number of stale artifacts, so integration flows which were not used at all.&lt;/P&gt;&lt;P&gt;With the new package setup, we now better support those use cases without creating all those stale integration artifacts. The approach is still to copy a new package from the Discovery, but depending on the use case, you would only copy the integration flows which are required for the respective use case.&lt;/P&gt;&lt;P&gt;You can now find the generic integration flows and a set of templates for the scenario-specific integration flows and custom exits spread across the following integration packages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericInbound/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Inbound&lt;/A&gt;: Contains the generic IDoc and XI inbound flows.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericPipelines/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Pipelines&lt;/A&gt;: Contains the main generic pipeline steps.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericOutbound/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Outbound&lt;/A&gt;: Contains the generic outbound processing flow.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineTemplates/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Templates&lt;/A&gt;: Contains all templates for the scenario-specific flows and custom extensions.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;U&gt;Note&lt;/U&gt;: As said, &lt;STRONG&gt;the so far provided integration package will be deprecated soon&lt;/STRONG&gt;. All new feature increments will only be shipped with the new integration packages. So, If you have used the previously provided package, you need to switch to the new packages. To do so, &lt;STRONG&gt;proceed as follows&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Undeploy all generic flows from the soon to be deprecated package.&lt;/LI&gt;&lt;LI&gt;Configure and deploy the required generic flows provided by the new Cloud Integration Pipeline packages. You can either deploy all generic flows or just the ones that you need depending on which pipeline you use, see below.&lt;/LI&gt;&lt;LI&gt;If you have used scripts from the script collection in your scenario-specific flows, replace the scripts with local scripts. You find the local scripts in either the generic flows or the new templates. As long as you haven't replaced all scripts, recommendation is to still run the script collection. Once done, you can then also undeploy the script collection.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;U&gt;Note&lt;/U&gt;: In the newly shipped Cloud Integration packages, the name and IDs of the integration flows have version v2 added. It's important that the old integration flows and the new integration flows must not be deployed together because they compete on reading from the same JMS queues.&lt;/P&gt;&lt;P&gt;The templates package doesn't contain any artifact which needs to be deployed nor does it need to be transported to the production tenant. It only contains templates that you can copy to create your scenario-specific flows and custom flows. For this reason, we kept those integration flows in a separate package.&lt;/P&gt;&lt;P&gt;For setting up the integrated messaging runtime for asynchronous communication (recommended option for asynchronous communication), you need to deploy the following generic integration flows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally, if you like to use a single entry point for IDoc messages) Pipeline v2 Generic Step01 - Inbound Processing for Idoc&lt;/LI&gt;&lt;LI&gt;(Optionally, if you like to use a single entry point for XI messages) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Integrated Messaging Runtime Async&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step06 - Outbound Processing&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For setting up the integrated messaging runtime for synchronous content-based-router scenarios, you need to deploy the following generic integration flows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Integrated Messaging Runtime Sync&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For setting up the fully decoupled pipeline for asynchronous communication, you need to deploy the following integration flows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally) Pipeline v2 Generic Step01 - Inbound Processing for Idoc&lt;/LI&gt;&lt;LI&gt;(Optionally) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Inbound Processing&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step04 - Receiver Determination&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step05 - Interface Determination&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step06 - Outbound Processing&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All integration flows within the new Cloud Integration packages have been copied from the old package. Besides this, some new features have been added which I will soon describe in a bit more detail in a separate blog post. You also find this information in the change logs of the packages. Upfront, here some of the new features that we have shipped with the new packages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;For IDoc inbound scenarios where you exchange IDoc bulk messages, you have the option to keep the bulk, i.e., not to split the bulk message into individual messages.&lt;/LI&gt;&lt;LI&gt;You can now call a custom exit integration flow for custom pre-processing without the need to alter the standard generic flows of the pipeline. This can be configured globally or scenario-specific.&amp;nbsp;Potential use cases could be to implement additional external or internal logging capabilities or to stop certain messages from sending to the receiver systems based on some conditions, e.g. maintained in the Partner Directory.&lt;/LI&gt;&lt;LI&gt;A new template has been added that allows you to implement&amp;nbsp;custom receiver and interface determination by maintaining exchange properties. A similar approach is applied in the SAP Process Orchestration to Cloud Integration migration tool when selecting the standard migration approach for the Recipient List and Content-Based-Router patterns.&lt;/LI&gt;&lt;LI&gt;A new template has been added for an option to implement custom receiver determination based on a message mapping and by maintaining exchange properties for the interface determination. A similar approach is applied in the SAP Process Orchestration to Cloud Integration migration tool when selecting the Pipeline migration approach.&lt;/LI&gt;&lt;LI&gt;For the Outbound Processing templates, an option to call custom post-processing has been added.&lt;/LI&gt;&lt;LI&gt;We fixed an issue in the duplication check caused by a wrong usage of the escalation end event for the IDoc and XI inbound processing flow.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For more details, check out the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/pipelines" target="_blank" rel="noopener noreferrer"&gt;standard documentation&lt;/A&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339"/>
    <published>2025-08-08T15:08:45.923000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/guide-for-migrating-pi-po-b2b-mappings-to-integration-suite-b2b-tpm/ba-p/14186491</id>
    <title>Guide for migrating PI/PO B2B mappings to Integration Suite  B2B TPM</title>
    <updated>2025-08-21T15:48:51.091000+02:00</updated>
    <author>
      <name>DG</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3313</uri>
    </author>
    <content>&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;There are a few steps you need to take before you can use the Figaf tool to migrate the B2B scenarios. You need to setup an environment that will enable you to process the EDI setup.&lt;/P&gt;&lt;P&gt;Migrating B2B from PI to Integration Suite will be a demanding task, that will take you some time to get familiar with. But with this guide, you will learn how to complete a migration to having an operational B2B scenario in the Integration Suite, which can be validated and regression tested.&lt;/P&gt;&lt;P&gt;The task here is performed using Figaf tool, but they can also be performed manually though expect that it will take much longer time.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Notice this has been recorded on a preview of Figaf 2508, so if you are using older versions, there may be small differences.&lt;/P&gt;&lt;P&gt;Note, naming conventions: The naming conventions are essential for handling this in a larger perspective. &amp;nbsp;&amp;nbsp;There is a purpose for using all settings as specified in the videos.&lt;/P&gt;&lt;P&gt;Before you can get started with the migration, you should install Figaf in your own environment and configure it. The best guide is this&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://figaf.com/figaf-in-your-migration-project/" target="_blank" rel="noopener nofollow noreferrer"&gt;one&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;You will be taken through the following procedural steps:&lt;/P&gt;&lt;P&gt;– Prepare Company, no video for this, since this is a basis one-time task&lt;/P&gt;&lt;P&gt;– Prepare Partner Profiles, using the Figaf fast-track&lt;/P&gt;&lt;P&gt;– Prepare MIGs, and ideally MAGs&lt;/P&gt;&lt;P&gt;– Prepare Integration Suite TPM Agreement Templates, using naming conventions&lt;/P&gt;&lt;P&gt;– Perform migration of PI/PO Operation mapping to Integration Suite TPM&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1737926336"&gt;Create company&lt;/H2&gt;&lt;P&gt;You should have created your self as a company and if required, the subsidiaries you will be using. I would recommend you check how Figaf creates the Partner profiles and add Identifiers and Systems in the same way.&lt;/P&gt;&lt;H2 id="toc-hId-1541412831"&gt;Video Guide 1: Create B2B Partner Profiles&lt;/H2&gt;&lt;P&gt;See how the Figaf B2B “&lt;STRONG&gt;&lt;EM&gt;PI to CPI migration&lt;/EM&gt;&lt;/STRONG&gt;” menu’s fast-track feature “&lt;STRONG&gt;&lt;EM&gt;Create Partner Profiles&lt;/EM&gt;&lt;/STRONG&gt;“, will help you to quickly prepare all the partner profiles with corresponding systems and identifiers, for your PI B2B migrations.&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FuCtT9ylBygM%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DuCtT9ylBygM&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FuCtT9ylBygM%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="112" scrolling="no" title="B2B PI to CPI migration procedure prepare partner profiles" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1344899326"&gt;Video Guide 2: Creation of MIGs and MAGs&amp;nbsp;&lt;/H2&gt;&lt;P&gt;As apart of the preparation for your PI B2B migration, you will need to define all MIGs, and ideally also MAGs, so that you can proceed to the preparation of agreement templates.&lt;/P&gt;&lt;P&gt;When migrating a B2B solution from PI, you will not be needing the MAG, but having them in place, even as empty mappings, will ensure that your Agreement Templates are better aligned using correct MIGs. Preparing MAGs (complete or not) is not required for the migration process, but advisable.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FMPs-DKdJdQ8%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DMPs-DKdJdQ8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FMPs-DKdJdQ8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="112" scrolling="no" title="B2B PI to CPI migration procedure prepare MIGs and MAGs" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1148385821"&gt;Video Guide 3: B2B Agreement templates&lt;/H2&gt;&lt;P&gt;How to prepare the mandatory B2B Agreement Templates for your full B2B scope of message formats (typeSystems).&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F7_wuRcjEBzI%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D7_wuRcjEBzI&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F7_wuRcjEBzI%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="112" scrolling="no" title="B2B PI to CPI migration procedure prepare agreement templates" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-951872316"&gt;Video Guide 4: B2B Migration&lt;/H2&gt;&lt;P&gt;Now you are ready to perform the migration using Figaf’s “&lt;STRONG&gt;&lt;EM&gt;PI to CPI Migration”&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/STRONG&gt;menu.&lt;/P&gt;&lt;P&gt;In this video you can see how to perform the migration, and how to re-use your PI test cases for the newly created agreement.&lt;/P&gt;&lt;P&gt;You will also see, how the B2B scenarios are easier to manage and monitor in the Figaf “&lt;STRONG&gt;&lt;EM&gt;B2B”&lt;/EM&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;menu.&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2Ff-F6KrpCTnQ%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Df-F6KrpCTnQ&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2Ff-F6KrpCTnQ%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="112" scrolling="no" title="B2B PI to CPI migration procedure Operation mapping to CPI TPM with custom map" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/guide-for-migrating-pi-po-b2b-mappings-to-integration-suite-b2b-tpm/ba-p/14186491"/>
    <published>2025-08-21T15:48:51.091000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/integrating-sap-process-orchestration-into-an-event-driven-architecture/ba-p/14182634</id>
    <title>Integrating SAP Process Orchestration into an Event-Driven Architecture with SAP Advanced Event Mesh</title>
    <updated>2025-08-21T17:23:46.616000+02:00</updated>
    <author>
      <name>EHeinrich</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1485575</uri>
    </author>
    <content>&lt;P&gt;As organizations accelerate their digital transformation, event-driven architecture (EDA) has emerged as a powerful approach for building scalable, real-time, and loosely coupled systems. Solutions like &lt;SPAN&gt;SAP Advanced Event Mesh&amp;nbsp;&lt;/SPAN&gt;serve as enterprise-grade event brokers that support asynchronous messaging patterns across hybrid and cloud-native landscapes.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On the other end of the spectrum lies &lt;/SPAN&gt;&lt;SPAN&gt;SAP Process Orchestration -&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;a robust, time-tested middleware platform still running mission-critical integrations in many enterprises. While SAP has officially announced the end-of-life of SAP Process Orchestration, with long-term support ending in the coming years, replacing it entirely is often a long, phased journey.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This blog post is not about extending the life of SAP Process Orchestration indefinitely, but rather about &lt;/SPAN&gt;&lt;SPAN&gt;integrating it into your modern architecture&lt;/SPAN&gt;&lt;SPAN&gt;—&lt;/SPAN&gt;&lt;SPAN&gt;bridging the gap between legacy and modern systems&lt;/SPAN&gt;&lt;SPAN&gt;. By connecting SAP Process Orchestration to SAP Advanced Event Mesh via &lt;/SPAN&gt;&lt;SPAN&gt;JMS with JNDI&lt;/SPAN&gt;&lt;SPAN&gt;, you can start to decouple systems and adopt EDA principles &lt;/SPAN&gt;&lt;SPAN&gt;without a complete rip-and-replace&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We assume you're familiar with setting up scenarios in Process Orchestration, so we&lt;/SPAN&gt;&lt;SPAN&gt;’&lt;/SPAN&gt;&lt;SPAN&gt;ll skip over iFlow configuration and focus instead on:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="3"&gt;&lt;SPAN&gt;Deploying Solace JMS libraries in SAP Process Orchestration&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="3"&gt;&lt;SPAN&gt;Configuring SAP Advanced Event Mesh for JNDI (Java Naming and Directory Interface) support&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="3"&gt;&lt;SPAN&gt;Setting up the JMS receiver channel in Process Orchestration to connect to Advanced Event Mesh&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This approach provides a low-friction way to &lt;SPAN&gt;modernize the edge&lt;/SPAN&gt; of your SAP Process Orchestration integrations while planning for long-term migration. It enables you to &lt;SPAN&gt;offload responsibilities to the event broker&lt;/SPAN&gt;, reduce point-to-point connections, and pave the way for loosely coupled microservices or SAP Integration Suite adoption.&amp;nbsp;&lt;SPAN&gt;Let&lt;/SPAN&gt;&lt;SPAN&gt;’&lt;/SPAN&gt;&lt;SPAN&gt;s dive in.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Our integration scenario is as follows:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;REST Sender Adapter&lt;/STRONG&gt; receives a message from Postman or any REST client to reliably test the setup.&lt;/LI&gt;&lt;LI&gt;Process Orchestration routes the message to a &lt;STRONG&gt;JMS Receiver Adapter&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;The JMS Receiver connects to Advanced Event Mesh via JNDI, and publishes the message to a target &lt;STRONG&gt;queue&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Process Orchestration 7.5 or newer (Java-only stack preferred)&lt;/LI&gt;&lt;LI&gt;Access to SAP Advanced Event Mesh&lt;/LI&gt;&lt;LI&gt;Admin access to the Advanced Event Mesh Broker Manager for configuration&lt;/LI&gt;&lt;LI&gt;SAP NetWeaver Administrator access to deploy shared libraries&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Download the Solace JMS Library&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As with most integration scenarios with Advanced Event Mesh our first starting point is the&lt;STRONG&gt; Connect&lt;/STRONG&gt; tab of your&amp;nbsp;&lt;STRONG&gt;Cluster Manager&lt;/STRONG&gt;. We are interested in using the Solace JMS API which uses the Solace Message Format (SMF) as a protocol and can find all the information we need there:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="EHeinrich_0-1755606922405.png" style="width: 712px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302397iF4CB134CF04F07B5/image-dimensions/712x299?v=v2" width="712" height="299" role="button" title="EHeinrich_0-1755606922405.png" alt="EHeinrich_0-1755606922405.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Go to &lt;STRONG&gt;Get Started&lt;/STRONG&gt; to find further documentations of the API and more importantly downloads for the sol-jms library.&lt;/LI&gt;&lt;LI&gt;When choosing a version for the sol-jms library it is crucial to understand any required dependencies. Feel free to familiarize yourself with the Solace provided API documentation regarding supported Java environments and dependencies.&lt;BR /&gt;&lt;A href="https://docs.solace.com/API/Solace-JMS-API/JMS-API-supported-environments.htm" target="_blank" rel="noopener nofollow noreferrer"&gt;https://docs.solace.com/API/Solace-JMS-API/JMS-API-supported-environments.htm&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;For this blog I decided to go with a JMS 1.1 implementation which makes &lt;STRONG&gt;sol-jms-10.19.0&lt;/STRONG&gt; a good choice to keep dependencies to a minimum since as of version 10.20, the Solace Messaging API for JMS has a dependency on JMS 2.0 and would require a compatibility layer.&lt;/LI&gt;&lt;LI&gt;Using this version, the only dependencies needed in my case were&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Apache Commons Logging (This blog uses commons-logging-1.1.3)&lt;/LI&gt;&lt;LI&gt;A implementation of the JMS 1.1 specification for messaging in Java applications (This blog uses geronimo-jms_1.1_spec-1.1.1)&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;Feel free to experiment with different versions or even a JMS 2.0 implementation, but make sure to include dependencies accordingly!&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Deploy Solace JMS Library in SAP Process Orchestration&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Generally the activity of deploying external drivers such as JMS libraries into the Java stack of SAP Process Orchestration is done by Basis, so as a developer you might not necessarily have the required access and/or knowledge to perform this. The following is just an outline of the process. For more guidance refer to the following blog:&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-deploy-external-jms-and-jdbc-drivers-in-sap-po-7-5/ba-p/13429788" target="_blank"&gt;How to Deploy External JMS and JDBC drivers in SAP PO 7.5&lt;/A&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Package the relevant JAR files you identified in the previous section (sol-jms and dependencies) into a &lt;/SPAN&gt;&lt;SPAN&gt;Software Deployment Archive (SDA)&lt;/SPAN&gt;&lt;SPAN&gt;. You will either need to add the JAR files to the currently deployed SDA of your Process Orchestration or deploy a new one from scratch.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;After creating your SDA deploy it to the Java stack. This can be done for example using SAP NetWeaver Developer Studio&amp;nbsp;(NWDS) and requires administrator access.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;After successful deployment you should be able to find your resources in the Java Class Loader:&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="EHeinrich_1-1755607001883.png" style="width: 564px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302398iDEBC56E3568598FF/image-dimensions/564x302?v=v2" width="564" height="302" role="button" title="EHeinrich_1-1755607001883.png" alt="EHeinrich_1-1755607001883.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Configure JNDI in SAP Advanced Event Mesh&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To facilitate establishing the JMS connection between SAP Process Orchestration and SAP Advanced Event Mesh in the easiest way possible we are going to make use of JNDI. While it is most certainly possible to setup a generic JMS Receiver in Process Orchestration without JNDI it will not be covered in this blog. Instead head to your Advanced Event Mesh Console to:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Enable JNDI Access&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Select your Broker in the &lt;STRONG&gt;Cluster Manager&lt;/STRONG&gt; and open the corresponding &lt;STRONG&gt;Broker Manager.&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Navigate to &lt;STRONG&gt;Messaging &amp;gt; JMS JNDI&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Enable JNDI if not yet enabled under &lt;STRONG&gt;JNDI Settings&lt;/STRONG&gt; and create a &lt;STRONG&gt;JNDI Connection Factory&lt;/STRONG&gt;.&lt;UL&gt;&lt;LI&gt;In this example I chose &lt;STRONG&gt;/JNDI/TEST&lt;/STRONG&gt; for the Connection Factory&lt;/LI&gt;&lt;LI&gt;The rest of the Connection Factory settings are left at default, but feel free to adjust transport properties as necessary.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="EHeinrich_1-1755505231893.png" style="width: 900px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301856i66081B717E3BC795/image-dimensions/900x90?v=v2" width="900" height="90" role="button" title="EHeinrich_1-1755505231893.png" alt="EHeinrich_1-1755505231893.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Define the Queue&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Go to &lt;STRONG&gt;Messaging &amp;gt; Queues&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Create a &lt;STRONG&gt;Queue &lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;In this case I called it &lt;STRONG&gt;T28_JMS&lt;/STRONG&gt; according to the ID of my SAP Process Orchestration system, adjust as necessary&lt;/LI&gt;&lt;LI&gt;Ensure is enabled and properly permissioned.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Bind Queue and Connection Factory to JNDI&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Under &lt;STRONG&gt;JMS JNDI &amp;gt; Queues&lt;/STRONG&gt;, create a new JMS Queue&lt;UL&gt;&lt;LI&gt;The JNDI Name defines how we are going to address this queue from Process Orchestration. I chose is &lt;STRONG&gt;/JNDI/T28_JMS&lt;/STRONG&gt; to keep naming consistent with the..&lt;/LI&gt;&lt;LI&gt;Physical Name, where you select the actual queue you just created in Advanced Event Mesh&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="EHeinrich_2-1755505231893.png" style="width: 893px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301855i4940E16788531DAB/image-dimensions/893x108?v=v2" width="893" height="108" role="button" title="EHeinrich_2-1755505231893.png" alt="EHeinrich_2-1755505231893.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: Configure JMS Receiver Channel in SAP Process Orchestration&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here&lt;/SPAN&gt;&lt;SPAN&gt;’&lt;/SPAN&gt;&lt;SPAN&gt;s the setup of the JMS Receiver Adapter:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="EHeinrich_2-1755607127079.png" style="width: 719px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302400i4E03958B5F82CB17/image-dimensions/719x250?v=v2" width="719" height="250" role="button" title="EHeinrich_2-1755607127079.png" alt="EHeinrich_2-1755607127079.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Parameters:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Adapter Type: JMS&lt;/LI&gt;&lt;LI&gt;Transport Protocol: Access JMS Provider with JNDI&lt;/LI&gt;&lt;LI&gt;Message Protocol: JMS 1.x&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Connection Parameters:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Name of JNDI Initial Context Factory:&lt;BR /&gt;&lt;STRONG&gt;com.solacesystems.jndi.SolJNDIInitialContextFactory &lt;/STRONG&gt;is the initial Context Factory provided by the sol-jms library&lt;/LI&gt;&lt;LI&gt;JNDI Lookup Name of Topic/QueueConnectionFactory &amp;amp; JMS Queue/Topic:&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;This is what we just created in the Advanced Event Mesh, in my case &lt;STRONG&gt;/JNDI/TEST&lt;/STRONG&gt; and &lt;STRONG&gt;/JNDI/T28_JMS&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;JNDI Server Address,&amp;nbsp; Logon User &amp;amp; Password:&lt;BR /&gt;You can find the Server Address and credentials for the default user &lt;STRONG&gt;solace-cloud-client &lt;/STRONG&gt;under the Connect tab in the Cluster Manager of your AEM broker where we got the sol-jms library in the beginning. Be sure to include the Message VPN in the JNDI Logon User with an '@' symbol.&lt;/LI&gt;&lt;LI&gt;The solace-cloud-client user should only be used for development purposes. Be sure to create a proper client via &lt;STRONG&gt;Broker Manager&lt;/STRONG&gt; &amp;gt; &lt;STRONG&gt;Access Control&lt;/STRONG&gt; in your Advanced Event Mesh for productive use.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;After configuring your JMS Receiver Adapter make sure the other parts of this scenario are ready as well and activate them.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5: Test via the REST API platform of your choice&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Send a test payload to your REST endpoint. In my case I will send a very basic XML message.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="EHeinrich_3-1755607447243.png" style="width: 614px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302408i096D1256AE9C1CE0/image-dimensions/614x149?v=v2" width="614" height="149" role="button" title="EHeinrich_3-1755607447243.png" alt="EHeinrich_3-1755607447243.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;The scenario processes and routes the message to the JMS Receiver channel.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="EHeinrich_4-1755607492436.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302410i45954DCA7667CECB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="EHeinrich_4-1755607492436.png" alt="EHeinrich_4-1755607492436.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;The Message will get published to the queue specified in Advanced Event Mesh. You can monitor this by checking in the &lt;STRONG&gt;Broker Manager &amp;gt; Queues&lt;/STRONG&gt; that your queue is receiving messages.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="EHeinrich_5-1755505231896.png" style="width: 889px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301859i690D73DF86A5E529/image-dimensions/889x80?v=v2" width="889" height="80" role="button" title="EHeinrich_5-1755505231896.png" alt="EHeinrich_5-1755505231896.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Troubleshooting Tips&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;ClassNotFoundException&lt;/STRONG&gt;: Ensure the sol-jms library and dependencies are correctly deployed.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;JNDI Lookup Failures&lt;/STRONG&gt;: Confirm the JNDI names in Process Orchestration match exactly with those configured in Advanced Event Mesh.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Security Errors&lt;/STRONG&gt;: Check that the user has appropriate permissions in the Advanced Event Mesh broker.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Connecting SAP Process Orchestration with SAP Advanced Event Mesh using JMS and JNDI offers a powerful way to bridge synchronous process-driven integrations with event-driven systems. With Solace&lt;/SPAN&gt;&lt;SPAN&gt;’&lt;/SPAN&gt;&lt;SPAN&gt;s sol-jms library and proper JNDI configuration, you can seamlessly push data to Advanced Event Mesh queues and unlock real-time integration patterns across your landscape.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;While this blog focused on configuring &lt;STRONG&gt;JMS and JNDI for queue-based messaging&lt;/STRONG&gt;, which is ideal for point-to-point delivery and tightly scoped integrations, it’s worth noting that a &lt;STRONG&gt;topic-based architecture may be better aligned with future-facing, event-driven designs&lt;/STRONG&gt;. Topics enable a publish-subscribe model, allowing multiple systems to consume the same event independently and asynchronously—an essential pattern for building scalable, loosely coupled microservices. As you modernize your integration landscape and move toward more reactive architectures, consider evolving from queue-based patterns to &lt;STRONG&gt;topic-driven messaging&lt;/STRONG&gt; to fully embrace the benefits of event-driven architecture.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/integrating-sap-process-orchestration-into-an-event-driven-architecture/ba-p/14182634"/>
    <published>2025-08-21T17:23:46.616000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/migration-sap-pi-po-to-sap-cloud-integration-using-pipeline-concepts/ba-p/14189135</id>
    <title>Migration SAP PI/PO to SAP Cloud Integration using Pipeline concepts</title>
    <updated>2025-09-02T07:15:42.965000+02:00</updated>
    <author>
      <name>Sathish_Kumar_BP</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1644462</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Dear SAP consultants:&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;I have been working on migrating from SAP PI/PO to SAP Cloud Integration, and I would like to share my experience with the Pipeline concept introduced by SAP for migration projects. Since there are not many blogs or discussions on this topic, I thought it would be helpful to share&amp;nbsp;my experience.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Let’s quickly recap SAP PI/PO. In PI/PO, we usually create common IDOC and proxy channels to connect SAP ERP with the PI/PO system for both outbound and inbound communication. A single IDOC &amp;amp; Proxy channel can be reused across multiple flows/scenarios. If needed, we can also create multiple IDOC channels using the same destination in SM59. However, this approach doesn’t work the same way in SAP Cloud Integration. One HTTP destination can’t be used for multiple flow.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;EM&gt;&lt;STRONG&gt;Example&lt;/STRONG&gt;: i&lt;/EM&gt;&lt;EM&gt;f there are 100 IDOC flows from SAP ERP to SAP Cloud Integration, we need to create 100 separate HTTP destinations - each one mapped to its corresponding iFlow endpoint. Unlike PI/PO, where a single destination could be reused, SAP CI requires a unique destination per flow.&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;I believe this was the initial perspective of most SAP PI/PO consultants, but with SAP’s continuous support, better approaches are being discovered day by day.&lt;/SPAN&gt;&lt;BR /&gt;Since we all started the migration journey some time ago, there are many ways to handle the IDOC and proxy scenarios.&lt;BR /&gt;However, one of the best ways to use the &lt;STRONG&gt;Pipeline concept&lt;/STRONG&gt; for &lt;STRONG&gt;Asynchronous Pattern&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;I will try to explain in simple terms.&lt;/P&gt;&lt;OL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;P&gt;We require to use the Standard Pipeline Template provided by SAP.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;JMS queues&amp;nbsp; for retry mechanism.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Partner Directory setup&amp;nbsp; for each IDOC/proxy flow.&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Let’s discuss end to end &lt;STRONG&gt;Outbound IDOC scenario&lt;/STRONG&gt; to understand more.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;U&gt;&lt;STRONG&gt;1.&amp;nbsp;&lt;U&gt;We r&lt;/U&gt;equire to use the Standard Pipeline Template provided by SAP:&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-30px" style="text-align : justify; padding-left : 30px;"&gt;Copy the Standard Package&amp;nbsp; “&lt;SPAN&gt;&lt;STRONG&gt;Process Integration Pipeline - Generic Integration Flows &amp;amp; Templates&lt;/STRONG&gt;“&lt;/SPAN&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_1-1755979016278.png" style="width: 536px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304305iB75EC1CC92FBAE62/image-dimensions/536x189?v=v2" width="536" height="189" role="button" title="Sathish_Kumar_BP_1-1755979016278.png" alt="Sathish_Kumar_BP_1-1755979016278.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Deploy the below highlighted iFlows.&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_0-1755981522204.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304307i6B456A959696851F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Sathish_Kumar_BP_0-1755981522204.png" alt="Sathish_Kumar_BP_0-1755981522204.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Pipeline Generic - Script Collection: &lt;/SPAN&gt;&lt;/STRONG&gt;Deploy the common scripts collection package will be used across the pipeline steps.&lt;BR /&gt;&lt;BR /&gt;&lt;U&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Step 01&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/U&gt;: &lt;STRONG&gt;&lt;SPAN&gt;Pipeline Generic Step01 - Inbound Processing for Idoc&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;Deploy and use end point of this iFlow in HTTP destination created in SAP system.&lt;BR /&gt;So, the connection established and when IDOC triggered – it will point to this flow.&lt;BR /&gt;Basically, this flow will receive the IDOC from SAPERP and send to JMS Queue &lt;STRONG&gt;PIPQ01.&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;U&gt;Step 02&lt;/U&gt;:&lt;/STRONG&gt;&lt;STRONG&gt; &lt;SPAN&gt;Pipeline Generic Step02 - Inbound Processing&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;The flow will pick the messages from first JMS queue &lt;STRONG&gt;PIPQ01&lt;/STRONG&gt; and run through flow by determining the partner ID which is created in Partner directory. (will discuss this part below) then will drop to JMS queue &lt;STRONG&gt;PIPQ02&lt;/STRONG&gt;.&lt;BR /&gt;If any issue occurs during this flow, it will be go back to PIPQ01_DLQ(first flow dead letter queue) after max retries.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px lia-align-left" style="padding-left : 30px; text-align : left;"&gt;&lt;STRONG&gt;&lt;U&gt;Step 03&lt;/U&gt;:&lt;/STRONG&gt;&lt;STRONG&gt; &lt;SPAN&gt;Pipeline Generic Step04 - Receiver Determination&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;This step to find the receiver using XSLT mapping maintained in Partner directory. We will have to prepare the XSLT mapping and define the condition, upload it partner directory.&lt;BR /&gt;The flow will pick the messages from second JMS queue &lt;STRONG&gt;PIPQ02&lt;/STRONG&gt; and run through the iFlow to check the receiver --&amp;gt; then drop the message to JMS queue &lt;STRONG&gt;PIPQ03&lt;/STRONG&gt;.&lt;BR /&gt;If any issue occurs, receiver determination step failed them it will be moved to last step dead letter queue after retries i.e PIPQ02_DLQ.&lt;BR /&gt;&lt;BR /&gt;&lt;U&gt;&lt;STRONG&gt;Step 04&lt;/STRONG&gt;&lt;/U&gt;: &lt;STRONG&gt;Pipeline Generic Step05 - Interface Determination&lt;/STRONG&gt;&lt;BR /&gt;Again in the same way, the Integration flow will pick the messages from third JMS queue &lt;STRONG&gt;PIPQ03&lt;/STRONG&gt; and find interface mapping path and drop the messages to last fourth queue &lt;STRONG&gt;PIPQ04&lt;/STRONG&gt;.&lt;BR /&gt;If this iFlow fails with issue then message moved back to last step Dead letter queue i.e PIPQ03_DLQ&lt;BR /&gt;&lt;BR /&gt;&lt;U&gt;&lt;STRONG&gt;Step 05&lt;/STRONG&gt;&lt;/U&gt;: &lt;STRONG&gt;Pipeline Generic Step06 - Outbound Processing&lt;/STRONG&gt;&lt;BR /&gt;Outbound processing step will pick the message from JMS queue &lt;STRONG&gt;PIPQ04&lt;/STRONG&gt; and identify the next iFlow. (based on process direct adapter path) and send messages to corresponding iFlow.&lt;BR /&gt;If this iFlow fails with issue then message moved back to last step Dead letter queue i.e PIPQ04_DLQ&lt;BR /&gt;&lt;BR /&gt;&lt;U&gt;&lt;STRONG&gt;Step 06&lt;/STRONG&gt;&lt;/U&gt;:&lt;STRONG&gt; (scenario specific flow- you can use custom names)&lt;/STRONG&gt;&lt;BR /&gt;In this flow Mapping conversion and connection to receiver. We have SAP provided templates as well for this step, however I haven’t used them. Created own custom Integration flow to handle the mapping and connection to receiver.&lt;BR /&gt;If any issue occurs the message will be failed status and &lt;SPAN&gt;message processing is then retried from the last integration flow.&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;We can migrate/import mapping from SAP PO ESR to custom last step iFlow.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;The process direct adapter channel path should match the one defined in the interface determination mapping.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Below table&amp;nbsp;summarizes&lt;SPAN&gt;&amp;nbsp; a&lt;/SPAN&gt;ll pipeline steps and how the integration flow works:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_0-1756363851052.png" style="width: 605px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305740i4A2AE75B041C857C/image-dimensions/605x521?v=v2" width="605" height="521" role="button" title="Sathish_Kumar_BP_0-1756363851052.png" alt="Sathish_Kumar_BP_0-1756363851052.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;U&gt;&lt;STRONG&gt;2.&amp;nbsp;JMS queues required for retry mechanism:&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-30px" style="text-align : justify; padding-left : 30px;"&gt;Required total 8 JMS queues. 4 normal queues and 4 dead letter queues to handle the retry mechanism&lt;EM&gt;. &lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-30px" style="text-align : justify; padding-left : 30px;"&gt;&lt;EM&gt;(PIPQ01, PIPQ01_DLQ, PIPQ02, PIPQ02_DLQ, PIPQ03, PIPQ03_DLQ, PIPQ04, PIPQ04_DLQ)&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-30px" style="text-align : justify; padding-left : 30px;"&gt;Once we deploy the above standard SAP iFlows - the below JMS queues will automatically created.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_8-1755985391450.png" style="width: 666px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304315iBA169E992EAA3526/image-dimensions/666x343?v=v2" width="666" height="343" role="button" title="Sathish_Kumar_BP_8-1755985391450.png" alt="Sathish_Kumar_BP_8-1755985391450.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;U&gt;&lt;STRONG&gt;3. Partner Directory:&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-30px" style="text-align : justify; padding-left : 30px;"&gt;Create the PID for each interface.&lt;BR /&gt;&lt;STRONG&gt;PID&lt;/STRONG&gt; is combination of sender system and sender interface name&lt;BR /&gt;Example: &lt;STRONG&gt;SAPCLNT100~ORDERS.ORDERS05&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/STRONG&gt;&lt;EM&gt;&amp;lt;sendersystem&amp;gt;~&amp;lt;senderInterfacename&amp;gt;&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_3-1755979016288.png" style="width: 453px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304304i7B0D3541B9753B3F/image-dimensions/453x205?v=v2" width="453" height="205" role="button" title="Sathish_Kumar_BP_3-1755979016288.png" alt="Sathish_Kumar_BP_3-1755979016288.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;Entity Type:&amp;nbsp;&lt;STRONG&gt;String Parameter&lt;/STRONG&gt;: we use this parameter to maintain the JMS retries count.&lt;BR /&gt;ID: MaxJMSRetries&lt;BR /&gt;Value: 3 or 4, If message fails in any pipeline step based on this value, it retries count intervals.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_5-1755984334996.png" style="width: 636px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304312i3BED30A733D5356C/image-dimensions/636x166?v=v2" width="636" height="166" role="button" title="Sathish_Kumar_BP_5-1755984334996.png" alt="Sathish_Kumar_BP_5-1755984334996.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Binary Parameter&lt;/STRONG&gt;: we use this parameter to upload the xsl mapping code for receiver and interface determination.&lt;BR /&gt;ID = &lt;STRONG&gt;receiverDetermination&lt;/STRONG&gt;&lt;BR /&gt;ID = &lt;STRONG&gt;interfaceDetermination_&amp;lt;ReceiverName&amp;gt;&lt;/STRONG&gt;&lt;BR /&gt;Create the XSLT mapping for both receiver determination and interface determination and upload.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_4-1755984200533.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304311iA554FB050030A037/image-size/large?v=v2&amp;amp;px=999" role="button" title="Sathish_Kumar_BP_4-1755984200533.png" alt="Sathish_Kumar_BP_4-1755984200533.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Whatever the receivername you maintained in the receiver determination, will be automatically taken that name in interfaceDetermination_"Receivername" – so use the same name in ID. Else it will be failed with error.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Sample XSLT code for receiver determination:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;xsl:stylesheet version="3.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&amp;gt;
    &amp;lt;xsl:template match="/"&amp;gt;
        &amp;lt;ns0:Receivers xmlns:ns0="http://sap.com/xi/XI/System"&amp;gt;
            &amp;lt;xsl:choose&amp;gt;
                &amp;lt;xsl:when test="/ORDERS05/IDOC/EDI_DC40/RCVPRN = 'Germany'"&amp;gt;
                    &amp;lt;Receiver&amp;gt;
                        &amp;lt;Service&amp;gt;GermanyBMW&amp;lt;/Service&amp;gt;
                    &amp;lt;/Receiver&amp;gt;
                &amp;lt;/xsl:when&amp;gt;
                &amp;lt;xsl:otherwise&amp;gt;
                    &amp;lt;Receiver&amp;gt;
                        &amp;lt;Service&amp;gt;NotDefined&amp;lt;/Service&amp;gt;
                    &amp;lt;/Receiver&amp;gt;
                &amp;lt;/xsl:otherwise&amp;gt;
            &amp;lt;/xsl:choose&amp;gt;
        &amp;lt;/ns0:Receivers&amp;gt;
    &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;sample XSLT code for interface determination:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;xsl:stylesheet version="3.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&amp;gt;
  &amp;lt;xsl:template match="/"&amp;gt;
    &amp;lt;ns0:Interfaces xmlns:ns0="http://sap.com/xi/XI/System"&amp;gt;
      &amp;lt;Interface&amp;gt;
        &amp;lt;Index&amp;gt;1&amp;lt;/Index&amp;gt;
        &amp;lt;Service&amp;gt;Integration_Mapping_Step_and_Connection_to_Receiver_Step07&amp;lt;/Service&amp;gt;
      &amp;lt;/Interface&amp;gt;
    &amp;lt;/ns0:Interfaces&amp;gt;
  &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;BR /&gt;&lt;STRONG&gt;Alternative Partners&lt;/STRONG&gt;&lt;BR /&gt;Agency: SenderSystem Name (SAPERP)&lt;BR /&gt;Scheme: &lt;SPAN&gt;SenderInterface&lt;/SPAN&gt;&lt;BR /&gt;ID: SenderInterfaceName&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_6-1755984464983.png" style="width: 636px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304313iBDDA121EB1E9417F/image-dimensions/636x158?v=v2" width="636" height="158" role="button" title="Sathish_Kumar_BP_6-1755984464983.png" alt="Sathish_Kumar_BP_6-1755984464983.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;FONT size="4"&gt;The same way we can add more entries in partner directory for different interfaces.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;FONT size="4"&gt;ex:&lt;FONT size="3"&gt;&amp;nbsp;SAPCLNT100~SHPMNT.SHPMNT06&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="3"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SAPCLNT100~CustomerData_Out&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="3"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;etc...&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Testing:&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;We are ready to test now. Let's do it.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;I have triggered test IDOC from ERP and below is the message flow of all pipeline steps handled.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_0-1755987913322.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304317i0966424573CCBAC4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Sathish_Kumar_BP_0-1755987913322.png" alt="Sathish_Kumar_BP_0-1755987913322.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I hope this provides useful insights into migration from SAP PI/PO to Cloud Integration for handling IDOC asynchronous scenarios.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Advantages&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Design&lt;/STRONG&gt;: Pipeline steps break down integration flow into&amp;nbsp;&lt;STRONG&gt;clear, manageable steps&lt;/STRONG&gt;&amp;nbsp;(ex: sender, processing, receiver). This makes it easier to&amp;nbsp;&lt;STRONG&gt;design, debug, and maintain&lt;/STRONG&gt;&amp;nbsp;integration scenarios.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Re-try mechanisms&lt;/STRONG&gt;. Since all pipeline steps decoupled, JMS queues handle the automatic retry to process if the messages fail.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Monitoring&lt;/STRONG&gt;: &lt;SPAN&gt;Each pipeline step can be monitored individually, helping identify&amp;nbsp;&lt;STRONG&gt;bottlenecks or failures&lt;/STRONG&gt;&amp;nbsp;quickly.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Easy Migration&lt;/STRONG&gt;: &lt;SPAN&gt;We &amp;nbsp;just needed to import the mapping from SAP PO - everything else is already available in the pipeline template to complete the integration.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Reference:&amp;nbsp;&lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/pipeline-steps?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Fully Decoupled Pipeline&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Regards,&lt;BR /&gt;Sathish Kumar B P&amp;nbsp;&lt;BR /&gt;SAP Integration Developer&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/migration-sap-pi-po-to-sap-cloud-integration-using-pipeline-concepts/ba-p/14189135"/>
    <published>2025-09-02T07:15:42.965000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/sap-po-graphql-integration-with-xslt-mapping/ba-p/14205967</id>
    <title>SAP PO GraphQL Integration with XSLT Mapping</title>
    <updated>2025-09-03T13:54:39.355000+02:00</updated>
    <author>
      <name>DenizZilyas</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/171723</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In most SAP projects, integrations are built using REST or OData. But in some cases, modern systems require &lt;STRONG&gt;GraphQL&lt;/STRONG&gt; (&lt;EM&gt;Graph Query Language&lt;/EM&gt;), a query language and runtime for APIs that allows clients to request exactly the data they need. When calling a GraphQL service from SAP PO, the service expects &lt;EM&gt;application/json&lt;/EM&gt;, which means we need a transformation step. Using &lt;STRONG&gt;XSLT mapping&lt;/STRONG&gt;, we converted the XML request into the JSON format GraphQL understands and executed the call successfully. In this post, I’ll walk you through how we set this up and what we learned along the way.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Note: In this scenario, no authentication was required since the GraphQL service was internal and not exposed externally. However, if the service had been publicly accessible, common security mechanisms such as &lt;STRONG&gt;OAuth 2.0&lt;/STRONG&gt;, &lt;STRONG&gt;JWT tokens&lt;/STRONG&gt;, or &lt;STRONG&gt;API Keys&lt;/STRONG&gt; would typically be implemented. On the SAP PO side, this would be handled by configuring the HTTP/REST adapter to pass the necessary headers (e.g., Authorization: Bearer &amp;lt;token&amp;gt;), ensuring secure communication.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Scenario:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Request Example:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_0-1756896391176.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308493i8FF4395C4307091D/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_0-1756896391176.png" alt="DenizZilyas_0-1756896391176.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Response Example:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_1-1756896728088.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308495i49DEAF33C592AA26/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_1-1756896728088.png" alt="DenizZilyas_1-1756896728088.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create Data Type, Message Type , Service Interfaces&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Data Type Request:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For this scenario, I defined a dummy field named query. The GraphQL request is embedded into this field and then passed to the target service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_2-1756897004147.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308497i6E71A5C629C01574/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_2-1756897004147.png" alt="DenizZilyas_2-1756897004147.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Data Type Response:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You can either create the response message as a Data Type (DT) or convert it into an XSD and import it into PO as an External Definition. I converted it into an XSD and imported it into PO as an External Definition.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Message Type Request :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_3-1756897170211.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308502i488BC5DBBA52C4D9/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_3-1756897170211.png" alt="DenizZilyas_3-1756897170211.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Service Interfaces:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We also create our Service Interfaces — &lt;STRONG&gt;one inbound and one outbound&lt;/STRONG&gt; — and, as usual, place our request and response messages accordingly.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_5-1756897322896.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308508i84F51FCA5FAAA945/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_5-1756897322896.png" alt="DenizZilyas_5-1756897322896.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: XSLT Mapping&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;lt;xsl:stylesheet version="1.0" xmlns:xsl="&lt;A href="http://www.w3.org/1999/XSL/Transform" target="_blank" rel="nofollow noopener noreferrer"&gt;http://www.w3.org/1999/XSL/Transform&lt;/A&gt;"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;lt;xsl:output method="text" encoding="UTF-8"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;lt;xsl:template match="/"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;lt;xsl:variable name="q1" select="string(/*/*[local-name()='query'])"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:variable name="q"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:choose&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:when test="string-length($q1) &amp;amp;gt; 0"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:value-of select="$q1"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:when&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:otherwise&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:value-of select="string(/*)"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:otherwise&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:choose&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:variable&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:text&amp;gt;{ "query":"&amp;lt;/xsl:text&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:call-template name="escape-json"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="s" select="string($q)"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:call-template&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:text&amp;gt;" }&amp;lt;/xsl:text&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;lt;/xsl:template&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;lt;!-- JSON escape: \&amp;nbsp; "&amp;nbsp; LF&amp;nbsp; CR&amp;nbsp; TAB --&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;lt;xsl:template name="escape-json"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:param name="s"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;!-- \ -&amp;gt; \\ --&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:variable name="step1"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:call-template name="replace"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="text" select="$s"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="search" select="'\'"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="repl" select="'\\'"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:call-template&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:variable&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;!-- " -&amp;gt; \" (XML için &amp;amp;quot; kullan) --&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:variable name="step2"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:call-template name="replace"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="text"&amp;nbsp;&amp;nbsp; select="string($step1)"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="search" select="'&amp;amp;quot;'"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="repl"&amp;nbsp;&amp;nbsp; select="'\&amp;amp;quot;'"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:call-template&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:variable&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;!-- LF, CR, TAB --&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:variable name="step3"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:call-template name="replace"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="text" select="string($step2)"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="search" select="'&amp;amp;#10;'"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="repl" select="'\n'"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:call-template&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:variable&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:variable name="step4"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:call-template name="replace"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="text" select="string($step3)"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="search" select="'&amp;amp;#13;'"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="repl" select="'\r'"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:call-template&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:variable&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:variable name="step5"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:call-template name="replace"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="text" select="string($step4)"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="search" select="'&amp;amp;#9;'"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="repl" select="'\t'"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:call-template&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:variable&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:value-of select="string($step5)"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;lt;/xsl:template&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;lt;!-- basic replace --&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;lt;xsl:template name="replace"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:param name="text"/&amp;gt;&amp;lt;xsl:param name="search"/&amp;gt;&amp;lt;xsl:param name="repl"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:choose&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:when test="contains($text, $search)"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:value-of select="substring-before($text, $search)"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:value-of select="$repl"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:call-template name="replace"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="text" select="substring-after($text, $search)"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="search" select="$search"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:with-param name="repl" select="$repl"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:call-template&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:when&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:otherwise&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;xsl:value-of select="$text"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:otherwise&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/xsl:choose&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;lt;/xsl:template&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The purpose of this XSLT mapping is to transform the XML structure coming from SAP into the JSON format required by the GraphQL service. More specifically, it extracts the GraphQL query string from the XML payload and embeds it into the query field of the JSON request body. Without this step, the GraphQL service would not accept the request, since it only supports application/json.&lt;/P&gt;&lt;P&gt;We import the XSLT mapping into PO as an imported archive.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_6-1756897593881.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308512iDB1BEDB9D39CC29A/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_6-1756897593881.png" alt="DenizZilyas_6-1756897593881.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3 : Message Mappings&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;If there is no need for a custom graphical mapping, we perform a one-to-one mapping.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_7-1756897754524.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308517i1C2FD2EC64B28F43/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_7-1756897754524.png" alt="DenizZilyas_7-1756897754524.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: Operation Mapping &amp;amp; Test&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the Operation Mapping, we place our one-to-one mapping as the first step, and then add a second step for the XSLT mapping.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_9-1756898802832.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308522i19C91DF83CF54239/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_9-1756898802832.png" alt="DenizZilyas_9-1756898802832.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_8-1756898141301.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308519iE5F3170088E06346/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_8-1756898141301.png" alt="DenizZilyas_8-1756898141301.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;We have successfully tested our XSLT mapping. For guidance on sending GraphQL requests with an &lt;STRONG&gt;application/json&lt;/STRONG&gt; body, you can refer to the official GraphQL documentation or your server’s implementation guide;&lt;/P&gt;&lt;P&gt;&lt;A title="Make a GraphQL call" href="https://learning.postman.com/docs/sending-requests/graphql/graphql-http/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://learning.postman.com/docs/sending-requests/graphql/graphql-http/&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Test XML :&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;lt;ns0:MT_getFlightLegList_Req xmlns:ns0=&lt;A href="http://sunexpress.com/RIVER" target="_blank" rel="noopener nofollow noreferrer"&gt;*&lt;/A&gt;*******************************&amp;gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;query&amp;gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;lt;![CDATA[&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Your GraphQL Request&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; ]]&amp;gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;lt;/query&amp;gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;lt;/ns0:MT_getFlightLegList_Req&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5: Integrated Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Since PO does not have a GraphQL adapter, we will use REST. We create a standard REST Receiver adapter, and because the call from SAP will come via proxy, our sender is the SOAP XI adapter.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Rest Receiver Data Format Step:&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_10-1756899004403.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308525iD237B04487A2D657/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_10-1756899004403.png" alt="DenizZilyas_10-1756899004403.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Remember that we’ve converted the payload into the JSON format accepted by the service using XSLT.&amp;nbsp;In other words, our adapter will receive a structure in JSON format.&lt;/P&gt;&lt;P&gt;We create the standard Integrated Configuration (ICO) and activate the scenario.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6: Testing&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You can use &lt;STRONG&gt;Send Message&lt;/STRONG&gt; to test.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_11-1756899312214.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308527i4CA67375C0B60516/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_11-1756899312214.png" alt="DenizZilyas_11-1756899312214.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Monitoring:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Request BI Step:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_12-1756899393194.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308528i18AA2967A4A1626F/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_12-1756899393194.png" alt="DenizZilyas_12-1756899393194.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;After Mapping Step:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_13-1756899587106.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308531iA2EF614E434BCED6/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_13-1756899587106.png" alt="DenizZilyas_13-1756899587106.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Response :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As the response includes personal data, I cannot share it. Nevertheless, this confirms that the request was successfully executed and a response was returned.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_15-1756899935424.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308538i8EF276CBF3B0BC23/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_15-1756899935424.png" alt="DenizZilyas_15-1756899935424.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;NOTE: There are scenarios where combining a Message Type with an External Definition in the same Service Interface prevents ABAP proxy generation in SAP. To mitigate this risk, ensure consistency by using the same artifact type (either Message Type or External Definition) on both request and response.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Thank you,&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Deniz Z.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/sap-po-graphql-integration-with-xslt-mapping/ba-p/14205967"/>
    <published>2025-09-03T13:54:39.355000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/everything-you-need-to-move-to-sap-integration-suite/ba-p/14218927</id>
    <title>Everything you need to move to SAP Integration Suite</title>
    <updated>2025-09-16T16:54:10.020000+02:00</updated>
    <author>
      <name>Manuel_Namyslo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/97167</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;Introduction - Why Now Is the Moment to Modernize Your SAP Integrations&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Digital leaders are defined by the ease with which they connect people, data and processes. Yet many SAP customers still rely on &lt;STRONG&gt;SAP Process Integration/Process Orchestration (PI/PO)&lt;/STRONG&gt; or &lt;STRONG&gt;SAP Cloud Integration (Neo environment)&lt;/STRONG&gt;— platforms that have served well for years but were designed for a very different era of IT.&lt;/P&gt;&lt;P&gt;Today’s reality is hybrid and multi-cloud. Applications span on-premise data centres, hyperscalers and SaaS solutions; business models evolve in weeks, not years; and customers expect real-time, event-driven experiences. In this landscape, integration is no longer a back-office utility—it is the strategic backbone that powers innovation, agility and growth.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; is SAP’s answer to this new paradigm: a modern, enterprise-grade iPaaS that unifies API-led, event-driven and process integrations under one roof. With 200-plus connectors, AI-assisted tooling, and flexible deployment options across any major cloud, it’s purpose-built to help you:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Retire technical debt&lt;/STRONG&gt; by moving from aging middleware to a future-proof platform.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Accelerate time-to-value&lt;/STRONG&gt; with pre-packaged integration content and proven migration tools.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Operate hybrid at scale&lt;/STRONG&gt;—bridge on-premise systems with cloud applications seamlessly.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This blog series is a practical guide for two key audiences:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;PI/PO customers&lt;/STRONG&gt; planning a phased or full migration from on-premise middleware to the cloud.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Neo-CPI customers&lt;/STRONG&gt; ready to transition their integrations to the Cloud Foundry–based SAP Integration Suite.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;We offer a guided approach to holistic integration that allows you to map your own unique journey by:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Assess your integration strategy while defining requirements&lt;/LI&gt;&lt;LI&gt;Leverage proven patterns for various integration scenarios and environments&lt;/LI&gt;&lt;LI&gt;Define integration best practices by adopting expert recommendations&lt;/LI&gt;&lt;LI&gt;Gain insights and adopt agile integration practices for continuous improvement&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We’ll walk through preparation, tooling, migration steps, and best practices—backed by screenshots, tips from the product team, and lessons learned from early adopters. Whether you’re charting your first pilot or orchestrating an enterprise-wide move, you’ll find everything you need to modernise with confidence and speed.&lt;/P&gt;&lt;P&gt;Let’s get started.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Connect SAP and Third-Party Systems Efficiently&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Whether you're connecting SAP systems or integrating with third-party applications, &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; provides a comprehensive, enterprise-grade integration platform as a service (iPaaS). It supports application-to-application, business-to-business, and even business-to-government integrations using modern technologies like advanced API management. With prepackaged integrations, connectors, AI-powered tools, and business-centric APIs, you can get started quickly and scale integrations seamlessly — all while reducing manual effort and boosting efficiency.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Accelerate Connectivity from Day One&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Time-to-value is everything. SAP Integration Suite empowers you to kickstart your integration projects immediately. Thanks to its extensive library of prebuilt content, AI-supported advisors, and easily discoverable data semantics, you can reduce setup time dramatically and focus on what matters most: delivering business value.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Enable Real-Time Business Interactions&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;In today’s digital landscape, real-time responsiveness is critical. SAP Integration Suite enables API-first and event-driven architectures that allow you to publish, consume, and process business data and events in real time — both within your organization and across your broader ecosystem. This means you can power real-time insights, automation, and digital experiences that drive meaningful outcomes.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Integrate Hybrid and Multi-Cloud Landscapes Flexibly&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Modern IT landscapes are hybrid and diverse. SAP Integration Suite is designed to operate across both on-premise and cloud environments. Whether you're working in a single public cloud, multiple clouds, or a mix of on-prem and cloud, SAP Integration Suite has the flexibility to adapt. It supports deployment on major public cloud infrastructures and offers runtime flexibility, so you can execute integrations where it makes the most sense for your business.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Migrate with Confidence&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Moving away from legacy systems doesn’t have to be risky or disruptive. SAP Integration Suite offers a clear, guided path to modern integration — supported by proven methodologies, helpful assets, and robust tools from SAP and its partners. This means you can migrate confidently, streamline operations, and unlock the full potential of your digital transformation initiatives.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="pipo.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315290iC439C2843782B2B9/image-size/large?v=v2&amp;amp;px=999" role="button" title="pipo.jpg" alt="pipo.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why move to SAP Integration Suite&lt;/STRONG&gt;&lt;BR /&gt;As a technical developer responsible for SAP PI/PO, you’re increasingly constrained by its aging, on-premise architecture and the effort required to support modern, agile, and scalable integration patterns. SAP Integration Suite offers a future-ready platform that enables you to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Modernize&lt;/STRONG&gt; integration landscapes with cloud-native, microservice-based tools&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Accelerate time-to-value&lt;/STRONG&gt; through hundreds of pre-built integrations, APIs, and templates&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Support hybrid and multi-cloud strategies&lt;/STRONG&gt; with out-of-the-box connectors for SAP and non-SAP workloads&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Embrace API-first and event-driven approaches&lt;/STRONG&gt;&lt;SPAN&gt; for real-time responsiveness, reduced coupling, and easier extensibility&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Introductory Assets&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;Why do I need this assets?&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;Article: &lt;A href="https://www.technologyreview.com/2025/07/07/1119383/producing-tangible-business-benefits-from-modern-ipaas-solutions/" target="_blank" rel="noopener nofollow noreferrer"&gt;Producing tangible business benefits from modern iPaaS solutions by MIT Technology Review&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Website:&lt;A href="https://www.sap.com/products/technology-platform/integration-suite/migration.html" target="_self" rel="noopener noreferrer"&gt;&amp;nbsp;Smoothly transition to the cloud from SAP Process Orchestration&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;These introductory assets discuss why modern iPaaS solutions, like SAP Integration Suite, offer significant business benefits by streamlining and accelerating application integration through pre-built connectors, automation, and AI-enabled features for tasks like code analysis and testing, ultimately facilitating a smooth, strategic transition from legacy systems like SAP Process Orchestration while boosting agility and efficiency.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;STRONG&gt;Technical Documentation&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;Why do I need this assets?&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/migration-guide-sap-process-orchestration" target="_blank" rel="noopener noreferrer"&gt;Migration Guide for SAP Process Orchestration&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/integration-flow-design-guidelines" target="_blank" rel="noopener noreferrer"&gt;Integration Flow Design Guidelines&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;The technical documentation guides users through migrating from SAP Process Orchestration to SAP Integration Suite, covering assessment, migration steps, and best practices for designing integration flows in the new cloud-based environment, with a focus on connectivity, security, and error handling.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Blogpost&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;Why do I need this assets?&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/elevate-from-sap-process-orchestration-and-modernize-your-integration/ba-p/13555393" target="_blank"&gt;Elevate from SAP Process Orchestration and Modernize your integration platform with SAP Integration Suite&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/accelerate-move-to-sap-integration-suite-with-sap-integration-suite-testing/ba-p/13575531" target="_blank"&gt;Accelerate move to SAP Integration Suite with SAP Integration Suite Testing Service&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;These blog posts provide information about the strategic imperative and practical aspects of migrating from SAP Process Orchestration to SAP Integration Suite. They discuss the use of automated testing and migration tools to accelerate the transition, minimize risks, and ensure a smooth go-live.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;Devtoberfest Sessions&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;Why do I need this assets?&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;A href="https://www.youtube.com/watch?v=XgpB9aN6_dA&amp;amp;list=PL6RpkC85SLQDHz97qsNTNAE2jnUKj8X5d&amp;amp;index=109" target="_blank" rel="noopener nofollow noreferrer"&gt;Migrating to SAP Integration Suite with Int4 Shield&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.youtube.com/watch?v=XSdinj1pWO4&amp;amp;list=PL6RpkC85SLQDHz97qsNTNAE2jnUKj8X5d&amp;amp;index=169" target="_blank" rel="noopener nofollow noreferrer"&gt;Successfully plan, prepare and execute your migration to SAP Integration Suite with Figaf&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Partner Webinars:&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://events.sap.com/modernizationjourneywithpartners/en_us/home.html" target="_blank" rel="noopener noreferrer"&gt;https://events.sap.com/modernizationjourneywithpartners/en_us/home.html&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;These sessions focus on how to successfully plan, prepare, and execute a migration from SAP Process Orchestration, emphasizing the critical role of automated testing and migration tools like Int4 Shield and Figaf to reduce complexity, risk, and manual effort.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Tutorials from SAP Tutorial Navigator&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;Why do I need this assets?&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;A href="https://developers.sap.com/tutorials/migration-assessment.html" target="_blank" rel="noopener noreferrer"&gt;Use the Migration Assessment Application&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://developers.sap.com/tutorials/ci-rfclookup.html" target="_blank" rel="noopener noreferrer"&gt;How to migrate RFC Lookups from SAP Process Orchestration to Cloud Integration&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://developers.sap.com/tutorials/ci-jdbc-lookup.html" target="_blank" rel="noopener noreferrer"&gt;Learn how to migrate JDBC Lookups from SAP Process Orchestration to Cloud Integration&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://developers.sap.com/tutorials/ci-sftp-file-polling.html" target="_blank" rel="noopener noreferrer"&gt;Learn how to migrate SFTP Advanced File Selection from SAP Process Orchestration to Cloud Integration&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;These tutorials collectively teach how to leverage the Migration Assessment Application to plan and execute the migration of various integration scenarios (specifically RFC Lookups, JDBC Lookups, and SFTP Advanced File Selection) from SAP Process Orchestration to SAP Cloud Integration, including practical steps and considerations for each type of migration.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Learning Journey&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;Why do I need this assets?&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;A href="https://learning.sap.com/learning-journeys/migrating-to-sap-integration-suite" target="_blank" rel="noopener noreferrer"&gt;Migrating to SAP Integration Suite&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;A href="https://learning.sap.com/learning-journeys/developing-with-sap-integration-suite" target="_blank" rel="noopener noreferrer"&gt;Developing with SAP Integration Suite&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;The learning journeys equip integration designers and developers with the knowledge and skills to successfully migrate integration scenarios from legacy SAP Process Orchestration/Process Integration to the modern SAP Integration Suite.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Discovery Center Mission&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;Why do I need this assets?&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="630.078px"&gt;&lt;P&gt;&lt;A href="https://discovery-center.cloud.sap/missiondetail/4408/4694/" target="_blank" rel="noopener nofollow noreferrer"&gt;Get Started with Migration to SAP Integration Suite&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://discovery-center.cloud.sap/missiondetail/3717/3760/" target="_blank" rel="noopener nofollow noreferrer"&gt;Automate the Migration from SAP Process Integration to SAP Integration Suite with Figaf&lt;/A&gt;&lt;STRONG&gt;&lt;U&gt;&amp;nbsp;&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="299.422px"&gt;&lt;P&gt;These missions include best practices and step-by-step guidance for use case implementation, supported by mission experts and SAP Community.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="cpi.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315294iDED6D3B04B6AC5B3/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi.jpg" alt="cpi.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why move to SAP Integration Suite&lt;/STRONG&gt;&lt;BR /&gt;As a technical developer using SAP CPI on the Neo environment, you face architectural and operational limitations that hinder modern integration demands. With SAP’s strategic shift to the Cloud Foundry-based &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;, now is the time to evolve and future-proof your integration capabilities:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Leverage a modern, flexible runtime&lt;/STRONG&gt; based on Cloud Foundry with greater scalability and resilience&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Access the full capabilities of SAP Integration Suite&lt;/STRONG&gt;, including enhanced API management, event mesh, and open connectors&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Simplify operations&lt;/STRONG&gt; with improved lifecycle management, monitoring, and DevOps-friendly tooling&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Adopt hybrid integration strategies&lt;/STRONG&gt; with support for cloud, on-premise, and third-party systems&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE width="928px"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="372.633px"&gt;&lt;P&gt;&lt;STRONG&gt;Introductory Assets&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="554.367px"&gt;&lt;P&gt;Why do I need this assets?&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="372.633px"&gt;&lt;P&gt;&lt;A href="https://www.sap.com/germany/documents/2023/04/58b4e49b-6c7e-0010-bca6-c68f7e60039b.html" target="_self" rel="noopener noreferrer"&gt;Free assessment for SAP BTP, Neo environment&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="554.367px"&gt;&lt;P&gt;Access this free service to assess your current SAP BTP, Neo environment implementation; plan your migration to the multicloud environment; and develop a migration plan.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="372.633px"&gt;&lt;P&gt;&lt;STRONG&gt;Technical Documentation&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="554.367px"&gt;&lt;P&gt;Why do I need this assets?&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="372.633px"&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration-migration-guide/migrating-cloud-integration-from-neo-environment-to-multi-cloud-foundation?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;SAP Cloud Integration Migration Guide&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="554.367px"&gt;&lt;P&gt;Use this guide to transfer your integration scenarios in the&amp;nbsp;Cloud Integration&amp;nbsp;tenant from the Neo environment to&amp;nbsp;SAP Integration Suite&amp;nbsp;in the Multi-Cloud Foundation.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="372.633px"&gt;&lt;P&gt;&lt;STRONG&gt;Blogpost&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="554.367px"&gt;&lt;P&gt;Why do I need this assets?&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="372.633px"&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/migrate-from-neo-to-cloud-foundry-sap-cloud-integration/ba-p/13506453" target="_blank"&gt;Migrate from Neo to Cloud Foundry - SAP Cloud Integration&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="554.367px"&gt;&lt;P&gt;This blog highlights the process with some screen shots of migrating integrations from a Neo tenant to Cloud Foundry tenant&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="372.633px"&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Learning Journey&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="554.367px"&gt;&lt;P&gt;Why do I need this assets?&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="372.633px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://learning.sap.com/learning-journeys/modernizing-integration-with-sap-integration-suite" target="_blank" rel="noopener noreferrer"&gt;Modernizing Integration with SAP Integration Suite&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="554.367px"&gt;&lt;P&gt;This course offers a concise yet comprehensive introduction to SAP Integration Suite, covering the key capabilities, the importance of a defined enterprise-wide integration strategy, and how you can leverage AI to modernize your business landscape.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thank you very much for tuning into the blogpost. We hope that those assets will help you to accelerate your journey to the next-gen integration platform SAP Integration Suite. Plese keep in mind that moving from PI/PO or Neo-CPI is not simply a ,,lift &amp;amp; shift" but it is a journey to a modern way to connect business processes and applications across your enterprise.&lt;/P&gt;&lt;P&gt;Big thanks to Kristin McMahon and Ryan Champlin for co-authoring this blogpost!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/everything-you-need-to-move-to-sap-integration-suite/ba-p/14218927"/>
    <published>2025-09-16T16:54:10.020000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/migrating-from-sap-po-to-sap-integration-suite-cpi-a-practical-guide/ba-p/14219938</id>
    <title>Migrating from SAP PO to SAP Integration Suite (CPI): A Practical Guide</title>
    <updated>2025-09-19T12:54:09.309000+02:00</updated>
    <author>
      <name>Praveen_Kumar_Beera</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1401210</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;As organizations move towards cloud-based integration platforms, migrating from &lt;STRONG&gt;SAP Process Orchestration (PO)&lt;/STRONG&gt; to &lt;STRONG&gt;SAP Integration Suite (CPI)&lt;/STRONG&gt; becomes essential. This blog will walk you through the key steps of this migration, focusing on:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Connecting SAP PO to SAP Cloud Connector And adding SAP PO in SAP Integration Suite (CPI)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Importing Message Mappings from SAP PO&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Importing dependent objects of the Message Mapping,&amp;nbsp; such as Imported Archives and Function Libraries&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;‌‌&amp;nbsp;Step 1&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;: Connecting SAP PO to Cloud Connector&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Since SAP PO is an on-premise system, we use SAP Cloud Connector to securely connect SAP CPI (cloud) to the SAP PO environment. The Cloud Connector acts as a secure tunnel between cloud applications and on-premise systems without exposing them directly to the internet.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;Install&amp;nbsp;&lt;A title="SAP Cloud Connector" href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Cloud Connector&lt;/A&gt;&amp;nbsp; on the same network as SAP PO&amp;nbsp;(for testing install on your system).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Connect Cloud Connector to your SAP BTP subaccount (SAP CPI tenant).&lt;BR /&gt;&lt;A title="Establishing a Connection Between Cloud Connector and Subaccount" href="https://help.sap.com/docs/SAP_LANDSCAPE_MANAGEMENT_CLOUD/e89209f1566d4a7aaf0631e1a1755653/d95510b2ff774b6eb84a5ff7ffb5e3d7.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Establishing a Connection Between Cloud Connector and Subaccount&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Login to the SAP Cloud Connector and select the subaccount and click on Cloud to On-Premises.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315775i91FC9F2923DD25E7/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Add the SAP PO System in Cloud Connector.&lt;/P&gt;&lt;P&gt;Back-end Type: ABAP System&lt;BR /&gt;Protocol: HTTP&lt;BR /&gt;Internal Host: *PO Sytem Host Name without http://*&lt;BR /&gt;Internal Port: *PO Sytem port*&lt;BR /&gt;Virtual Host: *Enter a desired virtual hostname. This will be used when connecting from Integration suite.*&lt;BR /&gt;Virtual Port: *Enter a desired port*&lt;BR /&gt;Allow Principal Propagation: check&lt;span class="lia-unicode-emoji" title=":heavy_check_mark:"&gt;✔️&lt;/span&gt;&lt;BR /&gt;Principal Type:Kerberos&lt;BR /&gt;Host in Request Header: Use Virtual Host&lt;BR /&gt;Next ==&amp;gt; Next==&amp;gt;&lt;BR /&gt;Check Internal Host: check&lt;span class="lia-unicode-emoji" title=":heavy_check_mark:"&gt;✔️&lt;/span&gt;&lt;BR /&gt;Finish&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315812i1CF38A790FBBDD0C/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Add resources path by clicking on the &lt;STRONG&gt;+&amp;nbsp;&lt;/STRONG&gt;icon and enter &lt;STRONG&gt;/&amp;nbsp;&lt;/STRONG&gt;select Path and all Sub-Paths ==&amp;gt; Save.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 861px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315793iC5CDCB95A1DE406C/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;Check whether the added SAP PO system is reachable.&lt;/P&gt;If it's not, cross-check the host and port. Ensure that both the SAP PO system and the Cloud Connector are accessible through the same network.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315816i6CD540A2186414A1/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;Now we have successfully connected to SAP PO system from SAP Cloud Connector.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Step 2: Connecting SAP PO&amp;nbsp; to SAP Integration Suite(CPI) Through SAP Cloud Connector&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Login to the Integration suite, Go &lt;FONT size="3"&gt;to&lt;/FONT&gt; settings ==&amp;gt; Integrations==&amp;gt; select System Tab==&amp;gt; click on &lt;STRONG&gt;+&amp;nbsp;&lt;/STRONG&gt; to add the SAP PO Sytem.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315822i3154762F19A1B6FB/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;P&gt;Enter the details of System Overview and&amp;nbsp;Integration Directory.&lt;/P&gt;In the Address box, enter the Virtual Host and Port with http://, as maintained in the Cloud Connector.&lt;BR /&gt;If your PO System uses the same address for both the Integration Directory and the ES Repository, check the corresponding checkbox&lt;span class="lia-unicode-emoji" title=":heavy_check_mark:"&gt;✔️&lt;/span&gt;. Otherwise, specify them separately.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315827iBDE465A63894333B/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;Test the connectivity between Integration suite and SAP PO system.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315829i7959C8356D097D6B/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;Now we have successfully connected to SAP PO system from Integration suite.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Step 3: Importing Message Mappings from SAP PO to SAP CPI&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&amp;nbsp;&lt;/FONT&gt;&lt;FONT size="3"&gt;Login&amp;nbsp;to the Integration suite and go to your package and click on Add message mapping. Selcet ES Repository and select the added SAP PO System and connect.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="3"&gt;&lt;FONT size="3"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315860i39BC59617D05D4CF/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;P&gt;&amp;nbsp;Select the required message mapping and click on next.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="3"&gt;&lt;FONT size="3"&gt;&lt;FONT size="3"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315870iC4DF97180E120C56/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;&amp;nbsp;To import Message mappings there are some prerequisites:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Based on your message mapping, you may have dependent resources such as a Function Library, Imported Archive, WSDL, or XSD&lt;/SPAN&gt;&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;FONT size="3"&gt;&lt;SPAN&gt;WSDL and XSD files are imported automatically along with the message mapping. However, Function Libraries and Imported Archives must be imported separately.&lt;BR /&gt;&lt;BR /&gt;After selecting the message mapping, you will be able to see the list of dependent resources. You must import the required resources (Function Library and Imported Archive) first; otherwise, the message mapping cannot be imported successfully.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT size="3"&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315877i53A9206CA311BCCA/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL class="lia-list-style-type-upper-roman"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;Import&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;STRONG&gt;ing Dependent Objects: Function Libraries&lt;/STRONG&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Create a function library artifact, click on "Upload," connect to the SAP PO system, select your function libraries, save, and then deploy.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316348i5137462BD33C4408/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;Create a Imported Archives artifact, click on "Upload," connect to the SAP PO system, select your Imported Archives, save, and then deploy.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316355i9EA0499ACA7D8C07/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4.&amp;nbsp;Since the dependent objects have been imported, we can now import the message mapping. Add the message&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;mapping artifact, select the ES Repository, choose the added SAP PO system, connect, select the message mapping,&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;click "Next," and then select the dependent objects that were imported as separate artifacts.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316362i9BEA0AD59756C53E/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;5. Click on "Select" and choose the required function library artifact.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316363i57DC9C698EA9451C/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;6. If the status shows "Already Existing," click on it and select "Reuse Existing Resource.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316364iBCDE7BB7E0CF4E66/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 901px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316365i952872ED0742CACC/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;7. Next, click on "Select" and choose the required imported archive artifact. Then, click "Submit" to import the message&amp;nbsp; &amp;nbsp; &amp;nbsp; mapping.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316368i74FE437804016483/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&amp;nbsp;8.&amp;nbsp; Now the Message Mapping is successfully imported to Integration suite from SAP PO system.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316375iFCD9A9C31A2B1923/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1760184839"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;Migrating from SAP PO to SAP CPI goes beyond a simple technical shift—it’s an opportunity to modernize integration landscapes, adopt cloud-first patterns, and leverage the flexibility of SAP BTP. By carefully setting up connectivity through the Cloud Connector, systematically migrating message mappings, and addressing dependencies like archives and function libraries, you can ensure a smooth and reliable transition.&lt;/P&gt;&lt;P&gt;A phased migration approach, combined with thorough testing and best practices, will help minimize risk and maximize value. This journey not only preserves existing investments but also sets the stage for future-ready integrations.&lt;/P&gt;&lt;P&gt;Stay tuned for my upcoming blogs, where I’ll deep dive into adapter migration strategies and lessons learned from real project experiences. &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/migrating-from-sap-po-to-sap-integration-suite-cpi-a-practical-guide/ba-p/14219938"/>
    <published>2025-09-19T12:54:09.309000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-deep-dive-and-hands-on-event-oct-22-2025-palo-alto/ba-p/14226687</id>
    <title>SAP Integration Suite Deep Dive and Hands-on Event (Oct 22, 2025 Palo Alto)</title>
    <updated>2025-09-24T11:56:03.843000+02:00</updated>
    <author>
      <name>RyanChamplin</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45221</uri>
    </author>
    <content>&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-24 at 4.38.52 AM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319413i4F582EEC1C426AC4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-24 at 4.38.52 AM.png" alt="Screenshot 2025-09-24 at 4.38.52 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Our SAP Integration Suite team is hosting an event at our SAP office's in Palo Alto&amp;nbsp;@ SAP Building 1 on October 22, 2025. &amp;nbsp;&lt;/P&gt;&lt;P&gt;Whether you are just considering SAP Integration Suite and have a lot of questions, are new to the technology and still getting your feet wet, or are a seasoned user of SAP Integration Suite there is value for you at this event. &amp;nbsp; We will have SAP Integration Suite product experts leading all sessions at this one-day event. &amp;nbsp;&lt;/P&gt;&lt;P&gt;We will provide a deep-dive into the capabilities of SAP Integration Suite, take a tour of the latest roadmap, provide an overview of migration tools, services, and the latest financial promotions to make the move, provide a hands-on experience of SAP Integration Suite, and provide time to sit one-on-one with a product expert to get your questions answered. &amp;nbsp;&lt;/P&gt;&lt;P&gt;During this SAP Business Technology Platform (SAP BTP) knowledge-exchange with our product management team, you will:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Gain a deeper understanding of SAP Integration Suite with a &lt;STRONG&gt;hands-on learning&lt;/STRONG&gt; experience&lt;UL&gt;&lt;LI&gt;SAP Integration Suite is a modern, scalable, and secure platform as a service (iPaaS), empowering businesses to integrate all applications and systems across SAP and non-SAP landscapes using one solution. It supports real-time data exchange, automation, and API-driven innovation, facilitating business processes across your entire ecosystem, including cloud, on-premise, and hybrid environments&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Be inspired by a local &lt;STRONG&gt;SAP Integration Suite customer speaker&lt;/STRONG&gt; sharing the keys to their success.&lt;/LI&gt;&lt;LI&gt;Dive into advanced use cases and capabilities, including:&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Integration&lt;/STRONG&gt; to build and run application-to-application (A2A), business-to-business (B2B), and business-to-government (B2G) scenarios with over 3,200 prebuilt integrations&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Advanced Event Mesh&lt;/STRONG&gt; to design, deploy, and manage an event-driven architecture (EDA) that enables real-time business processes at scale&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Edge Integration Cell&lt;/STRONG&gt; to support hybrid integration needs with a cloud or local runtime&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;API-Management&lt;/STRONG&gt; to secure, govern, and transform your APIs with management and delivery processes that drive innovation while safeguarding against threats&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Discover how to&lt;STRONG&gt; leverage the 2025 Transformation Incentive&lt;/STRONG&gt; to save money on migration from SAP Process Integration, SAP Process Orchestration, or SAP Cloud Integration on the SAP BTP, Neo environment, and third-party solutions to integrate SAP and non-SAP systems&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://events.sap.com/us-sap-integration-suite-exploration-workshop-palo-alto/en_us/home.html" target="_self" rel="noopener noreferrer"&gt;Register now&lt;/A&gt;&lt;/STRONG&gt; and&lt;STRONG&gt; bring your laptop&lt;/STRONG&gt;! Seats are limited for this hands-on event.&lt;/P&gt;&lt;P&gt;We look forward to seeing you on &lt;STRONG&gt;Wednesday, October 22, 2025&lt;/STRONG&gt;, at &lt;STRONG&gt;SAP Building 1, 3410 Hillview Avenue, Palo Alto, CA 94304.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;If you have any questions about the event please reploy to this post and we'll follow-up with you. &amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-deep-dive-and-hands-on-event-oct-22-2025-palo-alto/ba-p/14226687"/>
    <published>2025-09-24T11:56:03.843000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/new-ci-pipeline-restart-extension-features-supporting-new-pipeline-package/ba-p/14230547</id>
    <title>New CI Pipeline Restart Extension features: supporting new Pipeline package and improved Restart Job</title>
    <updated>2025-10-02T10:10:24.972000+02:00</updated>
    <author>
      <name>slava_kuzyakin</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/171238</uri>
    </author>
    <content>&lt;P&gt;We are excited to announce&amp;nbsp;the release of &lt;A href="https://hub.sap.com/package/processintegrationpipelineextensionrestartviadatastore/integrationflow" target="_self" rel="noopener noreferrer"&gt;Cloud Integration Pipeline Extension - Restart via Data Store&lt;/A&gt; in version 1.0.1.&lt;/P&gt;&lt;P&gt;This update introduces several powerful new features and improvements:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Supports&amp;nbsp;&lt;A href="https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339" target="_self"&gt;new integration packages for the Pipeline for Cloud Integration&lt;/A&gt; and allows flexible linkage of Generic Pipeline copies to the Pipeline Stages.&lt;/LI&gt;&lt;LI&gt;Enhanced Restart Job Integration Flow:&lt;UL&gt;&lt;LI&gt;Generic Job Profile to restart all integration scenarios defined in the Partner Directory through the Pipeline Framework.&lt;/LI&gt;&lt;LI&gt;New configuration options to persist the Job Log.&lt;/LI&gt;&lt;LI&gt;New Integration Flow&amp;nbsp;"Pipeline API - Restart Job Log" to retrieve both the Restart Job run list and detailed log data (if log persistence is enabled).&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Improved configuration and monitoring: New parameters (such as "NotOlderThanHours" for Restart Job), several bug fixes, enriched monitoring headers, and better exception handling.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With these enhancements, version 1.0.1 delivers more flexibility, transparency, and control when managing restarts in your Cloud Integration pipelines.&lt;/P&gt;&lt;H2 id="toc-hId-1735063274" id="toc-hId-1761759948"&gt;Integration Package content&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;New package consists of six Integration Flows, one central Script Collection and one Value Mapping. 2 new artifacts have been added:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Pipeline API – Restart Job Log&lt;/STRONG&gt; (Optional). This Integration Flow enables API-based retrieval of stored Job Logs. It is built on top of the standard Message Processing Logs (MPL) API and allows either to retrieve the restart job log or to query MPL details of executed Restart Jobs.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Value Mapping to determine Pipeline Stage&lt;/STRONG&gt; (Optional). The Data Store Entry Name includes a 2-letter code for the Pipeline Stage, derived from the technical name of Pipeline IFlow where the error occurred. This Value Mapping allows to link custom IFlow copies to their Pipeline Stage.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="slava_kuzyakin_0-1759153052667.png" style="width: 833px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321182iB53EA7B9A494D8DB/image-dimensions/833x460/is-moderation-mode/true?v=v2" width="833" height="460" role="button" title="slava_kuzyakin_0-1759153052667.png" alt="slava_kuzyakin_0-1759153052667.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1565246443"&gt;Support for new Pipeline integration packages&lt;/H2&gt;&lt;P&gt;The &lt;A href="https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339" target="_self"&gt;new Cloud Integration Pipeline packages&lt;/A&gt; introduce Integration Flows with updated technical IDs that include the version marker “v2”. To ensure compatibility, these new IFlow IDs have been added to the stage determination logic.&lt;/P&gt;&lt;P&gt;In addition, the latest Pipeline version now propagates the MPL ID of the source Pipeline IFlow to the custom error handling IFlow. This allows the Data Store entry name to be built using the original source MPL ID, rather than the MPL ID of the custom error handling flow (as was the case in version 1 of the Cloud Integration Pipeline package).&lt;/P&gt;&lt;H2 id="toc-hId-1368732938"&gt;Pipeline Stage Determination&lt;/H2&gt;&lt;P&gt;Each Data Store entry name includes the mandatory attribute Pipeline Stage, which indicates where the exception occurred. In the new version of the Restart Extension, the pipeline stage is resolved through a two-step process. If neither step succeeds, a default value is assigned: Stage (NA) or "Not Assigned".&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Technical ID Prefix Check.&lt;/STRONG&gt;&amp;nbsp;The system first evaluates the prefix of the source pipeline Integration Flow’s technical ID. This was the only approach available in version 1.0.0. For example, if you copy a generic Integration Flow to create a receiver-specific outbound pipeline IFlow, the technical ID must start with the correct stage prefix:&lt;BR /&gt;&lt;EM&gt;&lt;FONT color="#0000FF"&gt;com.sap.integration.cloud.pipeline.v2.generic.step06.outbound.&lt;/FONT&gt;&lt;FONT color="#00CCFF"&gt;myCustomIFlow&lt;/FONT&gt;&lt;/EM&gt;&amp;nbsp;is resolved to stage &lt;EM&gt;&lt;FONT color="#0000FF"&gt;(OB)&lt;/FONT&gt;&lt;/EM&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Value Mapping Check.&lt;/STRONG&gt; If the stage cannot be determined from the prefix, the new version applies a Value Mapping. This mapping links custom IFlow technical IDs to specific pipeline stages, allowing you to flexibly assign non-standard technical IDs to the correct stage (see screenshot).&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="slava_kuzyakin_0-1759217561887.png" style="width: 669px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321487iBAAE75C63F0AA592/image-dimensions/669x156?v=v2" width="669" height="156" role="button" title="slava_kuzyakin_0-1759217561887.png" alt="slava_kuzyakin_0-1759217561887.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1172219433"&gt;Generic (Default) Job Profile&lt;/H2&gt;&lt;P&gt;In version 1.0.0, the Restart Job IFlow could restart only specific interfaces defined in the Job Profile. One of the most common feedback points was the need for a generic Restart Job, similar to what is available in SAP PO, that could restart all integration scenarios configured for the Cloud Integration Pipeline.&lt;/P&gt;&lt;P&gt;This capability has now been added. With the Generic Restart Job Profile, all scenarios where the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/using-partner-directory-in-pipeline-concept#partner-id" target="_self" rel="noopener noreferrer"&gt;Partner ID is determined using the Alternative Partner approach&lt;/A&gt; can be restarted in one go. The configuration effort is minimal: the only requirement is that the Job Profile status is set to "active."&lt;/P&gt;&lt;P&gt;Optionally, you can exclude specific integration scenarios from the Generic Restart Job by providing them in the parameter &lt;EM&gt;InterfacePidExclusionList&lt;/EM&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="slava_kuzyakin_1-1759153470015.png" style="width: 580px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321186i8032038311FD8BFC/image-dimensions/580x307/is-moderation-mode/true?v=v2" width="580" height="307" role="button" title="slava_kuzyakin_1-1759153470015.png" alt="slava_kuzyakin_1-1759153470015.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-975705928"&gt;New Job Profile Parameters&lt;/H2&gt;&lt;P&gt;The Restart Job Profile now supports additional optional parameters that extend flexibility and monitoring:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;NotOlderThanHours&lt;/STRONG&gt;. In version 1.0.0, filtering was only possible with the static interval parameters &lt;STRONG&gt;TimeFrom&lt;/STRONG&gt; and &lt;STRONG&gt;TimeTo&lt;/STRONG&gt;. In the new version, if &lt;STRONG&gt;TimeFrom&lt;/STRONG&gt; is not explicitly set, this parameter can dynamically calculate it as:&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;TimeFrom = (Job run start timestamp) – (Configured number of hours in NotOlderThanHours)&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;RestartJobLog&lt;/STRONG&gt;. By default, the job log is stored only in memory within the message header &lt;EM&gt;jobLogHeader&lt;/EM&gt; (accessible only when Trace is activated). With this parameter, you can define where and how the job log is stored:&lt;UL&gt;&lt;LI&gt;attach – the job log is attached to the MPL of the Restart Job IFlow, using the Restart Job ID as MPL Attachment name.&lt;/LI&gt;&lt;LI&gt;persist – the job log is persisted in the database using the Persist Message step.&lt;/LI&gt;&lt;LI&gt;custom – the job log is sent via a ProcessDirect extension to a custom-built IFlow. In this case, an additional parameter must be maintained in the Job Profile restartJobLogExitEndpoint with the value of ProcessDirect endpoint.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-779192423"&gt;Pipeline API Operations&lt;/H2&gt;&lt;P&gt;A new API Integration Flow &lt;STRONG&gt;Pipeline API – Restart Job Log&lt;/STRONG&gt; has been introduced in the latest package version. This Integration Flow enables API-based retrieval of Restart Job Logs, provided that the &lt;EM&gt;RestartJobLog&lt;/EM&gt; parameter of the Job Profile is set to either "attach" or "persist".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="slava_kuzyakin_2-1759153530130.png" style="width: 819px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321187i89A5645ACDC089EF/image-dimensions/819x475/is-moderation-mode/true?v=v2" width="819" height="475" role="button" title="slava_kuzyakin_2-1759153530130.png" alt="slava_kuzyakin_2-1759153530130.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The following queries are supported:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Retrieve the restart job log for a specific Restart Job instance by supplying either the MPL ID of the Restart Job IFlow or the unique Restart Job ID.&lt;/LI&gt;&lt;LI&gt;Query MPL details of executed Restart Jobs based on selection criteria, in order to obtain the MPL ID of the Restart Job IFlow or the unique Restart Job ID.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For further details, see the updated &lt;A href="https://github.com/SAP/apibusinesshub-integration-recipes/blob/master/Recipes/for/processintegrationpipelineextensionrestartviadatastore/Pipeline_Extension_-_Restart_via_Data_Store_Configuration_guide.pdf" target="_self" rel="nofollow noopener noreferrer"&gt;Configuration Guide&lt;/A&gt; included in the package.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/new-ci-pipeline-restart-extension-features-supporting-new-pipeline-package/ba-p/14230547"/>
    <published>2025-10-02T10:10:24.972000+02:00</published>
  </entry>
</feed>
