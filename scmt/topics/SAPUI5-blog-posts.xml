<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAPUI5-blog-posts.xml</id>
  <title>SAP Community - SAPUI5</title>
  <updated>2025-08-26T11:01:39.799145+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAPUI5/pd-p/500983881501772639608291559920477" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAPUI5 blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-fiori-development-newsletter-july-2025-issue-35/ba-p/14139032</id>
    <title>SAP Fiori development newsletter July 2025 (issue #35)</title>
    <updated>2025-07-08T16:50:00.022000+02:00</updated>
    <author>
      <name>PeterSpielvogel</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/543</uri>
    </author>
    <content>&lt;P&gt;Summer is here, bringing hot weather across the U.S. and around the world. SAP is also turning up the temperature with hot new AI-powered innovations, many of which were introduced at Sapphire (see article below). Even more new stuff is planned for TechEd and Devtoberfest in the fall.&lt;/P&gt;&lt;P&gt;For ongoing updates, I encourage you to join our monthly SAP Fiori development roundtable. You can meet online with&amp;nbsp;fellow developers and the SAP engineers who build our professional development tools.&amp;nbsp;&lt;A href="https://docs.google.com/forms/d/1ZqIX3zzGBOOIqehmlIRz_HhpQEhqunkLSzN1gnaOwP8/edit" target="_blank" rel="noopener nofollow noreferrer"&gt;Register online&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;or email me for an invitation.&amp;nbsp;Our next meeting is Wednesday, July 9, 2025.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you prefer to receive this in your inbox, please&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/cmp/nl/sap-fiori-development-newsletter/index.html" target="_blank" rel="noopener noreferrer"&gt;subscribe to the SAP Fiori development newsletter.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP_Fiori_Dev_Newsletter_35.png" style="width: 644px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279898i3E02ED80503114EF/image-size/large?v=v2&amp;amp;px=999" role="button" title="SAP_Fiori_Dev_Newsletter_35.png" alt="SAP_Fiori_Dev_Newsletter_35.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1733394075"&gt;&lt;STRONG&gt;Development News&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Sapphire had great innovations, if you are on public cloud&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;There were lots of announcements about new innovations for both developers and business users. The question for many customers is when their systems will be current enough to consume them. Read about the two parallel universes – one filled with AI in the cloud and the other grounded in legacy code.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/parallel-universes-the-dual-nature-of-ux-and-ai-among-sap-customers-at/ba-p/14113975" target="_blank"&gt;https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/parallel-universes-the-dual-nature-of-ux-and-ai-among-sap-customers-at/ba-p/14113975&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Fiori tools 2506 now available&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The 2506 release of SAP Fiori tools includes enhancements that make full-stack development with SAP Fiori elements and RAP even more seamless—from initial app creation to UI adaptation and low-code configuration.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-2506-update-open-source-faster-app-creation-adaptation/ba-p/14131156" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-2506-update-open-source-faster-app-creation-adaptation/ba-p/14131156&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;AI-powered project accelerator&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The AI-powered project accelerator from SAP Fiori tools automates multiple steps, including creating a data model, preparing mock data, building an OData service, generating an SAP Fiori app and adding the necessary annotations. See how to set up a trial account and try it for yourself.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/from-idea-to-app-using-ai-powered-project-accelerator-to-develop-sap-fiori/ba-p/14095300" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/from-idea-to-app-using-ai-powered-project-accelerator-to-develop-sap-fiori/ba-p/14095300&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Introducing SAPUI5 version preview in SAP Build Work Zone&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We have introduced a new option to preview an upcoming SAPUI5 version for SAP Build Work Zone. This capability aims to provide a controlled environment for evaluating SAPUI5 updates in SAP Build Work Zone, thereby avoiding immediate changes in production environments.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-sapui5-version-preview-in-sap-build-work-zone/ba-p/14117996" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-sapui5-version-preview-in-sap-build-work-zone/ba-p/14117996&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Explore SAPUI5 1.136.x-legacy-free for future-proof UI5 apps&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAPUI5 1.136.x-legacy-free deprecated code removed is now available via cloud access. Test your code for future-proof best practices and provide early feedback to the UI5 team.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/explore-sapui5-openui5-1-136-x-legacy-free/ba-p/14103271" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/explore-sapui5-openui5-1-136-x-legacy-free/ba-p/14103271&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAPUI5 is leading the way in accessibility with WCAG 2.2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Accessibility is key to using SAP's business solutions. Adopting the latest standards ensures that solutions are inclusive and meet the diverse needs of users globally. When creating apps with SAP Build and SAPUI5, developers can leverage the latest Web Content Accessibility Guidelines (WCAG).&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sapui5-is-leading-the-way-in-accessibility-with-wcag-2-2/ba-p/14101596" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sapui5-is-leading-the-way-in-accessibility-with-wcag-2-2/ba-p/14101596&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Fiori Application Generator available in open source&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The SAP Fiori tools team is delighted to announce that the underlying code for the SAP Fiori Application Generator has been moved entirely to open source. This has been a long journey...&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-application-generator-available-in-open-source/ba-p/14109021" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-application-generator-available-in-open-source/ba-p/14109021&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;New SAP Design System portal for SAP Fiori design guidelines&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The SAP Design System portal contains everything about the design system, including comprehensive new UI Kits for designers in Figma.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/new-sap-design-system-portal-for-sap-fiori-design-guidelines-and-new-ui/ba-p/14109558" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/new-sap-design-system-portal-for-sap-fiori-design-guidelines-and-new-ui/ba-p/14109558&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Quickly generate and deploy SAP Fiori apps from ABAP Development Tools for Eclipse&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The new quick SAP Fiori application generator lets you generate an application based on SAP Fiori elements annotations and deploy the SAP Fiori UI with only a few clicks from the service binding editor in ADT.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/quickly-generate-and-deploy-sap-fiori-apps-from-abap-development-tools-for/ba-p/14116822" target="_blank"&gt;https://community.sap.com/t5/application-development-and-automation-blog-posts/quickly-generate-and-deploy-sap-fiori-apps-from-abap-development-tools-for/ba-p/14116822&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1536880570"&gt;&lt;STRONG&gt;Events&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;SAP Fiori Innovation Day Bangalore&amp;nbsp; &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The biggest SAP Fiori Innovation Day ever!&lt;BR /&gt;This summary highlights the key sessions, insights from our presentations, and the remarkable contributions from our local development community.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-fiori-innovation-day-bangalore-connection-gratitude-ai-and-local/ba-p/14129580" target="_blank"&gt;https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-fiori-innovation-day-bangalore-connection-gratitude-ai-and-local/ba-p/14129580&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Fiori Innovation Day Dallas &lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; October 17 as part of the ASUG chapter meeting&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Registration link opening soon - mark your calendar now&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;SAP Fiori Innovation Day Paris &lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; December 10&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Registration link opening soon - mark your calendar now&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All our SAP Fiori Innovation Day events are open to customers.&lt;BR /&gt;If you are a partner, please let me know if you are interested in sponsoring in one or both of our locations.&lt;BR /&gt;I hope you can join us.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP TechEd&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Registration is now open for both the in-person event in Berlin and the virtual event. Here are details on what you can expect.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/sap-teched-blog-posts/sap-teched-2025-registration-is-live-check-out-our-brand-new-hybrid/ba-p/14107573" target="_blank"&gt;https://community.sap.com/t5/sap-teched-blog-posts/sap-teched-2025-registration-is-live-check-out-our-brand-new-hybrid/ba-p/14107573&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1311650375" id="toc-hId-1340367065"&gt;&lt;STRONG&gt;Back issues from the past year&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-fiori-development-newsletter-may-2025-issue-34/ba-p/14091410" target="_self"&gt;SAP FIori development newsletter May 2025 (Issue #34)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blogs-by-sap/sap-fiori-development-newsletter-march-2025-issue-33/ba-p/14036207" target="_self"&gt;SAP Fiori development newsletter March 2025 (Issue #33)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blogs-by-sap/sap-fiori-development-newsletter-january-2025-issue-32/ba-p/13984589" target="_self"&gt;SAP Fiori development newsletter January 2025 (issue #32)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blogs-by-sap/sap-fiori-development-newsletter-november-2024-issue-31/ba-p/13929385" target="_blank"&gt;SAP Fiori development newsletter November 2024 (issue #31)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blogs-by-sap/sap-fiori-development-newsletter-september-2024-issue-30/ba-p/13870115" target="_blank"&gt;SAP Fiori development newsletter September 2024 (issue #30)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blogs-by-sap/sap-fiori-development-newsletter-july-2024-issue-29/ba-p/13762548" target="_blank"&gt;SAP Fiori development newsletter July 2024 (issue #29)&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-fiori-development-newsletter-july-2025-issue-35/ba-p/14139032"/>
    <published>2025-07-08T16:50:00.022000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-btp-q2-2025/ba-p/14145899</id>
    <title>What's New in SAP BTP – Q2 2025</title>
    <updated>2025-07-09T11:48:21.018000+02:00</updated>
    <author>
      <name>cecilysorenson</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/9253</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT color="#000000"&gt;Q2 was another big quarter for SAP Business Technology Platform. From application development to integration and analytics, we are excited to share how SAP BTP continues to simplify, streamline, and speed things up! Let's dive into some of the top innovations!&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1863289032"&gt;&lt;FONT color="#000000"&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F1QQZBF8TUIY%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D1QQZBF8TUIY&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F1QQZBF8TUIY%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="What's New in SAP BTP: Top New Features | Analytical Insights in Joule | Q2 2025" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-1666775527"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;&lt;SPAN&gt;App Dev &amp;amp; Automation Highlights&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-1599344741"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Simplified SAPUI5 extensions with the SAP Build Extensibility Wizard&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;If your business relies on cloud ERP as its IT backbone, you know it may need extensions to meet unique requirements. When built-in extensibility isn’t enough, SAP Build on SAP BTP offers powerful options for custom coding and SAP Fiori UI extensions.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Now, with the SAP Build Extensibility Wizard, you can create UI extensions directly from your cloud ERP application.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;By l&lt;/SPAN&gt;&lt;SPAN&gt;aunching the Extensibility Wizard directly from your SAP Fiori application, you are given different options for the type of extension you want to create.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Extensibility Wizard.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283417iEC6432D347500227/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Extensibility Wizard.png" alt="Extensibility Wizard.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;The 'User Interface Extension' lets you either adapt the existing Fiori app or create a new custom application.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;By setting up your destinations and details in the Wizard, you can either remove sections, add new fields, and create a completely new variant of the application with SAP Build Code and Business Application Studio. Developers and key users can already use it to create custom processes and now, custom user interfaces.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Watch the video demo (starting at 0:08)  for more insights!&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Learn more:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/simplify-sapui5-code-extensions-with-the-sap-build-extensibility-wizard/ba-p/14087839" target="_blank"&gt;Simplify SAPUI5 Code Extensions with the SAP Build Extensibility Wizard&lt;/A&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1402831236"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Application to Enable Business Users to Manage Decisions&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;To empower business users to view or maintain decisions within SAP Build Process Automation, we launched a dedicated, purpose-built application that can be accessed directly from SAP Build Work Zone – without the need of IT.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Business users can access a dedicated application in SAP Build Work Zone to manage decisions within a single project.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Users can open the decision table, modify values directly, or import data from Excel and then save their changes, seeing only what matters and making the experience clean and focused.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;The release of a changed version is only one click away. Any errors are shown in the design console, letting users view the different versions of the project.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;See for yourself in the demo (starting at 2:05)  for more insights!&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Learn more&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;A href="https://help.sap.com/docs/build-process-automation/sap-build-process-automation/configure-studio-home-application" target="_blank" rel="noopener noreferrer"&gt;Configure the Stuido Home Application&lt;/A&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;A href="https://help.sap.com/docs/build-process-automation/sap-build-process-automation/use-studio-home" target="_self" rel="noopener noreferrer"&gt;Using the Studio Home Application&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1206317731"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Partner Solutions as an Installable Product on SAP BTP ABAP Environment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Good news for SAP partners developing apps with SAP BTP ABAP Environment: you can now offer your solution not only as a multitenant Software as a Service solution, but also as an installable product!&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Customers can now install the solution directly in their system as a product.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;As a part of SAP BTP ABAP Environment, the Landscape Portal supports both delivery options: multitenant SaaS and installable product.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Innovation_ABAP.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283419i970A4790880B6365/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Innovation_ABAP.png" alt="Innovation_ABAP.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;You can do this in three easy steps:&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Build your product with the Register Product app.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Choose your delivery model:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;For multitenant SaaS, configure it in the Maintain Solution app&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;For installable product, use the Publish Product app.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Publish your solution to the SAP Store with a PartnerEdge Build contract and an SAP Store enhancement.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;Now customers using SAP BTP ABAP Environment can find your product in the SAP Store and install it into their own system using the Deploy Product option.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For detailed guidance, watch the demo (starting at 3:42).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Learn more:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest/building-partner-products-on-sap-btp-abap-environment/ev-p/13804921" target="_self"&gt;Building partner products on SAP BTP ABAP Environment&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-880721507"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;FONT color="#33CCCC"&gt;Highlight&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-813290721"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Describe Externalized Parameters of an Integration Flow&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;In SAP Integration Suite externalization enables integration developers to define parameters as variables for certain configurations of adapters or flow steps of an integration flow. The values of these parameters can be changed without editing the integration flow, for example, when moving integrations from development or test environment to production.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;To simplify the understanding of this difficult and technical process, content developers can now provide descriptions directly in the integration flow editor.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;These can be the potential values, examples or additional details explaining the impact of specific values which will then be visible for guiding through each of the fields in the Configure view. This brings huge potential to improve the maintainability and reusability of your integration scenarios.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Take a look at the demo (starting at 5:21) and see for yourself!&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Learn more:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/externalized-parameters-view" target="_self" rel="noopener noreferrer"&gt;Externalized Parameters View&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-487694497"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Data &amp;amp; Analytics&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Highlight&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-420263711"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Analytical insights in Joule&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;Joule, SAP's copilot, now enables you to get quick analytical answers without having to build reports. This provides you with valuable insights, saving time and giving you the information you need.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Joule_Sales_Commission.gif" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283418i84EA541A95879D02/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Joule_Sales_Commission.gif" alt="Joule_Sales_Commission.gif" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Joule scans available data sources and suggests a few options, making comparisons to previous months easier. Joule updates the view right away, making it easy to see how things are trending.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;For example, you can&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;ask for the top ten sales agents, check the monthly commission trend from January to March, giving you contextual and relevant answers&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;See this in action in the demo (starting 7:15).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Learn more:&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-analytical-insights-in-joule-empowering-smarter-decisions/ba-p/14083673" target="_blank"&gt;Introducing Analytical Insights in Joule: Empowering Smarter Decisions, Instantly&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-94667487"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Cross&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Platform Highlight&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H4 id="toc-hId--470480394"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Provision App-Specific Groups in Identity Directory&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;SAP Cloud Identity Services tenant enables immediate provisioning of authorizations to target systems&lt;/SPAN&gt;&lt;SPAN&gt; &lt;/SPAN&gt;&lt;SPAN&gt;in SAP Analytics Cloud target system. You can  c&lt;/SPAN&gt;&lt;SPAN&gt;entrally manage user-group assignments linked to application-specific policies, triggering provisioning jobs that synchronize access rights efficiently and securely. This ensures users gain prompt access to their designated roles in the target system.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Watch the demo (starting at 8:37) for a closer look.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Learn more:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;A href="https://pages.community.sap.com/topics/cloud-identity-services" target="_self" rel="noopener noreferrer"&gt;SAP Cloud Identity Services&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId--596892341" id="toc-hId--373590892"&gt;&lt;FONT color="#FFCC00"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Share your thoughts&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;These videos are for YOU. We would love to hear your impressions. How do you like the video? How can we improve the upcoming videos? Please share your feedback by liking this post or leaving a comment below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thank you for your support and happy viewing, sharing, and enjoying!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;You Might Also Be Interested In&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://events.sap.com/sap-btp-garage-2025/en_us/home.html" target="_blank" rel="noopener noreferrer"&gt;SAP BTP Garage&lt;/A&gt;&lt;/SPAN&gt;:&amp;nbsp;monthly LIVE webinar with hands-on use case walkthroughs and demos.&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://podcast.opensap.info/cloud-platform/" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP BTP Talk Podcast&lt;/A&gt;&lt;/SPAN&gt;: monthly podcast covering all things SAP BTP.&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-btp-q2-2025/ba-p/14145899"/>
    <published>2025-07-09T11:48:21.018000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/valuehelp-docu-it-s-just-the-old-wine-in-a-new-bottle-but-then-every-bottle/ba-p/14151332</id>
    <title>Valuehelp docu - It’s just the old wine in a new bottle – but then, every bottle has its day! 😉</title>
    <updated>2025-07-14T05:57:43.575000+02:00</updated>
    <author>
      <name>sandeep_rs</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/387387</uri>
    </author>
    <content>&lt;P&gt;With SAPUI5 1.138, the SAP Fiori elements OData V4 “Field Help” documentation has undergone a complete revamp! It’s essentially the same contents but with a much better restructuring of the key topics. The flow of topics is a lot more natural and in sync with the way the field help shows up in the UI – resulting in a far better readability of the topic.&lt;/P&gt;&lt;P&gt;So in this short article, let us see what are the key elements of the new structure. This is NOT a deep dive into the field help (or valuehelp) topic – the official documentation is already doing that! But instead we shall take a closer look at what are the key parts of a field help or value help and where in the documentation we can find this information!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;First up is the &lt;A href="https://sapui5.hana.ondemand.com/1.138.0/#/topic/a5608eabcc184aee99e1a7d88b28816c" target="_self" rel="nofollow noopener noreferrer"&gt;Field Help&lt;/A&gt; page. &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This was way too bloated in the older version – you can see it &lt;A href="https://sapui5.hana.ondemand.com/#/topic/a5608eabcc184aee99e1a7d88b28816c" target="_blank" rel="noopener nofollow noreferrer"&gt;here&lt;/A&gt;! The newer version is a lot leaner and includes only the different field helps that can be configured for a fe V4 field. In addition, it retains the section on using the “&lt;STRONG&gt;History of Recently Entered Values&lt;/STRONG&gt;” feature but also brings in a nice little section on using the &lt;STRONG&gt;Type-Ahead support&lt;/STRONG&gt;!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The &lt;A href="https://sapui5.hana.ondemand.com/1.138.0/#/topic/fccb255723d3489cae955648756411f6" target="_self" rel="nofollow noopener noreferrer"&gt;Value Help&lt;/A&gt; is now big enough to get its own page! So, what is covered here?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;One big help is that now all value help related annotations are centralized in this page. A developer can take one quick look into this and easily figure out all the annotations that are supported for configuration of a value help. The XML and CAP CDS annotations match perfectly and hopefully soon we can also bring in the equivalent ABAP CDS annotations!&lt;/P&gt;&lt;P&gt;Most of the contents that were specific to valuehelp dialog are now pushed out of this page making this much leaner and easier to do a full page scan to understand the overall concept w/o getting lost with all the details!&lt;/P&gt;&lt;P&gt;&lt;A href="https://sapui5.hana.ondemand.com/1.138.0/#/topic/3faed838512648b099e14dfec458d847" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;Value Help Dialog&lt;/STRONG&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;The many nuances of the value help dialog has now found its own home and page! The page describes in clear simple language the configurations required for each part of the dialog – starting from the title and then covering all other parts like the search bar, the filter bar, the “variants” of the value helps and finally the main table that shows the value help data! The Text/TextArrangement topic is very much simplified now and can be read w/o additional caffeine &lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/P&gt;&lt;P&gt;A cool small little section is dedicated to the “Caching” behavior and even links an example showing how cache can be refreshed, where needed!&lt;/P&gt;&lt;P&gt;And finally, we get to see a nice screenshot and a table showing why the Define Condition never comes up the same for any two fields &lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The last two chapters (dropdown and In/Out mappings) are largely the same as before and I expect some revisions here in the upcoming versions!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The goal was to make value help documentation a much simpler and clearer articulation of the underlying capability and by and large, I believe, this is now achieved. There are still of course some improvements and tweaks to be added and hopefully we get over that soon. Until then, I hope you have a good time configuring your value helps and yes, please add a comment if you see potential for further improvements/simplification! Thank you!&lt;/P&gt;&lt;P&gt;Cheers,&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp; Sandeep&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/valuehelp-docu-it-s-just-the-old-wine-in-a-new-bottle-but-then-every-bottle/ba-p/14151332"/>
    <published>2025-07-14T05:57:43.575000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-community-leaders-finder/marla-alschweiki/ba-p/14152384</id>
    <title>Marla Alschweiki</title>
    <updated>2025-07-15T13:38:58.090000+02:00</updated>
    <author>
      <name>StephanieMarley</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/109</uri>
    </author>
    <content>&lt;P class=""&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/7391" target="_self"&gt;Marla&lt;/A&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Germany&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;SAP Mentor since 2025&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Follow Marla on &lt;A href="https://www.linkedin.com/in/marshwaiki/" target="_self" rel="nofollow noopener noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Marla.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286868i5BCCCC16E3B3BA45/image-size/small?v=v2&amp;amp;px=200" role="button" title="Marla.png" alt="Marla.png" /&gt;&lt;/span&gt;In Marla's own words: "I am a curious SAP Data Analytics &amp;amp; AI Developer with a strong focus on Business Intelligence, Embedded Analytics, and AI-driven development. Over the past eight years, I've worked across the SAP ecosystem from S/4HANA and SAP BW to SAP Analytics Cloud and Fiori/UI5, where I've helped design and implement clean, scalable solutions that bridge backend data architecture with user-friendly interfaces.&lt;/P&gt;&lt;P&gt;I specialize in building modular Virtual Data Models using CDS Views, aligned with SAP’s clean core strategy.&lt;/P&gt;&lt;P&gt;I'm especially excited about the evolving landscape of&amp;nbsp;SAP Business AI&amp;nbsp;and its potential to transform how enterprises operate from predictive analytics and intelligent process automation to personalized user experiences.&lt;/P&gt;&lt;P&gt;I'm a strong believer in continuous learning, open knowledge-sharing, and the power of community. Whether through mentorship, collaboration, blogs, or workshops, I actively seek out opportunities to grow, uplift others, and create spaces where everyone feels empowered to learn, contribute, and thrive."&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Topics of interest:&amp;nbsp;&lt;/STRONG&gt;SAP Data Analytics, SAP Business AI, Embedded Analytics, SAP Business Data Cloud, SAP Fiori/UI5&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Marla, what inspired you to become an SAP Mentor?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="handshake .png" style="width: 68px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/52491i8E9D2FFB3C7BC293/image-dimensions/68x68?v=v2" width="68" height="68" role="button" title="handshake .png" alt="handshake .png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt;Becoming a mentor is my way of giving back to the SAP community that’s played such a big role in my journey. I truly believe that knowledge grows when it’s shared, and I want to help others find clarity and confidence in this fast-moving field. With my background in product development, I can help approach problems with a critical eye and a practical mindset to build SAP solutions that truly address real-world needs and push innovation forward.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;What advice would like to share with other SAP community members?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="298874_collaborate_blue (1).png" style="width: 65px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/52495i64D82195EFF8CCB9/image-dimensions/65x65?v=v2" width="65" height="65" role="button" title="298874_collaborate_blue (1).png" alt="298874_collaborate_blue (1).png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;SPAN&gt;Stay curious and don’t be afraid to ask questions, no matter how simple they seem. SAP is a vast ecosystem, and nobody knows everything. Collaboration and continuous learning are key. Also, share your experiences! Whether it’s a small tip, a lesson learned, or a project success, your voice might be exactly what someone else needs to hear.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/sap-community-leaders-finder/marla-alschweiki/ba-p/14152384"/>
    <published>2025-07-15T13:38:58.090000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/developing-a-shell-plugin-for-sap-build-work-zone-to-display-custom/ba-p/14155228</id>
    <title>Developing a Shell Plugin for SAP Build Work Zone to Display Custom Notifications on SAP BTP</title>
    <updated>2025-07-17T14:41:49.080000+02:00</updated>
    <author>
      <name>Mykhaylo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1584309</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Introduction &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Unlocking Custom Experiences in SAP Build Work Zone: Shell Plugin in Action&lt;/STRONG&gt;&lt;BR /&gt;In today’s digital workplace, personalization is key. This article showcases how to enhance SAP Build Work Zone with a custom shell plugin that brings tailored notifications right to the user’s fingertips. Using a Multi-Target UI5/CAP application, we’ll demonstrate how to create, manage, and surface custom alerts—seamlessly integrated into your Work Zone experience.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="f.drawio.png" style="width: 451px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288561iDC61B9991F3786DD/image-dimensions/451x313?v=v2" width="451" height="313" role="button" title="f.drawio.png" alt="f.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-right" image-alt="Screenshot 2025-07-17 at 10.34.19 copy.png" style="width: 454px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288563i8567242FF02F247C/image-dimensions/454x315?v=v2" width="454" height="315" role="button" title="Screenshot 2025-07-17 at 10.34.19 copy.png" alt="Screenshot 2025-07-17 at 10.34.19 copy.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;To replicate this you should have a base knowledge of SAP BTP, JS, SAPUI5 and SAP CAP, I will not go deep down in to how to generate a project in BAS, or create an instance in SAP BTP.&amp;nbsp;&lt;/P&gt;&lt;P&gt;***GITHUB URL REMOVED BY MODERATION***&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Project Architecture&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="shell-plugin-diagram.drawio.png" style="width: 926px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289794i8FD7E8CB2C8CE32C/image-dimensions/926x486?v=v2" width="926" height="486" role="button" title="shell-plugin-diagram.drawio.png" alt="shell-plugin-diagram.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Backend/Frontend App Development:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Generate a regular SAP CAP application&lt;/P&gt;&lt;P&gt;Firstly I've created a primitave data structure under db/schema.cds&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;namespace my.Notification;

entity Notification {
    key ID : UUID;
    type: String(30);
    title: String;
    message: String;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Than a service at srv/service.cds:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;using { my.Notification as my } from '../db/schema';

service NotificationService {
    entity Notification as projection on my.Notification;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;And the backend is almost done, now add an app router and a sapui5 freestyle base app to the project.&lt;/P&gt;&lt;P&gt;Now let's add a form to create and delete the notifications under app/&amp;lt;app name&amp;gt;/webapp/view/&amp;lt;view name&amp;gt;.view.xml:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;EM&gt;Remember to correct the controller name if you copy the code&lt;/EM&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;Remember to correct the controller name if you copy the code&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;mvc:View
    controllerName="com.sap.shellnotificationsender.controller.MyView"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns="sap.m"
    xmlns:form="sap.ui.layout.form"
    xmlns:core="sap.ui.core"&amp;gt;

    &amp;lt;Toolbar&amp;gt;
        &amp;lt;Title text="{i18n&amp;gt;title}" /&amp;gt;
    &amp;lt;/Toolbar&amp;gt;

    &amp;lt;Shell id="mainShell"&amp;gt;
        &amp;lt;VBox class="sapUiSmallMargin"&amp;gt;
            &amp;lt;form:SimpleForm
                    editable="true"
                    layout="ResponsiveGridLayout"
                    labelSpanL="1" labelSpanM="2"
                    adjustLabelSpan="false"
                    columnsL="3" columnsM="3"
                    class="sapUiSmallMarginBottom"&amp;gt;

                    &amp;lt;Label text="Type" /&amp;gt;
                    &amp;lt;ComboBox id="newType" selectedKey="information"&amp;gt;
                        &amp;lt;core:Item key="Warning" text="Warning" /&amp;gt;
                        &amp;lt;core:Item key="Success" text="Success" /&amp;gt;
                        &amp;lt;core:Item key="Information" text="Information" /&amp;gt;
                        &amp;lt;core:Item key="Error" text="Error" /&amp;gt;
                        &amp;lt;core:Item key="Alert" text="Alert" /&amp;gt;
                        &amp;lt;core:Item key="Confirm" text="Confirm" /&amp;gt;
                    &amp;lt;/ComboBox&amp;gt;

                    &amp;lt;Label text="Title" /&amp;gt;
                    &amp;lt;Input id="newTitle" /&amp;gt;

                    &amp;lt;Label text="Message" /&amp;gt;
                    &amp;lt;Input id="newMessage" /&amp;gt;

                    &amp;lt;Label text="" /&amp;gt;
                    &amp;lt;Button text="Add Notification"
                        press="onAddNotification"
                        type="Emphasized"/&amp;gt;
                &amp;lt;/form:SimpleForm&amp;gt;

            &amp;lt;!-- Table Section --&amp;gt;
            &amp;lt;Table id="shellNotificationsTable" items="{/Notification}"&amp;gt;
                &amp;lt;columns&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;Text text="Delete" /&amp;gt;
                    &amp;lt;/Column&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;Text text="Type" /&amp;gt;
                    &amp;lt;/Column&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;Text text="Title" /&amp;gt;
                    &amp;lt;/Column&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;Text text="Message" /&amp;gt;
                    &amp;lt;/Column&amp;gt;
                &amp;lt;/columns&amp;gt;

                &amp;lt;items&amp;gt;
                    &amp;lt;ColumnListItem&amp;gt;
                        &amp;lt;cells&amp;gt;
                            &amp;lt;Button icon="sap-icon://delete" type="Negative" press="deleteRow" /&amp;gt;
                            &amp;lt;Text text="{type}" /&amp;gt;
                            &amp;lt;Text text="{title}" /&amp;gt;
                            &amp;lt;Text text="{message}" /&amp;gt;
                        &amp;lt;/cells&amp;gt;
                    &amp;lt;/ColumnListItem&amp;gt;
                &amp;lt;/items&amp;gt;
            &amp;lt;/Table&amp;gt;
        &amp;lt;/VBox&amp;gt;
    &amp;lt;/Shell&amp;gt;
&amp;lt;/mvc:View&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;As next let's implement the controller that manages the view with all the necessary notification creation/deletion methods:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
    "sap/ui/core/mvc/Controller",
    "sap/m/MessageBox",
	"sap/m/MessageToast"
], (Controller, MessageBox, MessageToast) =&amp;gt; {
    "use strict";

    return Controller.extend("com.sap.shellnotificationsender.controller.MyView", {
        onInit() {

        },

        deleteRow: function (oEvent) {
			var oContext = oEvent.getSource().getBindingContext().getObject();
			console.log(oContext);
			MessageBox.confirm("Are your sure you want to delete this message?", {
				title: "Confirm",
				onClose: function (sAction) {
					if (sAction === "OK") {
						this.onDeleteSpecificRecord(oContext)
					}
				}.bind(this),
				actions: [
					MessageBox.Action.OK,
					MessageBox.Action.CANCEL
				],
				emphasizedAction: MessageBox.Action.OK
			})
		},

		onDeleteSpecificRecord: function (oRecord) {
			var oDataModel = this.getOwnerComponent().getModel();
			var oBusyDialog = new sap.m.BusyDialog({
				title: "Deleting Record",
				text: "Please Wait ..."
			})
			oBusyDialog.open();
			oDataModel.delete(`/Notification('${oRecord.ID}')`)
				.then(() =&amp;gt; {
					console.log("Record deleted successfully");
				})
				.catch((error) =&amp;gt; {
					console.error("Deletion failed:", error);
				})
				.finally(() =&amp;gt; {
					this.getView().byId("shellNotificationsTable").getBinding("items").refresh();
					oBusyDialog.close();
				});
		},

		onAddNotification: function () {
			const sType = this.byId("newType").getValue();
			const sTitle = this.byId("newTitle").getValue();
			const sMessage = this.byId("newMessage").getValue();

			this.byId("shellNotificationsTable").getBinding("items").create({
				"type": sType,
				"title": sTitle,
				"message": sMessage
			}).created().then(function() {
				MessageToast.show("Created")
			})
		}
    });
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The last thing to do is to add all the features that you need to the application, like HANA DB, xsuaa in my case, to do so just run&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add hana
cds add xsuaa&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;And like this is the app ready, let's deploy it, firstly login to Cloud Foundry&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf login&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;then right click on the mta.yaml file -&amp;gt; "Build MTA Project"&lt;/P&gt;&lt;P&gt;then go to mta_archives/&amp;lt;archive name&amp;gt;.tar right click and "Deploy MTA Project".&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;BTP Steps&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To connect to the app from the shell plugin you need to create a SAP BTP Destination,&amp;nbsp;&lt;/P&gt;&lt;P&gt;to do so go to &amp;lt;BTP Subaccount&amp;gt; -&amp;gt; Cloud Foundry -&amp;gt; &amp;lt;Your space&amp;gt; -&amp;gt; &amp;lt;Your app name&amp;gt;-srv and copy it's address, that's your destination URL&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-07-17 at 13.09.47.png" style="width: 943px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287889i176C46B55421F1C7/image-dimensions/943x624?v=v2" width="943" height="624" role="button" title="Screenshot 2025-07-17 at 13.09.47.png" alt="Screenshot 2025-07-17 at 13.09.47.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now you need to get the authentication data for the Destination&lt;/P&gt;&lt;P&gt;Go to &amp;lt;Your CF Space&amp;gt; -&amp;gt; Instances -&amp;gt;&amp;nbsp;&amp;lt;Your app name&amp;gt;-auth -&amp;gt;&amp;nbsp;&amp;lt;Your app name&amp;gt;-auth-key&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-07-17 at 13.10.05.png" style="width: 945px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287891iACBEC4F12DB9F3B7/image-dimensions/945x625?v=v2" width="945" height="625" role="button" title="Screenshot 2025-07-17 at 13.10.05.png" alt="Screenshot 2025-07-17 at 13.10.05.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Copy these:&lt;/P&gt;&lt;P&gt;Client ID, Client secret and url (Access Token URL)&lt;/P&gt;&lt;P&gt;Now go back to your Subaccount and create a new destination with your data:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;URL:&amp;nbsp; app-srv URL&lt;/LI&gt;&lt;LI&gt;Authentication:&amp;nbsp;OAuth2ClientCredentials&lt;/LI&gt;&lt;LI&gt;ClientID: ClientID&lt;/LI&gt;&lt;LI&gt;Client secret: Client secret&lt;/LI&gt;&lt;LI&gt;Token service URL type: Dedicated&lt;/LI&gt;&lt;LI&gt;Token Service URL: &amp;lt;Access token URL&amp;gt;/oauth/token&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;After this add these 2 parameters:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;HTML5.DynamicDestination: true&lt;/LI&gt;&lt;LI&gt;WebIDEEnabled: true&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With this step is the backend development concluded.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Shell Plugin Development:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Firstly a general explanation about shell plugins. Shell Plugins are UI5 Applications that allow to add new Elements to SAP Build Work Zone/Fiori Launchpad like Headers, Footers, menu items etc.&lt;/P&gt;&lt;P&gt;To create a shell plugin generate a plain UI5 Basic Freestyle application with the "Template Wizard" in Business Application Studio.&lt;/P&gt;&lt;P&gt;There are a couple of things to modify in the manifest.json to make a a Shell Plugin:&lt;/P&gt;&lt;P&gt;Inside sap.app change the type to component:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;"type": "component"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In sap.app&amp;gt;crossNavigation hide the launcher:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;"crossNavigation": {
      "inbounds": {
        "Shell-plugin": {
          "semanticObject": "Shell",
          "action": "plugin",
          "title": "{{Shell-plugin.flpTitle}}",
          "hideLauncher": true,
          "icon": "",
          "signature": {
            "parameters": {},
            "additionalParameters": "allowed"
          }
        }
      }
    },&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Add this part under after sap.cloud:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;"sap.flp": {
    "type": "plugin"
  }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp; This way the Shell Plugin configuration is completed, now let's add our newly created Destination&lt;/P&gt;&lt;P&gt;in sap.app&amp;gt;dataSources add this:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;"NotificationService": {
        "uri": "/ShellNotifications/odata/v4/notification/",
        "type": "OData",
        "settings": {
          "odataVersion": "4.0"
        }
      }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;and in sap.ui5&amp;gt;models:&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;"Notification": {
        "dataSource": "NotificationService",
        "settings": {
          "synchronizationMode": "None",  
          "operationMode": "Server",
          "autoExpandSelect": true
        },
        "type": "sap.ui.model.odata.v4.ODataModel"
      }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;and as last thing add this route to your xs-app.json file:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;Remember: the order of the routes in xs-app matters, if you add it at the end it might not be resolved correctly by the app router&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;Remember: the order of the routes in xs-app matters, if you add it at the end it might not be resolved correctly by the app router&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;{
      "source": "^/ShellNotifications/(.*)$",
      "destination": "ShellNotifications",
      "target": "$1",
      "authenticationType": "xsuaa",
      "csrfProtection": true
    },&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now finally you can add the code that displays the notifications, to do so open the Component.js file and add the following code to the init method:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const oModel = this.getModel("Notification");

            oModel.bindList("/Notification").requestContexts().then((aContexts) =&amp;gt; {
                const aData = aContexts.map(oContext =&amp;gt; oContext.getObject());
                for (const el of aData) {
                    const nType = el["type"];
                    const nTitle = el["title"];
                    const nMessage = el["message"]
                    if (nType === "Information") {
                        MessageBox.information(nMessage, {
                            title: nTitle
                        });
                    } else if (nType === "Alert") {
                        MessageBox.alert(nMessage, {
                            title: nTitle
                        })
                    } else if (nType === "Confirm") {
                        MessageBox.confirm(nMessage, {
                            title: nTitle
                        })
                    } else if (nType === "Error") {
                        MessageBox.error(nMessage, {
                            title: nTitle
                        })
                    } else if (nType === "Success") {
                        MessageBox.success(nMessage, {
                            title: nTitle
                        })
                    } else if (nType === "Warning") {
                        MessageBox.warning(nMessage, {
                            title: nTitle
                        })
                    }
                }
            }).catch((err) =&amp;gt; {
                console.error("Failed to load notifications:", err);
            });&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;And like this is the development finished, the last step is to deploy it and add to WorkZone.&lt;/P&gt;&lt;P&gt;To build it do the same steps as with the MTA app:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;right click on the mta.yaml file -&amp;gt; "Build MTA Project"&lt;/LI&gt;&lt;LI&gt;go to mta_archives/&amp;lt;archive name&amp;gt;.tar right click and "Deploy MTA Project".&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;SAP Build Work Zone Steps&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Although the SAP Build Work Zone standard and advanced edition have some UI differences, the steps are the same for both of them.&lt;/P&gt;&lt;P&gt;All the steps performed below are done on SAP Build Work Zone advanced edition.&lt;/P&gt;&lt;P&gt;Start by going to the Administration Console -&amp;gt; External Integration -&amp;gt; Business Content -&amp;gt; Content Manager&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="f.drawio copy.png" style="width: 941px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287908i32644250736D2439/image-dimensions/941x562?v=v2" width="941" height="562" role="button" title="f.drawio copy.png" alt="f.drawio copy.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; Than open the content channel and update the "HTML5 Apps"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="f.drawio.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287909iE02C499761BD5E50/image-dimensions/936x559?v=v2" width="936" height="559" role="button" title="f.drawio.png" alt="f.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; After that go Content Explorer and click Content Explorer (In the current UI it's a button in the header)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="f.drawio copy 2.png" style="width: 919px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287911iE1DD48D7161496D1/image-dimensions/919x549?v=v2" width="919" height="549" role="button" title="f.drawio copy 2.png" alt="f.drawio copy 2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select "HTML5 Apps" and add the new Shell Plugin that you just created&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="f.drawio copy 3.png" style="width: 921px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287912i88EE9B7A47CB6A3A/image-dimensions/921x550?v=v2" width="921" height="550" role="button" title="f.drawio copy 3.png" alt="f.drawio copy 3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; To be able to see the plugin, assign it to a role, in my case it's the "Everyone" role, you can find it in the Content Manager&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="f.drawio copy 4.png" style="width: 922px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287913i25996A10836F1110/image-dimensions/922x551?v=v2" width="922" height="551" role="button" title="f.drawio copy 4.png" alt="f.drawio copy 4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; After you've done that you should be able to see your new shell plugin the SAP Build Work Zone's launchpad&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="f.drawio copy 5.png" style="width: 921px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287914i5AA60516B3696BD0/image-dimensions/921x550?v=v2" width="921" height="550" role="button" title="f.drawio copy 5.png" alt="f.drawio copy 5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; If you don't see it try to open the page in an "Anonymous" Tab and check the developer console&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;What we’ve built here is just a glimpse into what’s possible with shell plugins in SAP Build Work Zone. By integrating a custom notification system, we’ve shown how easily you can extend the platform to better fit your customers’ needs. But this is only the starting point.&lt;/P&gt;&lt;P&gt;There’s a wide range of enhancements you can explore next—such as targeting specific users with personalized notifications, adding actionable buttons to each alert, or even integrating with external systems to trigger real-time messages. The flexibility of shell extensions offers endless opportunities to enrich the Work Zone experience and tailor it to your organization’s workflows.&lt;/P&gt;&lt;P&gt;So go ahead—experiment, extend, and elevate your Work Zone.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/developing-a-shell-plugin-for-sap-build-work-zone-to-display-custom/ba-p/14155228"/>
    <published>2025-07-17T14:41:49.080000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/the-complete-guide-to-calling-actions-in-ui5-with-custom-code/ba-p/14156201</id>
    <title>The Complete Guide to Calling Actions in UI5 with Custom Code</title>
    <updated>2025-07-21T09:04:09.143000+02:00</updated>
    <author>
      <name>Marian_Zeis</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/61</uri>
    </author>
    <content>&lt;P class=""&gt;In the past I’ve had to implement &lt;STRONG&gt;actions&lt;/STRONG&gt; in SAPUI5 every now and then. Because I mostly work with Fiori elements now, hand-coding actions has become a rare task for me — and whenever I do need to do it, the official docs are pretty thin and the code samples are sparse.&lt;/P&gt;&lt;P class=""&gt;With this post (and a CAP sample project) I want to walk you through the process&amp;nbsp;— and leave a note to my future self&amp;nbsp;— on how to wire up actions in SAPUI5.&lt;/P&gt;&lt;H2 id="toc-hId-1735153572"&gt;&lt;STRONG&gt;What exactly are “actions” and “functions”?&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Both &lt;STRONG&gt;Actions&lt;/STRONG&gt; and &lt;STRONG&gt;Functions&lt;/STRONG&gt; are service operations defined in OData / CAP that go beyond the standard CRUD verbs:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Concept&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Side effects&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Return type&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Typical use case&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Action&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Yes (write)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;void / entity / collection&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Update price, approve a request&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Function&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;No (read-only)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;scalar / entity / collection&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Calculate price, fetch KPIs&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class=""&gt;In CAP there are two scopes for both actions and functions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Bound&lt;/STRONG&gt; — tied to a single instance or collection of an entity.&lt;STRONG&gt;Unbound&lt;/STRONG&gt; — defined at service level, usable anywhere.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1538640067"&gt;&lt;STRONG&gt;Quick Start&lt;/STRONG&gt;&lt;/H2&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;git clone https://github.com/marianfoo/ui5-call-action.git
cd ui5-call-action
npm install          # installs CAP, UI5 tooling, etc.
npm run deploy        # deploys the service to the sqlite database
npm run watch           # starts CAP + FE/Freestyle apps&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Open in your browser &lt;A href="http://localhost:4004" target="_self" rel="nofollow noopener noreferrer"&gt;http://localhost:4004&lt;/A&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;UI5 V4 Fiori elements → &lt;A href="http://localhost:4004/com.marianzeis.books/index.html" target="_blank" rel="noopener nofollow noreferrer"&gt;/com.marianzeis.books&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;UI5 V2 Fiori elements → &lt;A href="http://localhost:4004/com.marianzeis.booksv2/index.html" target="_blank" rel="noopener nofollow noreferrer"&gt;/com.marianzeis.booksv2&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;UI5 V4 Freestyle → &lt;A href="http://localhost:4004/com.freestyle/index.html" target="_blank" rel="noopener nofollow noreferrer"&gt;/com.freestyle&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;UI5 V2 Freestyle → &lt;A href="http://localhost:4004/com.freestyle-v2/index.html" target="_blank" rel="noopener nofollow noreferrer"&gt;/com.freestyle-v2&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Marian_Zeis_1-1752834700540.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288548iE449153FD52D2B53/image-size/large?v=v2&amp;amp;px=999" role="button" title="Marian_Zeis_1-1752834700540.png" alt="Marian_Zeis_1-1752834700540.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1342126562"&gt;&lt;STRONG&gt;Implementing actions in CAP&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;I’ve put together a classic &lt;STRONG&gt;Bookshop&lt;/STRONG&gt; example and sprinkled in a handful of actions.&lt;BR /&gt;&lt;STRONG&gt;Full repo&lt;/STRONG&gt;: &lt;A href="https://github.com/marianfoo/ui5-call-action" target="_blank" rel="noopener nofollow noreferrer"&gt;github.com/marianfoo/ui5-call-action&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1274695776"&gt;&lt;STRONG&gt;Bound actions&lt;/STRONG&gt;&lt;/H3&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Action&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;What it does&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Parameters&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;promoteBook&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Promote a book&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;—&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;setDiscount&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Apply a discount&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;percentage, reason&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;halfPrice&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Cut price in half&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;—&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;addChapter&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Add a chapter&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;title, pages&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;SPAN&gt;massHalfPrice&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Half price for multiple books&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;books[]&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-1078182271"&gt;&lt;STRONG&gt;Unbound actions&lt;/STRONG&gt;&lt;/H3&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Action&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;What it does&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Parameters&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;refreshCatalog&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Refresh catalog&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;—&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;generateReport&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Generate report&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;type, dateFrom, dateTo&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;createBooksAndChapters&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Bulk create books + chapters&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;books[] and chapters[] (deep parameter)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-881668766"&gt;&lt;STRONG&gt;Functions (read-only)&lt;/STRONG&gt;&lt;/H3&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Function&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Scope&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;getCurrentPrice&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;bound&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Return current book price&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;getSumBookPrices&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;unbound&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Sum of all book prices&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class=""&gt;&lt;I&gt;Definitions&lt;/I&gt; → &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/main/srv/bookshop-service.cds" target="_self" rel="nofollow noopener noreferrer"&gt;srv/bookshop-service.cds&lt;/A&gt;&lt;BR /&gt;&lt;I&gt;Handlers&lt;/I&gt; → &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/main/srv/bookshop-service.js" target="_self" rel="nofollow noopener noreferrer"&gt;srv/bookshop-service.js&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-556072542"&gt;&lt;STRONG&gt;OData V2 quick note&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;CAP speaks OData V4 out-of-the-box. To expose an OData V2 endpoint, install &lt;A href="https://github.com/cap-js-community/odata-v2-adapter" target="_blank" rel="noopener nofollow noreferrer"&gt;@cap-js-community/odata-v2-adapter&lt;/A&gt;. The service will be reachable at:&lt;/P&gt;&lt;pre class="lia-code-sample language-text"&gt;&lt;code&gt;http://localhost:4004/odata/v2/bookshop&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-359559037"&gt;&lt;STRONG&gt;SAPUI5 via annotations&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;The smoothest route in UI5 is Fiori elements. Just add an annotation and the button appears. Example for &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/576e497e7b52a527dfacbca0ebc9764f1d38d7eb/srv/fiori-annotations.cds#L25-L29" target="_self" rel="nofollow noopener noreferrer"&gt;promoteBook&lt;/A&gt;. :&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;{
  $Type: 'UI.DataFieldForAction',
  Label: 'CAP Promote Book',
  Action: 'BookshopService.promoteBook'
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The actions are now visible in the table header. The buttons with the prefix ‘CAP’ are defined with the annotation, the buttons with the prefix ‘CUST’ are custom actions defined and implemented in the frontend.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Marian_Zeis_0-1752834587094.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288547i5242AF92D93D2C06/image-size/large?v=v2&amp;amp;px=999" role="button" title="Marian_Zeis_0-1752834587094.png" alt="Marian_Zeis_0-1752834587094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-163045532"&gt;&lt;STRONG&gt;SAPUI5 with custom code&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;To compare APIs I created two freestyle apps and two Fiori elements apps:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;App&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Tech&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Key APIs&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;/app/freestyle&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;OData V4, TypeScript&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;A href="https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataContextBinding%23methods/invoke" target="_self" rel="noopener noreferrer"&gt;invoke()&lt;/A&gt;, &lt;A href="https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataContextBinding%23methods/execute" target="_self" rel="noopener noreferrer"&gt;execute()&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;/app/freestyle-v2&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;OData V2, TypeScript&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;A href="https://ui5.sap.com/#/api/sap.ui.model.odata.v2.ODataModel%23methods/callFunction" target="_self" rel="noopener noreferrer"&gt;callFunction()&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;/app/books, /app/books-v2&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Fiori elements&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;i&lt;A href="https://ui5.sap.com/#/api/sap.fe.core.controllerextensions.EditFlow%23methods/invokeAction" target="_self" rel="noopener noreferrer"&gt;nvokeAction()&lt;/A&gt; / &lt;A href="https://ui5.sap.com/#/api/sap.suite.ui.generic.template.Canvas.extensionAPI.ExtensionAPI%23methods/invokeActions" target="_self" rel="noopener noreferrer"&gt;invokeActions()&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-95614746"&gt;&lt;STRONG&gt;OData V4 freestyle app&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Controller → &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/main/app/freestyle/webapp/controller/MainView.controller.ts" target="_blank" rel="noopener nofollow noreferrer"&gt;MainView.controller.ts&lt;/A&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-typescript"&gt;&lt;code&gt;// Legacy pattern
const actionBinding = odataModel.bindContext(
  "BookshopService.promoteBook(...)",
  bookContext
);
await actionBinding.execute();

// Modern pattern
await actionBinding.invoke();&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Marian_Zeis_2-1752834755222.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288550i317CBB5D6A9A2FDD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Marian_Zeis_2-1752834755222.png" alt="Marian_Zeis_2-1752834755222.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId--469533135"&gt;Collection Bound Actions&lt;/H4&gt;&lt;P&gt;The action "massHalfPrice" is a so called Collection-Bound Action only for V4. The documentation about this is very sparse.&lt;BR /&gt;In capire you can find samples about the implementation in CAP: &lt;A href="https://cap.cloud.sap/docs/guides/providing-services#actions-functions" target="_self" rel="nofollow noopener noreferrer"&gt;Actions &amp;amp; Functions&lt;/A&gt; /&amp;nbsp;&lt;A href="https://cap.cloud.sap/docs/cds/cdl#bound-actions" target="_self" rel="nofollow noopener noreferrer"&gt;Bound Actions and Functions&lt;/A&gt;&lt;BR /&gt;In the UI5 Documentation it looks like it is described under "&lt;A href="https://ui5.sap.com/#/topic/cbf16c599f2d4b8796e3702f7d4aae6c" target="_self" rel="noopener noreferrer"&gt;Static Action".&lt;/A&gt;&lt;BR /&gt;It was not easy to figure out how to call from the frontend and i was not the &lt;A href="https://community.sap.com/t5/application-development-and-automation-discussions/how-to-perform-a-cap-bound-action-on-a-collection/m-p/13652372" target="_self"&gt;only one how asked&lt;/A&gt; this.&lt;BR /&gt;&lt;STRONG&gt;Basically, I see the action as a normal bound action that has the type Books as an input parameter. Accordingly, the call in the front end is the same, only the path to call in frontend is slightly different.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/marianfoo/ui5-call-action/blob/9379725220073cbabff5208ad5ff2e35739720b6/srv/bookshop-service.cds#L43" target="_self" rel="nofollow noopener noreferrer"&gt;Definition in the CAP App&lt;/A&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;  entity Books as projection on my.Books actions {
    //bound to the collection and not a specific instance of Books
    action massHalfPrice (books: many $self) returns array of Books;
    // bound action with one book as parameter
    action similarBooks (book: $self) returns array of Books;
  };
//unbound action with many books as parameter
action massHalfPrice (books: many Books) returns array of Books;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;metadata of three different actions in V4&lt;BR /&gt;&lt;STRONG&gt;Top&lt;/STRONG&gt; &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/533f3cbfabf47a17b5b8f444929f4a322edcc0c7/srv/bookshop-service.cds#L43" target="_self" rel="nofollow noopener noreferrer"&gt;Bound Collection-Bound Action&lt;/A&gt; // &lt;STRONG&gt;Middle&lt;/STRONG&gt;&amp;nbsp;&lt;A href="https://github.com/marianfoo/ui5-call-action/blob/533f3cbfabf47a17b5b8f444929f4a322edcc0c7/srv/bookshop-service.cds#L44" target="_self" rel="nofollow noopener noreferrer"&gt;Bound Action with one Book as parameter&lt;/A&gt;&amp;nbsp; // &lt;STRONG&gt;Bottom&lt;/STRONG&gt; U&lt;A href="http://action%20massHalfPrice (books: many Books) returns array of Books;" target="_self" rel="nofollow noopener noreferrer"&gt;nbound Collection-Bound Action&lt;/A&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Action Name="massHalfPrice" IsBound="true" EntitySetPath="books"&amp;gt;
&amp;lt;Parameter Name="books" Type="Collection(BookshopService.Books)" Nullable="true"/&amp;gt;
&amp;lt;ReturnType Type="Collection(BookshopService.Books)"/&amp;gt;
&amp;lt;/Action&amp;gt;
&amp;lt;Action Name="similarBooks" IsBound="true" EntitySetPath="book"&amp;gt;
&amp;lt;Parameter Name="book" Type="BookshopService.Books"/&amp;gt;
&amp;lt;ReturnType Type="Collection(BookshopService.Books)"/&amp;gt;
&amp;lt;/Action&amp;gt;
&amp;lt;Action Name="massHalfPrice" IsBound="false"&amp;gt;
&amp;lt;Parameter Name="books" Type="Collection(BookshopService.Books)" Nullable="true"/&amp;gt;
&amp;lt;ReturnType Type="Collection(BookshopService.Books)"/&amp;gt;
&amp;lt;/Action&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;A href="https://github.com/marianfoo/ui5-call-action/blob/9379725220073cbabff5208ad5ff2e35739720b6/app/freestyle/webapp/controller/MainView.controller.ts#L410-L437" target="_self" rel="nofollow noopener noreferrer"&gt;Call from the UI5 OData V4 Freestyle App to call Bound Collection Action&lt;/A&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;public async invokeMassHalfPrice(): Promise&amp;lt;void&amp;gt; {
    const odataModel = this.getView()?.getModel() as ODataModel;
    const actionPath = "/Books/BookshopService.massHalfPrice(...)";
    // Get existing books from the model instead of creating dummy data
    // Here we use the binding parameter approach - binding to existing collection data
    const table = this.byId("booksTable") as Table;
    const binding = table.getBinding("items");
    const booksData = binding.getContexts().map(context =&amp;gt; {
        const bookObject = context.getObject();
        return {
            ID: bookObject.ID,
            IsActiveEntity: bookObject.IsActiveEntity
        };
    });
    const actionBinding = odataModel.bindContext(actionPath);
    actionBinding.setParameter("books", booksData);
    await actionBinding.invoke();
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--372643633"&gt;&lt;STRONG&gt;OData V2 freestyle app&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Controller → &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/main/app/freestyle-v2/webapp/controller/MainView.controller.ts" target="_self" rel="nofollow noopener noreferrer"&gt;MainView.controller.ts&lt;/A&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-typescript"&gt;&lt;code&gt;const data = await new Promise((resolve, reject) =&amp;gt; {
  model.callFunction("/Books_promoteBook", {
    method: "POST",
    urlParameters: { ID: bookId, IsActiveEntity: true },
    success: resolve,
    error: reject
  });
});&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Paths differ:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;V4 → BookshopService.promoteBook(...)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;V2 → /Books_promoteBook&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Marian_Zeis_3-1752834774188.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288551i54A52FEAAFA615C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Marian_Zeis_3-1752834774188.png" alt="Marian_Zeis_3-1752834774188.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;!--            ——————————- existing intro &amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp; CAP sections unchanged ——————————-            --&gt;&lt;!--            INSERT AFTER “OData V2 freestyle app” SECTION            --&gt;&lt;H3 id="toc-hId--569157138"&gt;&lt;STRONG&gt;Custom code in Fiori elements (V4 &amp;amp; V2)&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Fiori elements already renders “CAP” buttons for every annotated action, but you can go further and add &lt;EM&gt;CUST&lt;/EM&gt; logic without leaving the Fiori elements shell. All you need is an ext/controller/*.ts|js file and manifest.json metadata that points to it. Inside that controller you work with ExtensionAPI:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;A href="https://ui5.sap.com/#/api/sap.fe.core.controllerextensions.EditFlow%23methods/invokeAction" target="_self" rel="noopener noreferrer"&gt;getEditFlow().invokeAction()&lt;/A&gt; — V4 helper that wraps OData calls, busy indicators, draft handling, side-effects and messaging.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;A href="https://ui5.sap.com/#/api/sap.suite.ui.generic.template.ListReport.extensionAPI.ExtensionAPI%23methods/invokeActions" target="_self" rel="noopener noreferrer"&gt;extensionAPI.invokeActions()&lt;/A&gt; — classic V2 helper (still available, multi-select aware).&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Below is a stripped-down version of the demo controller &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/main/app/books/webapp/ext/controller/Action.ts" target="_blank" rel="noopener nofollow noreferrer"&gt;Action.ts&lt;/A&gt; (V4) / &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/main/app/books-v2/webapp/ext/controller/ListReportExt.controller.js" target="_blank" rel="noopener nofollow noreferrer"&gt;ListReportExt.controller.js&lt;/A&gt; (V2). Notice how the pattern is always the same: pick the selected contexts, call invokeAction(), pass parameters if needed.&lt;/P&gt;&lt;H4 id="toc-hId--1059073650"&gt;OData V4&lt;/H4&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// 1) Bound action WITHOUT parameters
export async function customPromoteBook(this: ExtensionAPI) {
  const ctx = this.getSelectedContexts();
  await this.getEditFlow().invokeAction("BookshopService.promoteBook", {
    contexts: ctx
  });
}

// 2) Bound action WITH parameters
export async function customSetDiscount(this: ExtensionAPI) {
  const ctx = this.getSelectedContexts();
  await this.getEditFlow().invokeAction("BookshopService.setDiscount", {
    contexts: ctx,
    parameterValues: [
      { name: "percentage", value: 15 },
      { name: "reason",     value: "HOLIDAY_SALE" }
    ]
  });
}

// 3) Unbound action WITHOUT parameters
export async function customRefreshCatalog(this: ExtensionAPI) {
  await this.getEditFlow().invokeAction("refreshCatalog", {
    model: this.getModel()
  });
}

// 4) Unbound action WITH parameters
export async function customGenerateReport(this: ExtensionAPI) {
  await this.getEditFlow().invokeAction("generateReport", {
    model: this.getModel(),
    parameterValues: [
      { name: "reportType", value: "sales" },
      { name: "dateFrom",   value: "2024-01-01" },
      { name: "dateTo",     value: "2024-12-31" }
    ]
  });
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--1255587155"&gt;&lt;STRONG&gt;OData V2&lt;/STRONG&gt;&lt;/H4&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;/**
 * 1. Bound action WITHOUT parameters - using invokeActions
 */
customPromoteBookInvoke: async function() {
    const contexts = this.extensionAPI.getSelectedContexts();     // Get selected rows
    await this.extensionAPI.invokeActions("/Books_promoteBook", contexts);
}
/**
 * 2. Bound action WITH parameters - using invokeActions
 */
customSetDiscountInvoke: async function() {
    const contexts = this.extensionAPI.getSelectedContexts();
    const parameters = { 
        percentage: 15, 
        reason: "HOLIDAY_SALE" 
    };
    await this.extensionAPI.invokeActions("/Books_setDiscount", contexts, parameters);
}
/**
 * 3. Unbound action WITHOUT parameters - using invokeActions
 */
customRefreshCatalogInvoke: async function() {
    try {
        await this.extensionAPI.invokeActions("/refreshCatalog");
        MessageToast.show("Catalog refreshed successfully");
    } catch (error) {
        MessageToast.show("Failed to refresh catalog: " + (error.message || "Unknown error"));
    }
}
/**
 * 4. Unbound action WITH parameters - using invokeActions
 */
customGenerateReportInvoke: async function() {
    const parameters = {
        reportType: "sales",
        dateFrom: "2024-01-01",
        dateTo: "2024-12-31"
    };
    const result = await this.extensionAPI.invokeActions("/generateReport", null, parameters);
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;&lt;STRONG&gt;Why bother?&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Quickly add dialogs, parameter defaults, or pre/post-processing logic without touching the backend.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Framework handles draft save, busy state and message pop-ups for you.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;One handler works for multi-select (just pass an array of contexts).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;You can mix CAP-generated buttons and CUST buttons side-by-side to compare approaches.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="215.266px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Fiori elements API&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="308.828px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Supports&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256.172px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Recommended for&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="215.266px"&gt;&lt;P class=""&gt;getEditFlow().invokeAction()&lt;/P&gt;&lt;/TD&gt;&lt;TD width="308.828px"&gt;&lt;P class=""&gt;Bound + Unbound actions, parameters, V4&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256.172px"&gt;&lt;P class=""&gt;Modern Draft-aware V4 apps&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="215.266px"&gt;&lt;P class=""&gt;extensionAPI.invokeActions()&lt;/P&gt;&lt;/TD&gt;&lt;TD width="308.828px"&gt;&lt;P class=""&gt;Bound + Unbound actions, multi-select, V2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256.172px"&gt;&lt;P class=""&gt;Classic V2 List Report/Object Page&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class=""&gt;That’s the entire toolbox for custom code inside Fiori elements — no need to switch to freestyle unless you want total UI freedom. Jump into the repo, press the &lt;EM&gt;CUST *&lt;/EM&gt; buttons and check the dev-tools network tab to see each API in action.&lt;/P&gt;&lt;H2 id="toc-hId--865294646"&gt;&lt;STRONG&gt;API decision matrix&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Scenario&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Recommended API&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Why&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Fiori elements V4&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;CAP annotations or invokeAction()&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Auto buttons, framework busy-handling&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Fiori elements V2&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;CAP annotations + extensionAPI.invokeActions()&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Multi-select, side-effects, Fiori elements only API&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Freestyle V4&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;bindContext().invoke()&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Modern Promise API (requires UI5 1.123+)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Freestyle V4&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;bindContext().execute()&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;available since 1.37, &lt;SPAN class=""&gt;&lt;STRONG&gt;deprecated&lt;/STRONG&gt;&lt;/SPAN&gt; in 1.123; keeps working for backward compatibility&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Freestyle V2&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;ODataModel.callFunction()&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;no deep parameters, no collection-bound action&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class=""&gt;&lt;STRONG&gt;Rule of thumb&lt;/STRONG&gt; — start with annotations for business logic, move to custom controller code only where UI-specific behavior is needed.&lt;/P&gt;&lt;P class=""&gt;That’s it! Clone the repo, start cds watch, and explore each app to see the different APIs in action.&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;Also, create a Pull Request or Issue if a sample implementation is missing to complete the Guide!&lt;/P&gt;&lt;P class=""&gt;Changes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;23.07.2025: Add Collection-bound Actions&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/the-complete-guide-to-calling-actions-in-ui5-with-custom-code/ba-p/14156201"/>
    <published>2025-07-21T09:04:09.143000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cap-ify-ui5-auto-loading-ui5-tooling-extensions-the-cap-plug-in-way/ba-p/14160739</id>
    <title>CAP‑ify UI5: Auto‑Loading UI5 Tooling Extensions the CAP Plug‑in Way</title>
    <updated>2025-07-24T07:23:35.424000+02:00</updated>
    <author>
      <name>Marian_Zeis</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/61</uri>
    </author>
    <content>&lt;P&gt;I was back at Code&amp;nbsp;Connect this year, first enjoying UI5con and then diving straight into reCAP. Both parts of the event were packed with sharp sessions and brilliant people – if you were there, you know the vibe.&lt;/P&gt;&lt;H3 id="toc-hId-1864985972"&gt;&lt;STRONG&gt;Why CAP plug‑ins made me jealous&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;During the reCAP tracks I kept noticing how effortlessly &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Cloud+Application+Programming+Model/pd-p/9f13aee1-834c-4105-8e43-ee442775e5ce" class="lia-product-mention" data-product="100-1"&gt;SAP Cloud Application Programming Model&lt;/a&gt;&amp;nbsp;&amp;nbsp;plug‑ins integrate: install the package, let the plug‑in declare its events, and the framework picks it up – zero YAML, zero boilerpla&lt;/P&gt;&lt;P&gt;In his keynote&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/42075"&gt;@pmuessig&lt;/a&gt;&amp;nbsp; demoed something similar for UI5: a flag &lt;STRONG&gt;--rte&lt;/STRONG&gt; for &lt;A href="https://github.com/ui5-community/ui5-ecosystem-showcase/tree/main/packages/ui5-tooling-modules" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;EM&gt;ui5-tooling-modules&lt;/EM&gt;.&lt;/A&gt; It triggers an &lt;EM&gt;npm postinstall&lt;/EM&gt; script that writes the module into ui5.yaml, so you can use it right away. Nice – but my dream is the next step: UI5 tooling extensions that behave like CAP plug‑ins and “just work” after npm install.&lt;/P&gt;&lt;H3 id="toc-hId-1668472467"&gt;&lt;STRONG&gt;Enter &lt;EM&gt;ui5-plugin-loader&lt;/EM&gt; – a Proof of Concept (PoC)&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;That idea wouldn’t leave me alone, so – still sitting in the Audimax while listening to reCAP Sessions – I hacked together a proof&amp;nbsp;of&amp;nbsp;concept: &lt;STRONG&gt;ui5‑plugin‑loader(&lt;A href="https://www.npmjs.com/package/ui5-plugin-loader" target="_self" rel="nofollow noopener noreferrer"&gt;npmjs&lt;/A&gt; / &lt;A href="https://github.com/marianfoo/ui5-plugin-loader" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub Repo&lt;/A&gt;)&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Disclaimer:&lt;/EM&gt; The loader is a proof of concept, written for exploration. It’s not production‑ready and doesn’t match the polish of official extensions. Also 100% vibe-coded with ChatGPT and Cursor and claude-4.&lt;/P&gt;&lt;H3 id="toc-hId-1471958962"&gt;&lt;STRONG&gt;What the PoC currently does&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Scans package.json for UI5 tooling extensions.&lt;/LI&gt;&lt;LI&gt;Loads them in a predictable order (stringreplace → transpile → modules → livereload → rest).&lt;/LI&gt;&lt;LI&gt;Applies sensible defaults, yet lets you &lt;EM&gt;disable&lt;/EM&gt; or &lt;EM&gt;override&lt;/EM&gt; anything via ui5.yaml.&lt;/LI&gt;&lt;LI&gt;Provides fallback manifests for common extensions that do not ship their own.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1275445457"&gt;&lt;STRONG&gt;How it works under the hood&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Schema‑driven defaults&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Each extension can ship a ui5-plugin-loader.json that follows a tiny &lt;A href="https://github.com/marianfoo/ui5-plugin-loader/blob/main/schema/ui5-plugin-loader.schema.json" target="_self" rel="nofollow noopener noreferrer"&gt;JSON schema&lt;/A&gt;. If it does, the loader reads defaults straight from the package. For extensions that don’t, fallback manifests live in the loader itself.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Ordering&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;The same schema lets an extension say “run me before X” or “after&amp;nbsp;Y”. The algorithm is simple – good enough for demos, not bullet‑proof for mission‑critical builds.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;No public runtime API&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;UI5&amp;nbsp;Tooling&amp;nbsp;4.0 lacks an official way to register middleware or tasks on the fly, so the loader &lt;EM&gt;requires&lt;/EM&gt; each package directly, calls its factory, and chains the resulting Express handlers. A working hack – but fragile.&lt;/P&gt;&lt;H3 id="toc-hId-1078931952"&gt;&lt;STRONG&gt;Overriding in ui5.yaml&lt;/STRONG&gt;&lt;/H3&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;server:
  customMiddleware:
    - name: ui5-plugin-loader
      afterMiddleware: compression
      configuration:
        disable:
          - ui5-middleware-livereload
        override:
          ui5-tooling-transpile-middleware:
            configuration:
              debug: true&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;disable&lt;/STRONG&gt; – turns extensions off.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;override&lt;/STRONG&gt; – patches order or configuration.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-882418447"&gt;&lt;STRONG&gt;Does it run?&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Yes. Clone the repo and run the &lt;A href="https://github.com/marianfoo/ui5-plugin-loader/tree/main/sample-app" target="_self" rel="nofollow noopener noreferrer"&gt;sample app&lt;/A&gt; with&amp;nbsp;npm start, and the console shows the loader discovering manifests, loading middlewares, and serving your app. Add or remove an extension in package.json, restart, and watch the chain rearrange itself.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;➜  sample-app git:(main) ✗ npm start

&amp;gt; com.pluginloader@1.0.0 start
&amp;gt; ui5 serve --open index.html

info graph:helpers:ui5Framework Using SAPUI5 version: 1.136.3
info server:custom-middleware:ui5-plugin-loader Starting UI5 Plugin Loader pipeline...
warn server:custom-middleware:ui5-plugin-loader Unknown configuration key 'configuration' - ignoring
warn server:custom-middleware:ui5-plugin-loader Unknown configuration key 'middlewareName' - ignoring
info server:custom-middleware:ui5-plugin-loader Found manifest for ui5-tooling-transpile in fallback directory
info server:custom-middleware:ui5-plugin-loader Found manifest for ui5-middleware-livereload in fallback directory
info server:custom-middleware:ui5-plugin-loader Pipeline completed: 2 middleware, 1 tasks (2ms)
warn server:custom-middleware:ui5-plugin-loader Found 2 middleware configurations, but dynamic registration is not supported.
warn server:custom-middleware:ui5-plugin-loader Please configure middleware statically in ui5.yaml using the discovered configurations:
warn server:custom-middleware:ui5-plugin-loader   - name: ui5-tooling-transpile-middleware
warn server:custom-middleware:ui5-plugin-loader     afterMiddleware: compression
warn server:custom-middleware:ui5-plugin-loader   - name: ui5-middleware-livereload
warn server:custom-middleware:ui5-plugin-loader     afterMiddleware: compression
info server:custom-middleware:ui5-plugin-loader UI5 Plugin Loader completed: registered 2 middlewares, 1 tasks
Server started
URL: http://localhost:8080&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;My UI5 Freestyle Typescript App generated with easy-ui5 works!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Marian_Zeis_0-1753335057465.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290623i605758D176CC4913/image-size/large?v=v2&amp;amp;px=999" role="button" title="Marian_Zeis_0-1753335057465.png" alt="Marian_Zeis_0-1753335057465.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-685904942"&gt;&lt;STRONG&gt;Real‑world value – or not?&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;The PoC is handy for &lt;EM&gt;quick demo apps&lt;/EM&gt; or internal prototypes where you want TypeScript, modules, and livereload without touching YAML. For serious projects you still end up fine‑tuning ui5.yaml, and the loader cannot hide that complexity. Peter’s approach – let each npm package update ui5.yaml during &lt;EM&gt;postinstall&lt;/EM&gt; – might remain the cleaner path until UI5 Tooling gains native plug‑in discovery.&lt;/P&gt;&lt;P&gt;Another argument against relying on &lt;STRONG&gt;ui5‑plugin‑loader&lt;/STRONG&gt; came from the UI5&amp;nbsp;Tooling team at this year’s UI5con (&lt;A href="https://github.com/flovogt/talks/blob/main/2025/UI5con2025_UI5Tools.pdf" target="_self" rel="nofollow noopener noreferrer"&gt;slides&lt;/A&gt; / &lt;A href="https://youtube.com/live/0D0_M4RDiZY" target="_self" rel="nofollow noopener noreferrer"&gt;livestream&lt;/A&gt;) . With UI5&amp;nbsp;CLI&amp;nbsp;v5 (&lt;A href="https://github.com/SAP/ui5-tooling/issues/976" target="_self" rel="nofollow noopener noreferrer"&gt;Roadmap&lt;/A&gt;) several widely used extensions could become part of the core: the transpile feature, &lt;EM&gt;&lt;A class="" title="ui5-tooling-modules" href="https://github.com/ui5-community/ui5-ecosystem-showcase/tree/main/packages/ui5-tooling-modules" target="_blank" rel="noopener nofollow noreferrer"&gt;ui5-tooling-modules&lt;/A&gt;&amp;nbsp;&lt;/EM&gt;and &lt;EM&gt;&lt;A class="" title="ui5-middleware-serveframework" href="https://github.com/ui5-community/ui5-ecosystem-showcase/tree/main/packages/ui5-middleware-serveframework" target="_blank" rel="noopener nofollow noreferrer"&gt;ui5-middleware-serveframework&lt;/A&gt;&lt;/EM&gt;&amp;nbsp;(according to the slide deck, even if it wasn’t stated outright).&lt;/P&gt;&lt;P&gt;Once these capabilities ship out of the box, projects will need fewer third‑party extensions and the related entries in ui5.yaml will largely disappear.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Marian_Zeis_0-1753303908904.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290589iE6CCB342A805E798/image-size/large?v=v2&amp;amp;px=999" role="button" title="Marian_Zeis_0-1753303908904.png" alt="Marian_Zeis_0-1753303908904.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-489391437"&gt;&lt;STRONG&gt;Questions for the community&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Should UI5&amp;nbsp;Tooling grow native plug‑in discovery?&lt;/LI&gt;&lt;LI&gt;Would a shared schema for default config help?&lt;/LI&gt;&lt;LI&gt;Do we need an official runtime registration API?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cap-ify-ui5-auto-loading-ui5-tooling-extensions-the-cap-plug-in-way/ba-p/14160739"/>
    <published>2025-07-24T07:23:35.424000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/uploading-attachment-with-cap-js-attachment-plugins-but-via-external-app/ba-p/14147330</id>
    <title>Uploading attachment with cap-js/attachment plugins but via External App/Postman</title>
    <updated>2025-07-24T09:08:43.209000+02:00</updated>
    <author>
      <name>chrisobar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/845878</uri>
    </author>
    <content>&lt;P&gt;If anyone here are struggling uploading attachments via external app to &lt;STRONG&gt;cap-js/attachments&lt;/STRONG&gt;, I am writing this blog to showcase how to upload attachments on the plugins via external applications.&lt;/P&gt;&lt;P&gt;The blog shall include:&lt;/P&gt;&lt;P&gt;1. Pre-requisites&lt;/P&gt;&lt;P&gt;2. Example 1. via Postman&lt;/P&gt;&lt;P&gt;3. Example 2. via External App (React)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Pre-requisites: cap-js/attachment&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You have extended your current entity for example:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_0-1751980368296.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284030i3E65DD76A2FC1CE5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_0-1751980368296.png" alt="chrisobar_0-1751980368296.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Attachment entity accepts the following field below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_1-1751980478628.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284031iD0E50B9FD39F02D2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_1-1751980478628.png" alt="chrisobar_1-1751980478628.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The fields above are important and to be used for your JSON Body parameters (can leave status as blank as it uses '&lt;STRONG&gt;Unscanned&lt;/STRONG&gt;' as default). See below sample scenarios on how we can upload attachment:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Example 1. (via Postman)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;**Other API tools are doable&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In this case, we require an existing entry in our table/fiori app.&lt;/P&gt;&lt;P&gt;Here are the steps:&lt;/P&gt;&lt;P&gt;1. Retrieve a single entry from your entity, copy the link and add /YourAttachmentEntity that you extended. (On my case, discount_attachment)&lt;/P&gt;&lt;P&gt;Ex:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_3-1751981390255.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284056iBE13F1B966BBFC55/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_3-1751981390255.png" alt="chrisobar_3-1751981390255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. Follow the entity fields then replicate it, then attach your desired parameters on the body as raw - JSON format&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_4-1751981481494.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284061i18F93B46BA174AFC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_4-1751981481494.png" alt="chrisobar_4-1751981481494.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;(Convert your file to base64. In my case I attached an image, png format)&lt;/P&gt;&lt;P&gt;3. Send the request, you will see that it responded successfully. Go back to your Fiori app to verify if the attachment reflected:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_5-1751981587156.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284062i392735186A50F1A7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_5-1751981587156.png" alt="chrisobar_5-1751981587156.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_8-1751981935102.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284070i0538D102CDCD1200/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_8-1751981935102.png" alt="chrisobar_8-1751981935102.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_7-1751981734557.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284064iA81690ED011DFFEC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_7-1751981734557.png" alt="chrisobar_7-1751981734557.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Example 2. (External App)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I have developed a React App for POC purposes. In this scenario, the data should be created first, then update that same entry using the ID, then upload the attachment via HTTP POST.&amp;nbsp; Let's breakdown:&lt;/P&gt;&lt;P&gt;1. Upload attachment as input='file', bind it in form data including all the parameters:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_9-1751982052158.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284071iA0F0CE6822C0130A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_9-1751982052158.png" alt="chrisobar_9-1751982052158.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. Build your logic for your initial creation.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_10-1751982176378.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284073iE2AFE797AA5B9623/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_10-1751982176378.png" alt="chrisobar_10-1751982176378.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; My .ENV variable contains the base odata URL (/odata/v4/......, not the whole http url)&lt;/P&gt;&lt;P&gt;3. Convert the file from input='file' to base64 via JS logic, then bind the OData URL with your entity keys and the HTTP body parameters (refer to Attachment Entity fields and Postman example above).&amp;nbsp; then proceed OData call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_15-1751982778767.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284082i20CC907D75921644/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_15-1751982778767.png" alt="chrisobar_15-1751982778767.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;My form will display a successful message and it should reflect on the database/fiori app as well.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_13-1751982513662.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284080i196C2C1646A41D1A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_13-1751982513662.png" alt="chrisobar_13-1751982513662.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_14-1751982541889.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284081i48304E0EF638EEFE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_14-1751982541889.png" alt="chrisobar_14-1751982541889.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This blog demonstrates how SAP CAP can interface seamlessly with external apps to enhance attachment handling across varied use cases. By abstracting the upload and retrieval logic via an API layer, the approach supports modular features in both admin dashboards and customer-facing applications. Despite initial challenges around payload structuring and authorization, the solution remains scalable, secure, and adaptable to different frontend contexts.&lt;/P&gt;&lt;P&gt;Let me know if you have any further questions or wish to communicate, just comment below the comment section.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/uploading-attachment-with-cap-js-attachment-plugins-but-via-external-app/ba-p/14147330"/>
    <published>2025-07-24T09:08:43.209000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-step-by-step-guide-to-implementing-an-excel-upload-button-in-a-fiori-app/ba-p/14156420</id>
    <title>A Step-by-Step Guide to Implementing an Excel Upload Button in a Fiori App using RAP</title>
    <updated>2025-07-24T09:18:19.224000+02:00</updated>
    <author>
      <name>KPShekhar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1617455</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735155555"&gt;&lt;STRONG&gt;Live Demo&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Here is a short video demonstrating the final Excel upload functionality in action.&lt;/P&gt;&lt;P class=""&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FcFcxJPgTAa8%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DcFcxJPgTAa8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FcFcxJPgTAa8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="Excel Upload Button in SAP RAP Fiori Application Demo Run" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For this demonstration, I've built a simple RAP application with a V4 UI. The application features an "Employee" table with three fields. The base of the application was created using the RAP generator, and I've also included early numbering logic for the&amp;nbsp;&lt;/SPAN&gt;Employee ID.&lt;/P&gt;&lt;H2 id="toc-hId-1538642050"&gt;&lt;STRONG&gt;Step 1: Create a Fiori Project&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;To begin, create a new SAP Fiori project using the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;List Report&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;template. This will serve as the foundation for our application.&lt;/P&gt;&lt;H2 id="toc-hId-1342128545"&gt;&lt;STRONG&gt;Step 2: Add a Custom Button&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;With the project set up, the next step is to add a custom button. You can do this by using the open guided development feature. From there, choose the option to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Add a Custom Action to a Page Using Extensions&lt;/STRONG&gt;. Follow the prompts in the guide to insert the necessary code snippets for the "Excel Upload" button.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.33.43 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288514i7A9DB78C413A5FF8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.33.43 PM.png" alt="Screenshot 2025-07-18 at 12.33.43 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.36.47 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288515i92DDB5C0BBCE2331/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.36.47 PM.png" alt="Screenshot 2025-07-18 at 12.36.47 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;or&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1145615040"&gt;&lt;STRONG&gt;Step 2: Configure the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;File&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file is the application descriptor, defining its structure, data sources, and routing. To add the "Excel Upload" button, you need to modify this file to define a custom action and extend the standard List Report controller with our custom logic&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;You can either use the "Add a Custom Action to a Page Using Extensions" option in the guided development tool or update the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file directly with the following configuration&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Pay close attention to the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;controlConfiguration&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;extends&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;sections, which are key to enabling this functionality.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "_version": "1.53.0",
  "sap.app": {
    "id": "uploadempexcel",
    "type": "application",
    "i18n": "i18n/i18n.properties",
    "applicationVersion": {
      "version": "0.0.1"
    },
    "title": "{{appTitle}}",
    "description": "{{appDescription}}",
    "resources": "resources.json",
    "sourceTemplate": {
      "id": "@sap/generator-fiori:lrop",
      "version": "1.18.2",
      "toolsId": "f8a70d19-c3d7-40bf-9b4b-03ba34f86143"
    },
    "dataSources": {
      "mainService": {
        "uri": "/sap/opu/odata4/sap/zui_upload_emp_o4/srvd/sap/zui_upload_emp_o4/0001/",
        "type": "OData",
        "settings": {
          "annotations": ["annotation"],
          "localUri": "localService/mainService/metadata.xml",
          "odataVersion": "4.0"
        }
      }
    }
  },
  "sap.ui5": {
    "flexEnabled": true,
    "dependencies": {
      "minUI5Version": "1.114.9",
      "libs": {
        "sap.m": {},
        "sap.ui.core": {},
        "sap.fe.templates": {}
      }
    },
    "routing": {
      "routes": [
        {
          "pattern": ":?query:",
          "name": "ZC_UPLOAD_EMPList",
          "target": "ZC_UPLOAD_EMPList"
        }
      ],
      "targets": {
        "ZC_UPLOAD_EMPList": {
          "type": "Component",
          "id": "ZC_UPLOAD_EMPList",
          "name": "sap.fe.templates.ListReport",
          "options": {
            "settings": {
              "contextPath": "/ZC_UPLOAD_EMP",
              "controlConfiguration": {
                "@com.sap.vocabularies.UI.v1.LineItem": {
                  "actions": {
                    "uploadExcelController.controller": {
                      "press": ".extension.uploadempexcel.ext.controller.uploadExcelController.uploadExcel",
                      "visible": true,
                      "enabled": true,
                      "requiresSelection": false,
                      "text": "Upload Excel"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "extends": {
      "extensions": {
        "sap.ui.controllerExtensions": {
          "sap.fe.templates.ListReport.ListReportController": {
            "controllerName": "uploadempexcel.ext.controller.uploadExcelController"
          }
        }
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-949101535"&gt;&lt;STRONG&gt;Step 3: Create a Fragment for the Pop-up Screen&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;You'll need to create a fragment in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;ext&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;folder. This fragment will define the pop-up screen that appears when a user clicks the "Excel Upload" button.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.43.56 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288516i792D93DDC3EE4AF3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.43.56 PM.png" alt="Screenshot 2025-07-18 at 12.43.56 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:upload="sap.m.upload"&amp;gt;
    &amp;lt;Dialog id="uploadDialogSet" title="Excel Upload"&amp;gt;
        &amp;lt;content&amp;gt;
            &amp;lt;upload:UploadSet
                id="uploadSet"
                maxFileNameLength="200"
                fileTypes="xlsx, xls"
                afterItemAdded=".onAfterItemAdded"
                afterItemRemoved=".onAfterItemRemoved"
                uploadEnabled="true"
                /&amp;gt;
        &amp;lt;/content&amp;gt;
        &amp;lt;!-- CORRECTED: Changed from &amp;lt;buttons&amp;gt; to &amp;lt;beginButton&amp;gt; and &amp;lt;endButton&amp;gt; --&amp;gt;
        &amp;lt;beginButton&amp;gt;
            &amp;lt;Button id="idUploadB" text="Upload" press=".onUploadPress" type="Emphasized" enabled="false"/&amp;gt;
        &amp;lt;/beginButton&amp;gt;
        &amp;lt;endButton&amp;gt;
            &amp;lt;Button id="idCancelB" text="Cancel" press=".onCloseDialog" /&amp;gt;
        &amp;lt;/endButton&amp;gt;
    &amp;lt;/Dialog&amp;gt;
&amp;lt;/core:FragmentDefinition&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-752588030"&gt;&lt;STRONG&gt;Step 4: Implement the Controller Logic&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;The main logic for handling the file upload is contained within the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;uploadExcelController.controller.js&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file. You can adapt the code below for your own application. Make sure to adjust the file name and payload column names to fit your specific needs.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define(
  [
    "sap/ui/core/mvc/ControllerExtension",
    "sap/m/MessageToast",
    "sap/ui/core/Fragment",
    "xlsx",
  ],
  function (ControllerExtension, MessageToast, Fragment, XLSX) {
    "use-strict";

    return ControllerExtension.extend(
      "uploadempexcel.ext.controller.uploadExcelController",
      {
        _pDialog: null,
        _file: null,

        uploadExcel: function () {
          if (!this._pDialog) {
            this._pDialog = Fragment.load({
              id: this.base.getView().getId(),
              name: "uploadempexcel.ext.fragment.uploadExcelFragment",
              controller: this,
            }).then(
              function (oDialog) {
                this.base.getView().addDependent(oDialog);
                return oDialog;
              }.bind(this)
            );
          }

          this._pDialog.then(
            function (oDialog) {
              oDialog.open();
              oDialog.getContent()[0].removeAllItems();
              this._file = null;
              var oUploadButton = oDialog.getBeginButton();
              if (oUploadButton) {
                oUploadButton.setEnabled(false);
              }
            }.bind(this)
          );
        },

        onCloseDialog: function () {
          this._pDialog.then(function (oDialog) {
            oDialog.close();
          });
        },

        onAfterItemAdded: function (oEvent) {
          this._file = oEvent.getParameter("item").getFileObject();
          if (this._file) {
            MessageToast.show(
              "File '" + this._file.name + "' is ready for upload."
            );
          }
          this._pDialog.then(
            function (oDialog) {
              var oUploadButton = oDialog.getBeginButton();
              if (oUploadButton) {
                oUploadButton.setEnabled(!!this._file);
              }
            }.bind(this)
          );
        },

        onAfterItemRemoved: function (oEvent) {
          this._file = null;
          this._pDialog.then(function (oDialog) {
            var oUploadButton = oDialog.getBeginButton();
            if (oUploadButton) {
              oUploadButton.setEnabled(false);
            }
          });
          MessageToast.show("File removed.");
        },

        onUploadPress: function () {
          if (!this._file) {
            MessageToast.show("Please select a file first.");
            return;
          }

          var oReader = new FileReader();
          oReader.onload = function (e) {
            try {
              var data = e.target.result;
              var workbook = XLSX.read(data, { type: "buffer" });
              var sheetName = workbook.SheetNames[0];
              var excelData = XLSX.utils.sheet_to_row_object_array(
                workbook.Sheets[sheetName]
              );

              if (excelData.length &amp;gt; 0) {
                this._callOdataService(excelData);
              } else {
                MessageToast.show("No data found in the Excel file.");
              }
            } catch (error) {
              MessageToast.show("Error reading Excel file: " + error.message);
            }
          }.bind(this);

          oReader.readAsArrayBuffer(this._file);
        },

        _callOdataService: function (excelData) {
          try {
            // --- START: FINAL CORRECTED CODE ---
            // Get the main OData V4 model from the view.
            var oModel = this.base.getView().getModel();

            // Create a ListBinding directly for the entity set of the List Report.
            // The path MUST match the 'contextPath' in your manifest.json for the List Report target.
            var oListBinding = oModel.bindList("/ZC_UPLOAD_EMP");
            // --- END: FINAL CORRECTED CODE ---

            if (!oListBinding) {
              // This error is now highly unlikely to occur.
              throw new Error(
                "Could not create a ListBinding for the path /ZC_UPLOAD_EMP."
              );
            }

            excelData.forEach(function (rowData) {
              // IMPORTANT: Make sure your Excel column headers match exactly
              var oPayload = {
                //EmpID: rowData.EmployeeID.toString(), auto generated by Early Numbering in RAP Application
                Empname: rowData.EmployeeName.toString(),
                Contact: rowData.Contact.toString(),
              };
              // The create operation is performed on the ListBinding instance.
              oListBinding.create(oPayload);
            });

            MessageToast.show("Uploading " + excelData.length + " records...");

            // The model holds the batch queue, so we submit the changes on the model.
            oModel
              .submitBatch("$auto")
              .then(
                function () {
                  MessageToast.show("Data uploaded successfully.");
                  this.base.getExtensionAPI().refresh(); // Refresh the table to show new data
                  this.onCloseDialog();
                }.bind(this)
              )
              .catch(function (oError) {
                MessageToast.show("Error during upload: " + oError.message);
              });
          } catch (error) {
            MessageToast.show("Error processing data: " + error.message);
          }
        },
      }
    );
  }
);&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-556074525"&gt;&lt;STRONG&gt;Dependencies&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Before you can run the application, you'll need to install the necessary dependencies. You can do this by running the following commands in your terminal.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm i ui5-tooling-modules
npm i xlsx&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;&lt;SPAN&gt;We also need to update your&amp;nbsp;&lt;/SPAN&gt;ui5.yaml&lt;SPAN&gt;&amp;nbsp;file by adding the following custom tasks.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;builder:
customTasks:
- name: ui5-tooling-modules-task
afterTask: replaceVersion
- name: ui5-tooling-modules-middleware
afterMiddleware: compression&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-359561020"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;By following these steps, you can add a fully functional Excel upload feature to your SAP Fiori application. This enhancement provides a more convenient way for users to handle bulk data uploads, ultimately improving the user experience. I have also prepared a demo Excel file with sample data that you can use for testing purposes.&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-step-by-step-guide-to-implementing-an-excel-upload-button-in-a-fiori-app/ba-p/14156420"/>
    <published>2025-07-24T09:18:19.224000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-look-back-at-codeconnect-2025/ba-p/14161110</id>
    <title>A Look Back At CodeConnect 2025</title>
    <updated>2025-07-28T14:30:39.741000+02:00</updated>
    <author>
      <name>SimonVLaursen</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/119538</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1606844488"&gt;A Look Back At CodeConnect 2025&lt;/H1&gt;&lt;P&gt;&lt;EM&gt;It's been almost 2 weeks now since I participated in the 2025 CodeConnect event, which was actually my first in-person CodeConnect ever.&lt;/EM&gt;&lt;BR /&gt;&lt;EM&gt;I would've participated in person sooner, but getting tickets is akin to trying to get the most popular item on Black Friday, it requires speed, precision and luck!&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;But enough rambling about the tickets! Let's take a look back at my journey to CodeConnect 2025.&lt;/EM&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1539413702"&gt;UI5Con 2025&lt;/H2&gt;&lt;P&gt;I'm going to skip the very first day of CodeConnect, mainly due to it being spent in a car for 16 hours, as me and my colleagues made the journey from the northern part of Jutland to St. Leon Rot.&lt;BR /&gt;So for us, the conference didn't start until day 2 with UI5Con, and that was some start.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image (5).jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290732i8A23A75D2E4027DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image (5).jpeg" alt="Image (5).jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Upon arrival at the building, it was straight into networking and trying to decide what sessions were most interesting to participate in.&lt;BR /&gt;We ended up doing a divide and conquer strategy in our group to get the most out of the day, with of course a focus on getting to the hands-on sessions.&lt;/P&gt;&lt;P&gt;My day quickly became side-tracked as I caught up with both old and new faces in my effort to connect with all the other developers present at the event.&lt;BR /&gt;Which, to be honest, for a mostly backend/cloud guy like me wasn't all bad. While I do enjoy a tango with the frontend from time to time, my heart belongs to what goes on behind the scenes.&lt;/P&gt;&lt;P&gt;But I did catch a lot of good talks still; so here are my take-aways from the first real day at CodeConnect:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Ownership of styling is slowly being handed back to the developer, meaning we can now make proper custom components for UI5 that style correctly with the themes such as Horizon.&lt;/LI&gt;&lt;LI&gt;Still no clear release date for UI5 v2, but we do have a legacy free 1.136 out there now that we can utilize and prepare with&lt;/LI&gt;&lt;LI&gt;Promise for UI5 developers that keep in line with the UI5 Linter, that their code will be lift and shift (i.e. go use the linter asap!)&lt;/LI&gt;&lt;LI&gt;The UI5 repository has completed its moving phase and is now living in its own repository&lt;/LI&gt;&lt;LI&gt;Accessibility, much like everywhere else in the developer space at the moment, is the talk of the town, and SAP is doing a lot of improvements on this front&lt;/LI&gt;&lt;LI&gt;2 test runners were presented as the replacements for the deprecated Karma runner. I know that I am leaning the most towards the WDI5 route due to it working as a more complete suite.&lt;/LI&gt;&lt;LI&gt;Webcomponents are the main focus going forward, and even though there is no timestamp on it, it seems like it will replace many of our current components going forward&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;That was pretty much my experience and take-aways for the first day there, and with it we wrapped up the UI5Con with some great food before heading back to the hotel.&lt;BR /&gt;The next for me, I knew would be something special.&lt;/P&gt;&lt;H2 id="toc-hId-1342900197"&gt;reCAP 2025&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image (4).jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290725i12EDCA87F0BC4BA9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image (4).jpeg" alt="Image (4).jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Second day for me at CodeConnect started out with a great opening key note by Daniel Hutzel. Although he ran out of time by the end, I wish we could've listened to him for just a little while longer.&lt;/P&gt;&lt;P&gt;The key take-away of this keynote however, was extremely clear. Over the last year, the focus by the CAP team has really been on minimizing the footprint of the CAP/CDS install while optimizing and improving the feature set of the framework.&lt;BR /&gt;And from what we were presented, that definitely looked like it came out as a success. As a developer that uses CAP on a daily basis, both for plugin development and end-user projects, I can definitely say that I have enjoyed the improvements so far.&lt;/P&gt;&lt;P&gt;So a kudos to the CAP team is definitely in order on this! (Now we just need it to be open source!)&lt;/P&gt;&lt;P&gt;Unfortunately, I did not have as much time to participate in the many sessions of this day, as much like the day before, the event became more of a networking experience.&lt;BR /&gt;The sessions I did catch however, were absolutely great and definitely something that you should catch up on if you have the chance;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Both sessions by Mike Zaschka (just always a good listen and everybody loves open source!)&lt;/LI&gt;&lt;LI&gt;CAP Tools session by Christian Georgi (because you cannot be a good developer without knowing your tools)&lt;/LI&gt;&lt;LI&gt;Server-side Pre-rendering by Volker Buzek and Wouter Lemaire (a great session with insights into another great open source initiative)&lt;/LI&gt;&lt;LI&gt;CAP Best vs Bad Practices by Daniel Hutzel&lt;/LI&gt;&lt;LI&gt;Gain a superpower by learning how to harness the CDS REPL by DJ Adams (seriously, learn REPL)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;While these were the only sessions I managed to catch, I did however experience something extremely important during the reCAP event, and that was the community.&lt;/P&gt;&lt;P&gt;I got to connect with so many great people and talk about the passion of this side of the industry, and the love we all share for opens source technologies.&lt;/P&gt;&lt;P&gt;I even got the chance to appear on the &lt;A href="https://youtu.be/0PUDy-TkpiQ" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Developer News&lt;/A&gt; to share my own open source contribution (&lt;A href="https://www.linkedin.com/posts/simon-vestergaard-laursen-7b98406a_im-excited-to-announce-the-cap-mcp-plugin-activity-7345337883202879488-NAhN?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAAA63yH0BMm6ssu6DfY9QWAt5VYMMUO0YUu4" target="_self" rel="nofollow noopener noreferrer"&gt;MCP Plugin for CAP&lt;/A&gt;).&lt;/P&gt;&lt;P&gt;And that is something I wouldn't trade for anything.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image (3).jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290724iB2E249D2662D9D4C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image (3).jpeg" alt="Image (3).jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1146386692"&gt;You Should Attend&lt;/H2&gt;&lt;P&gt;I hope it is clear from my post here that going to CodeConnect is an experience, no matter how you plan it. It is an event filled with great people and some great discussions around the subjects we all work with on a daily basis.&lt;/P&gt;&lt;P&gt;Never in a million years would I have imagined that going to CodeConnect would have resulted in me getting to participate in the SAP Developer News, nor that I would get to have great open discussions with other open source contributors.&lt;BR /&gt;It is definitely worth it, so if you get the chance I highly recommend that you participate!&lt;/P&gt;&lt;P&gt;Hopefully I will get the chance to contribute to the speakers list next year!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image (2).jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290722iE880761F19A2E83E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image (2).jpeg" alt="Image (2).jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-look-back-at-codeconnect-2025/ba-p/14161110"/>
    <published>2025-07-28T14:30:39.741000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ux-q3-2025-update-part-2-sap-s-4hana-cloud-public-edition-2508-and-sap/ba-p/14171291</id>
    <title>SAP UX Q3/2025 Update – Part 2: SAP S/4HANA Cloud Public Edition 2508 and SAP Fiori Launchpad</title>
    <updated>2025-08-05T11:59:31.451000+02:00</updated>
    <author>
      <name>ThomasReiss</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/149639</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;This second post in my series gives an overview of user experience innovations in SAP S/4HANA Cloud Public Edition 2508 and the SAP Fiori launchpad which are now generally available. It covers Joule and many AI-assisted UX innovations, new collaboration capabilities as well as improvements in details. The next post will cover additional innovations available to customers for beta testing.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Users in SAP S/4HANA Cloud Public Edition can query SAP Analytics Cloud directly via Joule. Read about this and more in the first blog post introducing the series and providing general information about Joule and central entry points and services:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ux-q3-2025-update-part-1-ai-joule-sap-build-work-zone-sap-mobile-start/ba-p/14161847" target="_blank"&gt;SAP UX Q3/2025 Update – Part 1: AI, Joule, SAP Build Work Zone, SAP Mobile Start&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This post gives an overview of SAP S/4HANA Cloud Public Edition UX innovations in these areas:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Fiori launchpad and Design Updates for Suite Consistency&lt;/LI&gt;&lt;LI&gt;My Home&lt;/LI&gt;&lt;LI&gt;AI-Assisted UX Features&lt;/LI&gt;&lt;LI&gt;Collaboration: Integration of To Dos for Situations in Microsoft Teams&lt;/LI&gt;&lt;LI&gt;UX Improvements in Details&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Many of the UX improvements in details are enabled by our UI framework (SAPUI5 and SAP Fiori elements) and hence also available to customers and partners developing their own applications. Note however that the enabled AI-assisted features are only available for extensions built directly on the SAP S/4HANA Cloud Public Edition system.&lt;/P&gt;&lt;P&gt;Below you’ll see those AI innovations with largest impact on user experience, but you can get a more comprehensive overview of the latest AI innovations in these blog posts:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/highlights-of-the-sap-s-4hana-cloud-public-edition-2508-release/ba-p/14163726" target="_blank"&gt;Highlights of the SAP S/4HANA Cloud Public Edition 2508 release&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/exploring-ai-and-next-gen-cloud-erp-innovations-in-sap-s-4hana-cloud-public/ba-p/14162730" target="_blank"&gt;Exploring AI and next-gen Cloud ERP innovations in SAP S/4HANA Cloud Public Edition 2508&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/try-the-latest-ai-features-in-sap-s-4hana-cloud-public-edition-2508/ba-p/14169944" target="_blank"&gt;Try the latest AI features in SAP S/4HANA Cloud Public Edition 2508&lt;/A&gt; (covering the AI-assisted features enabled by our UI framework).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1607769219"&gt;SAP Fiori Launchpad and Design Updates for Suite Consistency&lt;/H1&gt;&lt;P&gt;We have made design improvements which are relevant for a consistent user experience across the entire SAP Business Suite, and which are now available with SAP S/4HANA Cloud Public Edition 2508. As I mentioned in my April blog post &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/upcoming-design-updates-for-the-sap-business-suite-sap-fiori-for-web/ba-p/14083427" target="_blank"&gt;Upcoming Design Updates for the SAP Business Suite (SAP Fiori for Web)&lt;/A&gt;, consistency of the user experience across the various applications used by a user is an important part of overall usability, helping users to feel confident and at ease when using a suite of products – no unexpected surprises.&lt;/P&gt;&lt;P&gt;In this section, we’ll look at four design updates provided by the SAP Fiori launchpad, as well as examples of the new design for illustrations, and some updates for launchpad administrators:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Navigation menu: Side navigation&lt;/LI&gt;&lt;LI&gt;Updated shell bar&lt;/LI&gt;&lt;LI&gt;Updated user menu&lt;/LI&gt;&lt;LI&gt;Updated notifications&lt;/LI&gt;&lt;LI&gt;New illustrations design&lt;/LI&gt;&lt;LI&gt;Update for administrators&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1540338433"&gt;Navigation Menu: Side Navigation&lt;/H2&gt;&lt;P&gt;Many SAP products already offer a navigation menu on the left of the screen, a pattern already familiar to many people. Hence we have decided to apply that approach to navigation across the SAP Business Suite in upcoming releases.&lt;/P&gt;&lt;P&gt;In SAP S/4HANA Cloud Public Edition, the side navigation is displayed as an overlay, as you can see in Figure 1. It gives you direct access to your favorite apps, either directly or via the folders you have created. It also gives you direct access to your Spaces and Pages. The previously available menu to access all your spaces and pages along with personalization options is available via the entry “All Spaces” at the bottom of the menu.&lt;/P&gt;&lt;P&gt;A big benefit of this new navigation menu is that you can now access your favorite apps directly from any application. Previously, you would have to return to My Home and then click on your favorite app, now you can access it directly from the menu, as shown in Figure 1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 1: The new navigation menu, opened up from the new shell bar, showing direct access to Favourite Apps, My Spaces and All Spaces. Alt Text: an image showing a list of sales orders and on the left a pop-over with a navigation menu with the sections already mentioned. Below the “Favourite App” eight apps are listed as well as two folders for favorite apps, plus the folder “Insights” for the insight tiles." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296188iF645EAF092E07108/image-size/large?v=v2&amp;amp;px=999" role="button" title="01 Side Navigation S4H 2508.jpg" alt="Figure 1: The new navigation menu, opened up from the new shell bar, showing direct access to Favourite Apps, My Spaces and All Spaces. Alt Text: an image showing a list of sales orders and on the left a pop-over with a navigation menu with the sections already mentioned. Below the “Favourite App” eight apps are listed as well as two folders for favorite apps, plus the folder “Insights” for the insight tiles." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 1: The new navigation menu, opened up from the new shell bar, showing direct access to Favourite Apps, My Spaces and All Spaces. Alt Text: an image showing a list of sales orders and on the left a pop-over with a navigation menu with the sections already mentioned. Below the “Favourite App” eight apps are listed as well as two folders for favorite apps, plus the folder “Insights” for the insight tiles.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1343824928"&gt;New Shell Bar – need to switch it on!&lt;/H2&gt;&lt;P&gt;The new shell bar design for the SAP Business Suite is available for SAP S/4HANA Cloud Public Edition. The immediately visible difference is that now the product name is displayed to the right of the SAP Logo, in this case “S/4HANA Cloud” as you can see at the top of Figure 1. The logo and the name are all contained within a clickable area, which brings the user to the start page (i.e. My Home).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The new shell bar enables the next two design updates to the user menu and to notifications&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;By default, after upgrading, the old shell bar will be shown, with the new navigation menu. We advise that you check any test automation and RPA (Robotic Process Automation) you may have before switching on the new shell bar, since you may need to make some adjustments – in particular if you log off at the end of a test.&lt;/P&gt;&lt;P&gt;You can switch on the new shell bar via the Activate New Features application, with the feature “/UI2/SHELL_BAR_TOGGLE”, which is planned to become available mid-August 2025.&lt;/P&gt;&lt;H2 id="toc-hId-1147311423"&gt;Updated User Menu&lt;/H2&gt;&lt;P&gt;The new user menu design shown in Figure 2 provides more space for the avatar of the user, and provides more space between items for easier selection. The settings are always at the top as the first entry, and the “Sign Out” option is separated from the actual navigation options in the list, to make it easier to find.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 2: Updated design of user menu and notifications. Alt Text: On the left an image of the previous user menu and the updated user menu. On the right an image of the updated notifications list, showing four notifications in the group “Last Month”, each with a title, two lines of description and a line with the data and a “more” link." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296189iB52E61B7336C7730/image-size/large?v=v2&amp;amp;px=999" role="button" title="02 User Menu and Notifications S4H 2508.jpg" alt="Figure 2: Updated design of user menu and notifications. Alt Text: On the left an image of the previous user menu and the updated user menu. On the right an image of the updated notifications list, showing four notifications in the group “Last Month”, each with a title, two lines of description and a line with the data and a “more” link." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 2: Updated design of user menu and notifications. Alt Text: On the left an image of the previous user menu and the updated user menu. On the right an image of the updated notifications list, showing four notifications in the group “Last Month”, each with a title, two lines of description and a line with the data and a “more” link.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-950797918"&gt;Updated Notifications Design&lt;/H2&gt;&lt;P&gt;The new simplified design of notifications shown on the right in Figure 2 &amp;nbsp;fits better with the overall design of SAP S/4HANA Cloud Public Edition, and provides simplier interactions. By default notifications are sorted by date, with grouping by “Today”, “Yesterday”, “Last Week”, “Last Month”. Users can also choose to sort by importance.&lt;/P&gt;&lt;H2 id="toc-hId-754284413"&gt;New Illustrations Design&lt;/H2&gt;&lt;P&gt;We have modernized the design of our illustrations, and also made them easier to understand. Figure 3 shows two examples – one for indicating that something went wrong (the fallen ice cream cone), one for search, with an example of where the search illustration is used when opening a list report application without any filter values defined.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 3: Examples of new illustrations. Alt Text: On the left top three different size illustrations showing an ice cream cone fallen on the ground; bottom left an illustration of a globe with a magnifying glass, representing “search”. On the right an image of a list report showing the search illustration since no data has been selected." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296190i0B51525EEA7D47CC/image-size/large?v=v2&amp;amp;px=999" role="button" title="03 New illustrations S4H 2508.jpg" alt="Figure 3: Examples of new illustrations. Alt Text: On the left top three different size illustrations showing an ice cream cone fallen on the ground; bottom left an illustration of a globe with a magnifying glass, representing “search”. On the right an image of a list report showing the search illustration since no data has been selected." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 3: Examples of new illustrations. Alt Text: On the left top three different size illustrations showing an ice cream cone fallen on the ground; bottom left an illustration of a globe with a magnifying glass, representing “search”. On the right an image of a list report showing the search illustration since no data has been selected.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-557770908"&gt;Update for Administrators of SAP Fiori Launchpad&lt;/H2&gt;&lt;H3 id="toc-hId-490340122"&gt;Hiding of Empty Spaces and Pages&lt;/H3&gt;&lt;P&gt;Empty Spaces and Pages are now automatically hidden from users. Until now this was an option which administrators needed to switch on, now it is on by default.&lt;/P&gt;&lt;P&gt;You might be asking how a space or page could be empty? The apps which a user sees on a page on the SAP Fiori launchpad, and the pages which appear in a space, depend on a user’s authorizations. This can lead to a page being defined in such a way that certain users are not authorized to use any of the apps therein; similarly, a space can end up not having any pages available to a user. Now, if this happens, any such empty pages or spaces are hidden from the user, rather than being shown empty.&lt;/P&gt;&lt;H3 id="toc-hId-293826617"&gt;Redesign of Apps for Managing Spaces and Pages&lt;/H3&gt;&lt;P&gt;Up until now, the apps “Manage Launchpad Spaces” and “Manage Launchpad Pages” distinguished between entries which could be edited within a given tenant and entries which could only be used as templates when creating new spaces or pages. The editable ones were listed in the tab “Customer-Created”, the others in the tab “Predefined”.&lt;/P&gt;&lt;P&gt;Our customers gave us feedback that this was in fact confusing, because a page which was listed as “Customer-Created” in a non-productive tenant and which was transferred to a productive tenant became “Predefined” there, i.e. it was not listed under “Customer-Created” despite it being customer-created.&lt;/P&gt;&lt;P&gt;Now, the design has been changed, with two tabs for editable entities (spaces or pages) and non-editable ones. For example, in the app “Manage Launchpad Pages”, the tabs are called “Pages” and “Page Templates”, as shown in Figure 4. No matter what tenant you are in, you cannot change or edit page templates, you can only use them to create new pages. The same applies to spaces in the Manage Launchpad Spaces app.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 4: The redesigned app Manage Launchpad Pages with Tabs for “Pages” and “Page Templates”. Alt Text: image shows an extract of the app showing the two tabs." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296197i15F5DAFF76C0E6E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="04 FLP Manage Launchpad Pages.jpg" alt="Figure 4: The redesigned app Manage Launchpad Pages with Tabs for “Pages” and “Page Templates”. Alt Text: image shows an extract of the app showing the two tabs." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 4: The redesigned app Manage Launchpad Pages with Tabs for “Pages” and “Page Templates”. Alt Text: image shows an extract of the app showing the two tabs.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For more information about the visual updates, and what’s new, check out:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Blog post: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/transforming-user-experience-sap-fiori-launchpad-adopts-the-latest-sap/ba-p/14150417" target="_blank"&gt;Transforming User Experience: SAP Fiori Launchpad adopts the latest SAP Design System updates&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;What’s New: &lt;A href="https://help.sap.com/docs/SAP_S4HANA_CLOUD/ee9ee0ca4c3942068ea584d2f929b5b1/2cd1098e5c544d6588ab47858b1f5265.html?locale=en-US&amp;amp;version=2508.00" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori launchpad in SAP S/4HANA Cloud Public Edition 2508&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--160852326"&gt;My Home&lt;/H1&gt;&lt;P&gt;My Home is proving very popular with users, and we hope to make it even more so with the innovations in the 2508 release:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The salutation bar, welcoming users and providing interesting options.&lt;/LI&gt;&lt;LI&gt;Recap – summarizing what changed since you last logged on.&lt;/LI&gt;&lt;LI&gt;Manage News application for customer-specific news.&lt;/LI&gt;&lt;LI&gt;AI-assisted smart personalization of &lt;EM&gt;My Home&lt;/EM&gt; for insights cards&lt;BR /&gt;(this is covered in the next section &lt;EM&gt;AI-Assisted UX Innovations&lt;/EM&gt;)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We are also providing two new features for beta-testing, AI-assisted smart personalization for applications and AI-assisted smart solution for situations in My Home, which I will showcase in part 3 in this series of blog posts.&lt;/P&gt;&lt;H2 id="toc-hId-118971245"&gt;Salutation Bar in My Home&lt;/H2&gt;&lt;P&gt;The new salutation bar shown in Figure 5 welcomes users to the system, and gives them direct access to My Home settings as well as to the new Recap feature explained below. Optionally, you can set the system up to let business users see what’s next on their calendar. (Not shown in Figure 5. Use communication arrangement SAP_COM_0887 to set enable it).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 5: The new salutation bar in My Home, showing the welcome text “Hi Barbara, Great to see you again!” and the beta AI option “Add Content”, plus the options “Recap” and “My Home Settings”. Alt Text: Image shows My Home with a new dark. Blue bar just below the header, with today’s date top left, below which in larger font “Hi Barbara, Great to see you again!” is written. On the right of the bar three buttons are shown: the AI button “Add Content”, “Recap”, and “My Home Settings”." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296198iFEA959FF8065BB9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="05 My Home Salutation Bar 2508.jpg" alt="Figure 5: The new salutation bar in My Home, showing the welcome text “Hi Barbara, Great to see you again!” and the beta AI option “Add Content”, plus the options “Recap” and “My Home Settings”. Alt Text: Image shows My Home with a new dark. Blue bar just below the header, with today’s date top left, below which in larger font “Hi Barbara, Great to see you again!” is written. On the right of the bar three buttons are shown: the AI button “Add Content”, “Recap”, and “My Home Settings”." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 5: The new salutation bar in My Home, showing the welcome text “Hi Barbara, Great to see you again!” and the beta AI option “Add Content”, plus the options “Recap” and “My Home Settings”. Alt Text: Image shows My Home with a new dark. Blue bar just below the header, with today’s date top left, below which in larger font “Hi Barbara, Great to see you again!” is written. On the right of the bar three buttons are shown: the AI button “Add Content”, “Recap”, and “My Home Settings”.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--77542260"&gt;Recap&lt;/H2&gt;&lt;P&gt;With the new recap feature, you can get a quick overview of what has changed on My Home in the last 24 or more hours: new or processed tasks, situations, apps and insight cards. It compares your current My Home data against a snapshot of data captured from your last login that was over 24 hours ago. It shows you what has changed or been added within that timeframe. This saves you a lot of time, since you don’t have to scan everything manually, and ensures that you are all caught up quickly – and don’t miss any important changes. What is great about it is that it is visual, showing before and after images of insight cards – you can see an example in Figure 6, or watch it in action in this video:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Video: &lt;A href="https://dam.sap.com/mac/app/p/video/asset/preview/tyBYABf?ltr=a&amp;amp;rc=10&amp;amp;doi=SAP1227640" target="_blank" rel="noopener noreferrer"&gt;Recap Feature of My Home in SAP S/4HANA Cloud Public Edition&lt;/A&gt; (0:55 min.)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 6: Recap in My Home, showing a change in an insight card, where one additional quotation has expired, and one additional quotation will expire after a week. Alt Text: a popover on top of My Home, with a “Summary” section on the left containing three items “Tasks”, “Situations”, and “Cards”, with “Cards” selected. The right shows two tabs, “Changed (3)” (selected) and “Removed (2)”, below which a card marked “old” with a horizontal bar chart is shown on the left, and the same card with updated data marked “new” on the right." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296199i2F5E16EEE0E876B2/image-size/large?v=v2&amp;amp;px=999" role="button" title="06 My Home Recap insight card 2508.jpg" alt="Figure 6: Recap in My Home, showing a change in an insight card, where one additional quotation has expired, and one additional quotation will expire after a week. Alt Text: a popover on top of My Home, with a “Summary” section on the left containing three items “Tasks”, “Situations”, and “Cards”, with “Cards” selected. The right shows two tabs, “Changed (3)” (selected) and “Removed (2)”, below which a card marked “old” with a horizontal bar chart is shown on the left, and the same card with updated data marked “new” on the right." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 6: Recap in My Home, showing a change in an insight card, where one additional quotation has expired, and one additional quotation will expire after a week. Alt Text: a popover on top of My Home, with a “Summary” section on the left containing three items “Tasks”, “Situations”, and “Cards”, with “Cards” selected. The right shows two tabs, “Changed (3)” (selected) and “Removed (2)”, below which a card marked “old” with a horizontal bar chart is shown on the left, and the same card with updated data marked “new” on the right.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--274055765"&gt;Manage News Application&lt;/H2&gt;&lt;P&gt;I’m glad to announce that administrators can now easily create their own news to be displayed on My Home, using the new Manage News application. Figure 7 shows the start page of the application, listing news articles.&lt;/P&gt;&lt;P&gt;You can specify title, subtitle and main text, a background image, the start and end dates, as well as categorizing and targeting the news for specific groups of users or roles.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 7: Manage News application. Alt Text: Screenshot of the Manage News application, showing a filter bar and a list of two news articles with their title, subtitle, footer text, criticality, status “published” and publish start and end dates." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296200i693415A6E29D189A/image-size/large?v=v2&amp;amp;px=999" role="button" title="07 My Home Manage News.jpg" alt="Figure 7: Manage News application. Alt Text: Screenshot of the Manage News application, showing a filter bar and a list of two news articles with their title, subtitle, footer text, criticality, status “published” and publish start and end dates." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 7: Manage News application. Alt Text: Screenshot of the Manage News application, showing a filter bar and a list of two news articles with their title, subtitle, footer text, criticality, status “published” and publish start and end dates.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To get a better impression of how it works, watch this video:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Video:&amp;nbsp;&lt;A href="https://dam.sap.com/mac/app/p/video/asset/preview/7QzcGYy?ltr=a&amp;amp;rc=10&amp;amp;doi=SAP1227637" target="_blank" rel="noopener noreferrer"&gt;Manage News Application in My Home for SAP S/4HANA Cloud Public Edition&lt;/A&gt; (2:00 min.)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;You can find out more about these My Home innovations here:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/my-home-in-sap-s-4hana-cloud-public-edition-2508-what-s-new/ba-p/14171857" target="_blank"&gt;My Home in SAP S/4HANA Cloud Public Edition 2508 - What's new?&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/empowering-business-users-with-personalized-news-in-sap-s-4hana-cloud/ba-p/14153055" target="_blank"&gt;Empowering Business Users with Personalized News in SAP S/4HANA Cloud Public Edition 2508 Release&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_CLOUD/4fc8d03390c342da8a60f8ee387bca1a/8a60279e8d2041b5ad8d3455fab0f3ef.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;My Home documentation&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--177166263"&gt;AI-Assisted User Experience&lt;/H1&gt;&lt;P&gt;When AI is embedded directly into the application UI to give users a better user experience, as opposed to being accessed via the Joule window, we talk about “AI-Assisted User Experience”.&lt;/P&gt;&lt;P&gt;In SAP S/4HANA Cloud Public Edition 2508, we distinguish between AI base features and premium features:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Base features&lt;/STRONG&gt; are free of charge, and only require that the customer signs the SAP AI Terms, which can be done via &lt;A href="https://sapit-iex-prod-lizard.launchpad.cfapps.eu10.hana.ondemand.com/9003c169-62d4-4285-b392-9e939ca5d535.workflowexternal.workflowexternal/preship/index.html#/create/1260" target="_blank" rel="noopener nofollow noreferrer"&gt;this link&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Premium features&lt;/STRONG&gt; require SAP AI Units to be in place. Those listed &lt;A href="https://discovery-center.cloud.sap/ai-catalog/?packages=baf5fc5e-55d1-4065-9c05-f31bcc3efabb" target="_blank" rel="noopener nofollow noreferrer"&gt;here&lt;/A&gt; also require Joule Premium for Financial Management. Customers can activate this via SAP for Me -&amp;gt; Portfolio &amp;amp; Products -&amp;gt; Business AI.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The following are now generally available as base features:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;AI-assisted enterprise search&lt;/STRONG&gt; (which was in beta testing with the 2502 release). See below for more details.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;AI-assisted easy filter&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;AI-assisted smart summarization&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The latter two were generally available under limited promotion with the 2502 release, now they are generally available out of the box – no need to sign up to the limited promotion. To find out more about them, look at these blog posts:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ux-q1-2025-update-part-2-sap-s-4hana-cloud-public-edition-2502-and-sap/ba-p/14015395" target="_blank"&gt;SAP UX Q1/2025 Update – Part 2: SAP S/4HANA Cloud Public Edition 2502 and SAP Fiori Launchpad&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;AI-assisted easy filter enhancements with 2508: &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/try-the-latest-ai-features-in-sap-s-4hana-cloud-public-edition-2508/ba-p/14169944" target="_blank"&gt;Try the latest AI features in SAP S/4HANA Cloud Public Edition 2508&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The following premium feature is now generally available:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;AI-assisted smart personalization of &lt;EM&gt;My Home&lt;/EM&gt; for insight cards.&lt;BR /&gt;&lt;/STRONG&gt;See below for more details.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--667082775"&gt;AI-Assisted Enterprise Search&lt;/H2&gt;&lt;P&gt;You can now use natural language in the search field available at the top of every screen in SAP S/4HANA Cloud Public Edition, making it even easier to benefit from powerful enterprise search capabilities. With enterprise search, you can find the information you need directly, without having to specify the name of the application – as you can see in Figure 8. This is available out of the box as a base feature.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 8: AI-assisted enterprise search, showing how you can easily find business data directly using natural language. Alt Text: A short video showing how a user can enter in the search field in the shell header bar “Show me all sales orders with net value greater than 5000 eur” and get a corresponding list sales orders. The user than adds the text “that are in process” resulting in a list with fewer results." style="width: 896px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296551i5297309AA8FE7D13/image-size/large?v=v2&amp;amp;px=999" role="button" title="08 AI-Assisted Enterprise Search - 2508.gif" alt="Figure 8: AI-assisted enterprise search, showing how you can easily find business data directly using natural language. Alt Text: A short video showing how a user can enter in the search field in the shell header bar “Show me all sales orders with net value greater than 5000 eur” and get a corresponding list sales orders. The user than adds the text “that are in process” resulting in a list with fewer results." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 8: AI-assisted enterprise search, showing how you can easily find business data directly using natural language. Alt Text: A short video showing how a user can enter in the search field in the shell header bar “Show me all sales orders with net value greater than 5000 eur” and get a corresponding list sales orders. The user than adds the text “that are in process” resulting in a list with fewer results.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Watch the full video:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Video:&amp;nbsp; &lt;A href="https://dam.sap.com/mac/u/a/ViV9bhN?rc=10&amp;amp;doi=SAP1166515" target="_blank" rel="noopener noreferrer"&gt;AI-Assisted Enterprise Search in SAP S/4HANA Cloud Public Edition&lt;/A&gt; &amp;nbsp;(0:48 min.)&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--863596280"&gt;&lt;SPAN&gt;AI-Assisted Smart Personalization of My Home for Insight Cards&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;With this premium feature, you can now use natural language to add an insight card to My Home. You just have to describe what information you want to see on the card, and the system will create the card for you. We ensure that the user is in control by first showing a preview of the card, allowing the user to either confirm, or rephrase the request. Figure 9 shows the kind of text you can use, and figure 10 gives you an idea of the interaction flow.&lt;/P&gt;&lt;P&gt;Note that this functionality is currently only supported by 20 applications, which are listed in &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/try-the-latest-ai-features-in-sap-s-4hana-cloud-public-edition-2508/ba-p/14169944" target="_blank"&gt;this blog post&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 9: AI-assisted smart personalization of My Home for insight cards, showing an example prompt and the resulting card. Alt Text: a popover “Add Insights Cards” above My Home is shown, with a text entry field on the left containing the AI prompt “create a card showing sales orders in overall status open and delivery block status blocked with fields sold-to-party, requested delivery date and net value”, below that an AI “Generate” and a “Clear all” button, below that some sample queries, on the right the card preview showing “Open Sales Orders” with sub-title “With Delivery Block”." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296202i59ECEB9215B2109F/image-size/large?v=v2&amp;amp;px=999" role="button" title="09 AI-Assisted adding cards to My Home.jpg" alt="Figure 9: AI-assisted smart personalization of My Home for insight cards, showing an example prompt and the resulting card. Alt Text: a popover “Add Insights Cards” above My Home is shown, with a text entry field on the left containing the AI prompt “create a card showing sales orders in overall status open and delivery block status blocked with fields sold-to-party, requested delivery date and net value”, below that an AI “Generate” and a “Clear all” button, below that some sample queries, on the right the card preview showing “Open Sales Orders” with sub-title “With Delivery Block”." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 9: AI-assisted smart personalization of My Home for insight cards, showing an example prompt and the resulting card. Alt Text: a popover “Add Insights Cards” above My Home is shown, with a text entry field on the left containing the AI prompt “create a card showing sales orders in overall status open and delivery block status blocked with fields sold-to-party, requested delivery date and net value”, below that an AI “Generate” and a “Clear all” button, below that some sample queries, on the right the card preview showing “Open Sales Orders” with sub-title “With Delivery Block”.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 10: AI-assisted smart personalization of My Home for insight cards in action. Alt Text: a short video showing the prompt from Figure 9 being entered, and the card being generated and added to the Insights section of My Home." style="width: 896px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296203iACA44DBDE7E6077D/image-size/large?v=v2&amp;amp;px=999" role="button" title="10 AI-Assisted Smart Personalization of My Home for Insights Cards 2508.gif" alt="Figure 10: AI-assisted smart personalization of My Home for insight cards in action. Alt Text: a short video showing the prompt from Figure 9 being entered, and the card being generated and added to the Insights section of My Home." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 10: AI-assisted smart personalization of My Home for insight cards in action. Alt Text: a short video showing the prompt from Figure 9 being entered, and the card being generated and added to the Insights section of My Home.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Watch the full video:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Video:&amp;nbsp; &lt;A href="https://dam.sap.com/mac/u/a/cbqXfdL?rc=10&amp;amp;doi=SAP1165611" target="_blank" rel="noopener noreferrer"&gt;AI-Assisted Smart Personalization of My Home for Insights Cards in SAP S/4HANA Cloud Public Edition&lt;/A&gt; &amp;nbsp;(0:54 min.)&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--1060109785"&gt;&lt;SPAN&gt;AI-Assisted Financial Business Insights&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Users in Finance now benefit from AI-generated analysis and summaries built into the following review booklets:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Cost Centers Review Booklet&lt;/LI&gt;&lt;LI&gt;Group Finanical Statements Review Booklet&lt;/LI&gt;&lt;LI&gt;Project Financial Booklet – Professional Services&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Watch this video to get an overview for the cost centers review booklet:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Video: &lt;A href="https://cdnapisec.kaltura.com/html5/html5lib/v2.101/mwEmbedFrame.php/p/1921661/uiconf_id/37285991/entry_id/1_93bm2ujt?wid=_1921661" target="_blank" rel="noopener nofollow noreferrer"&gt;AI-Assisted Financial Business Insights&lt;/A&gt; (1:20 minutes)&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--1256623290"&gt;&lt;SPAN&gt;Simplified Asset Accounting with SAP Business AI&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;With Joule and AI embedded in the applications, asset accountants can get their work done more easily now, with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;AI-assisted asset creation with Joule.&lt;/LI&gt;&lt;LI&gt;Easy to understand AI-generated natural language explanations of depreciation keys.&lt;/LI&gt;&lt;LI&gt;AI-generated value calculation insights.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 11: AI-generated asset valuation explanation, after the user clicked on the AI-button “Explain Key Figures”. Alt Text: A screenshot showing a table summarizing the asset valuation, with an AI button “Explain Key Figures” in the table heading. Below the table a section “Explain Key Figures” is shown, with a text explaining how the depreciation is calculated." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296204i54571B919798F9ED/image-size/large?v=v2&amp;amp;px=999" role="button" title="11 Asset valuation AI explanation.png" alt="Figure 11: AI-generated asset valuation explanation, after the user clicked on the AI-button “Explain Key Figures”. Alt Text: A screenshot showing a table summarizing the asset valuation, with an AI button “Explain Key Figures” in the table heading. Below the table a section “Explain Key Figures” is shown, with a text explaining how the depreciation is calculated." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 11: AI-generated asset valuation explanation, after the user clicked on the AI-button “Explain Key Figures”. Alt Text: A screenshot showing a table summarizing the asset valuation, with an AI button “Explain Key Figures” in the table heading. Below the table a section “Explain Key Figures” is shown, with a text explaining how the depreciation is calculated.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Have a look at this video to see all three of these in action:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Video: &lt;A href="https://www.sap.com/assetdetail/2025/05/d02d474d-077f-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;Simplify Asset Accounting with SAP Business AI and SAP S/4HANA Cloud Public Edition&lt;/A&gt; (3:25 minutes).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1159733788"&gt;Collaboration: Integration of To Dos for Situations in Microsoft Teams&lt;/H1&gt;&lt;P&gt;In addition to being able to process To Dos for tasks directly in Microsoft Teams (as I featured in &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ux-q1-2025-update-part-2-sap-s-4hana-cloud-public-edition-2502-and-sap/ba-p/14015395" target="_blank"&gt;my February blog post&lt;/A&gt;), you can now also process To Dos for Business Situations directly in Microsoft Teams.&lt;/P&gt;&lt;P&gt;This means that you get notified in your Teams activity feed about new Business Situations, and you can process Business Situations in place, without having to leave Teams, as you can see in Figure 12.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 12: To Dos for Business Situations are available via Activities in Microsoft Teams. Alt Text: Two screenshots are shown, the top one shows an row of Situation cards in My Home, the bottom one shows the Activity view in Teams, with the activity “Situations in SAP S/4HANA” and sub-text “There are 9 situations for you” selected on the left, and the right two thirds of the screen showing a list with the same situations as shown in My Home." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296205iFB07B24B37AC22FD/image-size/large?v=v2&amp;amp;px=999" role="button" title="12 Situation To Dos in MS Teams.jpg" alt="Figure 12: To Dos for Business Situations are available via Activities in Microsoft Teams. Alt Text: Two screenshots are shown, the top one shows an row of Situation cards in My Home, the bottom one shows the Activity view in Teams, with the activity “Situations in SAP S/4HANA” and sub-text “There are 9 situations for you” selected on the left, and the right two thirds of the screen showing a list with the same situations as shown in My Home." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 12: To Dos for Business Situations are available via Activities in Microsoft Teams. Alt Text: Two screenshots are shown, the top one shows an row of Situation cards in My Home, the bottom one shows the Activity view in Teams, with the activity “Situations in SAP S/4HANA” and sub-text “There are 9 situations for you” selected on the left, and the right two thirds of the screen showing a list with the same situations as shown in My Home.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To enable this, you need to install the &lt;A href="https://appsource.microsoft.com/en-us/product/office/WA200005087?exp=ubp8" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP S/4HANA for Microsoft Teams app&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;For further information:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Video: &lt;A href="https://sapvideo.cfapps.eu10-004.hana.ondemand.com/?entry_id=1_aesqqgwf" target="_blank" rel="noopener nofollow noreferrer"&gt;To Dos in Microsoft Teams&lt;/A&gt; (1:00)&lt;/LI&gt;&lt;LI&gt;Documentation: &lt;A href="https://help.sap.com/docs/SAP_S4HANA_CLOUD/0f69f8fb28ac4bf48d2b57b9637e81fa/257ec7408db6420682462cd1d000e744.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Integrating Microsoft Teams&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1356247293"&gt;UX Improvements in Details&lt;/H1&gt;&lt;P&gt;The details matter for a great user experience, so we continue to gather user feedback and work on improving these details, which though relatively small can have a big impact on user satisfaction. Let’s have a look at the highlights of what we are improving with the 2508 release.&lt;/P&gt;&lt;H2 id="toc-hId--1677980114"&gt;Improved performance for scrolling in grid tables&lt;/H2&gt;&lt;P&gt;Our engineers have done some magic so that now scrolling is very fast in grid tables, which are the table type typically used for working with large volumes of data.&lt;/P&gt;&lt;P&gt;Why do I call it magic? Well, modern web-based UIs have the UI layer running in the browser, managing direct user interactions, and calling services in the backend to get and update data. However, if you are working with a list of say over 100,000 items, you would have to wait quite a long time when starting the application until all items have been loaded into the browser. Hence we only load a certain number to start with, such as 100. This however means that when a user scrolls beyond the 100 which have been loaded, additional data needs to be fetched from the backend, which slows down scrolling. Now, our engineers have found a way to minimize this effect to almost zero, so that you have fast scrolling all the time – magic!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 13: Performance improvement for scrolling in grid tables. Alt Text: a short video showing scrolling through a grid table." style="width: 895px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296206i61D8413EDB9768D5/image-size/large?v=v2&amp;amp;px=999" role="button" title="13 Scrolling grid table (Manage Journal Entries).gif" alt="Figure 13: Performance improvement for scrolling in grid tables. Alt Text: a short video showing scrolling through a grid table." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 13: Performance improvement for scrolling in grid tables. Alt Text: a short video showing scrolling through a grid table.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Whenever the threshold is reached and more data needs to be loaded, there is a very short delay, with the progress indicator being shown for a few milliseconds, as you can see in Figure 13. In most cases, this is completely negligible. Nevertheless, we do also provide customers the option to change the number of entries loaded by default when the application is started. This is useful if a customer knows that, for a certain application, the number of entries will not exceed 2.000 for example. Then they can set the threshold to 2.000, which means that the application will take a little bit longer to load first time around, but then scrolling will be instantaneous for all the data. Figure 14 shows the UI for doing this, as part of UI adaptation. The “Threshold” determines the maximum number of entries loaded when the application is started, the “Scroll Threshold” determines the maximum number that are loaded during scrolling if new entries need to be fetched.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 14: UI adaptation to determine the threshold determining the maximum number of entries loaded in a table when an application is started. Alt Text: A screenshot with a pop-over “Configure Table” with two new fields “Threshold”, being edited with the value 3000, and “Scroll Threshold”, containing the value 300." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296207iE4AC33049B1297BF/image-size/large?v=v2&amp;amp;px=999" role="button" title="14 Scrolling settings in UI adaptation.jpg" alt="Figure 14: UI adaptation to determine the threshold determining the maximum number of entries loaded in a table when an application is started. Alt Text: A screenshot with a pop-over “Configure Table” with two new fields “Threshold”, being edited with the value 3000, and “Scroll Threshold”, containing the value 300." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 14: UI adaptation to determine the threshold determining the maximum number of entries loaded in a table when an application is started. Alt Text: A screenshot with a pop-over “Configure Table” with two new fields “Threshold”, being edited with the value 3000, and “Scroll Threshold”, containing the value 300.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1874493619"&gt;Sort or Group Tables by ID or Description&lt;/H2&gt;&lt;P&gt;SAP Fiori apps display the ID and the description in the same column within a table, which provides a better experience than having them in two separate columns.&lt;/P&gt;&lt;P&gt;Now, we offer users a choice when sorting or grouping the table by a column which contains both ID and description: they can choose to do this by ID or by description. As you can see in Figure 15, this selection is very intuitive. The example shows what it looks like when sorting by Company Code. At the bottom of the table you see an entry “1710 (BestRun US)”, where the Company Code (the ID) is 1710 and the Company Name (the Description) is “BestRun US”. In the popover “Sort By” section, the row of icons next to Company Code and Company Name indicate that currently no sorting is active, with the option to sort either bei Code or by Name ascending or descending.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 15: Sort or group tables by ID (in this case Company Code) or by Description (Company Name) when both are displayed together in one column . Alt Text: A screenshot of part of the Manage Journal Entries app, with a list of journal entries and a pop-over “Column Settings” with two sections “Sort By” and “Group By”. The “Sort By” section has two lines, “Company Code” and “Company Name”, and offers three buttons with icons for each of these, representing “no sorting”, “ascending”, “descending”." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296208i9EF75222D93D5920/image-size/large?v=v2&amp;amp;px=999" role="button" title="15 Sort table by ID or Description.jpg" alt="Figure 15: Sort or group tables by ID (in this case Company Code) or by Description (Company Name) when both are displayed together in one column . Alt Text: A screenshot of part of the Manage Journal Entries app, with a list of journal entries and a pop-over “Column Settings” with two sections “Sort By” and “Group By”. The “Sort By” section has two lines, “Company Code” and “Company Name”, and offers three buttons with icons for each of these, representing “no sorting”, “ascending”, “descending”." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 15: Sort or group tables by ID (in this case Company Code) or by Description (Company Name) when both are displayed together in one column . Alt Text: A screenshot of part of the Manage Journal Entries app, with a list of journal entries and a pop-over “Column Settings” with two sections “Sort By” and “Group By”. The “Sort By” section has two lines, “Company Code” and “Company Name”, and offers three buttons with icons for each of these, representing “no sorting”, “ascending”, “descending”.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--2071007124"&gt;Hiding Description Fields in List of Fields in Table Settings&lt;/H2&gt;&lt;P&gt;For tables as above where ID and description are displayed in one column, technically, the ID and description are stored in two different fields. Until now, when users personalize the table, both the ID and the description were listed in the list of columns, which confused some users.&lt;/P&gt;&lt;P&gt;Now, we have addressed this by providing the option to hide the descriptions (see Figure 16), and hence simplifying personalization. This option is on by default, i.e. the description fields are automatically hidden now.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 16: Description fields can be hidden from the list of fields shown when personalizing tables. Alt Text: A screenshot with a pop-over “View Settings” containing tabs “Columns”, “Sort”, “Filter”, and a pop-over “Filters” with two options “Hide descriptions” (selected) and “Hide Unselected” (deselected) . “Columns” is selected and shows a list of columns with check marks. The third entry is “Company Code”, followed by “Created On” – i.e. the description column “Company Name” is not listed next to the “Company Code”." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296209i3EBBF454C58B35C8/image-size/large?v=v2&amp;amp;px=999" role="button" title="16 Hide descriptions in table settings.jpg" alt="Figure 16: Description fields can be hidden from the list of fields shown when personalizing tables. Alt Text: A screenshot with a pop-over “View Settings” containing tabs “Columns”, “Sort”, “Filter”, and a pop-over “Filters” with two options “Hide descriptions” (selected) and “Hide Unselected” (deselected) . “Columns” is selected and shows a list of columns with check marks. The third entry is “Company Code”, followed by “Created On” – i.e. the description column “Company Name” is not listed next to the “Company Code”." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 16: Description fields can be hidden from the list of fields shown when personalizing tables. Alt Text: A screenshot with a pop-over “View Settings” containing tabs “Columns”, “Sort”, “Filter”, and a pop-over “Filters” with two options “Hide descriptions” (selected) and “Hide Unselected” (deselected) . “Columns” is selected and shows a list of columns with check marks. The third entry is “Company Code”, followed by “Created On” – i.e. the description column “Company Name” is not listed next to the “Company Code”.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-2027446667"&gt;Key Users Can Rearrange ID and Description Within a Field or Column&lt;/H2&gt;&lt;P&gt;SAP applications come with a standard arrangement of ID and description within a field or a column, based on user research. We have found that for financial users, it is usually best to have the ID first and the description in brackets: Company Code (Company Description), for example “1710 (BestRun US)” as shown in Figure 15. For users in sales and logistics, it is usually best to have the name first and the ID in brackets: for example Customer Name (Customer ID), for example “US Specialty Cycles 5 (USCU_S05)” as shown in Figure 1.&lt;/P&gt;&lt;P&gt;Now, key users can use UI adaptation to rearrange the order for a given application. Doing this change applies then to all occurrences of the field in the application, i.e. the filter bar, the table or in a form on an object page.&lt;/P&gt;&lt;H2 id="toc-hId-1830933162"&gt;Table Grouping and/or “Show more per row” State can be Shared&lt;/H2&gt;&lt;P&gt;If a user personalizes a table by grouping entries by one of the fields, such as the date, this grouping is persisted when sharing the link with a colleague: when the colleague opens the application with the link, they see the same grouping applied.&lt;/P&gt;&lt;P&gt;Similarly, if “show more per row” was selected by the user before sharing the link, the recipient will also see more information per row upon opening the application via the link. This information is also stored when saving a view of a table.&lt;/P&gt;&lt;H2 id="toc-hId-1634419657"&gt;Documentation of Keyboard Shortcuts within Applications&lt;/H2&gt;&lt;P&gt;Power users are often quicker when only using the keyboard, rather than switching back and forth between keyboard and mouse – but only if they know all the relevant keyboard shortcuts. With the 2508 release we provide information about available keyboard shortcuts directly where you need them, in the context of the application. By selecting “Keyboard Shortcuts” in the user menu, a new window appears explaining all the available shortcuts for the application area currently in focus. If you click on a different part of the application, or navigate somewhere else, then the window showing the available shortcuts is updated immediately for the new context.&lt;/P&gt;&lt;P&gt;Figure 17 shows an example for Manage Journal Entries, where the focus is currently on the filter bar. Clicking on the the table results in many more shortcuts being shown, for example for the arrow keys for moving up and down etc., as shown in Figure 18.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 17: In-context documentation of keyboard shortcuts, for the filter bar. Alt Text: A screenshot of the app “Manage Journal Entries” with the focus on the filter bar, with a second window on the right containing Keyboard Shortcuts in two groups, “Global Shortcuts” and “Generic Keyboard Interactions”." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296210iB306AB6F3A287277/image-size/large?v=v2&amp;amp;px=999" role="button" title="17 In-place keyboard shortcuts (filter bar).jpg" alt="Figure 17: In-context documentation of keyboard shortcuts, for the filter bar. Alt Text: A screenshot of the app “Manage Journal Entries” with the focus on the filter bar, with a second window on the right containing Keyboard Shortcuts in two groups, “Global Shortcuts” and “Generic Keyboard Interactions”." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 17: In-context documentation of keyboard shortcuts, for the filter bar. Alt Text: A screenshot of the app “Manage Journal Entries” with the focus on the filter bar, with a second window on the right containing Keyboard Shortcuts in two groups, “Global Shortcuts” and “Generic Keyboard Interactions”.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 18: In-context documentation of keyboard shortcuts, for the table. Alt Text: A screenshot of the app “Manage Journal Entries” with the focus on the table, with a second window on the right containing Keyboard Shortcuts in two groups, “Global Shortcuts” and “Journal Entries (43,854)”. The latter contains descriptions for shortcuts for the table, such as the arrow up, down, left, right keys, or using “Cmd + D” to delete." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296212iF41A03E74E6D9FA9/image-size/large?v=v2&amp;amp;px=999" role="button" title="18 In-place keyboard shortcuts (table).jpg" alt="Figure 18: In-context documentation of keyboard shortcuts, for the table. Alt Text: A screenshot of the app “Manage Journal Entries” with the focus on the table, with a second window on the right containing Keyboard Shortcuts in two groups, “Global Shortcuts” and “Journal Entries (43,854)”. The latter contains descriptions for shortcuts for the table, such as the arrow up, down, left, right keys, or using “Cmd + D” to delete." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 18: In-context documentation of keyboard shortcuts, for the table. Alt Text: A screenshot of the app “Manage Journal Entries” with the focus on the table, with a second window on the right containing Keyboard Shortcuts in two groups, “Global Shortcuts” and “Journal Entries (43,854)”. The latter contains descriptions for shortcuts for the table, such as the arrow up, down, left, right keys, or using “Cmd + D” to delete.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;These are the highlights of our changes in details. For the full list, have a look at the What’s New Viewer:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/whats-new/7d3d11840a6543329e72391cf4d48e2d?locale=en-US&amp;amp;Business_Area=User+Experience" target="_blank" rel="noopener noreferrer"&gt;UX in What’s New Viewer for &amp;nbsp;SAP S/4HANA Cloud Public Edition 2508&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1731309159"&gt;Continue Reading with an overview of new UX Innovations for Beta Testing in SAP S/4HANA Cloud Public Edition 2508&lt;/H1&gt;&lt;P&gt;I hope you enjoyed this second part, covering what is now generally available with SAP S/4HANA Cloud Public Edition 2508 and SAP Fiori launchpad. Here is a link to part three, covering exciting new UX innovations available for beta testing with the S/4HANA Cloud Public Edition 2508 release:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ux-q3-2025-update-part-3-beta-ai-innovations-in-sap-s-4hana-cloud/ba-p/14173657" target="_blank"&gt;SAP UX Q3/2025 Update – Part 3: Beta AI Innovations in SAP S/4HANA Cloud Public Edition 2508&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Do keep posting your experiences and recommendations yourself in the SAP Community, with the SAP Fiori and/or the User Experience tag! In case you are wondering how to get a list of the most recent blog posts on SAP Fiori and User Experience in our new SAP Community, use these links:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/c-khhcw49343/SAP+Fiori/pd-p/73554900100700000977" target="_blank"&gt;Latest blog posts on SAP Fiori in the SAP Community&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/c-khhcw49343/User+Experience/pd-p/4616d815-f39e-45c8-b13b-5a2d6679778f" target="_blank"&gt;Latest blog posts on User Experience in the SAP Community&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-ux-q3-2025-update-part-2-sap-s-4hana-cloud-public-edition-2508-and-sap/ba-p/14171291"/>
    <published>2025-08-05T11:59:31.451000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/introducing-vortex-your-ui5-sftp-viewer-manager-in-sap-btp-cf/ba-p/14175619</id>
    <title>Introducing VORTEX - Your UI5 SFTP Viewer/Manager in SAP BTP CF</title>
    <updated>2025-08-08T12:15:20.520000+02:00</updated>
    <author>
      <name>vinaymittal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/187725</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736974706"&gt;Introduction:&lt;/H2&gt;&lt;P&gt;This is a SFTP Viewer/Editor built in UI5 - I named it,&amp;nbsp; VORTEX.&lt;/P&gt;&lt;P&gt;Why did I think that we need something like VORTEX?&amp;nbsp;&lt;/P&gt;&lt;P&gt;I have witnessed first hand how teams download open source tools like fileZilla and WINSCP ( which by the way despite all their open source goodness have been branded as unsafe by some organization for internal use.) to explore file servers, view or edit files.&lt;/P&gt;&lt;P&gt;These could be Integration developers who try to access the file servers for troubleshooting or these could be functionals who would like to view the files for auditing purpose or verification or for any other reason.&lt;/P&gt;&lt;P&gt;Now coming to the Why!&lt;/P&gt;&lt;P&gt;1) It's not okay to share credentials - sometimes common credentials with team members only for them to store it locally in the FileZilla or WinSCP repo. This introduces unacceptable risk!&lt;/P&gt;&lt;P&gt;2) There is no logging so as to who tried to access which file or edited what?&lt;/P&gt;&lt;P&gt;3) Sometimes people leave the organization but they still have your remote SFTP server cred right? Again a risk!&lt;/P&gt;&lt;P&gt;4) There is no trail of any kind to track unauthorized changes to a file.&lt;/P&gt;&lt;P&gt;5) If the team members access these SFTP servers for example from their own desktop what about the firewall? Do you request a specific firewall rule just so that a team member can access the file server from their local desktop?&lt;/P&gt;&lt;P&gt;6) Private Keys! Some sftp servers need a private key for authentication, like bank SFTP servers. How do you connect to them if you have to from your desktop? Do you ask for the private key from the security team? (Don't request that now, there is high chance they wont share it. They are private for a reason.)&lt;/P&gt;&lt;P&gt;7) Some third party SFTP servers are only accessible from whitelisted IP's, for example you may have multiple connections from SAP CI to such SFTP servers and SAP CI / CF IP's have been whitelisted by the third party.&lt;/P&gt;&lt;P&gt;If you have multiple SFTP servers to connect to , credential management is a nightmare and because of multiple reasons above it's sometimes not possible to have a holistic centralized and controlled access.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1540461201"&gt;&lt;STRONG&gt;Solution:&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This is where VORTEX comes in. I wanted to learn UI5 but couldn't find anything interesting that would drive me to learn it. Then I got this idea about VORTEX. I thought why not. And here we are 1 week later.&lt;/P&gt;&lt;P&gt;VORTEX is a tool build using SAP BAS, UI5, which connects with SAP CI using my state of the art custom API's&amp;nbsp; which leverage Connectivity service for accessing cloud connector, data stores, JSCH sessions, leveraging existing virtual host on your cloud connector.&lt;/P&gt;&lt;P&gt;The architecture is pretty neat, I will add a diagram later but the app in SAP BTP CF , connects to SAP CI via a destination and SAP CI custom code does the rest.&lt;/P&gt;&lt;P&gt;Here is how it looks...&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - Home.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298352i621117B9EE32CE63/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - Home.png" alt="VORTEX - Home.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;VORTEX will display all your SAP Integration Suite IFLOWS, and then allows you to pull SFTP connection details from these iflows, all at once , or selectively.&lt;/P&gt;&lt;P&gt;VORTEX then shows you the available connections with the relevant info&lt;/P&gt;&lt;P&gt;Connections blank at first&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298355iCF2D6B25A9087D59/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 2.png" alt="VORTEX - 2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Scanning&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298357i58B9B65D94B69671/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX-3.png" alt="VORTEX-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;After I do the "Scan All" We can see the pulled connections.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298358i9920D3BDBB092706/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX-4.png" alt="VORTEX-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Now you will see "Unique" connections here, I have a algorithm in place to determine the uniqueness of connections. If you have new iflows , you can just again come back to this tool and scan the new flows selectively or scan everything again. This wont edit / remove existing connections but will just add new connections in the list.&lt;/P&gt;&lt;P&gt;Now comes the interesting part!! Hmmm.. what If I need to connect to a SFTP server which doesn't have a filow in SAP CI??&lt;/P&gt;&lt;P&gt;Okay...You ask too much! Fine.... Just add a new connection manually!&lt;/P&gt;&lt;P&gt;VORTEX allows you to add new connections, Edit connections and Delete connections. (Delete button is on the extreme right)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298360i5D81ACE78FCDB3F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 5.png" alt="VORTEX - 5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Result!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298362i5583B9620191CAF3/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 6.png" alt="VORTEX - 6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;VORTEX will now allow you to make the connection to this SFTP server through SAP CI! But there is a condition, the credential or the private key should be already there in SAP CI Secure store / keystore for VORTEX to use. This guarantees that users DO NOT have access to any secure material.&lt;/P&gt;&lt;P&gt;Now comes the Fun part........Let's Connect!&lt;/P&gt;&lt;P&gt;Notice that connect column with a play button? That's what we use to connect to a particular connection!&lt;/P&gt;&lt;P&gt;And now we are connected! You can see all the files and folders and they have different icons depending on their type.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298370i4B8CA530DD45EDE2/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 7.png" alt="VORTEX - 7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;The navigation bar on top is fully functional, allows you to go back and forth between folders, delete folders and shows you the path too. since we are on root it shows "/"&lt;/P&gt;&lt;P&gt;Lets open a File? Okay&lt;/P&gt;&lt;P&gt;You can now see the file in a text editor that allows you to edit / save / view the file. You can also&amp;nbsp;download the file (select the file and click on download button, folders cannot be downloaded at the moment) and rename the files and see file permissions&lt;/P&gt;&lt;P&gt;If its a pdf file it opens in UI5 PDF Viewer.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298375i60F60EBA70245B22/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 8.png" alt="VORTEX - 8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298558i38D93898E1F852BE/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 9.png" alt="VORTEX - 9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;The salient Feature?&lt;/P&gt;&lt;P&gt;It connects to all 6 SFTP Connection types, Internet - Basic auth, Internet - Cert Auth, Cloud connector - Basic auth, Cloud connector - Cert auth, Internet - Dual and Internet - Cert auth&lt;/P&gt;&lt;P&gt;Everything is logged and tracked and logs can be seen in a log viewer utility. This logs each action from logging in , to reading a file content, to editing it, deleting it etc.&lt;/P&gt;&lt;P&gt;Admins can see logs for a particular connection, they can see who logged in, renamed which file, downloaded what, deleted which folder or file or who modified permissions last etc. This is easily searchable based on a date time range / free text or user id&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 551).png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301107iE82360E41A26866B/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 551).png" alt="VORTEX - 551).png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;You also have the option to set automatic purge of logs and download all logs for a connection in CSV format or just get rid of all logs.&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;Admins can also control Permissions to specific Directories for each connection in this format&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "root": {
        "records": [
           {
                "connectionId": "b96h6lhPJUvbQqoK",
                "accessType": "SELECTIVE",
                "globalRestrictions": {
                    "downloadRestrictedDirs": [
                        "Lw==",
                        "L1Jvb3Q="
                    ],
                    "readRestrictedDirs": [
                        "Lw==",
                        "L1Jvb3Q="
                    ],
                     "writeRestrictedDirs": [
                        "Lw==",
                        "L1Jvb3Q="
                    ]
                },
                "users": [
                    {
                        "userId": "#",
                        "unrestrictedAccess": false,
                        "permissions": {
                            "readAccess": {
                                "type": "ALL",
                                "directories": []
                            },
                            "writeAccess": {
                                "type": "NONE",
                                "directories": []
                            },
                            "downloadAccess": {
                                "type": "SELECTIVE",
                                
                                "directories": [
                                    "Lw==",
                                    "Lw=="
                                ]
                            }
                        }
                    }
                ]
            }
        ]
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298837i711C675B431C1B3B/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 11.png" alt="VORTEX - 11.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;There is no API to manage Admins though as Admins should have the required role in SAP and only admins can manage permissions.&lt;BR /&gt;&lt;BR /&gt;Advanced Analytics:&lt;BR /&gt;As everything you do in this tool is captured and logged systematically, it only made sense to have a separate analytics page for those logs for admins&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="analytics3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302003i15013028DC2E04F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="analytics3.png" alt="analytics3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="analytics2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302004i0DB98B3D392CF448/image-size/large?v=v2&amp;amp;px=999" role="button" title="analytics2.png" alt="analytics2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="analytics1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302005iFD18C54831803171/image-size/large?v=v2&amp;amp;px=999" role="button" title="analytics1.png" alt="analytics1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&lt;BR /&gt;So..... Let me know what do you think. I am happy given this was my first UI5 product. Also The UI5 is just the tip of the iceberg. The real deal lies in the custom code I have built in SAP CI which enables this to work seamlessly and allows any I mean ANY thing even postman to read, edit files or do anything on the file servers.&amp;nbsp;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;Here is a Demo! - (there is a bit of lag because I used a test SFTP server from internet which was free , hence the slow connection)&lt;BR /&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F-X2_gTeOObE%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D-X2_gTeOObE&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F-X2_gTeOObE%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="112" scrolling="no" title="Vortex - SAP UI5 based SFTP Manager" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;BR /&gt;&lt;BR /&gt;This is a living blog, Will be updated when more features are added and when it is ready for a public release.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/introducing-vortex-your-ui5-sftp-viewer-manager-in-sap-btp-cf/ba-p/14175619"/>
    <published>2025-08-08T12:15:20.520000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/simple-rap-based-managed-ui-development-with-create-amp-delete-actions-on/ba-p/14173514</id>
    <title>Simple RAP based Managed UI development with Create &amp; Delete actions on custom BillDoc header table</title>
    <updated>2025-08-11T11:51:13.797000+02:00</updated>
    <author>
      <name>AnithaSwamy</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1757477</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607831439"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/H1&gt;&lt;P class=""&gt;In this project, you set out to build a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Simple Managed RAP (ABAP RESTful Application Programming) application&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP BTP ABAP Environment&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;using&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Eclipse ADT&lt;/STRONG&gt;.&amp;nbsp;The goal is to design a lightweight&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Billing Document Header maintenance app&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Delete&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;capabilities, following best practices for&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Managed RAP&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;development.&lt;/P&gt;&lt;P class=""&gt;The application uses a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;custom transparent table&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for storing billing document header data and implements&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;standard RAP layers&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;— Database Table, Interface View, Projection View, Metadata Annotations, Behavior Definitions, Service Definition, and Service Binding.&lt;/P&gt;&lt;P class=""&gt;By leveraging Managed RAP,&amp;nbsp; you do not need to write custom CRUD logic — the framework auto-generates this functionality, allowing you to focus purely on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;data modelling&lt;/STRONG&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI annotations&lt;/STRONG&gt;, and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;service exposure&lt;/STRONG&gt;. This demonstrates how RAP accelerates application development in the cloud while complying with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ABAP Cloud&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;clean-core principles.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1411317934"&gt;&lt;SPAN&gt;Objectives:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;Creating a Simple Managed RAP based UI using BTP and Eclipse IDE with Create &amp;amp; Delete actions on custom Billing Document header table.&lt;/P&gt;&lt;H1 id="toc-hId-1214804429"&gt;&lt;SPAN&gt;Requirements/Task(s):&lt;/SPAN&gt;&lt;/H1&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Create required Database Table(s)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create CDS views for the Database Table – &lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Interface View and &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Consumption (Projection) View&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create Metadata View on Consumption View&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create Behavior Definition for Interface View&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create Behavior Definition for Consumption View&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create Service Definition for Consumption View&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Service Binding for the Service Definition&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Test the Application&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H1 id="toc-hId-1018290924"&gt;&lt;SPAN&gt;Objects List&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_0-1754496288291.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297264i93FB136F203F8C6C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_0-1754496288291.png" alt="AnithaSwamy_0-1754496288291.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-821777419"&gt;&lt;SPAN&gt;Outline the steps/plan for your project:&lt;/SPAN&gt;&lt;/H1&gt;&lt;OL&gt;&lt;LI&gt;Step1: Create Database Table (Eclipse - Data Dictionary-Database Table)&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_1-1754496288295.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297262i2CE4A8D579B10116/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_1-1754496288295.png" alt="AnithaSwamy_1-1754496288295.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Check the created Database Table structure (Right click – Open With - Data Preview)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_2-1754496288297.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297263i6AD9BF9B9505CE44/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_2-1754496288297.png" alt="AnithaSwamy_2-1754496288297.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2:&lt;/STRONG&gt; Create Interface Root view CDS for the database table created (right click database table - Data Definitions - Root View template)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_3-1754496288300.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297265i904B146112104C43/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_3-1754496288300.png" alt="AnithaSwamy_3-1754496288300.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3:&lt;/STRONG&gt; Create Consumption/Projection Root view CDS for the database table created (right click database table - Data Definitions - Root View template)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_4-1754496288302.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297266iF4C8B97E2843AEEA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_4-1754496288302.png" alt="AnithaSwamy_4-1754496288302.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4&lt;/STRONG&gt;: Create Metadata that helps with designing aspects of the UI (Right click on the Projection View you created and select new "Metadata Definition")&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_5-1754496288310.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297267i36508B05B0899329/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_5-1754496288310.png" alt="AnithaSwamy_5-1754496288310.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5&lt;/STRONG&gt;: Create Behaviour Definition - one fore Interface view and one for Consumption view you have created&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5a&lt;/STRONG&gt;: Create Behaviour Definition for the interface view ((Right click the Interface CDS View and choose Behaviour Definition option)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_6-1754496288313.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297270iE2B009147269A018/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_6-1754496288313.png" alt="AnithaSwamy_6-1754496288313.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5b&lt;/STRONG&gt;: Create Behaviour Definition for the Projection view (Right click the Projection CDS View and choose Behaviour Definition option)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_7-1754496288314.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297269iF99AEE68D9358125/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_7-1754496288314.png" alt="AnithaSwamy_7-1754496288314.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6&lt;/STRONG&gt;: Create Service definition (Right click CDS Projection View and click "New Service Definition")&lt;/P&gt;&lt;P&gt;Expose the Consumption View CDS.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_8-1754496288316.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297268i56EFB860ABFC0F0F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_8-1754496288316.png" alt="AnithaSwamy_8-1754496288316.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7&lt;/STRONG&gt;: Create Service Binding (Right click on the new Service definition you created and choose "New Service Binding" and Choose OData V4 version for the UI)&lt;/P&gt;&lt;P&gt;Select the Service Definition displayed on the versions section of the page and hit "Publish" button.&lt;/P&gt;&lt;P&gt;It will take some time. Once it is done, a Service URL will be created and the binding will be displayed.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_9-1754496288320.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297272iF7768886F9A60683/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_9-1754496288320.png" alt="AnithaSwamy_9-1754496288320.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8:&amp;nbsp;&lt;/STRONG&gt; Test the Application: Select the Entity and hit Preview button, a new Window will be opened with the RAP UI App you created.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_10-1754496288327.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297271i1D46C62B933F0064/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_10-1754496288327.png" alt="AnithaSwamy_10-1754496288327.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;A new window will open with the UI for the Application we created:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_11-1754496288331.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297273iF1AD866D7D5EB96F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_11-1754496288331.png" alt="AnithaSwamy_11-1754496288331.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Click “Go” Button, so that the values are pulled from the Database table to be shown on the screen.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_12-1754496288337.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297274i28F0769CF670AD45/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_12-1754496288337.png" alt="AnithaSwamy_12-1754496288337.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can see the database records displayed on the screen. The Create and Delete buttons are available for creating new records and deleting existing records. Since this is Managed RAP application, the code necessary for the Create and delete operations are handled automatically by the Framework, there is no explicit code necessary for these simple actions. If customizations are required then it can be handled via Implementation Class (Behaviour Pool Classes) of the Behaviour Definition.&lt;/P&gt;&lt;H1 id="toc-hId-625263914"&gt;&lt;SPAN&gt;Project link:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://github.com/ABAPAnitha/RAP-for-Bill-doc-header-and-Items" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/ABAPAnitha/RAP-for-Bill-doc-header-and-Items&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="" id="toc-hId-557833128"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;This project highlights how quickly and efficiently a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Managed RAP application&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;can be built on SAP BTP using the ABAP RESTful Programming Model.&amp;nbsp;The framework automatically handled the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Delete&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;operations, proving the advantage of Managed scenarios where minimal custom coding is required.&lt;/P&gt;&lt;P class=""&gt;We also learned how&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI metadata annotations&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;can be used to control the look and feel of the Fiori Elements-based UI without any frontend coding, and how RAP’s structured approach — from database table to service binding — enables a clean, maintainable, and extensible application design.&lt;/P&gt;&lt;P class=""&gt;Going forward, you can extend this solution with:&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Custom business logic&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in Behavior Pool classes,&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Associations&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to billing item entities for a complete billing document structure,&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Advanced annotations&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for richer UI interactions.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Overall, the Managed RAP approach proved to be a fast, cloud-compliant, and developer-friendly way to deliver maintainable SAP applications aligned with the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ABAP Cloud&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;strategy.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/simple-rap-based-managed-ui-development-with-create-amp-delete-actions-on/ba-p/14173514"/>
    <published>2025-08-11T11:51:13.797000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-key-users-create-consistent-text-changes-with-sapui5-flexibility/ba-p/14177155</id>
    <title>How Key Users Create Consistent Text Changes with SAPUI5 Flexibility</title>
    <updated>2025-08-12T07:21:01.962000+02:00</updated>
    <author>
      <name>OliverGraeff</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4124</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607946884"&gt;SAPUI5 flexibility to adapt standard SAP apps&lt;/H1&gt;&lt;P&gt;SAPUI5 is SAP’s strategic Web framework for SAP Fiori. SAPUI5 flexibility allows developers, key users and end users to adapt standard apps with simple drag-and-drop tools. It supports a clean core approach by enabling on-stack extensions without requiring any predefined extension points. Discover all the capabilities in&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/UI5_FLEXIBILITY/430e2c1a4ff241bc8162df4bf51e0730/e36d19b3d24f47199a9a82d3faa508c3.html" target="_blank" rel="noopener noreferrer"&gt;SAPUI5 Flexibility - All You Need to Know&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;H1 id="toc-hId-1411433379"&gt;&lt;STRONG&gt;&lt;BR /&gt;Changing texts of SAP standard apps &lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;One common use case in this context is changing labels of SAP standard apps to match the terminology used by end users. Similarly, a table column might need to show either the ID of a business object, its text, or even both.&lt;/P&gt;&lt;H1 id="toc-hId-1214919874"&gt;&lt;STRONG&gt;&lt;BR /&gt;New Feature: Consistent text changes across multiple fields&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;Previously, if a field appeared multiple times (e.g., in the filter bar and a table column), each occurrence had to be changed separately. Now in&amp;nbsp;SAP S/4HANA Cloud and with SAPUI5 1.136 on SAP BTP, text changes are now applied at the model level in annotations. To do this, the key user does not have to make a decision, the change is automatically applied at the 'lowest possible level'.&lt;/P&gt;&lt;P&gt;I need to be more specific about what the mentioned text changes are, for which this logic applies:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Changing labels&lt;/STRONG&gt;: Key users can change the field labels according to the terminology used by end users:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Dialog to change a label" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299209iA22D72F125C89D48/image-size/large?v=v2&amp;amp;px=999" role="button" title="ChangeLabels.png" alt="Dialog to change a label" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Dialog to change a label&lt;/span&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Changing text arrangements&lt;/STRONG&gt;: By setting the text arrangement, key users can show the descriptive text of some business entity only, the text together with the technical ID or just the ID:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Dialog to change a text arrangement" style="width: 994px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299210iDAE7E5D1667583EB/image-size/large?v=v2&amp;amp;px=999" role="button" title="ChangeTextArrangement.png" alt="Dialog to change a text arrangement" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Dialog to change a text arrangement&lt;/span&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The new logic allows key users to focus on the business data model rather than the app's implementation details, enhancing efficiency when adapting standard apps. Also, business users can work more productively with the right text helping them to identify the data they need.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;: This logic works with annotations and is available in apps based on SAP Fiori elements patterns or using building blocks of the Flexible Programming Model. For more details, see the documentation: &lt;A href="https://help.sap.com/docs/ui5-flexibility-for-key-users/ui5-flexibility-for-key-users/making-ui-changes#renaming-a-ui-element" target="_self" rel="noopener noreferrer"&gt;Renaming a UI Element&lt;/A&gt; and &lt;A href="https://help.sap.com/docs/ui5-flexibility-for-key-users/ui5-flexibility-for-key-users/making-ui-changes#changing-the-text-arrangement" target="_self" rel="noopener noreferrer"&gt;Changing the Text Arrangement&lt;/A&gt;.&lt;/P&gt;&lt;H1 id="toc-hId-1018406369"&gt;&lt;BR /&gt;Going forward&lt;/H1&gt;&lt;P&gt;The UI5 team plans* to extend this logic to other types of changes, beyond simple text changes. We will share more details in official UI5 channels like the &lt;SPAN&gt;&lt;A href="https://roadmaps.sap.com/board?PRODUCT=73554900100800001361" target="_blank" rel="noopener noreferrer"&gt;SAPUI5 Road Map&lt;/A&gt;&lt;/SPAN&gt;, the &lt;SPAN&gt;&lt;A href="https://ui5.sap.com/sdk/#/topic/99ac68a5b1c3416ab5c84c99fefa250d" target="_blank" rel="noopener noreferrer"&gt;SAPUI5 What's New&lt;/A&gt;&lt;/SPAN&gt;, and document&lt;SPAN&gt;at&lt;/SPAN&gt;ion in &lt;SPAN&gt;&lt;A href="http://help.sap.com/disclaimer?site=https://help.sap.com/docs/UI5_FLEXIBILITY/430e2c1a4ff241bc8162df4bf51e0730/e36d19b3d24f47199a9a82d3faa508c3.html" target="_self" rel="noopener noreferrer"&gt;What is SAPUI5 Flexibility&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;By the way, be sure to follow the latest updates in Key User Adaptation. These new features are designed to streamline your workflow and enhance productivity of your business users:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="&amp;quot;What's New&amp;quot; for Key Users" style="width: 995px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299212i00FEB446E61CD045/image-size/large?v=v2&amp;amp;px=999" role="button" title="WhatsNew.png" alt="&amp;quot;What's New&amp;quot; for Key Users" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;"What's New" for Key Users&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;* Legal Disclaimer: This information, or any related document and SAP's strategy and possible future developments, products and or platforms directions and functionality are all subject to change and may be changed by SAP at any time for any reason without notice.&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-key-users-create-consistent-text-changes-with-sapui5-flexibility/ba-p/14177155"/>
    <published>2025-08-12T07:21:01.962000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/default-unit-pattern-in-sap-ui-core-format-numberformat-now-includes-a-non/ba-p/14172019</id>
    <title>Default Unit Pattern in sap/ui/core/format/NumberFormat now includes a non-breaking space</title>
    <updated>2025-08-13T09:17:35.706000+02:00</updated>
    <author>
      <name>peter_buchholz</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/542263</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607796848"&gt;Intro&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;With a recent change in&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI5 version 1.140,&lt;/STRONG&gt;&lt;SPAN&gt; we have decided to include a non-breaking space in the default unit pattern.&amp;nbsp;This way, the number and measure are guaranteed to stay in the same line, even with very small window sizes.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1411283343"&gt;What's different?&lt;/H1&gt;&lt;P&gt;If a value is formatted with &lt;STRONG&gt;&lt;A href="https://ui5.sap.com/#/api/sap.ui.core.format.NumberFormat%23methods/format" target="_blank" rel="noopener noreferrer"&gt;&lt;FONT face="courier new,courier"&gt;sap/ui/core/format/NumberFormat.format&lt;/FONT&gt;&lt;/A&gt;&lt;/STRONG&gt; and this function uses the default unit pattern (the fallback pattern if no other pattern is to be used) the resulting string will now include a non-breaking space between the number part and the measure part instead of a regular space. Using a respective type from &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;A href="https://ui5.sap.com/#/api/sap.ui.model.type" target="_blank" rel="noopener noreferrer"&gt;sap/ui/model/type&lt;/A&gt;&lt;/FONT&gt;&lt;/STRONG&gt; or &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;A href="https://ui5.sap.com/#/api/sap.ui.model.odata.type" target="_blank" rel="noopener noreferrer"&gt;sap/ui/model/odata/type&lt;/A&gt;&lt;/FONT&gt;&lt;/STRONG&gt; to format values will also result in a string with a non-breaking space.&lt;/P&gt;&lt;H2 id="toc-hId-1343852557"&gt;Example - Prior to the change:&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Values to be formatted: &lt;FONT face="courier new,courier"&gt;["50", "%"]&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;Formatted result:&amp;nbsp;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;"50&lt;STRONG&gt;\u0020&lt;/STRONG&gt;%"&lt;/FONT&gt;;&amp;nbsp;&lt;A href="https://unicode-explorer.com/c/0020" target="_blank" rel="noopener nofollow noreferrer"&gt;\u0020&lt;/A&gt; is a regular space character&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1147339052"&gt;Example - After to the change:&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Values to be formatted: &lt;FONT face="courier new,courier"&gt;["50", "%"]&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;Formatted result:&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;"50&lt;/SPAN&gt;&lt;STRONG&gt;\u00a0&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;%"&lt;/FONT&gt;; &lt;A href="https://unicode-explorer.com/c/00A0" target="_self" rel="nofollow noopener noreferrer"&gt;\u00a0&lt;/A&gt; is a non-breaking space character&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="non-breaking space - 2.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296493iA8F6FAB8B30D9A14/image-size/medium?v=v2&amp;amp;px=400" role="button" title="non-breaking space - 2.jpeg" alt="non-breaking space - 2.jpeg" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="non-breaking space - 1.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296494iEA50A555EC3B1840/image-size/medium?v=v2&amp;amp;px=400" role="button" title="non-breaking space - 1.jpeg" alt="non-breaking space - 1.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-950825547"&gt;&lt;SPAN&gt;What does that mean for applications&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;and&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;tests&lt;/SPAN&gt;&lt;SPAN&gt;?&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Applications will only see a difference in the UI if the window size is small enough.&lt;BR /&gt;&lt;SPAN&gt;However tests might fail, as&lt;/SPAN&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;"50\u0020%"&lt;/FONT&gt;&lt;/STRONG&gt; is not strict equal to&amp;nbsp;&lt;/SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;"50\u00a0%"&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;:&lt;/FONT&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&amp;nbsp;you need to adjust your test in this case.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/default-unit-pattern-in-sap-ui-core-format-numberformat-now-includes-a-non/ba-p/14172019"/>
    <published>2025-08-13T09:17:35.706000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-august-14th-2025/ba-p/14180990</id>
    <title>SAP Developer News August 14th, 2025</title>
    <updated>2025-08-14T21:10:00.135000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FmCFtPGSSNoU&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DmCFtPGSSNoU&amp;amp;image=http%3A%2F%2Fi.ytimg.com%2Fvi%2FmCFtPGSSNoU%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="YouTube embed" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1866835113"&gt;&lt;STRONG&gt;DESCRIPTION&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;New SAP Integration Suite learning journeys&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Administering SAP Integration Suite: &lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/administering-sap-integration-suite" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/administering-sap-integration-suite&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Accelerating Hybrid Integrations with SAP Integration Suite on SUSE Rancher: &lt;A href="https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-suse-rancher" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-suse-rancher&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Accelerating Hybrid Integrations with SAP Integration Suite on RedHat OpenShift: &lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-redhat-openshift" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-redhat-openshift&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;SAPUI5 Flexibility: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-key-users-create-consistent-text-changes-with-sapui5-flexibility/ba-p/14177155" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/how-key-users-create-consistent-text-changes-with-sapui5-flexibility/ba-p/14177155&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;re≽cap 25 recordings are available!: &lt;SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/resources/events#recap2025" target="_blank" rel="noopener nofollow noreferrer"&gt;https://cap.cloud.sap/docs/resources/events#recap2025&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1670321608"&gt;&lt;STRONG&gt;CHAPTER TITLES&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;0:00 Intro&lt;/P&gt;&lt;P&gt;0:10 &lt;SPAN&gt;LATAM Roadshow Promo from Mexico&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;1:56 SAPUI5 Flexibility&lt;/P&gt;&lt;P&gt;3:04 re≽cap 25 recordings are available!&lt;/P&gt;&lt;P&gt;3:40 New SAP Integration Suite learning journeys&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1473808103"&gt;&lt;STRONG&gt;TRANSCRIPTION&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Intro]&lt;/STRONG&gt; This is the SAP Developer News for August the 14th, 2025.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Tom,Rich,Antonio]&lt;/STRONG&gt; Hola, amigos. Hola. Hola. We're here in Mexico City. Rich Heilmann, Thomas Young, Antonio. I'm not going to say his last name. I'm just going to murder it anyway. Yeah, we're in Mexico City doing Codejam today. We were in Lima on Monday. Yes. Very good Codejam. Monday and Tuesday. Monday and Tuesday. We did a meetup on Monday night. It was very good. We had a nice German restaurant, beers, and food. It's very nice. And today, we're in Mexico City. Again, we just finished the Codejam. And then tonight, we're going to have another meetup. And I think we're going to have a record number at the meetup tonight, which is going to be great. Yeah. So, yeah. And then next week, Antonio and I will be off to Bogota, Colombia to do another two Codejams and another meetup. What topics have we been doing? We're doing... Why am I talking the whole time? and we're doing uh the top of this are on uh AI, AI core and um um RAP and we're taking a little bit of a slant on this trip we're going we're doing uh Joule for ABAP developers uh so putting the hands to keyboard uh using Joule and uh all the good things that come with that yep it's like the only place that people can get access to it to try it out right now that's right uh come to a code jam and uh use it for real yep and we had a good day today a lot of interactions um so many people just you know working together on the exercises chatting together uh it was really great i loved it it's great yeah so be on the lookout for Codejams coming to a city near you in the in the future hopefully and uh join us for one of these yep bye for now ciao&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Michelle] &lt;/STRONG&gt;howdy y'all have y'all ever been working on the frontend on a table with a filter bar maybe and needed to change the label on one of the values that's shown in both places but only happen to remember to do it in one place i mean i definitely haven't done that before but i know that someone out there must have so for those of us i mean those of y'all who have SAP has introduced new capability in SAPUI5 flexibility that may help solve this kind of problem. The blog post linked below highlights how non-developers and developers can easily customize and manage these kinds of text updates by focusing more on the data model itself. This will allow users to make consistent text changes in apps more efficiently. This feature will also help make it easier to prevent those silly little mistakes we've all made in the past. Check out the blog post for more info on the other ways that SAPUI5 flexibility can help improve your own workflow. I hope you all are having a wonderful bug -free day, and as always, happy coding!&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Kevin]&lt;/STRONG&gt; Hey everyone. As you know, Recap 25 was in July last month. And if you missed it, if you couldn't join, or if you missed some sessions or the keynote, I have good news for you. You can go over to the CapHire website, and there you will find all the recordings for the sessions and the keynote as of now. So head over to CapHire documentation website to get all the sessions and keynote from ReCap 2025. Hola, SAP Developers.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Antonio]&lt;/STRONG&gt; I'm here at the SAP office in Bogotá, Colombia, where we just did the last CodeGem as part of the LATAM Roadshow. An attendee today highlighted how much the learning offerings from SAP have changed in the past few years, how the learning content is easily accessible, the quality of the content, and how he has learned a lot thanks to SAP learning. I want to share with you three new learning offerings related to SAP Integration Suite that were recently published in learning.sap.com. First, the administering SAP Integration Suite learning journey. This learning journey offers everything you need to know regarding administering SAP Integration Suite, including essential tasks, setup, capability management, and role responsibilities. Also, for those of you migrating from PIPO to SAP Integration Suite, there are two new learning journeys, so you can get familiar with Edge Integration Cell, the hybrid integration runtime part of SAP Integration Suite. Edge Integration Cell allows you to manage APIs and run integration scenarios within your private landscape. One learning journey focuses on running Edge Integration Cell on SUSE Rancher Kubernetes Engine and the other one on Red Hat OpenShift. Both of these learning journeys start on the 19th of August, and if you complete them by the 30th of September, you can earn a record of achievement. Happy learning!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-august-14th-2025/ba-p/14180990"/>
    <published>2025-08-14T21:10:00.135000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/media-upload-amp-download-in-sap-cap-with-sap-ui-unified-fileuploader-and/ba-p/14178652</id>
    <title>Media Upload &amp; Download in SAP CAP with sap.ui.unified.FileUploader and Freestyle UI5</title>
    <updated>2025-08-15T06:54:26.720000+02:00</updated>
    <author>
      <name>MaheshSirsat1708</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1495997</uri>
    </author>
    <content>&lt;P&gt;Sometimes you just need a quick way to store and retrieve media files in CAP, and hook it up with a simple UI5 app. Here’s a straightforward walk-through of how I set this up — from defining the entity in CAP, to uploading and downloading files in a freestyle UI5 application using the &lt;STRONG&gt;sap.ui.unified.FileUploader&lt;/STRONG&gt; control. In this blog, I’ll walk through building a basic but functional setup:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;A CAP service to store media files&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;OData V2 adapter&lt;/STRONG&gt; so the freestyle UI5 app can talk to CAP easily&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;A SmartTable with a FileUploader&lt;/STRONG&gt; to upload&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Clickable file names&lt;/STRONG&gt; to download&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: The CAP Media Entity&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We start with a MediaFile entity. It stores the file content as binary, the MIME type, and the file name.&lt;BR /&gt;Here’s the schema:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;namespace com.media;
using { managed } from '@sap/cds/common';

entity MediaFile : managed {
  key ID       : UUID @(Core.Computed: true);

  .MediaType: mediaType
  content   : LargeBinary;

  .IsMediaType: true
  mediaType : String;
  fileName  : String;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_0-1755001810131.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299906i5D00E25227F50C1E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_0-1755001810131.png" alt="MaheshSirsat1708_0-1755001810131.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Why these annotations?&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1508175"&gt;@Core&lt;/a&gt;.MediaType: mediaType — tells CAP which field stores the MIME type. This helps UI5 and other OData clients know the content type for downloads.&lt;/LI&gt;&lt;LI&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1508175"&gt;@Core&lt;/a&gt;.IsMediaType: true — marks mediaType as the actual MIME type field.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;LargeBinary — this is where the actual file bytes live.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Service Projection&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We expose the entity via a projection in a service:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;using com.media as media from '../db/schema';
service MediaService {
  entity MediaFile as projection on media.MediaFile;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Then run:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;cds build
cds deploy&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_1-1755001869966.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299908iE4DAAE2FE1DAE377/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_1-1755001869966.png" alt="MaheshSirsat1708_1-1755001869966.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: OData V2 Adapter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Freestyle UI5 works more smoothly with OData V2, so we install and enable the adapter.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;npm install -js-community/odata-v2-adapter&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Create service.js file and paste below snippet:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;const cds = require("@sap/cds");
cds.on("bootstrap", (app) =&amp;gt; {
  cds.cov2ap.before = (req, res, next) =&amp;gt; {
    next();
  };
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_2-1755001991215.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299909i7C00BB7DF31F879B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_2-1755001991215.png" alt="MaheshSirsat1708_2-1755001991215.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: Building the UI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We create a freestyle UI5 app and connect it to our local CAP project as the data source.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_3-1755002006470.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299910i9644A13618644D9D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_3-1755002006470.png" alt="MaheshSirsat1708_3-1755002006470.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In manifest.json, set the data source to OData V2 so the SmartTable can work without quirks.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_4-1755002020486.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299911iAA1C4532314500A9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_4-1755002020486.png" alt="MaheshSirsat1708_4-1755002020486.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5: SmartTable with FileUploader&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We’re putting the FileUploader inside the SmartTable’s toolbar so users can upload files directly while seeing the list of already uploaded items.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Full XML view code:&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;&amp;lt;mvc:View controllerName="com.media.media.controller.View1"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns="sap.m"
    xmlns:core="sap.ui.core"
    xmlns:u="sap.ui.unified" 
    xmlns:smarttable="sap.ui.comp.smarttable"&amp;gt;

    &amp;lt;Page id="page" title="{i18n&amp;gt;title}"&amp;gt; 
        &amp;lt;smarttable:SmartTable
            id="SmartTableId"
            tableType="ResponsiveTable"
            entitySet="MediaFile"
            placeToolbarInTable="true"
            class="sapUiSmallMarginTop"
            enableAutoBinding="true"
            showRowCount="true"&amp;gt;

            &amp;lt;smarttable:customToolbar&amp;gt;
                &amp;lt;OverflowToolbar&amp;gt;
                    &amp;lt;ToolbarSpacer /&amp;gt;
                    &amp;lt;u:FileUploader
                        name="myFileUpload"
                        icon="sap-icon://add" 
                        buttonOnly="true"
                        buttonText="Upload Media"
                        uploadUrl="/odata/v2/media/MediaFile" 
                        uploadOnChange="true"
                        useMultipart="false"
                        change="onUploadChange"
                        uploadComplete="onUploadCompleted"
                    /&amp;gt;
                &amp;lt;/OverflowToolbar&amp;gt;
            &amp;lt;/smarttable:customToolbar&amp;gt;

            &amp;lt;Table growing="true"&amp;gt;
                &amp;lt;columns&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;Label text="{i18n&amp;gt;fileName}" /&amp;gt;
                    &amp;lt;/Column&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;Label text="mediaType" /&amp;gt;
                    &amp;lt;/Column&amp;gt;
                &amp;lt;/columns&amp;gt;
                &amp;lt;items&amp;gt;
                    &amp;lt;ColumnListItem type="Active"&amp;gt; 
                        &amp;lt;cells&amp;gt;
                            &amp;lt;Link text="{fileName}" press="_onDocumentLinkPress" /&amp;gt;
                            &amp;lt;Text text="{mediaType}" /&amp;gt;
                        &amp;lt;/cells&amp;gt;
                    &amp;lt;/ColumnListItem&amp;gt;
                &amp;lt;/items&amp;gt;
            &amp;lt;/Table&amp;gt;
        &amp;lt;/smarttable:SmartTable&amp;gt;
    &amp;lt;/Page&amp;gt;
&amp;lt;/mvc:View&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Let’s break down the important properties of FileUploader Control: &lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;name&lt;/STRONG&gt; : field name for the file input. It’s required for backend mapping.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;buttonOnly&lt;/STRONG&gt; :true means it won’t show a separate input box, just the button.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;buttonText&lt;/STRONG&gt;: text label for the button.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;uploadUrl&lt;/STRONG&gt; :endpoint where the file is sent. In our case, it’s the CAP service URL.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;uploadOnChange&lt;/STRONG&gt; : triggers upload immediately when a file is selected. No extra click needed.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;useMultipart&lt;/STRONG&gt; : false tells the control to send just the file binary in the request body, not wrapped in a multipart form. CAP’s media handling works fine this way.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;uploadComplete&lt;/STRONG&gt; — event handler for when the upload finishes (success or error). Usually where you refresh the table.&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6: Controller Logic&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The controller handles two main things:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Setting up the upload request with the right headers.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2.Refreshing the table when the upload is done.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;onUploadChange: function (oEvent) {  
    var oFileUploader = oEvent.getSource();

    // Always clear any old headers before adding new ones
    oFileUploader.removeAllHeaderParameters();

    // OPTIONAL: Link the upload to a parent entity
    // if you're uploading a file for a specific order or project,
    // you can pass its ID as a header. Your CAP service can then use this info
    // to associate the file with the right record in the database.
    // Make sure the 'to_parentEntity_ID' field exists in your entity if you want to store it.
    // Example:
    // oFileUploader.addHeaderParameter(
    //     new sap.ui.unified.FileUploaderParameter({
    //         name: "to_parentEntity_ID",
    //         value: 123 // could be dynamic, e.g., selected table row ID
    //     })
    // );

       oFileUploader.addHeaderParameter(
        new sap.ui.unified.FileUploaderParameter({
            name: "fileName",
            value: oEvent.getParameter('files')[0].name
        })
    );

    oFileUploader.addHeaderParameter(
        new sap.ui.unified.FileUploaderParameter({
            name: "slug",
            value: oEvent.getSource().getValue(),
        })
    );

    // Ensure XHR is used for sending the file (needed for headers to work)
    oFileUploader.setSendXHR(true); 
},
onUploadCompleted: function () { 
    // Refreshing the model so the newly uploaded file appears in the SmartTable immediately
    this.getView().getModel().refresh(); 
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Step 7: Testing It Out&lt;/P&gt;&lt;P&gt;After setting everything up, run your app locally and try uploading a file. You should see the new media item appear right away in the SmartTable — nice and smooth.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_5-1755002178812.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299912iEF58690812EB2A7D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_5-1755002178812.png" alt="MaheshSirsat1708_5-1755002178812.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_6-1755002185746.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299913i75CCE2E74F2480B5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_6-1755002185746.png" alt="MaheshSirsat1708_6-1755002185746.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step &amp;nbsp;8 :Download Media&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;we use the file name shown as a clickable link (sap.m.Link). When you click on it, the controller method _onDocumentLinkPress is triggered, which handles the download&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_7-1755002209681.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299914iEE57D36E2DDB7B1B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_7-1755002209681.png" alt="MaheshSirsat1708_7-1755002209681.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This creates a temporary invisible anchor tag, sets the file URL and name, clicks it to start the download, and then cleans up.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;_onDocumentLinkPress: function (oEvent) {
    const sItem = oEvent.getSource().getBindingContext().getObject();
    var link = document.createElement('a');
    link.href = sItem.__metadata.media_src;   
    link.setAttribute('download', sItem.fileName);  
    document.body.appendChild(link);
    link.click();                             
    document.body.removeChild(link);
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Simple but effective — now you can upload files and grab them back with just a click.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_8-1755002296991.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299915i3F714DF8859E81C7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_8-1755002296991.png" alt="MaheshSirsat1708_8-1755002296991.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;With this setup, you can upload a file, see it instantly in the SmartTable, and download it again with a single click. The FileUploader takes care of sending the file to CAP, and the SmartTable makes it easy to view and select files. Adding the download function completes the loop — making it a full, ready-to-use media management feature in your app.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/media-upload-amp-download-in-sap-cap-with-sap-ui-unified-fileuploader-and/ba-p/14178652"/>
    <published>2025-08-15T06:54:26.720000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cap-with-local-app-previews-tips-for-smooth-development/ba-p/14182208</id>
    <title>CAP with Local App Previews – Tips for Smooth Development</title>
    <updated>2025-08-16T23:18:43.039000+02:00</updated>
    <author>
      <name>MioYasutake</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/789</uri>
    </author>
    <content>&lt;P&gt;UI5 has recently introduced Virtual Endpoints, eliminating the need for sandbox files and reducing maintenance effort in local previews. For details, please read the blog post below:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-local-app-previews-virtual-endpoints-for-seamless-development/ba-p/14155498" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-local-app-previews-virtual-endpoints-for-seamless-development/ba-p/14155498&lt;/A&gt;&lt;/P&gt;&lt;P&gt;I have tried virtual endpoints with CAP Node.js, and would like to share a few things I noticed.&lt;/P&gt;&lt;H2 id="toc-hId-1737804978"&gt;TypeScript as a prerequisite&lt;/H2&gt;&lt;P&gt;By default, you will not see the "Use virtual endpoints for local preview" option. This option becomes available once you enable TypeScript.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MioYasutake_1-1755378123535.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301676i9C15CBFE7B00C3BA/image-size/large?v=v2&amp;amp;px=999" role="button" title="MioYasutake_1-1755378123535.png" alt="MioYasutake_1-1755378123535.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1541291473"&gt;Select the #app-preview endpoint for testing the app inside Fiori Launchpad&lt;/H2&gt;&lt;P&gt;When you start the server with `cds watch`, you will see several options for opening the app. The &lt;STRONG&gt;#app-preview&lt;/STRONG&gt; option is optimal choice for testing the app inside the Fiori Launchpad (sandbox).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MioYasutake_2-1755378271155.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301677i97D3522689B30B7C/image-size/large?v=v2&amp;amp;px=999" role="button" title="MioYasutake_2-1755378271155.png" alt="MioYasutake_2-1755378271155.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1344777968"&gt;Reinstall dependencies after build&lt;/H2&gt;&lt;P&gt;After building the MTA, you will not see the virtual endpoints anymore. This is due to the `&lt;STRONG&gt;npm ci&lt;/STRONG&gt;` command executed during the build (I haven't dug deeper into the cause). To enable the virtual endpoints again, simply run `&lt;STRONG&gt;npm install&lt;/STRONG&gt;`.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MioYasutake_3-1755378833726.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301678i8AD1EF823485958D/image-size/large?v=v2&amp;amp;px=999" role="button" title="MioYasutake_3-1755378833726.png" alt="MioYasutake_3-1755378833726.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;That's it. I hope this post is useful.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cap-with-local-app-previews-tips-for-smooth-development/ba-p/14182208"/>
    <published>2025-08-16T23:18:43.039000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-use-latest-qunit-and-sinon-to-test-your-sapui5-applications/ba-p/14156476</id>
    <title>How to use latest QUnit and sinon to test your SAPUI5 applications</title>
    <updated>2025-08-19T10:57:43.601000+02:00</updated>
    <author>
      <name>ansgar_lichter</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/873904</uri>
    </author>
    <content>&lt;P&gt;Are you a SAPUI5 developer who loves writing unit tests but feels held back by the outdated versions of sinon and qunit bundled with the framework? You're not alone.&lt;/P&gt;&lt;P&gt;For convenience, the SAPUI5 framework ships with its own versions of these popular testing libraries, available directly from the UI5 CDN. The challenge, however, is that these bundled versions are outdated. The SAPUI5 CDN supplies &lt;FONT color="#FF0000"&gt;sinon v4 &lt;/FONT&gt;at latest, which is more than 7 years old, while version 21 is already available. As there are no plans to update the version available in the CDN&amp;nbsp;(see&amp;nbsp;&lt;A title="Upgrade sinon version to v9 · Issue #3204 · UI5/openui5" href="https://github.com/UI5/openui5/issues/3204" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/UI5/openui5/issues/3204&lt;/A&gt;), we developers have to integrate it by ourselves to benefit from &lt;FONT color="#FF0000"&gt;sinon's&lt;/FONT&gt; and &lt;FONT color="#FF0000"&gt;qunit's&lt;/FONT&gt; latest features. That is some cumbersome work, esp. if every project / developer needs to figure out the 'right' way to do it.&lt;/P&gt;&lt;P&gt;In this post, we'll walk you through a setup that allows you to integrate the latest versions of &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; and &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt; into your SAPUI5 project, unlocking its latest features, superior type-safety, and a much-improved developer experience. Let's get started!&lt;/P&gt;&lt;P&gt;There are 2 possibilities to approach this depending on your UI5 version (see&amp;nbsp;&lt;A title="feat: Use Test Starter · ui5-community/generator-ui5-ts-app" href="https://github.com/ui5-community/generator-ui5-ts-app/pull/42" target="_blank" rel="noopener nofollow noreferrer"&gt;feat: Use Test Starter · ui5-community/generator-ui5-ts-app):&lt;/A&gt;&lt;BR /&gt;1. UI5 version &amp;gt;= 1.124: using test starter setup&lt;BR /&gt;2. UI5 version &amp;lt; 1.124: using traditional test suite &amp;amp; test page setup&lt;/P&gt;&lt;P&gt;To guide you through the steps, we will use the &lt;FONT color="#FF0000"&gt;easy-ui5&lt;/FONT&gt; generator to generate a TypeScript application (I can strongly recommend this tool). You can install it via the following command (see also&amp;nbsp;&lt;A title="generator-easy-ui5 - npm" href="https://www.npmjs.com/package/generator-easy-ui5" target="_blank" rel="noopener nofollow noreferrer"&gt;generator-easy-ui5 - npm)&lt;/A&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm install -g yo generator-easy-ui5&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Additionally, we need to use the middleware &lt;FONT color="#FF0000"&gt;ui5-tooling-modules-middleware&lt;/FONT&gt; of the UI5 Tooling ecosystem. This middleware enables you to use NPM package names for AMD-like dependencies. It captures the requests to the path &lt;FONT color="#FF0000"&gt;/resources/&lt;/FONT&gt; and checks whether a &lt;FONT color="#FF0000"&gt;dependency&lt;/FONT&gt; or &lt;FONT color="#FF0000"&gt;devDependency&lt;/FONT&gt; is included with the identical name as the requested resource. If this is the case, it will serve this dependency from your installed &lt;FONT color="#FF0000"&gt;node_modules&lt;/FONT&gt; and return it as a AMD-like dependency. This enables you to easily utilise third-party packages in your UI5 applications.&lt;/P&gt;&lt;H1 id="toc-hId-1606072997"&gt;Using UI5 &amp;gt;= 1.124&lt;/H1&gt;&lt;P&gt;We create our new application via the following command:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;yo easy-ui5 ts-app&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;For the sample the namespace &lt;FONT color="#FF0000"&gt;com.testing.unit&lt;/FONT&gt; is used. Now, make sure to choose a version greater than or equals 1.124.0. Answer the remaining questions according to your preferences.&lt;/P&gt;&lt;P&gt;Afterwards, add &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt; and &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; to &lt;FONT color="#FF0000"&gt;devDependencies&lt;/FONT&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm install --save-dev sinon @types/sinon qunit @types/qunit&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If not already present, add also the latest version of&amp;nbsp;&lt;FONT color="#FF0000"&gt;ui5-tooling-modules-middleware&lt;/FONT&gt;&amp;nbsp; to the&amp;nbsp;&lt;FONT color="#FF0000"&gt;devDependencies&lt;/FONT&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm install ui5-tooling-modules --save-dev -rte&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;By using the flag &lt;FONT color="#FF0000"&gt;-rte&lt;/FONT&gt; or &lt;FONT color="#FF0000"&gt;--register-tooling-extension&lt;/FONT&gt; the module adds its configuration automatically to the default UI5 yaml files. If you want to add it to other specific files, you can mention them after the flag: &lt;FONT color="#FF0000"&gt;-rte ui5.yaml,ui5-workspace.yaml&lt;/FONT&gt;. Please make sure that the &lt;FONT color="#FF0000"&gt;ui5-coverage.yaml&lt;/FONT&gt; is configured as follows. This UI5 yaml file is used to execute your tests. You must add the middleware &lt;FONT color="#FF0000"&gt;ui5-tooling-modules-middleware&lt;/FONT&gt; to the server serving the application. Add this middleware to the section &lt;FONT color="#FF0000"&gt;server/customMiddleware&lt;/FONT&gt; as shown below. The only custom configuration option we use, is &lt;FONT color="#FF0000"&gt;debug: verbose&lt;/FONT&gt; to get a more detailed logging output in case of errors. Then, we can easily see whether a dependency was added and served or ignored. The transpiling of your TypeScript code must be executed after the middleware as the dependencies could potentially also contain TypeScript code.&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;...
server:
  customMiddleware:
	- name: ui5-tooling-modules-middleware
      afterMiddleware: compression
      configuration:
        debug: verbose
    - name: ui5-tooling-transpile-middleware
      afterMiddleware: ui5-tooling-modules-middleware
      configuration:
        targetBrowsers: "defaults and supports async-functions"
        debug: true
        transpileDependencies: true
        babelConfig:
          sourceMaps: true
          ignore:
            - "**/*.d.ts"
          presets:
            - - "@babel/preset-env"
              - targets: defaults
            - - transform-ui5
            - "@babel/preset-typescript"
          plugins:
            - istanbul&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now, you get a new test setup using the &lt;FONT color="#FF0000"&gt;test starter setup&lt;/FONT&gt;. Instead of the traditional test suite and test pages for unit and integration test setup, you get a &lt;FONT color="#FF0000"&gt;testsuite.qunit.ts&lt;/FONT&gt; with central configuration options and for the unit and integration tests a source file (&lt;FONT color="#FF0000"&gt;unitTests.qunit.ts&amp;nbsp;&lt;/FONT&gt;/ &lt;FONT color="#FF0000"&gt;opaTests.qunit.ts&lt;/FONT&gt;) where you just import your test cases. In the &lt;FONT color="#FF0000"&gt;testsuite.qunit.ts&lt;/FONT&gt; we can configure the used versions for &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt; and &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt;. By default, only the versions available in the CDN can be used. Luckily, you can add custom versions to the versions map and consume them via &lt;FONT color="#FF0000"&gt;ui5-tooling-modules-middleware&lt;/FONT&gt;. Therefore, you have to add the property versions to the &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt; and &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; object and insert your version of the libraries to be used.&lt;BR /&gt;Additionally, for &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt; you have to define the module itself and the path to the css file so that you get the tests page styled as you are used to. For &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt;, you have to define the &lt;FONT color="#FF0000"&gt;module&lt;/FONT&gt; and the &lt;FONT color="#FF0000"&gt;bridge&lt;/FONT&gt; which helps &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt; to communicate with &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt;. The value of these properties is the &lt;FONT color="#FF0000"&gt;path&lt;/FONT&gt; used to load the source files. They are automatically loaded from the &lt;FONT color="#FF0000"&gt;/resources/&lt;/FONT&gt; path. Therefore, this part must not be contained in the property value. The default &lt;FONT color="#FF0000"&gt;bridge&lt;/FONT&gt; from SAPUI5 core can be reused, even with the latest version of &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt;. Now, you just have to specify the version. This must be identical to the version number you just maintained in the property versions.&lt;/P&gt;&lt;P&gt;Then, the result shall look like this:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;export default {
	name: "QUnit test suite for the UI5 Application: com.testing.unit",
	defaults: {
		page: "ui5://test-resources/com/testing/unit/Test.qunit.html?testsuite={suite}&amp;amp;test={name}",
		qunit: {
			version: "2.24.1",
			versions: {
				"2.24.1": {
					module: "qunit",
					css: "qunit/qunit/qunit.css",
				},
			},
		},
		sinon: {
			version: "21.0.0",
			versions: {
				"21.0.0": {
					module: "sinon",
					bridge: "sap/ui/qunit/sinon-qunit-bridge",
				},
			},
		},
		ui5: {
			language: "EN",
			theme: "sap_horizon",
		},
		coverage: {
			only: "com/testing/unit/",
			never: "test-resources/com/testing/unit/",
		},
		loader: {
			paths: {
				"com/testing/unit": "../",
			},
			map: {
				"*": {
					qunit: null,
					sinon: null,
				},
			},
		},
	},
	tests: {
		"unit/unitTests": {
			title: "Unit tests for com.testing.unit",
		},
		"integration/opaTests": {
			title: "Integration tests for com.testing.unit",
		},
	},
};&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Additionally, you have to overwrite SAPUI5's module loader so that &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt; and &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; won't be loaded from the CDN. Otherwise, every import of &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; and &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt; would be redirected to &lt;FONT color="#FF0000"&gt;sap/ui/thirdparty/&amp;lt;sinon/qunit&amp;gt;&lt;/FONT&gt;. Therefore, you have to adapt the property&amp;nbsp;&lt;FONT color="#FF0000"&gt;defaults/loader/map/*&lt;/FONT&gt;. In there, set the value &lt;FONT color="#FF0000"&gt;null&lt;/FONT&gt; for &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt; and &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt;. Then, our custom mapping applies and the source files are requested from our own application. The middleware &lt;FONT color="#FF0000"&gt;ui5-tooling-modules-middleware&lt;/FONT&gt; will recognise that a local dependency is requested, package it as a SAPUI5 module and return it to the running application.&lt;/P&gt;&lt;P&gt;In short you have to do 3 things:&lt;BR /&gt;- Maintain the version to be used&lt;BR /&gt;- Add your custom version to the versions map&lt;BR /&gt;- Overwrite SAPUI5's default module loader to not load &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; and &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt; from the CDN&lt;/P&gt;&lt;P&gt;Now, you can continue with the section &lt;EM&gt;Verify your setup&lt;/EM&gt;.&lt;/P&gt;&lt;H1 id="toc-hId-1409559492"&gt;Using UI5 &amp;lt; 1.124&lt;/H1&gt;&lt;P&gt;If you are not able to use the latest version, you have to rely on the traditional suite and test page setup like we UI5 developers are used to. Nevertheless, the same as above is possible with this approach.&lt;/P&gt;&lt;P&gt;We create our new application via the following command:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;yo easy-ui5 ts-app&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;For the sample the namespace &lt;FONT color="#FF0000"&gt;com.testing.unit&lt;/FONT&gt; is used. Now make sure to choose a version lower than 1.124.0. Answer the remaining questions according to your preferences.&lt;/P&gt;&lt;P&gt;Afterwards, add &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt; and &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; to &lt;FONT color="#FF0000"&gt;devDependencies&lt;/FONT&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm install --save-dev sinon @types/sinon qunit @types/qunit&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If not already present, add also the latest version of &lt;FONT color="#FF0000"&gt;ui5-tooling-modules-middleware&lt;/FONT&gt; to the &lt;FONT color="#FF0000"&gt;devDependencies&lt;/FONT&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm install ui5-tooling-modules --save-dev -rte&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;By using the flag &lt;FONT color="#FF0000"&gt;-rte&lt;/FONT&gt; or &lt;FONT color="#FF0000"&gt;--register-tooling-extension&lt;/FONT&gt; the module adds its configuration automatically to the default UI5 yaml files. If you want to add it to other specific files, you can mention them after the flag: &lt;FONT color="#FF0000"&gt;-rte ui5.yaml,ui5-workspace.yaml&lt;/FONT&gt;. Please make sure that the &lt;FONT color="#FF0000"&gt;ui5-coverage.yaml&lt;/FONT&gt; is configured as described above:&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;...
server:
  customMiddleware:
	- name: ui5-tooling-modules-middleware
      afterMiddleware: compression
      configuration:
        debug: verbose
    - name: ui5-tooling-transpile-middleware
      afterMiddleware: ui5-tooling-modules-middleware
      configuration:
        targetBrowsers: "defaults and supports async-functions"
        debug: true
        transpileDependencies: true
        babelConfig:
          sourceMaps: true
          ignore:
            - "**/*.d.ts"
          presets:
            - - "@babel/preset-env"
              - targets: defaults
            - - transform-ui5
            - "@babel/preset-typescript"
          plugins:
            - istanbul&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now, please adapt your &lt;FONT color="#FF0000"&gt;test/unit/unitTests.qunit.html&lt;/FONT&gt; to overwrite SAP's default module loader and ensure that &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; and &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt; are loaded form the local resources.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Applicationportal - Unit Tests&amp;lt;/title&amp;gt;
    &amp;lt;meta charset="utf-8" /&amp;gt;

    &amp;lt;script
      id="sap-ui-bootstrap"
      src="/resources/sap-ui-core.js"
      data-sap-ui-resourceroots='{
		  "aa.foerdermittelportal.applicationportal.ui": "../../"
	  }'
      data-sap-ui-async="false"
    &amp;gt;&amp;lt;/script&amp;gt;

    &amp;lt;!-- Load sinon and qunit before stylesheet to ensure that they are loaded when test execution starts by requiring unitTests.qunit.js --&amp;gt;
    &amp;lt;script src="/resources/sinon.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src="/resources/qunit.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;!-- Overwrite default mapping, otherwise every import of sinon and qunit is redirected to sap/ui/thirdparty/&amp;lt;sinon/qunit&amp;gt; by ui5loader --&amp;gt;
    &amp;lt;script&amp;gt;
      sap.ui.loader.config({
        map: {
          "*": {
            qunit: null,
            sinon: null,
          },
        },
      });
    &amp;lt;/script&amp;gt;

    &amp;lt;link rel="stylesheet" type="text/css" href="/resources/qunit/qunit/qunit.css" /&amp;gt;

    &amp;lt;script src="unitTests.qunit.js"&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;div id="qunit"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div id="qunit-fixture"&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now, you can continue with the section &lt;EM&gt;Verify your setup&lt;/EM&gt;.&lt;/P&gt;&lt;H1 id="toc-hId-1213045987"&gt;Verify your setup&lt;/H1&gt;&lt;P&gt;Now, we will add a unit test to showcase that the latest version of &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; is used. Therefore, we first add a new method to the &lt;FONT color="#FF0000"&gt;Main.controller.ts&lt;/FONT&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import MessageBox from "sap/m/MessageBox";
import BaseController from "./BaseController";
import JSONModel from "sap/ui/model/json/JSONModel";

/**
 *  com.testing.unit.controller
 */
export default class Main extends BaseController {
	public sayHello(): void {
		MessageBox.show("Hello World!");
	}

	public getGreeting(): string {
		const model = this.getModel("greeting") as JSONModel;

		return model.getProperty("/greeting") as string;
	}
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;To test the new method, add the following test, to your &lt;FONT color="#FF0000"&gt;webapp/test/unit/controller/Main.qunit.ts&lt;/FONT&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import Main from "com/testing/unit/controller/Main.controller";
import JSONModel from "sap/ui/model/json/JSONModel";
import * as sinon from "sinon";

type TestContext = {
	controller: Main;
	stubbedJSONModel: sinon.SinonStubbedInstance&amp;lt;JSONModel&amp;gt;;
};

QUnit.module("Sample Main controller test", {
	beforeEach(this: TestContext) {
		this.stubbedJSONModel = sinon.createStubInstance(JSONModel);
		this.controller = new Main("test");
	},

	afterEach(this: TestContext) {
		sinon.restore();
	},
});

QUnit.test("sinon v21 is used", function (this: TestContext, assert) {
	const getModelStub = sinon.stub(this.controller, "getModel");
	getModelStub.withArgs("greeting").returns(this.stubbedJSONModel);

	this.stubbedJSONModel.getProperty.returns("Hello from sinon v21!");

	this.controller.getGreeting();

	assert.strictEqual(this.controller.getGreeting(), "Hello from sinon v21!");

	// -expect-error sinon fakeXMLHttpRequest is removed with sinon v20
	assert.strictEqual(undefined, sinon.fakeXMLHttpRequest);
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If you get an error regarding the import of &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt;, adapt your &lt;FONT color="#FF0000"&gt;tsconfig.json&lt;/FONT&gt; to allow &lt;FONT color="#FF0000"&gt;allowSyntheticDefaultImports&lt;/FONT&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;{
	compilerOptions: {
		...
		"allowSyntheticDefaultImports": true,
		...
	}
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In short, we did 2 things:&lt;BR /&gt;- Imported &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; to be able to write assertions,&lt;BR /&gt;- Added the tests which verifies that we are using the latest version of &lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; by ensuring that methods which are no longer available in v21 are &lt;FONT color="#FF0000"&gt;undefined&lt;/FONT&gt;.&lt;/P&gt;&lt;P&gt;Now you can start your application using the&amp;nbsp;&lt;FONT color="#FF0000"&gt;ui5-coverage.yaml&lt;/FONT&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm run start-coverage&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Open the test page in your browser and open also the network tab of your developer tools:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If you are using UI5 &amp;gt;= 1.124:&amp;nbsp;&lt;A title="Link to unit test page to execute the tests" href="http://localhost:8080/test/Test.qunit.html?testsuite=test-resources/com/testing/unit/testsuite.qunit&amp;amp;test=unit/unitTests" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080/test/Test.qunit.html?testsuite=test-resources/com/testing/unit/testsuite.qunit&amp;amp;test=unit/unitTests&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;If you are using UI5 &amp;lt; 1.124:&amp;nbsp;&lt;A title="Link to unit test page to execute the tests" href="http://localhost:8080/test/unit/unitTests.qunit.html" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080/test/unit/unitTests.qunit.html&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Once the tests are executed, you can verify the sources returned for&amp;nbsp;&lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; and &lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt;. You will see, that the configured versions are loaded and used:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-30 at 10.23.04.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293758iA5C42E06D950E79A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-30 at 10.23.04.png" alt="Screenshot 2025-07-30 at 10.23.04.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;And the same for&amp;nbsp;&lt;FONT color="#FF0000"&gt;qunit&lt;/FONT&gt;:&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-30 at 10.22.15.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293757iA76BA6929371C18D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-30 at 10.22.15.png" alt="Screenshot 2025-07-30 at 10.22.15.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;And also in your server's logs:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-30 at 10.24.25.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293759iC6BA31D16CF2CD3B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-30 at 10.24.25.png" alt="Screenshot 2025-07-30 at 10.24.25.png" /&gt;&lt;/span&gt;&lt;BR /&gt;The first warning regarding the package&amp;nbsp;&lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; can be ignored (see orange marked section in the logs).&amp;nbsp;&lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; is only used for our tests and therefore included as a &lt;FONT color="#FF0000"&gt;devDependency&lt;/FONT&gt;. Therefore, the warning will arise but in a deployed we won't need this dependency. This means we are fine with the dynamic inclusion of&amp;nbsp;&lt;FONT color="#FF0000"&gt;sinon&lt;/FONT&gt; into our bundle (see red marked section in the logs).&lt;/P&gt;&lt;H1 id="toc-hId-1016532482"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;By moving away from the default bundled libraries and integrating your own dependencies, you've now unlocked the full potential of modern testing in your SAPUI5 application. To make your journey as smooth as possible, the complete sample project is available on GitHub: &lt;A title="ui5-unit-testing-latest-qunit-sinon" href="https://github.com/SAP-samples/ui5-unit-testing-latest-qunit-sinon" target="_blank" rel="noopener nofollow noreferrer"&gt;ui5-unit-testing-latest-qunit-sinon&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;BR /&gt;Happy testing!&lt;BR /&gt;&lt;SPAN&gt;If you have any questions or found this guide helpful, feel free to leave a comment below. If you are interested in the setup of the coverage reporting for UI5 applications, we may cover this in a part 2 in the future.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-use-latest-qunit-and-sinon-to-test-your-sapui5-applications/ba-p/14156476"/>
    <published>2025-08-19T10:57:43.601000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/prevent-an-sap-fiori-sapui5-downtime-check-your-browser-strategy-today/ba-p/14192361</id>
    <title>Prevent an SAP Fiori / SAPUI5 Downtime — Check Your Browser Strategy Today!</title>
    <updated>2025-08-26T09:36:13.115000+02:00</updated>
    <author>
      <name>OliverGraeff</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4124</uri>
    </author>
    <content>&lt;P&gt;This blog post was prompted by a recent issue in SAP customer support for SAP Fiori apps. I want to share the background, hoping it helps prevent a similar situation in your environment.&lt;/P&gt;&lt;H1 id="toc-hId-1609646920"&gt;&lt;STRONG&gt;&lt;BR /&gt;SAP &lt;/STRONG&gt;&lt;STRONG&gt;Browser and Platform Support&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;SAP's &lt;SPAN&gt;&lt;A href="https://support.sap.com/pam" target="_blank" rel="noopener noreferrer"&gt;Product Availability Matrix (PAM)&lt;/A&gt;&lt;/SPAN&gt;&amp;nbsp;provides the single source of truth for SAP software releases, including platform availability on browsers and operating systems. Regarding SAPUI5, note that SAPUI5 is not a product of its own, so please check the PAM for the product you're using SAPUI5 with. For more information, see SAP Note&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/1716423" target="_blank" rel="noopener noreferrer"&gt;1716423&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;Browsers constantly evolve across devices to offer new capabilities and address newly detected security issues. Upgrades of browsers may introduce changes that are not backward compatible, affecting SAPUI5 and SAP software behavior. Browser upgrades may also require specific platform or operating system versions for all end users. Vendors do not provide (security) updates for browsers or platforms that are out of maintenance, which then are severe risk to productive environments.&amp;nbsp;Keep in mind that SAP has no control over browser upgrades, their capabilities, or maintenance duration.&lt;/P&gt;&lt;P&gt;In other words: In Web development, especially with browsers: &lt;STRONG&gt;"Never touch a running system" is *NOT* an option&lt;/STRONG&gt;.&lt;/P&gt;&lt;H1 id="toc-hId-1413133415"&gt;&lt;STRONG&gt;&lt;BR /&gt;Browsers for SAPUI5&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;SAPUI5 applications in productive SAP products require a minimum browser version to ensure full availability and security. This also lets SAPUI5 use current industry standards, such as &lt;SPAN&gt;&lt;A href="https://ui5.sap.com/#/topic/0cb44d7a147640a0890cefa5fd7c7f8e" target="_blank" rel="noopener noreferrer"&gt;ECMAScript&lt;/A&gt;&lt;/SPAN&gt;, to deliver a modern and intuitive experience for SAP Business Suite.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="293385_GettyImages-177504059_large_jpg.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304999iED2B76D7D454CE95/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="293385_GettyImages-177504059_large_jpg.jpg" alt="293385_GettyImages-177504059_large_jpg.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Based on my own experience in the SAPUI5 team, I can confirm missing this requirement is a real-life risk. My conversations with customer support colleagues confirm this: productive SAP customers experienced outages because end users worked with browsers that were out of maintenance. One example can be seen in SAP Note &lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/3639059" target="_blank" rel="noopener noreferrer"&gt;3639059 - Blank home screen in SAP Fiori Launchpad - SAP S/4HANA Cloud Public Edition 2508&lt;/A&gt;&lt;/SPAN&gt;, which prompted this blog post. Using an outdated browser, end users saw a blank screen; developers got an error "Promise.withResolvers is not a function" in the console. The resolution for such cases is to update to the latest browser version, which in some cases may even require a costly operating system upgrade for all business users.&lt;/P&gt;&lt;P&gt;Therefore, I recommend monitoring the &lt;SPAN&gt;&lt;A href="https://support.sap.com/pam" target="_blank" rel="noopener noreferrer"&gt;SAP Product Availability Matrix (PAM)&lt;/A&gt;&lt;/SPAN&gt; and specifically the &lt;SPAN&gt;&lt;A href="https://ui5.sap.com/#/topic/74b59efa0eef48988d3b716bd0ecc933" target="_blank" rel="noopener noreferrer"&gt;SAPUI5 Browser and Platform Support&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/prevent-an-sap-fiori-sapui5-downtime-check-your-browser-strategy-today/ba-p/14192361"/>
    <published>2025-08-26T09:36:13.115000+02:00</published>
  </entry>
</feed>
