<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAPUI5-blog-posts.xml</id>
  <title>SAP Community - SAPUI5</title>
  <updated>2025-08-02T17:01:42.983359+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAPUI5/pd-p/500983881501772639608291559920477" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAPUI5 blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/unsafe-eval-error-in-sap-build-work-zone-understanding-and-fixing-a-csp/ba-p/14123035</id>
    <title>Unsafe-eval error in SAP Build Work Zone: Understanding and fixing a CSP blockage</title>
    <updated>2025-06-10T07:00:00.028000+02:00</updated>
    <author>
      <name>valentincadart</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/786198</uri>
    </author>
    <content>&lt;P&gt;While developing a SAP Fiori application in SAP Business Application Studio (BAS), I embedded an external component within a custom SAPUI5 component. The application worked perfectly in the local development environment, but once deployed into SAP Build Work Zone (BWZ), it no longer loaded as expected.&lt;/P&gt;&lt;P&gt;The browser console revealed an error related to the Content Security Policy (CSP), specifically due to the indirect use of eval(). This blog post summarizes my learnings about CSP and how I resolved the issue.&lt;/P&gt;&lt;H2 id="toc-hId-1732291811"&gt;What is the Content Security Policy (CSP)?&lt;/H2&gt;&lt;P&gt;CSP is a web security standard defined by the W3C and enforced by web browsers. It allows developers to control which resources (scripts, images, styles, etc.) a browser is allowed to load and execute, helping to prevent Cross-Site Scripting (XSS) attacks and malicious script injections.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For example, the following directive&amp;nbsp;means that only scripts from the same origin as the application are permitted.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;Content-Security-Policy: script-src 'self'&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Other common directives include:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;style-src: Specifies allowed sources for stylesheets.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;img-src: Limits where images can be loaded from.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;connect-src: Defines allowed sources for fetching resources like APIs.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;default-src: Specifies a fallback for all resource types if not otherwise defined.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;frame-ancestors: Controls which sources can embed the page in an iframe.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;…&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;To learn more about CSP, refer to the official documentation on MDN: &lt;/SPAN&gt;&lt;A href="https://developer.mozilla.org/fr/docs/Web/HTTP/CSP](https://developer.mozilla.org/fr/docs/Web/HTTP/CSP)" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://developer.mozilla.org/fr/docs/Web/HTTP/CSP&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1535778306"&gt;Problem context&lt;/H2&gt;&lt;P&gt;The application was developed in SAP Business Application Studio and contained an external web component wrapped inside a custom SAPUI5 component.&lt;/P&gt;&lt;P&gt;Once deployed to SAP Build Work Zone, the interface no longer displayed at all. The browser console then showed the following error:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;Unsafe-eval error (CSP Compliant)
Uncaught (in promise) EvalError:
Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script
in the following Content Security Policy directive: "script-src * data: blob:".&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-1339264801"&gt;Error Meaning&lt;/H2&gt;&lt;P&gt;In CSP, dynamic functions like eval() or new Function() are blocked by default because they can introduce serious security risks. These functions allow JavaScript code to be generated and executed at runtime, which can be exploited to inject and run malicious scripts—commonly associated with XSS attacks.&lt;/P&gt;&lt;P&gt;To protect the application's security, dynamic code execution is blocked by default in the Content Security Policy (CSP). Allowing it would require the inclusion of the unsafe-eval directive in the CSP, but this weakens security and should be avoided in production environments.&lt;/P&gt;&lt;H2 id="toc-hId-1142751296"&gt;Root cause analysis&lt;/H2&gt;&lt;P&gt;In the external component I used, I was generating an HTML element returned as a string (this is where I messed up). This HTML was then dynamically injected into the component’s DOM. However, the external component was interpreting this string using new Function(), violating CSP rules.&lt;/P&gt;&lt;P&gt;This behavior went unnoticed locally in Business Application Studio because CSP policies are often disabled or applied more leniently in development environments. However, in SAP Build Work Zone, a strict CSP is enforced, blocking dynamic code evaluation like this.&lt;/P&gt;&lt;H2 id="toc-hId-946237791"&gt;Implemented solution&lt;/H2&gt;&lt;P&gt;By consulting the official documentation of the component, I found that I could provide a JavaScript function directly instead of passing a returned string containing HTML. This approach enables the component to use a safe rendering function, avoiding reliance on blocked mechanisms like eval() or new Function().&lt;/P&gt;&lt;P&gt;Here is an example of the new CSP-compliant code:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const generateDropdown = (aOptions) =&amp;gt; {
  // Create the select element
  const oSelectElement = document.createElement('select');
  oSelectElement.classList.add('myCustomSelectClass');

  // Loop through the options array and create option elements
  aOptions.forEach(oOption =&amp;gt; {
    const oOptionElement = document.createElement('option');
    oOptionElement.value = oOption.value;
    oOptionElement.textContent = oOption.label;

    // Append the option to the select
    oSelectElement.appendChild(oOptionElement); 
  });

  return oSelectElement;
};

// Example usage with an array of options
const options = [
  { value: '1', label: 'Option 1' },
  { value: '2', label: 'Option 2' },
  { value: '3', label: 'Option 3' }
];

// Generate the dropdown dynamically
generateDropdown(options);&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-749724286"&gt;Lessons learned&lt;/H2&gt;&lt;P&gt;An application that works correctly in BAS may encounter critical errors in BWZ if it does not comply with the CSP. It is essential to prioritize the use of real JavaScript functions over injecting HTML or JavaScript code as strings. Often, the documentation for external components provides alternative solutions that are CSP-compliant, and these should be carefully considered.&lt;/P&gt;&lt;H2 id="toc-hId-553210781"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;The Content Security Policy is an essential tool for securing web applications against XSS attacks and the execution of uncontrolled code. In environments like SAP Build Work Zone, CSP is strictly enforced, which can lead to unexpected errors.&lt;/P&gt;&lt;P&gt;By adapting our implementation to comply with CSP rules, we not only ensure the compatibility of our applications but also enhance their security. I hope this feedback will be useful to you.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/unsafe-eval-error-in-sap-build-work-zone-understanding-and-fixing-a-csp/ba-p/14123035"/>
    <published>2025-06-10T07:00:00.028000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/blog-series-on-my-cpi-camel-learning-journey-interlude2-apim-debugging/ba-p/14121949</id>
    <title>Blog series on my CPI + Camel learning journey - Interlude2 APIM debugging</title>
    <updated>2025-06-15T22:59:37.197000+02:00</updated>
    <author>
      <name>alex_myakinkii</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/194559</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1861323632"&gt;Motivation&lt;/H3&gt;&lt;P&gt;Well, as with MPL you have to start doing some real life debugging to figure out the tools you are provided with "have some space for improvement", to put it mildly.&lt;/P&gt;&lt;P&gt;And this is what happened to me when I had a weird case for one of my api proxies.&lt;/P&gt;&lt;H3 id="toc-hId-1664810127"&gt;A little bit about Apigee and debug session structure&lt;/H3&gt;&lt;P&gt;Not a secret that under the hood APIM has apigee platform (that google bought)&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So, it turns out it was not SAP to blame for this "debug session" logic, but still the app they made is something special I have to say..&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;What bothers us is this stuff &amp;nbsp;&lt;SPAN&gt;&lt;A href="https://cloud.google.com/apigee/docs/api-platform/debug/trace" target="_blank" rel="noopener nofollow noreferrer"&gt;https://cloud.google.com/apigee/docs/api-platform/debug/trace&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And particularly the structure of session/transactions&amp;nbsp;&lt;A href="https://cloud.google.com/apigee/docs/api-platform/debug/trace#download-structure" target="_blank" rel="noopener nofollow noreferrer"&gt;https://cloud.google.com/apigee/docs/api-platform/debug/trace#download-structure&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Without going into details (after all this blog does not aim to provide the full schema details) let's see what could be of our most interest here.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;First, the whole session is an array of entries (we will call it &lt;STRONG&gt;transactions&lt;/STRONG&gt; which are&lt;U&gt; api calls&lt;/U&gt;)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below we would see "&lt;STRONG&gt;point&lt;/STRONG&gt;" array - kinda &lt;U&gt;Steps&lt;/U&gt; of flow execution each having an array of "&lt;STRONG&gt;results&lt;/STRONG&gt;" in turn.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;[
    {
        "completed": true,
        "point": [
            {
                "id": "Paused|Resumed|StateChange|FlowInfo|Condition|Execution|Error",
                "results": [
                    {
                        "ActionResult": "DebugInfo|RequestMessage|ResponseMessage|ErrorMessage|VariableAccess"
                    }
                ]
            }
        ]
    }
]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;These results contain some more details (which we see in the standard app as lists/forms) of key-value pairs&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;What is different is just name of "aggregation" - path in json to those arrays (eg "properties/property" or "headers" or "accessList")&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "ActionResult": "DebugInfo",
    "properties": {
        "property": [ { "name": "&amp;lt;PROP_NAME&amp;gt;", "value": "&amp;lt;PROP_VALUE&amp;gt;" } ]
    },
    "timestamp": "04-06-25 13:28:52:904" // yes, not a proper iso8601 timestamp ;(
}

{
    "ActionResult": "RequestMessage",
    "content": "&amp;lt;REQUEST_BODY_IF_PRESENT&amp;gt;",
    "headers": [ { "name": "&amp;lt;HEADER_NAME&amp;gt;", "value": "&amp;lt;HEADER_VALUE&amp;gt;" } ],
    "uRI": "&amp;lt;URI&amp;gt;",
    "verb": "&amp;lt;VERB&amp;gt;"
}

{
    "ActionResult": "ResponseMessage",
    "content": "&amp;lt;RESPONSE_BODY_TRIMMED&amp;gt;.....",
    "headers": [ { "name": "&amp;lt;HEADER_NAME&amp;gt;", "value": "&amp;lt;HEADER_VALUE&amp;gt;" } ],
    "reasonPhrase": "&amp;lt;STATUS_PHRASE&amp;gt;",
    "statusCode": "&amp;lt;STATUS_CODE&amp;gt;"
}

{
    "ActionResult": "ErrorMessage",
    "content": "&amp;lt;APIM_ERR_BODY&amp;gt;",
    "headers": [ { "name": "&amp;lt;HEADER_NAME&amp;gt;", "value": "&amp;lt;HEADER_VALUE&amp;gt;" } ],
    "reasonPhrase": "&amp;lt;STATUS_PHRASE&amp;gt;",
    "statusCode": "&amp;lt;STATUS_CODE&amp;gt;"
}

{
    "ActionResult": "VariableAccess",
    "accessList": [
        {
            "Get": { "name": "&amp;lt;VAR&amp;gt;", "value": "&amp;lt;VALUE_IF_GOT&amp;gt;" }
        },
        {
            "Set": { "name": "&amp;lt;VAR&amp;gt;", "success": true, "value": "&amp;lt;VALUE&amp;gt;" }
        }
    ]
}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-1468296622"&gt;Api Proxy debug viewer app&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;But most important thing is that we DO HAVE Request and Response (and Error) Method, Url, Content and Status!!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;And so I decided to make a really simple frontend-only ui5 app based on Flexible Column Layout (which &amp;nbsp;is hidden behind the intent &lt;U&gt;#apim-dbg&lt;/U&gt; in capic launchpad)&lt;/P&gt;&lt;P&gt;For this I just had to figure out the structure of the session and then apply some transformations to display it nicely.&lt;/P&gt;&lt;P&gt;And while the original app tries to follow "visual approach" apigee had in their app (you could see &amp;nbsp;it following the link above) - using lots of pictograms/icons while doing its best to hide essential information from us like target endpoint http code/status or request/response body -&amp;nbsp;&lt;U&gt;I decided to display our stuff via lists and forms&lt;/U&gt;, cuz as a developer I LOVE TEXT (which can even be searchable).&lt;/P&gt;&lt;P&gt;This image from apigee documentation illustrates it well&amp;nbsp;&lt;A href="https://docs.apigee.com/api-platform/fundamentals/what-are-flows" target="_blank" rel="noopener nofollow noreferrer"&gt;https://docs.apigee.com/api-platform/fundamentals/what-are-flows&lt;/A&gt;&amp;nbsp;(not 100% percent sure I am right regarding mapping of stages, but it somewhat makes sense to me)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="0-apigee-flows-stages.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274243i7FF50C28C8616097/image-size/large?v=v2&amp;amp;px=999" role="button" title="0-apigee-flows-stages.png" alt="0-apigee-flows-stages.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Basically, the app displays our debugging session in the following way (kinda 5 levels):&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Master - &lt;STRONG&gt;1&amp;nbsp;Transactions&lt;/STRONG&gt; (api calls) as Items &lt;EM&gt;// with objectstatus stuff&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;Detail - &lt;U&gt;2&amp;nbsp;Stages&lt;/U&gt; (list grouping) + &lt;STRONG&gt;3&amp;nbsp;points&lt;/STRONG&gt; (steps) as Items /&lt;EM&gt;/ also with some color coding&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;Detail-Detail - &lt;U&gt;4&amp;nbsp;ActionResults&lt;/U&gt; (form container) + &lt;STRONG&gt;5&amp;nbsp;results&lt;/STRONG&gt; params &amp;nbsp;as form elements&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Some other things to point out here (at Detail screen):&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;EM&gt;StateChange&lt;/EM&gt;&lt;/STRONG&gt; typically has &lt;U&gt;RequestMessage|ResponseMessage|ErrorMessage&lt;/U&gt; ActionResult object appearing&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;SPAN&gt;It comes first in group and it is marked with &lt;STRONG&gt;blue&lt;/STRONG&gt; highlight (also from this guy I calculated groups for detail list)&lt;/SPAN&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;EM&gt;&lt;STRONG&gt;Error&lt;/STRONG&gt;&lt;/EM&gt; has some error information that doesn't help much but is a place in flow where error occured - marked &lt;STRONG&gt;red&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;&lt;STRONG&gt;Execution&lt;/STRONG&gt;&lt;/EM&gt; - is an interesting step, basically, this is where our policies run - it is marked &lt;STRONG&gt;amber&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;Properties of DebugInfo action here contain "&lt;U&gt;type&lt;/U&gt;" or "&lt;SPAN&gt;&lt;SPAN&gt;&lt;U&gt;stepDefinition-type&lt;/U&gt;" which is policy type (not 100% sure) and "&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;SPAN&gt;&lt;U&gt;stepDefinition-name&lt;/U&gt;" or "&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;stepDefinition-displayName&lt;/U&gt;" which is actual policy name as we created it.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;I use it as a name for step instead of just "Execution" (this is why you don't see it in UI)&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Here &amp;nbsp;are the screenshots of a simple debugging session that hopefully will immediately make sense to you&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="1-get-service-401-err.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274244iCF6F1BC73A25E119/image-size/medium?v=v2&amp;amp;px=400" role="button" title="1-get-service-401-err.png" alt="1-get-service-401-err.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2-get-service-401-res.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274245i2B2F7A2BE05BD9FE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="2-get-service-401-res.png" alt="2-get-service-401-res.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="3-get-service-200-analytics.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274246i9484D4C23CAE2E85/image-size/medium?v=v2&amp;amp;px=400" role="button" title="3-get-service-200-analytics.png" alt="3-get-service-200-analytics.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="4-get-metadata-200-body.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274247iBE452CBA1CCAB5D5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="4-get-metadata-200-body.png" alt="4-get-metadata-200-body.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="5-post-metadata-405-res.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274249i1E3206198EF5F14A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="5-post-metadata-405-res.png" alt="5-post-metadata-405-res.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="6-post-metadata-405-err.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274250i15C5692C833A992D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="6-post-metadata-405-err.png" alt="6-post-metadata-405-err.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;H3 id="toc-hId-1271783117"&gt;Some JS magic&lt;/H3&gt;&lt;P&gt;Ok, this might even look good (or at least better than the original), but how to get the data?&lt;/P&gt;&lt;P&gt;Well, it turns out, SAP did a great job exposing some global methods (and even &lt;U&gt;oapiproxyData&lt;/U&gt; object ) in their app (yes it seems to be a really, really old one), so we can just programmatically create us a session and then fetch data into clipboard.&lt;/P&gt;&lt;P&gt;And for that I used super old trick: javascript favourites snippets (even had to google they were called "&lt;A href="https://en.wikipedia.org/wiki/Bookmarklet" target="_self" rel="nofollow noopener noreferrer"&gt;bookmarklets&lt;/A&gt;")&lt;/P&gt;&lt;P&gt;So, to start session you might want to use something like this:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.apimgmt.commons.ajaxHandler({
  data: JSON.stringify({"name": oapiproxyData.name, "version": oapiproxyData.version, "session_id":"pwn3d"}),
  headers: {"Content-Type": "application/json", "Accept": 'application/json', "operation": "start"},
  url: APIMGMT.TRACE_WORKSPACE_ROOT,
  type: APIMGMT.HTTP_METHODS.POST,
  success: console.log, error: console.log
})&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;And to fetch data into your browser clipboard (and I was surprised I did not need a focusable element when using the bookmarkelt to write to it) you would do this:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.apimgmt.commons.ajaxHandler({
  data: JSON.stringify({"name": oapiproxyData.name, "version": oapiproxyData.version, "session_id":"pwn3d"}),
  headers: {"Content-Type": "application/json", "Accept": 'application/json', "operation": "get"},
  url: APIMGMT.TRACE_WORKSPACE_ROOT,
  type: APIMGMT.HTTP_METHODS.POST,
  success: function(data){ navigator.clipboard.writeText(JSON.stringify(data))}, error: console.log
})&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;&amp;nbsp;And I am not going to teach you how to add that stuff into bookmarks but wiki probably could.&lt;/EM&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1075269612"&gt;Demo&lt;/H3&gt;&lt;P&gt;In this demo we are going to reproduce the session from screenshots above.&lt;/P&gt;&lt;P&gt;For this purpose we use simplest api proxy possible - to anonymous Northwind service&amp;nbsp;&lt;A href="https://services.odata.org/V2/Northwind/Northwind.svc/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://services.odata.org/V2/Northwind/Northwind.svc/&lt;/A&gt;&amp;nbsp;and protect it with apikey, so&amp;nbsp;you can easily try it yourself in like 10 mins.&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FZm7ZUKugqBA%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DZm7ZUKugqBA&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FZm7ZUKugqBA%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="113" scrolling="no" title="сapic apim dbg demo" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA" target="" rel="nofollow noopener noreferrer"&gt;00:00&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; Intro and motivation&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=99s" target="" rel="nofollow noopener noreferrer"&gt;01:39&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; Northwind api proxy and debug with standard app (2 positive and 2 negative responses)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=225s" target="" rel="nofollow noopener noreferrer"&gt;03:45&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; Try interpreting the results&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=298s" target="" rel="nofollow noopener noreferrer"&gt;04:58&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; But actual session data json contains more data and that is what we cover in blog (kind of)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=366s" target="" rel="nofollow noopener noreferrer"&gt;06:06&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; A little bit about apigee stuff and json structure and corresponding app screens&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=514s" target="" rel="nofollow noopener noreferrer"&gt;08:34&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; How to obtain session data json (other than by copying from network requests)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=608s" target="" rel="nofollow noopener noreferrer"&gt;10:08&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; Repeat same api test/debug routine with bookmarklets magic&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=696s" target="" rel="nofollow noopener noreferrer"&gt;11:36&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; Fetch session json data to finally see the new app in action (and try to interpret data there)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=915s" target="" rel="nofollow noopener noreferrer"&gt;15:15&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;Confirm that &lt;U&gt;AnalyticsPublisher&lt;/U&gt; policy/step indeed contains response &lt;U&gt;message.status.code&lt;/U&gt;, &lt;U&gt;request.path&lt;/U&gt; and &lt;U&gt;request.verb&lt;/U&gt; as vars (but not body though)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=970s" target="" rel="nofollow noopener noreferrer"&gt;16:10&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; "&lt;EM&gt;And we do see that we do have body which is very nice&lt;/EM&gt;" (in proper place)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=1027s" target="" rel="nofollow noopener noreferrer"&gt;17:07&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; Final words about app screens and features and outro&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-878756107"&gt;P.S Disclaimer and feature requests/fixes&lt;/H3&gt;&lt;P&gt;This is the simplest and mot naive implementation of &amp;nbsp;this app made out offrustration, so if for some reason you might want to test it there can (or must) be scenarios it does not support (haven't tried using scripts, conditional flows etc).&lt;/P&gt;&lt;P&gt;Please feel free to comment here regarding errors/features you might need, but &lt;STRONG&gt;DON'T paste session info here&lt;/STRONG&gt; as it contains sensitive information about your apim instance.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/blog-series-on-my-cpi-camel-learning-journey-interlude2-apim-debugging/ba-p/14121949"/>
    <published>2025-06-15T22:59:37.197000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/automating-ui5-testing-how-to-thrive-with-wdi5/ba-p/14136239</id>
    <title>Automating UI5 testing: How to thrive with wdi5</title>
    <updated>2025-06-26T01:04:03.254000+02:00</updated>
    <author>
      <name>MikeDoyle</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13892</uri>
    </author>
    <content>&lt;P&gt;Recently I built an extension app which featured a dynamic checklist for users to complete. Questions appear based on answers already given, and there are a large number of different scenarios, each with a different question set. Some questions are unique to a particular scenario, but many others are shared across scenarios.&lt;/P&gt;&lt;P&gt;In order to maintain my sanity I decided to set up automated testing. My concern was that changes and fixes made for one scenario could cause issues with another scenario.&amp;nbsp; With automated testing I can test all of them every time I make changes.&lt;/P&gt;&lt;P&gt;As I wanted to test at the UI-level I was looking for &lt;A href="https://www.headspin.io/blog/differences-between-unit-testing-end-to-end-testing" target="_self" rel="nofollow noopener noreferrer"&gt;end-to-end&lt;/A&gt; testing, replicating a real user journey.&amp;nbsp; This is distinct from &lt;A href="https://www.headspin.io/blog/differences-between-unit-testing-end-to-end-testing" target="_self" rel="nofollow noopener noreferrer"&gt;unit tests&lt;/A&gt;, for example, which cover a simple 'unit' like a function.&amp;nbsp;&lt;/P&gt;&lt;P&gt;I decided that &lt;A href="https://ui5-community.github.io/wdi5/#/" target="_self" rel="nofollow noopener noreferrer"&gt;wdi5&lt;/A&gt; (pronounced vee-d-i-5) was a good fit for my requirements. It's a plugin for &lt;A href="https://webdriver.io/docs/why-webdriverio" target="_self" rel="nofollow noopener noreferrer"&gt;Webdriver.IO&lt;/A&gt;, a popular automation framework. Whereas Webdriver.IO is agnostic when it comes to UI technologies, wdi5 is optimised for use with SAPUI5 and OpenUI5.&amp;nbsp; It brings specific APIs which you can use to interact with your UI5 apps in your test scripts.&lt;/P&gt;&lt;P&gt;&lt;A href="https://ui5-community.github.io/wdi5/#/" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="wdi5.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278602iA3E883AA15ECFA87/image-size/large?v=v2&amp;amp;px=999" role="button" title="wdi5.JPG" alt="wdi5.JPG" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;I thought I should share some of the things I learnt during this project. I do so not as an expert on automated testing in general or wdi5 in particular (I'm not!), but rather as experienced UI5 developer looking to make more use of automated testing in my day to day work. The perspective of the novice is different to that of subject matter experts, and the latter might not anticipate the questions and problems that the former face.&lt;/P&gt;&lt;P&gt;If you too are new to wdi5 you might not know that:&lt;/P&gt;&lt;H3 id="toc-hId-1862389350"&gt;You can use wdi5 in SAP Business Application Studio (BAS)&lt;/H3&gt;&lt;P&gt;wdi5 tests run in-browser. The browser could be on your own machine or it could be virtual.&amp;nbsp; If you're a BAS user you can install the &lt;STRONG&gt;&lt;EM&gt;Headless Testing Framework&lt;/EM&gt; plugin&lt;/STRONG&gt; and then &lt;A href="https://ui5-community.github.io/wdi5/#/usage?id=using-bas-with-wdi5" target="_self" rel="nofollow noopener noreferrer"&gt;run your wdi5 tests from within BAS&lt;/A&gt;. The tests are running in headless Firefox. If you take this approach you need to take care that the Firefox version listed in your Webdriver.IO config file (wdio.conf.ts) matches the one that BAS is using.&amp;nbsp; Every now and then SAP will upgrade the Firefox version in the plugin, and you will get an error stating '&lt;SPAN&gt;Unable to find a matching set of capabilities&lt;/SPAN&gt;'. When this happens just check what the new Firefox version is ("firefox -v" at the CLI) then update your config accordingly. NB you can use any browser with wdi5, I just used Firefox because it's easy to use in BAS&lt;/P&gt;&lt;H3 id="toc-hId-1665875845"&gt;You might want to&amp;nbsp;&lt;EM&gt;bail&lt;/EM&gt;&lt;/H3&gt;&lt;P&gt;I want to know as soon as any of my tests fail. By setting the &lt;STRONG&gt;bail&lt;/STRONG&gt; property to true, execution will finish as soon as the first failure occurs.&amp;nbsp; You can set this in your config file (wdio.conf.ts).&lt;/P&gt;&lt;H3 id="toc-hId-1469362340"&gt;It's easy to debug your tests&lt;/H3&gt;&lt;P&gt;If you open the &lt;EM&gt;JavaScript Debug Terminal&lt;/EM&gt;, and run your tests from there, processing will pause at the breakpoints you add in your test files. If you are using BAS you can do this from the &lt;EM&gt;Command Palette&lt;/EM&gt;.&lt;/P&gt;&lt;H3 id="toc-hId-1272848835"&gt;You should probably put the kettle on&lt;/H3&gt;&lt;P&gt;My 35 tests take about an hour to run. This requires some planning, like starting them before you take your lunch break.&amp;nbsp; I did find that tweaking the tests can make a big difference.&amp;nbsp; Some wdi5 functions are faster than others.&amp;nbsp; For example, I found the &lt;EM&gt;getChildren&lt;/EM&gt; method was quite slow, especially when the controls weren't visible on screen (and therefore not in the DOM). It's also possible to run tests in parallel.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MikeDoyle_0-1750901216761.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278904iA570E3032269A236/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MikeDoyle_0-1750901216761.png" alt="MikeDoyle_0-1750901216761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1076335330"&gt;Everything is asynchronous&lt;/H3&gt;&lt;P&gt;In your tests the function calls are asynchronous, and you need to&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;await&lt;/EM&gt;&lt;/STRONG&gt; each one.&amp;nbsp; This is true even if the corresponding UI5 function is synchronous e.g &lt;EM&gt;getText().&lt;/EM&gt;&lt;/P&gt;&lt;H3 id="toc-hId-879821825"&gt;wdi5 &lt;span class="lia-unicode-emoji" title=":red_heart:"&gt;❤️&lt;/span&gt;&amp;nbsp;TypeScript&lt;/H3&gt;&lt;P&gt;You can write your tests in TypeScript (i.e. as .ts not .js files). See &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/why-the-typescript-sheriff-has-come-to-clean-up-your-javascript-part-1-of-3/ba-p/13550500" target="_self"&gt;here&lt;/A&gt; if you want to know why this is desirable.&lt;/P&gt;&lt;H3 id="toc-hId-683308320"&gt;You need to get scrolling&lt;/H3&gt;&lt;P&gt;Your tests can only interact with screen controls that are shown on screen.&amp;nbsp; You need to use scrolling functions like&amp;nbsp;&lt;EM&gt;scrollIntoView()&lt;/EM&gt; or &lt;EM&gt;browser.scroll()&lt;/EM&gt; to ensure that the control you need is visible.&lt;/P&gt;&lt;H3 id="toc-hId-486794815"&gt;It's easy to screenshot your errors&lt;/H3&gt;&lt;P&gt;When a test fails the root cause isn't always obvious.&amp;nbsp; Was there an error?&amp;nbsp; Was the control we tried to interact with even visible on screen?&amp;nbsp; I love that you can always capture a screenshot if there was an error, so you can see exactly what the screen looked like at that moment.&amp;nbsp; I did this by calling the &lt;EM&gt;browser.screenshot()&lt;/EM&gt; function in the &lt;EM&gt;afterTest&lt;/EM&gt; handler.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you are ready to write your first wdi5 tests, keep the points above in mind and check out these resources:&lt;/P&gt;&lt;H2 id="toc-hId-161198591"&gt;Resources&lt;/H2&gt;&lt;P&gt;wdi5 &lt;A href="https://github.com/ui5-community/wdi5" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub&lt;/A&gt;&amp;nbsp;&lt;A href="https://ui5-community.github.io/wdi5/#/" target="_self" rel="nofollow noopener noreferrer"&gt;Documentation&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/use-wdio-and-wdi5-for-testing-ui5-apps/ba-p/13515863" target="_self"&gt;Use WDIO and WDI5 for testing UI5 apps&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/state-of-testing-in-ui5-opa5-uiveri5-and-wdi5/ba-p/13469549" target="_self"&gt;state of testing in UI5: OPA5, UIVeri5 and wdi5&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/ui5-s-unified-test-tech-stack/ba-p/13581038" target="_self"&gt;UI5's unified test tech stack&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.youtube.com/watch?v=f-0ztSnb2-c" target="_self" rel="nofollow noopener noreferrer"&gt;Testing UI5 Apps with wdi5 - Zero to Hero to Continuous Integration&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/automating-ui5-testing-how-to-thrive-with-wdi5/ba-p/14136239"/>
    <published>2025-06-26T01:04:03.254000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/product-updates-for-sap-build-code-june-2025-edition/ba-p/14135599</id>
    <title>Product Updates for SAP Build Code – June 2025 Edition</title>
    <updated>2025-06-27T10:17:58.465000+02:00</updated>
    <author>
      <name>BirgitS</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/41902</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Dear SAP Community,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Greetings and welcome to the latest edition of our SAP Build Code release communications blog post! It’s June and we cross the halfway mark of the year. It’s the perfect time to introduce some exciting new features we've added over the past few months.&lt;/P&gt;&lt;P&gt;This update features a range of exciting new capabilities, such as the Joule-based SAP HANA Application Migration Assistant and the SAP HANA Cloud SQL generation via Joule with custom data models. In addition, we collected &lt;SPAN&gt;many informative blog posts delving into various aspects of SAP Build Code.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;To explore these enhancements in depth, check out the details of what's new!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Joule-Based SAP HANA Application Migration Assistant&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The &lt;SPAN&gt;&lt;A href="https://roadmaps.sap.com/board?PRODUCT=73555000100800004515&amp;amp;range=CURRENT-LAST#;INNO=09840EBB9A121EEFBA884D2ABF99CF3F" target="_blank" rel="noopener noreferrer"&gt;Q2-2025&lt;/A&gt;&lt;/SPAN&gt; release introduces the new Joule-based SAP HANA Application Migration Assistant, an extension now available in SAP Build Code.&lt;/P&gt;&lt;P&gt;This enhanced tool extends the capabilities of the existing database migration assistant by automating the conversion of service layer that includes XSJSLIB, XSODATA, and XSJS artifacts from &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/hana-cloud/sap-hana-cloud-migration-guide/manually-migrate-xs-classic-application-to-sap-cap-and-sap-hana-cloud" target="_blank" rel="noopener noreferrer"&gt;XS classic&lt;/A&gt;&lt;/SPAN&gt; or &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/hana-cloud/sap-hana-cloud-migration-guide/manually-migrate-xs-classic-application-to-sap-cap-and-sap-hana-cloud-a581b87f52d44d9d9e26b8005cd2ab68" target="_blank" rel="noopener noreferrer"&gt;XS advanced&lt;/A&gt;&lt;/SPAN&gt; into modern SAP Cloud Application Programming Model (CAP)-based services aligning with the &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/btp/btp-developers-guide/btp-developers-guide" target="_blank" rel="noopener noreferrer"&gt;SAP BTP Developer's guide&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;Using generative AI, it simplifies service layer migration when customers choose "XS Classic to CAP" or "XS Advanced to CAP" templates.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="BirgitS_0-1750939067462.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279395i96441CCD606B0F9F/image-size/large?v=v2&amp;amp;px=999" role="button" title="BirgitS_0-1750939067462.png" alt="BirgitS_0-1750939067462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;The SAP HANA Application Migration Assistant&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="BirgitS_1-1750939509388.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279402i4844CB6300446406/image-size/large?v=v2&amp;amp;px=999" role="button" title="BirgitS_1-1750939509388.png" alt="BirgitS_1-1750939509388.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Selecting to migrate the service layer&lt;/P&gt;&lt;P&gt;Together, these tools reduce manual effort, accelerate modernization, and help businesses adopt modular, cloud-native architectures empowering faster innovation and effective transformation.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP HANA Cloud SQL Generation via Joule with Custom Data Models&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/product-updates-for-sap-build-code-october-2024-edition/ba-p/13923399" target="_blank"&gt;SAP HANA Cloud SQL generation&lt;/A&gt;&lt;/SPAN&gt; feature, which was introduced in late 2024, has been updated to not only support generating standard SQL statements for public monitoring views, but also for &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/hana-cloud-database/sap-hana-cloud-sap-hana-database-developer-guide-for-cloud-foundry-multitarget-applications-sap-business-app-studio/using-custom-data-model-for-ai-powered-sql-generation" target="_blank" rel="noopener noreferrer"&gt;custom data models&lt;/A&gt;&lt;/SPAN&gt; from a customer SAP HANA Cloud instance. Since the feature requires sending database object metadata (i.e. SQL create statements) to a large language model (LLM) it must be enabled manually after verifying that sending the metadata is uncritical. To do so, the setting “SAP HANA Database Explorer: Use Object Definitions For SQL Generation” must be checked in the SAP Build Code settings.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="BirgitS_0-1750939629110.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279403i6344A090EED32835/image-size/large?v=v2&amp;amp;px=999" role="button" title="BirgitS_0-1750939629110.png" alt="BirgitS_0-1750939629110.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Selecting “SAP HANA Database Explorer: Use Object Definitions For SQL Generation”&lt;/P&gt;&lt;P&gt;Once the setting is enabled, the SQL statement generation feature in the SAP HANA Cloud SQL console in SAP Build Code will take the existing database objects into consideration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="BirgitS_1-1750939718199.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279404iBEF775E3083A976D/image-size/large?v=v2&amp;amp;px=999" role="button" title="BirgitS_1-1750939718199.png" alt="BirgitS_1-1750939718199.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;SQL statement generation&lt;/P&gt;&lt;P&gt;By default, only objects in the current schema are considered for the SQL generation. If additional schemas should be considered, this needs to be configured in the setting “SAP HANA Database Explorer: Schemas For SQL Generation”.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="BirgitS_2-1750939763497.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279405i43FFC5DE762E2CDE/image-size/large?v=v2&amp;amp;px=999" role="button" title="BirgitS_2-1750939763497.png" alt="BirgitS_2-1750939763497.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Providing a list of database schemas for AI-powered SQL generation&lt;/P&gt;&lt;P&gt;The database object metadata is stored inside the SAP Build Code dev space for a period of 7 days. After that period, the metadata information is automatically deleted and will be recreated on demand if it is needed again. The retention period can be configured via the setting “SAP HANA Database Explorer. Use Objects Definition For SQL Generation: Retention Time”.&lt;/P&gt;&lt;P&gt;During the SQL statement generation, the prompt along with suitable additional information from the database object metadata and from the SAP HANA Cloud documentation is sent to the LLM. With this information as the context the LLM can generate syntactically valid SQL statements that can be executed on SAP HANA Cloud. As with all AI-generated information users should check the statements carefully before executing them to avoid unintended side-effects.&lt;/P&gt;&lt;P&gt;With this improvement the SQL generation capabilities have become significantly more powerful and provide more value, especially for casual users. Of course, if required, the syntax can still be conveniently accessed via the syntax help panel in the SQL console for further information and fine-tuning.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The SAP Build Lobby now Supports the Creation of SAP HANA Cloud Intelligent Data Applications&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;From the &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/build/sap-build-core/using-lobby" target="_blank" rel="noopener noreferrer"&gt;SAP Build Lobby&lt;/A&gt;&lt;/SPAN&gt;, you can centrally &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/build/sap-build-core/create-new-project" target="_blank" rel="noopener noreferrer"&gt;create new projects&lt;/A&gt;&lt;/SPAN&gt; or access and manage your already existing projects. You can create new projects from scratch or use the "Clone from Git" or "Add from Dev Space" functionality to work with your existing projects. The creation via the SAP Build Lobby now also supports the creation of SAP HANA Native Applications.&lt;/P&gt;&lt;P&gt;To do so, select “Create”. Then choose “Application” as Objective and “Backend” as Category. You can now select “SAP HANA Cloud Intelligent Data Applications” as Type. Once your new SAP HANA Cloud Application project has been created you can open the project by selecting the corresponding link from the SAP Build Lobby.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="BirgitS_0-1750939958505.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279408i037A0DF731B73F9F/image-size/large?v=v2&amp;amp;px=999" role="button" title="BirgitS_0-1750939958505.png" alt="BirgitS_0-1750939958505.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Selecting to create a backend application of type “SAP HANA Cloud Intelligent Data Applications”&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Further readings &amp;amp; Events&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Discover What's New in Mobile Development Kit Client 25.6&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We're excited to announce the newest release of the mobile development kit (MDK), packed with powerful updates that will elevate your mobile development projects. Discover new functionalities, such as support for grouping in object table control and lock and wipe settings in the MDK Client, among many other improvements.&lt;/P&gt;&lt;P&gt;Dive into the details of these latest enhancements and see how they can benefit your projects by visiting Jitendra Kansal’s blog post: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-6/ba-p/14107264" target="_blank"&gt;What’s new in mobile development kit client 25.6&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAPUI5 is Leading the Way in Accessibility with WCAG 2.2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Accessibility is key to using SAP's business solutions. By integrating the latest standards, we make sure our solutions are inclusive and cater to the diverse needs of our global user base. Developers creating apps with SAP Build and SAPUI5 can now benefit from the latest Web Content Accessibility Guidelines (WCAG). For more information, please visit the following link: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sapui5-is-leading-the-way-in-accessibility-with-wcag-2-2/ba-p/14101596" target="_blank"&gt;SAPUI5 is Leading the Way in Accessibility with WCAG 2.2&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Simplify SAPUI5 Code Extensions with the SAP Build Extensibility Wizard&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP S/4HANA Cloud has introduced the new SAP Build Extensibility Wizard, a unified tool that consolidates multiple extension options for a streamlined experience. You can now launch the wizard directly from a running SAP Fiori app, simplifying the extension process significantly. The latest update to the SAP Build Extensibility Wizard also introduces the capability to create an SAPUI5 adaptation project as a User Interface Extension.&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;SPAN&gt;Read more about this innovation in &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/simplify-sapui5-code-extensions-with-the-sap-build-extensibility-wizard/ba-p/14087839" target="_blank"&gt;Oliver Graeff’s SAP community blog&lt;/A&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Announcement: Removal of the Belize Theme of SAP Fiori&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;If you are working with the Belize theme of SAP Fiori you should read the following to learn about it’s removal and how to handle&amp;nbsp;custom themes based on Belize:&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/announcement-removal-of-belize-theme-of-sap-fiori/ba-p/14061924" target="_blank"&gt;Announcement: Removal of Belize Theme of SAP Fiori&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;UI5 Linter Now Includes an Autofix Feature!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;UI5 Linter is your go-to tool for ensuring your SAPUI5 project adheres to best practices and replaces deprecated APIs. We’re thrilled to announce a significant enhancement in UI5 Linter v1.12.0: the initial version of an autofix feature! Now, you can automatically apply fixes to your code by simply using the&amp;nbsp;"--fix" argument.&lt;/P&gt;&lt;P&gt;Excited to see how the UI5 Linter autofix feature can streamline your development process? Give it a try! For more details, read the following blog post:&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/migrate-your-code-with-ui5-linter-autofix-has-landed/ba-p/14048470" target="_blank"&gt;Migrate Your Code with UI5 Linter: Autofix Has Landed&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Code Connect 2025&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;One week, one location, three great events at &lt;SPAN&gt;&lt;A href="https://code-connect.dev/" target="_blank" rel="noopener nofollow noreferrer"&gt;Code Connect 2025&lt;/A&gt;&lt;/SPAN&gt;: &lt;SPAN&gt;&lt;A href="https://openui5.org/ui5con/" target="_blank" rel="noopener nofollow noreferrer"&gt;UI5con&lt;/A&gt;&lt;/SPAN&gt;, &lt;SPAN&gt;&lt;A href="https://recap-conf.dev/" target="_blank" rel="noopener nofollow noreferrer"&gt;re&amp;gt;≡CAP&lt;/A&gt;&lt;/SPAN&gt;, and &lt;SPAN&gt;&lt;A href="https://hanatech.community/" target="_blank" rel="noopener nofollow noreferrer"&gt;HANA Tech Con&lt;/A&gt;&lt;/SPAN&gt;! Whether you are an experienced developer or new to SAP, join us in St. Leon-Rot, Germany, or online July 08-10 and connect, learn, &amp;amp; innovate.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For further information on new features, please check our roadmaps: &lt;SPAN&gt;&lt;A href="https://roadmaps.sap.com/board?PRODUCT=73555000100800004515&amp;amp;range=CURRENT-LAST" target="_blank" rel="noopener noreferrer"&gt;roadmap for SAP Build Code&lt;/A&gt;&lt;/SPAN&gt;, &lt;SPAN&gt;&lt;A href="https://roadmaps.sap.com/board?PRODUCT=73554900100800001361" target="_blank" rel="noopener noreferrer"&gt;SAPUI5 Road Map&lt;/A&gt;&lt;/SPAN&gt;. And have a look at &lt;SPAN&gt;&lt;A href="https://help.sap.com/whats-new/cf0cb2cb149647329b5d02aa96303f56?Component=Cloud%20Logging%3BCloud%20Transport%20Management%3BContinuous%20Integration%20%26%20Delivery%3BDocument%20Management%20Service%3BMobile%20Services%3BSAP%20Alert%20Notification%20Service%3BSAP%20BTP,%20Cloud%20Foundry%20Runtime%3BSAP%20Build%3BSAP%20Business%20Application%20Studio&amp;amp;locale=en-US&amp;amp;version=Cloud" target="_blank" rel="noopener noreferrer"&gt;What's New in SAP Build Code&lt;/A&gt;&lt;/SPAN&gt;, the &lt;SPAN&gt;&lt;A href="http://help.sap.com/disclaimer?site=https://help.sap.com/whats-new/67f60363b57f4ac0b23efd17fa192d60" target="_blank" rel="noopener noreferrer"&gt;What's New Viewer for SAPUI5&lt;/A&gt;&lt;/SPAN&gt; and the &lt;SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/releases/" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Cloud Application Programming Model Release Notes&lt;/A&gt;&lt;/SPAN&gt;&lt;STRONG&gt;. &lt;/STRONG&gt;&lt;STRONG&gt;If you want to stay up-to-date with news, learning resources, and product and strategy updates for SAP Build Code:&amp;nbsp;&lt;/STRONG&gt;follow our&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/c-khhcw49343/SAP%2520Build%2520Code/pd-p/73555000100800004372" target="_blank"&gt;tag&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;We look forward to seeing how you use these new capabilities to create innovative solutions and drive your projects forward. Stay tuned for more updates and happy coding! &lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/product-updates-for-sap-build-code-june-2025-edition/ba-p/14135599"/>
    <published>2025-06-27T10:17:58.465000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/code-connect-2025-ui5con-recap-hana-tech-con/ba-p/14138893</id>
    <title>Code Connect 2025: UI5con, reCAP, HANA Tech Con</title>
    <updated>2025-06-28T17:16:16.755000+02:00</updated>
    <author>
      <name>TheSebastian</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/142742</uri>
    </author>
    <content>&lt;P&gt;&lt;EM&gt;This blog post summarizes the most important information about Code Connect 2025. It will be updated with further information (e.g. Event App, links to recordings...).&lt;/EM&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1604289440"&gt;Code Connect 2025 – three days, three conferences, one streamlined journey&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="02df9cc3-e4e0-4196-be1b-bc640b4124dc.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280055iD9FEDB08296B9676/image-size/large?v=v2&amp;amp;px=999" role="button" title="02df9cc3-e4e0-4196-be1b-bc640b4124dc.png" alt="02df9cc3-e4e0-4196-be1b-bc640b4124dc.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Join us for the second annual&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Code Connect&lt;/STRONG&gt;&lt;SPAN&gt;, where we're bringing together the hottest tech events in one convenient location. Be ready to connect, collaborate, and code away with a bustling community of like-minded developers. Jump on the Code Connect train and elevate your conference experience!&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Find &lt;STRONG&gt;more information&lt;/STRONG&gt; here:&amp;nbsp;&lt;STRONG&gt;&lt;A href="https://code-connect.dev/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://code-connect.dev/&lt;/A&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Event App: &lt;A href="https://code-connect.cfapps.eu10.hana.ondemand.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;link&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="24.946466809421842%" height="94px"&gt;&lt;H2 id="toc-hId-1536858654"&gt;&lt;STRONG&gt;Code Jams &amp;amp; Warmup&lt;/STRONG&gt;&lt;/H2&gt;&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="94px"&gt;&lt;H2 id="toc-hId-1340345149"&gt;UI5con&lt;/H2&gt;&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="94px"&gt;&lt;H2 id="toc-hId-1143831644"&gt;reCAP&lt;/H2&gt;&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="94px"&gt;&lt;H2 id="toc-hId-947318139"&gt;&lt;SPAN&gt;HANA Tech Con&lt;/SPAN&gt;&lt;/H2&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="24.946466809421842%" height="60px"&gt;7th of July&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="60px"&gt;8th of July&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="60px"&gt;9th of July&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="60px"&gt;10th of July&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="24.946466809421842%" height="30px"&gt;&lt;A href="https://code-connect.dev" target="_blank" rel="noopener nofollow noreferrer"&gt;code-connect.dev&lt;/A&gt;&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="30px"&gt;&lt;A href="https://openui5.org/ui5con/" target="_blank" rel="noopener nofollow noreferrer"&gt;openui5.org/ui5con&lt;/A&gt;&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="30px"&gt;&lt;A href="https://recap-conf.dev/" target="_blank" rel="noopener nofollow noreferrer"&gt;recap-conf.dev&lt;/A&gt;&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="30px"&gt;&lt;A href="https://hanatech.community/" target="_blank" rel="noopener nofollow noreferrer"&gt;hanatech.community&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="24.946466809421842%" height="96px"&gt;See details in text below&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="96px"&gt;&lt;A href="https://openui5.org/ui5con/program.html" target="_blank" rel="noopener nofollow noreferrer"&gt;Agenda&lt;/A&gt;&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="96px"&gt;&lt;A href="https://recap-conf.dev/program.html" target="_blank" rel="noopener nofollow noreferrer"&gt;Agenda&lt;/A&gt;&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="96px"&gt;&lt;A href="https://hanatech.community/index.html#agenda" target="_blank" rel="noopener nofollow noreferrer"&gt;Agenda&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="24.946466809421842%" height="97px"&gt;Live Streams: n/a&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="97px"&gt;&lt;A href="https://youtube.com/live/0D0_M4RDiZY" target="_blank" rel="noopener nofollow noreferrer"&gt;Live Stream&lt;/A&gt; (Main Stage)&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="97px"&gt;&lt;P&gt;&lt;A href="https://broadcast.co.sap.com/go/reCAP" target="_blank" rel="noopener noreferrer"&gt;Live Stream&lt;/A&gt; (Main Stage)&lt;/P&gt;&lt;P&gt;&lt;A href="https://teams.microsoft.com/l/meetup-join/19%3ameeting_YjljYWQzNTEtNzkwNC00NDQ2LWE5MDAtYmEzODA3ZGNmZjIw%40thread.v2/0?context=%7b%22Tid%22%3a%2242f7676c-f455-423c-82f6-dc2d99791af7%22%2c%22Oid%22%3a%223d4d6882-45a1-41ce-9418-35a35744348f%22%7d" target="_blank" rel="noopener nofollow noreferrer"&gt;Live Stream&lt;/A&gt; (Side Track)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="97px"&gt;&lt;P&gt;&lt;A href="https://teams.microsoft.com/l/meetup-join/19%3ameeting_NDdhMDkzNTctZGQ1Yy00NWE2LWEwNmItMmZlZTkyMjBiZTVi%40thread.v2/0?context=%7b%22Tid%22%3a%2242f7676c-f455-423c-82f6-dc2d99791af7%22%2c%22Oid%22%3a%2225813fb4-fdb1-4d92-a6f7-6ff0c076d6cd%22%7d" target="_blank" rel="noopener nofollow noreferrer"&gt;Live Stream&lt;/A&gt; (Main Stage)&lt;/P&gt;&lt;P&gt;&lt;A href="https://teams.microsoft.com/l/meetup-join/19%3ameeting_OWI3ZjY5NDMtMzhkYy00MTExLTkwMDctYjUwZjU0MmE2OGI1%40thread.v2/0?context=%7b%22Tid%22%3a%2242f7676c-f455-423c-82f6-dc2d99791af7%22%2c%22Oid%22%3a%2225813fb4-fdb1-4d92-a6f7-6ff0c076d6cd%22%7d" target="_blank" rel="noopener nofollow noreferrer"&gt;Live Stream&lt;/A&gt; (Side Track)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="24.946466809421842%" height="30px"&gt;Recordings: n/a&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="30px"&gt;&lt;A href="https://www.youtube.com/watch?v=0D0_M4RDiZY" target="_blank" rel="noopener noreferrer nofollow"&gt;Recording Main Track (Yellow Room)&lt;/A&gt;&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="30px"&gt;&lt;P&gt;&lt;A href="https://broadcast.sap.com/replay/250709_recap" target="_blank" rel="noopener noreferrer"&gt;Recording Main Track (Yellow Room)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.youtube.com/playlist?list=PLJDFklpD_2cTjReIS8xQ2L0HnfjoxPUxd" target="_blank" rel="noopener noreferrer nofollow"&gt;Recording Side Track (Blue Room)&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="24.946466809421842%" height="30px"&gt;&lt;P&gt;&lt;A href="https://www.youtube.com/playlist?list=PLlImrFECjuvxf1qY48VGNcz5OiKnSbsxN" target="_blank" rel="noopener noreferrer nofollow"&gt;Recording Main Track (Yellow Room)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.youtube.com/playlist?list=PLlImrFECjuvx_mpoXic4DBKXqEERikQfm" target="_blank" rel="noopener noreferrer nofollow"&gt;Recording Side Track (Blue Room)&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-750804634"&gt;&lt;SPAN&gt;Code Jams &amp;amp; Warmup (July 7th)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Are you passionate about front-end development and have experience with OpenUI5 applications? Then don’t miss out on our OpenUI5-focused CodeJam! Join&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Peter Muessig&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Nico Schönteich&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;as they dive into&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;advanced OpenUI5 topics&lt;/STRONG&gt;. You’ll experience TypeScript, setting up a mono repository, OData V4 caveats, integrating 3rd-party packages, creating custom controls and libraries, and testing strategies.&lt;/P&gt;&lt;P&gt;Prefer back-end development? Our second CodeJam is tailored just for you! Led by&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;DJ Adams&lt;/STRONG&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Daniel Schlachter&lt;/STRONG&gt;, and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Johannes Vogt&lt;/STRONG&gt;, this session will explore the powerful SAP Application Programming Model (CAP). You’ll learn to integrate external services, work with CDS for declaring and relating entities, and leverage the SAP Cloud SDK for connectivity and destinations. In addition, we’ll also dive into new CAP features. Check the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://github.com/SAP-samples/cap-service-integration-codejam/blob/main/prerequisites.md" target="_blank" rel="noopener nofollow noreferrer"&gt;essential prerequisites&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;before arriving at the event location.&lt;/P&gt;&lt;H3 id="toc-hId-683373848"&gt;Join the Official Unofficial Pre-Event for Code Connect 2025!&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Right after the UI5- and CAP-CodeJams - starting from&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;05:00 PM on Monday, July 7&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Location: Restaurant ACE at Golf Club at St. Leon Rot, just a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://www.google.de/maps/place/Golf+Club+St.+Leon-Rot/@49.242921,8.6329268,700m/data=!3m1!1e3!4m24!1m17!4m16!1m6!1m2!1s0x4797bcf47501f8d1:0xbdab7aef9bbeb2ce!2sSAP+SE+(ROT03),+SAP-Allee+27,+68789+St.+Leon-Rot!2m2!1d8.6391431!2d49.240875!1m6!1m2!1s0x4797bc7d2a32f72f:0x80713f0e1283f250!2sGolf+Club+St.+Leon-Rot,+Opelstra%C3%9Fe+30,+68789+St.+Leon-Rot!2m2!1d8.6345968!2d49.2448961!3e2!5i1!3m5!1s0x4797bc7d2a32f72f:0x80713f0e1283f250!8m2!3d49.2448961!4d8.6345968!16s%2Fg%2F1pzpdjsgv?entry=ttu&amp;amp;g_ep=EgoyMDI1MDYyMy4yIKXMDSoASAFQAw%3D%3D" target="_blank" rel="noopener nofollow noreferrer"&gt;short walk from ROT03&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;See more details&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://www.linkedin.com/posts/volkerbuzek_codeconnect-activity-7335686300521390082-NXa-?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAADftxMYB3D7afHAICpU7JBKHXjPDj068mAU" target="_blank" rel="noopener nofollow noreferrer"&gt;here&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-357777624"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="UI5con Logo Vector.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280048iDFE73742EDBEBABF/image-size/small?v=v2&amp;amp;px=200" role="button" title="UI5con Logo Vector.png" alt="UI5con Logo Vector.png" /&gt;&lt;/span&gt;&amp;nbsp; (July 8th)&lt;/H2&gt;&lt;P&gt;Your journey to UI5 mastery begins at UI5con, the ultimate destination for developers of all levels.&lt;BR /&gt;&lt;BR /&gt;Get ready to navigate through a network of knowledge, discover the latest UI5 innovations, and make new friendships along the way. With a map full of expert sessions and interactive workshops, you'll connect with the UI5 community and its creators, exchanging valuable insights and experiences. Are ready to dive into the UI5 universe? UI5con is your ticket to ride!&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A title="Click to open UI5con conf website. Opens in a new window." href="https://openui5.org/ui5con/" target="_blank" rel="noopener noreferrer nofollow"&gt;Learn more about UI5con&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-161264119"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Optimized Version.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280051i7EFE2257AE0C1CF7/image-size/small?v=v2&amp;amp;px=200" role="button" title="Optimized Version.png" alt="Optimized Version.png" /&gt;&lt;/span&gt;&amp;nbsp;(July 9th)&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Join the awesome developer conference all about the SAP Cloud Application Programming Model (CAP). The time of the year where our lively communities, customers, and partners meet the CAP Product Team and exchange best practices, technical concepts, current projects, ideas for the future, and way more.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A title="Click to open reCAP conf website. Opens in a new window." href="https://recap-conf.dev/" target="_blank" rel="noopener noreferrer nofollow"&gt;Learn more about reCAP&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--35249386"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="htec-logo.svg" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280052iCA2492D650B11682/image-size/small?v=v2&amp;amp;px=200" role="button" title="htec-logo.svg" alt="htec-logo.svg" /&gt;&lt;/span&gt;&amp;nbsp;(July 10th)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Get Connected! If there is anything about SAP HANA you always wanted to know but never dared to ask - this is the place for you! Be part of the community of development experts, users and partners to exchange, ignite and delight.&lt;/P&gt;&lt;P&gt;Get Involved! If you want to speak up in your own session worthwhile to be shared with this great community. Looking forward to see you there soon!&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A title="Click to open HANA Tech Con website. Opens in a new window." href="https://hanatech.community/" target="_blank" rel="noopener noreferrer nofollow"&gt;Learn more about HANA Tech Con&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/code-connect-2025-ui5con-recap-hana-tech-con/ba-p/14138893"/>
    <published>2025-06-28T17:16:16.755000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/explore-sapui5-openui5-1-136-x-legacy-free/ba-p/14103271</id>
    <title>Explore SAPUI5/OpenUI5 1.136.x-legacy-free</title>
    <updated>2025-07-02T07:51:44.450000+02:00</updated>
    <author>
      <name>OliverGraeff</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4124</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1730446811"&gt;&lt;SPAN&gt;Executive summary&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;SAPUI5 / OpenUI5 1.136.x-legacy-free is available to test your code for future-proof best practices and to provide early feedback to the UI5 team.&lt;/P&gt;&lt;H2 id="toc-hId-1533933306"&gt;Why?&lt;/H2&gt;&lt;P&gt;The UI5 team introduces the &lt;STRONG&gt;SAPUI5 / OpenUI5 1.136.x-legacy-free&lt;/STRONG&gt; version to mark a significant milestone in our journey towards modernizing UI5 applications. It introduces a legacy-free UI5 framework with deprecated code removed, resulting in a leaner and more efficient codebase. Going forward, this step is crucial for improving performance, reducing maintenance efforts, and enabling faster innovation for both, the UI5 framework itself as well as applications built with SAPUI5 / OpenUI5.&lt;/P&gt;&lt;P&gt;The new SAPUI5 / OpenUI5 1.136.x-legacy-free version allows to evolve in these areas:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Best practices for app development:&lt;/STRONG&gt; A legacy-free UI5 framework paves the way for application developers to follow UI5 best practices. With streamlined, clear APIs, application developers learn and develop with SAPUI5 / OpenUI5 more easily. (Note that applying the UI5 best practices is not a new recommendation or a one-time effort for a specific version. SAP recommends following these best practices continuously to leverage innovations more easily.)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Startup performance:&lt;/STRONG&gt; With the modular core, new bootstrap and additional opportunities to improve performance we expect to see a better experience when launching and using apps.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Smooth UI performance:&lt;/STRONG&gt; The legacy-free UI5 framework mandates efficient code to achieve an improved UI performance more easily. This happens e.g. by using fine granular tasks and asynchronous JavaScript only.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Browser / Web standards:&lt;/STRONG&gt; A legacy-free UI5 framework makes it easier to stay up to date with the browser evolution and to follow latest Web standards. Content Security Policy (CSP) compliance ensures improved application security.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Micro frontends:&lt;/STRONG&gt; The removal of global variables simplifies the orchestration of micro frontends.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Speed of innovation:&lt;/STRONG&gt; It becomes easier for application developers to make progress and innovate with new features. Also, the UI5 framework itself can deliver requested capabilities more rapidly. At the same time, less resources are needed for maintenance, shifting the focus towards innovative, yet stable capabilities and a future-proof applications with upcoming SAPUI5 / OpenUI5 versions.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In this context we conducted a &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/adapt-your-app-to-sapui5-2-x-make-an-impact-by-joining-our-cei-project/ba-p/13722775" target="_self"&gt;Customer Engagement Initiative project&lt;/A&gt; in 2024 and received very positive feedback from a small group of customers/partners. We now want to give anyone the opportunity to&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;test how compliant your existing code is to UI5 best practices,&lt;/LI&gt;&lt;LI&gt;ensure that your new code is state-of-the-art and future-proof,&lt;/LI&gt;&lt;LI&gt;provide your concrete, technical feedback directly to the UI5 team.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1337419801"&gt;What?&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;The UI5 team provides cloud access to the SAPUI5 / OpenUI5 1.136 legacy-free version with deprecated code removed. This version is generally available under the terms of the &lt;A href="https://tools.hana.ondemand.com/developer-license-3_2.txt" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Developer License Agreement&lt;/A&gt;, not to be used in productive scenarios. Also see &lt;A href="https://me.sap.com/notes/3621332" target="_self" rel="noopener noreferrer"&gt;SAP Note&amp;nbsp;3621332&lt;/A&gt;.&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Explore SAPUI5 / OpenUI5 1.136 legacy-free: We encourage you to validate your app developments against this new version, while you continue using a usual &lt;A href="https://ui5.sap.com/versionoverview.html" target="_self" rel="noopener noreferrer"&gt;standard 1.x version&lt;/A&gt; for your productive environments.&lt;/LI&gt;&lt;LI&gt;Make an impact: Test your app and report issues with the 1.136 legacy-free version to the UI5 team.&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;STRONG&gt;The UI5 team strongly recommends developing apps without using legacy code&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;to ensure your app is modern and future-proof.&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="UI5 Demo Kit with UI5 Best Practices" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278806i3F27665E57F3C92F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-24 at 14.12.12.png" alt="UI5 Demo Kit with UI5 Best Practices" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;UI5 Demo Kit with UI5 Best Practices&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1140906296"&gt;How?&lt;/H2&gt;&lt;P&gt;Follow the steps detailed out in&amp;nbsp;&lt;A href="https://ui5.sap.com/1-legacy-free/#/topic/eb369e0308f54b45a2f93be7b9672f67" target="_self" rel="noopener noreferrer"&gt;Using the 1.x-legacy-free Versions&lt;/A&gt;:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Check your code against the &lt;A href="https://ui5.sap.com/#/topic/28fcd55b04654977b63dacbee0552712" target="_self" rel="noopener noreferrer"&gt;UI5 Best Practices&lt;/A&gt;, specifically the&amp;nbsp;&lt;A href="https://ui5.sap.com/1.136-legacy-free/#/topic/28fcd55b04654977b63dacbee0552712" target="_self" rel="noopener noreferrer"&gt;Best Practices for SAPUI5 1.136-legacy-free&lt;/A&gt;. The &lt;A href="https://github.com/SAP/ui5-linter" target="_self" rel="nofollow noopener noreferrer"&gt;UI5 linter&lt;/A&gt; helps analyzing &amp;amp; autofixing your code.&lt;/LI&gt;&lt;LI&gt;Bootstrap your app with UI5 1.136.x-legacy-free from the UI5 cloud CDN:&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://ui5.sap.com/1.136.3-legacy-free" target="_self" rel="noopener noreferrer"&gt;https://ui5.sap.com/1.136.3-legacy-free&lt;/A&gt;&amp;nbsp; &amp;nbsp;&lt;A href="https://sdk.openui5.org/1.136.3-legacy-free" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sdk.openui5.org/1.136.3-legacy-free&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://ui5.sap.com/1.136-legacy-free" target="_self" rel="noopener noreferrer"&gt;https://ui5.sap.com/1.136-legacy-free&lt;/A&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;A href="https://sdk.openui5.org/1.136-legacy-free" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sdk.openui5.org/1.136-legacy-free&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; (evergreen version)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://ui5.sap.com/1-legacy-free" target="_self" rel="noopener noreferrer"&gt;https://ui5.sap.com/1-legacy-free&lt;/A&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;A href="https://sdk.openui5.org/1-legacy-free" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sdk.openui5.org/1-legacy-free&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; (default version)&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Test run your app in the Preview (sandbox) of SAP Build Code / SAP Business Application Studio.&lt;/LI&gt;&lt;LI&gt;Report issues to the UI5 team:&lt;UL&gt;&lt;LI&gt;SAPUI5: Create an incident on the respective component within CA-UI5*, using “[LF]” as prefix of the subject. (Formally, this delivery has no SAP standard support / service level agreement, and your incidents might be set to priority Low. Still, the UI5 team will learn from your feedback and plan/implement required features.)&lt;/LI&gt;&lt;LI&gt;OpenUI5: Create an issue in &lt;A href="https://github.com/SAP/openui5" target="_blank" rel="nofollow noopener noreferrer"&gt;OpenUI5 GitHub&lt;/A&gt;, using “[LF]” as prefix of the title.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-944392791"&gt;Going forward&lt;/H2&gt;&lt;P&gt;The planned* release strategy follows quarterly new versions of legacy-free SAPUI5 / OpenUI5:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;1.136.x-legacy-free&lt;/LI&gt;&lt;LI&gt;1.139.x-legacy-free&lt;/LI&gt;&lt;LI&gt;…&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We plan to delete SAPUI5 / OpenUI5 legacy-free versions 4 weeks after a newer version (release or patch) is available or when SAP stops the option to explore SAPUI5/OpenUI5 1.136.x-legacy-free altogether.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; This initiative is part of SAPUI5's ongoing effort to innovate the SAPUI5 / OpenUI5 framework towards a modern and future-proof code base. At the current point in time, we do not have a timeline for next steps in this context. As soon as available, we'll publish in official UI5 channels such as the &lt;A href="https://roadmaps.sap.com/board?PRODUCT=73554900100800001361" target="_self" rel="noopener noreferrer"&gt;SAPUI5 Road Map&lt;/A&gt;, &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/the-ui5-team-reaches-out-to-you/ba-p/13532187" target="_self"&gt;UI5 mailing list and UI5 announcements&lt;/A&gt;, &lt;A href="https://www.linkedin.com/company/openui5/" target="_self" rel="nofollow noopener noreferrer"&gt;LinkedIn&lt;/A&gt;, and &lt;A href="https://bsky.app/profile/ui5.bsky.social" target="_self" rel="nofollow noopener noreferrer"&gt;Bluesky&lt;/A&gt;.&amp;nbsp;The SAPUI5 team appreciates your patience and looks forward to your feedback as we continue to evolve and improve SAPUI5 / OpenUI5 and applications built with it.&lt;/P&gt;&lt;P&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;* Legal Disclaimer: This information, or any related document and SAP's strategy and possible future developments, products and or platforms directions and functionality are all subject to change and may be changed by SAP at any time for any reason without notice.&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/explore-sapui5-openui5-1-136-x-legacy-free/ba-p/14103271"/>
    <published>2025-07-02T07:51:44.450000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/announcing-the-launch-of-sap-s-4hana-ux-roundtable-india-friendly-timezone/ba-p/14138553</id>
    <title>Announcing the launch of SAP S/4HANA UX Roundtable - India friendly timezone!</title>
    <updated>2025-07-02T10:29:42.051000+02:00</updated>
    <author>
      <name>sandeep_rs</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/387387</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;SAP S/4HANA UX Roundtable India&lt;/STRONG&gt; is a monthly call where developers from customers and partners can share tips and tricks with each other, ask the product team questions about how to use the software, or make suggestions about product improvements&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Who should attend?&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Developers&lt;/LI&gt;&lt;LI&gt;Enterprise architects&lt;/LI&gt;&lt;LI&gt;Technical consultants&lt;/LI&gt;&lt;LI&gt;Anyone interested in learning how to use SAP Fiori elements and SAP Fiori tools&lt;/LI&gt;&lt;LI&gt;Understanding SAP S/4HANA topics like My Home or Business AI more effectively&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;While the content of the call will vary each month, the general format follows this structure. In some cases, we may spend longer on the first demo, especially if a customer or partner is sharing their experience with the group. Occasionally we will have “office hours”, with no set agenda and all the time allocated to answer your questions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;General agenda – will vary per session&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="492"&gt;&lt;P&gt;&lt;STRONG&gt;Topic&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="132"&gt;&lt;P&gt;&lt;STRONG&gt;Time&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="492"&gt;&lt;P&gt;Introductions and announcements&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Product updates, new tutorials, new videos&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Any events where people can gather, learn more, meet developers&lt;/P&gt;&lt;/TD&gt;&lt;TD width="132"&gt;&lt;P&gt;5 minutes&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="492"&gt;&lt;P&gt;AI update&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; New AI-based features that we recently released&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Previews of AI stuff that we are working&amp;nbsp;on&lt;/P&gt;&lt;/TD&gt;&lt;TD width="132"&gt;&lt;P&gt;7 minutes&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="492"&gt;&lt;P&gt;Demo 1 (SAP, customer, or partner)&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Demo of functionality&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Discussion, Q&amp;amp;A from the community&lt;/P&gt;&lt;/TD&gt;&lt;TD width="132"&gt;&lt;P&gt;10-20 minutes&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="492"&gt;&lt;P&gt;Demo 2 (sometimes)&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Demo of functionality&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Discussion, Q&amp;amp;A from the community&lt;/P&gt;&lt;/TD&gt;&lt;TD width="132"&gt;&lt;P&gt;10-20 minutes&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="492"&gt;&lt;P&gt;Open discussion and questions from the community&lt;/P&gt;&lt;/TD&gt;&lt;TD width="132"&gt;&lt;P&gt;Remaining time&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Please note that this is a technical call. The product managers and technical experts from SAP will cover topics such as:&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Use the various floorplans in SAP Fiori elements&lt;/LI&gt;&lt;LI&gt;Accelerate development with SAP Fiori tools&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Improvements and brand new innovations in SAP S/4HANA UX&lt;/SPAN&gt;, including AI related features&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Phased rollout plans for each upcoming quarter&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Usage of right annotations and using it right&lt;/LI&gt;&lt;LI&gt;Tune performance of SAP Fiori elements apps&lt;/LI&gt;&lt;LI&gt;Troubleshoot SAP Fiori elements apps&lt;/LI&gt;&lt;LI&gt;Extend SAP Fiori elements apps using SAPUI5&lt;/LI&gt;&lt;LI&gt;Take advantage of the innovations in floorplans for OData V4&lt;/LI&gt;&lt;LI&gt;Use the Flexible Programming Model to extend applications&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;SAP S/4HANA UX Roundtable India&lt;/STRONG&gt;&lt;BR /&gt;If you are interested in joining this community, please &lt;A href="https://tinyurl.com/FioriUXIndia" target="_self" rel="nofollow noopener noreferrer"&gt;register here&lt;/A&gt; with your &lt;STRONG&gt;corporate email address&lt;/STRONG&gt;. We will send you soon an invitation to the meeting that happens every alternate month (&lt;STRONG&gt;1st Tuesday of every alternate month&lt;/STRONG&gt; at &lt;STRONG&gt;1:30 PM IST&lt;/STRONG&gt; i.e., 8 AM GMT). We will also add you to the workzone site, where you can review what we have presented before and propose discussion topics for future events.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Self-paced learning about SAP Fiori elements and SAP Fiori tools&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Developing and Extending SAP Fiori Elements Apps&lt;/STRONG&gt;&lt;BR /&gt;&lt;A href="https://learning.sap.com/courses/developing-and-extending-sap-fiori-elements-apps" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/courses/developing-and-extending-sap-fiori-elements-apps&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Developing an SAP Fiori Elements App Based on a CAP OData V4 Service&lt;/STRONG&gt;&lt;BR /&gt;&lt;A href="https://learning.sap.com/learning-journeys/developing-an-sap-fiori-elements-app-based-on-a-cap-odata-v4-service" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/developing-an-sap-fiori-elements-app-based-on-a-cap-odata...&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;On behalf of SAP S/4HANA UX product teams,&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp;Sandeep R S&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/announcing-the-launch-of-sap-s-4hana-ux-roundtable-india-friendly-timezone/ba-p/14138553"/>
    <published>2025-07-02T10:29:42.051000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/running-a-sapui5-app-from-a-previous-commit-without-affecting-remote/ba-p/14139276</id>
    <title>Running a SAPUI5 App from a Previous Commit Without Affecting Remote Repository</title>
    <updated>2025-07-02T11:18:21.259000+02:00</updated>
    <author>
      <name>Myvizhipriya_Thangaraj_2810</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1477011</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Ever needed to test or run your SAPUI5 application from an earlier commit without disturbing your current branch or affecting the remote repository? Whether it's for debugging, rollback testing, or feature validation, Git provides a safe and clean way to do this — using detached HEAD state and local branches. Here's a step-by-step guide to achieve just that.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-by-Step: Run an Older Version of Your SAPUI5 App Safely&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: View Commit History&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To identify which commit you want to revisit:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;git log --oneline&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;This will display recent commits with their short hash and message. Identify the one that's 4 commits back or use:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;git checkout HEAD~4&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Checkout the Older Commit&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;git checkout &amp;lt;commit-hash&amp;gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Or for 4 commits ago:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;git checkout HEAD~4&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;This moves you into a detached HEAD state, a safe mode where changes don’t impact your current branch.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Run Your SAPUI5 Application&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use your usual development server to run the app:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;ui5 serve&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;or&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;npm start&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Your app now runs exactly as it existed 4 commits ago.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: (Optional) Create a Local Test Branch&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;If you want to make edits or test features in that older state:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;git checkout -b temp-test-branch&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;This lets you commit and experiment locally — no impact on the remote repo.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5: Return to Your Latest Code&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Once done, simply switch back to your latest working branch:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;git checkout main&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why This Approach is Safe?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-&lt;/STRONG&gt; No changes are pushed to the remote.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-&lt;/STRONG&gt; The main branch and its history remain intact.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-&lt;/STRONG&gt; You can safely test, debug, or demo older versions of your app.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-&lt;/STRONG&gt; Great for testing fixes without branching off prematurely.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Testing previous versions of your SAPUI5 app doesn't need to be risky. By using Git's detached HEAD mode and optional local branches, you gain full control without affecting your project's main history or remote repo. It’s a clean, safe, and professional way to revisit and test the past.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thank you for taking the time to read this blog!&lt;/P&gt;&lt;P&gt;If you found this helpful, feel free to share your thoughts, feedback, or questions in the comments! Let's keep learning and growing together. Happy coding!&amp;nbsp;&lt;/P&gt;&lt;P&gt;Hello experts, please feel free to correct me if any information is inaccurate.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/running-a-sapui5-app-from-a-previous-commit-without-affecting-remote/ba-p/14139276"/>
    <published>2025-07-02T11:18:21.259000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/what-s-new-in-sap-build-q2-2025-release-highlights/ba-p/14142487</id>
    <title>What’s New in SAP Build Q2 2025 - Release Highlights</title>
    <updated>2025-07-02T11:57:39.124000+02:00</updated>
    <author>
      <name>EsmeeX</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/8621</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image (1).png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281700iDD395A526A3D6C22/image-size/large?v=v2&amp;amp;px=999" role="button" title="image (1).png" alt="image (1).png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Q2 brought a wave of innovations to SAP Build, including improvements across governance, integration and user experience. We also had several announcements in the spotlight at SAP Sapphire 2025 around new AI capabilities, unified pricing, and of course Joule Studio, which lets you create custom Joule skills and AI agents. In case you missed it, check out our roundup of &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/what-s-new-in-sap-build-highlights-from-sap-sapphire-2025/ba-p/14117598" target="_blank"&gt;&lt;SPAN&gt;key updates from SAP Sapphire&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and the announcement of &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/build-deploy-and-extend-ai-agents-with-joule-studio/ba-p/14105964" target="_blank"&gt;&lt;SPAN&gt;Joule Studio.&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you’re interested in shaping the future of SAP Build, we’ve introduced the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build Discovery Initiative 2025. &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;We’re looking for participants to meet with product teams, test early prototypes and bring your perspective to influence innovations from day one. Find more info &lt;A href="https://go4.events.sap.com/builddiscovery/en_us/home.html" target="_blank" rel="noopener noreferrer"&gt;here.&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now let’s dive into the Top 10 release innovations from Q2 2025!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Enhanced governance capabilities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;1. Empowering business users to maintain rules through an application&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In&lt;/SPAN&gt; &lt;SPAN&gt;Process Automation projects, business users are often the content owners of decisions and the logic behind business rules. While the SAP Build Lobby is a powerful environment, it can also be challenging to navigate and maintain the content of separate artifacts.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now IT and dev teams can give business users access to decisions via a purpose-built application, which is opened in SAP Build Work Zone. By empowering business users to access the logic this way, it helps mitigate risks of unauthorized changes, while also reducing delays around the change management process.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Manage decisions through a purpose-built application" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281701i49CABB05A01CE719/image-size/large?v=v2&amp;amp;px=999" role="button" title="decisions app.png" alt="Manage decisions through a purpose-built application" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Manage decisions through a purpose-built application&lt;/span&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;2. Improved governance with approval flows &amp;amp; multi-node project transport&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Strong governance frameworks are essential to ensure that your development activities remain secure and compliant. We have now released two features that support greater control and quality assurance:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Governance approval flows:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt; This enables administrators to control who is authorized to create or transport projects across tenants or sub-accounts. The approval process is fully customizable, allowing organizations to implement quality gates aligned with their specific governance and compliance requirements.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Multi-node project transport: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt;Approvers can now move SAP Build projects (apps, processes, automations) through a controlled &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Dev -&amp;gt; Test -&amp;gt; Production&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; landscape, with approval steps and quality checks at each stage. This ensures dev teams are moving projects securely and efficiently across tenants.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Governance approval flows" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281702i5F1E799A023D32B1/image-size/large?v=v2&amp;amp;px=999" role="button" title="governance approval flow.png" alt="Governance approval flows" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Governance approval flows&lt;/span&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Seamless interoperability and AI-powered integration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;3. Importing Business Process Model &amp;amp; Notation (BPMN) to generate process artifacts automatically&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Great news for our automation enthusiasts – it’s now possible to import BPMN processes from other tools into SAP Build! BPMN is the industry standard for defining workflows, decisions, and interactions across systems and teams.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now process designers can migrate existing BPMN processes from SAP Signavio, SAP NetWeaver, and IBM to generate process artifacts automatically. This long-awaited transportability helps to speed up the logic creation significantly, as well as acting as the bridge between SAP Build and other process modeling tools.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;To get started with BPMN process imports, see the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://help.sap.com/docs/build-process-automation/sap-build-process-automation/import-bpmn-process" target="_blank" rel="noopener noreferrer"&gt;&lt;I&gt;&lt;SPAN&gt;Help Portal&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;I&gt;&lt;SPAN&gt;.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Import BPMN processes into SAP Build" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281703i56338B81487288E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="bpmn.png" alt="Import BPMN processes into SAP Build" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Import BPMN processes into SAP Build&lt;/span&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/I&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;4. Improved SAP SuccessFactors integration with event discovery&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;From the SAP Build Lobby, developers can manage and connect SAP and non-SAP systems through the Unified Customer Landscape (UCL). Now in the UCL, developers can discover business events from SAP Cloud Application Event Hub, as well as SAP SuccessFactors solutions. This improved integration supports more relevant scenarios for HR processes, such as employee onboarding and compensation management.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;5. AI grounding in company-specific content for tailored responses&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This feature makes it possible to base Joule copilot and other embedded AI capabilities on up-to-date documents and user-created content in SAP Build Work Zone, advanced edition through the RAG (retrieval augmented generation) method. Rather than giving generic responses, it provides end users with more accurate and domain-specific content.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AI grounding within Joule copilot" style="width: 305px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281705i9C096FB0277DD031/image-dimensions/305x352?v=v2" width="305" height="352" role="button" title="ai grounding.png" alt="AI grounding within Joule copilot" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;AI grounding within Joule copilot&lt;/span&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/I&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;6. Joule-based assistant to easily migrate SAP HANA applications to CAP&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For simplified innovation across services, the SAP HANA Application Migration Assistant is a new extension available in SAP Build Code. This automates the conversion of XS classic applications into CAP-based services to accelerate modernization and help businesses adopt cloud-native architectures faster.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;For more info, see &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/product-updates-for-sap-build-code-june-2025-edition/ba-p/14135599?emcs_t=S2h8ZW1haWx8a3Vkb3N8TUNJU0gzOFBITEtUODh8MTQxMzU1OTl8S1VET1N8aEs" target="_blank"&gt;&lt;I&gt;&lt;SPAN&gt;Product Updates for SAP Build Code – June 2025 Edition&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Optimized user experience and accessibility across devices&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;7. SAP Mobile Start as the unified mobile access point for users&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Mobile Start addresses the challenge of fragmented access to enterprise applications and information for mobile users. The connection of SAP Mobile Start with SAP Build Work Zone, advanced edition ensures that users have consistent and secure access to business applications, tasks, and notifications, regardless of their location or device.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;STRONG&gt;8. P&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;review SAPUI5 updates for better UX management&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To address the need for more controlled testing, we’ve introduced the ability to preview upcoming SAPUI5 versions in non-productive environments within SAP Build Work Zone. Admins can activate the preview in a staging or dev tenant, validate compatibility and confirm everything works as expected before go-live – ensuring agile development, reduced downtime, and better user experience management.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;For more info, read the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-sapui5-version-preview-in-sap-build-work-zone/ba-p/14117996" target="_blank"&gt;&lt;I&gt;&lt;SPAN&gt;blog post.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAPUI5 version preview in SAP Build Work Zone" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281708i5F867BCED1C6A4B4/image-size/large?v=v2&amp;amp;px=999" role="button" title="ui5 preview.jpg" alt="SAPUI5 version preview in SAP Build Work Zone" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;SAPUI5 version preview in SAP Build Work Zone&lt;/span&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/I&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;9. Local Entry Point (LEP) to simplify access to standalone sites&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The new Local Entry Point (LEP) concept of SAP Build Work Zone simplifies how SaaS application providers integrate business solutions into SAP BTP. Providers can generate a standalone entry-point site in the consumer’s subaccount, eliminating the extra efforts and complexity required to set up their own instances.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;To get started, see the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://help.sap.com/docs/build-work-zone-standard-edition/sap-build-work-zone-standard-edition/creating-local-entry-point-business-solutions" target="_blank" rel="noopener noreferrer"&gt;&lt;I&gt;&lt;SPAN&gt;Help Portal.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;10. Updates to Mobile Development Kit for enhanced UI, APIs and more&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The latest release to SAP Mobile Development Kit (MDK) has brought several new updates for customers, including the newest version of Mobile Services Client in the Google Play Store and Apple App Store. Among the newest enhancements to UI is support for donut charts, providing a new way to visualize data and emphasize different aspects of datasets.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;See all the latest updates: &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-6/ba-p/14107264" target="_blank"&gt;&lt;I&gt;&lt;SPAN&gt;What’s New in Mobile Development Kit client 25.6&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Ready to see these in action?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="webinar.jpeg" style="width: 688px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281709iC3CC863AA57A53D1/image-dimensions/688x433?v=v2" width="688" height="433" role="button" title="webinar.jpeg" alt="webinar.jpeg" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To learn more and see live demos of the latest release highlights, join us for the next &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;What’s New in SAP Build Q2 2025 Webinar!&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Register for your preferred time slot:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;July 17&lt;/SPAN&gt;&lt;SPAN&gt;th&lt;/SPAN&gt;&lt;SPAN&gt;, 9:00AM – 10:00AM CEST: &lt;/SPAN&gt;&lt;A href="https://sap.to/60414diDL" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;&lt;SPAN&gt;https://sap.to/60414diDL&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;July 17&lt;/SPAN&gt;&lt;SPAN&gt;th&lt;/SPAN&gt;&lt;SPAN&gt;, 5:00PM – 6:00PM CEST: &lt;/SPAN&gt;&lt;A href="https://sap.to/60434diDF" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;&lt;SPAN&gt;https://sap.to/60434diDF&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/what-s-new-in-sap-build-q2-2025-release-highlights/ba-p/14142487"/>
    <published>2025-07-02T11:57:39.124000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/1-2-performance-tuning-in-sapui5/ba-p/14138735</id>
    <title>1/2 Performance Tuning in SAPUI5</title>
    <updated>2025-07-02T14:07:47.915000+02:00</updated>
    <author>
      <name>PetrBecka</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/152296</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1733371014"&gt;&lt;STRONG&gt;Why Performance Tuning Matters&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Performance optimization is a critical aspect of SAPUI5 application development. In enterprise apps, users often deal with large datasets and complex UIs – without tuning, these can make the app sluggish or unresponsive . For example, displaying thousands of table rows or multiple complex charts can significantly slow down both loading and runtime response. Such sluggish performance leads to user frustration and lower productivity . Therefore, it’s important to understand why performance can degrade (large data volume, heavy UI components) and proactively address it. The goal is to ensure a &lt;SPAN class=""&gt;&lt;STRONG&gt;fast, fluid user experience&lt;/STRONG&gt;&lt;/SPAN&gt;, even as the app’s data and UI complexity grow.&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Why do SAPUI5 apps slow down?&lt;/STRONG&gt;&lt;/SPAN&gt; Two common reasons are: &lt;SPAN class=""&gt;&lt;STRONG&gt;(a)&lt;/STRONG&gt;&lt;/SPAN&gt; Loading or rendering &lt;SPAN class=""&gt;&lt;STRONG&gt;too much data at once&lt;/STRONG&gt;&lt;/SPAN&gt;, and &lt;SPAN class=""&gt;&lt;STRONG&gt;(b)&lt;/STRONG&gt;&lt;/SPAN&gt; Using &lt;SPAN class=""&gt;&lt;STRONG&gt;very complex UI controls or deep component trees&lt;/STRONG&gt;&lt;/SPAN&gt;. If an app tries to fetch and show all available data in one go, or if the UI creates hundreds of DOM elements upfront, the browser can become overwhelmed. The result is long initial load times (sometimes tens of seconds) and laggy interactions. Users today expect snappy responses, so we must optimize SAPUI5 apps to meet those expectations. In the next sections, we’ll look at key areas to focus on for performance tuning.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1536857509"&gt;&lt;STRONG&gt;Key Areas for Performance Optimization&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;To improve SAPUI5 app performance, we should focus on several strategies in the app’s design and implementation. Below are the main areas to address:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Lazy Loading for Data-Heavy Controls&lt;/STRONG&gt;&lt;/SPAN&gt; – Load data or UI components on demand instead of all at once.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Optimizing OData Requests&lt;/STRONG&gt;&lt;/SPAN&gt; – Fetch only what you need (projection) and reduce round-trips (batching).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Caching Data and Models&lt;/STRONG&gt;&lt;/SPAN&gt; – Reuse already loaded data/models and leverage caching to avoid redundant fetches.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Minimizing DOM Operations&lt;/STRONG&gt;&lt;/SPAN&gt; – Use efficient data binding and avoid excessive direct DOM manipulation.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Performance Measurement &amp;amp; Tools&lt;/STRONG&gt;&lt;/SPAN&gt; – Continuously measure performance using available tools to catch bottlenecks.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Let’s dive into each area with practical tips and examples.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1469426723"&gt;&lt;STRONG&gt;1. Lazy Loading for Data-Heavy Controls&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;When dealing with large collections of data, &lt;SPAN class=""&gt;&lt;STRONG&gt;lazy loading&lt;/STRONG&gt;&lt;/SPAN&gt; is essential. Instead of rendering hundreds of items upfront, load only what’s needed and fetch more on demand. SAPUI5 provides a built-in mechanism for this via the “growing” feature on list and table controls. As the official documentation states: &lt;I&gt;“A growing list has a loading mechanism that requests data from the model in a lazy way,”&lt;/I&gt; fetching additional items only as necessary . This means the app initially loads a small set of records, and as the user scrolls or requests more, additional data is loaded, improving initial load performance.&lt;/P&gt;&lt;P class=""&gt;For example, you can enable lazy loading on a table by setting the &lt;SPAN class=""&gt;&lt;STRONG&gt;growing&lt;/STRONG&gt;&lt;/SPAN&gt; property:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- Example: A table that loads 20 items at a time, loading more as needed --&amp;gt;
&amp;lt;Table id="productTable" 
       growing="true" 
       growingThreshold="20" 
       growingScrollToLoad="true" 
       items="{/Products}"&amp;gt;
    &amp;lt;!-- Define columns ... --&amp;gt;
    &amp;lt;items&amp;gt;
        &amp;lt;ColumnListItem&amp;gt;
            &amp;lt;cells&amp;gt;
                &amp;lt;Text text="{Name}" /&amp;gt;
                &amp;lt;Text text="{Price}" /&amp;gt;
                &amp;lt;!-- other cells ... --&amp;gt;
            &amp;lt;/cells&amp;gt;
        &amp;lt;/ColumnListItem&amp;gt;
    &amp;lt;/items&amp;gt;
&amp;lt;/Table&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;In the snippet above, the table will initially display 20 items (the &lt;SPAN class=""&gt;growingThreshold&lt;/SPAN&gt;). As the user scrolls down (with &lt;SPAN class=""&gt;growingScrollToLoad="true"&lt;/SPAN&gt;, it will auto-load more; if set to false, a “More” button is shown instead). This lazy loading approach dramatically improves performance by not loading all data at once. It’s especially beneficial for very large datasets – the app remains responsive by only fetching data &lt;SPAN class=""&gt;&lt;STRONG&gt;“as and when necessary”&lt;/STRONG&gt;&lt;/SPAN&gt; instead of upfront.&lt;/P&gt;&lt;P class=""&gt;Lazy loading isn’t limited to tables; you can also &lt;SPAN class=""&gt;&lt;STRONG&gt;lazy load views, fragments or components&lt;/STRONG&gt;&lt;/SPAN&gt;. For instance, deferring the loading of a view until the user navigates to it can speed up the initial app load. In SAPUI5 routing, you might use asynchronous loading of views or the &lt;SPAN class=""&gt;ComponentContainer&lt;/SPAN&gt; with dynamic component loading on demand. The principle is: &lt;SPAN class=""&gt;&lt;STRONG&gt;load heavy content only when needed&lt;/STRONG&gt;&lt;/SPAN&gt;, keeping the initial payload light.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1272913218"&gt;&lt;STRONG&gt;2. Optimize OData Requests (Batching and Projection)&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Frequent or heavy OData calls can be a major performance bottleneck. Each network request has overhead, and pulling large payloads (with many fields or records) slows down the app. To optimize data requests in SAPUI5, consider these techniques:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Batch multiple OData calls into one&lt;/STRONG&gt;&lt;/SPAN&gt;: If your page needs data from several OData endpoints, use OData $batch to combine them into a single HTTP request. This reduces the number of round trips to the server. In OData V2 Model, you can enable batch mode by setting &lt;SPAN class=""&gt;useBatch:true&lt;/SPAN&gt; when creating the model. In fact, SAPUI5’s OData V4 model does this by default – it &lt;I&gt;“collects all requests made to the OData service in a batch request to reduce the number of roundtrips”&lt;/I&gt; . Fewer requests mean less latency and quicker overall data retrieval.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// Initializing an OData V2 model with batch mode enabled and other optimizations
var oModel = new sap.ui.model.odata.v2.ODataModel("/sap/opu/odata/sap/YourService/", {
    useBatch: true,               // combine multiple calls into one batch
    defaultCountMode: "None"      // disable $count calls if not needed for lists
});
this.getView().setModel(oModel);&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;In the code above, we enable batch mode. We also set &lt;SPAN class=""&gt;defaultCountMode:"None"&lt;/SPAN&gt;, which prevents automatic &lt;SPAN class=""&gt;$count&lt;/SPAN&gt; requests for list bindings (since counting all records can be expensive on the backend ). These settings help cut down unnecessary network calls.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Use projection ($select) to limit fields&lt;/STRONG&gt;&lt;/SPAN&gt;: Only request the data you actually need. By default, an OData entity request might return all properties, many of which your UI might not display. This wastes bandwidth and parsing time. Instead, specify a &lt;SPAN class=""&gt;$select&lt;/SPAN&gt; query option to retrieve only the necessary fields (projection). For example, if you only need product name and price, don’t fetch the entire product entity including large descriptions or images. As a best practice, &lt;I&gt;“ensure that you only retrieve the necessary data… utilize OData services efficiently by specifying $select and $expand options.”&lt;/I&gt; . This avoids &lt;SPAN class=""&gt;&lt;STRONG&gt;over-fetching&lt;/STRONG&gt;&lt;/SPAN&gt; data that will never be used on the client.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// Example: fetching only specific fields using $select
oModel.read("/Products", {
    urlParameters: { "$select": "Name,Price,Stock" },
    success: function(oData) { /* ... */ }
});&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;In the snippet above, the OData request will only return the Name, Price, and Stock properties of each Product, rather than the full product data structure. This leaner payload can significantly improve network performance.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Filter and paginate on the server&lt;/STRONG&gt;&lt;/SPAN&gt;: Similar to lazy loading on the UI, use OData query options like &lt;SPAN class=""&gt;$filter&lt;/SPAN&gt;, &lt;SPAN class=""&gt;$top&lt;/SPAN&gt;, and &lt;SPAN class=""&gt;$skip&lt;/SPAN&gt; to have the server send only a slice of data. For instance, if a user needs to see records for a specific category, using &lt;SPAN class=""&gt;$filter&lt;/SPAN&gt; on the OData request means the server does the heavy lifting and sends back only relevant records, reducing client work. Likewise, implement server-side paging: request the first N records with &lt;SPAN class=""&gt;$top&lt;/SPAN&gt;, and load more on demand (many SAPUI5 controls with growing support will automatically append &lt;SPAN class=""&gt;$skip/$top&lt;/SPAN&gt; parameters when bound to an OData list). By &lt;SPAN class=""&gt;&lt;STRONG&gt;filtering at the source and paging results&lt;/STRONG&gt;&lt;/SPAN&gt;, you minimize data transfer and client-side processing .&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Consider OData Model version&lt;/STRONG&gt;&lt;/SPAN&gt;: If possible, use the &lt;SPAN class=""&gt;&lt;STRONG&gt;OData V4 model&lt;/STRONG&gt;&lt;/SPAN&gt; for new developments, as it has performance improvements over V2 . OData V4 not only batches requests by default, but also handles $expand more efficiently and has a reduced memory footprint on the client. If you are using OData V2, apply the above suggestions and also ensure metadata loading is optimized (see caching below).&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;In summary, treat your OData calls with care: batch them, narrow them (select only needed fields), and avoid pulling huge datasets in one go. Your app will load faster with fewer and lighter requests.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1076399713"&gt;&lt;STRONG&gt;3. Caching Data and Models&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Caching is a powerful technique to enhance performance. By caching, we mean reusing data that has already been loaded, instead of fetching it again from the source. There are a few layers of caching relevant to SAPUI5 apps:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;OData Metadata Caching&lt;/STRONG&gt;&lt;/SPAN&gt;: When an SAPUI5 app starts, the OData service’s metadata (the &lt;SPAN class=""&gt;$metadata&lt;/SPAN&gt; XML) is usually fetched. This is needed to understand the data model but can be a bulky request. To speed up app launch, SAP Fiori Launchpad and SAPUI5 support metadata caching using cache tokens. &lt;I&gt;“OData metadata is cached on the web browser using cache tokens,”&lt;/I&gt; which append a &lt;SPAN class=""&gt;sap-context-token&lt;/SPAN&gt; to the metadata request URL . This ensures that after the first load, subsequent loads use the cached metadata, avoiding repeated downloads of the service definition. If you run your app standalone, you can still leverage this by enabling caching on the server or using the manifest property &lt;SPAN class=""&gt;"preload": true&lt;/SPAN&gt; for models to preload metadata at startup . Always check via browser dev tools that metadata requests are returning HTTP 304 (not modified) or using cache tokens appropriately.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Model and Data Caching&lt;/STRONG&gt;&lt;/SPAN&gt;: For data payloads, consider caching frequently used data in a client-side model. For example, if you have lookup data or reference lists that rarely change, load them once and store them in a JSONModel or in the ODataModel so it can be reused across views. SAPUI5’s models typically cache data by default (the ODataModel keeps an in-memory cache of fetched entities). You can further take advantage by &lt;SPAN class=""&gt;&lt;STRONG&gt;reusing model instances&lt;/STRONG&gt;&lt;/SPAN&gt;. Instead of creating a new ODataModel for each view or component, instantiate one ODataModel at application startup (in your Component.js) and share it across the app (set it on the core or component). This way, if View A already loaded some data, when View B requests the same data, it can be served from the model’s cache without another round trip. Also, when navigating back to a view, the data is still present.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Browser Caching for static resources&lt;/STRONG&gt;&lt;/SPAN&gt;: Ensure that app resources (JS/CSS files, theme assets, libraries) are served with caching headers so that the browser caches them. SAPUI5 framework resources are usually served with cache-busting hash parameters (to invalidate the cache on new versions). You as a developer should also bundle and minify your own resources (e.g., use the UI5 build tooling to create Component-preload.js). By bundling and minifying, you reduce the number of requests and size of files, which the browser can then cache for subsequent visits . This dramatically decreases load times on repeat visits because most files are loaded from cache rather than network.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;In practice, caching is often handled for you (browser caching static files, ODataModel caching data in memory, etc.), but you should be mindful to &lt;SPAN class=""&gt;&lt;STRONG&gt;enable&lt;/STRONG&gt;&lt;/SPAN&gt; it and &lt;SPAN class=""&gt;&lt;STRONG&gt;leverage&lt;/STRONG&gt;&lt;/SPAN&gt; it. For example, don’t unnecessarily reload data that you already have. If you know a particular dataset changes rarely, you might even cache it in &lt;SPAN class=""&gt;window.localStorage&lt;/SPAN&gt; for persistence. By utilizing both client-side and server-side caching, you can &lt;SPAN class=""&gt;&lt;STRONG&gt;decrease load times for repeat visits&lt;/STRONG&gt;&lt;/SPAN&gt; significantly .&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-879886208"&gt;&lt;STRONG&gt;4. Minimize DOM Operations with Efficient Data Binding&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Manipulating the DOM (Document Object Model) is one of the most expensive operations in a web app. Each time you add, remove, or change a UI element, the browser may re-compute layouts and paint updates, which can be slow if done excessively. In SAPUI5, you should let the framework’s data binding mechanism handle as much of the UI update work as possible, and avoid direct DOM manipulation or heavy re-rendering in your code.&lt;/P&gt;&lt;P class=""&gt;Here are some best practices to reduce DOM overhead:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Use Aggregation Binding vs. Manual DOM Updates&lt;/STRONG&gt;&lt;/SPAN&gt;: When displaying lists or tables of data, use &lt;SPAN class=""&gt;&lt;STRONG&gt;aggregation binding&lt;/STRONG&gt;&lt;/SPAN&gt; (&lt;SPAN class=""&gt;bindAggregation&lt;/SPAN&gt;) to let SAPUI5 create and manage list items for you. This is far more efficient than manually creating controls in a loop and inserting them into a container. For example, rather than writing a loop to append &lt;SPAN class=""&gt;ColumnListItem&lt;/SPAN&gt; controls to a table, define the binding in the XML view (as shown in the earlier snippet) or via &lt;SPAN class=""&gt;oTable.bindItems(...)&lt;/SPAN&gt; in JS. The framework will template the items and only render what’s needed. Using &lt;SPAN class=""&gt;bindAggregation&lt;/SPAN&gt; for lists ensures that UI5 can reuse templates and handle diffing, reducing the amount of DOM manipulation. In contrast, &lt;SPAN class=""&gt;bindProperty&lt;/SPAN&gt; is used for individual property binding on an existing control (e.g., binding a text field’s value). As a rule of thumb: &lt;SPAN class=""&gt;&lt;STRONG&gt;use bindProperty for simple, singular values, but use bindAggregation for collections&lt;/STRONG&gt;&lt;/SPAN&gt;. This way, you avoid manually touching the DOM for each data entry – the framework does it in bulk efficiently.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Batch UI updates&lt;/STRONG&gt;&lt;/SPAN&gt;: If you need to make multiple changes to the UI, try to batch them in one go rather than many small updates. For instance, if you have to hide or show multiple controls, it’s better to wrap them in a single container and hide/show the container, instead of toggling each control individually. Or use a model property to bind the &lt;SPAN class=""&gt;visible&lt;/SPAN&gt; property of several controls and change that one property – the framework will update all the UI states in one logical re-render. Excessive incremental DOM updates can thrash the browser’s rendering engine. Minimizing such changes leads to smoother performance .&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Avoid heavy computations in bindings&lt;/STRONG&gt;&lt;/SPAN&gt;: Data binding is powerful, but don’t abuse it by putting expensive calculations in formatter functions or property bindings that trigger frequently. Keep formatter logic lightweight. If a computation is heavy, consider pre-calculating it in the model data instead of in a formatter that runs on every digest cycle.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;One-Time vs. Two-Way Binding&lt;/STRONG&gt;&lt;/SPAN&gt;: If you have content that does not change after initialization (static text, labels, etc.), use one-time binding (&lt;SPAN class=""&gt;{= ... , mode:'OneTime'}&lt;/SPAN&gt; or in XML &lt;SPAN class=""&gt;{path: '...', mode: 'OneTime'}&lt;/SPAN&gt;). This way, the framework will not keep observing that property for changes – it binds once and is done, reducing runtime overhead . One-time binding is great for things like form labels or initial view title that won’t update. Similarly, if two-way binding is not needed, prefer one-way binding (the default) which is less overhead than two-way (which has to propagate changes back to the model).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Keep the DOM lean&lt;/STRONG&gt;&lt;/SPAN&gt;: Try to avoid creating an excessively deep or large DOM structure. For example, in list items, using multiple nested Layouts (Horizontal/Vertical Layouts) and Containers can blow up the number of DOM nodes for each item. Multiply that by 100 items and it can degrade performance. Favor simpler structures or use CSS for spacing instead of extra markup. The SAPUI5 guidelines suggest keeping views “short and simple” – meaning a shallower control hierarchy where possible, especially in repeated elements.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;In summary, every extra element or reflow counts. &lt;SPAN class=""&gt;&lt;STRONG&gt;Excessive manipulation of the DOM can slow down your UI5 app&lt;/STRONG&gt;&lt;/SPAN&gt; , so lean on data binding to handle UI updates and avoid direct DOM hacking. By using the right binding strategies (aggregation vs property binding, one-time where applicable) and keeping the UI structure efficient, you minimize the work the browser has to do.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-554289984"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Optimizing SAPUI5 performance requires a deliberate approach—lazy load data/UI, optimize OData requests, leverage caching, and minimize DOM manipulation. By applying these practices proactively, you deliver SAPUI5 applications that scale efficiently, meeting user expectations and ensuring smooth performance.&lt;/P&gt;&lt;P class=""&gt;Stay tuned for &lt;SPAN class=""&gt;&lt;STRONG&gt;Part 2&lt;/STRONG&gt;&lt;/SPAN&gt;, where we’ll dive deep into performance measurement and quality assurance.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/1-2-performance-tuning-in-sapui5/ba-p/14138735"/>
    <published>2025-07-02T14:07:47.915000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-fiori-development-newsletter-july-2025-issue-35/ba-p/14139032</id>
    <title>SAP Fiori development newsletter July 2025 (issue #35)</title>
    <updated>2025-07-08T16:50:00.022000+02:00</updated>
    <author>
      <name>PeterSpielvogel</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/543</uri>
    </author>
    <content>&lt;P&gt;Summer is here, bringing hot weather across the U.S. and around the world. SAP is also turning up the temperature with hot new AI-powered innovations, many of which were introduced at Sapphire (see article below). Even more new stuff is planned for TechEd and Devtoberfest in the fall.&lt;/P&gt;&lt;P&gt;For ongoing updates, I encourage you to join our monthly SAP Fiori development roundtable. You can meet online with&amp;nbsp;fellow developers and the SAP engineers who build our professional development tools.&amp;nbsp;&lt;A href="https://docs.google.com/forms/d/1ZqIX3zzGBOOIqehmlIRz_HhpQEhqunkLSzN1gnaOwP8/edit" target="_blank" rel="noopener nofollow noreferrer"&gt;Register online&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;or email me for an invitation.&amp;nbsp;Our next meeting is Wednesday, July 9, 2025.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you prefer to receive this in your inbox, please&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/cmp/nl/sap-fiori-development-newsletter/index.html" target="_blank" rel="noopener noreferrer"&gt;subscribe to the SAP Fiori development newsletter.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP_Fiori_Dev_Newsletter_35.png" style="width: 644px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279898i3E02ED80503114EF/image-size/large?v=v2&amp;amp;px=999" role="button" title="SAP_Fiori_Dev_Newsletter_35.png" alt="SAP_Fiori_Dev_Newsletter_35.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1733394075"&gt;&lt;STRONG&gt;Development News&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Sapphire had great innovations, if you are on public cloud&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;There were lots of announcements about new innovations for both developers and business users. The question for many customers is when their systems will be current enough to consume them. Read about the two parallel universes – one filled with AI in the cloud and the other grounded in legacy code.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/parallel-universes-the-dual-nature-of-ux-and-ai-among-sap-customers-at/ba-p/14113975" target="_blank"&gt;https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/parallel-universes-the-dual-nature-of-ux-and-ai-among-sap-customers-at/ba-p/14113975&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Fiori tools 2506 now available&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The 2506 release of SAP Fiori tools includes enhancements that make full-stack development with SAP Fiori elements and RAP even more seamless—from initial app creation to UI adaptation and low-code configuration.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-2506-update-open-source-faster-app-creation-adaptation/ba-p/14131156" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-2506-update-open-source-faster-app-creation-adaptation/ba-p/14131156&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;AI-powered project accelerator&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The AI-powered project accelerator from SAP Fiori tools automates multiple steps, including creating a data model, preparing mock data, building an OData service, generating an SAP Fiori app and adding the necessary annotations. See how to set up a trial account and try it for yourself.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/from-idea-to-app-using-ai-powered-project-accelerator-to-develop-sap-fiori/ba-p/14095300" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/from-idea-to-app-using-ai-powered-project-accelerator-to-develop-sap-fiori/ba-p/14095300&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Introducing SAPUI5 version preview in SAP Build Work Zone&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We have introduced a new option to preview an upcoming SAPUI5 version for SAP Build Work Zone. This capability aims to provide a controlled environment for evaluating SAPUI5 updates in SAP Build Work Zone, thereby avoiding immediate changes in production environments.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-sapui5-version-preview-in-sap-build-work-zone/ba-p/14117996" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-sapui5-version-preview-in-sap-build-work-zone/ba-p/14117996&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Explore SAPUI5 1.136.x-legacy-free for future-proof UI5 apps&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAPUI5 1.136.x-legacy-free deprecated code removed is now available via cloud access. Test your code for future-proof best practices and provide early feedback to the UI5 team.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/explore-sapui5-openui5-1-136-x-legacy-free/ba-p/14103271" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/explore-sapui5-openui5-1-136-x-legacy-free/ba-p/14103271&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAPUI5 is leading the way in accessibility with WCAG 2.2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Accessibility is key to using SAP's business solutions. Adopting the latest standards ensures that solutions are inclusive and meet the diverse needs of users globally. When creating apps with SAP Build and SAPUI5, developers can leverage the latest Web Content Accessibility Guidelines (WCAG).&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sapui5-is-leading-the-way-in-accessibility-with-wcag-2-2/ba-p/14101596" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sapui5-is-leading-the-way-in-accessibility-with-wcag-2-2/ba-p/14101596&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Fiori Application Generator available in open source&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The SAP Fiori tools team is delighted to announce that the underlying code for the SAP Fiori Application Generator has been moved entirely to open source. This has been a long journey...&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-application-generator-available-in-open-source/ba-p/14109021" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-application-generator-available-in-open-source/ba-p/14109021&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;New SAP Design System portal for SAP Fiori design guidelines&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The SAP Design System portal contains everything about the design system, including comprehensive new UI Kits for designers in Figma.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/new-sap-design-system-portal-for-sap-fiori-design-guidelines-and-new-ui/ba-p/14109558" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/new-sap-design-system-portal-for-sap-fiori-design-guidelines-and-new-ui/ba-p/14109558&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Quickly generate and deploy SAP Fiori apps from ABAP Development Tools for Eclipse&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The new quick SAP Fiori application generator lets you generate an application based on SAP Fiori elements annotations and deploy the SAP Fiori UI with only a few clicks from the service binding editor in ADT.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/quickly-generate-and-deploy-sap-fiori-apps-from-abap-development-tools-for/ba-p/14116822" target="_blank"&gt;https://community.sap.com/t5/application-development-and-automation-blog-posts/quickly-generate-and-deploy-sap-fiori-apps-from-abap-development-tools-for/ba-p/14116822&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1536880570"&gt;&lt;STRONG&gt;Events&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;SAP Fiori Innovation Day Bangalore&amp;nbsp; &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The biggest SAP Fiori Innovation Day ever!&lt;BR /&gt;This summary highlights the key sessions, insights from our presentations, and the remarkable contributions from our local development community.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-fiori-innovation-day-bangalore-connection-gratitude-ai-and-local/ba-p/14129580" target="_blank"&gt;https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-fiori-innovation-day-bangalore-connection-gratitude-ai-and-local/ba-p/14129580&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Fiori Innovation Day Dallas &lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; October 17 as part of the ASUG chapter meeting&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Registration link opening soon - mark your calendar now&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;SAP Fiori Innovation Day Paris &lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; December 10&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Registration link opening soon - mark your calendar now&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All our SAP Fiori Innovation Day events are open to customers.&lt;BR /&gt;If you are a partner, please let me know if you are interested in sponsoring in one or both of our locations.&lt;BR /&gt;I hope you can join us.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP TechEd&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Registration is now open for both the in-person event in Berlin and the virtual event. Here are details on what you can expect.&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/sap-teched-blog-posts/sap-teched-2025-registration-is-live-check-out-our-brand-new-hybrid/ba-p/14107573" target="_blank"&gt;https://community.sap.com/t5/sap-teched-blog-posts/sap-teched-2025-registration-is-live-check-out-our-brand-new-hybrid/ba-p/14107573&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1311650375" id="toc-hId-1340367065"&gt;&lt;STRONG&gt;Back issues from the past year&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-fiori-development-newsletter-may-2025-issue-34/ba-p/14091410" target="_self"&gt;SAP FIori development newsletter May 2025 (Issue #34)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blogs-by-sap/sap-fiori-development-newsletter-march-2025-issue-33/ba-p/14036207" target="_self"&gt;SAP Fiori development newsletter March 2025 (Issue #33)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blogs-by-sap/sap-fiori-development-newsletter-january-2025-issue-32/ba-p/13984589" target="_self"&gt;SAP Fiori development newsletter January 2025 (issue #32)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blogs-by-sap/sap-fiori-development-newsletter-november-2024-issue-31/ba-p/13929385" target="_blank"&gt;SAP Fiori development newsletter November 2024 (issue #31)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blogs-by-sap/sap-fiori-development-newsletter-september-2024-issue-30/ba-p/13870115" target="_blank"&gt;SAP Fiori development newsletter September 2024 (issue #30)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blogs-by-sap/sap-fiori-development-newsletter-july-2024-issue-29/ba-p/13762548" target="_blank"&gt;SAP Fiori development newsletter July 2024 (issue #29)&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-fiori-development-newsletter-july-2025-issue-35/ba-p/14139032"/>
    <published>2025-07-08T16:50:00.022000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-btp-q2-2025/ba-p/14145899</id>
    <title>What's New in SAP BTP – Q2 2025</title>
    <updated>2025-07-09T11:48:21.018000+02:00</updated>
    <author>
      <name>cecilysorenson</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/9253</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT color="#000000"&gt;Q2 was another big quarter for SAP Business Technology Platform. From application development to integration and analytics, we are excited to share how SAP BTP continues to simplify, streamline, and speed things up! Let's dive into some of the top innovations!&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1863289032"&gt;&lt;FONT color="#000000"&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F1QQZBF8TUIY%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D1QQZBF8TUIY&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F1QQZBF8TUIY%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="What's New in SAP BTP: Top New Features | Analytical Insights in Joule | Q2 2025" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-1666775527"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;&lt;SPAN&gt;App Dev &amp;amp; Automation Highlights&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-1599344741"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Simplified SAPUI5 extensions with the SAP Build Extensibility Wizard&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;If your business relies on cloud ERP as its IT backbone, you know it may need extensions to meet unique requirements. When built-in extensibility isn’t enough, SAP Build on SAP BTP offers powerful options for custom coding and SAP Fiori UI extensions.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Now, with the SAP Build Extensibility Wizard, you can create UI extensions directly from your cloud ERP application.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;By l&lt;/SPAN&gt;&lt;SPAN&gt;aunching the Extensibility Wizard directly from your SAP Fiori application, you are given different options for the type of extension you want to create.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Extensibility Wizard.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283417iEC6432D347500227/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Extensibility Wizard.png" alt="Extensibility Wizard.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;The 'User Interface Extension' lets you either adapt the existing Fiori app or create a new custom application.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;By setting up your destinations and details in the Wizard, you can either remove sections, add new fields, and create a completely new variant of the application with SAP Build Code and Business Application Studio. Developers and key users can already use it to create custom processes and now, custom user interfaces.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Watch the video demo (starting at 0:08)  for more insights!&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Learn more:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/simplify-sapui5-code-extensions-with-the-sap-build-extensibility-wizard/ba-p/14087839" target="_blank"&gt;Simplify SAPUI5 Code Extensions with the SAP Build Extensibility Wizard&lt;/A&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1402831236"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Application to Enable Business Users to Manage Decisions&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;To empower business users to view or maintain decisions within SAP Build Process Automation, we launched a dedicated, purpose-built application that can be accessed directly from SAP Build Work Zone – without the need of IT.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Business users can access a dedicated application in SAP Build Work Zone to manage decisions within a single project.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Users can open the decision table, modify values directly, or import data from Excel and then save their changes, seeing only what matters and making the experience clean and focused.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;The release of a changed version is only one click away. Any errors are shown in the design console, letting users view the different versions of the project.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;See for yourself in the demo (starting at 2:05)  for more insights!&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Learn more&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;A href="https://help.sap.com/docs/build-process-automation/sap-build-process-automation/configure-studio-home-application" target="_blank" rel="noopener noreferrer"&gt;Configure the Stuido Home Application&lt;/A&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;A href="https://help.sap.com/docs/build-process-automation/sap-build-process-automation/use-studio-home" target="_self" rel="noopener noreferrer"&gt;Using the Studio Home Application&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1206317731"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Partner Solutions as an Installable Product on SAP BTP ABAP Environment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Good news for SAP partners developing apps with SAP BTP ABAP Environment: you can now offer your solution not only as a multitenant Software as a Service solution, but also as an installable product!&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Customers can now install the solution directly in their system as a product.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;As a part of SAP BTP ABAP Environment, the Landscape Portal supports both delivery options: multitenant SaaS and installable product.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Innovation_ABAP.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283419i970A4790880B6365/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Innovation_ABAP.png" alt="Innovation_ABAP.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;You can do this in three easy steps:&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Build your product with the Register Product app.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Choose your delivery model:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;For multitenant SaaS, configure it in the Maintain Solution app&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;For installable product, use the Publish Product app.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Publish your solution to the SAP Store with a PartnerEdge Build contract and an SAP Store enhancement.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;Now customers using SAP BTP ABAP Environment can find your product in the SAP Store and install it into their own system using the Deploy Product option.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For detailed guidance, watch the demo (starting at 3:42).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Learn more:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest/building-partner-products-on-sap-btp-abap-environment/ev-p/13804921" target="_self"&gt;Building partner products on SAP BTP ABAP Environment&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-880721507"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;FONT color="#33CCCC"&gt;Highlight&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-813290721"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Describe Externalized Parameters of an Integration Flow&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;In SAP Integration Suite externalization enables integration developers to define parameters as variables for certain configurations of adapters or flow steps of an integration flow. The values of these parameters can be changed without editing the integration flow, for example, when moving integrations from development or test environment to production.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;To simplify the understanding of this difficult and technical process, content developers can now provide descriptions directly in the integration flow editor.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;These can be the potential values, examples or additional details explaining the impact of specific values which will then be visible for guiding through each of the fields in the Configure view. This brings huge potential to improve the maintainability and reusability of your integration scenarios.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Take a look at the demo (starting at 5:21) and see for yourself!&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Learn more:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/externalized-parameters-view" target="_self" rel="noopener noreferrer"&gt;Externalized Parameters View&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-487694497"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Data &amp;amp; Analytics&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Highlight&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-420263711"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Analytical insights in Joule&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;Joule, SAP's copilot, now enables you to get quick analytical answers without having to build reports. This provides you with valuable insights, saving time and giving you the information you need.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Joule_Sales_Commission.gif" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283418i84EA541A95879D02/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Joule_Sales_Commission.gif" alt="Joule_Sales_Commission.gif" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Joule scans available data sources and suggests a few options, making comparisons to previous months easier. Joule updates the view right away, making it easy to see how things are trending.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;For example, you can&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;ask for the top ten sales agents, check the monthly commission trend from January to March, giving you contextual and relevant answers&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;See this in action in the demo (starting 7:15).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Learn more:&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-analytical-insights-in-joule-empowering-smarter-decisions/ba-p/14083673" target="_blank"&gt;Introducing Analytical Insights in Joule: Empowering Smarter Decisions, Instantly&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-94667487"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Cross&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Platform Highlight&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H4 id="toc-hId--470480394"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Provision App-Specific Groups in Identity Directory&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;SAP Cloud Identity Services tenant enables immediate provisioning of authorizations to target systems&lt;/SPAN&gt;&lt;SPAN&gt; &lt;/SPAN&gt;&lt;SPAN&gt;in SAP Analytics Cloud target system. You can  c&lt;/SPAN&gt;&lt;SPAN&gt;entrally manage user-group assignments linked to application-specific policies, triggering provisioning jobs that synchronize access rights efficiently and securely. This ensures users gain prompt access to their designated roles in the target system.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Watch the demo (starting at 8:37) for a closer look.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Learn more:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;A href="https://pages.community.sap.com/topics/cloud-identity-services" target="_self" rel="noopener noreferrer"&gt;SAP Cloud Identity Services&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId--596892341" id="toc-hId--373590892"&gt;&lt;FONT color="#FFCC00"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Share your thoughts&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;These videos are for YOU. We would love to hear your impressions. How do you like the video? How can we improve the upcoming videos? Please share your feedback by liking this post or leaving a comment below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thank you for your support and happy viewing, sharing, and enjoying!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;You Might Also Be Interested In&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://events.sap.com/sap-btp-garage-2025/en_us/home.html" target="_blank" rel="noopener noreferrer"&gt;SAP BTP Garage&lt;/A&gt;&lt;/SPAN&gt;:&amp;nbsp;monthly LIVE webinar with hands-on use case walkthroughs and demos.&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://podcast.opensap.info/cloud-platform/" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP BTP Talk Podcast&lt;/A&gt;&lt;/SPAN&gt;: monthly podcast covering all things SAP BTP.&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-btp-q2-2025/ba-p/14145899"/>
    <published>2025-07-09T11:48:21.018000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/valuehelp-docu-it-s-just-the-old-wine-in-a-new-bottle-but-then-every-bottle/ba-p/14151332</id>
    <title>Valuehelp docu - It’s just the old wine in a new bottle – but then, every bottle has its day! 😉</title>
    <updated>2025-07-14T05:57:43.575000+02:00</updated>
    <author>
      <name>sandeep_rs</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/387387</uri>
    </author>
    <content>&lt;P&gt;With SAPUI5 1.138, the SAP Fiori elements OData V4 “Field Help” documentation has undergone a complete revamp! It’s essentially the same contents but with a much better restructuring of the key topics. The flow of topics is a lot more natural and in sync with the way the field help shows up in the UI – resulting in a far better readability of the topic.&lt;/P&gt;&lt;P&gt;So in this short article, let us see what are the key elements of the new structure. This is NOT a deep dive into the field help (or valuehelp) topic – the official documentation is already doing that! But instead we shall take a closer look at what are the key parts of a field help or value help and where in the documentation we can find this information!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;First up is the &lt;A href="https://sapui5.hana.ondemand.com/1.138.0/#/topic/a5608eabcc184aee99e1a7d88b28816c" target="_self" rel="nofollow noopener noreferrer"&gt;Field Help&lt;/A&gt; page. &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This was way too bloated in the older version – you can see it &lt;A href="https://sapui5.hana.ondemand.com/#/topic/a5608eabcc184aee99e1a7d88b28816c" target="_blank" rel="noopener nofollow noreferrer"&gt;here&lt;/A&gt;! The newer version is a lot leaner and includes only the different field helps that can be configured for a fe V4 field. In addition, it retains the section on using the “&lt;STRONG&gt;History of Recently Entered Values&lt;/STRONG&gt;” feature but also brings in a nice little section on using the &lt;STRONG&gt;Type-Ahead support&lt;/STRONG&gt;!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The &lt;A href="https://sapui5.hana.ondemand.com/1.138.0/#/topic/fccb255723d3489cae955648756411f6" target="_self" rel="nofollow noopener noreferrer"&gt;Value Help&lt;/A&gt; is now big enough to get its own page! So, what is covered here?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;One big help is that now all value help related annotations are centralized in this page. A developer can take one quick look into this and easily figure out all the annotations that are supported for configuration of a value help. The XML and CAP CDS annotations match perfectly and hopefully soon we can also bring in the equivalent ABAP CDS annotations!&lt;/P&gt;&lt;P&gt;Most of the contents that were specific to valuehelp dialog are now pushed out of this page making this much leaner and easier to do a full page scan to understand the overall concept w/o getting lost with all the details!&lt;/P&gt;&lt;P&gt;&lt;A href="https://sapui5.hana.ondemand.com/1.138.0/#/topic/3faed838512648b099e14dfec458d847" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;Value Help Dialog&lt;/STRONG&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;The many nuances of the value help dialog has now found its own home and page! The page describes in clear simple language the configurations required for each part of the dialog – starting from the title and then covering all other parts like the search bar, the filter bar, the “variants” of the value helps and finally the main table that shows the value help data! The Text/TextArrangement topic is very much simplified now and can be read w/o additional caffeine &lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/P&gt;&lt;P&gt;A cool small little section is dedicated to the “Caching” behavior and even links an example showing how cache can be refreshed, where needed!&lt;/P&gt;&lt;P&gt;And finally, we get to see a nice screenshot and a table showing why the Define Condition never comes up the same for any two fields &lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The last two chapters (dropdown and In/Out mappings) are largely the same as before and I expect some revisions here in the upcoming versions!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The goal was to make value help documentation a much simpler and clearer articulation of the underlying capability and by and large, I believe, this is now achieved. There are still of course some improvements and tweaks to be added and hopefully we get over that soon. Until then, I hope you have a good time configuring your value helps and yes, please add a comment if you see potential for further improvements/simplification! Thank you!&lt;/P&gt;&lt;P&gt;Cheers,&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp; Sandeep&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/valuehelp-docu-it-s-just-the-old-wine-in-a-new-bottle-but-then-every-bottle/ba-p/14151332"/>
    <published>2025-07-14T05:57:43.575000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-community-leaders-finder/marla-alschweiki/ba-p/14152384</id>
    <title>Marla Alschweiki</title>
    <updated>2025-07-15T13:38:58.090000+02:00</updated>
    <author>
      <name>StephanieMarley</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/109</uri>
    </author>
    <content>&lt;P class=""&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/7391" target="_self"&gt;Marla&lt;/A&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Germany&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;SAP Mentor since 2025&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Follow Marla on &lt;A href="https://www.linkedin.com/in/marshwaiki/" target="_self" rel="nofollow noopener noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Marla.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286868i5BCCCC16E3B3BA45/image-size/small?v=v2&amp;amp;px=200" role="button" title="Marla.png" alt="Marla.png" /&gt;&lt;/span&gt;In Marla's own words: "I am a curious SAP Data Analytics &amp;amp; AI Developer with a strong focus on Business Intelligence, Embedded Analytics, and AI-driven development. Over the past eight years, I've worked across the SAP ecosystem from S/4HANA and SAP BW to SAP Analytics Cloud and Fiori/UI5, where I've helped design and implement clean, scalable solutions that bridge backend data architecture with user-friendly interfaces.&lt;/P&gt;&lt;P&gt;I specialize in building modular Virtual Data Models using CDS Views, aligned with SAP’s clean core strategy.&lt;/P&gt;&lt;P&gt;I'm especially excited about the evolving landscape of&amp;nbsp;SAP Business AI&amp;nbsp;and its potential to transform how enterprises operate from predictive analytics and intelligent process automation to personalized user experiences.&lt;/P&gt;&lt;P&gt;I'm a strong believer in continuous learning, open knowledge-sharing, and the power of community. Whether through mentorship, collaboration, blogs, or workshops, I actively seek out opportunities to grow, uplift others, and create spaces where everyone feels empowered to learn, contribute, and thrive."&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Topics of interest:&amp;nbsp;&lt;/STRONG&gt;SAP Data Analytics, SAP Business AI, Embedded Analytics, SAP Business Data Cloud, SAP Fiori/UI5&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Marla, what inspired you to become an SAP Mentor?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="handshake .png" style="width: 68px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/52491i8E9D2FFB3C7BC293/image-dimensions/68x68?v=v2" width="68" height="68" role="button" title="handshake .png" alt="handshake .png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt;Becoming a mentor is my way of giving back to the SAP community that’s played such a big role in my journey. I truly believe that knowledge grows when it’s shared, and I want to help others find clarity and confidence in this fast-moving field. With my background in product development, I can help approach problems with a critical eye and a practical mindset to build SAP solutions that truly address real-world needs and push innovation forward.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;What advice would like to share with other SAP community members?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="298874_collaborate_blue (1).png" style="width: 65px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/52495i64D82195EFF8CCB9/image-dimensions/65x65?v=v2" width="65" height="65" role="button" title="298874_collaborate_blue (1).png" alt="298874_collaborate_blue (1).png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;SPAN&gt;Stay curious and don’t be afraid to ask questions, no matter how simple they seem. SAP is a vast ecosystem, and nobody knows everything. Collaboration and continuous learning are key. Also, share your experiences! Whether it’s a small tip, a lesson learned, or a project success, your voice might be exactly what someone else needs to hear.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/sap-community-leaders-finder/marla-alschweiki/ba-p/14152384"/>
    <published>2025-07-15T13:38:58.090000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/developing-a-shell-plugin-for-sap-build-work-zone-to-display-custom/ba-p/14155228</id>
    <title>Developing a Shell Plugin for SAP Build Work Zone to Display Custom Notifications on SAP BTP</title>
    <updated>2025-07-17T14:41:49.080000+02:00</updated>
    <author>
      <name>Mykhaylo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1584309</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Introduction &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Unlocking Custom Experiences in SAP Build Work Zone: Shell Plugin in Action&lt;/STRONG&gt;&lt;BR /&gt;In today’s digital workplace, personalization is key. This article showcases how to enhance SAP Build Work Zone with a custom shell plugin that brings tailored notifications right to the user’s fingertips. Using a Multi-Target UI5/CAP application, we’ll demonstrate how to create, manage, and surface custom alerts—seamlessly integrated into your Work Zone experience.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="f.drawio.png" style="width: 451px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288561iDC61B9991F3786DD/image-dimensions/451x313?v=v2" width="451" height="313" role="button" title="f.drawio.png" alt="f.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-right" image-alt="Screenshot 2025-07-17 at 10.34.19 copy.png" style="width: 454px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288563i8567242FF02F247C/image-dimensions/454x315?v=v2" width="454" height="315" role="button" title="Screenshot 2025-07-17 at 10.34.19 copy.png" alt="Screenshot 2025-07-17 at 10.34.19 copy.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;To replicate this you should have a base knowledge of SAP BTP, JS, SAPUI5 and SAP CAP, I will not go deep down in to how to generate a project in BAS, or create an instance in SAP BTP.&amp;nbsp;&lt;/P&gt;&lt;P&gt;***GITHUB URL REMOVED BY MODERATION***&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Project Architecture&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="shell-plugin-diagram.drawio.png" style="width: 926px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289794i8FD7E8CB2C8CE32C/image-dimensions/926x486?v=v2" width="926" height="486" role="button" title="shell-plugin-diagram.drawio.png" alt="shell-plugin-diagram.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Backend/Frontend App Development:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Generate a regular SAP CAP application&lt;/P&gt;&lt;P&gt;Firstly I've created a primitave data structure under db/schema.cds&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;namespace my.Notification;

entity Notification {
    key ID : UUID;
    type: String(30);
    title: String;
    message: String;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Than a service at srv/service.cds:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;using { my.Notification as my } from '../db/schema';

service NotificationService {
    entity Notification as projection on my.Notification;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;And the backend is almost done, now add an app router and a sapui5 freestyle base app to the project.&lt;/P&gt;&lt;P&gt;Now let's add a form to create and delete the notifications under app/&amp;lt;app name&amp;gt;/webapp/view/&amp;lt;view name&amp;gt;.view.xml:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;EM&gt;Remember to correct the controller name if you copy the code&lt;/EM&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;Remember to correct the controller name if you copy the code&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;mvc:View
    controllerName="com.sap.shellnotificationsender.controller.MyView"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns="sap.m"
    xmlns:form="sap.ui.layout.form"
    xmlns:core="sap.ui.core"&amp;gt;

    &amp;lt;Toolbar&amp;gt;
        &amp;lt;Title text="{i18n&amp;gt;title}" /&amp;gt;
    &amp;lt;/Toolbar&amp;gt;

    &amp;lt;Shell id="mainShell"&amp;gt;
        &amp;lt;VBox class="sapUiSmallMargin"&amp;gt;
            &amp;lt;form:SimpleForm
                    editable="true"
                    layout="ResponsiveGridLayout"
                    labelSpanL="1" labelSpanM="2"
                    adjustLabelSpan="false"
                    columnsL="3" columnsM="3"
                    class="sapUiSmallMarginBottom"&amp;gt;

                    &amp;lt;Label text="Type" /&amp;gt;
                    &amp;lt;ComboBox id="newType" selectedKey="information"&amp;gt;
                        &amp;lt;core:Item key="Warning" text="Warning" /&amp;gt;
                        &amp;lt;core:Item key="Success" text="Success" /&amp;gt;
                        &amp;lt;core:Item key="Information" text="Information" /&amp;gt;
                        &amp;lt;core:Item key="Error" text="Error" /&amp;gt;
                        &amp;lt;core:Item key="Alert" text="Alert" /&amp;gt;
                        &amp;lt;core:Item key="Confirm" text="Confirm" /&amp;gt;
                    &amp;lt;/ComboBox&amp;gt;

                    &amp;lt;Label text="Title" /&amp;gt;
                    &amp;lt;Input id="newTitle" /&amp;gt;

                    &amp;lt;Label text="Message" /&amp;gt;
                    &amp;lt;Input id="newMessage" /&amp;gt;

                    &amp;lt;Label text="" /&amp;gt;
                    &amp;lt;Button text="Add Notification"
                        press="onAddNotification"
                        type="Emphasized"/&amp;gt;
                &amp;lt;/form:SimpleForm&amp;gt;

            &amp;lt;!-- Table Section --&amp;gt;
            &amp;lt;Table id="shellNotificationsTable" items="{/Notification}"&amp;gt;
                &amp;lt;columns&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;Text text="Delete" /&amp;gt;
                    &amp;lt;/Column&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;Text text="Type" /&amp;gt;
                    &amp;lt;/Column&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;Text text="Title" /&amp;gt;
                    &amp;lt;/Column&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;Text text="Message" /&amp;gt;
                    &amp;lt;/Column&amp;gt;
                &amp;lt;/columns&amp;gt;

                &amp;lt;items&amp;gt;
                    &amp;lt;ColumnListItem&amp;gt;
                        &amp;lt;cells&amp;gt;
                            &amp;lt;Button icon="sap-icon://delete" type="Negative" press="deleteRow" /&amp;gt;
                            &amp;lt;Text text="{type}" /&amp;gt;
                            &amp;lt;Text text="{title}" /&amp;gt;
                            &amp;lt;Text text="{message}" /&amp;gt;
                        &amp;lt;/cells&amp;gt;
                    &amp;lt;/ColumnListItem&amp;gt;
                &amp;lt;/items&amp;gt;
            &amp;lt;/Table&amp;gt;
        &amp;lt;/VBox&amp;gt;
    &amp;lt;/Shell&amp;gt;
&amp;lt;/mvc:View&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;As next let's implement the controller that manages the view with all the necessary notification creation/deletion methods:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
    "sap/ui/core/mvc/Controller",
    "sap/m/MessageBox",
	"sap/m/MessageToast"
], (Controller, MessageBox, MessageToast) =&amp;gt; {
    "use strict";

    return Controller.extend("com.sap.shellnotificationsender.controller.MyView", {
        onInit() {

        },

        deleteRow: function (oEvent) {
			var oContext = oEvent.getSource().getBindingContext().getObject();
			console.log(oContext);
			MessageBox.confirm("Are your sure you want to delete this message?", {
				title: "Confirm",
				onClose: function (sAction) {
					if (sAction === "OK") {
						this.onDeleteSpecificRecord(oContext)
					}
				}.bind(this),
				actions: [
					MessageBox.Action.OK,
					MessageBox.Action.CANCEL
				],
				emphasizedAction: MessageBox.Action.OK
			})
		},

		onDeleteSpecificRecord: function (oRecord) {
			var oDataModel = this.getOwnerComponent().getModel();
			var oBusyDialog = new sap.m.BusyDialog({
				title: "Deleting Record",
				text: "Please Wait ..."
			})
			oBusyDialog.open();
			oDataModel.delete(`/Notification('${oRecord.ID}')`)
				.then(() =&amp;gt; {
					console.log("Record deleted successfully");
				})
				.catch((error) =&amp;gt; {
					console.error("Deletion failed:", error);
				})
				.finally(() =&amp;gt; {
					this.getView().byId("shellNotificationsTable").getBinding("items").refresh();
					oBusyDialog.close();
				});
		},

		onAddNotification: function () {
			const sType = this.byId("newType").getValue();
			const sTitle = this.byId("newTitle").getValue();
			const sMessage = this.byId("newMessage").getValue();

			this.byId("shellNotificationsTable").getBinding("items").create({
				"type": sType,
				"title": sTitle,
				"message": sMessage
			}).created().then(function() {
				MessageToast.show("Created")
			})
		}
    });
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The last thing to do is to add all the features that you need to the application, like HANA DB, xsuaa in my case, to do so just run&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add hana
cds add xsuaa&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;And like this is the app ready, let's deploy it, firstly login to Cloud Foundry&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf login&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;then right click on the mta.yaml file -&amp;gt; "Build MTA Project"&lt;/P&gt;&lt;P&gt;then go to mta_archives/&amp;lt;archive name&amp;gt;.tar right click and "Deploy MTA Project".&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;BTP Steps&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To connect to the app from the shell plugin you need to create a SAP BTP Destination,&amp;nbsp;&lt;/P&gt;&lt;P&gt;to do so go to &amp;lt;BTP Subaccount&amp;gt; -&amp;gt; Cloud Foundry -&amp;gt; &amp;lt;Your space&amp;gt; -&amp;gt; &amp;lt;Your app name&amp;gt;-srv and copy it's address, that's your destination URL&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-07-17 at 13.09.47.png" style="width: 943px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287889i176C46B55421F1C7/image-dimensions/943x624?v=v2" width="943" height="624" role="button" title="Screenshot 2025-07-17 at 13.09.47.png" alt="Screenshot 2025-07-17 at 13.09.47.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now you need to get the authentication data for the Destination&lt;/P&gt;&lt;P&gt;Go to &amp;lt;Your CF Space&amp;gt; -&amp;gt; Instances -&amp;gt;&amp;nbsp;&amp;lt;Your app name&amp;gt;-auth -&amp;gt;&amp;nbsp;&amp;lt;Your app name&amp;gt;-auth-key&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-07-17 at 13.10.05.png" style="width: 945px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287891iACBEC4F12DB9F3B7/image-dimensions/945x625?v=v2" width="945" height="625" role="button" title="Screenshot 2025-07-17 at 13.10.05.png" alt="Screenshot 2025-07-17 at 13.10.05.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Copy these:&lt;/P&gt;&lt;P&gt;Client ID, Client secret and url (Access Token URL)&lt;/P&gt;&lt;P&gt;Now go back to your Subaccount and create a new destination with your data:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;URL:&amp;nbsp; app-srv URL&lt;/LI&gt;&lt;LI&gt;Authentication:&amp;nbsp;OAuth2ClientCredentials&lt;/LI&gt;&lt;LI&gt;ClientID: ClientID&lt;/LI&gt;&lt;LI&gt;Client secret: Client secret&lt;/LI&gt;&lt;LI&gt;Token service URL type: Dedicated&lt;/LI&gt;&lt;LI&gt;Token Service URL: &amp;lt;Access token URL&amp;gt;/oauth/token&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;After this add these 2 parameters:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;HTML5.DynamicDestination: true&lt;/LI&gt;&lt;LI&gt;WebIDEEnabled: true&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With this step is the backend development concluded.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Shell Plugin Development:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Firstly a general explanation about shell plugins. Shell Plugins are UI5 Applications that allow to add new Elements to SAP Build Work Zone/Fiori Launchpad like Headers, Footers, menu items etc.&lt;/P&gt;&lt;P&gt;To create a shell plugin generate a plain UI5 Basic Freestyle application with the "Template Wizard" in Business Application Studio.&lt;/P&gt;&lt;P&gt;There are a couple of things to modify in the manifest.json to make a a Shell Plugin:&lt;/P&gt;&lt;P&gt;Inside sap.app change the type to component:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;"type": "component"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In sap.app&amp;gt;crossNavigation hide the launcher:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;"crossNavigation": {
      "inbounds": {
        "Shell-plugin": {
          "semanticObject": "Shell",
          "action": "plugin",
          "title": "{{Shell-plugin.flpTitle}}",
          "hideLauncher": true,
          "icon": "",
          "signature": {
            "parameters": {},
            "additionalParameters": "allowed"
          }
        }
      }
    },&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Add this part under after sap.cloud:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;"sap.flp": {
    "type": "plugin"
  }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp; This way the Shell Plugin configuration is completed, now let's add our newly created Destination&lt;/P&gt;&lt;P&gt;in sap.app&amp;gt;dataSources add this:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;"NotificationService": {
        "uri": "/ShellNotifications/odata/v4/notification/",
        "type": "OData",
        "settings": {
          "odataVersion": "4.0"
        }
      }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;and in sap.ui5&amp;gt;models:&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;"Notification": {
        "dataSource": "NotificationService",
        "settings": {
          "synchronizationMode": "None",  
          "operationMode": "Server",
          "autoExpandSelect": true
        },
        "type": "sap.ui.model.odata.v4.ODataModel"
      }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;and as last thing add this route to your xs-app.json file:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;Remember: the order of the routes in xs-app matters, if you add it at the end it might not be resolved correctly by the app router&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;Remember: the order of the routes in xs-app matters, if you add it at the end it might not be resolved correctly by the app router&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;{
      "source": "^/ShellNotifications/(.*)$",
      "destination": "ShellNotifications",
      "target": "$1",
      "authenticationType": "xsuaa",
      "csrfProtection": true
    },&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now finally you can add the code that displays the notifications, to do so open the Component.js file and add the following code to the init method:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const oModel = this.getModel("Notification");

            oModel.bindList("/Notification").requestContexts().then((aContexts) =&amp;gt; {
                const aData = aContexts.map(oContext =&amp;gt; oContext.getObject());
                for (const el of aData) {
                    const nType = el["type"];
                    const nTitle = el["title"];
                    const nMessage = el["message"]
                    if (nType === "Information") {
                        MessageBox.information(nMessage, {
                            title: nTitle
                        });
                    } else if (nType === "Alert") {
                        MessageBox.alert(nMessage, {
                            title: nTitle
                        })
                    } else if (nType === "Confirm") {
                        MessageBox.confirm(nMessage, {
                            title: nTitle
                        })
                    } else if (nType === "Error") {
                        MessageBox.error(nMessage, {
                            title: nTitle
                        })
                    } else if (nType === "Success") {
                        MessageBox.success(nMessage, {
                            title: nTitle
                        })
                    } else if (nType === "Warning") {
                        MessageBox.warning(nMessage, {
                            title: nTitle
                        })
                    }
                }
            }).catch((err) =&amp;gt; {
                console.error("Failed to load notifications:", err);
            });&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;And like this is the development finished, the last step is to deploy it and add to WorkZone.&lt;/P&gt;&lt;P&gt;To build it do the same steps as with the MTA app:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;right click on the mta.yaml file -&amp;gt; "Build MTA Project"&lt;/LI&gt;&lt;LI&gt;go to mta_archives/&amp;lt;archive name&amp;gt;.tar right click and "Deploy MTA Project".&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;SAP Build Work Zone Steps&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Although the SAP Build Work Zone standard and advanced edition have some UI differences, the steps are the same for both of them.&lt;/P&gt;&lt;P&gt;All the steps performed below are done on SAP Build Work Zone advanced edition.&lt;/P&gt;&lt;P&gt;Start by going to the Administration Console -&amp;gt; External Integration -&amp;gt; Business Content -&amp;gt; Content Manager&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="f.drawio copy.png" style="width: 941px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287908i32644250736D2439/image-dimensions/941x562?v=v2" width="941" height="562" role="button" title="f.drawio copy.png" alt="f.drawio copy.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; Than open the content channel and update the "HTML5 Apps"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="f.drawio.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287909iE02C499761BD5E50/image-dimensions/936x559?v=v2" width="936" height="559" role="button" title="f.drawio.png" alt="f.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; After that go Content Explorer and click Content Explorer (In the current UI it's a button in the header)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="f.drawio copy 2.png" style="width: 919px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287911iE1DD48D7161496D1/image-dimensions/919x549?v=v2" width="919" height="549" role="button" title="f.drawio copy 2.png" alt="f.drawio copy 2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select "HTML5 Apps" and add the new Shell Plugin that you just created&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="f.drawio copy 3.png" style="width: 921px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287912i88EE9B7A47CB6A3A/image-dimensions/921x550?v=v2" width="921" height="550" role="button" title="f.drawio copy 3.png" alt="f.drawio copy 3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; To be able to see the plugin, assign it to a role, in my case it's the "Everyone" role, you can find it in the Content Manager&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="f.drawio copy 4.png" style="width: 922px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287913i25996A10836F1110/image-dimensions/922x551?v=v2" width="922" height="551" role="button" title="f.drawio copy 4.png" alt="f.drawio copy 4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; After you've done that you should be able to see your new shell plugin the SAP Build Work Zone's launchpad&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="f.drawio copy 5.png" style="width: 921px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287914i5AA60516B3696BD0/image-dimensions/921x550?v=v2" width="921" height="550" role="button" title="f.drawio copy 5.png" alt="f.drawio copy 5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; If you don't see it try to open the page in an "Anonymous" Tab and check the developer console&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;What we’ve built here is just a glimpse into what’s possible with shell plugins in SAP Build Work Zone. By integrating a custom notification system, we’ve shown how easily you can extend the platform to better fit your customers’ needs. But this is only the starting point.&lt;/P&gt;&lt;P&gt;There’s a wide range of enhancements you can explore next—such as targeting specific users with personalized notifications, adding actionable buttons to each alert, or even integrating with external systems to trigger real-time messages. The flexibility of shell extensions offers endless opportunities to enrich the Work Zone experience and tailor it to your organization’s workflows.&lt;/P&gt;&lt;P&gt;So go ahead—experiment, extend, and elevate your Work Zone.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/developing-a-shell-plugin-for-sap-build-work-zone-to-display-custom/ba-p/14155228"/>
    <published>2025-07-17T14:41:49.080000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/the-complete-guide-to-calling-actions-in-ui5-with-custom-code/ba-p/14156201</id>
    <title>The Complete Guide to Calling Actions in UI5 with Custom Code</title>
    <updated>2025-07-21T09:04:09.143000+02:00</updated>
    <author>
      <name>Marian_Zeis</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/61</uri>
    </author>
    <content>&lt;P class=""&gt;In the past I’ve had to implement &lt;STRONG&gt;actions&lt;/STRONG&gt; in SAPUI5 every now and then. Because I mostly work with Fiori elements now, hand-coding actions has become a rare task for me — and whenever I do need to do it, the official docs are pretty thin and the code samples are sparse.&lt;/P&gt;&lt;P class=""&gt;With this post (and a CAP sample project) I want to walk you through the process&amp;nbsp;— and leave a note to my future self&amp;nbsp;— on how to wire up actions in SAPUI5.&lt;/P&gt;&lt;H2 id="toc-hId-1735153572"&gt;&lt;STRONG&gt;What exactly are “actions” and “functions”?&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Both &lt;STRONG&gt;Actions&lt;/STRONG&gt; and &lt;STRONG&gt;Functions&lt;/STRONG&gt; are service operations defined in OData / CAP that go beyond the standard CRUD verbs:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Concept&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Side effects&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Return type&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Typical use case&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Action&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Yes (write)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;void / entity / collection&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Update price, approve a request&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Function&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;No (read-only)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;scalar / entity / collection&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Calculate price, fetch KPIs&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class=""&gt;In CAP there are two scopes for both actions and functions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Bound&lt;/STRONG&gt; — tied to a single instance or collection of an entity.&lt;STRONG&gt;Unbound&lt;/STRONG&gt; — defined at service level, usable anywhere.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1538640067"&gt;&lt;STRONG&gt;Quick Start&lt;/STRONG&gt;&lt;/H2&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;git clone https://github.com/marianfoo/ui5-call-action.git
cd ui5-call-action
npm install          # installs CAP, UI5 tooling, etc.
npm run deploy        # deploys the service to the sqlite database
npm run watch           # starts CAP + FE/Freestyle apps&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Open in your browser &lt;A href="http://localhost:4004" target="_self" rel="nofollow noopener noreferrer"&gt;http://localhost:4004&lt;/A&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;UI5 V4 Fiori elements → &lt;A href="http://localhost:4004/com.marianzeis.books/index.html" target="_blank" rel="noopener nofollow noreferrer"&gt;/com.marianzeis.books&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;UI5 V2 Fiori elements → &lt;A href="http://localhost:4004/com.marianzeis.booksv2/index.html" target="_blank" rel="noopener nofollow noreferrer"&gt;/com.marianzeis.booksv2&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;UI5 V4 Freestyle → &lt;A href="http://localhost:4004/com.freestyle/index.html" target="_blank" rel="noopener nofollow noreferrer"&gt;/com.freestyle&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;UI5 V2 Freestyle → &lt;A href="http://localhost:4004/com.freestyle-v2/index.html" target="_blank" rel="noopener nofollow noreferrer"&gt;/com.freestyle-v2&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Marian_Zeis_1-1752834700540.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288548iE449153FD52D2B53/image-size/large?v=v2&amp;amp;px=999" role="button" title="Marian_Zeis_1-1752834700540.png" alt="Marian_Zeis_1-1752834700540.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1342126562"&gt;&lt;STRONG&gt;Implementing actions in CAP&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;I’ve put together a classic &lt;STRONG&gt;Bookshop&lt;/STRONG&gt; example and sprinkled in a handful of actions.&lt;BR /&gt;&lt;STRONG&gt;Full repo&lt;/STRONG&gt;: &lt;A href="https://github.com/marianfoo/ui5-call-action" target="_blank" rel="noopener nofollow noreferrer"&gt;github.com/marianfoo/ui5-call-action&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1274695776"&gt;&lt;STRONG&gt;Bound actions&lt;/STRONG&gt;&lt;/H3&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Action&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;What it does&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Parameters&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;promoteBook&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Promote a book&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;—&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;setDiscount&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Apply a discount&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;percentage, reason&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;halfPrice&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Cut price in half&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;—&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;addChapter&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Add a chapter&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;title, pages&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;SPAN&gt;massHalfPrice&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Half price for multiple books&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;books[]&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-1078182271"&gt;&lt;STRONG&gt;Unbound actions&lt;/STRONG&gt;&lt;/H3&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Action&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;What it does&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Parameters&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;refreshCatalog&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Refresh catalog&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;—&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;generateReport&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Generate report&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;type, dateFrom, dateTo&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;createBooksAndChapters&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Bulk create books + chapters&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;books[] and chapters[] (deep parameter)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-881668766"&gt;&lt;STRONG&gt;Functions (read-only)&lt;/STRONG&gt;&lt;/H3&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Function&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Scope&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;getCurrentPrice&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;bound&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Return current book price&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;getSumBookPrices&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;unbound&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Sum of all book prices&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class=""&gt;&lt;I&gt;Definitions&lt;/I&gt; → &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/main/srv/bookshop-service.cds" target="_self" rel="nofollow noopener noreferrer"&gt;srv/bookshop-service.cds&lt;/A&gt;&lt;BR /&gt;&lt;I&gt;Handlers&lt;/I&gt; → &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/main/srv/bookshop-service.js" target="_self" rel="nofollow noopener noreferrer"&gt;srv/bookshop-service.js&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-556072542"&gt;&lt;STRONG&gt;OData V2 quick note&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;CAP speaks OData V4 out-of-the-box. To expose an OData V2 endpoint, install &lt;A href="https://github.com/cap-js-community/odata-v2-adapter" target="_blank" rel="noopener nofollow noreferrer"&gt;@cap-js-community/odata-v2-adapter&lt;/A&gt;. The service will be reachable at:&lt;/P&gt;&lt;pre class="lia-code-sample language-text"&gt;&lt;code&gt;http://localhost:4004/odata/v2/bookshop&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-359559037"&gt;&lt;STRONG&gt;SAPUI5 via annotations&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;The smoothest route in UI5 is Fiori elements. Just add an annotation and the button appears. Example for &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/576e497e7b52a527dfacbca0ebc9764f1d38d7eb/srv/fiori-annotations.cds#L25-L29" target="_self" rel="nofollow noopener noreferrer"&gt;promoteBook&lt;/A&gt;. :&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;{
  $Type: 'UI.DataFieldForAction',
  Label: 'CAP Promote Book',
  Action: 'BookshopService.promoteBook'
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The actions are now visible in the table header. The buttons with the prefix ‘CAP’ are defined with the annotation, the buttons with the prefix ‘CUST’ are custom actions defined and implemented in the frontend.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Marian_Zeis_0-1752834587094.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288547i5242AF92D93D2C06/image-size/large?v=v2&amp;amp;px=999" role="button" title="Marian_Zeis_0-1752834587094.png" alt="Marian_Zeis_0-1752834587094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-163045532"&gt;&lt;STRONG&gt;SAPUI5 with custom code&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;To compare APIs I created two freestyle apps and two Fiori elements apps:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;App&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Tech&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Key APIs&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;/app/freestyle&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;OData V4, TypeScript&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;A href="https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataContextBinding%23methods/invoke" target="_self" rel="noopener noreferrer"&gt;invoke()&lt;/A&gt;, &lt;A href="https://ui5.sap.com/#/api/sap.ui.model.odata.v4.ODataContextBinding%23methods/execute" target="_self" rel="noopener noreferrer"&gt;execute()&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;/app/freestyle-v2&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;OData V2, TypeScript&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;A href="https://ui5.sap.com/#/api/sap.ui.model.odata.v2.ODataModel%23methods/callFunction" target="_self" rel="noopener noreferrer"&gt;callFunction()&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;/app/books, /app/books-v2&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Fiori elements&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;i&lt;A href="https://ui5.sap.com/#/api/sap.fe.core.controllerextensions.EditFlow%23methods/invokeAction" target="_self" rel="noopener noreferrer"&gt;nvokeAction()&lt;/A&gt; / &lt;A href="https://ui5.sap.com/#/api/sap.suite.ui.generic.template.Canvas.extensionAPI.ExtensionAPI%23methods/invokeActions" target="_self" rel="noopener noreferrer"&gt;invokeActions()&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-95614746"&gt;&lt;STRONG&gt;OData V4 freestyle app&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Controller → &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/main/app/freestyle/webapp/controller/MainView.controller.ts" target="_blank" rel="noopener nofollow noreferrer"&gt;MainView.controller.ts&lt;/A&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-typescript"&gt;&lt;code&gt;// Legacy pattern
const actionBinding = odataModel.bindContext(
  "BookshopService.promoteBook(...)",
  bookContext
);
await actionBinding.execute();

// Modern pattern
await actionBinding.invoke();&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Marian_Zeis_2-1752834755222.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288550i317CBB5D6A9A2FDD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Marian_Zeis_2-1752834755222.png" alt="Marian_Zeis_2-1752834755222.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId--469533135"&gt;Collection Bound Actions&lt;/H4&gt;&lt;P&gt;The action "massHalfPrice" is a so called Collection-Bound Action only for V4. The documentation about this is very sparse.&lt;BR /&gt;In capire you can find samples about the implementation in CAP: &lt;A href="https://cap.cloud.sap/docs/guides/providing-services#actions-functions" target="_self" rel="nofollow noopener noreferrer"&gt;Actions &amp;amp; Functions&lt;/A&gt; /&amp;nbsp;&lt;A href="https://cap.cloud.sap/docs/cds/cdl#bound-actions" target="_self" rel="nofollow noopener noreferrer"&gt;Bound Actions and Functions&lt;/A&gt;&lt;BR /&gt;In the UI5 Documentation it looks like it is described under "&lt;A href="https://ui5.sap.com/#/topic/cbf16c599f2d4b8796e3702f7d4aae6c" target="_self" rel="noopener noreferrer"&gt;Static Action".&lt;/A&gt;&lt;BR /&gt;It was not easy to figure out how to call from the frontend and i was not the &lt;A href="https://community.sap.com/t5/application-development-and-automation-discussions/how-to-perform-a-cap-bound-action-on-a-collection/m-p/13652372" target="_self"&gt;only one how asked&lt;/A&gt; this.&lt;BR /&gt;&lt;STRONG&gt;Basically, I see the action as a normal bound action that has the type Books as an input parameter. Accordingly, the call in the front end is the same, only the path to call in frontend is slightly different.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/marianfoo/ui5-call-action/blob/9379725220073cbabff5208ad5ff2e35739720b6/srv/bookshop-service.cds#L43" target="_self" rel="nofollow noopener noreferrer"&gt;Definition in the CAP App&lt;/A&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;  entity Books as projection on my.Books actions {
    //bound to the collection and not a specific instance of Books
    action massHalfPrice (books: many $self) returns array of Books;
    // bound action with one book as parameter
    action similarBooks (book: $self) returns array of Books;
  };
//unbound action with many books as parameter
action massHalfPrice (books: many Books) returns array of Books;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;metadata of three different actions in V4&lt;BR /&gt;&lt;STRONG&gt;Top&lt;/STRONG&gt; &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/533f3cbfabf47a17b5b8f444929f4a322edcc0c7/srv/bookshop-service.cds#L43" target="_self" rel="nofollow noopener noreferrer"&gt;Bound Collection-Bound Action&lt;/A&gt; // &lt;STRONG&gt;Middle&lt;/STRONG&gt;&amp;nbsp;&lt;A href="https://github.com/marianfoo/ui5-call-action/blob/533f3cbfabf47a17b5b8f444929f4a322edcc0c7/srv/bookshop-service.cds#L44" target="_self" rel="nofollow noopener noreferrer"&gt;Bound Action with one Book as parameter&lt;/A&gt;&amp;nbsp; // &lt;STRONG&gt;Bottom&lt;/STRONG&gt; U&lt;A href="http://action%20massHalfPrice (books: many Books) returns array of Books;" target="_self" rel="nofollow noopener noreferrer"&gt;nbound Collection-Bound Action&lt;/A&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Action Name="massHalfPrice" IsBound="true" EntitySetPath="books"&amp;gt;
&amp;lt;Parameter Name="books" Type="Collection(BookshopService.Books)" Nullable="true"/&amp;gt;
&amp;lt;ReturnType Type="Collection(BookshopService.Books)"/&amp;gt;
&amp;lt;/Action&amp;gt;
&amp;lt;Action Name="similarBooks" IsBound="true" EntitySetPath="book"&amp;gt;
&amp;lt;Parameter Name="book" Type="BookshopService.Books"/&amp;gt;
&amp;lt;ReturnType Type="Collection(BookshopService.Books)"/&amp;gt;
&amp;lt;/Action&amp;gt;
&amp;lt;Action Name="massHalfPrice" IsBound="false"&amp;gt;
&amp;lt;Parameter Name="books" Type="Collection(BookshopService.Books)" Nullable="true"/&amp;gt;
&amp;lt;ReturnType Type="Collection(BookshopService.Books)"/&amp;gt;
&amp;lt;/Action&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;A href="https://github.com/marianfoo/ui5-call-action/blob/9379725220073cbabff5208ad5ff2e35739720b6/app/freestyle/webapp/controller/MainView.controller.ts#L410-L437" target="_self" rel="nofollow noopener noreferrer"&gt;Call from the UI5 OData V4 Freestyle App to call Bound Collection Action&lt;/A&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;public async invokeMassHalfPrice(): Promise&amp;lt;void&amp;gt; {
    const odataModel = this.getView()?.getModel() as ODataModel;
    const actionPath = "/Books/BookshopService.massHalfPrice(...)";
    // Get existing books from the model instead of creating dummy data
    // Here we use the binding parameter approach - binding to existing collection data
    const table = this.byId("booksTable") as Table;
    const binding = table.getBinding("items");
    const booksData = binding.getContexts().map(context =&amp;gt; {
        const bookObject = context.getObject();
        return {
            ID: bookObject.ID,
            IsActiveEntity: bookObject.IsActiveEntity
        };
    });
    const actionBinding = odataModel.bindContext(actionPath);
    actionBinding.setParameter("books", booksData);
    await actionBinding.invoke();
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--372643633"&gt;&lt;STRONG&gt;OData V2 freestyle app&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Controller → &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/main/app/freestyle-v2/webapp/controller/MainView.controller.ts" target="_self" rel="nofollow noopener noreferrer"&gt;MainView.controller.ts&lt;/A&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-typescript"&gt;&lt;code&gt;const data = await new Promise((resolve, reject) =&amp;gt; {
  model.callFunction("/Books_promoteBook", {
    method: "POST",
    urlParameters: { ID: bookId, IsActiveEntity: true },
    success: resolve,
    error: reject
  });
});&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Paths differ:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;V4 → BookshopService.promoteBook(...)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;V2 → /Books_promoteBook&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Marian_Zeis_3-1752834774188.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288551i54A52FEAAFA615C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Marian_Zeis_3-1752834774188.png" alt="Marian_Zeis_3-1752834774188.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;!--            ——————————- existing intro &amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp; CAP sections unchanged ——————————-            --&gt;&lt;!--            INSERT AFTER “OData V2 freestyle app” SECTION            --&gt;&lt;H3 id="toc-hId--569157138"&gt;&lt;STRONG&gt;Custom code in Fiori elements (V4 &amp;amp; V2)&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Fiori elements already renders “CAP” buttons for every annotated action, but you can go further and add &lt;EM&gt;CUST&lt;/EM&gt; logic without leaving the Fiori elements shell. All you need is an ext/controller/*.ts|js file and manifest.json metadata that points to it. Inside that controller you work with ExtensionAPI:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;A href="https://ui5.sap.com/#/api/sap.fe.core.controllerextensions.EditFlow%23methods/invokeAction" target="_self" rel="noopener noreferrer"&gt;getEditFlow().invokeAction()&lt;/A&gt; — V4 helper that wraps OData calls, busy indicators, draft handling, side-effects and messaging.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;A href="https://ui5.sap.com/#/api/sap.suite.ui.generic.template.ListReport.extensionAPI.ExtensionAPI%23methods/invokeActions" target="_self" rel="noopener noreferrer"&gt;extensionAPI.invokeActions()&lt;/A&gt; — classic V2 helper (still available, multi-select aware).&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Below is a stripped-down version of the demo controller &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/main/app/books/webapp/ext/controller/Action.ts" target="_blank" rel="noopener nofollow noreferrer"&gt;Action.ts&lt;/A&gt; (V4) / &lt;A href="https://github.com/marianfoo/ui5-call-action/blob/main/app/books-v2/webapp/ext/controller/ListReportExt.controller.js" target="_blank" rel="noopener nofollow noreferrer"&gt;ListReportExt.controller.js&lt;/A&gt; (V2). Notice how the pattern is always the same: pick the selected contexts, call invokeAction(), pass parameters if needed.&lt;/P&gt;&lt;H4 id="toc-hId--1059073650"&gt;OData V4&lt;/H4&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// 1) Bound action WITHOUT parameters
export async function customPromoteBook(this: ExtensionAPI) {
  const ctx = this.getSelectedContexts();
  await this.getEditFlow().invokeAction("BookshopService.promoteBook", {
    contexts: ctx
  });
}

// 2) Bound action WITH parameters
export async function customSetDiscount(this: ExtensionAPI) {
  const ctx = this.getSelectedContexts();
  await this.getEditFlow().invokeAction("BookshopService.setDiscount", {
    contexts: ctx,
    parameterValues: [
      { name: "percentage", value: 15 },
      { name: "reason",     value: "HOLIDAY_SALE" }
    ]
  });
}

// 3) Unbound action WITHOUT parameters
export async function customRefreshCatalog(this: ExtensionAPI) {
  await this.getEditFlow().invokeAction("refreshCatalog", {
    model: this.getModel()
  });
}

// 4) Unbound action WITH parameters
export async function customGenerateReport(this: ExtensionAPI) {
  await this.getEditFlow().invokeAction("generateReport", {
    model: this.getModel(),
    parameterValues: [
      { name: "reportType", value: "sales" },
      { name: "dateFrom",   value: "2024-01-01" },
      { name: "dateTo",     value: "2024-12-31" }
    ]
  });
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--1255587155"&gt;&lt;STRONG&gt;OData V2&lt;/STRONG&gt;&lt;/H4&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;/**
 * 1. Bound action WITHOUT parameters - using invokeActions
 */
customPromoteBookInvoke: async function() {
    const contexts = this.extensionAPI.getSelectedContexts();     // Get selected rows
    await this.extensionAPI.invokeActions("/Books_promoteBook", contexts);
}
/**
 * 2. Bound action WITH parameters - using invokeActions
 */
customSetDiscountInvoke: async function() {
    const contexts = this.extensionAPI.getSelectedContexts();
    const parameters = { 
        percentage: 15, 
        reason: "HOLIDAY_SALE" 
    };
    await this.extensionAPI.invokeActions("/Books_setDiscount", contexts, parameters);
}
/**
 * 3. Unbound action WITHOUT parameters - using invokeActions
 */
customRefreshCatalogInvoke: async function() {
    try {
        await this.extensionAPI.invokeActions("/refreshCatalog");
        MessageToast.show("Catalog refreshed successfully");
    } catch (error) {
        MessageToast.show("Failed to refresh catalog: " + (error.message || "Unknown error"));
    }
}
/**
 * 4. Unbound action WITH parameters - using invokeActions
 */
customGenerateReportInvoke: async function() {
    const parameters = {
        reportType: "sales",
        dateFrom: "2024-01-01",
        dateTo: "2024-12-31"
    };
    const result = await this.extensionAPI.invokeActions("/generateReport", null, parameters);
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;&lt;STRONG&gt;Why bother?&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Quickly add dialogs, parameter defaults, or pre/post-processing logic without touching the backend.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Framework handles draft save, busy state and message pop-ups for you.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;One handler works for multi-select (just pass an array of contexts).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;You can mix CAP-generated buttons and CUST buttons side-by-side to compare approaches.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="215.266px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Fiori elements API&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="308.828px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Supports&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256.172px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Recommended for&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="215.266px"&gt;&lt;P class=""&gt;getEditFlow().invokeAction()&lt;/P&gt;&lt;/TD&gt;&lt;TD width="308.828px"&gt;&lt;P class=""&gt;Bound + Unbound actions, parameters, V4&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256.172px"&gt;&lt;P class=""&gt;Modern Draft-aware V4 apps&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="215.266px"&gt;&lt;P class=""&gt;extensionAPI.invokeActions()&lt;/P&gt;&lt;/TD&gt;&lt;TD width="308.828px"&gt;&lt;P class=""&gt;Bound + Unbound actions, multi-select, V2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256.172px"&gt;&lt;P class=""&gt;Classic V2 List Report/Object Page&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class=""&gt;That’s the entire toolbox for custom code inside Fiori elements — no need to switch to freestyle unless you want total UI freedom. Jump into the repo, press the &lt;EM&gt;CUST *&lt;/EM&gt; buttons and check the dev-tools network tab to see each API in action.&lt;/P&gt;&lt;H2 id="toc-hId--865294646"&gt;&lt;STRONG&gt;API decision matrix&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Scenario&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Recommended API&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;STRONG&gt;Why&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Fiori elements V4&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;CAP annotations or invokeAction()&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Auto buttons, framework busy-handling&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Fiori elements V2&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;CAP annotations + extensionAPI.invokeActions()&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Multi-select, side-effects, Fiori elements only API&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Freestyle V4&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;bindContext().invoke()&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Modern Promise API (requires UI5 1.123+)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Freestyle V4&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;bindContext().execute()&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;available since 1.37, &lt;SPAN class=""&gt;&lt;STRONG&gt;deprecated&lt;/STRONG&gt;&lt;/SPAN&gt; in 1.123; keeps working for backward compatibility&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Freestyle V2&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;ODataModel.callFunction()&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;no deep parameters, no collection-bound action&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class=""&gt;&lt;STRONG&gt;Rule of thumb&lt;/STRONG&gt; — start with annotations for business logic, move to custom controller code only where UI-specific behavior is needed.&lt;/P&gt;&lt;P class=""&gt;That’s it! Clone the repo, start cds watch, and explore each app to see the different APIs in action.&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;Also, create a Pull Request or Issue if a sample implementation is missing to complete the Guide!&lt;/P&gt;&lt;P class=""&gt;Changes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;23.07.2025: Add Collection-bound Actions&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/the-complete-guide-to-calling-actions-in-ui5-with-custom-code/ba-p/14156201"/>
    <published>2025-07-21T09:04:09.143000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cap-ify-ui5-auto-loading-ui5-tooling-extensions-the-cap-plug-in-way/ba-p/14160739</id>
    <title>CAP‑ify UI5: Auto‑Loading UI5 Tooling Extensions the CAP Plug‑in Way</title>
    <updated>2025-07-24T07:23:35.424000+02:00</updated>
    <author>
      <name>Marian_Zeis</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/61</uri>
    </author>
    <content>&lt;P&gt;I was back at Code&amp;nbsp;Connect this year, first enjoying UI5con and then diving straight into reCAP. Both parts of the event were packed with sharp sessions and brilliant people – if you were there, you know the vibe.&lt;/P&gt;&lt;H3 id="toc-hId-1864985972"&gt;&lt;STRONG&gt;Why CAP plug‑ins made me jealous&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;During the reCAP tracks I kept noticing how effortlessly &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Cloud+Application+Programming+Model/pd-p/9f13aee1-834c-4105-8e43-ee442775e5ce" class="lia-product-mention" data-product="100-1"&gt;SAP Cloud Application Programming Model&lt;/a&gt;&amp;nbsp;&amp;nbsp;plug‑ins integrate: install the package, let the plug‑in declare its events, and the framework picks it up – zero YAML, zero boilerpla&lt;/P&gt;&lt;P&gt;In his keynote&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/42075"&gt;@pmuessig&lt;/a&gt;&amp;nbsp; demoed something similar for UI5: a flag &lt;STRONG&gt;--rte&lt;/STRONG&gt; for &lt;A href="https://github.com/ui5-community/ui5-ecosystem-showcase/tree/main/packages/ui5-tooling-modules" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;EM&gt;ui5-tooling-modules&lt;/EM&gt;.&lt;/A&gt; It triggers an &lt;EM&gt;npm postinstall&lt;/EM&gt; script that writes the module into ui5.yaml, so you can use it right away. Nice – but my dream is the next step: UI5 tooling extensions that behave like CAP plug‑ins and “just work” after npm install.&lt;/P&gt;&lt;H3 id="toc-hId-1668472467"&gt;&lt;STRONG&gt;Enter &lt;EM&gt;ui5-plugin-loader&lt;/EM&gt; – a Proof of Concept (PoC)&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;That idea wouldn’t leave me alone, so – still sitting in the Audimax while listening to reCAP Sessions – I hacked together a proof&amp;nbsp;of&amp;nbsp;concept: &lt;STRONG&gt;ui5‑plugin‑loader(&lt;A href="https://www.npmjs.com/package/ui5-plugin-loader" target="_self" rel="nofollow noopener noreferrer"&gt;npmjs&lt;/A&gt; / &lt;A href="https://github.com/marianfoo/ui5-plugin-loader" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub Repo&lt;/A&gt;)&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Disclaimer:&lt;/EM&gt; The loader is a proof of concept, written for exploration. It’s not production‑ready and doesn’t match the polish of official extensions. Also 100% vibe-coded with ChatGPT and Cursor and claude-4.&lt;/P&gt;&lt;H3 id="toc-hId-1471958962"&gt;&lt;STRONG&gt;What the PoC currently does&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Scans package.json for UI5 tooling extensions.&lt;/LI&gt;&lt;LI&gt;Loads them in a predictable order (stringreplace → transpile → modules → livereload → rest).&lt;/LI&gt;&lt;LI&gt;Applies sensible defaults, yet lets you &lt;EM&gt;disable&lt;/EM&gt; or &lt;EM&gt;override&lt;/EM&gt; anything via ui5.yaml.&lt;/LI&gt;&lt;LI&gt;Provides fallback manifests for common extensions that do not ship their own.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1275445457"&gt;&lt;STRONG&gt;How it works under the hood&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Schema‑driven defaults&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Each extension can ship a ui5-plugin-loader.json that follows a tiny &lt;A href="https://github.com/marianfoo/ui5-plugin-loader/blob/main/schema/ui5-plugin-loader.schema.json" target="_self" rel="nofollow noopener noreferrer"&gt;JSON schema&lt;/A&gt;. If it does, the loader reads defaults straight from the package. For extensions that don’t, fallback manifests live in the loader itself.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Ordering&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;The same schema lets an extension say “run me before X” or “after&amp;nbsp;Y”. The algorithm is simple – good enough for demos, not bullet‑proof for mission‑critical builds.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;No public runtime API&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;UI5&amp;nbsp;Tooling&amp;nbsp;4.0 lacks an official way to register middleware or tasks on the fly, so the loader &lt;EM&gt;requires&lt;/EM&gt; each package directly, calls its factory, and chains the resulting Express handlers. A working hack – but fragile.&lt;/P&gt;&lt;H3 id="toc-hId-1078931952"&gt;&lt;STRONG&gt;Overriding in ui5.yaml&lt;/STRONG&gt;&lt;/H3&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;server:
  customMiddleware:
    - name: ui5-plugin-loader
      afterMiddleware: compression
      configuration:
        disable:
          - ui5-middleware-livereload
        override:
          ui5-tooling-transpile-middleware:
            configuration:
              debug: true&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;disable&lt;/STRONG&gt; – turns extensions off.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;override&lt;/STRONG&gt; – patches order or configuration.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-882418447"&gt;&lt;STRONG&gt;Does it run?&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Yes. Clone the repo and run the &lt;A href="https://github.com/marianfoo/ui5-plugin-loader/tree/main/sample-app" target="_self" rel="nofollow noopener noreferrer"&gt;sample app&lt;/A&gt; with&amp;nbsp;npm start, and the console shows the loader discovering manifests, loading middlewares, and serving your app. Add or remove an extension in package.json, restart, and watch the chain rearrange itself.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;➜  sample-app git:(main) ✗ npm start

&amp;gt; com.pluginloader@1.0.0 start
&amp;gt; ui5 serve --open index.html

info graph:helpers:ui5Framework Using SAPUI5 version: 1.136.3
info server:custom-middleware:ui5-plugin-loader Starting UI5 Plugin Loader pipeline...
warn server:custom-middleware:ui5-plugin-loader Unknown configuration key 'configuration' - ignoring
warn server:custom-middleware:ui5-plugin-loader Unknown configuration key 'middlewareName' - ignoring
info server:custom-middleware:ui5-plugin-loader Found manifest for ui5-tooling-transpile in fallback directory
info server:custom-middleware:ui5-plugin-loader Found manifest for ui5-middleware-livereload in fallback directory
info server:custom-middleware:ui5-plugin-loader Pipeline completed: 2 middleware, 1 tasks (2ms)
warn server:custom-middleware:ui5-plugin-loader Found 2 middleware configurations, but dynamic registration is not supported.
warn server:custom-middleware:ui5-plugin-loader Please configure middleware statically in ui5.yaml using the discovered configurations:
warn server:custom-middleware:ui5-plugin-loader   - name: ui5-tooling-transpile-middleware
warn server:custom-middleware:ui5-plugin-loader     afterMiddleware: compression
warn server:custom-middleware:ui5-plugin-loader   - name: ui5-middleware-livereload
warn server:custom-middleware:ui5-plugin-loader     afterMiddleware: compression
info server:custom-middleware:ui5-plugin-loader UI5 Plugin Loader completed: registered 2 middlewares, 1 tasks
Server started
URL: http://localhost:8080&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;My UI5 Freestyle Typescript App generated with easy-ui5 works!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Marian_Zeis_0-1753335057465.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290623i605758D176CC4913/image-size/large?v=v2&amp;amp;px=999" role="button" title="Marian_Zeis_0-1753335057465.png" alt="Marian_Zeis_0-1753335057465.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-685904942"&gt;&lt;STRONG&gt;Real‑world value – or not?&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;The PoC is handy for &lt;EM&gt;quick demo apps&lt;/EM&gt; or internal prototypes where you want TypeScript, modules, and livereload without touching YAML. For serious projects you still end up fine‑tuning ui5.yaml, and the loader cannot hide that complexity. Peter’s approach – let each npm package update ui5.yaml during &lt;EM&gt;postinstall&lt;/EM&gt; – might remain the cleaner path until UI5 Tooling gains native plug‑in discovery.&lt;/P&gt;&lt;P&gt;Another argument against relying on &lt;STRONG&gt;ui5‑plugin‑loader&lt;/STRONG&gt; came from the UI5&amp;nbsp;Tooling team at this year’s UI5con (&lt;A href="https://github.com/flovogt/talks/blob/main/2025/UI5con2025_UI5Tools.pdf" target="_self" rel="nofollow noopener noreferrer"&gt;slides&lt;/A&gt; / &lt;A href="https://youtube.com/live/0D0_M4RDiZY" target="_self" rel="nofollow noopener noreferrer"&gt;livestream&lt;/A&gt;) . With UI5&amp;nbsp;CLI&amp;nbsp;v5 (&lt;A href="https://github.com/SAP/ui5-tooling/issues/976" target="_self" rel="nofollow noopener noreferrer"&gt;Roadmap&lt;/A&gt;) several widely used extensions could become part of the core: the transpile feature, &lt;EM&gt;&lt;A class="" title="ui5-tooling-modules" href="https://github.com/ui5-community/ui5-ecosystem-showcase/tree/main/packages/ui5-tooling-modules" target="_blank" rel="noopener nofollow noreferrer"&gt;ui5-tooling-modules&lt;/A&gt;&amp;nbsp;&lt;/EM&gt;and &lt;EM&gt;&lt;A class="" title="ui5-middleware-serveframework" href="https://github.com/ui5-community/ui5-ecosystem-showcase/tree/main/packages/ui5-middleware-serveframework" target="_blank" rel="noopener nofollow noreferrer"&gt;ui5-middleware-serveframework&lt;/A&gt;&lt;/EM&gt;&amp;nbsp;(according to the slide deck, even if it wasn’t stated outright).&lt;/P&gt;&lt;P&gt;Once these capabilities ship out of the box, projects will need fewer third‑party extensions and the related entries in ui5.yaml will largely disappear.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Marian_Zeis_0-1753303908904.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290589iE6CCB342A805E798/image-size/large?v=v2&amp;amp;px=999" role="button" title="Marian_Zeis_0-1753303908904.png" alt="Marian_Zeis_0-1753303908904.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-489391437"&gt;&lt;STRONG&gt;Questions for the community&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Should UI5&amp;nbsp;Tooling grow native plug‑in discovery?&lt;/LI&gt;&lt;LI&gt;Would a shared schema for default config help?&lt;/LI&gt;&lt;LI&gt;Do we need an official runtime registration API?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cap-ify-ui5-auto-loading-ui5-tooling-extensions-the-cap-plug-in-way/ba-p/14160739"/>
    <published>2025-07-24T07:23:35.424000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/uploading-attachment-with-cap-js-attachment-plugins-but-via-external-app/ba-p/14147330</id>
    <title>Uploading attachment with cap-js/attachment plugins but via External App/Postman</title>
    <updated>2025-07-24T09:08:43.209000+02:00</updated>
    <author>
      <name>chrisobar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/845878</uri>
    </author>
    <content>&lt;P&gt;If anyone here are struggling uploading attachments via external app to &lt;STRONG&gt;cap-js/attachments&lt;/STRONG&gt;, I am writing this blog to showcase how to upload attachments on the plugins via external applications.&lt;/P&gt;&lt;P&gt;The blog shall include:&lt;/P&gt;&lt;P&gt;1. Pre-requisites&lt;/P&gt;&lt;P&gt;2. Example 1. via Postman&lt;/P&gt;&lt;P&gt;3. Example 2. via External App (React)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Pre-requisites: cap-js/attachment&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You have extended your current entity for example:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_0-1751980368296.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284030i3E65DD76A2FC1CE5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_0-1751980368296.png" alt="chrisobar_0-1751980368296.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Attachment entity accepts the following field below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_1-1751980478628.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284031iD0E50B9FD39F02D2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_1-1751980478628.png" alt="chrisobar_1-1751980478628.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The fields above are important and to be used for your JSON Body parameters (can leave status as blank as it uses '&lt;STRONG&gt;Unscanned&lt;/STRONG&gt;' as default). See below sample scenarios on how we can upload attachment:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Example 1. (via Postman)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;**Other API tools are doable&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In this case, we require an existing entry in our table/fiori app.&lt;/P&gt;&lt;P&gt;Here are the steps:&lt;/P&gt;&lt;P&gt;1. Retrieve a single entry from your entity, copy the link and add /YourAttachmentEntity that you extended. (On my case, discount_attachment)&lt;/P&gt;&lt;P&gt;Ex:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_3-1751981390255.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284056iBE13F1B966BBFC55/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_3-1751981390255.png" alt="chrisobar_3-1751981390255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. Follow the entity fields then replicate it, then attach your desired parameters on the body as raw - JSON format&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_4-1751981481494.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284061i18F93B46BA174AFC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_4-1751981481494.png" alt="chrisobar_4-1751981481494.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;(Convert your file to base64. In my case I attached an image, png format)&lt;/P&gt;&lt;P&gt;3. Send the request, you will see that it responded successfully. Go back to your Fiori app to verify if the attachment reflected:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_5-1751981587156.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284062i392735186A50F1A7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_5-1751981587156.png" alt="chrisobar_5-1751981587156.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_8-1751981935102.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284070i0538D102CDCD1200/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_8-1751981935102.png" alt="chrisobar_8-1751981935102.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_7-1751981734557.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284064iA81690ED011DFFEC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_7-1751981734557.png" alt="chrisobar_7-1751981734557.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Example 2. (External App)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I have developed a React App for POC purposes. In this scenario, the data should be created first, then update that same entry using the ID, then upload the attachment via HTTP POST.&amp;nbsp; Let's breakdown:&lt;/P&gt;&lt;P&gt;1. Upload attachment as input='file', bind it in form data including all the parameters:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_9-1751982052158.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284071iA0F0CE6822C0130A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_9-1751982052158.png" alt="chrisobar_9-1751982052158.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. Build your logic for your initial creation.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_10-1751982176378.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284073iE2AFE797AA5B9623/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_10-1751982176378.png" alt="chrisobar_10-1751982176378.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; My .ENV variable contains the base odata URL (/odata/v4/......, not the whole http url)&lt;/P&gt;&lt;P&gt;3. Convert the file from input='file' to base64 via JS logic, then bind the OData URL with your entity keys and the HTTP body parameters (refer to Attachment Entity fields and Postman example above).&amp;nbsp; then proceed OData call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_15-1751982778767.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284082i20CC907D75921644/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_15-1751982778767.png" alt="chrisobar_15-1751982778767.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;My form will display a successful message and it should reflect on the database/fiori app as well.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_13-1751982513662.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284080i196C2C1646A41D1A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_13-1751982513662.png" alt="chrisobar_13-1751982513662.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_14-1751982541889.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284081i48304E0EF638EEFE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_14-1751982541889.png" alt="chrisobar_14-1751982541889.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This blog demonstrates how SAP CAP can interface seamlessly with external apps to enhance attachment handling across varied use cases. By abstracting the upload and retrieval logic via an API layer, the approach supports modular features in both admin dashboards and customer-facing applications. Despite initial challenges around payload structuring and authorization, the solution remains scalable, secure, and adaptable to different frontend contexts.&lt;/P&gt;&lt;P&gt;Let me know if you have any further questions or wish to communicate, just comment below the comment section.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/uploading-attachment-with-cap-js-attachment-plugins-but-via-external-app/ba-p/14147330"/>
    <published>2025-07-24T09:08:43.209000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-step-by-step-guide-to-implementing-an-excel-upload-button-in-a-fiori-app/ba-p/14156420</id>
    <title>A Step-by-Step Guide to Implementing an Excel Upload Button in a Fiori App using RAP</title>
    <updated>2025-07-24T09:18:19.224000+02:00</updated>
    <author>
      <name>KPShekhar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1617455</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735155555"&gt;&lt;STRONG&gt;Live Demo&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Here is a short video demonstrating the final Excel upload functionality in action.&lt;/P&gt;&lt;P class=""&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FcFcxJPgTAa8%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DcFcxJPgTAa8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FcFcxJPgTAa8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="Excel Upload Button in SAP RAP Fiori Application Demo Run" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For this demonstration, I've built a simple RAP application with a V4 UI. The application features an "Employee" table with three fields. The base of the application was created using the RAP generator, and I've also included early numbering logic for the&amp;nbsp;&lt;/SPAN&gt;Employee ID.&lt;/P&gt;&lt;H2 id="toc-hId-1538642050"&gt;&lt;STRONG&gt;Step 1: Create a Fiori Project&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;To begin, create a new SAP Fiori project using the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;List Report&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;template. This will serve as the foundation for our application.&lt;/P&gt;&lt;H2 id="toc-hId-1342128545"&gt;&lt;STRONG&gt;Step 2: Add a Custom Button&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;With the project set up, the next step is to add a custom button. You can do this by using the open guided development feature. From there, choose the option to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Add a Custom Action to a Page Using Extensions&lt;/STRONG&gt;. Follow the prompts in the guide to insert the necessary code snippets for the "Excel Upload" button.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.33.43 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288514i7A9DB78C413A5FF8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.33.43 PM.png" alt="Screenshot 2025-07-18 at 12.33.43 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.36.47 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288515i92DDB5C0BBCE2331/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.36.47 PM.png" alt="Screenshot 2025-07-18 at 12.36.47 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;or&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1145615040"&gt;&lt;STRONG&gt;Step 2: Configure the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;File&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file is the application descriptor, defining its structure, data sources, and routing. To add the "Excel Upload" button, you need to modify this file to define a custom action and extend the standard List Report controller with our custom logic&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;You can either use the "Add a Custom Action to a Page Using Extensions" option in the guided development tool or update the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file directly with the following configuration&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Pay close attention to the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;controlConfiguration&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;extends&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;sections, which are key to enabling this functionality.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "_version": "1.53.0",
  "sap.app": {
    "id": "uploadempexcel",
    "type": "application",
    "i18n": "i18n/i18n.properties",
    "applicationVersion": {
      "version": "0.0.1"
    },
    "title": "{{appTitle}}",
    "description": "{{appDescription}}",
    "resources": "resources.json",
    "sourceTemplate": {
      "id": "@sap/generator-fiori:lrop",
      "version": "1.18.2",
      "toolsId": "f8a70d19-c3d7-40bf-9b4b-03ba34f86143"
    },
    "dataSources": {
      "mainService": {
        "uri": "/sap/opu/odata4/sap/zui_upload_emp_o4/srvd/sap/zui_upload_emp_o4/0001/",
        "type": "OData",
        "settings": {
          "annotations": ["annotation"],
          "localUri": "localService/mainService/metadata.xml",
          "odataVersion": "4.0"
        }
      }
    }
  },
  "sap.ui5": {
    "flexEnabled": true,
    "dependencies": {
      "minUI5Version": "1.114.9",
      "libs": {
        "sap.m": {},
        "sap.ui.core": {},
        "sap.fe.templates": {}
      }
    },
    "routing": {
      "routes": [
        {
          "pattern": ":?query:",
          "name": "ZC_UPLOAD_EMPList",
          "target": "ZC_UPLOAD_EMPList"
        }
      ],
      "targets": {
        "ZC_UPLOAD_EMPList": {
          "type": "Component",
          "id": "ZC_UPLOAD_EMPList",
          "name": "sap.fe.templates.ListReport",
          "options": {
            "settings": {
              "contextPath": "/ZC_UPLOAD_EMP",
              "controlConfiguration": {
                "@com.sap.vocabularies.UI.v1.LineItem": {
                  "actions": {
                    "uploadExcelController.controller": {
                      "press": ".extension.uploadempexcel.ext.controller.uploadExcelController.uploadExcel",
                      "visible": true,
                      "enabled": true,
                      "requiresSelection": false,
                      "text": "Upload Excel"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "extends": {
      "extensions": {
        "sap.ui.controllerExtensions": {
          "sap.fe.templates.ListReport.ListReportController": {
            "controllerName": "uploadempexcel.ext.controller.uploadExcelController"
          }
        }
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-949101535"&gt;&lt;STRONG&gt;Step 3: Create a Fragment for the Pop-up Screen&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;You'll need to create a fragment in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;ext&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;folder. This fragment will define the pop-up screen that appears when a user clicks the "Excel Upload" button.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.43.56 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288516i792D93DDC3EE4AF3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.43.56 PM.png" alt="Screenshot 2025-07-18 at 12.43.56 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:upload="sap.m.upload"&amp;gt;
    &amp;lt;Dialog id="uploadDialogSet" title="Excel Upload"&amp;gt;
        &amp;lt;content&amp;gt;
            &amp;lt;upload:UploadSet
                id="uploadSet"
                maxFileNameLength="200"
                fileTypes="xlsx, xls"
                afterItemAdded=".onAfterItemAdded"
                afterItemRemoved=".onAfterItemRemoved"
                uploadEnabled="true"
                /&amp;gt;
        &amp;lt;/content&amp;gt;
        &amp;lt;!-- CORRECTED: Changed from &amp;lt;buttons&amp;gt; to &amp;lt;beginButton&amp;gt; and &amp;lt;endButton&amp;gt; --&amp;gt;
        &amp;lt;beginButton&amp;gt;
            &amp;lt;Button id="idUploadB" text="Upload" press=".onUploadPress" type="Emphasized" enabled="false"/&amp;gt;
        &amp;lt;/beginButton&amp;gt;
        &amp;lt;endButton&amp;gt;
            &amp;lt;Button id="idCancelB" text="Cancel" press=".onCloseDialog" /&amp;gt;
        &amp;lt;/endButton&amp;gt;
    &amp;lt;/Dialog&amp;gt;
&amp;lt;/core:FragmentDefinition&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-752588030"&gt;&lt;STRONG&gt;Step 4: Implement the Controller Logic&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;The main logic for handling the file upload is contained within the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;uploadExcelController.controller.js&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file. You can adapt the code below for your own application. Make sure to adjust the file name and payload column names to fit your specific needs.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define(
  [
    "sap/ui/core/mvc/ControllerExtension",
    "sap/m/MessageToast",
    "sap/ui/core/Fragment",
    "xlsx",
  ],
  function (ControllerExtension, MessageToast, Fragment, XLSX) {
    "use-strict";

    return ControllerExtension.extend(
      "uploadempexcel.ext.controller.uploadExcelController",
      {
        _pDialog: null,
        _file: null,

        uploadExcel: function () {
          if (!this._pDialog) {
            this._pDialog = Fragment.load({
              id: this.base.getView().getId(),
              name: "uploadempexcel.ext.fragment.uploadExcelFragment",
              controller: this,
            }).then(
              function (oDialog) {
                this.base.getView().addDependent(oDialog);
                return oDialog;
              }.bind(this)
            );
          }

          this._pDialog.then(
            function (oDialog) {
              oDialog.open();
              oDialog.getContent()[0].removeAllItems();
              this._file = null;
              var oUploadButton = oDialog.getBeginButton();
              if (oUploadButton) {
                oUploadButton.setEnabled(false);
              }
            }.bind(this)
          );
        },

        onCloseDialog: function () {
          this._pDialog.then(function (oDialog) {
            oDialog.close();
          });
        },

        onAfterItemAdded: function (oEvent) {
          this._file = oEvent.getParameter("item").getFileObject();
          if (this._file) {
            MessageToast.show(
              "File '" + this._file.name + "' is ready for upload."
            );
          }
          this._pDialog.then(
            function (oDialog) {
              var oUploadButton = oDialog.getBeginButton();
              if (oUploadButton) {
                oUploadButton.setEnabled(!!this._file);
              }
            }.bind(this)
          );
        },

        onAfterItemRemoved: function (oEvent) {
          this._file = null;
          this._pDialog.then(function (oDialog) {
            var oUploadButton = oDialog.getBeginButton();
            if (oUploadButton) {
              oUploadButton.setEnabled(false);
            }
          });
          MessageToast.show("File removed.");
        },

        onUploadPress: function () {
          if (!this._file) {
            MessageToast.show("Please select a file first.");
            return;
          }

          var oReader = new FileReader();
          oReader.onload = function (e) {
            try {
              var data = e.target.result;
              var workbook = XLSX.read(data, { type: "buffer" });
              var sheetName = workbook.SheetNames[0];
              var excelData = XLSX.utils.sheet_to_row_object_array(
                workbook.Sheets[sheetName]
              );

              if (excelData.length &amp;gt; 0) {
                this._callOdataService(excelData);
              } else {
                MessageToast.show("No data found in the Excel file.");
              }
            } catch (error) {
              MessageToast.show("Error reading Excel file: " + error.message);
            }
          }.bind(this);

          oReader.readAsArrayBuffer(this._file);
        },

        _callOdataService: function (excelData) {
          try {
            // --- START: FINAL CORRECTED CODE ---
            // Get the main OData V4 model from the view.
            var oModel = this.base.getView().getModel();

            // Create a ListBinding directly for the entity set of the List Report.
            // The path MUST match the 'contextPath' in your manifest.json for the List Report target.
            var oListBinding = oModel.bindList("/ZC_UPLOAD_EMP");
            // --- END: FINAL CORRECTED CODE ---

            if (!oListBinding) {
              // This error is now highly unlikely to occur.
              throw new Error(
                "Could not create a ListBinding for the path /ZC_UPLOAD_EMP."
              );
            }

            excelData.forEach(function (rowData) {
              // IMPORTANT: Make sure your Excel column headers match exactly
              var oPayload = {
                //EmpID: rowData.EmployeeID.toString(), auto generated by Early Numbering in RAP Application
                Empname: rowData.EmployeeName.toString(),
                Contact: rowData.Contact.toString(),
              };
              // The create operation is performed on the ListBinding instance.
              oListBinding.create(oPayload);
            });

            MessageToast.show("Uploading " + excelData.length + " records...");

            // The model holds the batch queue, so we submit the changes on the model.
            oModel
              .submitBatch("$auto")
              .then(
                function () {
                  MessageToast.show("Data uploaded successfully.");
                  this.base.getExtensionAPI().refresh(); // Refresh the table to show new data
                  this.onCloseDialog();
                }.bind(this)
              )
              .catch(function (oError) {
                MessageToast.show("Error during upload: " + oError.message);
              });
          } catch (error) {
            MessageToast.show("Error processing data: " + error.message);
          }
        },
      }
    );
  }
);&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-556074525"&gt;&lt;STRONG&gt;Dependencies&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Before you can run the application, you'll need to install the necessary dependencies. You can do this by running the following commands in your terminal.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm i ui5-tooling-modules
npm i xlsx&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;&lt;SPAN&gt;We also need to update your&amp;nbsp;&lt;/SPAN&gt;ui5.yaml&lt;SPAN&gt;&amp;nbsp;file by adding the following custom tasks.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;builder:
customTasks:
- name: ui5-tooling-modules-task
afterTask: replaceVersion
- name: ui5-tooling-modules-middleware
afterMiddleware: compression&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-359561020"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;By following these steps, you can add a fully functional Excel upload feature to your SAP Fiori application. This enhancement provides a more convenient way for users to handle bulk data uploads, ultimately improving the user experience. I have also prepared a demo Excel file with sample data that you can use for testing purposes.&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-step-by-step-guide-to-implementing-an-excel-upload-button-in-a-fiori-app/ba-p/14156420"/>
    <published>2025-07-24T09:18:19.224000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-look-back-at-codeconnect-2025/ba-p/14161110</id>
    <title>A Look Back At CodeConnect 2025</title>
    <updated>2025-07-28T14:30:39.741000+02:00</updated>
    <author>
      <name>SimonVLaursen</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/119538</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1606844488"&gt;A Look Back At CodeConnect 2025&lt;/H1&gt;&lt;P&gt;&lt;EM&gt;It's been almost 2 weeks now since I participated in the 2025 CodeConnect event, which was actually my first in-person CodeConnect ever.&lt;/EM&gt;&lt;BR /&gt;&lt;EM&gt;I would've participated in person sooner, but getting tickets is akin to trying to get the most popular item on Black Friday, it requires speed, precision and luck!&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;But enough rambling about the tickets! Let's take a look back at my journey to CodeConnect 2025.&lt;/EM&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1539413702"&gt;UI5Con 2025&lt;/H2&gt;&lt;P&gt;I'm going to skip the very first day of CodeConnect, mainly due to it being spent in a car for 16 hours, as me and my colleagues made the journey from the northern part of Jutland to St. Leon Rot.&lt;BR /&gt;So for us, the conference didn't start until day 2 with UI5Con, and that was some start.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image (5).jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290732i8A23A75D2E4027DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image (5).jpeg" alt="Image (5).jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Upon arrival at the building, it was straight into networking and trying to decide what sessions were most interesting to participate in.&lt;BR /&gt;We ended up doing a divide and conquer strategy in our group to get the most out of the day, with of course a focus on getting to the hands-on sessions.&lt;/P&gt;&lt;P&gt;My day quickly became side-tracked as I caught up with both old and new faces in my effort to connect with all the other developers present at the event.&lt;BR /&gt;Which, to be honest, for a mostly backend/cloud guy like me wasn't all bad. While I do enjoy a tango with the frontend from time to time, my heart belongs to what goes on behind the scenes.&lt;/P&gt;&lt;P&gt;But I did catch a lot of good talks still; so here are my take-aways from the first real day at CodeConnect:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Ownership of styling is slowly being handed back to the developer, meaning we can now make proper custom components for UI5 that style correctly with the themes such as Horizon.&lt;/LI&gt;&lt;LI&gt;Still no clear release date for UI5 v2, but we do have a legacy free 1.136 out there now that we can utilize and prepare with&lt;/LI&gt;&lt;LI&gt;Promise for UI5 developers that keep in line with the UI5 Linter, that their code will be lift and shift (i.e. go use the linter asap!)&lt;/LI&gt;&lt;LI&gt;The UI5 repository has completed its moving phase and is now living in its own repository&lt;/LI&gt;&lt;LI&gt;Accessibility, much like everywhere else in the developer space at the moment, is the talk of the town, and SAP is doing a lot of improvements on this front&lt;/LI&gt;&lt;LI&gt;2 test runners were presented as the replacements for the deprecated Karma runner. I know that I am leaning the most towards the WDI5 route due to it working as a more complete suite.&lt;/LI&gt;&lt;LI&gt;Webcomponents are the main focus going forward, and even though there is no timestamp on it, it seems like it will replace many of our current components going forward&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;That was pretty much my experience and take-aways for the first day there, and with it we wrapped up the UI5Con with some great food before heading back to the hotel.&lt;BR /&gt;The next for me, I knew would be something special.&lt;/P&gt;&lt;H2 id="toc-hId-1342900197"&gt;reCAP 2025&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image (4).jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290725i12EDCA87F0BC4BA9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image (4).jpeg" alt="Image (4).jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Second day for me at CodeConnect started out with a great opening key note by Daniel Hutzel. Although he ran out of time by the end, I wish we could've listened to him for just a little while longer.&lt;/P&gt;&lt;P&gt;The key take-away of this keynote however, was extremely clear. Over the last year, the focus by the CAP team has really been on minimizing the footprint of the CAP/CDS install while optimizing and improving the feature set of the framework.&lt;BR /&gt;And from what we were presented, that definitely looked like it came out as a success. As a developer that uses CAP on a daily basis, both for plugin development and end-user projects, I can definitely say that I have enjoyed the improvements so far.&lt;/P&gt;&lt;P&gt;So a kudos to the CAP team is definitely in order on this! (Now we just need it to be open source!)&lt;/P&gt;&lt;P&gt;Unfortunately, I did not have as much time to participate in the many sessions of this day, as much like the day before, the event became more of a networking experience.&lt;BR /&gt;The sessions I did catch however, were absolutely great and definitely something that you should catch up on if you have the chance;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Both sessions by Mike Zaschka (just always a good listen and everybody loves open source!)&lt;/LI&gt;&lt;LI&gt;CAP Tools session by Christian Georgi (because you cannot be a good developer without knowing your tools)&lt;/LI&gt;&lt;LI&gt;Server-side Pre-rendering by Volker Buzek and Wouter Lemaire (a great session with insights into another great open source initiative)&lt;/LI&gt;&lt;LI&gt;CAP Best vs Bad Practices by Daniel Hutzel&lt;/LI&gt;&lt;LI&gt;Gain a superpower by learning how to harness the CDS REPL by DJ Adams (seriously, learn REPL)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;While these were the only sessions I managed to catch, I did however experience something extremely important during the reCAP event, and that was the community.&lt;/P&gt;&lt;P&gt;I got to connect with so many great people and talk about the passion of this side of the industry, and the love we all share for opens source technologies.&lt;/P&gt;&lt;P&gt;I even got the chance to appear on the &lt;A href="https://youtu.be/0PUDy-TkpiQ" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Developer News&lt;/A&gt; to share my own open source contribution (&lt;A href="https://www.linkedin.com/posts/simon-vestergaard-laursen-7b98406a_im-excited-to-announce-the-cap-mcp-plugin-activity-7345337883202879488-NAhN?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAAA63yH0BMm6ssu6DfY9QWAt5VYMMUO0YUu4" target="_self" rel="nofollow noopener noreferrer"&gt;MCP Plugin for CAP&lt;/A&gt;).&lt;/P&gt;&lt;P&gt;And that is something I wouldn't trade for anything.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image (3).jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290724iB2E249D2662D9D4C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image (3).jpeg" alt="Image (3).jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1146386692"&gt;You Should Attend&lt;/H2&gt;&lt;P&gt;I hope it is clear from my post here that going to CodeConnect is an experience, no matter how you plan it. It is an event filled with great people and some great discussions around the subjects we all work with on a daily basis.&lt;/P&gt;&lt;P&gt;Never in a million years would I have imagined that going to CodeConnect would have resulted in me getting to participate in the SAP Developer News, nor that I would get to have great open discussions with other open source contributors.&lt;BR /&gt;It is definitely worth it, so if you get the chance I highly recommend that you participate!&lt;/P&gt;&lt;P&gt;Hopefully I will get the chance to contribute to the speakers list next year!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image (2).jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290722iE880761F19A2E83E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image (2).jpeg" alt="Image (2).jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-look-back-at-codeconnect-2025/ba-p/14161110"/>
    <published>2025-07-28T14:30:39.741000+02:00</published>
  </entry>
</feed>
