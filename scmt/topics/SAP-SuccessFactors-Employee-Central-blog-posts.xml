<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-SuccessFactors-Employee-Central-blog-posts.xml</id>
  <title>SAP Community - SAP SuccessFactors Employee Central</title>
  <updated>2025-09-06T11:14:03.406958+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP SuccessFactors Employee Central/pd-p/73555000100800000773" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP SuccessFactors Employee Central blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/make-fields-mandatory-non-skippable-for-some-login-users-in-a-custom-mdf/ba-p/14156225</id>
    <title>Make fields mandatory/non-skippable for some login users in a Custom MDF Portlet</title>
    <updated>2025-07-31T12:16:56.403000+02:00</updated>
    <author>
      <name>mayukh12340</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/838397</uri>
    </author>
    <content>&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;There can be a Client Requirement of making some fields mandatory/non-skippable in a Custom MDF Portlet for certain login users.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A similar Business Scenario is given below for better understanding&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Business Scenario&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A Client has a Custom Resignation Portlet(Custom MDF Portlet) configured in the People Profile in its SF instance. Client wants when the Manager edits any field value/inserts a record into the Custom Resignation Portlet in the People Profile certain important fields which should be filled up by only the Manager be made mandatory only for them.&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Limitations of MDF Objects&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Unfortunately, we can't use the model version along with Business Rules here as it is applicable for HR Objects, but not for MDF Objects.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Current workaround:&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Error Messages can be used to make the desired fields mandatory/non-skippable.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;The steps are given below as the above business scenario.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create an Error Message using &lt;STRONG&gt;Message Definition&lt;/STRONG&gt;&amp;nbsp;in &lt;STRONG&gt;Manage Data&lt;/STRONG&gt;&lt;STRONG&gt;.&amp;nbsp;&lt;/STRONG&gt;A screenshot of the Message configured is given below.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mayukh12340_5-1752840986284.png" style="width: 571px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288637iC2FFF3FD1E8B21B1/image-dimensions/571x237?v=v2" width="571" height="237" role="button" title="mayukh12340_5-1752840986284.png" alt="mayukh12340_5-1752840986284.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Configure a Business Rule with scenario as&amp;nbsp;&lt;STRONG&gt;Rules for MDF Based Objects&amp;nbsp;&lt;/STRONG&gt;and purpose as &lt;STRONG&gt;Evaluate&lt;/STRONG&gt;. A screenshot of the Business Rule is given below for the login user as Manager.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mayukh12340_2-1752840557579.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288632iDED6FD45EBB5496F/image-size/large?v=v2&amp;amp;px=999" role="button" title="mayukh12340_2-1752840557579.png" alt="mayukh12340_2-1752840557579.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;3. Attach the Business Rule in the&amp;nbsp;&lt;STRONG&gt;Save Rules&amp;nbsp;&lt;/STRONG&gt;section of the Object Configuration(&amp;nbsp;Configure Object Definitions).&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mayukh12340_3-1752840701615.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288634i39B41095FC84C6EE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mayukh12340_3-1752840701615.png" alt="mayukh12340_3-1752840701615.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Final Result&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;When the Manager tries to skip the necessary fields an Error Message is been displayed and the record will not get saved until the fields are filled up.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mayukh12340_6-1752841676395.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288640i298DF7DEE2293FE0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mayukh12340_6-1752841676395.png" alt="mayukh12340_6-1752841676395.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion/Summary&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;Thanks for taking the time to read my blog. I hope the workaround illustrated in my blog&amp;nbsp; will help you to overcome the limitation of the MDF Object which earlier restricted us from making fields mandatory/non-skippable by Business Rules.&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;Please feel free to give your honest feedback and ask any queries in the comment section of this blog. Also please share this blog with your colleagues.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/make-fields-mandatory-non-skippable-for-some-login-users-in-a-custom-mdf/ba-p/14156225"/>
    <published>2025-07-31T12:16:56.403000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/one-click-export-automating-successfactors-ec-new-hire-integration-api/ba-p/14170318</id>
    <title>One-Click Export-Automating SuccessFactors EC New Hire Integration API Document--Optimization</title>
    <updated>2025-08-03T13:04:21.466000+02:00</updated>
    <author>
      <name>Berg_Song</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/44306</uri>
    </author>
    <content>&lt;P&gt;Hello SuccessFolks&lt;/P&gt;&lt;P&gt;In my previous blog posts, I introduced how to utilize a standard and reusable Python script to:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Extract SuccessFactors Employee Central (EC) metadata with attributes&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/one-click-export-automating-successfactors-ec-api-metadata-to-excel/ba-p/14134590" target="_blank"&gt;One-Click Export: Automating SuccessFactors EC API Metadata to Excel &lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Generate the standard new hire upsert API documentation&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/one-click-export-automating-successfactors-ec-standard-new-hire-integration/ba-p/14139376" target="_blank"&gt;One-Click Export: Automating SuccessFactors EC Standard New Hire Integration &lt;/A&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;However, I realized these scripts did not fully address certain integration scenarios and code mapping requirements such as Picklists and MDF values. To bridge these gaps, I’ve enhanced the script with a more structured design.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Note: Because I am concerned that sharing the source code in SAP Community have security risk, please &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/3319"&gt;@ME&lt;/a&gt; in comment if you are interested and I&amp;nbsp;will share it with you in private.&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1736822867"&gt;Enhancement Summary&lt;/H2&gt;&lt;P&gt;No. Feature Description&lt;/P&gt;&lt;TABLE border="1" cellspacing="0" cellpadding="6"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;1&lt;/TD&gt;&lt;TD&gt;More Integration Scenarios&lt;/TD&gt;&lt;TD&gt;Added support for: Report No Show, Hire Data Correction, Rehire with Old Employment, Create New Position before upsert new hire&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;2&lt;/TD&gt;&lt;TD&gt;API Optimization&lt;/TD&gt;&lt;TD&gt;Improved handling for Dependent Info upsert API.&lt;BR /&gt;Added hard-coded Termination eventReason into upsert body.&lt;BR /&gt;Removed unnecessary "EndDate" and "background order" fields.&lt;BR /&gt;Added isPrimary filters for Email, Phone, and NationalId entities.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;3&lt;/TD&gt;&lt;TD&gt;Code-Value Mapping Table&lt;/TD&gt;&lt;TD&gt;Auto-export of picklist values and MDF dropdown values.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4&lt;/TD&gt;&lt;TD&gt;Postman Collection Export&lt;/TD&gt;&lt;TD&gt;Generates a ready-to-import Postman collection for testing and validation.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5&lt;/TD&gt;&lt;TD&gt;Script Refactoring &amp;amp; Improvements&lt;/TD&gt;&lt;TD&gt;Merged all scripts into one structured file and externalized configuration file for better security.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;This enhancement not only improves functionality and coverage but also makes the script easier to maintain, run independently, and adapt to real-world use cases. Feel free to reach out or comment if you have feedback or further enhancement ideas.&lt;/P&gt;&lt;H2 id="toc-hId-1540309362"&gt;README for Script&lt;/H2&gt;&lt;P&gt;Below are the README contents generated to help you understand the features and considerations when implementing these enhancements:&lt;/P&gt;&lt;H3 id="toc-hId-1472878576"&gt;Overview&lt;/H3&gt;&lt;P&gt;The SuccessFactors EC API Toolkit is a comprehensive Python utility designed to interact with SuccessFactors OData APIs, extract metadata, process API responses, and generate standardized API documentation. This toolkit consolidates multiple specialized scripts into a single, well-structured application that provides end-to-end functionality for API management and documentation generation for Employee Central (EC) data.&lt;/P&gt;&lt;H3 id="toc-hId-1276365071"&gt;Features&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;API Data Retrieval:&lt;/STRONG&gt; Connect to SuccessFactors OData APIs and extract entity data&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Metadata Extraction:&lt;/STRONG&gt; Parse XML metadata to understand API structure and field attributes&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Code-Value Mapping:&lt;/STRONG&gt; Extract and process picklist and MDF values and their mappings&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data Enrichment:&lt;/STRONG&gt; Combine API data with metadata for comprehensive documentation&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Document Generation:&lt;/STRONG&gt; Create standardized API documentation with proper formatting&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;API Testing:&lt;/STRONG&gt; Test API endpoints with sample requests and capture responses&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Template Management:&lt;/STRONG&gt; Update API templates with the latest data and formatting&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Postman Collection:&lt;/STRONG&gt; Generate Postman Collection for API testing&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1079851566"&gt;Function Descriptions&lt;/H3&gt;&lt;H4 id="toc-hId-1012420780"&gt;Utility Functions&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;get_filter:&lt;/STRONG&gt; Generates filter strings for API queries&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;clean_metadata_url:&lt;/STRONG&gt; Cleans metadata URLs for proper formatting&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;clean_json:&lt;/STRONG&gt; Removes specific keys from JSON data and modifies URLs&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;autofit_and_style:&lt;/STRONG&gt; Applies formatting to Excel worksheets (column width, headers, borders)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;capitalize_headers:&lt;/STRONG&gt; Capitalizes header row in Excel worksheets&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;reorder_columns:&lt;/STRONG&gt; Reorders columns in Excel worksheets based on a specified order&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;get_valid_sheet_name:&lt;/STRONG&gt; Generates valid Excel sheet names (31 character limit)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;transform_json:&lt;/STRONG&gt; Transforms JSON data by replacing specific keys with predefined values&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;remove_blank_values:&lt;/STRONG&gt; Removes keys with blank values from dictionaries&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-815907275"&gt;XML Metadata Parsing Functions&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;get_text:&lt;/STRONG&gt; Extracts text from XML elements&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;get_sap_tags:&lt;/STRONG&gt; Extracts SAP-specific tags from XML elements&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;get_attr_value:&lt;/STRONG&gt; Gets attribute values from XML elements&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;clean_attr:&lt;/STRONG&gt; Cleans attribute values for proper formatting&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-619393770"&gt;API Data Retrieval Functions&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;get_ec_api_body:&lt;/STRONG&gt; Retrieves API data for specified entity sets&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;extract_ec_odata_api_dictionary:&lt;/STRONG&gt; Extracts API metadata dictionary&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;get_code_value:&lt;/STRONG&gt; Retrieves and processes code-value mappings&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-422880265"&gt;Data Merging and Document Generation Functions&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;enrich_upsert_sheet_with_dictionary:&lt;/STRONG&gt; Enriches upsert sheet with dictionary data&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;enrich_api_entity_sheet:&lt;/STRONG&gt; Enriches API entity sheet with attribute data&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;clean_upsert_and_api_sample:&lt;/STRONG&gt; Cleans upsert data and API sample&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;form_standard_api_document:&lt;/STRONG&gt; Forms the standard API document&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;post_valid_bodies_and_export_response:&lt;/STRONG&gt; Posts valid bodies to API and exports responses&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;update_api_templates:&lt;/STRONG&gt; Updates API templates with the latest data&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-226366760"&gt;Main Functions&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;merge_ec_api_and_metadata:&lt;/STRONG&gt; Combines steps to merge EC API data with metadata&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;form_standard_api_document_full:&lt;/STRONG&gt; Combines steps to form the complete standard API document&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;run_full_pipeline:&lt;/STRONG&gt; Runs the complete API toolkit pipeline&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--174460833"&gt;Output Files&lt;/H3&gt;&lt;P&gt;The toolkit generates several Excel and JSON files during processing:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;1.SF EC Table API Attribute.xlsx&lt;/STRONG&gt;: Contains EC table API attributes&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;2.SF New Hire Integration Standard API TemplateV1.xlsx&lt;/STRONG&gt;: Contains integration templates and master data&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;3.SF EC Field API Attribute.xlsx&lt;/STRONG&gt;: Contains EC field API attributes and metadata&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;4.SF New Hire Sample API Upsert.xlsx&lt;/STRONG&gt;: Contains API sample upsert data&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;5.SF New Hire API Post Preview.xlsx&lt;/STRONG&gt;: Contains API request bodies and responses&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;6.SF Dropdown CodeValue Table.xlsx&lt;/STRONG&gt;: Contains picklist values and their mappings&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;7.SF Standard New Hire API DocumentV1.xlsx&lt;/STRONG&gt;: Contains enriched API documentation&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;8.SF New Hire Postman_Collection Excel.xlsx&lt;/STRONG&gt;: Contains Postman collection data&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;9.SF New Hire Postman_Collection.json&lt;/STRONG&gt;: Contains Postman collection in JSON format&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--77571331"&gt;Source Code&lt;/H2&gt;&lt;P&gt;Below show the core python script to extract SF API metadata and form upsert API document. You could use Cursor, Visual Studio Code or any other IDE with AI copilot to review, update or debug according to your requirement.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Berg_Song_0-1755940682562.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304259i9D5BDA0EECBD130B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Berg_Song_0-1755940682562.png" alt="Berg_Song_0-1755940682562.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--567487843"&gt;Pyton Script&lt;/H3&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
SuccessFactors EC API Toolkit - Comprehensive SuccessFactors EC API Management Tool

This script combines multiple API-related functionalities for SuccessFactors Employee Central:
1. Extract EC API metadata and create data dictionaries
2. Retrieve EC API sample data and field attributes
3. Extract EC code-value mappings from picklists
4. Merge EC API upsert data with metadata for comprehensive documentation
5. Generate standardized API documents for integration
6. Create and test API requests for new hire processes
7. Form Postman Collection for API Testing

The script is designed to be run as a complete pipeline or individual components.
"""

import requests
from requests.auth import HTTPBasicAuth
import openpyxl
from openpyxl.styles import PatternFill, Border, Side
from openpyxl.utils import get_column_letter
import os
import re
import json
import xml.etree.ElementTree as ET
import pandas as pd
import uuid
import sys
import traceback

# Import configuration from config.py
try:
    from config import *
except ImportError:
    print("Error: config.py file not found or contains errors.")
    print("Please ensure config.py exists in the same directory as this script.")
    print("You can create it by copying config_template.py and filling in your credentials.")
    sys.exit(1)

# =============================================================================
# Utility Functions
# =============================================================================

def get_filter(entity):
    """Determine the appropriate filter field based on entity type.
    
    Args:
        entity (str): The entity name to determine filter for
        
    Returns:
        str: The appropriate filter field name for the entity
    """
    if entity.startswith("Emp"):
        return "userId"
    elif entity.startswith("Per"):
        return "personIdExternal"
    elif entity.startswith("Background"):
        return "userId"
    elif entity.startswith("cust"):
        return "externalCode"
    elif entity.startswith("EmpCostDistribution"):
        return "usersSysId"
    elif entity.startswith("PaymentInformationV3"):
        return "worker"
    elif entity.startswith("PaymentInformationDetailV3"):
        return "PaymentInformationV3_worker"
    elif entity.startswith("HireDateChange"):
        return "usersSysId"
    return None

def clean_metadata_url(url):
    """Remove content between parentheses in metadata URLs.
    
    Args:
        url (str): The URL to clean
        
    Returns:
        str: The cleaned URL
    """
    return re.sub(r"\(.*?\)", "", url)

def clean_json(data):
    """Recursively clean JSON data by removing specific keys and cleaning metadata URLs.
    
    Args:
        data: The JSON data to clean (dict, list, or primitive)
        
    Returns:
        The cleaned data structure
    """
    if isinstance(data, dict):
        cleaned = {}
        for k, v in data.items():
            # Remove keys as specified
            if k.startswith("created") or k.startswith("lastModified") or "Nav" in k:
                continue
            # Skip key-value if value is a dict, except for __metadata
            if isinstance(v, dict) and k != "__metadata":
                continue
            # Clean __metadata.url and __metadata.uri recursively
            if k == "__metadata" and isinstance(v, dict):
                if "url" in v:
                    v["url"] = clean_metadata_url(v["url"])
                if "uri" in v:
                    v["uri"] = clean_metadata_url(v["uri"])
            cleaned[k] = clean_json(v)
        return cleaned
    elif isinstance(data, list):
        return [clean_json(item) for item in data]
    elif data is None:
        return ""
    else:
        return data

def autofit_and_style(ws):
    """Apply auto-fit column widths, borders, and styling to a worksheet.
    
    Args:
        ws: The openpyxl worksheet to style
    """
    green_fill = PatternFill(start_color="00FF00", end_color="00FF00", fill_type="solid")
    thin = Side(border_style="thin", color="000000")
    border = Border(left=thin, right=thin, top=thin, bottom=thin)
    # Autofit columns
    for col in ws.columns:
        max_length = 0
        col_letter = get_column_letter(col[0].column)
        for cell in col:
            try:
                if cell.value:
                    max_length = max(max_length, len(str(cell.value)))
            except:
                pass
        ws.column_dimensions[col_letter].width = max_length + 2
    # Autofit rows
    for row in ws.iter_rows():
        for cell in row:
            cell.border = border
    # Green header
    for cell in ws[1]:
        cell.fill = green_fill

def capitalize_headers(ws):
    """Capitalize all header cells in the first row of a worksheet.
    
    Args:
        ws: The openpyxl worksheet to modify
    """
    for cell in ws[1]:
        if cell.value:
            cell.value = str(cell.value).capitalize()

def reorder_columns(ws, desired_order):
    """Reorder columns in a worksheet according to the desired order.
    
    Args:
        ws: The openpyxl worksheet to modify
        desired_order: List of column names in the desired order
    """
    headers = [cell.value for cell in ws[1]]
    headers_lower = [str(h).lower() if h else "" for h in headers]
    desired_order_lower = [h.lower() for h in desired_order]

    # Find indices for desired columns
    ordered_indices = []
    for col in desired_order_lower:
        if col in headers_lower:
            ordered_indices.append(headers_lower.index(col))
    # Add remaining columns sorted by name
    remaining = sorted([i for i, h in enumerate(headers) if i not in ordered_indices], key=lambda x: str(headers[x]).lower())
    ordered_indices += remaining

    # Build new rows with columns in the desired order
    all_rows = list(ws.iter_rows(values_only=True))
    ws.delete_rows(1, ws.max_row)
    for row in all_rows:
        new_row = [row[i] if i &amp;lt; len(row) else "" for i in ordered_indices]
        ws.append(new_row)

def get_valid_sheet_name(entity_name):
    """Create a valid Excel sheet name from an entity name.
    
    Args:
        entity_name (str): The entity name to convert
        
    Returns:
        str: A valid Excel sheet name
    """
    sheet_name = str(entity_name)
    if sheet_name.startswith("Background_"):
        # Always remove the prefix, regardless of length
        sheet_name = sheet_name[len("Background_"):]
    # Truncate to 31 chars if still too long
    if len(sheet_name) &amp;gt; MAX_SHEETNAME_LEN:
        sheet_name = sheet_name[:MAX_SHEETNAME_LEN]
    return sheet_name

def transform_json(json_str, entity_name=None):
    """Transform JSON string by replacing specific values for testing.
    
    Args:
        json_str (str): The JSON string to transform
        entity_name (str, optional): The entity name for context-specific transformations
        
    Returns:
        dict: The transformed JSON data
    """
    # Try to parse JSON (handle single/double quotes)
    try:
        data = json.loads(json_str)
    except Exception:
        data = json.loads(json_str.replace("'", '"'))
    # Replace values as required
    for key in list(data.keys()):
        if key in ["userId", "personIdExternal", "username", "PaymentInformationV3_worker", "worker"]:
            data[key] = TEST_EMPLOYEE_ID
        elif key == "emailAddress":
            data[key] = f"{TEST_EMPLOYEE_ID}@dummy.com"
        elif key == "position":
            data[key] = POSITION
        elif key == "backgroundElementId":
            data[key] = BACKGROUND_ID
        elif key == "eventReason":
            data[key] = EVENT_REASON
        elif key == "EventReason":
            if entity_name == "EmpEmploymentTermination":
                data[key] = TER_EVENT_REASON
            else:
                data[key] = EVENT_REASON
        elif key == "endDate":
            if entity_name == "EmpEmploymentTermination":
                data[key] = NOSHOW_DATE
        elif key == "relatedPersonIdExternal":
            data[key] = RELATED_PERSONIDEXTERNAL
        elif key in ["startDate", "PaymentInformationV3_effectiveStartDate", "effectiveStartDate", "payDate"]:
            # Only replace if entity_name does NOT start with "Background"
            if not (entity_name and str(entity_name).startswith("Background")):
                data[key] = HIRE_DATE
        elif key == "__metadata" and isinstance(data[key], dict):
            if "uri" in data[key]:
                data[key]["uri"] = data[key]["uri"].replace(API_SERVER, TEST_API_SERVER)
    return data

def remove_blank_values(d):
    """Remove keys where value is None or blank string.
    
    Args:
        d (dict): The dictionary to clean
        
    Returns:
        dict: The cleaned dictionary
    """
    return {k: v for k, v in d.items() if v not in [None, ""]}

# =============================================================================
# XML Metadata Parsing Functions
# =============================================================================

def get_text(node, tag):
    """Get text content from an XML node with namespace support.
    
    Args:
        node: The XML node to search in
        tag: The tag name to find
        
    Returns:
        str: The text content or "Null" if not found
    """
    el = node.find(tag, ns)
    return el.text if el is not None else "Null"

def get_sap_tags(doc):
    """Get SAP tag collection from an XML document.
    
    Args:
        doc: The XML document to search in
        
    Returns:
        str: Comma-separated list of tags or "Null" if not found
    """
    tags = doc.find('.//sap:tagcollection', ns)
    if tags is not None:
        return ', '.join([t.text for t in tags.findall('sap:tag', ns)])
    return "Null"

def get_attr_value(node, attr):
    """Get attribute value from an XML node with namespace support.
    
    Args:
        node: The XML node to search in
        attr: The attribute name to find
        
    Returns:
        str: The attribute value or "Null" if not found
    """
    if attr in node.attrib:
        return node.attrib[attr]
    if 'sap:' + attr in node.attrib:
        return node.attrib['sap:' + attr]
    sap_ns = '{http://www.successfactors.com/edm/sap}' + attr
    if sap_ns in node.attrib:
        return node.attrib[sap_ns]
    return "Null"

def clean_attr(attr):
    """Clean attribute name by removing namespace prefixes.
    
    Args:
        attr (str): The attribute name to clean
        
    Returns:
        str: The cleaned attribute name
    """
    return re.sub(r'^\{.*\}', '', attr).replace('sap:', '')

# =============================================================================
# API Data Retrieval Functions
# =============================================================================

def get_ec_api_body():
    """Retrieve API sample data for each entity and export to Excel.
    
    This function queries the API for each entity, cleans the response,
    and exports the results to an Excel file with two sheets:
    1. API Entity - Contains entity, endpoint, and sample JSON
    2. Upsert API Field Attribute - Contains entity, field, and sample value
    """
    api_entity_rows = []
    field_attr_rows = []
    for entity in ENTITY_SETS:
        filter_field = get_filter(entity)
        # If filter_field is blank/None, do not use $filter in the endpoint
        if not filter_field:
            endpoint = f"https://{API_SERVER}/odata/v2/{entity}?$format=json&amp;amp;$top=1"
        else:
            if entity in ["PerNationalId", "PerEmail", "PerPhone"]:
                endpoint = f"https://{API_SERVER}/odata/v2/{entity}?$format=json&amp;amp;$filter={filter_field} eq '{EMPLOYEE_ID}' and isPrimary=true"
            else:
                endpoint = f"https://{API_SERVER}/odata/v2/{entity}?$format=json&amp;amp;$filter={filter_field} eq '{EMPLOYEE_ID}'"
        try:
            resp = requests.get(endpoint, auth=HTTPBasicAuth(USERNAME, PASSWORD), verify=True)
            resp.raise_for_status()
            d = resp.json()
            result = d.get('d', {}).get('results') or d.get('d', {}).get('result', [])
            # If result is blank, try again without filter
            if (isinstance(result, list) and not result) or (isinstance(result, dict) and not result):
                endpoint = f"https://{API_SERVER}/odata/v2/{entity}?$format=json&amp;amp;$top=1"
                resp = requests.get(endpoint, auth=HTTPBasicAuth(USERNAME, PASSWORD), verify=True)
                print(f"Fallback response for {entity}: {resp.text}")
                resp.raise_for_status()
                d = resp.json()
                result = d.get('d', {}).get('results') or d.get('d', {}).get('result', [])
            if isinstance(result, list):
                result = result[0] if result else {}
            elif isinstance(result, dict):
                result = result
            else:
                result = {}
            if "__metadata" in result and "url" in result["__metadata"]:
                result["__metadata"]["url"] = clean_metadata_url(result["__metadata"]["url"])
            cleaned = clean_json(result)
            # Sheet 1
            api_entity_rows.append([entity, endpoint, json.dumps(cleaned, ensure_ascii=False)])
            # Sheet 2
            for k, v in cleaned.items():
                if isinstance(v, (dict, list)):
                    v = str(v)
                field_attr_rows.append([entity, k, v])
        except Exception as e:
            api_entity_rows.append([entity, endpoint, f"Error: {e}"])
            continue

    # Write to Excel
    wb = openpyxl.Workbook()
    ws1 = wb.active
    ws1.title = "API Entity"
    ws2 = wb.create_sheet("Upsert API Field Attribute")

    ws1.append(["Entity", "API Endpoint", "API Sample Upsert"])
    for row in api_entity_rows:
        ws1.append(row)
    autofit_and_style(ws1)

    ws2.append(["Entity", "Field", "Sample Value"])
    for row in field_attr_rows:
        ws2.append(row)
    autofit_and_style(ws2)

    wb.save(EXCEL_FILE)
    print(f"Done. Output: {os.path.abspath(EXCEL_FILE)}")

def extract_ec_odata_api_dictionary():
    """Extract API metadata for each entity and create data dictionaries.
    
    This function downloads metadata for each entity, parses it, and creates
    three Excel sheets:
    1. EC Entity - Entity-level metadata
    2. EC Data API Dictionary - Detailed field metadata
    3. Simple EC Data API Dictionary - Simplified field metadata
    """
    # Download and parse metadata for each entity set
    metadata_trees = {}
    for entity in ENTITY_SETS:
        url = f"https://{API_SERVER}/odata/v2/{entity}/$metadata"
        print(f"Fetching metadata for {entity}...")
        response = requests.get(url, auth=HTTPBasicAuth(USERNAME, PASSWORD), verify=True)
        if response.status_code == 200:
            metadata_trees[entity] = ET.ElementTree(ET.fromstring(response.content))
        else:
            print(f"Failed to fetch metadata for {entity}: {response.status_code}")

    # 1. EC Entity Sheet (collect from all metadata trees)
    entities = []
    entityset_cols = ['Name', 'label', 'creatable', 'updatable', 'upsertable', 'deletable']
    for tree in metadata_trees.values():
        root = tree.getroot()
        for schema in root.findall('.//{http://schemas.microsoft.com/ado/2008/09/edm}Schema'):
            if schema.attrib.get('Namespace') == 'SFODataSet':
                for es in schema.findall('.//EntitySet', ns):
                    doc = es.find('Documentation', ns)
                    summary = get_text(doc, 'Summary') if doc is not None else "Null"
                    longdesc = get_text(doc, 'LongDescription') if doc is not None else "Null"
                    tags = get_sap_tags(doc) if doc is not None else "Null"
                    row = {}
                    for col in entityset_cols:
                        if col == 'Name':
                            row['Name'] = es.attrib.get('Name', 'Null')
                        else:
                            row[col] = get_attr_value(es, col)
                    row['Summary'] = summary
                    row['LongDescription'] = longdesc
                    row['Sap Tagcollection'] = tags
                    entities.append(row)

    df_entities = pd.DataFrame(entities, columns=entityset_cols + ['Summary', 'LongDescription', 'Sap Tagcollection'])

    # 2. EC Data API Dictionary Sheet (collect from all metadata trees)
    rows = []
    all_attrs = set()

    for tree in metadata_trees.values():
        root = tree.getroot()
        for schema in root.findall('.//{http://schemas.microsoft.com/ado/2008/09/edm}Schema'):
            if schema.attrib.get('Namespace') == 'SFOData':
                for et in schema.findall('EntityType', ns):
                    for prop in et.findall('Property', ns):
                        all_attrs.update([clean_attr(a) for a in prop.attrib.keys()])
                    for nav in et.findall('NavigationProperty', ns):
                        all_attrs.update([clean_attr(a) for a in nav.attrib.keys()])

    all_attrs = sorted(all_attrs)
    all_attrs += ["Key", "Entity", "NavigationField"]

    for tree in metadata_trees.values():
        root = tree.getroot()
        for schema in root.findall('.//{http://schemas.microsoft.com/ado/2008/09/edm}Schema'):
            if schema.attrib.get('Namespace') == 'SFOData':
                for et in schema.findall('EntityType', ns):
                    entity_name = et.attrib.get('Name', 'Null')
                    key_names = set()
                    key = et.find('Key', ns)
                    if key is not None:
                        key_names = {pr.attrib.get('Name') for pr in key.findall('PropertyRef', ns)}
                    for prop in et.findall('Property', ns):
                        row = {}
                        for attr in all_attrs:
                            if attr in ["Key", "Entity", "NavigationField"]:
                                continue
                            row[attr] = get_attr_value(prop, attr)
                        row["Key"] = "true" if prop.attrib.get("Name") in key_names else "false"
                        row["Entity"] = entity_name
                        row["NavigationField"] = "false"
                        rows.append(row)
                    for nav in et.findall('NavigationProperty', ns):
                        row = {}
                        for attr in all_attrs:
                            if attr in ["Key", "Entity", "NavigationField"]:
                                continue
                            row[attr] = get_attr_value(nav, attr)
                        row["Key"] = "false"
                        row["Entity"] = entity_name
                        row["NavigationField"] = "true"
                        rows.append(row)

    df_dict = pd.DataFrame(rows, columns=all_attrs)

    # 3. Simple EC Data API Dictionary Sheet
    simple_cols = [
        "Entity", "Name", "label", "Type", "Key", "required", "picklist", "MaxLength", "NavigationField", "creatable", "updatable",
        "visible", "filterable", "sortable", "upsertable"
    ]
    df_simple = df_dict[simple_cols].copy()

    # Sorting: Entity (asc), Name (asc), Key (desc), required (desc)
    df_simple = df_simple.sort_values(
        by=["Entity", "Name", "Key", "required"],
        ascending=[True, True, False, False],
        key=lambda col: col.map(lambda x: 1 if str(x).lower() == "true" else 0) if col.name in ["Key", "required"] else col
    ).reset_index(drop=True)

    # 4. Write to Excel
    with pd.ExcelWriter(EXCEL_OUTPUT_PATH, engine="openpyxl") as writer:
        df_entities.to_excel(writer, sheet_name="EC Entity", index=False)
        df_dict.to_excel(writer, sheet_name="EC Data API Dictionary", index=False)
        df_simple.to_excel(writer, sheet_name="Simple EC Data API Dictionary", index=False)

    # 5. Formatting with openpyxl
    wb = openpyxl.load_workbook(EXCEL_OUTPUT_PATH)
    green_fill = PatternFill(start_color="90EE90", end_color="90EE90", fill_type="solid")
    thin = Side(border_style="thin", color="000000")

    for ws in wb.worksheets:
        # Autofit columns
        for col in ws.columns:
            max_length = 0
            col_letter = col[0].column_letter
            for cell in col:
                try:
                    if cell.value:
                        max_length = max(max_length, len(str(cell.value)))
                except:
                    pass
            ws.column_dimensions[col_letter].width = max_length + 2
        # Add border and green fill for header
        for row in ws.iter_rows():
            for cell in row:
                if cell.value is not None and cell.row == 1:
                    cell.fill = green_fill
                if cell.value is not None:
                    cell.border = Border(left=thin, right=thin, top=thin, bottom=thin)

    wb.save(EXCEL_OUTPUT_PATH)
    print(f"Excel file '{EXCEL_OUTPUT_PATH}' created successfully.")

def get_code_value():
    """Extract picklist code-value mappings and determine if they are picklists or global objects.
    
    This function reads picklist codes from the metadata Excel file,
    queries the API for each code, and exports the results to an Excel file
    with two sheets:
    1. PickListValueV2 - Contains picklist values and attributes
    2. Dropdown List Type - Indicates whether each code is a picklist or global object
    3. picklist code-value - Contains selected columns from PickListValueV2
    """
    # 1. Read picklist codes and upsertable from Excel, join as comma-separated string
    wb = openpyxl.load_workbook(EXCEL_OUTPUT_PATH, data_only=True)
    ws = wb["Simple EC Data API Dictionary"]

    # Find column indices
    picklist_col_idx = None
    upsertable_col_idx = None
    header_row = [cell.value for cell in ws[1]]
    for idx, col_name in enumerate(header_row):
        if col_name and str(col_name).strip().lower() == "picklist":
            picklist_col_idx = idx
        if col_name and str(col_name).strip().lower() == "upsertable":
            upsertable_col_idx = idx
    if picklist_col_idx is None:
        raise Exception("Picklist column not found in sheet.")
    if upsertable_col_idx is None:
        raise Exception("Upsertable column not found in sheet.")

    # Build mapping: picklist value -&amp;gt; upsertable value
    picklist_to_upsertable = {}
    picklist_codes = []
    for row in ws.iter_rows(min_row=2, values_only=True):
        picklist_val = row[picklist_col_idx]
        upsertable_val = row[upsertable_col_idx]
        # Exclude None, blank, and "null" (case-insensitive) values
        if picklist_val and str(picklist_val).strip() and str(picklist_val).strip().lower() != "null":
            picklist_str = str(picklist_val).strip()
            picklist_codes.append(picklist_str)
            picklist_to_upsertable[picklist_str] = upsertable_val

    if not picklist_codes:
        raise Exception("No picklist codes found.")

    # After generating PickListValueV2 sheet, create picklist code-value sheet
    wb_picklist = openpyxl.load_workbook(PICKLIST_OUTPUT_PATH)
    ws_picklist = wb_picklist["PickListValueV2"]
    ws_code_value = wb_picklist.create_sheet("picklist code-value")

    # Define columns to keep
    columns_to_keep = [
        "externalCode", "PickListV2_id", "label_en_US", "optionId",
        "label_th_TH", "status", "label_zh_TW", "label_zh_CN", "upsertable"
    ]

    # Get indices of columns to keep
    header_row = [cell.value for cell in ws_picklist[1]]
    col_indices = []
    for col in columns_to_keep:
        try:
            idx = header_row.index(col)
            col_indices.append(idx)
        except ValueError:
            print(f"Warning: Column {col} not found in PickListValueV2 sheet")

    # Copy selected columns to new sheet
    ws_code_value.append(columns_to_keep)  # Add header

    # Copy data for selected columns
    for row in ws_picklist.iter_rows(min_row=2, values_only=True):
        new_row = [row[idx] for idx in col_indices]
        ws_code_value.append(new_row)

    # Apply styling
    green_fill = PatternFill(start_color="00FF00", end_color="00FF00", fill_type="solid")
    thin = Side(border_style="thin", color="000000")
    border = Border(left=thin, right=thin, top=thin, bottom=thin)

    # Style headers and add borders for all sheets
    for ws in [ws_picklist, ws_code_value]:
        # Header styling
        for cell in ws[1]:
            cell.fill = green_fill
        # Add borders to all cells
        for row in ws.iter_rows():
            for cell in row:
                cell.border = border
        # Autofit columns
        for col in ws.columns:
            max_length = 0
            col_letter = get_column_letter(col[0].column)
            for cell in col:
                try:
                    if cell.value:
                        max_length = max(max_length, len(str(cell.value)))
                except:
                    pass
            ws.column_dimensions[col_letter].width = max_length + 2

    wb_picklist.save(PICKLIST_OUTPUT_PATH)

    # Copy picklist code-value sheet to integration file
    integration_wb = openpyxl.load_workbook(INTEGRATION_FILE)
    
    # Create new sheet between SF Master Data Dictionary and API Template
    sheet_names = integration_wb.sheetnames
    sf_master_idx = sheet_names.index("SF Master Data Dictionary")
    
    # Remove existing sheet if it exists
    if "SF DropdownList Mapping" in integration_wb.sheetnames:
        del integration_wb["SF DropdownList Mapping"]
    
    # Create new sheet at the correct position
    integration_wb.create_sheet("SF DropdownList Mapping", sf_master_idx + 1)
    integration_ws = integration_wb["SF DropdownList Mapping"]
    
    # Copy data from picklist code-value sheet
    for row in ws_code_value.rows:
        integration_ws.append([cell.value for cell in row])
    
    # Apply same styling
    for cell in integration_ws[1]:
        cell.fill = green_fill
    for row in integration_ws.iter_rows():
        for cell in row:
            cell.border = border
    for col in integration_ws.columns:
        max_length = 0
        col_letter = get_column_letter(col[0].column)
        for cell in col:
            try:
                if cell.value:
                    max_length = max(max_length, len(str(cell.value)))
            except:
                pass
        integration_ws.column_dimensions[col_letter].width = max_length + 2

    integration_wb.save(INTEGRATION_FILE)

    # Remove duplicated values while preserving order
    seen = set()
    unique_picklist_codes = []
    for code in picklist_codes:
        if code not in seen:
            unique_picklist_codes.append(code)
            seen.add(code)

    # Format for OData $filter: PickListV2_id in 'A','B','C'
    picklist_code_str = ",".join([f"'{code}'" for code in unique_picklist_codes])
    API_POINT = f"https://{API_SERVER}/odata/v2/PickListValueV2?$format=json&amp;amp;$filter=PickListV2_id in {picklist_code_str}"

    # 2. Query API with basic authentication and handle pagination
    def get_all_picklist_data(api_point):
        all_results = []
        next_url = api_point
        while next_url:
            resp = requests.get(next_url, auth=HTTPBasicAuth(USERNAME, PASSWORD), verify=True)
            resp.raise_for_status()
            d = resp.json()
            results = d.get("d", {}).get("results", [])
            all_results.extend(results)
            # Handle OData pagination: d.__next contains the next page URL if exists
            next_url = d.get("d", {}).get("__next")
        return all_results

    results = get_all_picklist_data(API_POINT)

    # 3. Extract results, filter out unwanted keys, and add upsertable column
    filtered_results = []
    picklistv2_ids_in_output = set()
    for item in results:
        filtered = {}
        picklistv2_id = None
        for k, v in item.items():
            if (
                k == "__metadata"
                or k.endswith("Nav")
                or k.endswith("Val")
                or k.endswith("Value")
                or k.endswith("By")
            ):
                continue
            filtered[k] = v
            if k == "PickListV2_id":
                picklistv2_id = v
        # Add upsertable column
        filtered["upsertable"] = picklist_to_upsertable.get(str(picklistv2_id), "")
        filtered_results.append(filtered)
        if picklistv2_id:
            picklistv2_ids_in_output.add(str(picklistv2_id))

    # 4. Output to Excel (main sheet)
    out_wb = openpyxl.Workbook()
    out_ws = out_wb.active
    out_ws.title = "PickListValueV2"

    # Write header
    if filtered_results:
        header = list(filtered_results[0].keys())
        out_ws.append(header)
        for row in filtered_results:
            out_ws.append([row.get(col, "") for col in header])
    else:
        out_ws.append(["No data found"])

    # 5. Add "Dropdown List Type" sheet
    picklist_type_ws = out_wb.create_sheet("Dropdown List Type")
    picklist_type_ws.append(["PicklistId", "GO or Picklist"])

    # Collect all PickListV2_id from PickListValueV2 sheet (API output)
    picklistv2_ids_in_output = set()
    for row in out_ws.iter_rows(min_row=2, values_only=True):
        # Find the PickListV2_id column index
        if "PickListV2_id" in header:
            idx = header.index("PickListV2_id")
            picklistv2_id = row[idx]
            if picklistv2_id:
                picklistv2_ids_in_output.add(str(picklistv2_id))

    # For each PicklistId in picklist_code_str, check if it exists in PickListV2_id of output
    for code in unique_picklist_codes:
        if str(code) in picklistv2_ids_in_output:
            picklist_type_ws.append([code, "Picklist"])
        else:
            picklist_type_ws.append([code, "GO"])

    out_wb.save(PICKLIST_OUTPUT_PATH)
    print(f"Done. Output: {PICKLIST_OUTPUT_PATH}")

# =============================================================================
# Data Merging and Document Generation Functions
# =============================================================================

def enrich_upsert_sheet_with_dictionary():
    """Enrich the Upsert API Field Attribute sheet with metadata from the dictionary.
    
    This function adds metadata columns to the Upsert API Field Attribute sheet
    by looking up values from the Simple EC Data API Dictionary.
    """
    wb_upsert = openpyxl.load_workbook(EXCEL_FILE)
    ws_upsert = wb_upsert["Upsert API Field Attribute"]

    wb_dict = openpyxl.load_workbook(EXCEL_OUTPUT_PATH, data_only=True)
    ws_dict = wb_dict["Simple EC Data API Dictionary"]

    dict_headers = [cell.value for cell in ws_dict[1]]
    lookup_cols = ["label", "Type", "Key", "required", "picklist", "MaxLength", "NavigationField", "visible", "filterable", "sortable", "upsertable", "creatable", "updatable"]
    entity_idx = dict_headers.index("Entity")
    name_idx = dict_headers.index("Name")
    dict_headers_lower = [str(h).lower() if h else "" for h in dict_headers]
    col_indices = [dict_headers_lower.index(col.lower()) for col in lookup_cols]

    lookup = {}
    for row in ws_dict.iter_rows(min_row=2, values_only=True):
        key = (str(row[entity_idx]), str(row[name_idx]))
        values = [row[i] for i in col_indices]
        lookup[key] = values

    # Add new columns to Upsert API Field Attribute sheet if not already present
    upsert_headers = [cell.value for cell in ws_upsert[1]]
    for i, col in enumerate(lookup_cols, start=3):  # after Entity, Field
        ws_upsert.cell(row=1, column=i+1, value=col)

    # Fill in the matched values
    for row in ws_upsert.iter_rows(min_row=2):
        entity = str(row[0].value)
        field = str(row[1].value)
        values = lookup.get((entity, field), [""] * len(lookup_cols))
        for i, val in enumerate(values, start=3):
            row[i].value = val

    capitalize_headers(ws_upsert)
    autofit_and_style(ws_upsert)
    wb_upsert.save(EXCEL_FILE)
    print("Upsert API Field Attribute sheet enriched with metadata columns.")

def enrich_api_entity_sheet():
    """Enrich the API Entity sheet with additional metadata.
    
    This function adds metadata columns to the API Entity sheet from
    the Person+Employment sheet in the Employee Central API AttributeV2 file.
    """
    wb_upsert = openpyxl.load_workbook(EXCEL_FILE)
    ws_api_entity = wb_upsert["API Entity"]

    wb_ecmeta = openpyxl.load_workbook(EXCEL_OUTPUT_PATH, data_only=True)
    ws_ec_entity = wb_ecmeta["EC Entity"]

    ATTR_FILE = os.path.join(SCRIPT_DIR, EC_TABLE_ATTRIBUTE)
    wb_attr = openpyxl.load_workbook(ATTR_FILE, data_only=True)
    ws_person_emp = wb_attr["Person+Employment"]

    # --- Build lookups ---
    attr_headers = [cell.value for cell in ws_person_emp[1]]
    attr_headers_lower = [str(h).lower() if h else "" for h in attr_headers]
    attr_cols = ["Introduction", "BusinessKeys", "Effective-Date", "PersonEntityElement"]
    attr_indices = [attr_headers_lower.index(col.lower()) for col in attr_cols]
    attr_entity_idx = attr_headers_lower.index("entity")

    # Build a lookup for entity -&amp;gt; values
    attr_lookup = {}
    for row in ws_person_emp.iter_rows(min_row=2, values_only=True):
        key = str(row[attr_entity_idx]).lower()  # Lowercase for case-insensitive match
        values = [row[i] for i in attr_indices]
        attr_lookup[key] = values

    # --- Add missing columns to API Entity sheet ---
    api_headers = [cell.value for cell in ws_api_entity[1]]
    api_headers_lower = [str(h).lower() if h else "" for h in api_headers]
    # Only add columns if not already present
    for col in attr_cols:
        if col.lower() not in api_headers_lower:
            ws_api_entity.cell(row=1, column=ws_api_entity.max_column + 1, value=col)

    # Refresh headers after adding
    api_headers = [cell.value for cell in ws_api_entity[1]]
    api_headers_lower = [str(h).lower() if h else "" for h in api_headers]

    # --- Fill in matched values ---
    for row in ws_api_entity.iter_rows(min_row=2):
        api_entity = str(row[0].value).lower()  # Lowercase for case-insensitive match
        if api_entity in attr_lookup:
            values = attr_lookup[api_entity]
            for idx, val in enumerate(values):
                col_name = attr_cols[idx]
                if col_name.lower() in api_headers_lower:
                    col_idx = api_headers_lower.index(col_name.lower()) + 1  # openpyxl is 1-based
                    ws_api_entity.cell(row=row[0].row, column=col_idx, value=val)

    capitalize_headers(ws_api_entity)
    autofit_and_style(ws_api_entity)
    # Save to new file
    wb_upsert.save(NEW_FILE)
    print(f"API Entity sheet enriched and exported to {NEW_FILE}")

def clean_upsert_and_api_sample():
    """Clean the Upsert API Field Attribute sheet and API Sample Upsert.
    
    This function removes rows and keys based on specific criteria to
    create a cleaner, more focused API document.
    """
    wb = openpyxl.load_workbook(NEW_FILE)
    ws_upsert = wb["Upsert API Field Attribute"]
    ws_api_entity = wb["API Entity"]

    # Get header indices for upsert sheet
    upsert_headers = [cell.value for cell in ws_upsert[1]]
    upsert_headers_lower = [str(h).lower() if h else "" for h in upsert_headers]
    entity_idx = upsert_headers_lower.index("entity")
    field_idx = upsert_headers_lower.index("field")
    upsertable_idx = upsert_headers_lower.index("upsertable")
    sample_value_idx = upsert_headers_lower.index("sample value")  # Add this line

    # Collect rows to delete and keys to remove
    rows_to_delete = []
    keys_to_remove = {}  # {entity: set(fields)}

    for i, row in enumerate(ws_upsert.iter_rows(min_row=2), start=2):
        entity = str(row[entity_idx].value) if row[entity_idx].value else ""
        field = str(row[field_idx].value) if row[field_idx].value else ""
        upsertable = str(row[upsertable_idx].value) if row[upsertable_idx].value else ""
        sample_value = str(row[sample_value_idx].value) if row[sample_value_idx].value else ""
        # Updated Criteria
        if (not upsertable or upsertable.strip() == "false") and field not in ["__metadata","eventReason"]:
            rows_to_delete.append(i)
            keys_to_remove.setdefault(entity, set()).add(field)
            continue
        # Criteria 2 Delete the position,department‘s redundant label field
        if field.lower() in {"operation", "effectivenddate"} or (field.lower() in {"enddate"} and entity != "EmpEmploymentTermination") or any(field.startswith(prefix) for prefix in ("externalName_", "description_", "name_")):
            rows_to_delete.append(i)
            keys_to_remove.setdefault(entity, set()).add(field)
            continue
        # Criteria 3 Remove the redundant upsertable fields in user entity
        if entity == "User" and field not in ["userId", "status", "username", "firstName", "lastName", "__metadata"]:
            rows_to_delete.append(i)
            keys_to_remove.setdefault(entity, set()).add(field)
            continue
        # Criteria 4: Blank sample value for PaymentInformationDetailV3
        if entity == "PaymentInformationDetailV3" and sample_value == "":
            rows_to_delete.append(i)
            keys_to_remove.setdefault(entity, set()).add(field)
            continue
        # Criteria 5: Blank sample value for EmpEmploymentTermination
        if entity == "EmpEmploymentTermination" and sample_value == "" and field not in ["eventReason"]:
            rows_to_delete.append(i)
            keys_to_remove.setdefault(entity, set()).add(field)
            continue

    # Remove rows in reverse order to avoid index shifting
    for i in sorted(rows_to_delete, reverse=True):
        ws_upsert.delete_rows(i)

    # Update API Sample Upsert JSON in API Entity sheet
    api_headers = [cell.value for cell in ws_api_entity[1]]
    api_headers_lower = [str(h).lower() if h else "" for h in api_headers]
    entity_idx_api = api_headers_lower.index("entity")
    api_sample_idx = api_headers_lower.index("api sample upsert")

    for row in ws_api_entity.iter_rows(min_row=2):
        entity = str(row[entity_idx_api].value)
        if entity in keys_to_remove:
            json_str = row[api_sample_idx].value
            if not json_str:
                continue
            # Try to parse as JSON (handle single quotes if needed)
            try:
                # Try normal JSON
                data = json.loads(json_str)
            except Exception:
                # Try replacing single quotes with double quotes for parsing
                try:
                    data = json.loads(json_str.replace("'", '"'))
                except Exception:
                    continue  # skip if can't parse
            # Remove keys
            for key in keys_to_remove[entity]:
                if key in data:
                    del data[key]
            # Write back as JSON string (with ensure_ascii=False for non-ASCII)
            row[api_sample_idx].value = json.dumps(data, ensure_ascii=False)

    wb.save(NEW_FILE)
    print("Redundant rows and keys removed, and API Sample Upsert updated.")

def form_standard_api_document():
    """Generate the standard API document for integration.
    
    This function creates a preview of API requests with transformed values
    for testing and updates the integration document with the preview data.
    """
    wb = openpyxl.load_workbook(NEW_FILE)
    ws = wb["API Entity"]
    headers = [cell.value for cell in ws[1]]
    api_sample_idx = headers.index("Api sample upsert")
    entity_idx = headers.index("Entity")

    # Prepare output workbook
    out_wb = openpyxl.Workbook()
    out_ws = out_wb.active
    out_ws.title = "API Post Preview"
    out_ws.append(["Entity", "API Endpoint", "Body", "Valid Body"])

    for row in ws.iter_rows(min_row=2, values_only=True):
        entity = row[entity_idx]
        json_str = row[api_sample_idx]
        if not json_str:
            continue
        try:
            body = transform_json(json_str, entity)
            valid_body = remove_blank_values(body)
            # Special handling for User entity __metadata.uri
            if entity == "User" and "__metadata" in valid_body and isinstance(valid_body["__metadata"], dict):
                uri = valid_body["__metadata"].get("uri", "")
                # Only append if not already present
                if not uri.endswith(f"('{EMPLOYEE_ID}')"):
                    if uri.endswith("User"):
                        uri += f"('{EMPLOYEE_ID}')"
                        valid_body["__metadata"]["uri"] = uri
        except Exception as e:
            print(f"Error parsing JSON for entity {entity}: {e}")
            continue
        out_ws.append([
            entity,
            API_ENDPOINT,
            json.dumps(body, ensure_ascii=False),
            json.dumps(valid_body, ensure_ascii=False)
        ])
        print(f"Entity: {entity}\nEndpoint: {API_ENDPOINT}\nBody: {json.dumps(body, ensure_ascii=False)}\nValid Body: {json.dumps(valid_body, ensure_ascii=False)}\n")

    out_wb.save(OUTPUT_FILE)
    print(f"Preview exported to {OUTPUT_FILE}")

    integration_wb = openpyxl.load_workbook(INTEGRATION_FILE, data_only=True)
    integration_ws = integration_wb["SF Master Table List"]

    # Build a lookup from API Post Preview for Entity -&amp;gt; Valid Body
    preview_wb = openpyxl.load_workbook(OUTPUT_FILE)
    preview_ws = preview_wb["API Post Preview"]
    headers = [cell.value for cell in preview_ws[1]]
    entity_idx_preview = headers.index("Entity")
    valid_body_idx = headers.index("Valid Body")
    entity_to_valid_body = {}
    for row in preview_ws.iter_rows(min_row=2, values_only=True):
        entity = row[entity_idx_preview]
        valid_body = row[valid_body_idx]
        entity_to_valid_body[str(entity)] = valid_body

    # Find column indices in integration sheet
    integration_headers = [cell.value for cell in integration_ws[1]]
    entity_idx_integration = integration_headers.index("Entity")
    sample_upsert_idx = integration_headers.index("Sample Upsert")

    # Populate Sample Upsert with Valid Body where Entity matches
    for row in integration_ws.iter_rows(min_row=2):
        entity = str(row[entity_idx_integration].value)
        if entity in entity_to_valid_body:
            integration_ws.cell(row=row[0].row, column=sample_upsert_idx + 1, value=entity_to_valid_body[entity])

    # Copy and transform "Upsert API Field Attribute" to "SF Master Data Dictionary"
    upsert_ws = wb["Upsert API Field Attribute"]
    sf_master_ws = integration_wb["SF Master Data Dictionary"]

    # Clear existing data except header in SF Master Data Dictionary
    sf_master_ws.delete_rows(2, sf_master_ws.max_row - 1)

    # Get headers and indices
    upsert_headers = [cell.value for cell in upsert_ws[1]]
    field_idx = upsert_headers.index("Field")
    sample_value_idx = upsert_headers.index("Sample value")

    # Only append headers if not present
    if all(cell.value is None for cell in sf_master_ws[1]):
        sf_master_ws.append(upsert_headers)

    for row in upsert_ws.iter_rows(min_row=2, values_only=True):
        row = list(row)
        field = str(row[field_idx]) if row[field_idx] else ""
        sample_value = row[sample_value_idx]
        # Apply transformation based on Field
        if field in ["userId", "personIdExternal", "username"]:
            row[sample_value_idx] = EMPLOYEE_ID
        elif field == "emailAddress":
            row[sample_value_idx] = f"{EMPLOYEE_ID}@dummy.com"
        elif field == "__metadata" and sample_value and API_SERVER in str(sample_value):
            row[sample_value_idx] = str(sample_value).replace(API_SERVER, TEST_API_SERVER)
        sf_master_ws.append(row)

    # Add border to all cells (including blank)
    thin = Side(border_style="thin", color="000000")
    border = Border(left=thin, right=thin, top=thin, bottom=thin)
    for row in sf_master_ws.iter_rows(min_row=1, max_row=sf_master_ws.max_row, max_col=sf_master_ws.max_column):
        for cell in row:
            cell.border = border

    integration_wb.save(INTEGRATION_FILE)
    print(f'Upsert API Field Attribute copied and Sample Value transformed in "SF Master Data Dictionary" of {INTEGRATION_FILE}')

def post_valid_bodies_and_export_response():
    """Post valid bodies to the API and export the responses.
    
    This function sends API requests with the valid bodies and
    exports the responses to the preview and integration files.
    """
    preview_wb = openpyxl.load_workbook(OUTPUT_FILE)
    preview_ws = preview_wb["API Post Preview"]
    headers = [cell.value for cell in preview_ws[1]]
    valid_body_idx = headers.index("Valid Body")
    # Add a new column for API Response if not already present
    if "API Response" not in headers:
        preview_ws.cell(row=1, column=len(headers) + 1, value="API Response")
        response_col = len(headers) + 1
    else:
        response_col = headers.index("API Response") + 1

    # Open integration workbook and get SF Master Table List
    integration_wb = openpyxl.load_workbook(INTEGRATION_FILE, data_only=True)
    integration_ws = integration_wb["SF Master Table List"]
    integration_headers = [cell.value for cell in integration_ws[1]]
    entity_idx_integration = integration_headers.index("Entity")
    sample_upsert_idx = integration_headers.index("Sample Upsert")
    sample_response_idx = integration_headers.index("Sample Response")

    for i, row in enumerate(preview_ws.iter_rows(min_row=2), start=2):
        valid_body = row[valid_body_idx].value
        entity = row[0].value
        if not valid_body or valid_body.strip() in ["", "{}", "null"]:
            preview_ws.cell(row=i, column=response_col, value="Skipped: Blank body")
            print(f"Row {i}: Skipped (blank body)")
            continue
        try:
            response = requests.post(
                API_ENDPOINT,
                data=valid_body.encode("utf-8"),
                headers={"Content-Type": "application/json"},
                auth=(API_USERNAME, API_PASSWORD),
                timeout=30
            )
            api_response = response.text
            preview_ws.cell(row=i, column=response_col, value=api_response)
            print(f"Row {i}: Response: {response.status_code} {api_response}")
        except Exception as e:
            api_response = f"Error: {e}"
            preview_ws.cell(row=i, column=response_col, value=api_response)
            print(f"Row {i}: Error: {e}")

        # --- Copy Valid Body and API Response to SF Master Table List ---
        for int_row in integration_ws.iter_rows(min_row=2):
            if str(int_row[entity_idx_integration].value) == str(entity):
                integration_ws.cell(row=int_row[0].row, column=sample_upsert_idx + 1, value=valid_body)
                integration_ws.cell(row=int_row[0].row, column=sample_response_idx + 1, value=api_response)
                break

    preview_wb.save(OUTPUT_FILE)
    integration_wb.save(INTEGRATION_FILE)
    print(f"API responses exported to {OUTPUT_FILE} and copied to SF Master Table List")

def update_api_templates():
    """Update API templates in the integration file.
    
    This function creates or updates entity-specific sheets in the
    integration file based on the API template and SF Master Data Dictionary.
    """
    integration_wb = openpyxl.load_workbook(INTEGRATION_FILE)
    table_ws = integration_wb["SF Master Table List"]
    template_ws = integration_wb["API Template"]
    sf_master_ws = integration_wb["SF Master Data Dictionary"]

    # Get headers and their indices
    headers = [cell.value for cell in table_ws[1]]
    entity_idx = headers.index("Entity")
    api_name_idx = headers.index("API Name")
    data_flow_idx = headers.index("Data Flow")
    trigger_point_idx = headers.index("Trigger Point")
    test_api_idx = headers.index("Test API Endpoint")
    pro_api_idx = headers.index("Pro API Endpoint")
    http_method_idx = headers.index("HTTP Method")
    sample_upsert_idx = headers.index("Sample Upsert")
    sample_response_idx = headers.index("Sample Response")

    sf_master_headers = [cell.value for cell in sf_master_ws[1]]
    sf_entity_col_idx = sf_master_headers.index("Entity")  # 0-based

    # Collect all entity rows (skip header)
    entities = []
    for row in table_ws.iter_rows(min_row=2, values_only=True):
        entity = row[entity_idx]
        if entity and str(entity).strip():
            entities.append({
                "Entity": entity,
                "API Name": row[api_name_idx],
                "Data Flow": row[data_flow_idx],
                "Trigger Point": row[trigger_point_idx],
                "Test API Endpoint": row[test_api_idx],
                "Pro API Endpoint": row[pro_api_idx],
                "HTTP Method": row[http_method_idx],
                "Sample Upsert": row[sample_upsert_idx],
                "Sample Response": row[sample_response_idx]
            })

    # Duplicate, populate, and copy B–I for each entity
    for entity in entities:
        sheet_name = get_valid_sheet_name(entity["Entity"])
        # Delete the sheet if it already exists
        if sheet_name in integration_wb.sheetnames:
            std = integration_wb[sheet_name]
            integration_wb.remove(std)
        new_ws = integration_wb.copy_worksheet(template_ws)
        new_ws.title = sheet_name

        # Populate variables
        new_ws["A1"].value = str(entity["API Name"]) if entity["API Name"] is not None else ""
        new_ws["B2"].value = entity["Data Flow"]
        new_ws["B3"].value = entity["Trigger Point"]
        new_ws["B4"].value = entity["Entity"]
        new_ws["B5"].value = entity["Test API Endpoint"]
        new_ws["B6"].value = entity["Pro API Endpoint"]
        new_ws["B7"].value = entity["HTTP Method"]
        new_ws["B11"].value = entity["Sample Upsert"]
        new_ws["K11"].value = entity["Sample Response"]

        # Copy B–I from SF Master Data Dictionary to B14–I* in the entity sheet
        matching_rows = []
        for row in sf_master_ws.iter_rows(min_row=2, values_only=True):
            if get_valid_sheet_name(row[sf_entity_col_idx]) == sheet_name:
                matching_rows.append(row)
        for i, row in enumerate(matching_rows):
            for col_offset in range(1, 9):  # B=2, ..., I=9 (1-based)
                value = row[col_offset]
                new_ws.cell(row=14 + i, column=col_offset + 1, value=value)

    integration_wb.save(INTEGRATION_FILE)
    print(f"API Template sheets updated and B–I copied for all entities in {INTEGRATION_FILE}")


# =============================================================================
# Generate Postman Collection
# =============================================================================

def generate_postman_collection():
    """
    Generate a Postman collection from the API document for testing purposes.
    This function extracts API information from the Excel document and creates a Postman collection JSON file.
    """

    print("\nGenerating Postman Collection...")
    # Column offsets for each API (A, O, AC, etc.)
    COLUMN_OFFSETS = [0, 14, 28, 42, 56]
    
    def try_parse_json(text):
        try:
            return json.loads(text)
        except:
            return text
    
    def clean_endpoint(url):
        return url.replace("{EmpEmployment_base_url}", "").strip()
    
    # Load Excel
    excel = pd.ExcelFile(INTEGRATION_FILE, engine="openpyxl")
    sheet_names = excel.sheet_names[5:]  # Skip the first 5 sheets
    
    api_records = []
    postman_items = []
    
    for sheet in sheet_names:
        df = pd.read_excel(INTEGRATION_FILE, sheet_name=sheet, header=None, engine="openpyxl")
        folder_apis = []
        
        for offset in COLUMN_OFFSETS:
            try:
                api_name = str(df.iat[0, offset]).strip()
            except:
                api_name = ""
            if not api_name or api_name.lower() == "nan":
                break  # If no value, stop parsing APIs for this sheet
            
            endpoint = str(df.iat[4, offset + 1]).strip() if df.shape[0] &amp;gt; 4 else ""
            endpoint = clean_endpoint(endpoint)
            method = str(df.iat[6, offset + 1]).strip().upper() if df.shape[0] &amp;gt; 6 else "GET"
            payload_raw = str(df.iat[10, offset + 1]).strip() if df.shape[0] &amp;gt; 10 else ""
            payload = try_parse_json(payload_raw)
            
            # Excel record
            api_records.append({
                "Sheet": sheet,
                "API Name": api_name,
                "Method": method,
                "Endpoint": endpoint,
                "Payload": json.dumps(payload, ensure_ascii=False) if isinstance(payload, dict) else payload,
                "Auth Type": AUTH_TYPE,
                # Don't include actual auth value in exports for security
                "Auth Value": "[REDACTED - See config.py]"
            })
            
            # Postman item
            request_obj = {
                "method": method,
                "header": [
                    {"key": "Authorization", "value": "{{auth_value}}", "type": "text"},
                    {"key": "Content-Type", "value": "application/json", "type": "text"}
                ],
                "url": {
                    "raw": "https://{{api_server}}/odata/v2/upsert?&amp;amp;$format=json",
                    "protocol": "https",
                    "host": ["{{api_server}}"],
                    "path": ["odata", "v2", "upsert"],
                    "query": [
                        {
                            "key": "$format",
                            "value": "json"
                        }
                    ]
                }
            }
            
            if method in ["POST", "PUT", "PATCH"] and payload:
                request_obj["body"] = {
                    "mode": "raw",
                    "raw": json.dumps(payload, indent=2, ensure_ascii=False) if isinstance(payload, dict) else payload,
                    "options": {"raw": {"language": "json"}}
                }
            
            folder_apis.append({
                "name": api_name,
                "request": request_obj
            })
        
        if folder_apis:
            postman_items.append({
                "name": sheet,
                "item": folder_apis
            })
    
    # Export summary Excel
    EXCEL_OUTPUT_FILE = os.path.join(SCRIPT_DIR, "8.SF New Hire Postman_Collection Excel.xlsx")
    df_export = pd.DataFrame(api_records)
    df_export.to_excel(EXCEL_OUTPUT_FILE, index=False)
    
    # Export Postman Collection JSON
    POSTMAN_COLLECTION_FILE = os.path.join(SCRIPT_DIR, "9.SF New Hire Postman_Collection.json")
    
    # Create Postman environment variables template
    postman_environment = {
        "id": str(uuid.uuid4()),
        "name": "SuccessFactors EC API Environment",
        "values": [
            {
                "key": "api_server",
                "value": TEST_API_SERVER,
                "type": "default",
                "enabled": True
            },
            {
                "key": "auth_value",
                "value": f"Basic [YOUR_BASE64_CREDENTIALS]",
                "type": "secret",
                "enabled": True
            }
        ],
        "_postman_variable_scope": "environment"
    }
    
    # Create Postman collection
    postman_collection = {
        "info": {
            "name": "SuccessFactors EC APIs",
            "_postman_id": str(uuid.uuid4()),
            "description": "Auto-generated from Excel\n\nIMPORTANT: Before using this collection, set up the environment variables:\n- api_server: Your SuccessFactors API server\n- auth_value: Your Basic authentication string (e.g., 'Basic base64encodedcredentials')",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
        },
        "item": postman_items
    }
    
    # Save collection
    with open(POSTMAN_COLLECTION_FILE, "w", encoding="utf-8") as f:
        json.dump(postman_collection, f, ensure_ascii=False, indent=2)
        
    # Save environment template
    POSTMAN_ENV_FILE = os.path.join(SCRIPT_DIR, "SF_API_Environment_Template.json")
    with open(POSTMAN_ENV_FILE, "w", encoding="utf-8") as f:
        json.dump(postman_environment, f, ensure_ascii=False, indent=2)
    
    print(f"✅ Postman Collection Generated:\n- Excel Export: {EXCEL_OUTPUT_FILE}\n- Postman Collection: {POSTMAN_COLLECTION_FILE}\n- Environment Template: {POSTMAN_ENV_FILE}")

# =============================================================================
# Main Functions
# =============================================================================

def merge_ec_api_and_metadata():
    """Merge EC API data with metadata.
    
    This function combines the steps to enrich the API data with metadata
    and clean up the results.
    """
    enrich_upsert_sheet_with_dictionary()
    enrich_api_entity_sheet()
    clean_upsert_and_api_sample()
    print("EC API data merged with metadata successfully.")

def form_standard_api_document_full():
    """Form the complete standard API document.
    
    This function combines the steps to create the standard API document,
    post valid bodies, and update API templates.
    """
    form_standard_api_document()
    post_valid_bodies_and_export_response()
    update_api_templates()
    print("Standard API document formed successfully.")

def run_full_pipeline(continue_on_error=False):
    """Run the complete API toolkit pipeline.
    
    This function executes all steps in sequence to create a comprehensive
    API documentation and testing suite.
    
    Args:
        continue_on_error: If True, continue executing remaining components even if one fails.
                          If False, stop execution on first error.
    
    Returns:
        bool: True if all components executed successfully, False otherwise.
    """
    print("Starting full SuccessFactors API Toolkit pipeline...")
    
    # Execute each component in sequence
    components = [
        {"name": "Get EC API Body", "function": get_ec_api_body},
        {"name": "Extract EC OData API Dictionary", "function": extract_ec_odata_api_dictionary},
        {"name": "Get Code-Value Mappings", "function": get_code_value},
        {"name": "Merge EC API and Metadata", "function": merge_ec_api_and_metadata},
        {"name": "Form Standard API Document", "function": form_standard_api_document_full},
        {"name": "Generate Postman Collection", "function": generate_postman_collection}
    ]
    
    success = True
    completed_components = []
    failed_components = []
    
    for component in components:
        print(f"\n{'-' * 80}\nExecuting: {component['name']}\n{'-' * 80}")
        try:
            component["function"]()
            completed_components.append(component['name'])
        except Exception as e:
            success = False
            failed_components.append(component['name'])
            handle_error(e, verbose=False, component_name=component['name'])
            if not continue_on_error:
                print(f"Stopping pipeline execution due to error in {component['name']}.")
                break
            print(f"Continuing with next component...")
    
    # Summary report
    print("\n" + "=" * 80)
    print("PIPELINE EXECUTION SUMMARY")
    print("=" * 80)
    
    if completed_components:
        print("\nCompleted components:")
        for i, comp in enumerate(completed_components, 1):
            print(f"  {i}. {comp}")
    
    if failed_components:
        print("\nFailed components:")
        for i, comp in enumerate(failed_components, 1):
            print(f"  {i}. {comp}")
    
    if success:
        print("\nFull pipeline completed successfully.")
    else:
        print("\nPipeline completed with errors.")
    
    return success

# =============================================================================
# Main Execution
# =============================================================================

def main():
    """Main entry point for the application.
    
    Parses command line arguments and executes the appropriate functions.
    Includes error handling for each component.
    """
    import argparse
    import sys
    import traceback
    
    # Define available components
    components = {
        "full": {"function": run_full_pipeline, "help": "Run the full pipeline"},
        "get-api": {"function": get_ec_api_body, "help": "Get EC API body only"},
        "extract-dict": {"function": extract_ec_odata_api_dictionary, "help": "Extract EC OData API dictionary only"},
        "get-code": {"function": get_code_value, "help": "Get code-value mappings only"},
        "merge": {"function": merge_ec_api_and_metadata, "help": "Merge EC API and metadata only"},
        "form-doc": {"function": form_standard_api_document_full, "help": "Form the standard API document only"},
        "postman": {"function": generate_postman_collection, "help": "Generate Postman collection for API testing only"}
    }
    
    # Create argument parser
    parser = argparse.ArgumentParser(description="SuccessFactors API Toolkit - Comprehensive SuccessFactors API Management Tool")
    
    # Add arguments dynamically from components dictionary
    for arg_name, details in components.items():
        parser.add_argument(f"--{arg_name}", action="store_true", help=details["help"])
    
    # Add additional flags
    parser.add_argument("-v", "--verbose", action="store_true", help="Enable verbose error output")
    parser.add_argument("--continue-on-error", action="store_true", help="Continue execution even if a component fails")
    
    # Parse arguments
    args = parser.parse_args()
    args_dict = vars(args)
    
    # Extract and remove special flags
    verbose = args_dict.pop("verbose", False)
    continue_on_error = args_dict.pop("continue_on_error", False)
    
    # If no arguments provided, run the full pipeline
    if not any(args_dict.values()):
        print("No arguments provided. Running full pipeline...")
        success = run_full_pipeline(continue_on_error=continue_on_error)
        if not success and not continue_on_error:
            sys.exit(1)
        return
    
    # Execute requested components
    for arg_name, is_active in args_dict.items():
        if is_active:
            print(f"\n{'-' * 80}\nExecuting: {components[arg_name]['help']}\n{'-' * 80}")
            try:
                components[arg_name]["function"]()
            except Exception as e:
                handle_error(e, verbose, component_name=components[arg_name]['help'])
                # Continue with other components instead of exiting
                print(f"Continuing with remaining components...")

def handle_error(error, verbose=False, component_name=None):
    """Handle exceptions with appropriate error messages.
    
    Args:
        error: The exception that was raised
        verbose: Whether to show detailed error information
        component_name: Name of the component that failed (if applicable)
    """
    component_str = f" in {component_name}" if component_name else ""
    print(f"\n{'!' * 80}")
    print(f"ERROR{component_str}: {str(error)}")
    
    if verbose:
        print("\nDetailed error information:")
        traceback.print_exc()
    else:
        print("\nRun with --verbose for detailed error information.")
    print(f"{'!' * 80}\n")

if __name__ == "__main__":
    main()&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--764001348"&gt;Authentication File&lt;/H3&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
SuccessFactors EC API Toolkit - Configuration Template

This is a template for the configuration file. Copy this file to 'config.py' and
fill in your actual credentials and settings. Never share your config.py file.

For better security:
1. Use environment variables for sensitive information
2. Store credentials in a secure credential manager
3. Use OAuth tokens instead of username/password when possible
"""

import os

# =============================================================================
# API Connection Settings
# =============================================================================

# 1.1 Production Authentication
API_SERVER = "your_api_server.successfactors.com"
USERNAME = "your_username"
PASSWORD = "your_password"  # Better to use: os.environ.get("SF_PASSWORD")
Oauth_Token = "your_token"  # Better to use: os.environ.get("SF_OAUTH_TOKEN")

# 1.2 Testing Authentication
TEST_API_SERVER = "your_test_api_server.successfactors.com"
API_USERNAME = "your_test_username"
API_PASSWORD = "your_test_password"  # Better to use: os.environ.get("SF_TEST_PASSWORD")
Test_Oauth_Token = "your_test_token"  # Better to use: os.environ.get("SF_TEST_OAUTH_TOKEN")

# Fixed postman authentication information
AUTH_TYPE = "Basic"
AUTH_VALUE = "your_base64_code"  # Better to use: os.environ.get("SF_AUTH_VALUE")

# =============================================================================
# Employee Data for Testing
# =============================================================================

EMPLOYEE_ID = "sample_id"  # Used for filtering API results
TEST_EMPLOYEE_ID = "test_id"  # Used for testing API requests in Upsert
POSITION = "position_id"
EVENT_REASON = "HIRNEW"
REHIRE_REASON = "REHREH"
HIRE_DATE = "/Date(858556850000)/"
NOSHOW_DATE = "/Date(858556850000)/"
TER_EVENT_REASON = "NS"
RELATED_PERSONIDEXTERNAL = "related_person_id"
BACKGROUND_ID = "0"

# =============================================================================
# API Endpoints and Entity Sets
# =============================================================================

# API Endpoints
API_ENDPOINT = f"https://{TEST_API_SERVER}/odata/v2/upsert?$format=json"

# Entity Sets for API Operations
ENTITY_SETS = [
    "User", "PerPerson", "EmpEmployment", "EmpJob", "PerPersonal", "PerGlobalInfoUSA",
    "EmpJobRelationships", "EmpCompensation", "EmpPayCompRecurring", "EmpPayCompNonRecurring", "EmpWorkPermit",  
    "PerNationalId", "PerEmail", "PerPhone", "PerPersonRelationship", "PerAddressDEFLT", "PerEmergencyContacts",
    "PaymentInformationV3", "PaymentInformationDetailV3", 
    "Background_OutsideWorkExperience", "Background_Education", "Background_Certificates", "Background_Languages",
    "EmpEmploymentTermination",
    "Position", "FODepartment", "PickListValueV2",
    "HireDateChange"
]

# =============================================================================
# File Paths
# =============================================================================

SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))
EC_TABLE_ATTRIBUTE = os.path.join(SCRIPT_DIR, "1.SF EC Table API Attribute.xlsx")
INTEGRATION_FILE = os.path.join(SCRIPT_DIR, "2.SF New Hire Integration Standard API TemplateV1.xlsx")
EXCEL_OUTPUT_PATH = os.path.join(SCRIPT_DIR, "3.SF EC Field API Attribute.xlsx")
EXCEL_FILE = os.path.join(SCRIPT_DIR, "4.SF New Hire Sample API Upsert.xlsx")
OUTPUT_FILE = os.path.join(SCRIPT_DIR, "5.SF New Hire API Post Preview.xlsx")
PICKLIST_OUTPUT_PATH = os.path.join(SCRIPT_DIR, "6.SF Dropdown CodeValue Table.xlsx")
NEW_FILE = os.path.join(SCRIPT_DIR, "7.SF Standard New Hire API DocumentV1.xlsx")
POSTMAN_EXCEL_OUTPUT = os.path.join(SCRIPT_DIR, "8.SF New Hire Postman_Collection Excel.xlsx")
POSTMAN_COLLECTION_OUTPUT = os.path.join(SCRIPT_DIR, "9.SF New Hire Postman_Collection.json")

# =============================================================================
# Constants
# =============================================================================

MAX_SHEETNAME_LEN = 31

# XML Namespaces for Metadata Parsing
ns = {
    'edmx': 'http://schemas.microsoft.com/ado/2007/06/edmx',
    'm': 'http://schemas.microsoft.com/ado/2007/08/dataservices/metadata',
    '': 'http://schemas.microsoft.com/ado/2008/09/edm',
    'sap': 'http://www.successfactors.com/edm/sap'
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/one-click-export-automating-successfactors-ec-new-hire-integration-api/ba-p/14170318"/>
    <published>2025-08-03T13:04:21.466000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/leveraging-sap-successfactors-compensation-for-salary-benchmarking/ba-p/14153700</id>
    <title>Leveraging SAP SuccessFactors Compensation for Salary Benchmarking</title>
    <updated>2025-08-05T14:24:39.677000+02:00</updated>
    <author>
      <name>hrajkumar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1625060</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Though SAP has brought in several enhancements in compensation module, there isn't a direct solution to capture external salary benchmarking data and use it for comparison against existing pay ranges during annual compensation planning activity. However for one of my recent client who is into new-gen technology product development, wanted to have their top talents (some even hold individual patents to their names)&amp;nbsp; paid as per market.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Client does have subscription tie-up with an external vendor who provides market salary data which the management would like to leverage during their annual compensation planning exercise. After understanding their business nuances, I did try to auto update EC custom MDF through an integration but it did not materialize due to platform differences and firewall incidents. So, I resorted to import the data to SuccessFactors until technical handshake happens between two platforms. Let me share the solution here, so that the tech savvy HR's can think of incorporating.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;U&gt;How SuccessFactors Compensation Supports Market Benchmarking&lt;/U&gt;&lt;BR /&gt;&lt;EM&gt;SuccessFactors does not provide market data, however supports in creating placeholder for utilizing market benchmarking data and comparing it with existing pay ranges in Employee Central&lt;/EM&gt;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;STRONG&gt;Importing Market Data:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;M&lt;/SPAN&gt;arket benchmark data can be obtained from vendors such as Mercer, Aon, etc. and imported into SuccessFactors. It can be either imported directly in Employee Central leveraging custom fields or can be imported in a specific lookup table in compensation module with Country and Pay Grade being the key fields against which 'Min', 'Mid' &amp;amp; 'Max' values are maintained.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Salary Pay Matrix:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Direct EC Pay Matrix can be used in order to compare with market data for a specific pay grade of a specific country. This enables the planner to consider the market pay data while making compensation decision for the employee.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;U&gt;Technical briefing from SuccessFactors standpoint:&lt;/U&gt;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;A placeholder will be created for the market data to be imported into SF system. Could be custom fields in EC or through compensation lookup tables (preferred for non-EC system)&lt;/LI&gt;&lt;LI&gt;Create a section on the worksheet which populates the min-mid-max of market pay for the pay grade/country which helps the planner to compare current pay versus market pay for the employee and make compensation recommendations accordingly&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;If the prospective market data provider (external vendor) can connect SF system, using their end point URL we can build a custom integration where the data is extracted automatically though a scheduled job and stored in custom MDF in Employee Central.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Companies are always reinventing and so do our clients, hence&amp;nbsp;organizations to remain competitive in the talent market always go the extra mile to persuade. We shall support them in implementing such cost effective solutions and realize true value of their SAP investments.&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+SuccessFactors+Compensation/pd-p/73555000100800000771" class="lia-product-mention" data-product="159-1"&gt;SAP SuccessFactors Compensation&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+SuccessFactors+Employee+Central/pd-p/73555000100800000773" class="lia-product-mention" data-product="160-1"&gt;SAP SuccessFactors Employee Central&lt;/a&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/leveraging-sap-successfactors-compensation-for-salary-benchmarking/ba-p/14153700"/>
    <published>2025-08-05T14:24:39.677000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/display-of-the-number-of-goals-per-user-in-people-analytics-story-reporting/ba-p/14172565</id>
    <title>Display of the Number of Goals per User in People Analytics Story Reporting</title>
    <updated>2025-08-05T17:30:13.104000+02:00</updated>
    <author>
      <name>FrankErle</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/17855</uri>
    </author>
    <content>&lt;P&gt;A typical requirement in talent management reporting is to show the number of employees according to the number of goals, i.e. performance goals or development goals. Such a chart could help to identify employees which have not yet defined any goals, or also employees which have too many or too less goals. In this blogpost alternative approaches are presented to realize such a reporting requirement in People Analytics Story Reporting.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;An important HR requirement in talent management is to identify employees which have not yet defined any goals, or also employees which have too many or too less goals. See left side in Figure 1 which shows&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Total number of considered employees&lt;/LI&gt;&lt;LI&gt;Total number of Objective plans which is the number of combinations of employees and objective plans (e.g. if one employee has goals in 3 of the selected objective plans, then the number “3” is considered; if an employee has goals in a single objective plan or also in none of the selected objective plans, then the number “1” is considered)&lt;/LI&gt;&lt;LI&gt;Total number of Goals (e.g. if an employee has 3 goals in ‘objective plan A’ and 5 goals in ‘objective plan B’, then the number “8” is considered)&lt;/LI&gt;&lt;LI&gt;Number of Goals per Employee/Objective Plan, i.e. which is just the “Total number of Goals” divided by the “Total Number of&amp;nbsp; Objective Plans”&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The chart in Figure 1 shows the “Total Number of Objective Plans“ according to the number of goals. You can see that there are 1229 employees which don’t have any goals in one of the selected objective plans, 28 employees with a single goal in the selected objective plans, 11 employees with 2 goals and so on.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Display_Number_of_goals_per_User_Figure1.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296566i375008426841588D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Display_Number_of_goals_per_User_Figure1.jpg" alt="Display_Number_of_goals_per_User_Figure1.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&amp;nbsp;&lt;EM&gt;Figure 1&amp;nbsp; &amp;nbsp;'Histogram' (more precise, 'chart of type "Bar/Column") to show the number of employees per number of goals&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Solution Approach&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the following the different steps are explained how to create a query and the respective story to derive the chart as it is shown in Figure 1.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Query creation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Create the query as shown in Figure 2. Note that:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The object “Primary Objective Fields” from “All Templates” in schema “Objective Management” is used. This was chosen to allow the possibility to select one or multiple bonus plans as indicated in Figure 1 on the right.&lt;/LI&gt;&lt;LI&gt;The anchor of the query is “Basic User Information” from schema “User”. It is also possible to create the query the other way round. However, only when having "Basic User Information" as anchor it is possible to derive also the employees without any goal plans and goals.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Select at least fields like employee name, user ID, objective plan ID, objective plan name and goal. You might add also filters e.g. to consider only goal plans in status “completed”, “on track” but to ignore goal plans in status “Cancelled” or “Postponed”.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Display_Number_of_goals_per_User_Figure2.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296492i2B338B2E7FD1A7D9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Display_Number_of_goals_per_User_Figure2.jpg" alt="Display_Number_of_goals_per_User_Figure2.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Figure 2 &amp;nbsp;&amp;nbsp;Query based on “All Templates” within schema “Objective Management”&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;STRONG&gt;2. Story measure calculations&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Create the following 4 story calculations as indicated in Figure 3, 4, 5 and 6.&lt;/P&gt;&lt;P&gt;To illustrate the necessity to calculate the “Total Number of Objective Plans” let’s consider the following example: Assume there are 100 employees for “goal plan 2023” and 120 employees for “goal plan 2024”. Further assume you run the report for both bonus plans. Then the number of employees is 120 (under the assumption that the 100 employees of “goal plan 2023” are among the employees relevant for “goal plan 2024”). This is derived with the calculated measure “Employees” as shown in Figure 3. However, more important for our report is the combination of employees and goal plans which is 220 (=100 + 120). This is derived with the calculated measure “Total Number of Objective Plans” as shown in Figure 4.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Display_Number_of_goals_per_User_Figure3.jpg" style="width: 948px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296496i31CE64B1BCECE5BC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Display_Number_of_goals_per_User_Figure3.jpg" alt="Display_Number_of_goals_per_User_Figure3.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Figure 3 &amp;nbsp;&amp;nbsp;Story calculation of type ‘Aggregation’ to derive the number of employees&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Display_Number_of_goals_per_User_Figure4.jpg" style="width: 927px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296567i9633BAC6B36F5078/image-size/large?v=v2&amp;amp;px=999" role="button" title="Display_Number_of_goals_per_User_Figure4.jpg" alt="Display_Number_of_goals_per_User_Figure4.jpg" /&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Figure 4 &amp;nbsp;&amp;nbsp;Story calculation of type ‘Aggregation’ to derive the total number of objective plans&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The next calculation is the overall number of “goals”. Let’s stick at the example from above; let’s assume that the 100 employees maintained in objective plan “goal plan 2023” overall 400 goals and that the 120 employees maintained in objective plan “goal plan 2024” overall 590 goals. Here, it could be possible that one goal as e.g. “Improve my leadership skills” is for some of the employees part of “goal plan 2023” as well as part of “goal plan 2024”. Nevertheless, the combination of employees and goal plans is 990 (=400 + 590). This is derived with the calculated measure “Total Number of Goals” as shown in Figure 5. To derive the “Number of Goals per Employee/Objective Plan” it is now just required to divide the “Total number of goals” and “Total Number of&lt;SPAN&gt;&amp;nbsp;Objective Plans”. For the example here, this would be an average number of 4,5 goals (=990 / 220).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Display_Number_of_goals_per_User_Figure5.jpg" style="width: 943px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296498iA0F58EF9B55213BC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Display_Number_of_goals_per_User_Figure5.jpg" alt="Display_Number_of_goals_per_User_Figure5.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Figure 5 &amp;nbsp;&amp;nbsp;Story calculation of type ‘Aggregation’ to derive the number of goals&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Display_Number_of_goals_per_User_Figure6.jpg" style="width: 638px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296576i835016F94552CCA3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Display_Number_of_goals_per_User_Figure6.jpg" alt="Display_Number_of_goals_per_User_Figure6.jpg" /&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Figure 6 &amp;nbsp;&amp;nbsp;Story calculation of type ‘Calculated Measure’ to derive the quotient between “Number of Goals” and “Total Number&amp;nbsp; of Objective Plans”&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;3.&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Story Dimension Calculation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The final calculation step is transforming the “Number of Goals per Employee/Objective Plan” into a dimension. It is important to consider the “Dimension Context”: Our use case is to show the Number of Goals per Employee and Objective Plan. Therefore, the dimension context is the employee (i.e. the field ‘User ID’) and the goal plan (i.e. ‘objective plan ID’). Here, the bit ‘tricky’ part is to find meaningful ‘goal ranges’ (i.e. ‘Member Name’) so that the visual representation results in a chart that basically resembles a Gaussian distribution (see Figure 7). Furthermore, it is recommended to provide a counter as prefix to the ’Member Name’ (i.e. (1), (2), (3), ….), so that the sorting works properly (if this ‘prefix would be missing, in the sample provided here the sorting would be “1 Goal”, “13-15 Goals”, “16 and More Goals”, “2 Goals”, “3 Goals”, ….).&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Display_Number_of_goals_per_User_Figure7.jpg" style="width: 935px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296577i5E7B458DE1713528/image-size/large?v=v2&amp;amp;px=999" role="button" title="Display_Number_of_goals_per_User_Figure7.jpg" alt="Display_Number_of_goals_per_User_Figure7.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Figure 7 &amp;nbsp;&amp;nbsp;Story calculation of type ‘Measure-Based Dimension’ to convert the “Number of Goals per Employee/Objective Plan”&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;STRONG&gt;4. Chart Creation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Finally, it is possible to create a visual presentation of the previously calculated figures. Figure 8 shows a “Bar/Column” chart with the measure “Total Number of&lt;SPAN&gt;&amp;nbsp;Objective Plans&lt;/SPAN&gt;” and dimension “Goal Ranges”.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Display_Number_of_goals_per_User_Figure8.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296579i4E8C36F90C5D6B92/image-size/large?v=v2&amp;amp;px=999" role="button" title="Display_Number_of_goals_per_User_Figure8.jpg" alt="Display_Number_of_goals_per_User_Figure8.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Figure 8 &amp;nbsp;&amp;nbsp;Bar chart with measure ‘Total Number of Objective Plans’ and dimension ‘Goal Ranges’&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5. Further remarks: &lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Of course, the presented approach works not only for goals/objective data but also for (1) any similar (e.g. performance form data) or (2) also slightly different use cases (e.g. number of particular benefits rolled out/claimed per employee).&lt;/LI&gt;&lt;LI&gt;Instead of manual definition of “Member Names” as shown in Figure 7 you could also tick “Use measure values as dimension members”. However, in addition to the shortcomings described above (1. no Gaussian distribution; 2. confusing sorting), ‘members’ without any ‘Goals per Employee/Objective Plan’ would not show up in the Bar Chart.&lt;/LI&gt;&lt;LI&gt;It is also possible to use a chart of type “Histogram”. Use “Total Number of Goals” as ‘Measure’ and “User ID” and "Objective Plan ID" as ‘Aggregation Dimension’. Then, you have to adjust the ‘Chart Properties’. It is not recommended to switch off ‘Automatically Set Range of Values’: With this option you would probably generate odd ranges. However, for the use case of goals it is recommended to use fixed ranges as e.g. “14” as “’Number of bins’ and “1” and “15” as ‘Minimum’/’Maximum’ (important: choose 'Number of Bins' plus "1" for the 'Maximum'; only then each range covers the range of "1.00"). As shown in Figure 9 this approach works also fine (compare numbers from Figure 1 with numbers of Figure 9).&amp;nbsp;&lt;BR /&gt;Advantage: This&amp;nbsp;approach is faster to implement; only "Total Number of Goals" (see Figure 5) needs to be created&lt;BR /&gt;Disadvantage: (a) The case of employees without any goal (see 1st column of 1229 employees/goal plans without any goal defined) is missing and (b) Less flexibility regarding the definition of 'Goal Ranges' (in particular to define something like "More than 16 goals)"&lt;BR /&gt;Therefore, the approach which is previously described is more recommended.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Display_Number_of_goals_per_User_Figure9.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296855i95813B742CEAC19A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Display_Number_of_goals_per_User_Figure9.jpg" alt="Display_Number_of_goals_per_User_Figure9.jpg" /&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&amp;nbsp;Figure 9&amp;nbsp; &amp;nbsp;Chart of type "Histogram" to show the number of goals per employee/objective plan&lt;/EM&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/display-of-the-number-of-goals-per-user-in-people-analytics-story-reporting/ba-p/14172565"/>
    <published>2025-08-05T17:30:13.104000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/clean-core-by-design-using-sap-advanced-event-mesh-aem-as-the-first/ba-p/14171238</id>
    <title>Clean Core by Design: Using SAP Advanced Event Mesh (AEM) as the First Principle</title>
    <updated>2025-08-08T10:12:29.864000+02:00</updated>
    <author>
      <name>HammadSharif1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/154053</uri>
    </author>
    <content>&lt;P&gt;In the digital era of today where digital transformation is every organization’s need, SAP &lt;STRONG&gt;Clean Core Principle&lt;/STRONG&gt; is more than just a word, it's a among the foundational principle for enterprises looking to future-proof their SAP landscape. As per the SAP clean core approach, where technology is moving towards API first Approach, modular architectures, the organizations must decouple their custom logic instead of the application server to external API’s outside the application server layer to ensure agility, scalability, and reducing the upgrade complexity.&lt;/P&gt;&lt;P&gt;One of the most powerful enablers of this Clean Core approach is the event driven architecture through &lt;STRONG&gt;SAP Advanced Event Mesh (AEM)&lt;/STRONG&gt;, an enterprise-grade event brokering solution that supports real-time, event-driven architectures across hybrid landscapes.&lt;/P&gt;&lt;P&gt;In this blog, I’ll walk you through how to &lt;STRONG&gt;achieve Clean Core by adopting AEM as the first principle&lt;/STRONG&gt;, laying the groundwork for a decoupled, scalable, and intelligent enterprise.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;The Clean Core Strategy — What and Why?&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Avoid Extensions where not required&lt;/LI&gt;&lt;LI&gt;Upgrades should not interfere with the extensions and extensions should not interfere with the upgrades&lt;/LI&gt;&lt;LI&gt;Decouple the extensions from the Standard&lt;/LI&gt;&lt;LI&gt;Keep the custom code separate from the S4 Core&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;A Clean Code&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Clean Core strategy focuses on:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Keeping custom code, extensions, and integrations outside the SAP S/4HANA digital core.&lt;/LI&gt;&lt;LI&gt;Leveraging side-by-side extensibility using SAP BTP.&lt;/LI&gt;&lt;LI&gt;Using stable APIs and events to communicate between systems and layers.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This approach ensures that your core ERP remains &lt;STRONG&gt;clean, lean, and easily upgradeable&lt;/STRONG&gt;—an essential factor for reducing TCO and accelerating innovation cycles.&lt;/P&gt;&lt;P&gt;In short, minimize extensions, decouple them from the standard, build side-by-side extensions on the BTP layer without touching the S4 HANA Core.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&amp;nbsp;Why AEM as the First Principle?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To achieve the clean core strategy, event driven architecture plays an important role by decoupling the processes through individual events, following the loosely couple framework and avoiding tightly coupled integrations.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Advanced Event Mesh&lt;/STRONG&gt; enables &lt;STRONG&gt;event-driven architecture (EDA)&lt;/STRONG&gt; that decouples the source of truth (S/4HANA, SuccessFactors, C4C, etc.) from consumers (external apps, extensions, APIs). Here's why it's foundational to Clean Core:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Asynchronous Communication&lt;/STRONG&gt;: No tight coupling between systems.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Loose Integration&lt;/STRONG&gt;: Replace point-to-point interfaces with publish-subscribe models.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Extensibility&lt;/STRONG&gt;: Let consumers build side-by-side extensions without modifying the core.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Scalability&lt;/STRONG&gt;: Support multiple consumers with minimal configuration overhead.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;Clean Core in Action — Event-Driven Architecture with AEM&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s take a simple example: &lt;STRONG&gt;BP Onboarding in SAP S/4&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;Without Clean Core (Tightly Coupled):&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Custom ABAP enhancements in S/4HANA to trigger BP Creation/ Change Events.&lt;/LI&gt;&lt;LI&gt;Direct API calls or IDoc triggers to downstream applications like ARIBA/ C4C/ Hybris/ External Applications from S/4.&lt;/LI&gt;&lt;LI&gt;Every new consumer or change = new code or regression testing.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;With Clean Core (Using AEM):&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;S/4 HANA triggers the BP Creation Event via Event Enablement Cockpit.&lt;/LI&gt;&lt;LI&gt;AEM captures the events and routes it to all the subscribers.&lt;/LI&gt;&lt;LI&gt;Subscribers (CPI, CAP apps, external systems) performs the required logic without modifying the core system.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;No enhancement. No code in the core. Just events and clean extensions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Common Use Cases Where AEM Drives Clean Core&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Customer/Vendor Create in S/4HANA&lt;/STRONG&gt; → Event to AEM → Update CRM/External apps.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Purchase Order Created&lt;/STRONG&gt; → Event routed via AEM → Notify suppliers via external systems.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Material Master Update&lt;/STRONG&gt; → Trigger downstream analytics apps or warehouse systems.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;Building Blocks of a Clean Core Event Strategy&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;1. Enable Eventing in Source System&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;Use &lt;EM&gt;Event Enablement Cockpit&lt;/EM&gt; in S/4HANA (Cloud or Private Edition).&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;Within the SAP Application layer, where various types of event triggers are captured, these triggers can originate from the standard SAP mechanisms/ processes like Business Objects Repository(BOR) Event, Change Documents (CDHDR/ CDPOS), BTE(Business Transaction Event), IDOC Creation, Output Determination routines, and RAP based Event Triggers.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_0-1754319485057.png" style="width: 593px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296161i770BD6E2C3FACA2D/image-dimensions/593x292?v=v2" width="593" height="292" role="button" title="HammadSharif1_0-1754319485057.png" alt="HammadSharif1_0-1754319485057.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Route Event to AEM&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;Configure the required events in SAP S/4 to Publish Events to SAP Event Mesh/ AEM&lt;/LI&gt;&lt;LI&gt;Do the proper topic configurations and ensure secure connectivity.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;3. Integrate with AEM&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;Use &lt;EM&gt;AMQP 1.0&lt;/EM&gt; protocol or &lt;EM&gt;SAP Event Mesh/ Advance Event Mesh Adapter&lt;/EM&gt; in Integration Suite.&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Design Reusable Consumers&lt;BR /&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Keep business logic in SAP BTP (CAP, CPI, etc.).&lt;/LI&gt;&lt;LI&gt;Use topic naming standards (e.g., sap/s4/customer/created).&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Govern Events&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Maintain versioning, documentation, and routing rules in AEM.&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP EDA Ecosystem.png" style="width: 546px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296166iD88148FA21507AA6/image-dimensions/546x289?v=v2" width="546" height="289" role="button" title="SAP EDA Ecosystem.png" alt="SAP EDA Ecosystem.png" /&gt;&lt;/span&gt;&lt;P&gt; &lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;Combine AEM with SAP Integration Suite or APIM&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;AEM becomes even more powerful when used alongside &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Route events from AEM to CPI flows for orchestrations or APIM for Just Routing.&lt;/LI&gt;&lt;LI&gt;Use Process Integration for sync calls only where truly needed.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Practical Use Case:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Connect the S/4 or ERP to Advance Event Mesh (Either via Enterprise Event Enablement or ASAPIO Add-on) and setup the corresponding business events and topic hierarchies in AEM,&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Go to the Broker Manager of the of the AEM,&lt;BR /&gt;&lt;BR /&gt;Setup the Event Configuration via SAP Enterprise Event Enablement in the S/4&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Create Queue&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_1-1754319485061.png" style="width: 615px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296160i4F13CB604A683624/image-dimensions/615x152?v=v2" width="615" height="152" role="button" title="HammadSharif1_1-1754319485061.png" alt="HammadSharif1_1-1754319485061.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Subscribe to the Topic&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_0-1754384909223.png" style="width: 621px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296462i09A9836C5A2FAB2B/image-dimensions/621x206?v=v2" width="621" height="206" role="button" title="HammadSharif1_0-1754384909223.png" alt="HammadSharif1_0-1754384909223.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Advance Event Mesh Subscriber Configuration:&lt;BR /&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_3-1754319485065.jpeg" style="width: 457px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296162iBE1BE6D16AEBF72B/image-dimensions/457x258?v=v2" width="457" height="258" role="button" title="HammadSharif1_3-1754319485065.jpeg" alt="HammadSharif1_3-1754319485065.jpeg" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4. Depending on the Design, Processing Configuration Can be Altered&lt;BR /&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_4-1754319485067.png" style="width: 468px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296163i166F3317AEDA8DC5/image-dimensions/468x494?v=v2" width="468" height="494" role="button" title="HammadSharif1_4-1754319485067.png" alt="HammadSharif1_4-1754319485067.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;or&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_5-1754319485070.png" style="width: 473px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296164iD077A523C91B8856/image-dimensions/473x455?v=v2" width="473" height="455" role="button" title="HammadSharif1_5-1754319485070.png" alt="HammadSharif1_5-1754319485070.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;or&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_6-1754319485073.png" style="width: 487px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296165iCC7208F17A81740D/image-dimensions/487x472?v=v2" width="487" height="472" role="button" title="HammadSharif1_6-1754319485073.png" alt="HammadSharif1_6-1754319485073.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In SAP S/4 HANA, achieving Clean Core is no longer an optional choice, it’s a foundational strategy for designing scalable, maintainable, and future ready enterprise landscapes. This blogs explored how the SAP AEM empowers the organizations to adopt event driven architecture(EDA) that supports the Clean Core Principle by:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Decoupling the Core&lt;/STRONG&gt;: Separating the custom logic, integrations, and extensions from the S/4HANA core using publish-subscribe event models.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Enabling Side-by-Side Extensibility&lt;/STRONG&gt;: Leveraging SAP BTP and AEM to develop external applications and microservices without modifying the digital core.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Ensuring Upgrade Agility&lt;/STRONG&gt;: Keeping the S/4 core untouched allows smooth upgrades with minimal regression testing.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Scaling Across Hybrid Landscapes&lt;/STRONG&gt;: Distributing business events asynchronously to multiple consumers (on-premises and cloud) with minimal configuration overhead.&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Embracing &lt;STRONG&gt;SAP Advanced Event Mesh as the foundation&lt;/STRONG&gt; of your integration and extension strategy ensures that you're not only building for the present, but also for the future. With AEM, you unlock a Clean Core architecture that is:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Upgradable&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Extensible&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Decoupled&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Scalable&lt;/P&gt;&lt;P&gt;The Clean Core is no longer a destination, it’s a design principle. And AEM is your first step on that journey.&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;Reference:&lt;BR /&gt;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE/810dfd34f2cc4f39aa8d946b5204fd9c/d12742f5f86244f1a8e4e8a3e78adecb.html?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer"&gt;Creating SM59 Destination for AEM Service Instance | SAP Help Portal&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.pubsub.em.services.cloud.sap/Get-Started/get-started-lp.htm" target="_blank" rel="noopener nofollow noreferrer"&gt;Get Started with SAP Integration Suite, Advanced Event Mesh&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/sap-integration-suite/event-add-on-for-erp-advanced-event-mesh/connect-advanced-event-mesh" target="_blank" rel="noopener noreferrer"&gt;Connect Advanced Event Mesh | SAP Help Portal&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/event-processing-in-an-sap-s-4hana-on-premise-system/ba-p/13562915" target="_blank"&gt;Event Processing in an SAP S/4HANA on-premise syst... - SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/configure-sap-event-mesh-for-sap-s-4hana-on-premise/ba-p/13528833" target="_blank"&gt;Configure SAP Event Mesh for SAP S/4HANA On-Premis... - SAP Community&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/the-e-in-event-driven-architecture-introducing-sap-s-new-event-add-for-erp/ba-p/14160285" target="_blank"&gt;The E in Event-Driven Architecture: Introducing SA... - SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/clean-core-by-design-using-sap-advanced-event-mesh-aem-as-the-first/ba-p/14171238"/>
    <published>2025-08-08T10:12:29.864000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/sap-successfactors-employee-central-business-rule-function-doesnot-work-as/ba-p/14170341</id>
    <title>SAP SuccessFactors Employee Central - Business Rule Function Doesnot Work as Expected</title>
    <updated>2025-08-11T11:23:27.949000+02:00</updated>
    <author>
      <name>muralidharansrinivasan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/875346</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This Blog is written with a motive to bring the Business Rule Functions working behavior with Document Generation to the notice of the Engineering Team&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Details of the Issue :&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We had a requirement to display the Revised and Previous Basic Salary of the Employees in a Document Template during Increments . This requirement came as a part of Increment Automation in SuccessFactors which will save a lot of time of the HR's from manually preparing the Salary Revision Letters. Past Direct won't work for this scenario as we need to only highlight the Basic Salary Revision.&lt;/P&gt;&lt;P&gt;Upon Detailed Analysis, &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/2219199"&gt;@sandhiyat2001&lt;/a&gt;&amp;nbsp;&amp;nbsp;found that the business rule function Get amount from previous PCR Record will solve our requirement but it didn't solve our purpose either we had issues with using the function in Document Generation Template Mapping. During Document Generation, we received the Placeholder permission error when we already had admin rights (Full access to the compensation information portlet and Pay components).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="muralidharansrinivasan_0-1754396932342.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296650i1D26C427F64E9D46/image-size/large?v=v2&amp;amp;px=999" role="button" title="muralidharansrinivasan_0-1754396932342.png" alt="muralidharansrinivasan_0-1754396932342.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The Same Rule works as expected when assigned to Job Information Base Object and doesn't work the same way in Document Generation.&lt;/P&gt;&lt;P&gt;All thanks to my lovely colleague&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/2219199"&gt;@sandhiyat2001&lt;/a&gt;&amp;nbsp;for pointing this out!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Engineering Team is required to introspect into this issue and make sure that Business rules work the same across all SAP SuccessFactors Features&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/sap-successfactors-employee-central-business-rule-function-doesnot-work-as/ba-p/14170341"/>
    <published>2025-08-11T11:23:27.949000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/understanding-the-impact-offer-approvals-in-your-hiring-process/ba-p/14178723</id>
    <title>Understanding the impact offer approvals in your hiring process</title>
    <updated>2025-08-12T16:44:36.418000+02:00</updated>
    <author>
      <name>NathanWilkinson</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/26987</uri>
    </author>
    <content>&lt;P&gt;In this article we will confirm the requirements for offer approvals in certain hiring processes with SuccessFactors Recruitment, Onboarding and Employee Central.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Recruitment to Manage Pending Hires to Employee Central&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The offer approval is mandatory for this process, if you do not have an offer approval, they will not appear in Manage Pending Hires.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Recruitment to Onboarding to Manage Pending Hires to Employee Central&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The offer approval is not mandatory for this process.&amp;nbsp;&lt;/P&gt;&lt;P&gt;However, if your internal hire onboarding process is as follows, &amp;nbsp;Recruitment to Manage Pending Hires to Employee Central to Onboarding.&amp;nbsp; Then you will need to have an offer approval.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/understanding-the-impact-offer-approvals-in-your-hiring-process/ba-p/14178723"/>
    <published>2025-08-12T16:44:36.418000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/a-failed-attempt-at-implementing-an-organization-level-hrbp-enhancement-via/ba-p/14181079</id>
    <title>A Failed Attempt at Implementing an Organization-Level HRBP Enhancement via Integration Center</title>
    <updated>2025-08-14T17:43:51.137000+02:00</updated>
    <author>
      <name>Berg_Song</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/44306</uri>
    </author>
    <content>&lt;DIV class=""&gt;&lt;P&gt;Today, I’d like to share a solution attempt for enhancing&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;organization-level HRBP management&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in SuccessFactors via Integration Center — and why it ultimately fell short. This idea originated from a customer requirement to manage HRBPs at the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;department&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;level (similar to how department heads are managed), rather than at the individual or position level.&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId-1737773483"&gt;1. Requirement&lt;/H2&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;Many customers prefer to manage HRBPs by&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;department&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;instead of&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;person&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;or&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;position&lt;/STRONG&gt;.&lt;BR /&gt;In this model:&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;UL class=""&gt;&lt;LI&gt;HRBPs are maintained only in&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;department data&lt;/STRONG&gt;, not in&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;job relationships&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Any HRBP update (due to termination, transfer, etc.) should automatically affect&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;all employees&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;under that department.&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId-1541259978"&gt;2. Typical Use Case&lt;/H2&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;Example: In the Finance Department, HRBPs differ by region:&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Finance – USA&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;→ HRBP A&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Finance – Germany&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;→ HRBP B&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Finance – China&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;→ HRBP C&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;An employee’s HRBP should be determined&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;based on their department and location&lt;/STRONG&gt;.&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId-1344746473"&gt;3. Background&lt;/H2&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;Currently,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;standard SuccessFactors&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;does&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;not&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;support HRBP management at the organization level.&lt;BR /&gt;Key points:&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;UL class=""&gt;&lt;LI&gt;HRBP data can only be maintained in&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;position relationships&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;job relationships&lt;/STRONG&gt;, with synchronization between these two tables.&lt;/LI&gt;&lt;LI&gt;Maintaining HRBPs at the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;organization (department)&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;level is unsupported, and cannot be automatically synced to employees’ job relationship data.&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId-1148232968"&gt;4. Custom Integration Enhancement Solution&lt;/H2&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H3 id="toc-hId-1080802182"&gt;Process Overview&lt;/H3&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;The enhancement was designed with the following steps:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP Community-Flow-Copy of Page-1.drawio.png" style="width: 921px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301063i51D8F4188004A719/image-size/large?v=v2&amp;amp;px=999" role="button" title="SAP Community-Flow-Copy of Page-1.drawio.png" alt="SAP Community-Flow-Copy of Page-1.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Step 1 – Create a Custom MDF Object&lt;/STRONG&gt;&lt;BR /&gt;Create a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;departmentHR&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;MDF object as a child of the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Department&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;general object.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Berg_Song_0-1755185890959.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301064i355852297A92CF7B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Berg_Song_0-1755185890959.png" alt="Berg_Song_0-1755185890959.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Berg_Song_0-1755185890959.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301064i355852297A92CF7B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Berg_Song_0-1755185890959.png" alt="Berg_Song_0-1755185890959.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;Field Type Note&lt;/STRONG&gt; &lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;externalCode&lt;/TD&gt;&lt;TD&gt;String&lt;/TD&gt;&lt;TD&gt;Auto-generated — concatenates&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;relationshipType&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and HRBP user ID&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;cust_HR&lt;/TD&gt;&lt;TD&gt;User&lt;/TD&gt;&lt;TD&gt;HRBP User ID&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;cust_Location&lt;/TD&gt;&lt;TD&gt;Generic Object&lt;/TD&gt;&lt;TD&gt;Location&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Step 2 – Output Integration Center Job&lt;/STRONG&gt;&lt;BR /&gt;Export employee job data (empJob) including:&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;UL class=""&gt;&lt;LI&gt;userId&lt;/LI&gt;&lt;LI&gt;effectiveDate&lt;/LI&gt;&lt;LI&gt;sequence&lt;/LI&gt;&lt;LI&gt;location&lt;/LI&gt;&lt;LI&gt;Calculated column:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;HRBP&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(derived from location + division in job info)&lt;/LI&gt;&lt;/UL&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Berg_Song_2-1755185981665.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301067iEF56AE9943A328BE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Berg_Song_2-1755185981665.png" alt="Berg_Song_2-1755185981665.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Berg_Song_3-1755185986949.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301069i28415C67E49BBBA2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Berg_Song_3-1755185986949.png" alt="Berg_Song_3-1755185986949.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Berg_Song_4-1755186000846.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301071i9AE04DD3B7E3A7FC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Berg_Song_4-1755186000846.png" alt="Berg_Song_4-1755186000846.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Step 3 – Input Integration Center Job&lt;/STRONG&gt;&lt;BR /&gt;Import and update job relationship records for each job info record, based on the exported data.&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId-755205958"&gt;5. Limitation&lt;/H2&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;This approach fails in scenarios where HRBP changes are&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;future-dated&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;but employees have no corresponding&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;future-dated job info record&lt;/STRONG&gt;.&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;Example:&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Job Info:&lt;/STRONG&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;UserId EffectiveDate HRBP &lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="97.4688px" height="30px"&gt;Employee-A&lt;/TD&gt;&lt;TD width="92.3281px" height="30px"&gt;2023-01-01&lt;/TD&gt;&lt;TD width="40px" height="30px"&gt;A&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="97.4688px" height="30px"&gt;Employee-A&lt;/TD&gt;&lt;TD width="92.3281px" height="30px"&gt;2024-01-02&lt;/TD&gt;&lt;TD width="40px" height="30px"&gt;B&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Department Data:&lt;/STRONG&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;Department EffectiveDate HRBP &lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="74.75px" height="57px"&gt;Dept-A&lt;/TD&gt;&lt;TD width="92.3125px" height="57px"&gt;2020-01-01&lt;/TD&gt;&lt;TD width="40px" height="57px"&gt;A&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="74.75px" height="57px"&gt;Dept-A&lt;/TD&gt;&lt;TD width="92.3125px" height="57px"&gt;2024-01-01&lt;/TD&gt;&lt;TD width="40px" height="57px"&gt;B&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="74.75px" height="57px"&gt;Dept-A&lt;/TD&gt;&lt;TD width="92.3125px" height="57px"&gt;2025-01-01&lt;/TD&gt;&lt;TD width="40px" height="57px"&gt;C&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;Result:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;C&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;will not appear for Employee-A until they have a job info record effective&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;after&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;2025-01-01. This happens because:&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;UL class=""&gt;&lt;LI&gt;empJob’s effective date is not derived from department effective dates.&lt;/LI&gt;&lt;LI&gt;Department data is fetched as of the job info’s effective date.&lt;/LI&gt;&lt;LI&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;future effective department record&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;cannot be retrieved from&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;empJob.&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId-558692453"&gt;6. Thoughts for Improvement&lt;/H2&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;API-based Enhancement&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;Use API queries to:&lt;UL class=""&gt;&lt;LI&gt;Retrieve all employees under the department.&lt;/LI&gt;&lt;LI&gt;Retrieve all effective department records.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Insert corresponding HRBP records into job info for any date range between department effective dates.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Using Standard “Manage Mass Change”&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;In standard SF, HRIS can use the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Manage Mass Change&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;tool to update HRBPs quickly whenever they change — even though this is&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;manual&lt;/STRONG&gt;, not automated.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId-362178948"&gt;7. Closing Thoughts&lt;/H2&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;While this solution didn’t achieve the desired automation, I hope it provides some insight and sparks discussion. I’d greatly appreciate any thoughts on:&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Why organization-level HRBP management is not considered best practice in SuccessFactors&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Whether there are&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;better workarounds&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for this requirement&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/a-failed-attempt-at-implementing-an-organization-level-hrbp-enhancement-via/ba-p/14181079"/>
    <published>2025-08-14T17:43:51.137000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/boosting-hr-data-quality-in-successfactors-the-three-pillars-for-driving/ba-p/14184414</id>
    <title>Boosting HR Data Quality in SuccessFactors: The Three Pillars for Driving Employee Central Value</title>
    <updated>2025-08-19T21:47:32.252000+02:00</updated>
    <author>
      <name>Cristian_Ocampo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/54931</uri>
    </author>
    <content>&lt;P&gt;In today’s digital workplace, HR data is more than a set of records — it’s the foundation for every payroll run, workforce report, and talent decision. When that foundation is shaky, the ripple effects are immediate and costly: delayed processes, bad analytics, compliance risks, and loss of executive trust.&lt;/P&gt;&lt;P&gt;At SAP SuccessFactors, we see the strongest results when customers approach data quality as an ongoing discipline, not just an afterthought. In Employee Central, this discipline can be framed around &lt;STRONG&gt;three pillars&lt;/STRONG&gt; — each supported by embedded tools and best practices.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Cristian_Ocampo_0-1755625369134.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302623iD53790F0DBC1B239/image-size/large?v=v2&amp;amp;px=999" role="button" title="Cristian_Ocampo_0-1755625369134.png" alt="Cristian_Ocampo_0-1755625369134.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pillar 1: Ensure Valid Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The quality of your data starts with the quality of your configuration. A poorly designed rule or unchecked setting can silently introduce errors that multiply over time.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Key enablers in Employee Central:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Business Rule Scenarios&lt;/STRONG&gt; – Replace outdated “basic” rule setup with guided, &lt;EM&gt;scenario-based&lt;/EM&gt; creation that reduces misconfigurations, enforces supported objects, and makes it easier to see where each rule is used.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Configuration Validations&lt;/STRONG&gt; – Built-in guardrails in the Business Configuration UI and Foundation Objects to prevent risky changes (e.g., making business keys mandatory, external codes of Foundation Objects read-only).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Check Tool&lt;/STRONG&gt; – Over 80 automated checks for configuration and data consistency, helping you resolve issues before they surface in production.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Diagnostic Tool&lt;/STRONG&gt; – Trace the exact workflow or employee data change, see which business rules triggered, who approved, and what happened behind the scenes - invaluable for troubleshooting.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;When these controls are in place, you start from a position of stability, rather than firefighting downstream issues.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pillar 2: Enforce Valid Master Data&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Even with perfect configuration, data quality can break down at the point of entry if there are no safeguards. This pillar is about guiding HR teams, managers, and employees to enter data correctly the first time.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Practical examples in Employee Central:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Built-in Validations&lt;/STRONG&gt; – Stop users from deleting key objects still in use, entering impossible dates of birth, or saving malformed email addresses.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Field Criteria &amp;amp; Associations&lt;/STRONG&gt; – Filter selections dynamically (e.g., only show cost centres valid for the chosen legal entity) to avoid mismatches.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Conditional Defaulting&lt;/STRONG&gt; – Automatically populate values like pay group or probation period based on complex criteria, reducing manual input.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Business Rules with Messages&lt;/STRONG&gt; – Trigger warnings, errors, or informational messages in real time to prevent incorrect data saves.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Four-Eyes Principle in Workflows&lt;/STRONG&gt; – Ensure no one approves their own requests, supporting compliance and audit integrity.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Alerts &amp;amp; Notifications&lt;/STRONG&gt; – Proactively flag upcoming events (work permit expiry, end of contract, probation period) so action is taken before deadlines occur.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Configurable Hire Templates&lt;/STRONG&gt; – Tailor the hire process to role, country, or employment type, reducing irrelevant fields and errors.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;By embedding these measures, organisations move from reactive clean-up to preventative design — a far more sustainable approach.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pillar 3: Identify &amp;amp; Cleanse Master Data&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;No system is immune to errors. The third pillar is about detecting and correcting issues quickly before they cause broader disruption.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Tools to support cleansing in Employee Central:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Admin Alerts&lt;/STRONG&gt; – Real-time notifications for data inconsistencies, stalled workflows, or invalid role assignments.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data Check Tool&lt;/STRONG&gt; – Over 40 checks for employee records, from missing work permit details to duplicate emergency contacts or overlapping dependent timelines.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Quick Fixes&lt;/STRONG&gt; – In certain cases, the system can auto-correct issues found by checks, turning a multi-hour cleanup into a one-click action.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Proactive monitoring here not only protects daily operations but also keeps analytics, reporting, and AI training datasets trustworthy.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;From Reactive to Proactive Data Quality&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The organisations that extract the most value from Employee Central treat data quality as a living process — continuously monitored, refined, and embedded into both system design and daily HR operations.&lt;/P&gt;&lt;P&gt;It’s not about running a “data cleanup project” once a year. It’s about having guardrails at configuration time, smart validations at data entry, and powerful diagnostics and alerts for when something does go wrong. This holistic approach turns HR data into a genuine business asset — reliable, compliant, and ready to power strategic decisions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Watch our recent webinar and access the slides for more information:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://play.goconsensus.com/u9e02fafe?fn=Muge&amp;amp;ln=Das&amp;amp;em=muge.das%40sap.com&amp;amp;co=SAP%20SuccessFactors" target="_blank" rel="nofollow noopener noreferrer"&gt;Webinar Recording &amp;amp; slides:&amp;nbsp; Boosting HR Data Quality: 3 Pillars for Driving Employee Central Business Value&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Further Resources&lt;/STRONG&gt;&lt;BR /&gt;SAP provides extensive guidance, release updates, and best practices to help you adopt these capabilities, from Business Rule Scenario migration blogs to Check Tool documentation. Regularly reviewing these resources, and building them into your governance model, &amp;nbsp;ensures that your data quality program evolves alongside your business.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://d.dam.sap.com/a/88dtD9L/IDP%20-%20EmployeeCentral%20-%20Optimizing%20Business%20Rules%20For%20Specific%20Scenarios%20v1.5.pdf?rc=67&amp;amp;inline=true" target="_self" rel="noopener noreferrer"&gt;IDP - EmployeeCentral - Optimizing Business Rules For Specific Scenarios&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/successfactors-employee-central/implementing-employee-central-core/centralized-services-in-employee-central" target="_blank" rel="noopener noreferrer"&gt;Centralized Services in Employee Central | SAP Help Portal&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/successfactors-platform/using-check-tool/using-check-tool-to-solve-issues" target="_blank" rel="noopener noreferrer"&gt;Using the Check Tool to Solve Issues | SAP Help Portal&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/successfactors-employee-central/implementing-and-managing-workflows/defining-alert-triggering-rules" target="_blank" rel="noopener noreferrer"&gt;Defining Alert Triggering Rules | SAP Help Portal&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;#pathtosuccess&amp;nbsp;#employeecentral&amp;nbsp;#dataquality&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/boosting-hr-data-quality-in-successfactors-the-three-pillars-for-driving/ba-p/14184414"/>
    <published>2025-08-19T21:47:32.252000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/how-talent-intelligence-hub-connects-8-successfactors-capabilities/ba-p/14179259</id>
    <title>How Talent Intelligence Hub Connects 8 SuccessFactors Capabilities</title>
    <updated>2025-08-22T07:32:28.782000+02:00</updated>
    <author>
      <name>jahnavia</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/37065</uri>
    </author>
    <content>&lt;P class=""&gt;Hi Readers,&lt;/P&gt;&lt;P class=""&gt;When most HR professionals hear "Talent Intelligence Hub," they immediately think Growth Portfolio and career development. While that's certainly TIH's crown jewel, but limiting your perspective to just career pathing is like using a smartphone only for making calls. You're missing most of its potential.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;TIH is far more than a career development tool – it's the intelligent backbone that transforms your entire SuccessFactors ecosystem.&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;While Growth Portfolio showcases TIH's career pathing capabilities, the real magic happens when TIH integrates seamlessly with Performance Management, Recruiting, Learning, Employee Central, and Compensation. These integrations turn isolated HR processes into an intelligent, connected talent ecosystem where every module becomes smarter through shared skill intelligence.&lt;/P&gt;&lt;P class=""&gt;Think of TIH not as another module, but as your talent data command center where skills, capabilities, and career insights flow across every touchpoint of the employee journey. When properly integrated, TIH transforms reactive HR processes into predictive, personalized talent experiences that drive real business outcomes.&lt;/P&gt;&lt;P class=""&gt;Let’s explore how Talent Intelligence Hub interacts with major modules in SuccessFactors and transforms key people processes.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;1. Performance Management and 360 Reviews&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;TIH supercharges performance processes by letting managers and peers&amp;nbsp;&lt;STRONG&gt;rate skills directly in Performance forms and 360 Reviews&lt;/STRONG&gt;.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Average ratings in 360 Reviews dynamically update the proficiency level&lt;/STRONG&gt;&amp;nbsp;for each skill in an employee’s growth portfolio.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Skill and competency ratings&lt;/STRONG&gt;&amp;nbsp;feed directly into the growth portfolio, building a rich, evolving view of employee capabilities.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jahnavia_1-1755766795255.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303421i72753993612996C4/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="jahnavia_1-1755766795255.png" alt="jahnavia_1-1755766795255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Career Development&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Career growth becomes more strategic with TIH:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The&amp;nbsp;&lt;STRONG&gt;Career Worksheet identifies readiness for future roles&lt;/STRONG&gt;, pulling proficiency data from the Growth Portfolio.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jahnavia_2-1755766795266.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303420i48A11BEB39459EF1/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="jahnavia_2-1755766795266.png" alt="jahnavia_2-1755766795266.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Employees and managers can&amp;nbsp;&lt;STRONG&gt;associate specific skills with development goals&lt;/STRONG&gt;, ensuring development plans are tailored and actionable.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jahnavia_3-1755766795271.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303422iF79953719CA9B184/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="jahnavia_3-1755766795271.png" alt="jahnavia_3-1755766795271.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Succession Management&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Building future-ready teams is easier:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Talent Search for successors&lt;/STRONG&gt;&amp;nbsp;includes powerful filters based on skills, competencies, and ratings from the Growth Portfolio.&lt;/LI&gt;&lt;LI&gt;This ensures succession decisions are grounded in real, validated capability data.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;4. Continuous Performance Management&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;TIH leverages&amp;nbsp;&lt;STRONG&gt;Continuous Performance Management (CPM)&lt;/STRONG&gt;&amp;nbsp;to infer skills and recommend development actions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;CPM recommendations, powered by AI, are automatically sourced into the employee’s growth portfolio.&lt;/LI&gt;&lt;LI&gt;This turns everyday feedback and activities into actionable talent insights.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jahnavia_4-1755766795282.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303424iCAA1F828CA523F1E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="jahnavia_4-1755766795282.png" alt="jahnavia_4-1755766795282.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5. Dynamic Teams&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Organizations now form agile, project-based teams with confidence:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Dynamic team roles include descriptions and proficiencies needed&lt;/STRONG&gt;&amp;nbsp;— skills are rated and tracked per assignment.&lt;/LI&gt;&lt;LI&gt;Once assignments are completed, new skills and experiences are added to employee growth portfolios, ensuring continuous skill evolution.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jahnavia_5-1755766795289.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303423i1C635D72FBC9B512/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="jahnavia_5-1755766795289.png" alt="jahnavia_5-1755766795289.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6. Opportunity Marketplace&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP’s Opportunity Marketplace connects gigs, projects, and stretch assignments with employee skills:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;TIH powers&amp;nbsp;&lt;STRONG&gt;assignment recommendations based on growth portfolio attributes&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Skill-based filtering makes matches relevant and useful.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jahnavia_6-1755766795300.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303426i43EA546FBBC29CA5/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="jahnavia_6-1755766795300.png" alt="jahnavia_6-1755766795300.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jahnavia_7-1755766795327.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303427iEC469083B64836C9/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="jahnavia_7-1755766795327.png" alt="jahnavia_7-1755766795327.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;7. People Analytics&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;TIH enriches analytics, giving managers and admins deep visibility:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Dashboards highlight attributes of direct reports, average proficiency levels, rating gaps, and more.&lt;/LI&gt;&lt;LI&gt;This enables targeted investment in learning and succession.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;8. Recruiting&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Even the hiring process benefits:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Candidate skills can be rated and commented on by interviewers&lt;/STRONG&gt;, feeding into the TIH for future growth and suitability analysis.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jahnavia_8-1755766795335.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303425i1C264C18A1B3A11E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="jahnavia_8-1755766795335.png" alt="jahnavia_8-1755766795335.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;In Interview Central, competencies, skills and interview questions from the job requisition are pulled.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jahnavia_9-1755766795341.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303430i6E8C3B1C20B700D1/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="jahnavia_9-1755766795341.png" alt="jahnavia_9-1755766795341.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;9. Learning&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;TIH is the bridge between learning and performance:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;After course completion,&amp;nbsp;&lt;STRONG&gt;skill proficiency ratings update automatically&lt;/STRONG&gt;&amp;nbsp;in the Growth Portfolio.&lt;/LI&gt;&lt;LI&gt;Employees can search for learning content by skill, and receive personalized recommendations shaped by their portfolios.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jahnavia_10-1755766795351.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303429i1FA28B22431BB1AC/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="jahnavia_10-1755766795351.png" alt="jahnavia_10-1755766795351.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jahnavia_11-1755766795361.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303428i72600D42D70DD144/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="jahnavia_11-1755766795361.png" alt="jahnavia_11-1755766795361.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Organizations embracing TIH are positioned to develop agile, future-ready teams and empower employees on their career journeys. If you’re looking to maximize your SuccessFactors investment, integrating with the Talent Intelligence Hub is the smart next step!&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;If you're planning a TIH implementation, currently in the middle of one, or just trying to understand what this platform does beyond the marketing materials, my blog will help cut through the noise and focus on what really matters for a successful deployment.&amp;nbsp;&amp;nbsp;The stuff that matters when you're in the middle of an implementation and need straight answers. I've consolidated the key learnings from multiple projects to give you the facts without the fluff, based on what I've seen work and what doesn't in practice.&amp;nbsp;&lt;A href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/talent-intelligence-hub-implementation-key-learnings-from-client-projects/ba-p/14128452" target="_blank"&gt;TIH - Key Learnings from Client Projects&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;Thank you for taking the time to read.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;You are welcome to express your views and ask any queries in the comment section of this blog. I would be pleased to impart my knowledge to you.&amp;nbsp;&amp;nbsp;Share this blog with your colleagues.&lt;BR /&gt;&lt;BR /&gt;Thank you!!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/how-talent-intelligence-hub-connects-8-successfactors-capabilities/ba-p/14179259"/>
    <published>2025-08-22T07:32:28.782000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/employee-central-to-employee-central-payroll-integration-scenarios-a/ba-p/13785766</id>
    <title>🔗 Employee Central to Employee Central Payroll Integration Scenarios – A Technical Perspective</title>
    <updated>2025-08-24T11:44:50.613000+02:00</updated>
    <author>
      <name>sushilgupta857</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/720925</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1022170565"&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;️SuccessFactors EC to Employee Central Payroll Integration – Direct vs IAS-based Connectivity&lt;/H2&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-825657060"&gt;&lt;span class="lia-unicode-emoji" title=":man_technologist:"&gt;👨‍💻&lt;/span&gt;About Me&lt;/H2&gt;&lt;P&gt;Hare Krishna&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":folded_hands:"&gt;🙏&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;I am an SAP BTP Cloud Architect sharing practical insights, solutions, and real-world experiences from the SAP ecosystem.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-629143555"&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;Introduction&lt;/H2&gt;&lt;P&gt;When implementing &lt;STRONG&gt;Employee Central Payroll (ECP)&lt;/STRONG&gt;, connectivity between &lt;STRONG&gt;SuccessFactors Employee Central (EC)&lt;/STRONG&gt; and &lt;STRONG&gt;Payroll&lt;/STRONG&gt; plays a vital role in ensuring smooth payroll processes and seamless employee experience.&lt;/P&gt;&lt;P&gt;There are &lt;STRONG&gt;two main scenarios&lt;/STRONG&gt; for this connectivity:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":high_voltage:"&gt;⚡&lt;/span&gt;&lt;STRONG&gt;Direct Connectivity&lt;/STRONG&gt; – EC communicates with ECP without Identity Authentication Service (IAS).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":locked:"&gt;🔒&lt;/span&gt;&lt;STRONG&gt;IAS-enabled Connectivity&lt;/STRONG&gt; – EC communicates with ECP via &lt;STRONG&gt;SAP Cloud Identity Services - Identity Authentication (IAS)&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Both approaches are valid, and depending on &lt;STRONG&gt;customer security policies, infrastructure readiness, and implementation strategy&lt;/STRONG&gt;, one or the other may be chosen.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-432630050"&gt;&lt;span class="lia-unicode-emoji" title=":direct_hit:"&gt;🎯&lt;/span&gt;Key Functionalities Enabled Through EC ↔ ECP Connectivity&lt;/H2&gt;&lt;P&gt;Once the integration between &lt;STRONG&gt;SuccessFactors EC&lt;/STRONG&gt; and &lt;STRONG&gt;ECP&lt;/STRONG&gt; is established, organizations can leverage the following key functionalities:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;🧾 &lt;STRONG&gt;Direct Payslip Access from EC&lt;/STRONG&gt; – Employees can view their &lt;STRONG&gt;pay statements&lt;/STRONG&gt; directly in the EC &lt;STRONG&gt;Payroll Information&lt;/STRONG&gt; tab.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":counterclockwise_arrows_button:"&gt;🔄&lt;/span&gt;&lt;STRONG&gt;Real-time Data Access&lt;/STRONG&gt; – Payroll data and reports from ECP are available in EC.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":high_voltage:"&gt;⚡&lt;/span&gt;&lt;STRONG&gt;Support Package Level Visibility&lt;/STRONG&gt; – Administrators can check the &lt;STRONG&gt;ECP Support Package (SP) level&lt;/STRONG&gt; from the EC interface.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":up_not_button:"&gt;🆙&lt;/span&gt;&lt;STRONG&gt;Request ECP Support Package Upgrades&lt;/STRONG&gt; – Through EC Upgrade Center, admins can request &lt;STRONG&gt;support package updates&lt;/STRONG&gt; for ECP.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":locked_with_key:"&gt;🔐&lt;/span&gt;&lt;STRONG&gt;Seamless Authentication and SSO&lt;/STRONG&gt; – Depending on the architecture, employees enjoy &lt;STRONG&gt;single sign-on&lt;/STRONG&gt; across EC and ECP.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-236116545"&gt;&lt;span class="lia-unicode-emoji" title=":building_construction:"&gt;🏗&lt;/span&gt;️ Architecture Scenarios&lt;/H2&gt;&lt;H3 id="toc-hId-168685759"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_1:"&gt;1️⃣&lt;/span&gt;Direct Connectivity (EC → ECP)&lt;/H3&gt;&lt;P&gt;In this approach, the connection is established &lt;STRONG&gt;directly between EC and ECP&lt;/STRONG&gt; without an additional identity layer.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;   🌐 SuccessFactors EC
          │
          ▼
   🖥️ Employee Central Payroll (ECP)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":heavy_check_mark:"&gt;✔️&lt;/span&gt;&lt;STRONG&gt;Highlights&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Simpler connectivity model.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;No additional identity provider configuration.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Suitable for rapid implementations.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;&lt;STRONG&gt;Considerations&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Authentication handled directly at ECP level.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Less flexible for future cloud identity expansions.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--27827746"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_2:"&gt;2️⃣&lt;/span&gt;Connectivity with IAS (EC → IAS → ECP)&lt;/H3&gt;&lt;P&gt;In this approach, &lt;STRONG&gt;SAP IAS&lt;/STRONG&gt; acts as the &lt;STRONG&gt;identity layer&lt;/STRONG&gt;, managing authentication and providing enhanced security.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;   🌐 SuccessFactors EC
          │
          ▼
   🔑 SAP Identity Authentication Service (IAS)
          │
          ▼
   🖥️ Employee Central Payroll (ECP)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":heavy_check_mark:"&gt;✔️&lt;/span&gt;&lt;STRONG&gt;Highlights&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Centralized identity management.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Better alignment with SAP’s long-term cloud security strategy.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Easier integration with other SAP SaaS products.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;&lt;STRONG&gt;Considerations&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Requires additional configuration of IAS tenants.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Slightly more complex to implement initially.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--353423970"&gt;&lt;span class="lia-unicode-emoji" title=":gear:"&gt;⚙️&lt;/span&gt;Automation via Upgrade Center&lt;/H2&gt;&lt;P&gt;SAP has simplified IAS setup for ECP through &lt;STRONG&gt;Upgrade Center automation&lt;/STRONG&gt; in SuccessFactors:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Navigate to &lt;STRONG&gt;Admin Center → Upgrade Center&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Select &lt;STRONG&gt;Employee Central Payroll IAS Integration&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Choose &lt;STRONG&gt;“Learn More &amp;amp; Upgrade Now”&lt;/STRONG&gt; to automate IAS enablement.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;This eliminates multiple manual steps and ensures standardization across environments.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--549937475"&gt;&lt;span class="lia-unicode-emoji" title=":bar_chart:"&gt;📊&lt;/span&gt;Comparison of Connectivity Approaches&lt;/H2&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-unicode-emoji" title=":label:"&gt;🏷&lt;/span&gt;️ Criteria&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span class="lia-unicode-emoji" title=":high_voltage:"&gt;⚡&lt;/span&gt; Direct Connectivity (EC → ECP)&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span class="lia-unicode-emoji" title=":locked:"&gt;🔒&lt;/span&gt; IAS-based Connectivity (EC → IAS → ECP) &lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Architecture Simplicity&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Simple, fewer components involved&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;Slightly complex due to IAS layer&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Authentication&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Handled directly by &lt;STRONG&gt;ECP&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Centralized in &lt;STRONG&gt;IAS&lt;/STRONG&gt; (cloud standard)&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Implementation Speed&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Faster setup, minimal steps&lt;/TD&gt;&lt;TD&gt;Requires IAS tenant setup &amp;amp; configuration&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Security &amp;amp; Compliance&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Basic security&lt;/TD&gt;&lt;TD&gt;Enhanced security with SSO &amp;amp; centralized identity&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Future-readiness&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Limited flexibility for integration with other cloud products&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-unicode-emoji" title=":globe_showing_europe_africa:"&gt;🌍&lt;/span&gt;Recommended by SAP for long-term roadmap&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Upgrade Path&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Manual checks &amp;amp; upgrades&lt;/TD&gt;&lt;TD&gt;Supported with &lt;STRONG&gt;Upgrade Center automation&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Best Use Case&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Rapid go-live, smaller landscapes&lt;/TD&gt;&lt;TD&gt;Enterprises with strong security requirements &amp;amp; multi-cloud strategy&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--617368261"&gt;&lt;span class="lia-unicode-emoji" title=":framed_picture:"&gt;🖼&lt;/span&gt;️ Key Implementation Screenshot&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Figure : SuccessFactors Provisioning – SAML ACS URL Configuration&lt;/STRONG&gt;&lt;BR /&gt;Below is an example screenshot from SuccessFactors Provisioning where we configure the &lt;STRONG&gt;Assertion Consumer Service (ACS) URL&lt;/STRONG&gt;.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;This ACS URL can either point to &lt;STRONG&gt;IAS (Identity Authentication Service)&lt;/STRONG&gt; or directly to &lt;STRONG&gt;ECP (Employee Central Payroll)&lt;/STRONG&gt;, depending on the chosen architecture.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;This configuration plays a crucial role in how authentication and single sign-on (SSO) are managed between EC and ECP.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-24 at 1.24.41 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304374iDD67B78C91730AFC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 1.24.41 PM.png" alt="Screenshot 2025-08-24 at 1.24.41 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Post updating the URL here, You can download the metadata from here and update it in IAS or ECP system as per the approach you follow. Follow the Step by Step documentation with screenshots from SAP for performing the scenarios. (Check Reference column at the end of the blog for links to SAP documentation).&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--595710128"&gt;&lt;span class="lia-unicode-emoji" title=":busts_in_silhouette:"&gt;👥&lt;/span&gt;User Provisioning &amp;amp; Authorization in ECP&lt;/H2&gt;&lt;P&gt;For EC ↔ ECP integration to work (Direct or IAS-based), users must exist and have correct roles in ECP.&lt;/P&gt;&lt;H3 id="toc-hId--1085626640"&gt;&lt;span class="lia-unicode-emoji" title=":key:"&gt;🔑&lt;/span&gt;Key Requirements&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;User Existence&lt;/STRONG&gt;: Each employee must have a user master (SU01) in ECP.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Consistent IDs&lt;/STRONG&gt;: EC, ECP, and IAS (if used) must share the same identifier (e.g., User ID).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Authorizations&lt;/STRONG&gt;: Roles and objects required include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Payroll Control Center (PCC)&lt;/STRONG&gt; roles such as &lt;EM&gt;Process Manager / Process Modeler&lt;/EM&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Authorization objects like &lt;STRONG&gt;P_PYT_CFG&lt;/STRONG&gt; for payroll configuration.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Employee / Manager roles&lt;/STRONG&gt; for payslip access.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Admin roles&lt;/STRONG&gt; for payroll system configuration and SP upgrades.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1282140145"&gt;&lt;span class="lia-unicode-emoji" title=":clipboard:"&gt;📋&lt;/span&gt;Summary Table&lt;/H3&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;Area Required Access &lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;Employee Payslip Access&lt;/TD&gt;&lt;TD&gt;Payroll report / HR employee role&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;PCC Functions&lt;/TD&gt;&lt;TD&gt;PCC roles (Process Manager, Modeler, etc.)&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;System Configuration&lt;/TD&gt;&lt;TD&gt;Admin roles for payroll setup &amp;amp; upgrades&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;: Authentication only confirms identity. Correct authorization is what finally enables payslip view and payroll activities in ECP.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--1185250643"&gt;&lt;span class="lia-unicode-emoji" title=":sparkles:"&gt;✨&lt;/span&gt;Key Takeaways&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Both &lt;STRONG&gt;Direct Connectivity&lt;/STRONG&gt; and &lt;STRONG&gt;IAS-based Connectivity&lt;/STRONG&gt; are supported.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Organizations with &lt;STRONG&gt;simpler landscapes&lt;/STRONG&gt; or &lt;STRONG&gt;faster timelines&lt;/STRONG&gt; may prefer &lt;STRONG&gt;Direct Connectivity&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Organizations with &lt;STRONG&gt;long-term cloud roadmaps&lt;/STRONG&gt; and &lt;STRONG&gt;enhanced security needs&lt;/STRONG&gt; should choose &lt;STRONG&gt;IAS-based Connectivity&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Upgrade Center automation&lt;/STRONG&gt; makes IAS setup easier, reducing manual administrative work.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--1381764148"&gt;&lt;span class="lia-unicode-emoji" title=":question_mark:"&gt;❓&lt;/span&gt;FAQs&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Q1: Do I always need IAS for EC ↔ ECP integration?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":right_arrow:"&gt;➡️&lt;/span&gt;No. Direct connectivity is still supported, but IAS is recommended for cloud security and future readiness.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q2: What’s the main difference in authentication between the two models?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":right_arrow:"&gt;➡️&lt;/span&gt;In direct connectivity, authentication is managed at ECP. In IAS model, authentication is centralized in IAS.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q3: Can I request ECP Support Package (SP) upgrades via EC?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":right_arrow:"&gt;➡️&lt;/span&gt;Yes. Once connectivity is established, EC provides visibility into ECP SP levels and you can raise upgrade requests.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q4: Is the IAS setup manual or automated?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":right_arrow:"&gt;➡️&lt;/span&gt;Initially, it was manual. Now, &lt;STRONG&gt;Upgrade Center automation&lt;/STRONG&gt; simplifies the setup process significantly.&lt;/P&gt;&lt;H2 id="toc-hId--1578277653"&gt;&lt;span class="lia-unicode-emoji" title=":books:"&gt;📚&lt;/span&gt;References&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;A class="" href="https://me.sap.com/notes/0002253359" target="_new" rel="noopener noreferrer"&gt;SAP Note 2253359 – Employee Central Payroll: Access to Payroll application (payslip)&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;A class="" href="https://help.sap.com/docs/successfactors-employee-central-payroll/implementing-employee-central-payroll-based-on-sap-human-capital-management-for-sap-erp-hcm/sap-cloud-identity-services-identity-authentication-for-employee-central-payroll-configuration-steps?locale=en-US" target="_new" rel="noopener noreferrer"&gt;SAP Help Documentation – SAP Cloud Identity Services – Identity Authentication for Employee Central Payroll Configuration Steps&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;A class="" href="https://help.sap.com/docs/successfactors-employee-central-payroll/implementing-employee-central-payroll-based-on-sap-human-capital-management-for-sap-erp-hcm/automation-of-sap-cloud-identity-services-identity-authentication-for-employee-central-payroll-using-sap-successfactors-upgrade-center?locale=en-US" target="_new" rel="noopener noreferrer"&gt;SAP Help Documentation – Automation of SAP Cloud Identity Services (IAS) using Upgrade Center&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/employee-central-to-employee-central-payroll-integration-scenarios-a/ba-p/13785766"/>
    <published>2025-08-24T11:44:50.613000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/post-implementation-optimization-guide-keeping-your-sap-successfactors/ba-p/14190772</id>
    <title>Post-Implementation Optimization Guide : Keeping Your SAP SuccessFactors Running Smoothly</title>
    <updated>2025-08-25T10:32:17.321000+02:00</updated>
    <author>
      <name>jahnavia</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/37065</uri>
    </author>
    <content>&lt;P class=""&gt;Successfully implementing SAP SuccessFactors is a significant milestone, but &lt;STRONG&gt;it's just the beginning of your HR transformation journey&lt;/STRONG&gt;. As business requirements evolve and your organization grows, your SuccessFactors environment needs regular attention to maintain optimal performance.&lt;/P&gt;&lt;H2 id="toc-hId-1738673933"&gt;Why Post-Implementation Review Matters&lt;/H2&gt;&lt;P class=""&gt;Over time, even the best-configured systems can develop inefficiencies. Business processes change, new features are released, user needs evolve, and &lt;STRONG&gt;what worked perfectly at go-live may no longer serve your organization effectively&lt;/STRONG&gt;. Without regular maintenance, organizations often experience:&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;Slower workflows&lt;/LI&gt;&lt;LI&gt;Outdated configurations&lt;/LI&gt;&lt;LI&gt;User frustration&lt;/LI&gt;&lt;LI&gt;Missed opportunities for automation&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1542160428"&gt;Key Areas to Monitor&lt;/H2&gt;&lt;P class=""&gt;&lt;STRONG&gt;System Performance&lt;/STRONG&gt; Regular review of system configurations, integration health, and data quality ensures your platform continues running smoothly. This includes checking workflow efficiency, process performance, and overall system responsiveness.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Security and Compliance&lt;/STRONG&gt; Role-based permissions, security settings, and compliance requirements need ongoing attention. Regular audits help identify potential vulnerabilities and ensure your system meets current regulatory standards.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Feature Utilization&lt;/STRONG&gt; SAP regularly releases new features and enhancements. &lt;STRONG&gt;Many organizations miss opportunities to leverage capabilities they're already licensed for&lt;/STRONG&gt;, simply because they haven't reviewed what's available since implementation.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;User Experience&lt;/STRONG&gt; Monitoring user adoption patterns, gathering feedback, and identifying pain points helps ensure your SuccessFactors investment continues delivering value to end users.&lt;/P&gt;&lt;H2 id="toc-hId-1345646923"&gt;Practical Tools and Actions&lt;/H2&gt;&lt;P class=""&gt;&lt;STRONG&gt;Leverage SAP's Built-in Diagnostics.&lt;/STRONG&gt; SAP provides a &lt;STRONG&gt;built-in Check Tool that automates system diagnostics&lt;/STRONG&gt;, identifying configuration issues, security gaps, and performance bottlenecks. Regular use of this tool helps catch problems before they impact users.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;HR Administrator Actions&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;Monitor user adoption metrics through system analytics&lt;/LI&gt;&lt;LI&gt;Review and clean up inactive user accounts and outdated role assignments&lt;/LI&gt;&lt;LI&gt;Audit workflow approvals for bottlenecks and delays&lt;/LI&gt;&lt;LI&gt;Validate data integrity across modules through standard reports&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Business User Involvement&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;Gather regular feedback from managers and employees on system usability&lt;/LI&gt;&lt;LI&gt;Document new business requirements as they emerge&lt;/LI&gt;&lt;LI&gt;Identify manual workarounds that could be automated&lt;/LI&gt;&lt;LI&gt;Track which features are underutilized and why&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Proactive Maintenance&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;Subscribe to SAP release notes to stay informed about new features&lt;/LI&gt;&lt;LI&gt;Establish regular configuration backup procedures&lt;/LI&gt;&lt;LI&gt;Monitor integration endpoints for data synchronization issues&lt;/LI&gt;&lt;LI&gt;Review and update security permissions quarterly&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Regular Tasks for Partner Consultants&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Instance Refresh&lt;/STRONG&gt;: Refresh Preview and Development instances from Production to ensure consistent testing environments with current data&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data Cleanup&lt;/STRONG&gt;: Remove inactive and outdated data, close previous year forms, and purge obsolete records&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;System Maintenance&lt;/STRONG&gt;: Perform cache clearance and system optimization tasks&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Job Monitoring&lt;/STRONG&gt;: Check and monitor scheduled jobs to ensure all background processes are running successfully&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Security Updates&lt;/STRONG&gt;: Execute RBP refresh and role recertification processes&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Integration Sync&lt;/STRONG&gt;: Ensure HRIS synchronization and third-party system connectivity&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1149133418"&gt;Benefits of Regular Optimization&lt;/H2&gt;&lt;P class=""&gt;Organizations that regularly review and optimize their SuccessFactors environment typically see:&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Improved system performance&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Reduced support costs&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Better user satisfaction&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Stronger compliance&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;More importantly, they ensure their HR technology investment continues supporting business objectives as they evolve.&lt;/P&gt;&lt;H2 id="toc-hId-952619913"&gt;Moving Forward&lt;/H2&gt;&lt;P class=""&gt;&lt;STRONG&gt;Like a garden that requires regular tending to flourish, your SuccessFactors system needs continuous care and attention.&lt;/STRONG&gt; Whether through internal resources or external expertise, &lt;STRONG&gt;ongoing optimization ensures your HR investment continues growing in value rather than becoming neglected and underperforming.&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;The key is establishing a regular cadence of review and improvement&lt;/STRONG&gt;, ensuring your SuccessFactors investment continues delivering value long after the initial implementation.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thank you for taking the time to read.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;You are welcome to express your views and ask any queries in the comment section of this blog. I would be pleased to impart my knowledge to you.&amp;nbsp;&amp;nbsp;Share this blog with your colleagues.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Additional Blogs&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you are a Fresher and looking to specialize in Success Factors, check out my blog -&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/human-capital-management-blogs-by-members/from-fresher-to-professional-consultant-your-guide-to-mastering/ba-p/13559032" target="_blank"&gt;Guide to Mastering SuccessFactors Consulting&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp; You will find valuable insights and practical tips to get expertise and establish yourself as an expert in the industry.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you are planning an SAP SuccessFactors implementation, check out my blog -&amp;nbsp;&lt;A href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/prep-guide-for-a-flawless-sap-successfactors-implementation-insights-from/ba-p/13771340" target="_blank"&gt;Prep Guide for a Flawless SAP SuccessFactors Implementation&lt;/A&gt;&amp;nbsp; This expert guide offers critical insights for a flawless project.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you are looking to get&amp;nbsp;certified in SAP SuccessFactors, check out my blog -&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/human-capital-management-blogs-by-members/the-proven-way-to-prepare-for-sap-successfactors-certification-don-t-take/ba-p/13571216" target="_blank"&gt;The Proven Way to Prepare for SAP SuccessFactors Certification&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;With all my experience,&amp;nbsp;here is the checklist I made to find a resourceful consultant. Hope this helps the other recruiters and the SF interview panel while hiring.&amp;nbsp;check out my blog -&lt;A href="https://community.sap.com/t5/human-capital-management-blogs-by-members/things-recruiters-interview-panel-should-look-into-when-hiring-an-sap-sf/ba-p/13523526" target="_blank"&gt;Things recruiters/interview panel should look into when hiring an SAP SF consultant&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;BR /&gt;Thank you!!&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/post-implementation-optimization-guide-keeping-your-sap-successfactors/ba-p/14190772"/>
    <published>2025-08-25T10:32:17.321000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/successfactors-story-reports-404-error-when-sharing-urls/ba-p/14196461</id>
    <title>SuccessFactors Story Reports – 404 Error When Sharing URLs</title>
    <updated>2025-08-28T07:28:54.662000+02:00</updated>
    <author>
      <name>Mirjam</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/42031</uri>
    </author>
    <content>&lt;P&gt;If you copy the &lt;STRONG&gt;URL of a Story Report&lt;/STRONG&gt; and share it with another user, they may experience one of the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;A &lt;STRONG&gt;404 Error&lt;/STRONG&gt; (page not found).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Graphs and charts not loading&lt;/STRONG&gt;, showing a &lt;EM&gt;“Failed to fetch data”&lt;/EM&gt; message.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mirjam_0-1756358466472.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305721i7725E71B6C392A18/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Mirjam_0-1756358466472.png" alt="Mirjam_0-1756358466472.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mirjam_1-1756358509327.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305722i9CF3BD1CEB75BFF4/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Mirjam_1-1756358509327.png" alt="Mirjam_1-1756358509327.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The Story Reporting product still appears &lt;STRONG&gt;to lack full stability&lt;/STRONG&gt;, even after five years. What would be your recommendation if we plan to broaden its scope and roll it out to our managers?&amp;nbsp;&lt;/P&gt;&lt;P&gt;Kind regards&lt;/P&gt;&lt;P&gt;Mirjam&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/successfactors-story-reports-404-error-when-sharing-urls/ba-p/14196461"/>
    <published>2025-08-28T07:28:54.662000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/unlocking-mdf-power-a-practical-user-case-in-sap-successfactors/ba-p/14201953</id>
    <title>Unlocking MDF Power: A Practical User Case in SAP SuccessFactors</title>
    <updated>2025-08-31T19:13:53.482000+02:00</updated>
    <author>
      <name>Berg_Song</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/44306</uri>
    </author>
    <content>&lt;P class=""&gt;&lt;SPAN class=""&gt;Today, I would like to share a custom MDF (Metadata Framework) use case that addresses a complex requirement related to &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Finance Cost Internal Control&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt; &lt;SPAN class=""&gt;While this specific requirement may not be applicable across all industries, the case demonstrates: &lt;/SPAN&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;The &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;capabilities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; of no-code MDF, &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Its &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;limitations and common workarounds&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;A structured &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;step-by-step problem-solving approach&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; to achieve business outcomes through custom MDF design. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1759023047"&gt;&lt;SPAN class=""&gt;Business Requirement &lt;/SPAN&gt;&lt;/H2&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Customer A has a strict internal cost control policy. The expense limit amount an employee can approve for direct reports (without Finance involvement) depends on &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Job Grade, Business Unit, and Expense Type&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;, a workflow is needed if the data is needed to be updated based on if the limit guidance is exceeded.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1691592261"&gt;&lt;SPAN class=""&gt;Key UI Requirements &lt;/SPAN&gt;&lt;/H3&gt;&lt;OL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;A user-friendly form for employees to review costs and submit new applications with workflow. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Expense limit guidelines and manager’s limit must be displayed for reference: &lt;/SPAN&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Expense guideline = based on Job Grade, Business Unit, and Expense Type. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Manager’s limit = retrieved from manager’s corresponding expense record. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Alerts: &lt;/SPAN&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;EM&gt;&lt;SPAN class=""&gt;Soft alert&lt;/SPAN&gt;&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; if Employee Limit &amp;gt; Guideline. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;EM&gt;&lt;SPAN class=""&gt;Error alert&lt;/SPAN&gt;&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; if Employee Limit &amp;gt; Manager Limit.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Error Alert if Employee select the item which is not available in manager's form.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Expense amounts must be converted based on the &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;source currency&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; (multi-currency setup across business units). &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;A &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;unique record&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; must exist per Business Unit and Expense Type. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;When viewing others’ expense data: &lt;/SPAN&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Only the &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;latest record&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; should be visible. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Some fields (e.g., attachments) must be hidden. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-1495078756"&gt;&lt;SPAN class=""&gt;Workflow Requirements &lt;/SPAN&gt;&lt;/H3&gt;&lt;OL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;If &lt;/SPAN&gt;&lt;SPAN class=""&gt;Employee Limit &amp;lt;= Guideline&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;and&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;Employee Limit &amp;lt;= Manager Limit&lt;/SPAN&gt;&lt;SPAN class=""&gt; → Manager approval only. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;If &lt;/SPAN&gt;&lt;SPAN class=""&gt;Employee Limit &amp;gt; Guideline&lt;/SPAN&gt;&lt;SPAN class=""&gt; in any item → Manager + Finance Business Partner approval required. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Records approved by Finance should not be flagged again as exceeding the guideline &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;in the next application process.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Finance approvers vary by &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;applicant’s department&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Both employees and managers (on behalf of direct reports) must be able to submit requests. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1169482532"&gt;&lt;SPAN class=""&gt;Requirement Analysis&lt;/SPAN&gt;&lt;/H2&gt;&lt;TABLE border="0" width="780" cellspacing="0" cellpadding="0"&gt;&lt;COLGROUP&gt;&lt;COL width="283" /&gt;&lt;COL width="160" /&gt;&lt;COL width="172" /&gt;&lt;COL width="150" /&gt;&lt;COL width="12" /&gt;&lt;/COLGROUP&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="283" height="13"&gt;&lt;STRONG&gt;Requirement&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;STRONG&gt;Category&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="172"&gt;&lt;STRONG&gt;Reasoning&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="150"&gt;&lt;STRONG&gt;How to Achieve&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="12"&gt;&lt;STRONG&gt;Difficulty (1–5)&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="283" height="28"&gt;User-friendly form &amp;amp; workflow&lt;/TD&gt;&lt;TD width="160"&gt;MDF Form&lt;/TD&gt;&lt;TD width="172"&gt;Multiple expense types, history &amp;amp; audit required&lt;/TD&gt;&lt;TD width="150"&gt;Effective-dated parent-child MDF entity + MDF version history&lt;/TD&gt;&lt;TD width="12"&gt;3&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="283" height="41"&gt;Unique record per BU + Expense Type&lt;/TD&gt;&lt;TD width="160"&gt;MDF Form&lt;/TD&gt;&lt;TD width="172"&gt;Prevent duplicates&lt;/TD&gt;&lt;TD width="150"&gt;ExternalCode = String Type + onSave rule to auto-generate key (UserID+BU+Type)&lt;/TD&gt;&lt;TD width="12"&gt;4&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="283" height="14"&gt;Expense guideline lookup&lt;/TD&gt;&lt;TD width="160"&gt;Business Rule&lt;/TD&gt;&lt;TD width="172"&gt;Based on Job Grade, BU, Expense Type&lt;/TD&gt;&lt;TD width="150"&gt;Lookup table + auto-populate via rule&lt;/TD&gt;&lt;TD width="12"&gt;2&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="283" height="28"&gt;Manager’s limit&lt;/TD&gt;&lt;TD width="160"&gt;Business Rule&lt;/TD&gt;&lt;TD width="172"&gt;Derived from manager’s record&lt;/TD&gt;&lt;TD width="150"&gt;Lookup manager’s expense MDF form + auto-populate&lt;/TD&gt;&lt;TD width="12"&gt;4&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="283" height="28"&gt;Currency conversion&lt;/TD&gt;&lt;TD width="160"&gt;Business Rule&lt;/TD&gt;&lt;TD width="172"&gt;Multinational setup&lt;/TD&gt;&lt;TD width="150"&gt;Lookup standard exchange rate table in SF&lt;/TD&gt;&lt;TD width="12"&gt;3&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="283" height="28"&gt;Alerts for inappropriate limits&lt;/TD&gt;&lt;TD width="160"&gt;Business Rule&lt;/TD&gt;&lt;TD width="172"&gt;Prevent policy breach&lt;/TD&gt;&lt;TD width="150"&gt;Warning &amp;amp; Error rules (onChange + onSave)&lt;/TD&gt;&lt;TD width="12"&gt;2&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="283" height="14"&gt;Workflow conditions&lt;/TD&gt;&lt;TD width="160"&gt;Workflow + Rules&lt;/TD&gt;&lt;TD width="172"&gt;Approval logic across multiple items&lt;/TD&gt;&lt;TD width="150"&gt;Workflow rules with “Where” criteria&lt;/TD&gt;&lt;TD width="12"&gt;5&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="283" height="28"&gt;Exclude already approved items&lt;/TD&gt;&lt;TD width="160"&gt;Workflow + Rules&lt;/TD&gt;&lt;TD width="172"&gt;Finance-approved items shouldn’t re-trigger approval&lt;/TD&gt;&lt;TD width="150"&gt;Add flag + exclude via “Where” condition&lt;/TD&gt;&lt;TD width="12"&gt;5&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="283" height="14"&gt;Finance approver per department&lt;/TD&gt;&lt;TD width="160"&gt;Workflow + Dynamic Role&lt;/TD&gt;&lt;TD width="172"&gt;Approver varies by department&lt;/TD&gt;&lt;TD width="150"&gt;Create standalone dynamic role group&lt;/TD&gt;&lt;TD width="12"&gt;2&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="283" height="28"&gt;Permissions for visibility&lt;/TD&gt;&lt;TD width="160"&gt;RBP + Field Permissions&lt;/TD&gt;&lt;TD width="172"&gt;Control record &amp;amp; field access&lt;/TD&gt;&lt;TD width="150"&gt;Target populations + No Access permissions&lt;/TD&gt;&lt;TD width="12"&gt;3&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-972969027"&gt;&lt;SPAN class=""&gt;Technical Solution Overview &lt;/SPAN&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-905538241"&gt;&lt;SPAN class=""&gt;Form Design &lt;/SPAN&gt;&lt;/H3&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Parent-child MDF entity for expense form. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Effective dating for history tracking.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;A user can only maintain a record per one Expense Type and Business Unit.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE width="815"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="107"&gt;&lt;STRONG&gt;Table&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="131"&gt;&lt;STRONG&gt;Field&amp;nbsp;Name&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="106"&gt;&lt;STRONG&gt;Field&amp;nbsp;Type&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="146"&gt;&lt;STRONG&gt;Employee&amp;nbsp;Permission&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="323"&gt;&lt;STRONG&gt;Notes&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Application&lt;/TD&gt;&lt;TD width="131"&gt;Applicant&lt;/TD&gt;&lt;TD width="106"&gt;user&lt;/TD&gt;&lt;TD width="146"&gt;read&lt;/TD&gt;&lt;TD width="323"&gt;Automatically&amp;nbsp;populated&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Application&lt;/TD&gt;&lt;TD width="131"&gt;Grade&lt;/TD&gt;&lt;TD width="106"&gt;picklist&lt;/TD&gt;&lt;TD width="146"&gt;read&lt;/TD&gt;&lt;TD width="323"&gt;Auto-populated&amp;nbsp;from&amp;nbsp;job&amp;nbsp;info&amp;nbsp;via&amp;nbsp;business&amp;nbsp;rule&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Application&lt;/TD&gt;&lt;TD width="131"&gt;Business&amp;nbsp;Unit&lt;/TD&gt;&lt;TD width="106"&gt;GO&lt;/TD&gt;&lt;TD width="146"&gt;read&lt;/TD&gt;&lt;TD width="323"&gt;Auto-populated&amp;nbsp;from&amp;nbsp;job&amp;nbsp;info&amp;nbsp;via&amp;nbsp;business&amp;nbsp;rule&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Application&lt;/TD&gt;&lt;TD width="131"&gt;Application&amp;nbsp;Reason&lt;/TD&gt;&lt;TD width="106"&gt;string&lt;/TD&gt;&lt;TD width="146"&gt;write&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Application&lt;/TD&gt;&lt;TD width="131"&gt;Attachment&lt;/TD&gt;&lt;TD width="106"&gt;attachment&lt;/TD&gt;&lt;TD width="146"&gt;No&amp;nbsp;Access&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Item&lt;/TD&gt;&lt;TD width="131"&gt;External&amp;nbsp;Code&lt;/TD&gt;&lt;TD width="106"&gt;string&lt;/TD&gt;&lt;TD width="146"&gt;Read-Only&amp;nbsp;Field&amp;nbsp;in&amp;nbsp;Objection&amp;nbsp;Definition&lt;/TD&gt;&lt;TD width="323"&gt;Auto-populated&amp;nbsp;based&amp;nbsp;on&amp;nbsp;UserId,&amp;nbsp;BU&amp;nbsp;and&amp;nbsp;Expense&amp;nbsp;Type.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Item&lt;/TD&gt;&lt;TD width="131"&gt;Expense&amp;nbsp;Type&lt;/TD&gt;&lt;TD width="106"&gt;picklist&lt;/TD&gt;&lt;TD width="146"&gt;write&lt;/TD&gt;&lt;TD width="323"&gt;Picklist&amp;nbsp;is&amp;nbsp;maintained&amp;nbsp;by&amp;nbsp;admin.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Item&lt;/TD&gt;&lt;TD width="131"&gt;Business&amp;nbsp;Unit&lt;/TD&gt;&lt;TD width="106"&gt;string&lt;/TD&gt;&lt;TD width="146"&gt;read&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Item&lt;/TD&gt;&lt;TD width="131"&gt;Currency&lt;/TD&gt;&lt;TD width="106"&gt;GO&lt;/TD&gt;&lt;TD width="146"&gt;read&lt;/TD&gt;&lt;TD width="323"&gt;SF&amp;nbsp;have&amp;nbsp;standard&amp;nbsp;Currency&amp;nbsp;MDF&amp;nbsp;object.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Item&lt;/TD&gt;&lt;TD width="131"&gt;Expense&amp;nbsp;Limit&amp;nbsp;(Guideline)&lt;/TD&gt;&lt;TD width="106"&gt;number&lt;/TD&gt;&lt;TD width="146"&gt;Read-Only&amp;nbsp;Field&amp;nbsp;in&amp;nbsp;Objection&amp;nbsp;Definition&lt;/TD&gt;&lt;TD width="323"&gt;Auto-populated&amp;nbsp;Expense&amp;nbsp;Limit(Guideline)&amp;nbsp;trhough&amp;nbsp;Lookup&amp;nbsp;function&amp;nbsp;based&amp;nbsp;on&amp;nbsp;Expense&amp;nbsp;type,&amp;nbsp;job&amp;nbsp;grade&amp;nbsp;and&amp;nbsp;business&amp;nbsp;unit.&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Item&lt;/TD&gt;&lt;TD width="131"&gt;Manager&amp;nbsp;Limit&lt;/TD&gt;&lt;TD width="106"&gt;number&lt;/TD&gt;&lt;TD width="146"&gt;Read-Only&amp;nbsp;Field&amp;nbsp;in&amp;nbsp;Objection&amp;nbsp;Definition&lt;/TD&gt;&lt;TD width="323"&gt;Auto-populated&amp;nbsp;Line&amp;nbsp;Manager’s&amp;nbsp;limit&amp;nbsp;trhough&amp;nbsp;Lookup&amp;nbsp;function.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Item&lt;/TD&gt;&lt;TD width="131"&gt;Employee&amp;nbsp;Limit&lt;/TD&gt;&lt;TD width="106"&gt;number&lt;/TD&gt;&lt;TD width="146"&gt;Write&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="107"&gt;Expense&amp;nbsp;Item&lt;/TD&gt;&lt;TD width="131"&gt;Special&amp;nbsp;Approval&lt;/TD&gt;&lt;TD width="106"&gt;picklist&lt;/TD&gt;&lt;TD width="146"&gt;Read-Only&amp;nbsp;Field&amp;nbsp;in&amp;nbsp;UI&lt;/TD&gt;&lt;TD width="323"&gt;Finance&amp;nbsp;BP&amp;nbsp;Maintain&amp;nbsp;it&amp;nbsp;as&amp;nbsp;“Yes”&amp;nbsp;for&amp;nbsp;the&amp;nbsp;records&amp;nbsp;in&amp;nbsp;which&amp;nbsp;employee&amp;nbsp;limit&amp;nbsp;exceed&amp;nbsp;the&amp;nbsp;limit&amp;nbsp;after&amp;nbsp;it&amp;nbsp;is&amp;nbsp;approved&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-709024736"&gt;&lt;SPAN class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LOA Demo.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307082i00546C45CE46FCCC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="LOA Demo.png" alt="LOA Demo.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-512511231"&gt;&lt;SPAN class=""&gt;Business Rules &lt;/SPAN&gt;&lt;/H3&gt;&lt;OL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Approval Workflow conditions:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;The condition section should evaluate every possible combination of scenarios.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iShot_2025-08-31_23.37.39.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307075i41E0B53F46DBB917/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="iShot_2025-08-31_23.37.39.png" alt="iShot_2025-08-31_23.37.39.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Approval Workflow 2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307074iF761854FB5FA766E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Approval Workflow 2.png" alt="Approval Workflow 2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Auto-population of manager limit through Looking up MDF form&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Manage Limit Lookup.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307078iC768D5888E928AC9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Manage Limit Lookup.png" alt="Manage Limit Lookup.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Currency conversion logic: The currency rate could vary per month according to the effective date)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Currency Exchange.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307070i5B025CEC85B42AC8/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Currency Exchange.png" alt="Currency Exchange.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Alerts for expense type violations. Trigger error message if the selected item is not available in your manager's form.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Validation LOA 1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307079i436DA27DF9544661/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Validation LOA 1.png" alt="Validation LOA 1.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;External Code Auto-Generation:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;For integration scenarios, always use &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;String-type external codes&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; with auto-generation onsave rule when fixed logic could be set up.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;SPAN class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LOA External Code.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307073iF3EBAF38781C6F3E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="LOA External Code.png" alt="LOA External Code.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-186915007"&gt;&lt;SPAN class=""&gt;Limitations &amp;amp; Workarounds &lt;/SPAN&gt;&lt;/H2&gt;&lt;OL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;UI Layout for Parent-Child MDF&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Grid layout not supported in Employee Profile for Parent-Child MDF.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Long scroll issue exists in Employee Profile if many child records exist, but grid form layout natively works in &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;EM&gt;&lt;SPAN class=""&gt;Manage Data&lt;/SPAN&gt;&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Pending Data Visibility&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Pending records are not shown natively in Employee Profile. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;However, they are visible in &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;EM&gt;&lt;SPAN class=""&gt;Manage Data&lt;/SPAN&gt;&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; with alerts an an expected even if only "view current" permission is given.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Workflow Restriction&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Workflows can only be attached at &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Parent Object&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; level. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Requires complex conditions to evaluate all child records to trigger workflow. See KBA: &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;EM&gt;&lt;SPAN class=""&gt;2839730&lt;/SPAN&gt;&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; MDF Parent object triggering the wrong workflow based on the child record&amp;nbsp;inserted&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Dynamic Role Limitation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Approvers cannot be directly derived from Department object. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Standalone dynamic roles must be created. &lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Field Level Permission Gaps&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Field-level permissions only respected in &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Parent Object&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;, not Child. See KBA: &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;EM&gt;&lt;SPAN class=""&gt;2303419&lt;/SPAN&gt;&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; RBP Permission for MDF Composite Child Object does not respect Target Population for Field Level&amp;nbsp;Overrides&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Read-Only Behavior Differences&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Manage Objection Definition&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Business Configuration UI&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Final Behaviour&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;"Special Approval" Field Attribute-Option1&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Editable&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Read-Only&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;readable in Employee Profile but editable in "Workflow Update"/"manage Data" portal.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;"Special Approval" Field Attribute-Option2&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Read-Only&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Read-Only&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Readable both in Employee Profile and "Workflow Update"/"manage Data" portal.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;MDF is &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;userId-based&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; (not personalExternalId).&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;OL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Sometimes it is not user-friendly when it is personal.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;Multiple Expense exist for concurrent employment.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId--9598498"&gt;&lt;SPAN class=""&gt;Conclusion &lt;/SPAN&gt;&lt;/H2&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;This case highlights how SuccessFactors MDF can be extended to support complex Finance cost control policies. Despite its limitations, with the right design patterns and careful use of &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;lookup tables, workflow rules, and permissions&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;, MDF can achieve highly specific business requirements. &lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-141142354"&gt;&lt;SPAN class=""&gt;About the Author &lt;/SPAN&gt;&lt;/H2&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;I am an SAP SuccessFactors Consultant, passionate about HRIS technology and practical implementation design.&lt;/SPAN&gt; &lt;SPAN class=""&gt;I welcome discussions and knowledge sharing.&lt;/SPAN&gt; &lt;SPAN class=""&gt;Connect with me on LinkedIn: &lt;A href="https://www.linkedin.com/in/shilin-song-2742b6293/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.linkedin.com/in/shilin-song-2742b6293/&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/unlocking-mdf-power-a-practical-user-case-in-sap-successfactors/ba-p/14201953"/>
    <published>2025-08-31T19:13:53.482000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/getting-ready-for-ai-assisted-applicant-screening-in-sap-successfactors/ba-p/14200871</id>
    <title>Getting Ready for AI-Assisted Applicant Screening in SAP SuccessFactors</title>
    <updated>2025-09-02T09:00:53.487000+02:00</updated>
    <author>
      <name>Chetann_Nagpal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/383862</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1629909636"&gt;Getting Ready for AI-Assisted Applicant Screening in SAP SuccessFactors&lt;/H1&gt;&lt;P&gt;Recruiting is one of the most time-consuming parts of HR. For many companies, every new job role attracts hundreds of CVs. Recruiters spend hours reading applications, hiring managers get frustrated waiting for shortlists, and candidates often feel lost in the process.&lt;/P&gt;&lt;P&gt;SAP SuccessFactors has introduced a new feature — &lt;STRONG&gt;AI-assisted applicant screening, powered by Joule&lt;/STRONG&gt; — to make this easier. The idea is simple: the system can read applications, match skills to the job, and even &lt;STRONG&gt;rank candidates&lt;/STRONG&gt; from best to least fit. This has the potential to change how recruiters work, but there is something important to understand.&lt;/P&gt;&lt;P&gt;This feature does not simply work out of the box. To get value from it, you first need to set up some important building blocks in your system.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1562478850"&gt;What you need before enabling AI-assisted screening&lt;/H2&gt;&lt;P&gt;Over the last few months of working with clients, I have seen that the success of AI-assisted screening depends on six key areas:&lt;/P&gt;&lt;H3 id="toc-hId-1495048064"&gt;1. Recruiting Management (RCM)&lt;/H3&gt;&lt;P&gt;This is the foundation. Without properly structured job requisitions, application templates, and candidate profiles, there is no data for AI to work on.&lt;/P&gt;&lt;H3 id="toc-hId-1298534559"&gt;2. Job Profile Builder (JPB)&lt;/H3&gt;&lt;P&gt;Job Profile Builder is where you define jobs, roles, competencies, and required skills. The better this is set up, the stronger the AI matching will be. Think of it as the dictionary that AI uses to understand your jobs.&lt;/P&gt;&lt;H3 id="toc-hId-1102021054"&gt;3. Talent Intelligence Hub (TIH)&lt;/H3&gt;&lt;P&gt;This is becoming more and more important. TIH provides a single skills framework across the system. When jobs and candidates speak the same “skills language,” the AI can make much better decisions about fit and ranking.&lt;/P&gt;&lt;H3 id="toc-hId-905507549"&gt;4. Joule with AI Units License&lt;/H3&gt;&lt;P&gt;Joule is the intelligence layer inside SAP SuccessFactors. With the AI Units license, Joule can power features such as skills extraction, candidate-job matching, stack ranking, and even generating interview questions. Without Joule and the license, the feature cannot be enabled.&lt;/P&gt;&lt;H3 id="toc-hId-708994044"&gt;5. Role-Based Permissions (RBP)&lt;/H3&gt;&lt;P&gt;Permissions are often overlooked. Recruiters and hiring managers need access to view AI insights, while system administrators need access to configure and monitor AI services.&lt;/P&gt;&lt;H3 id="toc-hId-512480539"&gt;6. Clean and consistent data&lt;/H3&gt;&lt;P&gt;The simplest, but often the hardest step. If job descriptions are vague, or candidate data is incomplete, the AI will not give useful results. Clean data is the backbone of any successful AI implementation.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-186884315"&gt;Why stack ranking makes a difference&lt;/H2&gt;&lt;P&gt;The most useful feature of AI-assisted screening is &lt;STRONG&gt;stack ranking&lt;/STRONG&gt;. This means applicants are automatically sorted from best fit to least fit based on the job requirements and the skills framework.&lt;/P&gt;&lt;P&gt;This helps in many ways:&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;P&gt;Recruiters save time by not manually scanning hundreds of CVs.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Hiring managers get a clear shortlist and understand why certain candidates are ranked higher.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Every applicant is checked in the same way, which makes the process more consistent and fair.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Recruiters get more time to focus on meaningful conversations with candidates instead of repetitive screening tasks.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--9629190"&gt;A real example from practice&lt;/H2&gt;&lt;P&gt;One global technology company I worked with introduced AI-assisted screening for their campus hiring. They received thousands of applications for a single drive. Normally, this would take recruiters several weeks to manage.&lt;/P&gt;&lt;P&gt;With stack ranking enabled, the system automatically highlighted the most relevant candidates. The results:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Screening time reduced by &lt;STRONG&gt;40 percent&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Recruiters could finally spend more time engaging with students&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Hiring managers felt the shortlist was of much higher quality&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The company is now planning to extend this approach to experienced hiring as well.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-141111662"&gt;Final thoughts&lt;/H2&gt;&lt;P&gt;AI-assisted applicant screening in SAP SuccessFactors is not about replacing recruiters. It is about helping them focus on people, not paperwork.&lt;/P&gt;&lt;P&gt;But success depends on getting the basics right. &lt;STRONG&gt;Recruiting Management, Job Profile Builder, Talent Intelligence Hub, Joule with AI Units, Role-Based Permissions, and clean data&lt;/STRONG&gt; — these are the real prerequisites.&lt;/P&gt;&lt;P&gt;Once these are in place, stack ranking can truly change the way hiring teams work — making recruitment faster, fairer, and more consistent.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/getting-ready-for-ai-assisted-applicant-screening-in-sap-successfactors/ba-p/14200871"/>
    <published>2025-09-02T09:00:53.487000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/sap-successfactors-the-business-technology-platform-btp-september-17th/ba-p/14206115</id>
    <title>SAP SuccessFactors + the Business Technology Platform (BTP) - September 17th Webinar</title>
    <updated>2025-09-03T15:25:43.441000+02:00</updated>
    <author>
      <name>MickCollins</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/25929</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Join SAP and Gavdi for our "Frictionless HR" webinar on September 17th.&lt;/SPAN&gt; &lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;It's ideal if you're an HR professional hearing more about the integration, extension, and automation capabilities of BTP but unsure about how they can be used with your SAP SuccessFactors solutions.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Reimagining the Employee Experience with SAP BTP&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Adapting SAP SuccessFactors to your organisational needs&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Uncover how SAP BTP enables rapid extensions to HR processes&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;A class="" href="https://lnkd.in/eyCvxjme" target="_self" rel="nofollow noopener noreferrer"&gt;https://events.teams.microsoft.com/event/54d61f49-3bd2-4751-92ca-2844ba3eb8ae@dc817646-b36b-4f39-82e4-1a8beadec837&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/sap-successfactors-the-business-technology-platform-btp-september-17th/ba-p/14206115"/>
    <published>2025-09-03T15:25:43.441000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/complete-guide-to-setting-up-story-reports-in-sap-successfactors/ba-p/14206175</id>
    <title>Complete Guide to Setting Up Story Reports in SAP SuccessFactors</title>
    <updated>2025-09-04T13:09:31.524000+02:00</updated>
    <author>
      <name>SanketD95</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/41015</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Objective&lt;/STRONG&gt;: Learn how to configure Story Reports in SAP SuccessFactors with step-by-step instructions, best practices, and troubleshooting tips.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Table of Contents:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Introduction.&lt;/LI&gt;&lt;LI&gt;Licensing Overview.&lt;/LI&gt;&lt;LI&gt;Pre-Requisites for Story Reports.&lt;/LI&gt;&lt;LI&gt;IPS Sync Configuration.&lt;/LI&gt;&lt;LI&gt;Settings Role-Based Permissions for Story Report.&lt;/LI&gt;&lt;LI&gt;Creating a Story Report&lt;/LI&gt;&lt;LI&gt;Styling and Chart Configuration&lt;/LI&gt;&lt;LI&gt;Common Issues and Fixes&lt;/LI&gt;&lt;LI&gt;Conclusion and Community Tips&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP SuccessFactors Story Reporting is a modern reporting solution that transforms traditional HR reporting into interactive, visual, and real-time analytics. It empowers users to create dynamic reports with rich visualizations.&lt;/P&gt;&lt;P&gt;Story reports are recommended to use due to their various benefits as visualized in the image below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_0-1756905962213.png" style="width: 529px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308623i3AC1F8091B1E88AE/image-dimensions/529x308/is-moderation-mode/true?v=v2" width="529" height="308" role="button" title="SanketD95_0-1756905962213.png" alt="SanketD95_0-1756905962213.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Licensing Overview:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Story Reporting is included with SAP SuccessFactors Employee Central.&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;However, Workforce Analytics (WFA) and SAP Analytics Cloud (SAC) require separate licenses.&lt;/LI&gt;&lt;LI&gt;Note that live payroll data reporting is not supported in Story Reports and may require third-party tools like Query Manager.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Pre-Requisites for Story Reports:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Go to Upgrade Center and activate 'Stories in People Analytics'.&lt;/LI&gt;&lt;LI&gt;Configure Identity Authentication Service (IAS) and Identity Provisioning Service (IPS).&lt;/LI&gt;&lt;LI&gt;Ensure user sync from SAP SuccessFactors HCM Suite to SAP Analytics Cloud (SAC) via IPS.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;IPS Sync Configuration&lt;/STRONG&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;To perform the IPS Sync, navigate to “Target Systems” to enable the newly configured SAP Analytics Cloud tenant.&lt;UL&gt;&lt;LI&gt;Select the target system à select the “Edit icon” à&amp;nbsp; choose “Enable” and on the confirmation pop-up message that appears, choose “OK”.&amp;nbsp; The status of the tenant changes to “Enabled”.&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_1-1756906044964.png" style="width: 490px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308624i4A428CEE3AC2A8A9/image-dimensions/490x207/is-moderation-mode/true?v=v2" width="490" height="207" role="button" title="SanketD95_1-1756906044964.png" alt="SanketD95_1-1756906044964.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Navigate to “Source Systems” and select your source “SAP SuccessFactors tenant”.&lt;/LI&gt;&lt;LI&gt;Go to --&amp;gt; Jobs tab --&amp;gt; Read Job type à choose --&amp;gt; Run Now.&lt;/LI&gt;&lt;LI&gt;You can track the progress of the read job from Job Logs.&lt;/LI&gt;&lt;LI&gt;When the read job is completed, the user sync from SAP SuccessFactors HCM Suite to SAP Analytics Cloud is completed.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_2-1756906044974.png" style="width: 500px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308625iEB6B3B855C83BBC5/image-dimensions/500x225/is-moderation-mode/true?v=v2" width="500" height="225" role="button" title="SanketD95_2-1756906044974.png" alt="SanketD95_2-1756906044974.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Settings RBP for Story Report:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp;Create Story: &lt;/STRONG&gt;Full access to create, edit, share and manage reports.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_3-1756906044984.png" style="width: 492px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308626i5770119D1FB91C39/image-dimensions/492x227/is-moderation-mode/true?v=v2" width="492" height="227" role="button" title="SanketD95_3-1756906044984.png" alt="SanketD95_3-1756906044984.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Story Admin:&lt;/STRONG&gt; Manage all Story Reports and access 'All Reports' tab&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_4-1756906044992.png" style="width: 508px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308627iBA7C68CC8A7BB90A/image-dimensions/508x179/is-moderation-mode/true?v=v2" width="508" height="179" role="button" title="SanketD95_4-1756906044992.png" alt="SanketD95_4-1756906044992.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Manage Integration Tools&lt;/STRONG&gt; → Allow Admin to Access ‘OData API through Basic Authentication’&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Manage User&lt;/STRONG&gt; → Data Access: User (Ensure user data visibility)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Developing a Story report:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Selecting a database: Below I have selected ‘Job information’ and ‘Personal Information’ as a combination and selected the columns I need.&lt;/LI&gt;&lt;LI&gt;Click on the ‘save’ on top of left corner and once done selecting the columns you need to click ‘Finish’ on bottom right corner of the screen.&lt;/LI&gt;&lt;LI&gt;In the below image, I have dragged ‘Job Information’ and ‘Personal Information’, In personal information, I have selected ‘Gender’ to include the field in my report.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_5-1756906100856.png" style="width: 571px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308630iB62A7FF3163487A8/image-dimensions/571x244/is-moderation-mode/true?v=v2" width="571" height="244" role="button" title="SanketD95_5-1756906100856.png" alt="SanketD95_5-1756906100856.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As “Job Information and Personal information” are effective dated entities, system will ask the ‘start date’ or ‘effective date’ from which you want the data to be reflected in the report.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_6-1756906100858.png" style="width: 547px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308629i67093D98ACEB0A1B/image-dimensions/547x195/is-moderation-mode/true?v=v2" width="547" height="195" role="button" title="SanketD95_6-1756906100858.png" alt="SanketD95_6-1756906100858.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Naming the database. Here, I have kept the database name as ‘Job Information’.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_7-1756906100860.png" style="width: 560px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308628i7723D8BECB990ADF/image-dimensions/560x260/is-moderation-mode/true?v=v2" width="560" height="260" role="button" title="SanketD95_7-1756906100860.png" alt="SanketD95_7-1756906100860.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the database is saved system will redirect you to the below screen. You can ‘Insert’ and drag &amp;amp; drop title in the below screen:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_8-1756906100862.png" style="width: 551px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308631iEF87C3789B101DB8/image-dimensions/551x287/is-moderation-mode/true?v=v2" width="551" height="287" role="button" title="SanketD95_8-1756906100862.png" alt="SanketD95_8-1756906100862.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here, on the right side of the screen, we have 2 sections, &lt;STRONG&gt;Builder&lt;/STRONG&gt; – is for configurational use and &lt;STRONG&gt;Styling&lt;/STRONG&gt; – where cosmetics change can be done for respective charts.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Builder sections&lt;/STRONG&gt;: Below is an overview sections available in Builder to use while developing your story report.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_9-1756906100864.png" style="width: 540px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308632i0786100BC022A74C/image-dimensions/540x324/is-moderation-mode/true?v=v2" width="540" height="324" role="button" title="SanketD95_9-1756906100864.png" alt="SanketD95_9-1756906100864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Here we have data source names, in charts we have various options to select from, as per requirement.&lt;/LI&gt;&lt;LI&gt;Below I have selected a “Bar/Column” chart where I can select its orientation.&lt;/LI&gt;&lt;LI&gt;Then we have measures and dimensions which I have explained below in details.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;To use various charts, we need to define ‘&lt;STRONG&gt;Measure&lt;/STRONG&gt;’ and ‘&lt;STRONG&gt;Dimensions&lt;/STRONG&gt;’. Which are important to build a story report.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Measure&lt;/STRONG&gt;: A measure is a quantitative value that you can perform calculations on, such as sums, averages, counts, or percentages.&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Examples&lt;/STRONG&gt;: Number of employees, Average performance rating, Total compensation, Headcount.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Usage&lt;/STRONG&gt;: Measures are typically used in charts and tables to show trends, comparisons, or aggregations.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Dimension: &lt;/STRONG&gt;A dimension is a qualitative attribute used to categorize or group data. It provides context for measures.&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_10-1756906100867.png" style="width: 478px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308633i86A0A995F9DC3FAD/image-dimensions/478x354/is-moderation-mode/true?v=v2" width="478" height="354" role="button" title="SanketD95_10-1756906100867.png" alt="SanketD95_10-1756906100867.png" /&gt;&lt;/span&gt;&lt;P&gt;&lt;STRONG&gt;Styling: &lt;/STRONG&gt;In styling we have various features available as highlighted in left side of the below image. Widgets and legends are basic and most use features in styling section.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Widgets&lt;/STRONG&gt; – where you can customize background colour, borders – style, width etc&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Legends&lt;/STRONG&gt;- where name of the dimensions are displayed, you can decide where to place your legend with options as – above, below and beside charts.&lt;/LI&gt;&lt;/UL&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_11-1756906100868.png" style="width: 516px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308637i71BA49C4E9C375E5/image-dimensions/516x373/is-moderation-mode/true?v=v2" width="516" height="373" role="button" title="SanketD95_11-1756906100868.png" alt="SanketD95_11-1756906100868.png" /&gt;&lt;/span&gt;&lt;P&gt;&lt;STRONG&gt;Configuring a simple chart&lt;/STRONG&gt;: Below, I have created a Bar/column chart, which is vertical in orientation. Measure is ‘Count’ (Employee count) and dimension is ‘Gender’. Colour for the bar/column chart can also be customised as per requirement. In the example, the instance is using 4 genders – Male(M), Female(F), undeclared(D)and unknown(U)&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_12-1756906100870.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308635i3CF0C7B178709BFE/image-dimensions/502x304/is-moderation-mode/true?v=v2" width="502" height="304" role="button" title="SanketD95_12-1756906100870.png" alt="SanketD95_12-1756906100870.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Common Issues and Fixes:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;For a user to be able to create Story Reports, their user information must be successfully synchronized to the SAP Analytics Cloud (SAC) instance (as discussed earlier in the blog) and be assigned the appropriate RBP access. When this does NOT occur, the user is unable to create a new Story report or when creating a new story report, the webpage is stuck in a blank loading screen, or errors are displayed.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Troubleshooting common issues via check tool&lt;/STRONG&gt;:&amp;nbsp;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;SACDuplicateEmailValidationCheck&lt;/STRONG&gt;:&amp;nbsp;&amp;nbsp;&lt;UL&gt;&lt;LI&gt;Purpose: This check identifies duplicate or unmapped email addresses in the system that are not linked to any user configured for Stories in People Analytics.&lt;/LI&gt;&lt;LI&gt;Email addresses are the primary key for user identification in SAP Analytics Cloud (SAC).&lt;/LI&gt;&lt;LI&gt;Duplicate or unmapped emails can cause login failures, reporting issues, or data inconsistencies in People Analytics.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SACUserValidationCheckWithQuickFix&lt;/STRONG&gt;&lt;OL&gt;&lt;LI&gt;Purpose: This check validates whether a user is correctly configured for Stories in People Analytics and offers a Quick Fix option if issues are detected.&lt;/LI&gt;&lt;LI&gt;Ensures that users have the correct roles, permissions, and configurations to access Stories in People Analytics.&lt;/LI&gt;&lt;LI&gt;Reduces dependency on manual troubleshooting by providing automated fixes.&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SACUserValidationCheck&lt;/STRONG&gt;&lt;OL&gt;&lt;LI&gt;Purpose: This check verifies that a user record exists for Stories in People Analytics.&lt;/LI&gt;&lt;LI&gt;Confirms that the user is present in the system, which is the first step before assigning roles or permissions.&lt;/LI&gt;&lt;LI&gt;Prevents errors when granting access to People Analytics features.&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_1-1756982252345.png" style="width: 536px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309154i55D15BAFFB1CAC12/image-dimensions/536x261/is-moderation-mode/true?v=v2" width="536" height="261" role="button" title="SanketD95_1-1756982252345.png" alt="SanketD95_1-1756982252345.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAC connection error&lt;/STRONG&gt;: In Check Tool when checked if the user exists in SAC and can see below error:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;The availability of the selected user couldn’t be confirmed for People Analytics, because of a connection error.&lt;/LI&gt;&lt;LI&gt;To fix this we need to "Refresh SF Live Connection" and “x509 certificates” from Provisioning under "Configurations for Stories in People Analytics".&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-indent-padding-left-90px" style="padding-left : 90px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanketD95_2-1756982449973.png" style="width: 482px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309162i88810374E677A7C5/image-dimensions/482x330/is-moderation-mode/true?v=v2" width="482" height="330" role="button" title="SanketD95_2-1756982449973.png" alt="SanketD95_2-1756982449973.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;:&lt;/P&gt;&lt;P&gt;Following these steps ensures a successful setup of Story Reports in SAP SuccessFactors. Share your experiences and tips in the comments to help others in the community.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/complete-guide-to-setting-up-story-reports-in-sap-successfactors/ba-p/14206175"/>
    <published>2025-09-04T13:09:31.524000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/use-employment-differentiator-for-translation-limitation-on-people-profile/ba-p/14201609</id>
    <title>Use Employment Differentiator for Translation Limitation on People Profile and Spotlight Header</title>
    <updated>2025-09-05T06:04:02.085000+02:00</updated>
    <author>
      <name>ywang</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/20633</uri>
    </author>
    <content>&lt;P&gt;From customer implementation, we observe that the language translation on the spotlight header would stay in default language English instead of the expected translation version (f.e. French) by Language switch via user Settings.&amp;nbsp; Know issue was reported by the SAP Note below.&lt;/P&gt;&lt;P&gt;&lt;A href="https://me.sap.com/notes/0002648773" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;2648773 - Position Title and Department and Division are shown in English on Employee Profile header - Employee Profile&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;First, the French Translation has maintained in the Globe context menu for the Position. From the screenshots below, after switch the user language to French,&amp;nbsp; the translation for these Job and Org fields are displayed properly in Full Spotlight "Organization" Category Card.&amp;nbsp; However, the same French translation could not be synced to the Spotlight&amp;nbsp;Header or Full Profile Header part where they are still displayed in English.&lt;/P&gt;&lt;P&gt;Secondarily, these Organization and Job Information fields displayed on Spotlight and Header Areas are coded with no feasibility to customize.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Spotlight EN Default.png" style="width: 253px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307088i1A6DF1C133DB4554/image-dimensions/253x472/is-moderation-mode/true?v=v2" width="253" height="472" role="button" title="Spotlight EN Default.png" alt="Spotlight EN Default.png" /&gt;&lt;/span&gt;&amp;nbsp; &lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Spotlight Full FR.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307089i0B3A593AF73F64DF/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Spotlight Full FR.png" alt="Spotlight Full FR.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Profile Full FR but still EN.png" style="width: 788px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307090i15FF77D4F0473E71/image-dimensions/788x339/is-moderation-mode/true?v=v2" width="788" height="339" role="button" title="Profile Full FR but still EN.png" alt="Profile Full FR but still EN.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As a workaround, we could introduce to use Employment Differentiator.&amp;nbsp; This &lt;SPAN&gt;differentiators &lt;/SPAN&gt;function provides flexibility to display defined or customized three fields from JobInfo &lt;SPAN&gt;for all users no matter whether the user has multiple employments or not. You don't need to have prerequisite like multiple employments, concurrent employments, global assignment etc. This could be considered as "An Addition" for Customization.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In my practice below to display French version of Division, Department and Job Classification in Spotlight and Full Profile Header. In general, we need to create an Employment Differentiator object in Manage Data. An Employment Differentiator allow maximum 3 custom fields by design. We can leverage these 3 custom fields to link to standard or custom fields from Job Information Model HRIS Elements (ONLY). Then, the values (picklist configured for HRIS elements) can be displayed accordingly by this Employment Differentiator. Here comes the key configuration steps:&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Step 1 - Create Picklist for "JobClass_FR", "Division_FR", and "Dept_FR" respectively. Set these 3 picklist values directly as the French version of translation (These can be fetched from Manage Position).&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JobClass FR Picklist.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307099i9151046BF7FD9855/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="JobClass FR Picklist.png" alt="JobClass FR Picklist.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Step 2 - In Business Configuration, create custom-string for "Division FR", "Dept FR" and "Job Class FR" and set the picklist we configuration in Step 1 to the object respectively.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BCUI Custom Strings.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307107iC3E325C1452188BF/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="BCUI Custom Strings.png" alt="BCUI Custom Strings.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BCUI Custom String for Picklist.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307106iDEC0CF221584D7C1/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="BCUI Custom String for Picklist.png" alt="BCUI Custom String for Picklist.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Step 3 - Set Permission Roles for the custom-strings created in Step 2 for both System Admin and Employee Self Service. The proper role settings make sure both New Hire and Existing Employee will not miss to select the value defined in picklist as mandatory.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This is important to remember that&amp;nbsp;If the value used for the differentiator is not available in the current Job Information record, the value will not be displayed in&amp;nbsp;&lt;SPAN class=""&gt;People Profile&lt;/SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RBP ESS Custom Strings.png" style="width: 688px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307110i0FE1808575C667F3/image-dimensions/688x593/is-moderation-mode/true?v=v2" width="688" height="593" role="button" title="RBP ESS Custom Strings.png" alt="RBP ESS Custom Strings.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Full Profile with FR fields in Job Info and Org.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307112i65CA1B556DDC48E9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Full Profile with FR fields in Job Info and Org.png" alt="Full Profile with FR fields in Job Info and Org.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Step 4 - To adopt Employment Differentiator, assignmentDisplayHeader should be enabled in Business Configuration -&amp;gt; Employee Profile -&amp;gt; Standard.&amp;nbsp;&lt;/P&gt;&lt;P&gt;In addition, please make sure RBP settings are configured for both System Admin and Employee Self Service to View/Edit Employee Data -&amp;gt; Employee Profile -&amp;gt; ASSIGNMENTDISPLAYHEADER.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BCUI assignmentDisplayHeader.png" style="width: 625px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307113i1C58F32F1C13878A/image-dimensions/625x344/is-moderation-mode/true?v=v2" width="625" height="344" role="button" title="BCUI assignmentDisplayHeader.png" alt="BCUI assignmentDisplayHeader.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RBP System Admin Employee Data.png" style="width: 603px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307115i139C2904DADD15C4/image-dimensions/603x362/is-moderation-mode/true?v=v2" width="603" height="362" role="button" title="RBP System Admin Employee Data.png" alt="RBP System Admin Employee Data.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Step 5 - Set up the Employment Differentiator object to connect the dots. It is named "Org Job FR" in my practice and its 3 custom fields point to the 3 custom-string created in Step 2. Jobinfo is only the supported HRIS element reference by design.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Manage Data Employment Differentiator.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307114i8D663231186D7B90/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Manage Data Employment Differentiator.png" alt="Manage Data Employment Differentiator.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Step 6 - To Switch ON the Employment Differentiator, go to Configuration Latest People Profile -&amp;gt; General Settings -&amp;gt; Choose the Name created in Step 5 from the dropdown list of Choose Employment Differentiator.&amp;nbsp; Click the Save button.&lt;/P&gt;&lt;P&gt;Do not forget to Refresh Assignment Header and Refresh General Display Name from the Company System and Logo Settings to activate it.&amp;nbsp; After both HRIS Sync jobs are Completed from Scheduled Job Monitoring, it's time to check the final result.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Latest People Profile Configuration.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307116iDF1DD38EDAB1F78C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Latest People Profile Configuration.png" alt="Latest People Profile Configuration.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Refresh Assignment Head in Company Setting.png" style="width: 645px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307117iE673E4EC7DB3C627/image-dimensions/645x328/is-moderation-mode/true?v=v2" width="645" height="328" role="button" title="Refresh Assignment Head in Company Setting.png" alt="Refresh Assignment Head in Company Setting.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Scheduled Job Complete.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307118i65CAEED1C3588047/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Scheduled Job Complete.png" alt="Scheduled Job Complete.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Step 7 - Final Check. The French Version can be displayed on header no matter which language setting is selected.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Spotlight New with workaround2.png" style="width: 327px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307127i247541EEC0436A4A/image-dimensions/327x600/is-moderation-mode/true?v=v2" width="327" height="600" role="button" title="Spotlight New with workaround2.png" alt="Spotlight New with workaround2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Full Profile New with workaround3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307128i00F9C2F21AB592E4/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Full Profile New with workaround3.png" alt="Full Profile New with workaround3.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Spotlight New with workaround1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307129i39E06792055356BF/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Spotlight New with workaround1.png" alt="Spotlight New with workaround1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Last but not least, Employment Differentiator could be used not only for translation workaround, but for dispalying any additional job information as well.&lt;/P&gt;&lt;P&gt;More details could be referred in the following SAP Help link.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/successfactors-employee-central/implementing-and-managing-employment-lifecycle-from-hiring-to-termination/adding-employment-differentiators-to-indicate-multiple-employments" target="_self" rel="noopener noreferrer"&gt;Adding Employment Differentiators To Indicate Multiple Employments&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://userapps.support.sap.com/sap/support/knowledge/en/2786331" target="_self" rel="noopener noreferrer"&gt;2786331 - Employee Central - Employment Differentiators Indicator&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Thanks for your reading and hope this blog is helpful!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/use-employment-differentiator-for-translation-limitation-on-people-profile/ba-p/14201609"/>
    <published>2025-09-05T06:04:02.085000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/enhancing-successfactors-alert-message-with-images-through-html/ba-p/14202007</id>
    <title>Enhancing Successfactors Alert Message With Images Through HTML</title>
    <updated>2025-09-05T12:40:42.168000+02:00</updated>
    <author>
      <name>sohaibhassan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1487759</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1629961319"&gt;&lt;STRONG&gt;Scenario&lt;/STRONG&gt;&lt;/H1&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;With the scenario as ours in consideration where the business required an image and a footer on already existing birthday alert message for users company wide.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The scenarios might differ company wise or client wise but the very basic method or process of fulfilling this requirement remains the same widely.&lt;/P&gt;&lt;H2 id="toc-hId-1562530533"&gt;&lt;STRONG&gt;Alert Message Configuration&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Here we will be discussing the pre-requisite and configurations required for a header and a footer for our system triggered alert message and possible issues along with their solutions that we might face post alert trigger.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pre - Requisites&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;We should have admin rights on Successfactors preferably &lt;STRONG&gt;Manage Data&lt;/STRONG&gt; and &lt;STRONG&gt;Alert Message&lt;/STRONG&gt; permissions.&lt;/LI&gt;&lt;LI&gt;We should have a One Drive and Outlook access for uploading our header and footer and validating our email alert respectively.&lt;/LI&gt;&lt;LI&gt;Thirdly, we shall be able to host or upload the images which we want to use as a header and a footer for our alert message (in our case we have uploaded it on a One Drive folder) as we will be using the One Drive link of that picture in our HTML code.&lt;/LI&gt;&lt;LI&gt;We can also host the images online through free available tools and then use that link in our html.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Configuration&lt;/STRONG&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create an alert message as per your message content.&lt;/LI&gt;&lt;LI&gt;Use the below mentioned html code for the header/footer section where you want the pictures to appear in the alert message as per attached image.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-01 110855.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307165i9F65DE08EC614158/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-01 110855.png" alt="Screenshot 2025-09-01 110855.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h2&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;img src="Use The Link Within These Inverted Commas Mentioned In The Third Point Under Pre-Requisites Heading" width="100" height="50"&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Adjust the width and height as per your requirement.&lt;/LI&gt;&lt;LI&gt;Please note that if you want to include both header and footer (like in our case), the mentioned html code must be used separately first in the header area (where you want your header to appear) and then in the footer section (where you want your footer to appear) with the width/height adjustments as per the requirements.&lt;/LI&gt;&lt;LI&gt;We can also use below code for center alignment of the images,&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;div style="text-align: center;"&amp;gt;
&amp;lt;img src="Use The Link Within These Inverted Commas Mentioned In The Third Point Under Pre-Requisites Heading" width="500" height="333"&amp;gt;
&amp;lt;/div&amp;gt;​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Now initiate the alert message and check your email for your required header and footer.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-01 143221.png" style="width: 567px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307311i19B9947C37C2B523/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-01 143221.png" alt="Screenshot 2025-09-01 143221.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Incase we receive an email with below attached error in your header/footer or in an image. The possible reasons might be,&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-01 110333.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307171i4001988EE1F3C81E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-01 110333.png" alt="Screenshot 2025-09-01 110333.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;We might have made a mistake in copying the link.&lt;/LI&gt;&lt;LI&gt;The image might have been removed from the folder you uploaded on.&lt;BR /&gt;If you are sure about the above two points then the most probable reason is that,&lt;/LI&gt;&lt;LI&gt;Your organization has blocked the https images on your email. In this case you can co-ordinate with your internal services team or follow the below Microsoft blog for resolution.&lt;BR /&gt;&lt;SPAN&gt;&lt;A class="" title="https://learn.microsoft.com/en-us/troubleshoot/outlook/message-body/the-linked-image-cannot-be-displayed-error" href="https://learn.microsoft.com/en-us/troubleshoot/outlook/message-body/the-linked-image-cannot-be-displayed-error" target="_blank" rel="noopener noreferrer nofollow"&gt;The Linked image cannot be displayed error - Outlook | Microsoft Learn&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Get the https images allowed for your organization and you will start receiving the email with the recent made changes.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1366017028"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;Concluding, we can use different html tags to enhance the alert triggers that are being initiated from SuccessFactors. With a little tweaking and understanding of html tags we can actually cater the business requirements that can standout.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/enhancing-successfactors-alert-message-with-images-through-html/ba-p/14202007"/>
    <published>2025-09-05T12:40:42.168000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/sap-btp-for-hr-at-sap-connect-and-success-connect-2025-summary-bigger-and/ba-p/14209124</id>
    <title>SAP BTP for HR at SAP Connect and Success Connect 2025 summary - bigger and better than ever</title>
    <updated>2025-09-05T20:35:12.794000+02:00</updated>
    <author>
      <name>rnoia</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/46078</uri>
    </author>
    <content>&lt;P&gt;Come see SAP Business Technology Platform (BTP) at this year’s SAP Connect / Success Connect event in Las Vegas! Due to the ever-increasing interest in SAP BTP topics and our sessions in prior years having standing-room only attendance, SAP BTP has more sessions than ever before! We even have for the first time ever, not one, but two hands-on-labs!&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1630170876"&gt;SAP BTP topics for 2025&lt;/H1&gt;&lt;P&gt;This year’s SAP BTP for HR experience at SAP Connect is all about more. More business scenarios, more technology, more platform - more BTP! This year’s topics include customer favorites such as integration, extensibility and automation as well as numerous SAP SuccessFactors product-led sessions about how SAP BTP helps them deliver better solutions making it easier for customers to streamline HCM processes. Additionally, as we see an increase in technical audience members, we’ll be featuring slightly more&lt;BR /&gt;technical product deep dives by the product teams (also a first for us!).&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1433657371"&gt;Demos and hands-on labs&lt;/H1&gt;&lt;H2 id="toc-hId-1366226585"&gt;Demo-station demo: Automate new hire equipment ordering during onboarding, featuring Integration Suite Advanced Event Mesh&lt;/H2&gt;&lt;P&gt;We’re showcasing two demos at the “Integration and Extension with SAP BTP” demo station. The first is our popular &lt;A href="https://www.sap.com/assetdetail/2023/12/74e32719-9d7e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;&lt;EM&gt;Automate new hire equipment ordering during onboarding demo&lt;/EM&gt;&lt;/A&gt; which shows SAP Integration Suite’s Advanced Event Mesh event-driven integration capabilities to provide automated equipment ordering. This dramatically reduces the amount of time a people manager spends ordering equipment as well as requesting access to systems and data. If you missed this demo in Lisbon last year, then this is your chance!&amp;nbsp; Included are:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;See how we used &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Signavio+Process+Intelligence/pd-p/73554900100800003814" class="lia-product-mention" data-product="827-1"&gt;SAP Signavio Process Intelligence&lt;/a&gt;&amp;nbsp;to analyze onboarding processes to identify key areas to address inefficiencies: hiring manager ordering of equipment, waiting for responses from people via email&lt;/LI&gt;&lt;LI&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Integration+Suite/pd-p/73554900100800003241" class="lia-product-mention" data-product="23-1"&gt;SAP Integration Suite&lt;/a&gt;&amp;nbsp;and advanced event mesh which offers real-time triggering of data synchronization based on &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+SuccessFactors+Employee+Central/pd-p/73555000100800000773" class="lia-product-mention" data-product="160-1"&gt;SAP SuccessFactors Employee Central&lt;/a&gt;&amp;nbsp;event triggers&lt;/LI&gt;&lt;LI&gt;An example app an IT department can create to offer pre-bundled packages of equipment to make it easier for managers to pick equipment, and to standardize offerings&lt;/LI&gt;&lt;LI&gt;One-click approvals by the hiring manager, powered by &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Build/pd-p/73555000100700001491" class="lia-product-mention" data-product="1181-1"&gt;SAP Build&lt;/a&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Automatically submitting equipment selection to SAP Ariba guided buying via SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;Notifications pushed to the task center for the hiring manager via SAP Build&lt;/LI&gt;&lt;LI&gt;Automatic submission of support tickets to &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Service+Cloud/pd-p/73555000100700000801" class="lia-product-mention" data-product="822-1"&gt;SAP Service Cloud&lt;/a&gt;&amp;nbsp;for manual tasks like requesting access to systems and data&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1169713080"&gt;&lt;BR /&gt;Demo-station demo: Create a mobile app with SAP Build demo and hands-on lab&lt;/H2&gt;&lt;P&gt;Additionally, we’re showing our brand new &lt;A href="https://www.sap.com/assetdetail/2025/08/f6eb5565-1a7f-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;&lt;EM&gt;Create a mobile app with SAP Build demo&lt;/EM&gt;&lt;/A&gt; which is specifically designed for more technical HRIS audiences in collaboration with the SAP SuccessFactors team.&amp;nbsp;&lt;/P&gt;&lt;P&gt;This demo is also the basis of two, 75-minute hands-on labs we’re offering this year which are sure to sell out! The lab will walk non-technical novices and intermediate technical knowledge people (non-developers, IT and HRIS are our target audience) on how to use SAP Build to quickly and easily create a mobile app with SAP SuccessFactors Employee Central people data to offer location-specific benefits for a field office – all with no coding, using SAP Build’s powerful drag-and-drop development interface. We’ll have product experts from the SAP Build team presenting and explaining to the audience the different capabilities of SAP Build in a follow-the-presenter format from their own workstations in live SAP Build environments so everyone will be able to walk away with direct product knowledge of what’s possible.&lt;BR /&gt;Included in the session:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Overview of the low-code SAP Build environment&lt;/LI&gt;&lt;LI&gt;Overview of various content types, controls, functions available&lt;/LI&gt;&lt;LI&gt;Adding content and configuring to the controls&lt;/LI&gt;&lt;LI&gt;Using an integration to SAP SuccessFactors Employee Central for people data&lt;/LI&gt;&lt;LI&gt;Accessing benefits information in the employee profile via API&lt;/LI&gt;&lt;LI&gt;Customizing the look and feel of the app&lt;/LI&gt;&lt;LI&gt;Testing the app and deployment&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;View the hands-on lab in the event catalog: &lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1750114290689001BJYN" target="_blank" rel="noopener noreferrer"&gt;Hands-on lab: Creating a custom mobile app for HR using SAP Build solutions (limited capacity) | HCM1677&lt;/A&gt;&lt;/P&gt;&lt;P&gt;There’s also quick overview videos of both these demos on the &lt;A href="http://www,sap.com/btp-for-hr" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP.com/btp-for-HR&lt;/A&gt; page as well!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-844116856"&gt;SAP BTP-led sessions&lt;/H1&gt;&lt;H2 id="toc-hId-776686070"&gt;Integration sessions&lt;/H2&gt;&lt;H3 id="toc-hId-709255284"&gt;&lt;BR /&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1750112262926001wb0E" target="_blank" rel="noopener noreferrer"&gt;Maximizing HCM process efficiency with integration through SAP BTP | HCM1665&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Discover how SAP Business Technology Platform and SAP Integration Suite enable integrations for SAP SuccessFactors HCM, automating tasks and processes. Explore third-party integration use cases, such as recruiting, onboarding, and data collection, and strategies for connecting hybrid landscapes, including legacy on-premises and third-party systems as well as event-driven integrations.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-512741779"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1750114845359001HXi3" target="_blank" rel="noopener noreferrer"&gt;How to use event-driven integration to collaborate in real time | HCM1682&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Explore how SAP Integration Suite advanced event mesh can use business events from SAP SuccessFactors solutions such as SAP SuccessFactors Employee Central to push data to other internal or external systems in real-time. See firsthand how you can use this capability to trigger immediate actions, such as when an employee is hired or terminated.&lt;/P&gt;&lt;H2 id="toc-hId-187145555"&gt;&lt;BR /&gt;&lt;BR /&gt;Application development and extensibility sessions&lt;/H2&gt;&lt;H3 id="toc-hId-119714769"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1750113133062001FUeY" target="_blank" rel="noopener noreferrer"&gt;Increasing employee efficiency with automation capabilities in SAP BTP | HCM1671&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Explore automation capabilities in SAP Business Technology Platform (SAP BTP) that can streamline your HCM processes. From recruiting and onboarding to document management, SAP BTP can help you reduce errors in manual data entry and make your employees happier by reducing repetitive and mundane tasks through automation and workflows.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId--152030105"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1749751059587001IP4y" target="_blank" rel="noopener noreferrer"&gt;Using SAP Build to extend your SAP SuccessFactors solutions | HCM1463&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Standardized business processes have come a long way, but every company still has a few things it does differently from everybody else. SAP Build solutions can help extend your human capital management solutions to address your specific business needs. See firsthand how to create low-code/no-code apps that boost end-user adoption and efficiency.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-238262404"&gt;SAP SuccessFactors-led technology sessions including SAP BTP&lt;/H1&gt;&lt;P&gt;&lt;BR /&gt;These SAP SuccessFactors product expert-led sessions discuss how SAP BTP solutions help SAP SuccessFactors deliver better solutions to our customers as well as ways customers may not be aware of how they can use SAP BTP today with their existing SAP SuccessFactors solutions.&lt;/P&gt;&lt;H2 id="toc-hId--251654108"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--448167613"&gt;AI Technology, use cases and innovation&lt;/H2&gt;&lt;H3 id="toc-hId--938084125"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1749744323455001f94N" target="_blank" rel="noopener noreferrer"&gt;Road map and vision: AI in SAP SuccessFactors HCM | HCM1451&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Look at SAP’s AI strategy and planned AI innovations in SAP SuccessFactors HCM. See what’s on the AI road map for HCM and get insights into SAP’s responsible, real-world AI approach. AI-driven capabilities such as the Joule copilot, AI agents, and the mobile experience with &lt;a href="https://community.sap.com/t5/c-khhcw49343/Joule/pd-p/d0136351-8a9c-4881-aebc-bf414b785998" class="lia-product-mention" data-product="1207-1"&gt;Joule&lt;/a&gt;&amp;nbsp;&amp;nbsp;enhance employee experience, adaptability, and productivity&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1134597630"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1749838152489001ki39" target="_blank" rel="noopener noreferrer"&gt;Unlocking and extending the Joule copilot with Joule Studio | HCM1571&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Experience how Joule Studio allows you to create and deploy custom Joule agents and skills that improve efficiency across SAP and third-party systems and enhance your HR experience. Learn about prerequisites and how to get started, and find out how the agent builder capability in Joule Studio can empower you to create your own intelligent agents.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1331111135"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1749753467371001B03H" target="_blank" rel="noopener noreferrer"&gt;Everything you need to know about AI agents for HCM | HCM1468&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;AI agents are "smart teammates" that can observe, plan, and act, often without human intervention. Get a first look at some of the Joule Agents in the HCM road map, such as those for performance and goals, HR service, and people intelligence. Learn how agents can automate complex workflows, augment human capabilities, and drive efficiency.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1234221633"&gt;Employee experience via integration and extensibility&lt;/H2&gt;&lt;H3 id="toc-hId--1724138145"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1748428393122001NWJ4" target="_blank" rel="noopener noreferrer"&gt;Drive productivity by integrating and extending your HCM solutions | HCM1081&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Discover how our recent innovations around integration and extension can help transform your business operations and enhance the user experience. You can use these technologies to integrate and extend your SAP SuccessFactors HCM portfolio with SAP Business Technology Platform.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1920651650"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1749814288319001ACWx" target="_blank" rel="noopener noreferrer"&gt;Enhancing people profiles with SAP Business Technology Platform | HCM1520&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;See firsthand how you can enhance the latest people profile using SAP Business Technology Platform (SAP BTP), with an exclusive preview of advanced features slated for early adopter release in the second half of 2025. Learn how to extend people profiles to meet your organization’s needs and boost the user experience.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1948981464"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1748428393122001NWJ4" target="_blank" rel="noopener noreferrer"&gt;Drive productivity by integrating and extending your HCM solutions | HCM1081&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Discover how our recent innovations around integration and extension can help transform your business operations and enhance the user experience. You can use these technologies to integrate and extend your SAP SuccessFactors HCM portfolio with SAP Business Technology Platform.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1852091962"&gt;Technology and administration&lt;/H2&gt;&lt;H3 id="toc-hId-1952958822"&gt;&lt;BR /&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1747699683547001HZWF" target="_blank" rel="noopener noreferrer"&gt;Road map and vision: Application and technology foundation | HCM1030&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Explore the latest innovations and enhancements in the technology and application foundation of SAP SuccessFactors solutions, including the SAP Business Data Cloud solution, Joule Studio, security, integration, extensibility through SAP Build solutions, and more. See demos and gain insights into what we have planned for our upcoming releases.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1756445317"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1748620308126001OAdd" target="_blank" rel="noopener noreferrer"&gt;Simplifying your system administration to maximize business continuity | HCM1106&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Explore innovative solutions to streamline system configuration and administration of your SAP SuccessFactors solutions. Gain practical tips on how your organization can modernize infrastructure management and boost efficiency with powerful administrative capabilities.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1559931812"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1748184765341001H1Lc" target="_blank" rel="noopener noreferrer"&gt;Fortifying together: Best practices for partner and customer security | HCM1061&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Explore collaboration strategies and best practices for bolstering security across partners and customers. Discover how collective efforts and aligned practices can mitigate risks and build resilient ecosystems. Don't miss this opportunity to strengthen your security framework and foster trust among your business network.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you haven’t attended Success Connect in the past (now SAP Connect), this year is the time to come to see all the great BTP content and sessions! &lt;STRONG&gt;&lt;A href="https://www.sap.com/events/connect/successconnect.html" target="_blank" rel="noopener noreferrer"&gt;Learn more about SAP Connect on the event page&lt;/A&gt;&lt;/STRONG&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/sap-btp-for-hr-at-sap-connect-and-success-connect-2025-summary-bigger-and/ba-p/14209124"/>
    <published>2025-09-05T20:35:12.794000+02:00</published>
  </entry>
</feed>
