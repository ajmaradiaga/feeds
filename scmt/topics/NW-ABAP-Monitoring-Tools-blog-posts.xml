<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/NW-ABAP-Monitoring-Tools-blog-posts.xml</id>
  <title>SAP Community - NW ABAP Monitoring Tools</title>
  <updated>2025-08-26T11:11:24.345633+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/NW ABAP Monitoring Tools/pd-p/a414317d-3ddc-487c-9d84-af75d27c65f6" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>NW ABAP Monitoring Tools blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/monitoring-of-sap-systems-using-azure-monitors-part-iv/ba-p/13517022</id>
    <title>Monitoring of SAP Systems Using Azure Monitors – Part IV</title>
    <updated>2021-05-10T07:14:32+02:00</updated>
    <author>
      <name>jaskisin</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/659718</uri>
    </author>
    <content>&lt;STRONG&gt;This is in continuation of my previous Article &lt;A href="https://blogs.sap.com/2021/05/10/monitoring-of-sap-systems-using-azure-monitors-part-iii/" target="_blank" rel="noopener noreferrer"&gt;Monitoring of SAP Systems Using Azure Monitors – Part III&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;H1 id="toc-hId-829417624"&gt;7. ALERTS&lt;/H1&gt;&lt;BR /&gt;
We can also setup alerts on the data that is being stored in the Log Analytics, we can design the alert as per our thresholds and requirements&lt;BR /&gt;
&lt;H2 id="toc-hId-761986838"&gt;7.1 Create Action Group&lt;/H2&gt;&lt;BR /&gt;
For sending any notification we first need to create action group in azure Monitor, to do so we need to go to &lt;STRONG&gt;Monitor&lt;/STRONG&gt; →&amp;nbsp;&lt;STRONG&gt;Alerts&lt;/STRONG&gt; →&amp;nbsp;&lt;STRONG&gt;Manage Actions&lt;/STRONG&gt; and then click on &lt;STRONG&gt;New Action Group&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-22.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Fill out all the requested details and then click on &lt;STRONG&gt;Next: Notifications&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-23.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Fill out all important details such as Name, Notification type, email id etc.… and then click on &lt;STRONG&gt;Next: Action&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-24.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Fill the details about the Actions if any and then click on &lt;STRONG&gt;Next: Tags&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-25.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Specify the Tags if any and then click on &lt;STRONG&gt;Next: Review + Create&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-26.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Review all the settings of the Action Group and click on &lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-27.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Wait for the deployment to finish&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-28.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H2 id="toc-hId-565473333"&gt;7.2 Setting Up Notification&lt;/H2&gt;&lt;BR /&gt;
For settings up alert, we first go to Azure &lt;STRONG&gt;Monitor&lt;/STRONG&gt; →&amp;nbsp;&lt;STRONG&gt;Alert&lt;/STRONG&gt; and click on &lt;STRONG&gt;New Alert Rule&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-29.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Select the resource to Log Analytics Workspace in which the telemetry data is getting stored&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-30.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
We also need to specify the Condition by clicking &lt;STRONG&gt;Add Condition&lt;/STRONG&gt; and then click on &lt;STRONG&gt;Custom log search&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-31.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Specify the query which needs to be executed for triggering alert, here we are only using the query to check if system is up and running fine.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-32.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Specify the condition after which email will be triggered and click &lt;STRONG&gt;Done&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-33.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Condition will be added to the Alert&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-34.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Now add action group to which email will be triggered&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-35.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Specify the other requested details and click on &lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-36.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Wait for the Rules to create which we can see in the &lt;STRONG&gt;Alert Rules&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-37.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
So, Once Log Analytics receive GRAY from the sapcontrol as below&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-38.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Alert will catch this anomaly and display it on &lt;STRONG&gt;Alert Dashboard&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-39.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Further details about Alert can be checked by clicking on this.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-40.png" /&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-41.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Below is the sample email sent with details about the alert&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-42.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H1 id="toc-hId-239877109"&gt;8. LOGS&lt;/H1&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId-172446323"&gt;8.1 Log Analytics Workspace&lt;/H2&gt;&lt;BR /&gt;
We can see and check the telemetry data which is been extracted by the providers&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-43.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H2 id="toc-hId--24067182"&gt;8.2 Azure Monitor Activity Log&lt;/H2&gt;&lt;BR /&gt;
We can also check the deployment logs about the providers in the Activity log of Azure Monitor&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-44.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H2 id="toc-hId--220580687"&gt;8.3 Extraction Log&lt;/H2&gt;&lt;BR /&gt;
We also see the extraction log of each call to system in the queue of Storage account.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Screenshot-2021-05-04-0814281-45.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Now SAP System installed on Azure is getting monitored using Azure Monitors for SAP Solutions.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;BEST OF LUCK!!&lt;/STRONG&gt;&lt;BR /&gt;
&lt;H1 id="toc-hId--546176911"&gt;9. CONCLUSION:&lt;/H1&gt;&lt;BR /&gt;
In this 4 parts of article, we have discussed how we can &lt;STRONG&gt;&amp;nbsp;Deploy, Configure, Workbooks, Alerts, Notifications and Troubleshooting logs for Azure Monitors for SAP Solutions.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
THANK YOU..&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/monitoring-of-sap-systems-using-azure-monitors-part-iv/ba-p/13517022"/>
    <published>2021-05-10T07:14:32+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/do-you-know-the-deadlock-monitor/ba-p/13411122</id>
    <title>Do you know the Deadlock Monitor?</title>
    <updated>2021-08-26T09:27:50+02:00</updated>
    <author>
      <name>gudmundur_karlsson</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/569476</uri>
    </author>
    <content>&lt;H1 id="toc-hId-800610688"&gt;Purpose&lt;/H1&gt;&lt;BR /&gt;
Deadlocks can occur in any SQL Server multiuser application. The occurrences of deadlocks are a problem of the application. It is not a SQL Server problem. SQL Server and SAP provide tools to detect, monitor and analyze the deadlocks. But in the end the solution must lie with the application development and process management.&lt;BR /&gt;
&lt;BR /&gt;
Sometimes the deadlocks are handled properly by the application and sometimes not. Unexpected deadlocks can occur if performance problems cause transactions to hold locks longer than expected, or if wrong query plans are used, or if ad hoc statements interfere with the system. There are many reasons why deadlocks could cause system problems so it's vital to have a good tool to analyze them.&lt;BR /&gt;
&lt;BR /&gt;
Below you can learn how to use the DBACOCKPIT -&amp;gt; Diagnostics -&amp;gt; &lt;STRONG&gt;Deadlock Monitor&lt;/STRONG&gt; action in SAP NetWeaver which is available when SAP NetWeaver is running on SQL Server or a remote DBACOCKPIT connection to SQL Server is set up for monitoring.&lt;BR /&gt;
&lt;H1 id="toc-hId-604097183"&gt;Setup&lt;/H1&gt;&lt;BR /&gt;
The Deadlock Monitor is always available for the local system. If the DBACOCKPIT is used to monitor a remote SQL Server, some features may not be available.&lt;BR /&gt;
&lt;H1 id="toc-hId-407583678"&gt;Using the Deadlock Monitor&lt;/H1&gt;&lt;BR /&gt;
When you enter the Deadlock Monitor action for the local system, you will see two tabs:&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/03/Capture.jpg" /&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId-340152892"&gt;Deadlocks Reported by ABAP Stack&lt;/H2&gt;&lt;BR /&gt;
The first tab is the old deadlock monitor. It is based on the MSSDEADLCK table. This table exists in the SAP NetWeaver dictionary and it is filled by DBSL (the DB interface of SQL Server) when SAP NetWeaver encounters deadlocks. This feature only tracks deadlocks generated by the SAP NetWeaver kernel. If deadlocks were encountered by any other software, they will not appear here.&lt;BR /&gt;
&lt;BR /&gt;
The SAP NetWeaver system running on the schema to be monitored records the deadlocks in table MSSDEADLCK and it also deletes the records after one month using an SM37 job (report RSMSSDCN).&lt;BR /&gt;
&lt;BR /&gt;
In this context only two features possible: &lt;EM&gt;Table detail&lt;/EM&gt; and &lt;EM&gt;ABAP code&lt;/EM&gt;. Those commands are available in the ALV toolbar. The table detail button navigates you to the table detail action for the table listed in the selected deadlock line. The table detail button is always enabled. The ABAP code button is only available when monitoring the local system. It opens an ABAP editor for the OPEN SQL statement where the error occurred.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-143639387"&gt;Deadlocks Recorded in X-Events&lt;/H2&gt;&lt;BR /&gt;
There are two generations of this screen. the first is a simple list of deadlocks recorded in the SQL Server Systemhealth (syshealth) X-events session. The second is a more sophisticated summary list, with the original detailed list below.&lt;BR /&gt;
&lt;H3 id="toc-hId-76208601"&gt;First Release&lt;/H3&gt;&lt;BR /&gt;
First we will describe the earlier version:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/06/single_deadlock-1.png" height="97" width="819" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Deadlock List&lt;/P&gt;&lt;BR /&gt;
This shows that a deadlock has occurred, and it shows the "victim" of the deadlock, i.e. the session that was selected by SQL Server to trigger an error and reset the transaction. It also shows the "survivor" of the deadlock, i.e. the other process which was involved but was not affected by the deadlock. Using the toolbar buttons, you can view the details of the tables involved (owner object and waiter object), examine the ABAP code of either the victim or the survivor, and view the full XML graph in a browser. If SSMS (the SQL Server Management Studio) is installed on the local PC, the deadlock can be opened in SSMS showing a graphical view of the deadlock chain.&lt;BR /&gt;
&lt;BR /&gt;
When you press the "Owner object detail" button, the DBACOCKPIT action "Single Table Analysis" is invoked. The same action can be called for the "Waiter object detail" which is the object that the process is trying to lock but has to wait because the resource is locked by another process.&lt;BR /&gt;
&lt;H3 id="toc-hId--120304904"&gt;New Version&lt;/H3&gt;&lt;BR /&gt;
The newer version is called "Deadlocks from X-Events Session". Instead of a simple list, the screen now has three sections:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Deadlock Summary&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/08/deadlock_summary.png" height="67" width="664" /&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Inputbuffer of the session which encountered the deadlock&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/08/inputbuffer.png" /&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Deadlock Details. This is the same list as the one described in the earlier version.&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/08/deadlock_details.png" /&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
This new screen has several advantages over the old one. The top summary view is a grouping of the most common deadlocks that have occurred on the system, with the most common at the top. The list is ordered by the victim flag (victims at the top, survivors on the bottom) and the number of occurrences of that particular deadlock.&lt;BR /&gt;
&lt;BR /&gt;
The reason this list was provided is that with the old simple list it was very difficult in some cases to determine which deadlock occurred most often in order to focus on the most problematic type of deadlock.&lt;BR /&gt;
&lt;BR /&gt;
The middle section shows the full SQL statement. If the deadlock entry above is a victim of a deadlock, then it is the statement that failed, otherwise it is the statement that was executing in the surviving process when the deadlock occurred.&lt;BR /&gt;
&lt;BR /&gt;
The bottom section is the same as before, but when you click on the "Details for selected deadlock" button in the summary list, this detail list will only show you the occurrences for that deadlock. This can be reverted by clicking on "All Deadlocks" in the detail list.&lt;BR /&gt;
&lt;H3 id="toc-hId--316818409"&gt;The X-Events Session&lt;/H3&gt;&lt;BR /&gt;
The older version of the X-Events tab used the SQL Server Systemhealth (syshealth) session. The new version introduces a new separate X-Events session named "SAP_Deadlocks". After the support package of the new version is applied to a system, a new SQL Server "Extended Events" session appears in the SQL Server Management Studio under Management -&amp;gt; Extended Events -&amp;gt; Sessions. This new session is more efficient because it records only deadlock events and nothing else. The data is also kept longer than in the syshealth session, since only deadlocks are recorded.&lt;BR /&gt;
&lt;BR /&gt;
The old screen sometimes took a long time to read data from the syshealth session because the syshealth session grows very large on busy systems. The new screen should always appear much faster.&lt;BR /&gt;
&lt;H1 id="toc-hId--771497352"&gt;Usage Scenarios&lt;/H1&gt;&lt;BR /&gt;
The starting point for understanding deadlocks, how and why they occur and how they can be tracked and analyzed is SAP Note &lt;A href="https://launchpad.support.sap.com/#/notes/32129" target="_blank" rel="noopener noreferrer"&gt;32129&lt;/A&gt;. This note refers to other notes which provide detailed information about various aspects of handling deadlocks in SAP systems running on SQL Server. This information can sometimes be overwhelming, so we provide only a brief overview here.&lt;BR /&gt;
&lt;BR /&gt;
Some reasons for deadlocks (not a complete list):&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Missing index to support a DML statement&lt;/STRONG&gt;&lt;BR /&gt;
This can cause the statement (UPDATE, DELETE) to lock many more rows in the table than are actually modified in the end. Usually there are scans and searches that lock a lot of rows. In this case, use the SQL DML statement WHERE condition to determine whether there is a fitting index. Use the object detail buttons to jump to single table analysis to view the existing indexes.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Application does not serialize execution of critical changes&lt;/STRONG&gt;&lt;BR /&gt;
This allows parallel execution, which can result in deadlocks. It is important to try to understand the application context in which the deadlock occurred. Use the "ABAP code" button to jump to the Open SQL statement and examine the surrounding code. Try to understand how the two processes interfered with each other, why they were running simultaneously (parallel jobs etc.) and how this can be avoided either by scheduling jobs at a different time or with a different data set, or by modifying the code to synchronize access to a critical path.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Long running statements&lt;/STRONG&gt;&lt;BR /&gt;
This can be a SELECT or any other statement. If a statement is slow due to system performance and the transaction remains open for a longer period, the system is at risk of deadlock. This is a common scenario. Long running statements are inefficient and consume a lot of resources and time, but they can cause even worse problems if they occur within a transaction which has already acquired some locks. This drastically increases the likelihood of deadlocks in some cases. So, resolving performance issues (adding indexes, hints, altering the Open SQL statement, etc.) can often magically reduce the occurrences of deadlocks in a process.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Application does not commit often enough&lt;/STRONG&gt;&lt;BR /&gt;
If there is a long running batch job that runs mass modifications within a single transaction, this leads to many open locks. This can then interfere with normal short user transactions that modify the same tables.&lt;BR /&gt;
To monitor this, SAP has provided a new feature in DBACOCKPIT: Performance -&amp;gt; History -&amp;gt; &lt;STRONG&gt;Open Transaction History&lt;/STRONG&gt;. This feature is available in the same support packages as the newer Deadlock Monitor user interface. We will not go into detail on this feature here. This will be covered in a separate blog post. A link will be added here soon.&lt;BR /&gt;
Open transactions need to be avoided for two reasons. First to avoid holding locks too long, which increases the likelihood of deadlocks, and second because a long transaction consumes excessive log space and may cause the database to run out of log space.&lt;BR /&gt;
To solve this problem, the application must be analyzed to either increase the frequency of COMMITs or use a smaller data set.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Different access order&lt;/STRONG&gt;&lt;BR /&gt;
In this case, the application modifies the data in more than one process, each of which uses a different access order. Or different indexes are used in different DML statements for the same table. Sometimes there is an ABAP internal table that contains a number of rows, and the content of the table is not consistently ordered the same way when the concurrent processes scan the table and execute modifications (perhaps in multiple tables) for each row.&lt;BR /&gt;
In some cases, the solution can be as simple as adding a "sort" statement in ABAP to make the access more consistent.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
To summarize: The Deadlock Monitor can be used to determine the various reasons for deadlocks and then one or more of the following actions can be taken:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Add an index to get a better access plan for queries (to shorten a transaction) and/or DML operations (to have a smaller footprint).&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Optimize queries using database hints or update statistics on tables. SQL Server automatically updates statistics on tables, but in rare cases, manual updating of statistics is required.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Recommend code changes in Z customer code or open an SAP case if the problem occurs in SAP code.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
If this is not sufficient and a more detailed analysis is needed, we recommend three blogs by Clas Hortien from Microsoft Germany:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Deadlock Analysis (basic)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Deadlock Analysis (advanced)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Deadlock Analysis (examples)&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
These blogs are tailored for SAP workload, but mainly describe native SQL Server tools. The blogs can be accessed &lt;A href="https://techcommunity.microsoft.com/t5/running-sap-applications-on-the/bg-p/SAPApplications/label-name/deadlock" target="_blank" rel="nofollow noopener noreferrer"&gt;here&lt;/A&gt;.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H1 id="toc-hId--968010857"&gt;Release Information&lt;/H1&gt;&lt;BR /&gt;
The older version of the deadlock monitor, with the deadlocks recorded in ABAP stack and X-events have been part of DBACOCKPIT for many years. However, the new features (summary list, inputbuffer) were delivered in mid-2021.&amp;nbsp; The SP levels of the new feature are as follows:&lt;BR /&gt;
&lt;BR /&gt;
SAP NetWeaver 756 SP01&lt;BR /&gt;
SAP NetWeaver 755 SP03&lt;BR /&gt;
SAP NetWeaver 754 SP05&lt;BR /&gt;
SAP NetWeaver 753 SP07&lt;BR /&gt;
SAP NetWeaver 752 SP10&lt;BR /&gt;
SAP NetWeaver 751 SP13&lt;BR /&gt;
SAP NetWeaver 750 SP23&lt;BR /&gt;
SAP NetWeaver 740 SP27&lt;BR /&gt;
SAP NetWeaver 731 SP30&lt;BR /&gt;
&lt;BR /&gt;
The new features are not supported in earlier releases than SAP NetWeaver 7.30 EhP1 (SAP_BASIS 731).&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H1 id="toc-hId--394784279"&gt;Conclusion&lt;/H1&gt;&lt;BR /&gt;
I hope this overview of the Deadlock Monitor, and how to use it to address various types of deadlock issues, proves helpful to you. If you have further questions about the Monitor, or about a deadlock problem you are encountering, I encourage you to ask your questions in our SAP Community using this &lt;A href="https://answers.sap.com/questions/ask.html?primaryTagId=891349005586930604519575996418053" target="_blank" rel="noopener noreferrer"&gt;link&lt;/A&gt;.&lt;BR /&gt;
&lt;BR /&gt;
If you want to read more about SAP on SQL server then I invite you to view our topic area &lt;A href="https://community.sap.com/topics/sql-server" target="_blank"&gt;here&lt;/A&gt;.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/do-you-know-the-deadlock-monitor/ba-p/13411122"/>
    <published>2021-08-26T09:27:50+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/why-is-my-sql-server-database-log-growing-out-of-control-risking-system/ba-p/13496636</id>
    <title>Why is my SQL Server database log growing out of control risking system standstill?</title>
    <updated>2021-11-18T23:09:42+01:00</updated>
    <author>
      <name>gudmundur_karlsson</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/569476</uri>
    </author>
    <content>&lt;H1 id="toc-hId-808152651"&gt;Purpose&lt;/H1&gt;&lt;BR /&gt;
It is very important to monitor the transaction log size of SQL Server. If SQL Server runs out of log space the system will come to a standstill. The log space is released when a log backup is performed. But the space is only made available up to the starting point of the longest running open transaction. That means that if transactions are held open for a long time, the log will grow out of control. We have seen cases where transactions were held open for days in some SAP background jobs which resulted eventually in a full log and system standstill.&lt;BR /&gt;
&lt;BR /&gt;
If transactions are open for a long time, and they also hold many locks on database objects, then un-necessary blocking can occur resulting in unexplained bad performance. This also increases the risk of deadlocks in the system.&lt;BR /&gt;
&lt;BR /&gt;
Until now the only indicator in DBACOCKPIT that a transaction has been open too long has been the DB02 main screen (DBACOCKPIT -&amp;gt; Space -&amp;gt; Overview). The middle section of the screen looks like this:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/08/DB02.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;DB02&lt;/P&gt;&lt;BR /&gt;
What is new is the "History" button. That is the topic of this blog post. This button takes you to the new DBACOCKPIT action where you can view a history of long running transactions and examine the details of not only the processes which held a transaction for a longer time, but also the locks which were held by the session and blocked other sessions.&lt;BR /&gt;
&lt;BR /&gt;
The screen is also available under DBACOCKPIT -&amp;gt; Performance -&amp;gt; History -&amp;gt; Open Transaction History&lt;BR /&gt;
&lt;H1 id="toc-hId-611639146"&gt;Setup&lt;/H1&gt;&lt;BR /&gt;
The Open Transaction History is always available for the local system if it's running on SQL Server, or if the DBACOCKPIT is used to monitor a remote SQL Server.&lt;BR /&gt;
&lt;BR /&gt;
The action is supported for SQL Server 2005 and higher.&lt;BR /&gt;
&lt;H1 id="toc-hId-415125641"&gt;Using the Open Transaction History&lt;/H1&gt;&lt;BR /&gt;
The DBACOCKPIT action is available under Performance -&amp;gt; History -&amp;gt; Open Transaction History.&amp;nbsp; The initial screen looks like this:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/08/OpenTransactionHistory.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Open Transaction History&lt;/P&gt;&lt;BR /&gt;
The top part of the screen shows a list of sessions which held a transaction open for more than 1 minute. The system checks this once every 20 minutes. The list shows when the data was collected, the session ID and which application program was using the session. The start time of the transaction and the duration in minutes so far at the collection time is also shown.&lt;BR /&gt;
&lt;BR /&gt;
There is a column in the list which contains the first part of the SQL statement which was the last one executed on the session when the data was collected (the inputbuffer). Usually this statement is much longer than the area provided on the list. You can view the full statement by selecting the row and clicking on the "Details for selected row" button. Double-clicking on the line has the same effect. This will cause the full statement to appear in an edit control in the middle part of the screen.&lt;BR /&gt;
&lt;BR /&gt;
The list also shows some attributes of the session such as the CPU time and number of reads. Also the current log size and the allocated space within the log at the time of collection are shown.&lt;BR /&gt;
&lt;BR /&gt;
The toolbar of the ALV control has a couple of useful buttons: "ABAP Code" and "Table Detail". The system tries to determine the ABAP report name and location and also the primary table name to allow navigation to either view the ABAP code in an editor or view the table definition. The "ABAP Code" button is disabled when monitoring remote servers.&lt;BR /&gt;
&lt;H2 id="toc-hId-347694855"&gt;Active Request&lt;/H2&gt;&lt;BR /&gt;
When a session is checked there may be a SQL statement currently running on the session or it may be inactive. This is indicated by the column "Active request". If there is no active request it means that at the time the session was just waiting for the next SQL statement to be issued and no activity was occurring in that session on SQL Server. There can be many reasons for this. The ABAP program may be executing a long running calculation, it may be waiting in a remote function call (RFC), waiting for an enqueue object or working on executing SQL statements on another connection. If there is no active statement then the statement shown in the inputbuffer edit control is just the last statement executed prior to the data collection time, it wasn't being executed at the time.&lt;BR /&gt;
&lt;BR /&gt;
If there was an active request then the columns to the right contain information about the request. CPU and I/O numbers will show how many resources were consumed by the request, what the wait type was and how long the wait had been.&lt;BR /&gt;
&lt;BR /&gt;
If there was an active request on the session which was saved in the history, then the button "Show Active Request" in the toolbar will navigate to the statement analysis screen to examine the statement and the query plan of the request that was active.&lt;BR /&gt;
&lt;H2 id="toc-hId-151181350"&gt;Locks&lt;/H2&gt;&lt;BR /&gt;
The lower third of the screen shows a list of sessions which were blocked by the selected top level session which was determined to have been running the longest. If there was a hierarchy of blocked processes then the "SQL statement text" column will show which sessions were blocked in the hierarchy by showing arrows of different lengths indicating the depth of the session in the blocking hierarchy. This display is similar to the Performance -&amp;gt; Locks screen which shows currently blocked sessions.&lt;BR /&gt;
&lt;BR /&gt;
For each of the sessions which were blocked the statement is shown and the button "SQL Statement" allows you to view the full statement and the full query plan in the statement monitor. This also allows navigation to the ABAP code and all the other statement analysis features such as viewing table and indexing details.&lt;BR /&gt;
&lt;H1 id="toc-hId--174414874"&gt;Usage Scenarios&lt;/H1&gt;&lt;BR /&gt;
Long running transactions can cause two different types of problems on the database server:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Allocated log space grows out of control. If the log runs out of space then no changes can be made in the database anymore.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Blocking locks which are held too long can cause performance bottlenecks and in some cases deadlocks can occur. This can happen even on systems which have more than sufficient CPU and I/O resources.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
It is important to monitor the allocated log space over time and make sure there is always plenty of space available on the disk. In DBACOCKPIT go to Space -&amp;gt; History -&amp;gt; Database Size History and check the "Allocated log space (MB)" column. You will see that the log space allocated is reduced when log backups occur and then gradually increases until the next backup. Always make sure that the peak usage is well within the total available log space on the disk. If the allocated space in the log behaves erratically with extreme peaks, then it's an indication that transactions are held too long. In that case use the Open Transaction History screen to find the longest running transactions that have been caught by the history job. Use ALV features to sort the data according to the number of minutes the transaction was held open. Make a note of when these transactions start, which jobs open the transactions and whether there are performance problems or other artificial delays which could cause a transaction to remain open for an extended period.&lt;BR /&gt;
&lt;BR /&gt;
Sometimes excessive blocking can cause performance problems. If users complain that some of their transaction are intermittently very slow, whereas most other transactions are fast, that's an indication that excessive blocking is occurring. In that case you can use DBACOCKPIT -&amp;gt; Performance -&amp;gt; SQL Statements and sort the data by "Wait ratio: elapsed/CPU time". There you will see statements which run for a long time, but don't use much CPU time, i.e. they are blocked. In addition you can visit the Open Transaction History screen and see if the "Blocking" column is checked. Then double click on those lines where "Blocking" is indicated. On the bottom ALV list you will be able to see all the sessions which were blocked by that statement. You may see a long list of blocking and blocked sessions. You can see which work process was used, whether it was a dialog or batch process. When you click on the "SQL Statement" button in the toolbar you can see which ABAP report was used and which table was used. This may help you determine how and why the job or frontend process was blocked and possibly how to avoid such a situation.&lt;BR /&gt;
&lt;H1 id="toc-hId--370928379"&gt;Release Information&lt;/H1&gt;&lt;BR /&gt;
This DBACOCKPIT feature was delivered with the following SAP_BASIS support packages:&lt;BR /&gt;
&lt;BR /&gt;
756 SP01&lt;BR /&gt;
755 SP03&lt;BR /&gt;
754 SP05&lt;BR /&gt;
753 SP07&lt;BR /&gt;
752 SP10&lt;BR /&gt;
751 SP13&lt;BR /&gt;
750 SP23&lt;BR /&gt;
740 SP27&lt;BR /&gt;
731 SP30&lt;BR /&gt;
&lt;BR /&gt;
The new feature is not supported in releases earlier than NetWeaver 7.30 SP1 (SAP_BASIS 731).&lt;BR /&gt;
&lt;H1 id="toc-hId--567441884"&gt;Conclusion&lt;/H1&gt;&lt;BR /&gt;
I hope this overview of the Open Transaction History monitor proves helpful to you. If you have further questions about the Monitor, or about a long running open transaction you are observing in your system, I encourage you to ask your questions in our SAP Community using this &lt;A href="https://answers.sap.com/questions/ask.html?primaryTagId=891349005586930604519575996418053" target="_blank" rel="noopener noreferrer"&gt;link&lt;/A&gt;.&lt;BR /&gt;
&lt;BR /&gt;
If you want to read more about SAP on SQL server then I invite you to view our topic area&amp;nbsp;&lt;A href="https://community.sap.com/topics/sql-server" target="_blank"&gt;here&lt;/A&gt;.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/why-is-my-sql-server-database-log-growing-out-of-control-risking-system/ba-p/13496636"/>
    <published>2021-11-18T23:09:42+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/odata-calls-statistics-in-st03/ba-p/13516095</id>
    <title>OData Calls Statistics in ST03</title>
    <updated>2021-11-29T16:26:18+01:00</updated>
    <author>
      <name>dmitry_sharshatkin</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/186675</uri>
    </author>
    <content>ST03/ST03N – SAP Workload Monitor, contains performance statistics for different task types, including HTTP(s) calls.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/11/st03_1-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;ST03 - Workload Overview&lt;/P&gt;&lt;BR /&gt;
When you try to identify the top HTTP(s) calls, influencing your system, you can probably see the following picture.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/11/st03_2.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;ST03 - Transaction Profile&lt;/P&gt;&lt;BR /&gt;
There will be a report SAPMHTTP on top of the list, consuming most of the total response time, and then some ABAP WebDynpro Applications (starting with symbol: &amp;lt;{&amp;gt;) and BSP Applications / WebUI Components (with names as is or starting with BSPWD*).&lt;BR /&gt;
&lt;BR /&gt;
But you won’t see any OData calls because this statistic is hidden behind the report SAPMHTTP.&lt;BR /&gt;
&lt;BR /&gt;
This is default configuration and it’s done so in order to limit the number of aggregated records, so that the data set is not getting too big, which may lead to ABAP memory dumps.&lt;BR /&gt;
&lt;BR /&gt;
If you want to see the performance statistics for HTTP / OData calls, you need to adjust some settings.&lt;BR /&gt;
&lt;BR /&gt;
First execute report &lt;EM&gt;&lt;STRONG&gt;SWNC_CONFIG_URL&lt;/STRONG&gt;&lt;/EM&gt; and chose the rule for aggregating HTTP calls. Select either “Break-Down by URL” or “Break-Down by URL and Page”.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/11/rep_1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Report SWNC_CONFIG_URL&lt;/P&gt;&lt;BR /&gt;
If you configure this way, the Odata calls will be aggregated with complete URL, like “/sap/opu/odata/sap/ZMY_ODATA_SRV/MyEntitySet”.&lt;BR /&gt;
&lt;BR /&gt;
You can leave them as is, or you can also remove or replace unnecessary prefix “/sap/opu/odata/sap” with a special symbol or characters. This setting is done in the report &lt;EM&gt;&lt;STRONG&gt;SWNC_CONFIG_PATH&lt;/STRONG&gt;&lt;/EM&gt;.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/11/rep_2.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Report SWNC_CONFIG_PATH&lt;/P&gt;&lt;BR /&gt;
Press F1 (“Help”) to get more help regarding the settings.&lt;BR /&gt;
&lt;BR /&gt;
Alternatively refer to the SAP Note: &lt;A href="https://launchpad.support.sap.com/#/notes/1631033" target="_blank" rel="noopener noreferrer"&gt;1631033&lt;/A&gt; – “Normalization of background job names for statistics data”.&lt;BR /&gt;
&lt;BR /&gt;
After all these settings you will be capable to see more detailed performance statistics per HTTP(s) / OData calls.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/11/st03_3.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;ST03 - Aggregation of HTTP Calls&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;Note:&lt;/STRONG&gt; But bear in mind that the change of configuration may lead to ABAP memory dumps.&lt;BR /&gt;
&lt;BR /&gt;
Please check the following blog post: &lt;A href="https://blogs.sap.com/2015/05/06/sapcollectorforperfmonitor-dumps-with-exporttoomuchdata-or-tsvtnewpageallocfailed/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2015/05/06/sapcollectorforperfmonitor-dumps-with-exporttoomuchdata-or-tsvtnewpageallocfailed/&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
P.S. If something is not working, don't report here! Please, raise SAP incident instead.&lt;BR /&gt;
&lt;BR /&gt;
BR, Dima&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/odata-calls-statistics-in-st03/ba-p/13516095"/>
    <published>2021-11-29T16:26:18+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/measure-your-application-s-performance-and-resource-consumption-evaluate/ba-p/13509690</id>
    <title>Measure your Application's Performance and Resource Consumption: Evaluate Statistics Records with Transaction STATS</title>
    <updated>2021-12-23T13:26:34+01:00</updated>
    <author>
      <name>ManfredMensch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165193</uri>
    </author>
    <content>Imagine that you have designed and implemented this great app your users have been waiting for. But if it is too slow, they will not like it. System administrators will hate it if its resource consumption is too high. How do you know ahead of time that your app offers great functions and also runs fast and lean? You &lt;STRONG&gt;use transaction &lt;CODE&gt;STATS&lt;/CODE&gt; to evaluate statistics records&lt;/STRONG&gt; associated with your application's executions.&lt;BR /&gt;
&lt;BR /&gt;
In this blog post I explain how you obtain statistics records with high quality and how you analyze them with transaction &lt;CODE&gt;STATS&lt;/CODE&gt;. In the best case, such an analysis proves that your app combines excellent single user performance with low resource consumption and is scalable. In all other situations, the analysis will indicate the bottleneck where optimizations shall be applied.&lt;BR /&gt;
&lt;BR /&gt;
As owner and developer of transaction &lt;CODE&gt;STATS&lt;/CODE&gt; I am more than happy to share &lt;STRONG&gt;tips and tricks&lt;/STRONG&gt; that will help you to &lt;STRONG&gt;efficiently work with the tool&lt;/STRONG&gt; and to &lt;STRONG&gt;obtain insights into your application's performance&lt;/STRONG&gt;.&lt;BR /&gt;
You can use &lt;CODE&gt;STATS&lt;/CODE&gt; since SAP NetWeaver 7.40. I am continuously improving it and this blog post presents the tool’s state for SAP NetWeaver 7.57 as of late December 2021.&lt;BR /&gt;
&lt;H1 id="toc-hId-828559666"&gt;What are Statistics Records?&lt;/H1&gt;&lt;BR /&gt;
Statistics records are logs of activities performed in SAP NetWeaver Application Server for ABAP or on the ABAP platform. During the execution of any task by a work process in an ABAP instance, the SAP kernel collects header information to identify the task, and captures various measurements, like the task’s response time and total memory consumption. When the task ends, the gathered data is combined into a statistics record.&amp;nbsp; These records are stored chronologically in a file in the application server instance’s file system. Collecting statistics records is a technical feature of the ABAP runtime environment and requires no manual effort.&lt;BR /&gt;
&lt;BR /&gt;
The measurements in these records provide useful insights into the performance and resource consumption of the application whose execution triggered the records’ capture. Especially helpful is the breakdown of the response times of the associated tasks into DB requests, ABAP processing, remote communication, or other contributors.&lt;BR /&gt;
&lt;BR /&gt;
The value of your performance analysis depends on the quality of the underlying measurements. While the collection of data into the statistics records is performed autonomously by the SAP kernel, &lt;STRONG&gt;you need some preparation&lt;/STRONG&gt; to ensure that the captured information accurately reflects the performance of the application.&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Ensure that the test system you will use for the measurements is configured and customized correctly.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Verify that&amp;nbsp;the test system is not under high load from concurrently running processes during your measurements&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Carefully define the test scenario to be executed by your application. It must adequately represent the application’s behavior in production.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Provide a set of test data that is representative of your productive data. Only then will the business scenario execution resemble everyday use.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Execute the scenario a few times to fill the buffers and caches of all the involved components (e.g., DB cache, application server’s table buffer, web browser cache). Otherwise, your measurements will not be reproducible, but will be impaired by one-off effects that load data into these buffers and caches. It is then much harder to draw reliable conclusions.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
After this preparation, you execute the measurement run, during which the SAP kernel writes the statistics records that you will use for the analysis.&lt;BR /&gt;
&lt;H1 id="toc-hId-632046161"&gt;How Do You Analyze&amp;nbsp;Statistics Records?&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px;text-align: left"&gt;To display the statistics records of your measurement run, you call transaction &lt;CODE&gt;STATS&lt;/CODE&gt;. Its start screen (Fig. 1) consists of four areas, where &lt;STRONG&gt;you specify criteria for the subset of statistics records&lt;/STRONG&gt; you want to view and analyze.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/12/2021-12-20_08-38-12.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;&lt;EM&gt;Figure 1&lt;/EM&gt;:&lt;/STRONG&gt; &lt;EM&gt;On the &lt;CODE&gt;STATS&lt;/CODE&gt; start screen, you define filter conditions for the subset of statistics records you want to analyze, specify from where the records are retrieved, and select the layout of the data display.&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px;text-align: left"&gt;In the topmost area, you determine the &lt;EM&gt;Monitoring Interval&lt;/EM&gt;. By default, it extends 10 minutes into the past and 1 minute into the future. Records written during this period are displayed if they fulfill the conditions specified in the other areas of the start screen. Adjust this interval based on the start and end times of your measurement run so that &lt;CODE&gt;STATS&lt;/CODE&gt; shows as few unrelated records as possible.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;In the &lt;EM&gt;Record Filter&lt;/EM&gt; area, you define additional criteria that the records must meet—for example, client, user, or lower thresholds for measurement data, such as response time or memory consumption. Be as specific and restrictive as possible, so that only records relevant for your investigation will be displayed.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;By default, statistics records are read from all application instances of the system. In the &lt;EM&gt;Configuration&lt;/EM&gt; section, you can change this to the local instance, or to any subset of instances within the current system. Restricting the statistics records retrieval to the instance (or instances) where the application was executed shortens the runtime of &lt;CODE&gt;STATS&lt;/CODE&gt;. The option &lt;EM&gt;Include Statistics Records &lt;/EM&gt;&lt;EM&gt;from Memory&lt;/EM&gt; is selected by default, so that &lt;CODE&gt;STATS&lt;/CODE&gt; will also process records that have not yet been flushed from the memory buffer into the file system.&lt;/P&gt;&lt;BR /&gt;
Under &lt;EM&gt;Display Layout&lt;/EM&gt;, select the domain you want to focus on and how the associated subset of key performance indicators (KPIs)—the captured data—will be arranged in the tabular display of statistics records. The &lt;EM&gt;Main KPIs&lt;/EM&gt; layouts provide an initial overview with the most important data and is a good starting point.&lt;BR /&gt;
&lt;H1 id="toc-hId-435532656"&gt;What do You Learn from Statistics Records?&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;Fig. 2 shows the statistics record display based on the settings specified in the &lt;CODE&gt;STATS&lt;/CODE&gt; start screen (Fig. 1).&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/12/2021-12-21_07-12-31.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;&lt;EM&gt;Figure 2&lt;/EM&gt;:&lt;/STRONG&gt; Statistics records matching the criteria specified on the &lt;CODE&gt;STATS&lt;/CODE&gt; start screen.&lt;BR /&gt;
The list shows statistics records that correspond to the creation of a sales order with SAP GUI transaction &lt;CODE&gt;VA01&lt;/CODE&gt;.&lt;/P&gt;&lt;BR /&gt;
The table lists the selected statistics records in chronological order and contains their main KPIs. The header columns—shown with a blue background—uniquely link each record to the corresponding task that was executed by the work process. The data columns contain the KPIs and indicate the performance and resource consumption of the tasks. Measurements for times and durations are given in milliseconds (ms). Memory consumptions and data transfers are measured in kilobytes (KB).&lt;BR /&gt;
&lt;BR /&gt;
The table of statistics records is displayed within an ALV grid control and inherits all functions of this SAP GUI tool: You can sort or filter records; rearrange, include, or exclude columns; calculate totals and subtotals; or export the entire list. You can also switch to another display layout or modify the currently used layout. To access these and other standard functions, expand the toolbar by clicking on the &lt;EM&gt;Show Standard ALV Functions&lt;/EM&gt; button (the black triangle that points to the right).&lt;BR /&gt;
&lt;BR /&gt;
The measurements most relevant for assessing performance and resource consumption are the task’s &lt;EM&gt;Response Time&lt;/EM&gt; and &lt;EM&gt;Total Memory Consumption&lt;/EM&gt;. The &lt;EM&gt;Response Time&lt;/EM&gt; measurement starts on the application server instance when the request enters the dispatcher queue and ends when the response is returned. It does not include navigation or rendering times on the front end, or network times for data transfers between the front end and the back end. It is strictly &lt;STRONG&gt;server&lt;/STRONG&gt; &lt;EM&gt;Response Time&lt;/EM&gt;. (Exception: For SAP GUI transactions that use GUI controls, the RFC-based communication with them occurs in roundtrips. Their total time is measured as &lt;EM&gt;GUI Time&lt;/EM&gt; and included in the &lt;EM&gt;Response Time&lt;/EM&gt;. Parts of &lt;EM&gt;GUI Time&lt;/EM&gt; may be contained in &lt;EM&gt;Roll Wait Time&lt;/EM&gt;, the remainder will contribute to &lt;EM&gt;Processing Time&lt;/EM&gt;.) The end-to-end response time experienced by your application’s users may be significantly longer than the server &lt;EM&gt;Response Time&lt;/EM&gt;. The most important contributors to server &lt;EM&gt;Response Time&lt;/EM&gt; are &lt;EM&gt;Processing Time&lt;/EM&gt; (mostly the time it takes for the task’s ABAP statements to be handled in the work process) and &lt;EM&gt;DB Request Time&lt;/EM&gt; (the time that elapses while database requests triggered by the application are processed). In most cases, &lt;EM&gt;Total Memory Consumption&lt;/EM&gt; is identical to the &lt;EM&gt;Extended Memory Consumption&lt;/EM&gt;, but &lt;EM&gt;Paging Memory&lt;/EM&gt;&amp;nbsp;or &lt;EM&gt;Heap Memory&lt;/EM&gt; may also contribute to the total.&lt;BR /&gt;
&lt;BR /&gt;
From this list of statistics records, using criteria appropriate to your investigation, &lt;STRONG&gt;you find and inspect statistics records&lt;/STRONG&gt; for tasks that are too slow or require too many resources.&lt;BR /&gt;
&lt;P style="text-align: left"&gt;Since even the most basic statistics record contains too much data to include in a tabular display, &lt;CODE&gt;STATS&lt;/CODE&gt; gives you access to all measurements—most notably the breakdowns of the total server &lt;EM&gt;Response Time&lt;/EM&gt; and the &lt;EM&gt;DB Request Time&lt;/EM&gt;, and the individual contributions to &lt;EM&gt;Total Memory Consumption&lt;/EM&gt;—of a selected record by double-clicking any of its columns. This leads you to an itemized view of the record’s measurements in a pop-up window (Fig. 3).&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/12/2021-12-20_08-44-52.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;&lt;EM&gt;Figure 3&lt;/EM&gt;:&lt;/STRONG&gt; Pop-up window with all available measurements for a statistics record, subdivided into semantic categories on separate tabs.&lt;/P&gt;&lt;BR /&gt;
At the top, it identifies the statistics record via its header data. With the up and down triangles to the left of the header data you can navigate from record to record within this pop-up. The available technical data is grouped into categories, such as &lt;EM&gt;Time&lt;/EM&gt;, &lt;EM&gt;DB&lt;/EM&gt;, or &lt;EM&gt;Memory and Data&lt;/EM&gt;. Use the tabs to switch between categories. Tabs for categories without data for the current statistics record are inactive and grayed out. Documentation is available by single-clicking the field name.&lt;BR /&gt;
&lt;BR /&gt;
To assess the data captured in a statistics record, consider the purpose that the corresponding task serves.&lt;BR /&gt;
OLTP (Online Transaction Processing) applications usually spend about 25% of their server &lt;EM&gt;Response Time&lt;/EM&gt; as &lt;EM&gt;DB Request Time&lt;/EM&gt; and the remainder as &lt;EM&gt;Processing Time&lt;/EM&gt; on the application server. For tasks that invoke synchronous RFCs or communication with SAP GUI controls on the front end, associated &lt;EM&gt;Roll Wait Time&lt;/EM&gt; may also contribute significantly to server &lt;EM&gt;Response Time&lt;/EM&gt;. For OLTP applications, the expected end-to-end response time is about 1,000 ms and the typical order of magnitude for &lt;EM&gt;Total Memory Consumption&lt;/EM&gt; is 10,000 KB. Records that show significant upward deviations may indicate a performance problem in your application. You should analyze them carefully and use dedicated analysis tools such as transactions &lt;CODE&gt;ST05&lt;/CODE&gt; (Performance Trace) or &lt;CODE&gt;SAT&lt;/CODE&gt; (Runtime Analysis).&lt;BR /&gt;
In comparison, OLAP (Online Analytical Processing) applications typically create more load on the database (absolute as well as relative) and may consume more memory on the application server. Users of OLAP applications may have slightly relaxed demands of their end-to-end response times.&lt;BR /&gt;
&lt;H1 id="toc-hId-239019151"&gt;Conclusions&lt;/H1&gt;&lt;BR /&gt;
You want to &lt;STRONG&gt;optimize the performance of your applications&lt;/STRONG&gt; and you want to &lt;STRONG&gt;ensure their linear scalability&lt;/STRONG&gt;. For this you need &lt;STRONG&gt;reliable data&lt;/STRONG&gt; that &lt;STRONG&gt;indicates the software’s response times and resource consumption&lt;/STRONG&gt;. For ABAP-based applications, this data is contained in the &lt;STRONG&gt;statistics records&lt;/STRONG&gt; that the SAP kernel captures automatically for every task handled by a work process. Using this information, you can identify critical steps in an application, determine which component is the bottleneck, and define the best approach for optimization.&lt;BR /&gt;
&lt;BR /&gt;
The &lt;STRONG&gt;Performance Monitor (transaction &lt;CODE&gt;STATS&lt;/CODE&gt;) &lt;/STRONG&gt;is a tool for &lt;STRONG&gt;selecting, displaying, and analyzing statistics records&lt;/STRONG&gt;. It helps developers and operators find the best balance between fast response times, large data throughput, high concurrency, and low hardware cost. The tool is easy and convenient to use and comes with a feature-rich user interface framework so that you can focus on the data and its interpretation.&lt;BR /&gt;
&lt;H1 id="toc-hId-42505646"&gt;Outlook&lt;/H1&gt;&lt;BR /&gt;
As a developer, and in the interest of your application's users, you are primarily interested in short end-to-end response times, but &lt;CODE&gt;STATS&lt;/CODE&gt; focusses very much on server &lt;EM&gt;Response Time&lt;/EM&gt;. Especially for modern browser-based or mobile applications, front-end and network times dominate the total duration of many user interaction steps, but their contributions are not contained in the statistics records.&lt;BR /&gt;
&lt;BR /&gt;
Additionally, one of your interactions with the application may trigger multiple HTTP round trips into the ABAP back end. All associated statistics records must be considered for a complete account of the resource consumption, but their attribution is not always straightforward.&lt;BR /&gt;
&lt;BR /&gt;
To fill these gaps, SAP's UI frameworks (especially SAPUI5 underlying SAP Fiori applications) collect relevant data on the front end and subsequently send it in front-end statistics records to the ABAP back end. There these front-end statistics records can be combined with the corresponding main statistics records.&lt;BR /&gt;
&lt;BR /&gt;
I will describe the front-end statistics records in a sequel to this blog post. I will also introduce and explain transaction &lt;CODE&gt;STATS_FE&lt;/CODE&gt; as the tool to display and analyze them.&lt;BR /&gt;
&lt;H1 id="toc-hId--154007859"&gt;References&lt;/H1&gt;&lt;BR /&gt;
Parts of this blog post are taken from my SAPinsider article on transaction &lt;CODE&gt;STATS&lt;/CODE&gt;:&lt;BR /&gt;
&lt;A href="https://sapinsider.org/identifying-performance-problems-in-abap-applications/" target="_blank" rel="nofollow noopener noreferrer"&gt;Identifying Performance Problems in ABAP Applications&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
Details on the collection and interpretation of statistics records are explained in SAP Notes:&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/579462" target="_blank" rel="noopener noreferrer"&gt;579462 - Runtime parameter of the statistics collection&lt;/A&gt;&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/8963" target="_blank" rel="noopener noreferrer"&gt;8963 - Definition of SAP response time/processing time/CPU time&lt;/A&gt;&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/1063061" target="_blank" rel="noopener noreferrer"&gt;1063061 - Information about response time in STAD/ST03&lt;/A&gt;&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/364625" target="_blank" rel="noopener noreferrer"&gt;364625 - Interpretation of response time in 4.6&lt;/A&gt;&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/552845" target="_blank" rel="noopener noreferrer"&gt;552845 - FAQ: RFC Statistics in Transactions ST03/ST03N and STAD&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;CODE&gt;STATS&lt;/CODE&gt; is the successor of transaction &lt;CODE&gt;STAD&lt;/CODE&gt;. As both tools work with the very same statistics records, the following two blog posts are still relevant:&lt;BR /&gt;
&lt;A href="https://blogs.sap.com/2007/01/12/statistical-records-part-1-inside-stad/" target="_blank" rel="noopener noreferrer"&gt;Statistical Records Part 1: Inside STAD&lt;/A&gt;&lt;BR /&gt;
&lt;A href="https://blogs.sap.com/2007/02/15/statistical-records-part-2-rfc-statistics/" target="_blank" rel="noopener noreferrer"&gt;Statistical Records Part 2: RFC Statistics&lt;/A&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/measure-your-application-s-performance-and-resource-consumption-evaluate/ba-p/13509690"/>
    <published>2021-12-23T13:26:34+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/use-transaction-stats-fe-to-analyze-the-performance-of-your-web-application/ba-p/13539702</id>
    <title>Use Transaction STATS_FE to Analyze the Performance of your Web Application</title>
    <updated>2022-01-27T11:40:54+01:00</updated>
    <author>
      <name>ManfredMensch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165193</uri>
    </author>
    <content>As a business application developer, you need to ensure that your apps run with optimal performance. While this holds for all types of applications, in this blog post I am specifically looking at web apps, and in particular I am focusing on SAP S/4HANA applications using web-based access.&lt;BR /&gt;
&lt;BR /&gt;
Your &lt;STRONG&gt;app's users demand short end-to-end response times&lt;/STRONG&gt; to work efficiently. For each user interaction of your web application, you can break down its end-to-end response time into three main contributors:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Front end (web browser or native mobile)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Network&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Back end (for SAP S/4HANA web applications this is further subdivided into the ABAP business logic and the SAP HANA database persistency)&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
You need reliable measurements on these components to assess a dialog step's duration. (Some user interactions may be handled exclusively on the front end. These front-end-only steps do not have any contributions from network and back end.) Most user interactions in Online Transaction Processing (OLTP) applications have their end-to-end response times dominated by the front end plus the network contributions.&lt;BR /&gt;
&lt;BR /&gt;
Another relevant aspect of your web application's performance is its back-end resource consumption. Here the challenge is that one user interaction triggers an unpredictable number of HTTP roundtrips into the back end. They must be identified and aggregated to get dependable data on consumed hardware resources like CPU time or main memory.&lt;BR /&gt;
&lt;BR /&gt;
In my previous blog post &lt;A href="https://blogs.sap.com/2021/12/23/measure-your-applications-performance-and-resource-consumption-evaluate-statistics-records-with-transaction-stats/" target="_blank" rel="noopener noreferrer"&gt;Measure your Application’s Performance and Resource Consumption: Evaluate Statistics Records with Transaction STATS&lt;/A&gt; I have described the statistics records collected by the ABAP kernel and I have explained how you use my transaction &lt;CODE&gt;STATS&lt;/CODE&gt; to display and interpret the relevant statistics records. I have also mentioned some limitations of the statistics records, especially that they focus on server response time and that they correspond to individual tasks executed in the ABAP back end.&lt;BR /&gt;
&lt;BR /&gt;
In this blog post I explain how front-end statistics records fill these gaps and how my &lt;STRONG&gt;transaction &lt;CODE&gt;STATS_FE&lt;/CODE&gt; gives you a complete end-to-end picture of the performance and scalability of your web application&lt;/STRONG&gt;. You can use &lt;CODE&gt;STATS_FE&lt;/CODE&gt; since SAP NetWeaver 7.56. I am continuously improving it and this blog post presents the tool’s state for SAP NetWeaver 7.57 as of late January 2022.&lt;BR /&gt;
&lt;H1 id="toc-hId-831330913"&gt;What are Front-End Statistics Records?&lt;/H1&gt;&lt;BR /&gt;
SAP's most important UI frameworks (SAP GUI for HTML, SAPUI5, and Web Dynpro ABAP) have been equipped to take performance-related measurements on front-end devices. Client-specific performance information is collected per user interaction. Even some---but not all---of the previously mentioned front-end-only steps (user interactions without associated HTTP requests) trigger the logging of front-end statistics. At the end of a user interaction the gathered data is assembled into a front-end statistics records which will subsequently be sent into the ABAP back end.&lt;BR /&gt;
&lt;BR /&gt;
The available meta data&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;identify the application and the user interaction step,&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;indicate the front end's operating system, and the HTML browser with its version,&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;specify the UI framework,&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;establish the relation with the back-end statistics records that correspond to the HTTP requests.&lt;BR /&gt;
(In my &lt;A href="https://blogs.sap.com/2021/12/23/measure-your-applications-performance-and-resource-consumption-evaluate-statistics-records-with-transaction-stats/" target="_blank" rel="noopener noreferrer"&gt;blog post on &lt;CODE&gt;STATS&lt;/CODE&gt;&lt;/A&gt;, they were simply called statistics records. From now on I will use the more precise terms back-end or main statistics record.)&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Time durations are available for&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;end-to-end response time&lt;BR /&gt;
difference between the start and end times of the user interaction, as determined by the UI framework&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;client navigation time&lt;BR /&gt;
sum of all HTTP request’s navigation times, corrected for overlaps&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;client round trip time&lt;BR /&gt;
sum of all client-side HTTP request durations, corrected for overlaps&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;client processing time&lt;BR /&gt;
calculated as end-to-end response time – client navigation time – client round trip time&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;back-end request time&lt;BR /&gt;
sum of all client-side HTTP request durations, measured on the front end&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;server response time&lt;BR /&gt;
sum of all server-side HTTP request durations, measured on the back end and sent to the front end with the HTTP response&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;network time&lt;BR /&gt;
sum of all differences (client-side HTTP request durations – server-side HTTP request durations)&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
KPIs related to data transfer include&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;number of HTTP requests&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;amount of data sent&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;amount of data received&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;a flag to indicate whether HTTP requests were compressed&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
As I have stressed in my &lt;A href="https://blogs.sap.com/2021/12/23/measure-your-applications-performance-and-resource-consumption-evaluate-statistics-records-with-transaction-stats/" target="_blank" rel="noopener noreferrer"&gt;previous post&lt;/A&gt; the "value of your performance analysis depends on the quality of the underlying measurements. While the collection of data into the statistics records is performed autonomously by the SAP kernel, &lt;STRONG&gt;you need some preparation&lt;/STRONG&gt; to ensure that the captured information accurately reflects the performance of the application." This continues to hold, and you should take the same preparatory steps as mentioned there.&lt;BR /&gt;
&lt;H1 id="toc-hId-634817408"&gt;How Do You Analyze Front-End Statistics Records?&lt;/H1&gt;&lt;BR /&gt;
To view the front-end statistics records related to an execution of your web application &lt;STRONG&gt;you run SAP GUI transaction &lt;CODE&gt;STATS_FE&lt;/CODE&gt;&lt;/STRONG&gt; in the ABAP system that acts as the back end for your web application's execution. On the start screen (Fig. 1) &lt;STRONG&gt;you specify criteria for the subset of front-end statistics records&lt;/STRONG&gt; you want to analyze. The filter criteria are subdivided into four areas.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/STATS_FE_StartScreen.png" /&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;&lt;EM&gt;Figure 1:&lt;/EM&gt;&lt;/STRONG&gt; On the &lt;CODE&gt;STATS_FE&lt;/CODE&gt; start screen, you define filter conditions for the subset of front-end statistics records you want to analyze, specify from where the records are retrieved, and select the layout of the data display.&lt;/P&gt;&lt;BR /&gt;
You determine the &lt;STRONG&gt;&lt;EM&gt;Monitoring Interval&lt;/EM&gt;&lt;/STRONG&gt; in the topmost area. By default, it extends 10 minutes into the past and 1 minute into the future. Records written during this period are displayed if they fulfill the conditions specified in the other areas of the start screen. You want &lt;CODE&gt;STATS_FE&lt;/CODE&gt; to show as few unrelated records as possible. Therefore, you adjust this interval based on the start and end times of your application's execution.&lt;BR /&gt;
&lt;BR /&gt;
You define additional criteria that the records must meet in the&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;Record Filter&lt;/EM&gt;&lt;/STRONG&gt; area. Be as specific and restrictive as possible, so that only records relevant for your investigation will be displayed. Particularly helpful are client and user. If you want to focus on expensive user interactions in your web application, you can specify lower thresholds for measurement data, such as end-to-end response time or number of network roundtrips. The other conditions support advanced analyses and comparisons.&lt;BR /&gt;
&lt;BR /&gt;
By default, statistics records are read from all application server instances of the system. In the &lt;STRONG&gt;&lt;EM&gt;Configuration&lt;/EM&gt;&lt;/STRONG&gt; section, you can change this to the local instance, or to any subset of instances within the current system. Restricting the statistics records retrieval to the instance (or instances) where the application was executed shortens the runtime of &lt;CODE&gt;STATS_FE&lt;/CODE&gt;. The option &lt;EM&gt;Include Statistics Records&amp;nbsp;&lt;/EM&gt;&lt;EM&gt;from Memory&lt;/EM&gt; is selected by default, so that &lt;CODE&gt;STATS_FE&lt;/CODE&gt; will also process records that have not yet been flushed from the memory buffer into the file system.&lt;BR /&gt;
&lt;BR /&gt;
Under&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;Display Layout&lt;/EM&gt;&lt;/STRONG&gt;, select how the associated subset of key performance indicators (KPIs)—the captured data—will be arranged in the tabular display of front-end statistics records. The pre-selected layout shows all KPIs from the front-end statistics records and the most important aggregated KPIs of the associated back-end statistics records.&lt;BR /&gt;
&lt;H1 id="toc-hId-438303903"&gt;What do You Learn from Front-End Statistics Records?&lt;/H1&gt;&lt;BR /&gt;
Fig. 2 shows the list of front-end statistics records based on the settings specified in the &lt;CODE&gt;STATS_FE&lt;/CODE&gt; start screen (Fig. 1).&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/STATS_FE_RecordDisplay.png" /&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;&lt;EM&gt;Figure 2:&lt;/EM&gt;&lt;/STRONG&gt; Front-end statistics records matching the criteria specified on the &lt;CODE&gt;STATS_FE&lt;/CODE&gt; start screen (Fig. 1). The list shows front-end statistics records that correspond to the creation of a sales order with SAP S/4HANA application F3893.&lt;/P&gt;&lt;BR /&gt;
The table displays the selected front-end statistics records in chronological order and contains their main KPIs. The header columns—shown with a blue background—uniquely link each record to the corresponding user interaction. The data columns contain the KPIs that indicate the performance of the user interactions. These columns are subdivided into two groups: Those with a gray background show the performance-related measurements taken on the front end. They are the true front-end statistics records. The columns with the yellow background cover the most important aggregated KPIs of the associated back-end statistics records.&lt;BR /&gt;
Measurements for times and durations are given in milliseconds (ms). Memory consumptions and data transfers are measured in kilobytes (KB).&lt;BR /&gt;
&lt;BR /&gt;
The table of statistics records is displayed within an ALV grid control and inherits all functions of this SAP GUI tool. To access them, expand the toolbar by clicking on the &lt;EM&gt;Show Standard ALV Functions&lt;/EM&gt;&amp;nbsp;button (the black triangle that points to the right).&lt;BR /&gt;
&lt;BR /&gt;
The &lt;EM&gt;End-to-End Response Time&lt;/EM&gt; is split into &lt;EM&gt;Client Navigation Time&lt;/EM&gt;,&amp;nbsp;&lt;EM&gt;Client Round Trip Time&lt;/EM&gt;, and &lt;EM&gt;Client Processing Time&lt;/EM&gt;. This breakdown tells you if a slow user interaction suffers from technical problems to start the first HTTP request, in which case &lt;EM&gt;Client Navigation Time&lt;/EM&gt; would be high. A large &lt;EM&gt;Client Processing Time&lt;/EM&gt; typically indicates that the interpretation or rendering of the HTTP requests takes too long. Slow HTTP requests show up as high &lt;EM&gt;Client Round Trip Time&lt;/EM&gt;. This KPI takes into account if HTTP requests overlap. The related KPI &lt;EM&gt;Server Request Time&lt;/EM&gt; does not apply such a correction, but simply adds the individual request's durations. HTTP requests can be slow because their processing in the back end takes too much time, or because the network communication is too slow. This latter case is indicated by a high &lt;EM&gt;Total Network Time&lt;/EM&gt;.&lt;BR /&gt;
For most dialog steps in SAP S/4HANA applications, users expect an &lt;EM&gt;End-to-End Response Time&lt;/EM&gt; below 1 s. To reliably achieve this, &lt;EM&gt;Client Navigation Time &lt;/EM&gt;plus &lt;EM&gt;Client Processing Time &lt;/EM&gt;shall be below 300 ms, and &lt;EM&gt;Total Network Time&lt;/EM&gt; in a wide area network must not exceed 350 ms. The remaining 350 ms are available for back-end processing.&lt;BR /&gt;
&lt;BR /&gt;
Further data on the communication between front end and back end, are the &lt;EM&gt;Network Roundtrips, &lt;/EM&gt;and the transferred amount of data, split into &lt;EM&gt;Sent Data &lt;/EM&gt;and &lt;EM&gt;Received Data&lt;/EM&gt;. The &lt;EM&gt;Compressed&lt;/EM&gt; flag is blank if there is at least one uncompressed response body with size above 1 KB.&lt;BR /&gt;
To achieve an &lt;EM&gt;End-to-End Response Time&lt;/EM&gt; less than 1 s a user interaction must not trigger more than two non-overlapping synchronous roundtrips, and ideally does not transfer more than 10 kB of data.&lt;BR /&gt;
&lt;BR /&gt;
For each front-end statistics record, &lt;CODE&gt;STATS_FE&lt;/CODE&gt; finds the associated main statistics records and aggregates their most important KPIs: Durations are summed; for memory consumptions, the maximum is determined. The values (together with the number of detected main records in column &lt;EM&gt;Count of Main Records&lt;/EM&gt;) are displayed with a yellow background. With these measurements you can assess the user interaction's overall resource consumption in the back end.&lt;BR /&gt;
As a rule of thumb, a simple dialog step (expected &lt;EM&gt;End-to-End Response Time&lt;/EM&gt; below 1 s) shall use less than 350 ms &lt;EM&gt;ABAP CPU Time&lt;/EM&gt; and less than 150 ms &lt;EM&gt;HANA CPU Time&lt;/EM&gt;.&lt;BR /&gt;
&lt;BR /&gt;
You might expect that &lt;EM&gt;Network Roundtrips &lt;/EM&gt;always equals &lt;EM&gt;Count of Main Records&lt;/EM&gt;, but the front-end statistics may include requests that have been handled by the browser cache, or requests that were sent to other back ends than the one where you run &lt;CODE&gt;STATS_FE&lt;/CODE&gt;, or requests that serve generic purposes not directly relevant to the application's business objective. On the other hand, the back end may internally trigger tasks (e.g., RFCs, UPDATEs) resulting in separate main statistics records. Therefore, deviations in both directions are possible. Front-end statistics for which &lt;EM&gt;Network Roundtrips&lt;/EM&gt; equals zero indicate front-end-only steps.&lt;BR /&gt;
&lt;BR /&gt;
Based on this list of front-end statistics records &lt;STRONG&gt;you identify and focus on user interactions that do not meet expectations&lt;/STRONG&gt;---either because they are too slow or because they require too many resources.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/STATS_FE_MainRecordDisplay.png" /&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;&lt;EM&gt;Figure 3:&lt;/EM&gt;&lt;/STRONG&gt; Main statistics records associated with the seventh front-end statistics record from Fig. 2.&lt;/P&gt;&lt;BR /&gt;
Double-clicking an entry in the list of front-end statistics records takes you to transaction &lt;CODE&gt;STATS&lt;/CODE&gt; and there displays the main statistics records associated with the user interaction (Fig. 3). You analyze this set of back-end statistics records as describe in my &lt;A href="https://blogs.sap.com/2021/12/23/measure-your-applications-performance-and-resource-consumption-evaluate-statistics-records-with-transaction-stats/" target="_blank" rel="noopener noreferrer"&gt;STATS blog post&lt;/A&gt; to understand the back end performance and resource consumption of all activities that were triggered by the user interaction represented by the chosen front-end statistics record and that were handled by the ABAP system where you currently work with transactions &lt;CODE&gt;STATS_FE&lt;/CODE&gt; and &lt;CODE&gt;STATS&lt;/CODE&gt;.&lt;BR /&gt;
&lt;H1 id="toc-hId-241790398"&gt;Conclusions&lt;/H1&gt;&lt;BR /&gt;
Front-end statistics records contain performance-related data for user interactions on front-end devices. They are collected by SAP's most frequently used UI frameworks and then sent into the ABAP back end. There you can use the &lt;STRONG&gt;Front End Performance Monitor (transaction &lt;CODE&gt;STATS_FE&lt;/CODE&gt;)&lt;/STRONG&gt; to &lt;STRONG&gt;select, display, and analyze the front-end statistics records related to your application&lt;/STRONG&gt;. As developer or operator, you use this tool to assess the contributions to the end-to-end response time of user interactions in web applications whose performance you want to ensure. The integration of the main statistics records and the coupling with transaction &lt;CODE&gt;STATS&lt;/CODE&gt; enables the simultaneous evaluation of the resource consumption in the back end.&lt;BR /&gt;
&lt;BR /&gt;
&lt;CODE&gt;STATS_FE&lt;/CODE&gt; supports a &lt;STRONG&gt;holistic end-to-end view on the performance, resource consumption, and scalability of web applications&lt;/STRONG&gt;. Starting with the set of front-end statistics records of a complete business process, you obtain the overall resource consumption, and you identify the critical user interactions. Focusing on them you understand which component (front end, network, or back end) is the bottle neck. If you conclude that this is the back end, a drill-down into the associated main statistics records will get you even closer to the root cause.&lt;BR /&gt;
&lt;H1 id="toc-hId-45276893"&gt;Disclaimer&lt;/H1&gt;&lt;BR /&gt;
The statistics records (front-end as well as back-end) constitute measurements and therefore can have neither absolute precision nor absolute accuracy. To improve reliability and confidence in the data, reduce the impact of variability with an increased sample size (i.e., take averages of multiple measurements), and detect conceivable bias by comparing with data from other tools.&lt;BR /&gt;
&lt;H1 id="toc-hId--151236612"&gt;References&lt;/H1&gt;&lt;BR /&gt;
You find an introduction to statistics records and transaction &lt;CODE&gt;STATS&lt;/CODE&gt; in my blog post &lt;A href="https://blogs.sap.com/2021/12/23/measure-your-applications-performance-and-resource-consumption-evaluate-statistics-records-with-transaction-stats/" target="_blank" rel="noopener noreferrer"&gt;Measure your Application’s Performance and Resource Consumption: Evaluate Statistics Records with Transaction STATS&lt;/A&gt;.&lt;BR /&gt;
&lt;BR /&gt;
I have published an SAPinsider article on transaction &lt;CODE&gt;STATS&lt;/CODE&gt;:&lt;BR /&gt;
&lt;A href="https://sapinsider.org/identifying-performance-problems-in-abap-applications/" target="_blank" rel="noopener nofollow noreferrer"&gt;Identifying Performance Problems in ABAP Applications&lt;/A&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/use-transaction-stats-fe-to-analyze-the-performance-of-your-web-application/ba-p/13539702"/>
    <published>2022-01-27T11:40:54+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/st05-basic-use/ba-p/13554382</id>
    <title>ST05: Basic Use</title>
    <updated>2023-02-24T12:24:31+01:00</updated>
    <author>
      <name>ManfredMensch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165193</uri>
    </author>
    <content>This is the first blog post in a series of posts that cover my SAP GUI transaction &lt;CODE&gt;ST05&lt;/CODE&gt;. Here, I show the straightforward use of the tool to get you started for ad hoc performance analyses of your business applications.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;If you have not yet done so, please read the introductory post &lt;A href="https://blogs.sap.com/?p=1688270" target="_blank" rel="noopener noreferrer"&gt;Use ST05 to Analyze the Communication of the ABAP Work Process with External Resources&lt;/A&gt;. There, I explain how my transactions &lt;CODE&gt;STATS&lt;/CODE&gt; and &lt;CODE&gt;STATS_FE&lt;/CODE&gt; help you to detect performance bugs in your applications. That post also introduces &lt;CODE&gt;ST05&lt;/CODE&gt; as an essential analysis tool to find root causes for applications that are too slow or consume too many resources. In particular, it captures and logs communications and data transfers between the ABAP work process and external components. By default, these transmissions are not recorded to avoid the associated overhead.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;You start the &lt;EM&gt;Performance Trace&lt;/EM&gt; (sometimes also called &lt;EM&gt;Performance Analysis&lt;/EM&gt;) with transaction code &lt;CODE&gt;ST05&lt;/CODE&gt;. On its start screen, in area &lt;EM&gt;Select Trace Type&lt;/EM&gt; (Fig. 1), mark the options that correspond to the types of communication you need to analyze. This choice shall correspond to the critical interfaces identified by previous measurements of the application under investigation, e.g., with transactions &lt;CODE&gt;STATS&lt;/CODE&gt; or &lt;CODE&gt;STATS_FE&lt;/CODE&gt;.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/02/ST05_BasicUse_StartScreen_TraceOff.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;&lt;EM&gt;Figure 1&lt;/EM&gt;:&lt;/STRONG&gt; In area &lt;STRONG&gt;Select Trace Type&lt;/STRONG&gt; on the &lt;CODE&gt;ST05&lt;/CODE&gt; start screen, you mark the relevant trace types. Determine whether the ABAP call hierarchy shall be recorded in section &lt;STRONG&gt;Configure Trace&lt;/STRONG&gt;. Then switch on tracing on the local application server instance by clicking &lt;STRONG&gt;Activate Trace&lt;/STRONG&gt;. The &lt;STRONG&gt;&lt;EM&gt;Trace State&lt;/EM&gt;&lt;/STRONG&gt; panel displays the current settings.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;&lt;CODE&gt;ST05&lt;/CODE&gt; supports &lt;SPAN data-usefontface="false" data-contrast="none"&gt;seven communication interfaces across which the ABAP work process can exchange information with external components. They are listed in Table 1.&lt;BR /&gt;
&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;TABLE style="width: 100%;border-collapse: collapse;border-style: none" border="0" cellpadding="0"&gt;&lt;CAPTION&gt;&lt;STRONG&gt;Table 1:&lt;/STRONG&gt; Trace types covered by &lt;CODE&gt;ST05&lt;/CODE&gt;.&lt;/CAPTION&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR&gt;&lt;BR /&gt;
&lt;TD style="width: 16.56%"&gt;SQL&lt;BR /&gt;
Buffer&lt;BR /&gt;
&lt;SPAN data-usefontface="false" data-contrast="none"&gt;Enqueue&lt;BR /&gt;
&lt;/SPAN&gt;&lt;SPAN data-usefontface="false" data-contrast="none"&gt;RFC&lt;BR /&gt;
&lt;/SPAN&gt;&lt;SPAN data-usefontface="false" data-contrast="none"&gt;HTTP&lt;BR /&gt;
&lt;/SPAN&gt;&lt;SPAN data-usefontface="false" data-contrast="none"&gt;APC&lt;BR /&gt;
&lt;/SPAN&gt;&lt;SPAN data-usefontface="false" data-contrast="none"&gt;AMC&amp;nbsp;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 83.44%"&gt;DB accesses&lt;BR /&gt;
&lt;SPAN data-usefontface="false" data-contrast="none"&gt;calls to buffered objects handled by the application server’s buffers&lt;BR /&gt;
set or release SAP business locks (enqueues)&lt;BR /&gt;
remote function calls&lt;BR /&gt;
HTTP(S) communication&lt;BR /&gt;
WebSocket communication&lt;BR /&gt;
message exchange via publish/subscribe channels&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;/TABLE&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;The most common trace type (pre-selected by default) is the &lt;EM&gt;SQL Trace&lt;/EM&gt;. It addresses communication with the database server. A more appropriate name would be &lt;EM&gt;DB Trace&lt;/EM&gt;, because only SQL statements sent to the database will be recorded. To capture SQL statements handled by the table buffer in the ABAP application server instance you must mark option &lt;EM&gt;Buffer Trace&lt;/EM&gt;.&lt;BR /&gt;
In the &lt;EM&gt;Configure Trace&lt;/EM&gt; area you can decide whether relevant communication activities shall be recorded together with their triggering ABAP call hierarchy (&lt;EM&gt;Stack Trace&lt;/EM&gt; = &lt;CODE&gt;On&lt;/CODE&gt;). During subsequent trace analysis, this is especially helpful for events encapsulated within and called via generic technical frameworks. As a developer of a specific business application's coding you can do little to improve the immediate invocation of the event, but you are obliged to optimize your call to the framework. This call's source code is accessible by the ABAP call stack. If you set &lt;EM&gt;Stack Trace&lt;/EM&gt; = &lt;CODE&gt;Off&lt;/CODE&gt;&amp;nbsp;(default in customer systems), only the immediate caller will be recorded.&lt;/P&gt;&lt;BR /&gt;
To start tracing, click button &lt;EM&gt;Activate Trace&lt;/EM&gt;. This switches on the trace recording only on the local ABAP application server instance, and exclusively for the current user. &lt;SPAN class="TextRun BCX0 SCXP20094057" lang="EN-US" lang="EN-US" data-usefontface="false" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun BCX0 SCXP20094057"&gt;Activities on other instances or by other users are not traced. &lt;/SPAN&gt;&lt;/SPAN&gt;Area &lt;EM&gt;Trace State&lt;/EM&gt; indicates the date and time of the last change, and the name of the user who did the change (Fig. 2). It also shows the active trace types and the name of the user whose activities are traced. (With the current method to activate tracing, this is your user's name.)&lt;BR /&gt;
&lt;SPAN data-usefontface="false" data-contrast="none"&gt;If recording is already active on the instance, you cannot start another recording. You must wait until the other user ends the recording.&lt;/SPAN&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/02/ST05_BasicUse_StartScreen_TraceOn.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;text-align: left"&gt;&lt;STRONG&gt;&lt;EM&gt;Figure 2&lt;/EM&gt;:&lt;/STRONG&gt; On the &lt;CODE&gt;ST05&lt;/CODE&gt; start screen, the &lt;STRONG&gt;Trace State&lt;/STRONG&gt; area indicates the current situation on the local application server instance. When the process under investigation has finished, &lt;STRONG&gt;Deactivate Trace&lt;/STRONG&gt;. Then click &lt;STRONG&gt;Display Trace&lt;/STRONG&gt; to work on the records.&lt;/P&gt;&lt;BR /&gt;
Execute the process in the normal way. You must ensure that it runs for the same back-end user who activated tracing, and that it gets executed on the application server instance where you have switched on the recording.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;Once the application has completed, return to the &lt;CODE&gt;ST05&lt;/CODE&gt; start screen (Fig. 2). Switch off the recording by clicking &lt;EM&gt;Deactivate Trace&lt;/EM&gt;. To start the analysis, click button &lt;EM&gt;Display Trace&lt;/EM&gt;. This takes you to the &lt;EM&gt;Filter Conditions for Trace Records &lt;/EM&gt;(Fig. 3). There you can specify restrictions on the subset of captured trace records to be examined. The appropriate filter conditions are pre-populated as much as possible with values that correspond to the previous activate - deactivate cycle. This applies in particular to the &lt;EM&gt;Trace Types&lt;/EM&gt;, and to the &lt;EM&gt;Trace Period&lt;/EM&gt;, which starts at the time of the last trace activation and ends at the time of the last trace deactivation.&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/02/ST05_BasicUse_FilterConditions.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;text-align: left"&gt;&lt;STRONG&gt;&lt;EM&gt;Figure 3&lt;/EM&gt;:&lt;/STRONG&gt; Define filter conditions for trace records to be displayed and analyzed. Entries in areas &lt;STRONG&gt;Trace Types&lt;/STRONG&gt; and &lt;STRONG&gt;Trace Period&lt;/STRONG&gt; are prefilled with data matching the previous trace recording. With entries in section &lt;STRONG&gt;Trace Filter&lt;/STRONG&gt;, you can concentrate on a subset of the trace with specific properties.&lt;/P&gt;&lt;BR /&gt;
In the &lt;EM&gt;Configuration&lt;/EM&gt; area, you may overrule the default to work on trace records only from the &lt;EM&gt;Local&lt;/EM&gt; application server instance. Alternatives are all &lt;EM&gt;Active&lt;/EM&gt; instances, or an &lt;EM&gt;Individual&lt;/EM&gt; subset of all application server instances. (Recall that the click on &lt;EM&gt;Activate Trace&lt;/EM&gt; records only on the local instance.) Due to load balancing, after a new logon you might be working on another application server instance. If you know the instance where your trace was recorded, choose it from the &lt;EM&gt;Instance Selection&lt;/EM&gt; popup that comes up after clicking &lt;EM&gt;Individual&lt;/EM&gt;.&lt;BR /&gt;
The option &lt;EM&gt;Max. Number of Records&lt;/EM&gt; guards against traces with an unexpectedly large number of records. A popup will indicate when the given number of records has been read and processed. You can then decide whether you want to continue or abort. The default value is 5000 records. The system will remember your most recent value. You may also set your personal default with user profile parameter &lt;CODE&gt;ST05_MAX_REC_NUMBER&lt;/CODE&gt;.&lt;BR /&gt;
&lt;BR /&gt;
In area &lt;EM&gt;Trace Filter&lt;/EM&gt; you may set restrictions (Tab. 2) to focus your attention on particular details. This is helpful in exceptional cases, but rarely used. Ensure that you do not suppress important information by applying a filter that is too restrictive. Also be aware that it might interfere with displaying the ABAP call stack.&lt;BR /&gt;
&lt;TABLE style="height: 202px;width: 100%;border-collapse: collapse;border-style: solid" border="0"&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun BCX0 SCXP166778655" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun BCX0 SCXP166778655"&gt;Trace Types &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 14px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP74790722 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP74790722 BCX0"&gt;Select the trace types you want to analyze.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXP74790722 BCX0"&gt;​&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 10px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;Trace Period&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 10px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP230032492 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP230032492 BCX0"&gt;After recording a trace, the default time interval extends from the time when the trace recording was started until it was ended.&lt;BR /&gt;
For previously recorded traces, specify the time interval manually.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXP230032492 BCX0"&gt;​&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;Client &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 14px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;Client where the traced activity was executed.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXP148981702 BCX0"&gt;​&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;User Name&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 14px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt; &lt;SPAN class="TextRun SCXP72417636 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP72417636 BCX0"&gt;Name of the user who executed the traced activity.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 10px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;Object Name&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 10px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt; &lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;Name of the object that was accessed.&lt;BR /&gt;
(SQL, BUF: table or view; ENQ: lock object;&lt;BR /&gt;
RFC: function; &lt;SPAN data-contrast="none"&gt;HTTP, APC: path; AMC: channel ID)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="vertical-align: top;width: 31%;border-style: solid;text-align: left;height: 14px"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun BCX0 SCXP139324481" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun BCX0 SCXP139324481"&gt;Duration [Microsecs]&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;vertical-align: top;border-style: solid;text-align: left;height: 14px"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP212781920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP212781920 BCX0"&gt;Elapsed execution time of the operation in microseconds (µs).&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;Executed Operation &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 14px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;Operation that was executed.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXP61426920 BCX0"&gt;​&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Database Connection Name&lt;/SPAN&gt;&lt;/I&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 14px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;SPAN data-contrast="none"&gt;Database connection that was used to access the data.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Database Connection ID&lt;/SPAN&gt;&lt;/I&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 14px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;SPAN data-contrast="none"&gt;Database connection ID used to process the statement.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR&gt;&lt;BR /&gt;
&lt;TD style="vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Work Process Type&lt;/SPAN&gt;&lt;/I&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;SPAN data-contrast="none"&gt;Type of the work process that executed the traced activity.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Work Process ID&lt;/SPAN&gt;&lt;/I&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 14px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;SPAN data-contrast="none"&gt;Number of the work process that executed the traced activity.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Transaction ID&lt;/SPAN&gt;&lt;/I&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 14px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;SPAN data-contrast="none"&gt;GUID that designates an SAP LUW.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;EPP Root Context ID&lt;/SPAN&gt;&lt;/I&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 14px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;SPAN data-contrast="none"&gt;The extended passport (EPP) correlates requests in complex business processes throughout the system landscape.&lt;BR /&gt;
The root context ID identifies the initial context.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;EPP Connection ID&lt;/SPAN&gt;&lt;/I&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 14px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;SPAN data-contrast="none"&gt;The connection ID distinguishes involved remote destinations.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 31%;border-style: solid;text-align: left"&gt;&lt;EM&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;EPP Connection Counter&lt;/SPAN&gt;&lt;/I&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 69.6%;height: 14px;vertical-align: top;border-style: solid;text-align: left"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;The connection counter enumerates multiple calls that reuse a connection.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;CAPTION&gt;&lt;EM&gt;&lt;STRONG&gt;Table 2:&lt;/STRONG&gt; Filter conditions for the display of trace records.&lt;/EM&gt;&lt;/CAPTION&gt;&lt;/TABLE&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;When you execute, the available trace records that meet the filter conditions are retrieved, handled, and displayed in an ALV grid control. The standard trace display (Fig. 4) is a chronologically sorted list of main records, each corresponding to one execution of an ABAP statement. (The processing of the statements in your application’s ABAP source code may involve several contributing operations that are captured as individual, detailed records in a trace. For the list of &lt;EM&gt;Trace Main Records&lt;/EM&gt;, &lt;CODE&gt;ST05&lt;/CODE&gt; attempts to aggregate all these detailed records so that ideally there is a one-to-one correspondence between list entries and implemented ABAP statements. Individual records that cannot be aggregated are collected into dummy main records with the S&lt;EM&gt;tatement&lt;/EM&gt; set to &lt;I&gt;OTHER (&amp;lt;&lt;/I&gt;&lt;I&gt;trace_type&lt;/I&gt;&lt;I&gt;&amp;gt;) &lt;/I&gt;and empty &lt;EM&gt;Start Time&lt;/EM&gt;.) All types of trace records are shown in one common table, using only those fields that are relevant for the respective record's type, and leaving the others empty.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/02/ST05_BasicUse_MainRecords.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;text-align: left"&gt;&lt;STRONG&gt;Figure 4:&lt;/STRONG&gt; In the ALV list of &lt;STRONG&gt;Trace Main Records&lt;/STRONG&gt;, each entry reflects one execution of an ABAP statement calling an external resource, or the processing of an incoming request.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;Table 3 documents the fields that are visible by default.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;TABLE style="height: 447px;width: 100%;border-collapse: collapse;border-style: solid" border="1"&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 10px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Start Time&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 10px;vertical-align: top;border-style: solid"&gt;S&lt;SPAN data-contrast="none"&gt;tart time of the event in the user’s time zone.&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Duration&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Elapsed execution time of the event in microseconds (µs).&lt;BR /&gt;
(Measured by the ABAP work process.)&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;EM&gt;CPU Time&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;CPU time &lt;SPAN data-contrast="none"&gt;in microseconds (µs)&lt;/SPAN&gt; used during the statement's execution.&lt;BR /&gt;
(&lt;SPAN class="TextRun SCXP8895558 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP8895558 BCX0"&gt;Only for SQL trace records on SAP HANA.&lt;/SPAN&gt;&lt;/SPAN&gt;)&lt;BR /&gt;
(Measured by the SAP HANA DB server.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;EM&gt;Memory&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;Maximum memory consumption in kilobytes (kB) during the statement's execution.&lt;BR /&gt;
(&lt;SPAN class="TextRun SCXP8895558 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP8895558 BCX0"&gt;Only for SQL trace records on SAP HANA.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXP8895558 BCX0"&gt;​&lt;/SPAN&gt;)&lt;BR /&gt;
(Measured by the SAP HANA DB server.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Records&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Number of records affected by the event.&lt;BR /&gt;
(SQL, BUF: number of table or view rows;&lt;BR /&gt;
ENQ: number of lock granules)&lt;BR /&gt;
(&lt;SPAN class="TextRun SCXP94104991 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP94104991 BCX0"&gt;Not for RFC, HTTP, APC, and AMC trace records.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXP94104991 BCX0"&gt;​&lt;/SPAN&gt;)&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Program Name&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Name of the ABAP program that called the event.&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Object Name&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Name of the object that was accessed.&lt;BR /&gt;
(SQL, BUF: table or view; ENQ: lock object;&lt;BR /&gt;
RFC: function; HTTP, APC: path; AMC: channel ID)&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Statement&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Edited statement.&lt;BR /&gt;
(SQL: field list and &lt;/SPAN&gt;&lt;SPAN data-contrast="none"&gt;FROM&lt;/SPAN&gt;&lt;SPAN data-contrast="none"&gt; clause removed, variable names replaced by values)&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;DB Cursor&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Number of the cursor used for the operation.&lt;BR /&gt;
(&lt;SPAN class="TextRun SCXP8895558 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP8895558 BCX0"&gt;Only for SQL trace records.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXP8895558 BCX0"&gt;​&lt;/SPAN&gt;)&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;SQL Statement Hash&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Hash value of the SQL statement.&lt;BR /&gt;
(&lt;SPAN class="TextRun SCXP8895558 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP8895558 BCX0"&gt;Only for SQL trace records on SAP HANA.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXP8895558 BCX0"&gt;​&lt;/SPAN&gt;)&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Array&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Maximum number of records that can be transferred from the database to the ABAP work process within one communication package.&lt;BR /&gt;
(&lt;SPAN class="TextRun SCXP8895558 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP8895558 BCX0"&gt;Only for SQL trace records.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXP8895558 BCX0"&gt;​&lt;/SPAN&gt;)&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Connection Name&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Name of the logical database connection (default = R/3).&lt;BR /&gt;
(&lt;SPAN class="TextRun SCXP224852523 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP224852523 BCX0"&gt;Only for SQL trace records.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXP224852523 BCX0"&gt;​&lt;/SPAN&gt;)&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;User Name&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Name of the user who executed the event.&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Client&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Client where the event was executed.&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 190.518px;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;WP Type&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 427.435px;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Type of the work process that executed the event.&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;CAPTION&gt;&lt;EM&gt;&lt;STRONG&gt;Table 3:&lt;/STRONG&gt; Fields in the default layout of the list of trace main records.&lt;/EM&gt;&lt;/CAPTION&gt;&lt;/TABLE&gt;&lt;BR /&gt;
Every trace record contains the abbreviated statement, focussing on the parts with an impact on performance, and the object accessed by the statement. Also available is the calling program, and some details on how the statement was processed. The &lt;EM&gt;Duration&lt;/EM&gt; (in microseconds; μs) or the number of affected table rows (&lt;EM&gt;Records&lt;/EM&gt;) are likely the most relevant values for judging performance. If your system is based on the SAP HANA database, SQL trace records include measurements for the &lt;EM&gt;CPU Time&lt;/EM&gt; and for the &lt;EM&gt;Memory Consumption&lt;/EM&gt;&amp;nbsp;on the database server, and identify the statement with its &lt;EM&gt;SQL Statement Hash&lt;/EM&gt;.&lt;BR /&gt;
&lt;BR /&gt;
The second header line at the top of the list summarizes the visible trace records by showing totals for &lt;I&gt;&lt;SPAN data-contrast="none"&gt;Duration&lt;/SPAN&gt;&lt;/I&gt;, &lt;EM&gt;CPU Time&lt;/EM&gt;, and &lt;I&gt;&lt;SPAN data-contrast="none"&gt;Records,&lt;/SPAN&gt;&lt;/I&gt; and the maximum for &lt;EM&gt;Memory Consumption&lt;/EM&gt;. Note that the total &lt;I&gt;&lt;SPAN data-contrast="none"&gt;Duration&lt;/SPAN&gt;&lt;/I&gt; is not necessarily related to the application's elapsed time. In the example of Fig. 4, the incoming HTTP request triggered SQL statements which were executed during the HTTP request's duration. Thus, the total &lt;I&gt;&lt;SPAN data-contrast="none"&gt;Duration&lt;/SPAN&gt;&lt;/I&gt; may overestimate the elapsed time.&lt;BR /&gt;
&lt;BR /&gt;
Further fields (listed in Table 4) may be shown by customizing the ALV grid control's layout.​&lt;BR /&gt;
&lt;TABLE style="height: 447px;width: 100%;border-collapse: collapse;border-style: solid" border="1"&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 10px;vertical-align: top;width: 30.88%;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Start Date&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.8%;height: 10px;vertical-align: top;border-style: solid"&gt;S&lt;SPAN data-contrast="none"&gt;tart date of the event in the user’s time zone.&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 30.88%;border-style: solid"&gt;&lt;EM&gt;Instance&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.8%;height: 14px;vertical-align: top;border-style: solid"&gt;Application server instance &lt;SPAN data-contrast="none"&gt;where the event was executed.&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 30.88%;border-style: solid"&gt;&lt;EM&gt;Processing Time&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.8%;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;Elapsed execution time of the event in microseconds (µs).&lt;/SPAN&gt;&lt;BR /&gt;
(&lt;SPAN class="TextRun SCXP8895558 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP8895558 BCX0"&gt;Only for SQL trace records on SAP HANA.&lt;/SPAN&gt;&lt;/SPAN&gt;)&lt;BR /&gt;
(Measured by the SAP HANA DB server.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 30.88%;border-style: solid"&gt;&lt;EM&gt;Transaction Code&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.8%;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;SPAN data-contrast="none"&gt;Name of the transaction that triggered the traced activity.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 30.88%;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;DB connection ID&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.8%;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;ID of the logical database connection.&lt;BR /&gt;
(&lt;SPAN class="TextRun SCXP224852523 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP224852523 BCX0"&gt;Only for SQL&amp;nbsp; trace records.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXP224852523 BCX0"&gt;​&lt;/SPAN&gt;)&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="border-style: solid"&gt;&lt;BR /&gt;
&lt;TD style="height: 14px;vertical-align: top;width: 30.88%;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;WP ID&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.8%;height: 14px;vertical-align: top;border-style: solid"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;SPAN data-contrast="none"&gt;Number of the work process that executed the traced activity.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="vertical-align: top;width: 30.88%;border-style: solid;height: 14px"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;Transaction ID&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.8%;vertical-align: top;border-style: solid;height: 14px"&gt;&lt;SPAN data-contrast="none"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;The transaction GUID designates an SAP LUW.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 28px"&gt;&lt;BR /&gt;
&lt;TD style="vertical-align: top;width: 30.88%;border-style: solid;height: 28px"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;EPP Root Context ID&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.8%;vertical-align: top;border-style: solid;height: 28px"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;&lt;SPAN data-contrast="none"&gt;The extended passport (EPP) correlates requests in complex business processes throughout the system landscape.&lt;BR /&gt;
The root context ID identifies the initial context.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="vertical-align: top;width: 30.88%;border-style: solid"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;EPP Connection ID&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.8%;vertical-align: top;border-style: solid"&gt;&lt;SPAN data-contrast="none"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;The connection ID distinguishes involved remote destinations.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 28px"&gt;&lt;BR /&gt;
&lt;TD style="vertical-align: top;width: 30.88%;border-style: solid;height: 28px"&gt;&lt;I&gt;&lt;SPAN data-contrast="none"&gt;EPP Connection Counter&lt;/SPAN&gt;&lt;/I&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.8%;vertical-align: top;border-style: solid;height: 28px"&gt;&lt;SPAN data-contrast="none"&gt;&lt;SPAN class="TextRun SCXP148981702 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP148981702 BCX0"&gt;&lt;SPAN class="TextRun SCXP158498109 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP158498109 BCX0"&gt;&lt;SPAN class="TextRun SCXP61426920 BCX0" lang="EN-US" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXP61426920 BCX0"&gt;The connection counter enumerates multiple calls that reuse a connection.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;CAPTION&gt;&lt;EM&gt;&lt;STRONG&gt;Table 4:&lt;/STRONG&gt; Further fields for the list of trace main records, available on demand by changing the ALV grid control's default layout.&lt;/EM&gt;&lt;/CAPTION&gt;&lt;/TABLE&gt;&lt;BR /&gt;
The list of main records helps you to judge the choreography of executed statements. In particular, it answers the question: Which event was executed when and where? This may allow you to conclude that statements are executed although they do not contribute anything to your application's business logic. These &lt;STRONG&gt;superfluous statements slow down your application, and at the same time waste precious resources&lt;/STRONG&gt;. You must eliminate them. In my follow-up blog post &lt;A href="https://blogs.sap.com/2023/05/17/st05-aggregate-trace-records/" target="_blank" rel="noopener noreferrer"&gt;ST05: Aggregate Trace Records&lt;/A&gt;, I present an easy and reliable method to find these unnecessary statements in a trace and in your application's ABAP source code.&lt;BR /&gt;
For the remaining essential events, you &lt;STRONG&gt;focus on the statements that have a long &lt;EM&gt;Duration&lt;/EM&gt;, affect many &lt;EM&gt;Records&lt;/EM&gt;, or consume a lot of HANA hardware resources (&lt;EM&gt;CPU Time&lt;/EM&gt;, &lt;EM&gt;Memory&lt;/EM&gt;)&lt;/STRONG&gt;. &lt;STRONG&gt;They offer the largest optimization potential&lt;/STRONG&gt;. The sequel blog post quoted above also discusses how to identify statements that would benefit the most from tuning. In my most recent blog post&amp;nbsp;&lt;A href="https://blogs.sap.com/2023/06/30/st05-analyze-individual-trace-records/" target="_blank" rel="noopener noreferrer"&gt;ST05: Analyze Individual Trace Records&lt;/A&gt; I describe their in-depth analysis.&lt;BR /&gt;
&lt;H1 id="toc-hId-833025404"&gt;Summary&lt;/H1&gt;&lt;BR /&gt;
&lt;SPAN style="font-size: 1rem"&gt;Getting started with &lt;CODE&gt;ST05&lt;/CODE&gt; is really easy and takes only a few clicks. Just start the tool, and click button &lt;EM&gt;Activate Trace&lt;/EM&gt;. Then execute the application you want to analyze. When it has finished, return to &lt;CODE&gt;ST05&lt;/CODE&gt; and click button &lt;EM&gt;Deactivate Trace&lt;/EM&gt;. Finally, click &lt;EM&gt;Display Trace&lt;/EM&gt; and execute to evaluate the trace records. The analysis of the trace records will discover hot spots and bottlenecks of your application related to its communications with external resources. The most important caveat is that &lt;STRONG&gt;all steps have to be done on the same application server instance and by the same back-end user&lt;/STRONG&gt;.&lt;/SPAN&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/st05-basic-use/ba-p/13554382"/>
    <published>2023-02-24T12:24:31+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/use-st05-to-analyze-the-communication-of-the-abap-work-process-with/ba-p/13553712</id>
    <title>Use ST05 to Analyze the Communication of the ABAP Work Process with External Resources</title>
    <updated>2023-02-24T12:27:16+01:00</updated>
    <author>
      <name>ManfredMensch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165193</uri>
    </author>
    <content>&lt;P&gt;In my previous blog posts &lt;EM&gt;&lt;A class="" title="Measure your Application's Performance and Resource Consumption: Evaluate Statistics Records with Transaction STATS" href="https://blogs.sap.com/?p=1445441" target="_blank" rel="noopener noreferrer"&gt;Measure your Application's Performance and Resource Consumption: Evaluate Statistics Records with Transaction STATS&lt;/A&gt;&lt;/EM&gt; and &lt;EM&gt;&lt;A class="" title="Use Transaction STATS_FE to Analyze the Performance of your Web Application" href="https://blogs.sap.com/?p=1464978" target="_blank" rel="noopener noreferrer"&gt;Use Transaction STATS_FE to Analyze the Performance of your Web Application&lt;/A&gt;&lt;/EM&gt;, I have put you as a software developer in charge of your business applications' performance. Here, &lt;STRONG&gt;performance encompasses end-to-end response time and scalability&lt;/STRONG&gt;, which is impacted by your application's resource consumption. Users expect short response times and high business data throughput. To meet these non-functional requirements, you need &lt;STRONG&gt;tools to find root causes for poor performance&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;With my transaction STATS_FE, you break down your applications' end-to-end response times into three main contributors: front end, network, and back end. The ABAP back-end portion is covered by the ABAP kernel's main statistics records. You display and evaluate them with my transaction STATS. There, you might discover that an individual task in the back end is too slow or requires too many resources. Further, you might conclude that this is due to communication of the ABAP work process executing your applications' ABAP code with external resources - most prominently the database, but also remote servers accessed via RFC or HTTP calls, or other entities engaged through appropriate interfaces. Beyond this conclusion the back-end statistics records cannot be very helpful. They are a monitoring mechanism and a measurement tool, thus do not contain sufficient detail to identify or analyze root causes.&lt;BR /&gt;&lt;BR /&gt;To &lt;STRONG&gt;pin down bottlenecks&lt;/STRONG&gt; and to &lt;STRONG&gt;derive efficient optimization approaches&lt;/STRONG&gt;, you need &lt;STRONG&gt;a dedicated analysis tool that captures and logs the communication across the boundaries of the ABAP work process&lt;/STRONG&gt;. This is the purpose of the &lt;EM&gt;Performance Trace&lt;/EM&gt; (SAP GUI transaction ST05), which not only registers the communication with external entities via the relevant interfaces, but also enriches the corresponding records with measurement values (e.g., duration, resource consumption, amount of transferred data). ST05 is the ABAP stack's interface trace tool. It captures events during application execution that leave a work process to request data or services from external resources, or that enter a work process to perform services for external callers. The set of the ensuing records is a trace of your applications' outgoing or incoming data transmissions.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;ST05 is a tool for the analysis of individual applications and their single user runtime behaviour.&lt;/STRONG&gt; It investigates applications with respect to the resources they request from outside of the work process, and is also applicable to services provided for remote clients. ST05 is not suitable for load or mass tests.&lt;BR /&gt;&lt;BR /&gt;The&amp;nbsp; information obtained from ST05 helps you to fulfill the expectations of your software's users or operators. It identifies hot spots in an application that may be due to ...&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;… expensive SQL statements&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;… unnecessary accesses to the persistence layer&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;… long running SAP locks (enqueues)&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;… RFC or HTTP issues&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;BR /&gt;In contrast to the statistics records, which are always and autonomously recorded by the ABAP kernel, the ABAP work process' communications are traced only on demand. Otherwise the associated overhead may slow down applications in productive use too much.&lt;BR /&gt;&lt;BR /&gt;As I have already emphasized in my blog post &lt;A class="" title="Measure your Application's Performance and Resource Consumption: Evaluate Statistics Records with Transaction STATS" href="https://blogs.sap.com/?p=1445441" target="_blank" rel="noopener noreferrer"&gt;Measure your Application's Performance and Resource Consumption: Evaluate Statistics Records with Transaction STATS&lt;/A&gt;, the value of your performance analysis depends on the quality of the underlying measurements. You need some &lt;STRONG&gt;preparation to ensure that the captured information accurately and reproducibly reflects the performance of the application&lt;/STRONG&gt;. Only then can you derive reliable conclusions.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;OL&gt;&lt;OL&gt;&lt;LI&gt;Confirm that the test system is configured and customized correctly.&lt;/LI&gt;&lt;LI&gt;Verify that the test system is not under high load from processes running concurrently with your analyses.&lt;/LI&gt;&lt;LI&gt;Carefully define the business scenario to be tested by your application. It must adequately represent the application’s behavior in production.&lt;/LI&gt;&lt;LI&gt;Provide a set of test data that is representative of productive data. Only then will the scenario execution resemble everyday use.&lt;/LI&gt;&lt;LI&gt;Execute the scenario a few times to fill the buffers and caches of all involved components (e.g., DB cache, application server’s table buffer, web browser cache). Without these pre-runs or warm-up runs, your recorded traces will not be reproducible, but will capture one-time or first-use effects like loading data into buffers and caches. This may lead you to incorrect diagnoses, or make it more difficult to identify the real issues. It is then much harder to draw reliable conclusions.&lt;/LI&gt;&lt;/OL&gt;&lt;/OL&gt;&lt;P&gt;&lt;BR /&gt;After this preparation, you &lt;STRONG&gt;activate the trace recording&lt;/STRONG&gt;, then &lt;STRONG&gt;execute the application&lt;/STRONG&gt; (this is the measurement run), and afterwards &lt;STRONG&gt;deactivate the trace recording&lt;/STRONG&gt;. Next &lt;STRONG&gt;display the trace&lt;/STRONG&gt;. The subsequent evaluation of the trace records will identify hot spots and bottlenecks of your application that are caused by the communications and associated data transmissions of the ABAP work process with external resources.&lt;/P&gt;&lt;H1 id="toc-hId-832999240"&gt;List of Blog Posts on ST05&lt;/H1&gt;&lt;P&gt;&lt;BR /&gt;In a sequence of individual posts, I cover the main features of ST05, explain the necessary technical background, and share best practices for efficiently working with the tool.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;OL&gt;&lt;OL&gt;&lt;LI&gt;&lt;A href="https://blogs.sap.com/?p=1689314&amp;amp;preview=true&amp;amp;preview_id=1689314" target="_blank" rel="noopener noreferrer"&gt;Basic Use&lt;/A&gt;&lt;BR /&gt;How do you work with the tool?&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://blogs.sap.com/2023/03/22/st05-technical-background-of-trace-recording-and-analysis/" target="_blank" rel="noopener noreferrer"&gt;Technical Background of Trace Recording and Analysis&lt;/A&gt;&lt;BR /&gt;What is the technology behind ST05 and how does it affect its behaviour?&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://blogs.sap.com/2023/04/28/st05-trace-directory/" target="_blank" rel="noopener noreferrer"&gt;Trace Directory&lt;/A&gt;&lt;BR /&gt;How do you save and recover traces?&lt;/LI&gt;&lt;LI&gt;Advanced Features of ST05&lt;BR /&gt;&lt;BR /&gt;&lt;OL&gt;&lt;OL&gt;&lt;LI&gt;&lt;A href="https://blogs.sap.com/2023/06/30/st05-analyze-individual-trace-records/" target="_blank" rel="noopener noreferrer"&gt;Analyze Individual Trace Records&lt;/A&gt;&lt;BR /&gt;What can you learn about the processing of communication steps?&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://blogs.sap.com/2023/03/08/st05-activate-trace-recording-with-filter/" target="_blank" rel="noopener noreferrer"&gt;Activate Trace Recording with Filter&lt;/A&gt;&lt;BR /&gt;How can you control the trace recording?&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://blogs.sap.com/2023/05/17/st05-aggregate-trace-records/" target="_blank" rel="noopener noreferrer"&gt;Aggregate Trace Records&lt;/A&gt;&lt;BR /&gt;How do you aggregate related trace records to get a better overview?&lt;/LI&gt;&lt;/OL&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A title="Application Programming Interface" href="https://community.sap.com/t5/technology-blogs-by-sap/st05-application-programming-interface/ba-p/13634607" target="_blank"&gt;Application Programming Interface&lt;/A&gt;&lt;BR /&gt;How do you use ST05 capabilities in your own ABAP programs?&lt;/LI&gt;&lt;/OL&gt;&lt;/OL&gt;&lt;P&gt;&lt;BR /&gt;Examples shown in these blog posts were recorded while running the transactional S/4HANA Fiori application F0997 (Audit Journal) from the Finance line of business in an internal test system. The test case displayed the changes for &lt;EM&gt;Company Code&lt;/EM&gt; 1010 and &lt;EM&gt;Fiscal Year&lt;/EM&gt; 2023.&lt;BR /&gt;&lt;BR /&gt;Transaction ST05 is part of SAP_BASIS since decades. I am continuously improving it and in this series of blog posts I am presenting the tool's state for SAP NetWeaver 7.58 as of early 2023. Depending on your system's release, some of the features may not yet be available.&lt;/P&gt;&lt;H1 id="toc-hId-636485735"&gt;References&lt;/H1&gt;&lt;P&gt;&lt;BR /&gt;I have published several articles in SAPinsider which are relevant to measuring and analyzing the performance of ABAP applications:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Manfred Mensch:&lt;BR /&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/documents/2023/06/7ea04aed-7a7e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;Identifying Performance Problems in ABAP Applications: Analyze Statistics Records Using the Performance Monitor (Transaction STATS)&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Manfred Mensch:&lt;STRONG&gt;&lt;BR /&gt;&lt;A href="https://www.sap.com/documents/2023/06/921720ec-7a7e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;Track Down the Root of Performance Problems with Transaction ST05&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Manfred Mensch:&lt;STRONG&gt;&lt;BR /&gt;&lt;A href="https://www.sap.com/documents/2023/06/c2ea4ded-7a7e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;Pinpoint Performance Bottlenecks Using ABAP Profiling: Analyze Your Application with Transaction SAT&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;BR /&gt;The copyright to these three articles is with SAPinsider and they appear here with permission from the publisher.&lt;BR /&gt;&lt;BR /&gt;There are two previous blog posts related to ST05, based on an older SAP_BASIS release, but still useful:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Siegfried Boes:&lt;STRONG&gt;&lt;BR /&gt;&lt;A href="https://blogs.sap.com/2007/09/05/the-sql-trace-st05-quick-and-easy/" target="_blank" rel="noopener noreferrer"&gt;The SQL Trace (ST05) Quick and Easy&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Randolf Eilenberger:&lt;STRONG&gt;&lt;BR /&gt;&lt;A href="https://blogs.sap.com/?p=101848" target="_blank" rel="noopener noreferrer"&gt;Code Inspector Integration into SQL Trace of ST05&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;BR /&gt;Refer to my blog posts on transactions STATS and STATS_FE&amp;nbsp;for measuring your application's end-to-end response time and resource consumption:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Manfred Mensch:&lt;BR /&gt;&lt;STRONG&gt;&lt;A class="" title="Use Transaction STATS_FE to Analyze the Performance of your Web Application" href="https://blogs.sap.com/?p=1464978" target="_blank" rel="noopener noreferrer"&gt;Use Transaction STATS_FE to Analyze the Performance of your Web Application&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Manfred Mensch:&lt;STRONG&gt;&lt;BR /&gt;&lt;A class="" title="Measure your Application's Performance and Resource Consumption: Evaluate Statistics Records with Transaction STATS" href="https://blogs.sap.com/?p=1445441" target="_blank" rel="noopener noreferrer"&gt;Measure your Application's Performance and Resource Consumption: Evaluate Statistics Records with Transaction STATS&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/use-st05-to-analyze-the-communication-of-the-abap-work-process-with/ba-p/13553712"/>
    <published>2023-02-24T12:27:16+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/st05-activate-trace-recording-with-filter/ba-p/13560035</id>
    <title>ST05: Activate Trace Recording with Filter</title>
    <updated>2023-03-08T10:22:35+01:00</updated>
    <author>
      <name>ManfredMensch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165193</uri>
    </author>
    <content>This is the second blog post in my series of posts about SAP GUI transaction&amp;nbsp;&lt;CODE&gt;ST05&lt;/CODE&gt;. Here, I explain that you can control and customize the trace recording with filter conditions, and how this is useful for analyzing your applications’ performance. With a small case study I show this feature in action.&lt;BR /&gt;
&lt;BR /&gt;
In the introduction to the sequence of blog posts (&lt;A href="https://blogs.sap.com/?p=1688270" target="_blank" rel="noopener noreferrer"&gt;Use ST05 to Analyze the Communication of the ABAP Work Process with External Resources&lt;/A&gt;) I have referred to my transactions &lt;CODE&gt;STATS&lt;/CODE&gt;&amp;nbsp;and&amp;nbsp;&lt;CODE&gt;STATS_FE&lt;/CODE&gt; as measurement tools, which help you to find performance hot spots in your applications. To identify root causes of poor performance (long response time or high resource consumption), you need dedicated analysis tools. With respect to communications and data transfers between the ABAP work process and external components, &lt;CODE&gt;ST05&lt;/CODE&gt; is the analysis tool of choice. I have described the straightforward way of working with it in my previous post &lt;A href="https://blogs.sap.com/?p=1689314&amp;amp;preview=true&amp;amp;preview_id=1689314" target="_blank" rel="noopener noreferrer"&gt;ST05: Basic Use&lt;/A&gt;. Be sure to read it for a quick review.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;The simplest way to switch on tracing involves the selection of the desired trace types, followed by a click on &lt;EM&gt;Activate Trace&lt;/EM&gt;. Then trace recording is active only on the local ABAP application server instance and exclusively for the current user.&amp;nbsp;&lt;SPAN class="TextRun BCX0 SCXP20094057" lang="EN-US" lang="EN-US" data-usefontface="false" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun BCX0 SCXP20094057"&gt;Activities on other instances or by other users are not captured.&lt;BR /&gt;
Now imagine that you want to support co-workers with the performance analysis of their business application. Maybe they do not have authorization to run &lt;CODE&gt;ST05&lt;/CODE&gt;, while you are not allowed to work with the application. Or you do not know ahead of time which of the system's application server instances will handle the back-end portion of the application—the system’s load balancer may dispatch incoming requests to any instance. Or you need to investigate a batch job that runs at night time, when you do not want to manually switch on or off the trace recording. Furthermore, within a trace type, i.e., for a particular communication interface of the ABAP work process, you might be interested only in a subset of all associated communication events. All these situations are not covered by the ordinary &lt;EM&gt;Activate Trace&lt;/EM&gt;. This is where the option to&amp;nbsp;&lt;EM&gt;Activate Trace with Filter&lt;/EM&gt;&amp;nbsp;(Fig. 1) comes in.&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/ST05_ActivateFilter.png" /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;EM&gt;&lt;STRONG&gt;Figure 1:&lt;/STRONG&gt;&amp;nbsp;Clicking button&amp;nbsp;&lt;STRONG&gt;Activate Trace with Filter&amp;nbsp;&lt;/STRONG&gt;opens a&amp;nbsp; popup with &lt;STRONG&gt;Conditions for Trace Recording&lt;/STRONG&gt;. There you can override some of&amp;nbsp;&lt;CODE&gt;ST05&lt;/CODE&gt;’s defaults, or specify restrictions on the communication events to be captured. &lt;STRONG&gt;Scheduling&lt;/STRONG&gt; the trace recording is convenient for the analysis of batch jobs that run while you are not in the office.&lt;BR /&gt;
The running text explains all options in detail.&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;With an entry in field&amp;nbsp;&lt;EM&gt;User Name&lt;/EM&gt;&amp;nbsp;you can &lt;STRONG&gt;activate tracing for another user&lt;/STRONG&gt;. Then her or his activities are recorded instead of yours. User name patterns with the asterisk&amp;nbsp;&lt;CODE&gt;*&lt;/CODE&gt;&amp;nbsp;as a terminating wildcard character are supported.&lt;/P&gt;&lt;BR /&gt;
To &lt;STRONG&gt;trace events originating from or handled by a non-local application server instance&lt;/STRONG&gt; within the current system, expand the dropdown list box for the&amp;nbsp;&lt;EM&gt;Instance&lt;/EM&gt; field to see all active instances. The local instance is explicitly indicated. If you know the relevant instance, select it. Otherwise, to activate tracing on all instances, choose &amp;lt;&lt;CODE&gt;ALL&lt;/CODE&gt;&amp;gt;. This tries to switch on tracing, but if it is already active for another user on an instance, the attempt fails for this instance. A popup will inform about this failure. The brute force option &amp;lt;&lt;CODE&gt;ENFORCE&lt;/CODE&gt;&amp;gt; unconditionally terminates any tracing in progress on all instances and then activates trace recording per your conditions. Use this option sparingly and carefully. It is convenient and safe for you, but may be disturbing and annoying for your colleagues.&lt;BR /&gt;
&lt;BR /&gt;
With the group of fields&amp;nbsp;&lt;EM&gt;Transaction Name&lt;/EM&gt;,&amp;nbsp;&lt;EM&gt;Program Name&lt;/EM&gt;,&amp;nbsp;&lt;EM&gt;RFC Function Name&lt;/EM&gt;, or&amp;nbsp;&lt;EM&gt;URL&lt;/EM&gt;, you can &lt;STRONG&gt;limit the captured events to those that are triggered while executing a particular application&lt;/STRONG&gt;. Note that this application must be at the very top of the call hierarchy. Therefore, a value can be given for at most one of the fields. Patterns with the asterisk &lt;CODE&gt;*&lt;/CODE&gt; as a terminating wildcard are allowed.&lt;BR /&gt;
&lt;BR /&gt;
Occasionally, an application (most often a batch job) may occupy a work process for a very long time. With transaction &lt;CODE&gt;SM50&lt;/CODE&gt; you can determine the work process’ number and then enter it into the &lt;EM&gt;Process Number&lt;/EM&gt; field of the filter conditions popup. Thereby, you &lt;STRONG&gt;confine the trace recording to events related to the given ABAP work process&lt;/STRONG&gt;. The resulting trace may identify the reason for the long duration. There is one caveat: A long running database operation that started before the trace was switched on will not trigger the creation of an associated trace record.&lt;BR /&gt;
(To the best of my knowledge, the value of this filter criterion is rather limited, and it is not used very often. Please add a comment to this blog post if you know of an important use case.)&lt;BR /&gt;
&lt;BR /&gt;
For an SQL trace, you can &lt;STRONG&gt;restrict the recording of SQL statements to those that work on certain database tables&lt;/STRONG&gt; (or database views, including CDS views). You may define up to 5 tables to be included. Similarly, you can exclude up to 5 database tables. Statements accessing these excluded tables will then not be recorded. For both options, you may filter on groups of tables by terminating entries in columns &lt;EM&gt;Include&lt;/EM&gt;&amp;nbsp;or&amp;nbsp;&lt;EM&gt;Exclude&lt;/EM&gt;&amp;nbsp;with an asterisk&amp;nbsp;&lt;CODE&gt;*&lt;/CODE&gt;. For implemented Open SQL &lt;CODE&gt;JOIN&lt;/CODE&gt;s, the table name filter applies to the first of the &lt;CODE&gt;JOIN&lt;/CODE&gt;ed database tables. If a database table matches entries in both columns, &lt;EM&gt;Include&lt;/EM&gt;&amp;nbsp;and&amp;nbsp;&lt;EM&gt;Exclude&lt;/EM&gt;, SQL statements against this table will not be recorded.&lt;BR /&gt;
If you specify a table in the &lt;EM&gt;Include &lt;/EM&gt;column, but also want to trace all statements that do not directly affect an individual table (e.g., &lt;CODE&gt;COMMIT&lt;/CODE&gt;s, &lt;CODE&gt;ROLLBACK&lt;/CODE&gt;s, &lt;CODE&gt;SET SESSION VARIABLE&lt;/CODE&gt;, &lt;CODE&gt;SET CLIENT INFO&lt;/CODE&gt;), you must mark the check box &lt;EM&gt;Include Statements with Empty Table Names&lt;/EM&gt;.&lt;BR /&gt;
You may identify tables to be included with transaction &lt;SPAN class="TextRun BCX0 SCXP20094057" lang="EN-US" lang="EN-US" data-usefontface="false" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun BCX0 SCXP20094057"&gt;&lt;CODE&gt;STATS&lt;/CODE&gt;(cf. my blog post &lt;A href="https://blogs.sap.com/2021/12/23/measure-your-applications-performance-and-resource-consumption-evaluate-statistics-records-with-transaction-stats/" target="_blank" rel="noopener noreferrer"&gt;Measure your Application’s Performance and Resource Consumption: Evaluate Statistics Records with Transaction STATS&lt;/A&gt;)&lt;/SPAN&gt;&lt;/SPAN&gt;: The &lt;EM&gt;Top N Table Accesses&lt;/EM&gt; sub record in the &lt;EM&gt;DB&lt;/EM&gt; area shows the top N most expensive tables. You may also decide to focus on a table with central importance for your line of business, so that you get an overview and deeper understanding of where or how this table is used. Based on this knowledge, you can derive approaches for optimizing the accesses to this table.&lt;BR /&gt;
Excluding certain tables from trace recording may be helpful if your application triggers many statements against these tables and you have already verified and confirmed that they are all necessary and processed in the best possible way. Then the corresponding trace records would only clutter up your trace, without adding any useful information. Even worse, they increase the risk that the available trace files get filled up to their capacity and then are successively overwritten, thereby evicting potentially important records. (Refer to my blog post&amp;nbsp;&lt;A href="https://blogs.sap.com/2023/03/22/st05-technical-background-of-trace-recording-and-analysis/" target="_blank" rel="noopener noreferrer"&gt;ST05: Technical Background of Trace Recording and Analysis&lt;/A&gt; for a detailed description and explanation of the underlying mechanism.)&lt;BR /&gt;
Make sure that you do not by mistake exclude a table that your application accesses via potentially expensive statements.&lt;BR /&gt;
&lt;BR /&gt;
Imagine that you need to &lt;STRONG&gt;investigate the communications triggered by a batch job&lt;/STRONG&gt;. You know its scheduled start time and have an idea about its expected duration. If the job starts or ends well outside of your work time, you can use &lt;CODE&gt;ST05&lt;/CODE&gt;’s &lt;EM&gt;Scheduling&lt;/EM&gt; capability. Mark the check box &lt;EM&gt;Schedule Trace Recording&lt;/EM&gt;, specify the relevant &lt;EM&gt;Start Date&lt;/EM&gt; and &lt;EM&gt;Start Time&lt;/EM&gt; as well as &lt;EM&gt;End Date&lt;/EM&gt; and &lt;EM&gt;End Time&lt;/EM&gt;. This schedules and releases jobs named &lt;CODE&gt;ST05_Trace_On&lt;/CODE&gt; and &lt;CODE&gt;ST05_Trace_Off&lt;/CODE&gt;, which respectively activate and deactivate tracing on the appropriate dates and times. &lt;EM&gt;Start Date&lt;/EM&gt; and &lt;EM&gt;Start Time&lt;/EM&gt; should be slightly earlier than the beginning of the batch job you want to analyze, and &lt;EM&gt;End Date&lt;/EM&gt; and &lt;EM&gt;End Time &lt;/EM&gt;should be a little later than its projected end. Only then will the trace recording be active for the job's entire duration so that the resulting trace can cover all relevant events.&lt;BR /&gt;
If you cannot analyze the trace shortly after it was recorded, other subsequent tracing activities may overwrite it from its beginning. To protect against this, mark the check box &lt;EM&gt;Save Trace in DB&lt;/EM&gt; and provide a &lt;EM&gt;Description&lt;/EM&gt;. This will add a second step to job &lt;CODE&gt;ST05_Trace_Off&lt;/CODE&gt;, which processes all available trace records in the prescribed time frame and persists them with your description into the trace directory. There they will expire only after 120 days, giving you plenty of time for your evaluation. Please note that an active trace recording may overwrite its own beginning. The danger&amp;nbsp; for this increases with the time during which tracing is switched on. Option &lt;EM&gt;Save Trace in DB &lt;/EM&gt;cannot prevent this. It will nevertheless store the remaining trace records into the trace directory so that you can work at least with those that are still available, and do not lose even more records to other tracing activities. Of course, the previously explained approach to limit traced SQL statements to those that do or do not access specified database tables is very efficient in reducing the risk that a scheduled trace overwrites its own leading records.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;Once you have defined your filter conditions, switch on trace recording by pressing the &lt;EM&gt;Enter&lt;/EM&gt; key. The &lt;EM&gt;Trace State&lt;/EM&gt; area on &lt;CODE&gt;ST05&lt;/CODE&gt;’s main screen will then indicate that recording has been activated with filter. To review the current settings, select &lt;EM&gt;Display Filter for Trace Recording&lt;/EM&gt; from the &lt;EM&gt;Edit&lt;/EM&gt; menu (Fig. 2). If your only restriction affects the &lt;EM&gt;User Name&lt;/EM&gt;, &lt;CODE&gt;ST05&lt;/CODE&gt; does not consider this a genuine filtered activation, but of course still respects it, and already displays it in the &lt;EM&gt;Trace State&lt;/EM&gt;.&lt;BR /&gt;
The &lt;EM&gt;User Name&lt;/EM&gt; must not be changed while recording a trace. The &lt;EM&gt;Transaction Name&lt;/EM&gt;,&amp;nbsp;&lt;EM&gt;Program Name&lt;/EM&gt;,&amp;nbsp;&lt;EM&gt;RFC Function Name&lt;/EM&gt;, or&amp;nbsp;&lt;EM&gt;URL&lt;/EM&gt; to be traced, as well as the list of tables to be &lt;EM&gt;Include&lt;/EM&gt;d or &lt;EM&gt;Exclude&lt;/EM&gt;d, can be modified while tracing.&lt;BR /&gt;
If you &lt;EM&gt;Schedule Trace Recording&lt;/EM&gt;, a message in the SAP GUI’s status bar indicates the result. On success the corresponding batch jobs show up in the job overview of transaction &lt;CODE&gt;SM37&lt;/CODE&gt;.&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/ST05_ActivateFilter_Display-1.png" /&gt;&lt;EM&gt;&lt;STRONG&gt;Figure 2:&lt;/STRONG&gt; Review the &lt;STRONG&gt;Conditions for Trace Recording&lt;/STRONG&gt;, either in the &lt;STRONG&gt;Trace State&lt;/STRONG&gt; area on &lt;CODE&gt;ST05&lt;/CODE&gt;'s main screen, or in full detail via a dedicated popup.&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;When you have switched on trace recording on all application server instances, make sure that you click button &lt;EM&gt;Deactivate Trace on All Instances&lt;/EM&gt; to switch it off. Otherwise, it gets deactivated only on the local instance, but keeps going on all remote instances.&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H1 id="toc-hId-833826726"&gt;Example&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;Let's assume that we want to analyze the start of the SAP S/4HANA Fiori application F0997 (&lt;EM&gt;Audit Journal&lt;/EM&gt;) with an automatically applied default filter on &lt;EM&gt;Company Code&lt;/EM&gt; 1010, &lt;EM&gt;Fiscal Year&lt;/EM&gt; 2023, and &lt;EM&gt;Ledger&lt;/EM&gt; 0L. We start the app by selecting it from our favorites in the &lt;SPAN class="ui-provider yc b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr"&gt;&lt;EM&gt;SAP S/4HANA Product Home Page&lt;/EM&gt;, and then immediately go back after the list of journal entries has been displayed. We repeat this back and forth pattern several times to create a reliable set of statistics records.&amp;nbsp;&lt;EM&gt;&lt;BR /&gt;
&lt;/EM&gt;&lt;/SPAN&gt;We begin our investigation with transaction &lt;CODE&gt;STATS_FE&lt;/CODE&gt;(&lt;A href="https://blogs.sap.com/2022/01/27/use-transaction-stats_fe-to-analyze-the-performance-of-your-web-application/" target="_blank" rel="noopener noreferrer"&gt;Use Transaction STATS_FE to Analyze the Performance of your Web Application&lt;/A&gt;) to measure the end-to-end performance of this front-end user interaction and to understand its overall impact on the ABAP back end (Fig. 3). We identify one front-end statistics record as representative for the user's activity. Forward navigation by double click takes us from there to transaction &lt;CODE&gt;STATS&lt;/CODE&gt;, which resolves the user interaction's total effect into individual back-end tasks and their corresponding main statistics records (Fig. 4). In our example scenario, we observe 8 ABAP tasks, triggered by incoming HTTP server requests. One of them clearly dominates the load on the back end, and this is obviously due to database requests . The corresponding &lt;EM&gt;Top N Table Accesses&lt;/EM&gt; sub record in the main statistics record indicates that sequential reads from two database tables account for almost all the time.&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/STATS_FE_AuditJournal-4.png" /&gt;&lt;EM&gt;&lt;STRONG&gt;Figure 3:&lt;/STRONG&gt; Transaction &lt;CODE&gt;STATS_FE&lt;/CODE&gt; displays the front-end statistics records corresponding to user interactions. Fields with a green background characterize the front-end activity. Fields with a gray background contain measurements taken on the browser by the UI framework. The fields with the yellow background (normally shown to the right, here copied into an overlay) show aggregated values of the associated back-end statistics records.&lt;/EM&gt;&lt;BR /&gt;
&lt;EM&gt;The first record corresponds to the initial logon to the &lt;STRONG&gt;SAP S/4HANA Product Home Page.&lt;/STRONG&gt; Then, 11 pairs of records represent calls from there to the &lt;STRONG&gt;Audit Journal&lt;/STRONG&gt; and back. Observe that the first call to the application is significantly slower, presumably because buffers and caches have not been filled. Also note that only multiple repeated executions allow the identification of a failed measurement (crossed out in the screen shot).&lt;/EM&gt;&lt;BR /&gt;
&lt;EM&gt;The red arrows mark the front-end statistics record analyzed in more detail (Fig. 4).&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/ST05_ActivateFilter_CaseStudy_STATS_AuditJournal.png" /&gt;&lt;EM&gt;&lt;STRONG&gt;Figure 4:&lt;/STRONG&gt; A double-click on the front-end statistics record marked by the red arrows in Fig. 3 shows the associated back-end statistics records in transaction &lt;CODE&gt;STATS&lt;/CODE&gt;. This resolves the back-end load triggered by the user interaction into separate tasks. Analyze the critical tasks, i.e., those that are slow or consume many resources. The records' details provide deeper insights and suggest the next steps in a root cause analysis. These details are displayed in a popup by double-click on the back-end statistics record.&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;For this scenario, our investigation so far has used solely the monitoring transactions &lt;CODE&gt;STATS_FE&lt;/CODE&gt; and &lt;CODE&gt;STATS&lt;/CODE&gt; based on the statistics records, which are always available. As a result, we know that one of the five calls to OData service /sap/opu/odata/sap/FAC_AUDIT_JOURNAL_SRV dominates the performance, and that accesses to tables IFIACCDOCJRNL and IFICMPTJRNL are the decisive factors (Fig. 4). To come closer to the root cause, we will use this information, together with knowledge of the back-end user's name, to set &lt;EM&gt;Conditions for Trace Recording&lt;/EM&gt; in &lt;CODE&gt;ST05&lt;/CODE&gt; (Fig. 5).&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/ST05_ActivateFilter_CaseStudy-2.png" /&gt;&lt;EM&gt;&lt;STRONG&gt;Figure 5:&lt;/STRONG&gt; &lt;STRONG&gt;Conditions for Trace Recording&lt;/STRONG&gt; for a focussed investigation of Fiori application F0997 (&lt;STRONG&gt;Audit Journal&lt;/STRONG&gt;), deduced from the monitoring data contained in front-end and back-end statistics records (Fig. 3 and Fig. 4).&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;The resulting trace (Fig. 6) is very much to the point. It contains only the HTTP requests serving the business logic. Those that were triggered by any generic framework did not pass the filter. With respect to SQL statements, exactly those that fetch records from the specified CDS views IFIACCDOCJRNL and IFICMPTJRNL were recorded. From here, we can focus on understanding how and where the statements are implemented, how they are called via various involved frameworks, and most importantly, how the database server has processed them. I cover all this in my blog post &lt;A href="https://blogs.sap.com/2023/06/30/st05-analyze-individual-trace-records/" target="_blank" rel="noopener noreferrer"&gt;ST05: Analyze Individual Trace Records&lt;/A&gt;.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/ST05_MainRecords_CaseStudy.png" /&gt;&lt;EM&gt;&lt;STRONG&gt;Figure 6:&lt;/STRONG&gt; Complete trace of the start of the &lt;STRONG&gt;Audit Journal&lt;/STRONG&gt; Fiori app recorded with the filter conditions shown in Fig. 5. Without filter, the trace for the same user interaction would contain several hundred SQL trace records.&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H1 id="toc-hId-637313221"&gt;Summary&lt;/H1&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun BCX0 SCXP20094057" lang="EN-US" lang="EN-US" data-usefontface="false" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun BCX0 SCXP20094057"&gt;The option to &lt;STRONG&gt;&lt;EM&gt;Activate Trace with Filter &lt;/EM&gt;significantly enhances the basic trace recording capability of &lt;CODE&gt;ST05&lt;/CODE&gt;&lt;/STRONG&gt;&amp;nbsp;to capture the communications and data transfers between the ABAP work process and external components. Without it many performance analysis projects would be much more complicated, and others would even be impossible.&lt;BR /&gt;
The particular choice of filter conditions shall be guided by previous measurements of the application under analysis, e.g., with transactions&amp;nbsp;&lt;CODE&gt;STATS&lt;/CODE&gt;&amp;nbsp;or&amp;nbsp;&lt;CODE&gt;STATS_FE&lt;/CODE&gt; based on the statistics records. They identify the critical areas, and with corresponding filter criteria you limit the trace recording to these parts. This facilitates your subsequent investigation.&lt;BR /&gt;
&lt;/SPAN&gt;&lt;/SPAN&gt;Trace &lt;EM&gt;Scheduling&lt;/EM&gt; is really convenient for the analysis of applications that run at known after-hours times.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/st05-activate-trace-recording-with-filter/ba-p/13560035"/>
    <published>2023-03-08T10:22:35+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/st05-technical-background-of-trace-recording-and-analysis/ba-p/13551465</id>
    <title>ST05: Technical Background of Trace Recording and Analysis</title>
    <updated>2023-03-22T06:07:28+01:00</updated>
    <author>
      <name>ManfredMensch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165193</uri>
    </author>
    <content>This blog post in my series of posts related to SAP GUI transaction &lt;CODE&gt;ST05&lt;/CODE&gt; (introduced in &lt;A href="https://blogs.sap.com/?p=1688270" target="_blank" rel="noopener noreferrer"&gt;Use ST05 to Analyze the Communication of the ABAP Work Process with External Resources&lt;/A&gt;) explains the tool's inner workings and configuration options, and how they affect its behavior. With this knowledge, you can avoid some pitfalls that otherwise would make your performance analyses less convenient or less reliable.&lt;BR /&gt;
My blog post &lt;A href="https://blogs.sap.com/?p=1689314&amp;amp;preview=true&amp;amp;preview_id=1689314" target="_blank" rel="noopener noreferrer"&gt;ST05: Basic Use&lt;/A&gt; describes the straightforward work with this analysis tool so that you can record your applications' communications with external resources across the boundaries of the ABAP work process. This current post does not teach you any new tricks, and you may safely ignore it at first—as long as you remember it exists when you feel that &lt;CODE&gt;ST05&lt;/CODE&gt; misbehaves. Then the tool's technical background as presented here does explain that &lt;CODE&gt;ST05&lt;/CODE&gt; actually works as designed.&lt;BR /&gt;
&lt;H1 id="toc-hId-832936933"&gt;Authorizations&lt;/H1&gt;&lt;BR /&gt;
Transaction &lt;CODE&gt;ST05&lt;/CODE&gt; is protected by authorization object &lt;CODE&gt;S_ADMI_FCD&lt;/CODE&gt;, which checks accesses to various basis functions. It defines a single authorization field, also called &lt;CODE&gt;S_ADMI_FCD&lt;/CODE&gt;, for these system administration functions. The relevant values are&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;B&gt;&lt;CODE&gt;ST0M&lt;/CODE&gt; &lt;/B&gt;&amp;nbsp; Authorization to activate or deactivate trace recording&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;B&gt;&lt;CODE&gt;ST0R&lt;/CODE&gt;&lt;/B&gt;&amp;nbsp; &amp;nbsp;Authorization to analyze traces&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
There are no further checks. In particular, &lt;STRONG&gt;every user with the authorization to switch tracing on or off can deactivate a trace recording switched on by any other user&lt;/STRONG&gt;. Similarly, &lt;STRONG&gt;every user with the authorization to analyze traces may see all available trace records&lt;/STRONG&gt;, independent of who activated their recording, or who triggered the recorded event.&lt;BR /&gt;
&lt;H1 id="toc-hId-636423428"&gt;Trace Recording&lt;/H1&gt;&lt;BR /&gt;
&lt;CODE&gt;ST05&lt;/CODE&gt; really is just a display transaction. The only changes it can trigger are via buttons &lt;EM&gt;Activate Trace &lt;/EM&gt;and &lt;EM&gt;Deactivate Trace&lt;/EM&gt;&amp;nbsp;(and the closely related buttons &lt;EM&gt;Activate Trace with Filter&lt;/EM&gt; and &lt;EM&gt;Deactivate Trace on All Instances&lt;/EM&gt;). These actions modify the so-called &lt;STRONG&gt;SW&lt;/STRONG&gt;itches &lt;STRONG&gt;B&lt;/STRONG&gt;lock (SWB) in the &lt;STRONG&gt;S&lt;/STRONG&gt;hared &lt;STRONG&gt;C&lt;/STRONG&gt;ommon &lt;STRONG&gt;S&lt;/STRONG&gt;ystem &lt;STRONG&gt;A&lt;/STRONG&gt;rea (SCSA), a small shared memory segment accessed by SAP executables (kernel programs). The SWB content determines whether tracing is on or off, which trace types (i.e., communication interfaces) are to be recorded, and what filter conditions shall be applied. The actual capturing of the communication events according to these settings is done by the ABAP kernel.&lt;BR /&gt;
Because the SCSA is shared across the entire application server instance, &lt;STRONG&gt;trace recording does not work concurrently&lt;/STRONG&gt;, i.e., &lt;CODE&gt;ST05&lt;/CODE&gt; cannot capture communication events triggered by distinct users (or by distinct user groups defined with a trailing wildcard &lt;CODE&gt;*&lt;/CODE&gt;).&lt;BR /&gt;
With one SCSA per instance, tracing is instance specific so that at the same time it can be active for one user on one instance, and for another user on another instance (and inactive on other instances). This also demands that the application whose communication requests you want to capture runs on the instance where trace recording was switched on. Simple trace evaluation via the &lt;EM&gt;Display Trace&lt;/EM&gt; button is also instance specific, i.e., only works with trace records previously captured on the same application server instance. Altogether,&lt;STRONG&gt; trace recording, application execution, and trace analysis must all be done on the same application server instance&lt;/STRONG&gt;.&lt;BR /&gt;
&lt;STRONG&gt;Trace recording is always cross-client&lt;/STRONG&gt;. Active tracing captures communication events related to each and every client in the system.&lt;BR /&gt;
&lt;BR /&gt;
When trace recording is active, the kernel saves trace records into dedicated (binary) files on the application server instance's file system. The base name of these files (including the path) is fixed by the value of profile parameter &lt;CODE&gt;rstr/filename&lt;/CODE&gt; (e.g., /usr/sap/YI3/D34/log/TRACE). New trace records are always stored into a file by exactly this name. When it is filled to its capacity (as defined in megabytes by profile parameter &lt;CODE&gt;rstr/max_filesize_MB&lt;/CODE&gt;; default value 16, maximum value 100), the file is renamed by appending a two-digit number between 00 and 99 to the base filename. If a file by that name already exists, it will be discarded. An empty file with the base filename is recreated, and trace recording into this newly created file continues without any gap. The maximum number of trace files (active plus overflow) is defined by profile parameter &lt;CODE&gt;rstr/max_files&lt;/CODE&gt; (default value 10, maximum value 99). If this number of files is exceeded, the oldest file is deleted, and recreated to act as the youngest overflow file. As a consequence of this round-robin approach, &lt;STRONG&gt;old trace records are eventually lost&lt;/STRONG&gt;, and &lt;STRONG&gt;a trace may overwrite its own beginning&lt;/STRONG&gt; if recording is active for too long, or if the traced application triggers a large number of recorded events. Depending on the specified filter conditions for trace recording (cf. my blog post &lt;A class="row-title" href="https://blogs.sap.com/2023/03/08/st05-activate-trace-recording-with-filter/" aria-label="“ST05: Activate Trace Recording with Filter” (Edit)" target="_blank" rel="noopener noreferrer"&gt;ST05: Activate Trace Recording with Filter&lt;/A&gt;), on the traced load on the application server instance, and on the configured number and size of trace files, this may happen within just a few minutes.&lt;BR /&gt;
&lt;BR /&gt;
To minimize the impact of trace recording on the instance's performance, the records are not appended immediately and individually to the trace file, but first cached in an internal memory buffer within the ABAP work process. This buffer's size (in kilobytes) is given by profile parameter &lt;SPAN class="ph sap-technical-name sap-technical-name"&gt;&lt;CODE&gt;rstr/buffer_size_kB&lt;/CODE&gt; (default value 500)&lt;/SPAN&gt;. If the size of a single statement (including its variables’ values) exceeds this limit, it will be truncated.&lt;BR /&gt;
&lt;BR /&gt;
The method used for trace recording, as described above, implies that on the technical level there are only individual trace records, stored one after the other. The concept of a trace as a set of records that belong together has no technical realization. Of course it is still a useful mental notion when you work with &lt;CODE&gt;ST05&lt;/CODE&gt; to analyze your application's communication events.&lt;BR /&gt;
&lt;BR /&gt;
Based on benchmark runs, the average size of a trace record is less than 1kB and the overhead for server response time, as well as ABAP CPU time, is less than 3%.&lt;BR /&gt;
&lt;H1 id="toc-hId-439909923"&gt;Additional Trace Types&lt;/H1&gt;&lt;BR /&gt;
The SWB in the SCSA supports more trace types than are exposed by &lt;CODE&gt;ST05&lt;/CODE&gt;. The corresponding interfaces deal with authorization checks done by your applications, or with low-level calls to the kernel's C functions or C modules. You can control and analyze these trace types in transaction &lt;CODE&gt;ST01&lt;/CODE&gt;, together with the others, which are more frequently used and therefore accessible in &lt;CODE&gt;ST05&lt;/CODE&gt;.&lt;BR /&gt;
The inability to trace concurrently also extends to these &lt;CODE&gt;ST01&lt;/CODE&gt;-only trace types. Thus, in rare cases your attempt to record a trace with &lt;CODE&gt;ST05&lt;/CODE&gt; may fail although the &lt;EM&gt;Trace State&lt;/EM&gt; area on its start screen is empty. A popup will then explain the situation with an information message: &lt;EM&gt;At least one trace type was already activated for user &amp;lt;NN&amp;gt;. (This may be an ST01 trace.) The trace is not activated.&lt;/EM&gt; You may want to discuss the situation with the given user.&lt;BR /&gt;
&lt;H1 id="toc-hId-243396418"&gt;Stack Trace&lt;/H1&gt;&lt;BR /&gt;
As I have described in my blog post&amp;nbsp;&lt;A href="https://blogs.sap.com/2023/02/24/st05-basic-use/" target="_blank" rel="noopener noreferrer"&gt;ST05: Basic Use&lt;/A&gt;, in the &lt;EM&gt;Configure Trace&lt;/EM&gt; area on &lt;CODE&gt;ST05&lt;/CODE&gt;'s start screen you can request &amp;nbsp;that relevant communication activities shall be recorded together with their triggering ABAP call hierarchy (&lt;EM&gt;Stack Trace&lt;/EM&gt;&amp;nbsp;=&amp;nbsp;&lt;CODE&gt;On&lt;/CODE&gt;). With the setting &lt;EM&gt;Stack Trace&lt;/EM&gt;&amp;nbsp;=&amp;nbsp;&lt;CODE&gt;Off&lt;/CODE&gt; , which is the default in customer systems, only the immediate caller will be recorded.&lt;BR /&gt;
The recording of the stack trace uses a delta strategy. Each trace record stores only those parts of the corresponding event's ABAP call stack that have not yet been captured in previous records. The correct and complete ABAP call stack is assembled only at display time, i.e., on demand. This approach minimizes the recording overhead for including the stack trace, and—equally important—the size of the trace records does not grow too much so that precious space in the trace files is saved and available for further trace records. This technique comes with a disadvantage: If you apply a filter to the trace records at display time, parts of the call hierarchy may not pass the filter. Then the ABAP call stack cannot be reassembled. &lt;CODE&gt;ST05&lt;/CODE&gt; detects this situation and indicates it with a warning popup: &lt;EM&gt;Cannot fully display ABAP call hierarchy for statement of selected trace record&lt;/EM&gt;. To avoid this type of problem, do not filter records when you display a trace taken with &lt;EM&gt;Stack Trace&lt;/EM&gt;&amp;nbsp;=&amp;nbsp;&lt;CODE&gt;On&lt;/CODE&gt;. Prefer to set a filter already while tracing, which saves even more space in the trace files.&lt;BR /&gt;
&lt;BR /&gt;
Capturing call stack information takes ~30µs per trace record, and increases the record size on average by ~50%. Thus trace recording with &lt;EM&gt;Stack Trace&lt;/EM&gt;&amp;nbsp;=&amp;nbsp;&lt;CODE&gt;On&lt;/CODE&gt; increases the danger that a trace overwrites its own beginning.&lt;BR /&gt;
&lt;H1 id="toc-hId-46882913"&gt;Profile Parameters&lt;/H1&gt;&lt;BR /&gt;
Table 1 summarizes the profile parameters that govern how the trace recording works.&lt;BR /&gt;
&lt;TABLE class="alignleft" style="height: 280px;width: 100%;border-collapse: collapse" border="1" cellspacing="0" cellpadding="0"&gt;&lt;CAPTION&gt;&lt;STRONG&gt;Table 1&lt;/STRONG&gt;: Profile parameters to control trace recording.&lt;/CAPTION&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR&gt;&lt;BR /&gt;
&lt;TD style="width: 26%"&gt;&lt;STRONG&gt;Name&lt;/STRONG&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 44.00%"&gt;&lt;STRONG&gt;Explanation&lt;/STRONG&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 15.00%"&gt;&lt;STRONG&gt;Default Value&lt;/STRONG&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 15.00%"&gt;&lt;STRONG&gt;Maximum Value&lt;/STRONG&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 26%;height: 14px"&gt;&lt;CODE&gt;rstr/accept_remote_trace&lt;/CODE&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 41.78%;height: 14px"&gt;Accept trace switches from remote client?&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 15.06%"&gt;FALSE&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 17.16%"&gt;N/A&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 26%;height: 14px"&gt;&lt;CODE&gt;rstr/auth_delim_tab&lt;/CODE&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 41.78%;height: 14px"&gt;Use tabulator (instead of '&amp;amp;') as separator in authorization trace&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 15.06%"&gt;TRUE&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 17.16%"&gt;N/A&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 26%;height: 14px"&gt;&lt;CODE&gt;rstr/buffer_size_kB&lt;/CODE&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 41.78%;height: 14px"&gt;Size of trace buffers&lt;BR /&gt;
(one buffer per work process)&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 15.06%"&gt;500&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 17.16%"&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 26%;height: 14px"&gt;&lt;CODE&gt;rstr/filename&lt;/CODE&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 41.78%;height: 14px"&gt;Base name of the trace files&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 15.06%"&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 17.16%"&gt;N/A&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 26%;height: 14px"&gt;&lt;CODE&gt;rstr/max_files&lt;/CODE&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 41.78%;height: 14px"&gt;Maximum number of trace files&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 15.06%"&gt;10&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 17.16%"&gt;99&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 26%;height: 14px"&gt;&lt;CODE&gt;rstr/max_filesize_MB&lt;/CODE&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 41.78%;height: 14px"&gt;Maximum size of one trace file&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 15.06%"&gt;20&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 17.16%"&gt;100&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 26%;height: 14px"&gt;&lt;CODE&gt;rstr/send_global_trace&lt;/CODE&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 41.78%;height: 14px"&gt;Send global trace switches (together with user-specific settings) to remote server?&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 15.06%"&gt;FALSE&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 17.16%"&gt;N/A&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;/TABLE&gt;&lt;BR /&gt;
&lt;H1 id="toc-hId--149630592"&gt;References&lt;/H1&gt;&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/12715" target="_blank" rel="noopener noreferrer"&gt;SAP note 12715 (&lt;EM&gt;Collective note: problems with SCSA&lt;/EM&gt;)&lt;/A&gt; covers potential issues with the SCSA.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/st05-technical-background-of-trace-recording-and-analysis/ba-p/13551465"/>
    <published>2023-03-22T06:07:28+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/st05-trace-directory/ba-p/13558057</id>
    <title>ST05: Trace Directory</title>
    <updated>2023-04-28T06:59:16+02:00</updated>
    <author>
      <name>ManfredMensch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165193</uri>
    </author>
    <content>In this blog post of my series&amp;nbsp;&lt;A href="https://blogs.sap.com/?p=1688270" target="_blank" rel="noopener noreferrer"&gt;Use ST05 to Analyze the Communication of the ABAP Work Process with External Resources&lt;/A&gt;, I explain how you can&amp;nbsp;&lt;STRONG&gt;store traces of your applications' communication events&lt;/STRONG&gt; as long as required. Beside giving you more time for in-depth analyses, &lt;STRONG&gt;stored traces pave the way to completely new types of investigations&lt;/STRONG&gt;. Examples are:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Check the temporal evolution of the applications' use of external resources (before-after comparisons).&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Investigate the impact of user input or data volume on the applications' performance or scalability.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Compare the applications' behavior between systems.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Share traces with co-workers who do not have access to the system where the application was executed.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
This blog post assumes previously recorded traces. See the descriptions in my posts &lt;A href="https://blogs.sap.com/2023/02/24/st05-basic-use/" target="_blank" rel="noopener noreferrer"&gt;ST05: Basic Use&lt;/A&gt; and&amp;nbsp;&lt;A href="https://blogs.sap.com/2023/03/08/st05-activate-trace-recording-with-filter/" target="_blank" rel="noopener noreferrer"&gt;ST05: Activate Trace Recording with Filter&lt;/A&gt; to refresh your trace recording skills.&lt;BR /&gt;
&lt;BR /&gt;
Some of your traces may be more important for you than other traces. But for &lt;CODE&gt;ST05&lt;/CODE&gt;, they are all the same and subject to the file system storage mechanism that cycles through the configured number of trace files. Due to this round-robin retention approach, even your most important trace is eventually lost—and this can happen before you have completed your analysis of this trace. For a more complete explanation of the process, please refer to my blog post &lt;A href="https://blogs.sap.com/2023/03/22/st05-technical-background-of-trace-recording-and-analysis/" target="_blank" rel="noopener noreferrer"&gt;ST05: Technical Background of Trace Recording and Analysis&lt;/A&gt;. It covers the trace recording in great detail, and gives a comprehensive description of the underlying mechanism. The trace directory integrated into &lt;CODE&gt;ST05&lt;/CODE&gt; provides a solution by persisting traces into the database.&lt;BR /&gt;
&lt;H1 id="toc-hId-833141597"&gt;Save a Trace into the Trace Directory&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;Let's begin with the assumption that you have just recorded a trace. On the &lt;CODE&gt;ST05&lt;/CODE&gt; start screen, click button &lt;EM&gt;Display Trace&lt;/EM&gt; to go to the &lt;EM&gt;Filter Conditions for Trace Records &lt;/EM&gt;(Fig. 1, left panel). Specify criteria that support your intended analysis. Then, click button &lt;EM&gt;Save Trace in Database &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconSave.png" height="18" width="21" /&gt;&lt;/EM&gt;. This will immediately save the trace records without displaying them.&lt;BR /&gt;
Alternatively and preferably, take a first quick look at the trace to convince yourself that it is complete and representative for your application's typical execution. Only then can it be a reliable foundation for detailed and conclusive investigations. Next, trigger &lt;EM&gt;Save Trace in Database&lt;/EM&gt; via the appropriate button &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconSave-1.png" height="18" width="21" /&gt; above the ALV grid control displaying the trace records (Fig. 1, right panel).&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/ST05_TraceDirectory_SaveDB.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 1:&lt;/STRONG&gt; Saving trace records into the trace directory on the database can be done from the &lt;STRONG&gt;Filter Conditions for Trace Records&lt;/STRONG&gt; (left panel) or from the list of &lt;STRONG&gt;Trace Main Records&lt;/STRONG&gt; displayed in an ALV grid (right panel). In both cases, a popup (inset) asks for a &lt;STRONG&gt;Short Description of Trace&lt;/STRONG&gt; to identify the resulting trace directory entry.&lt;/P&gt;&lt;BR /&gt;
Either way, a popup prompts you to give a &lt;EM&gt;Short Description of Trace&lt;/EM&gt; (Fig. 1, inset) so that later you can reliably find your trace in the trace directory.&lt;BR /&gt;
When you continue from this popup, the display formats of the trace records (as created on the fly by &lt;CODE&gt;ST05&lt;/CODE&gt; from the raw data in the trace files on the application server instance's file system) are stored in the database. Any restrictions you may have defined for the trace records in the &lt;EM&gt;Filter Conditions for Trace Records&lt;/EM&gt; or in the ALV's filter are respected: Only those trace records that match your selection criteria are stored in the database.&lt;BR /&gt;
&lt;BR /&gt;
Traces that you save into the trace directory are given an &lt;EM&gt;Expiry Date&lt;/EM&gt;, which by default is 120 days in the future. After this date they will be deleted automatically from the database. This mechanism prevents excessive growth of the underlying database table's size due to old and most likely outdated, therefore useless, traces.&lt;BR /&gt;
&lt;H1 id="toc-hId-636628092"&gt;Display the Trace Directory&lt;/H1&gt;&lt;BR /&gt;
To navigate to the trace directory, click button &lt;EM&gt;Display Trace Directory&lt;/EM&gt; on &lt;CODE&gt;ST05&lt;/CODE&gt;'s start screen. This takes you to the &lt;EM&gt;Directory of Performance Traces&lt;/EM&gt; (Fig. 2). In its two areas at the top, you can select from predefined filter conditions, or provide your own terms for the stored traces that you want to work with. The bottom panel shows the list of matching traces in an ALV grid control. By default, you see the traces you have created on the current day.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/ST05_TraceDirectory_List-1.png" /&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 2:&lt;/STRONG&gt; The &lt;STRONG&gt;Directory of Performance Traces&lt;/STRONG&gt; is subdivided into three areas. In the upper two panels, &lt;STRONG&gt;Trace Selection&lt;/STRONG&gt; and &lt;STRONG&gt;Time Period&lt;/STRONG&gt;, you define conditions on the stored traces you want to list. The table in the lower panel then consists of the relevant trace directory entries. The icon at the start of each row distinguishes between entries that contain just metadata pointing to traces only available in the application server instance's file system (indicated by the icon depicting a binary file), and entries where the trace records are saved in the database (represented by the DB-like icon).&lt;BR /&gt;
Here the table shows two sets of five traces each for consecutive calls to the &lt;STRONG&gt;Audit Journal&lt;/STRONG&gt; Fiori application. For the older set, the metadata-only entries are already deleted because the trace records are no longer in the file system. The newer set still includes the metadata-only records next to their counterparts with the complete traces persisted in the database.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;TABLE style="width: 100%;border-collapse: collapse" border="1"&gt;&lt;CAPTION&gt;&lt;STRONG&gt;Table 1:&lt;/STRONG&gt; Fields in the list of traces in the trace directory.&lt;/CAPTION&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 24.4%;height: 14px"&gt;&lt;EM&gt;Client&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 75.6%;height: 14px"&gt;Client where directory entry was created.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 24.4%;height: 14px"&gt;&lt;EM&gt;User&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 75.6%;height: 14px"&gt;User who saved trace.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 24.4%;height: 14px"&gt;&lt;EM&gt;Instance Name&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 75.6%;height: 14px"&gt;Application server where trace was created.&lt;BR /&gt;
(Always empty for traces stored in database.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 24.4%;height: 14px"&gt;&lt;EM&gt;Start Date&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 75.6%;height: 14px"&gt;Start date of trace period.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 24.4%;height: 14px"&gt;&lt;EM&gt;Start Time&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 75.6%;height: 14px"&gt;Start time of trace period.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 10px"&gt;&lt;BR /&gt;
&lt;TD style="width: 24.4%;height: 10px"&gt;&lt;EM&gt;Expiry Date&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 75.6%;height: 10px"&gt;Date after which trace will be deleted from directory.&lt;BR /&gt;
(Only used for traces stored in database.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 24.4%;height: 14px"&gt;&lt;EM&gt;Description &lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 75.6%;height: 14px"&gt;Description of trace.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;/TABLE&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;The characteristic fields of directory entries are listed in Table 1. An additional leading column in front of &lt;EM&gt;Client&lt;/EM&gt; contains one of two icons to distinguish the type of trace directory entry. The kind described so far is identified by the DB-like icon &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconDB.png" height="18" width="20" /&gt;, indicating that the entire trace with all its records is stored in the database. The other icon &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconBinary.png" height="18" width="20" /&gt; represents a binary file. It is assigned to trace directory entries that keep only metadata (trace types, trace period) in the database. This type of trace directory entry is initiated automatically whenever trace recording is activated (buttons &lt;EM&gt;Activate Trace&lt;/EM&gt; or &lt;EM&gt;Activate Trace with Filter&lt;/EM&gt; on &lt;CODE&gt;ST05&lt;/CODE&gt;'s start screen), and completed when you switch off tracing. The actual trace records are only in the application server instance's file system, where they are subject to the cyclic overwriting described in my blog post &lt;A href="https://blogs.sap.com/2023/03/22/st05-technical-background-of-trace-recording-and-analysis/" target="_blank" rel="noopener noreferrer"&gt;ST05: Technical Background of Trace Recording and Analysis&lt;/A&gt;. When the trace records are overwritten, &lt;CODE&gt;ST05&lt;/CODE&gt; automatically deletes the corresponding metadata trace directory entries. They are a convenience tool: Imagine that you record a trace, and then you have to logout of the system before you can analyze the trace. When you logon again, the load balancer may put you on another application server instance. Then these trace directory entries save you the effort to manually search for your trace on all of the system's application server instances. Instead, it is very easy to find it—provided it has not been overwritten in the meantime: Open the trace directory, find and double-click the entry. &lt;CODE&gt;ST05&lt;/CODE&gt; will go to the adequate application server instance and display the trace there. To enable this cross-instance navigation, these types of trace directory entries have the appropriate value in their &lt;EM&gt;Instance Name&lt;/EM&gt; field. For traces completely stored in the database, this value is not necessary and always empty.&lt;BR /&gt;
The precise semantics of &lt;EM&gt;Start Date&lt;/EM&gt; and &lt;EM&gt;Start Time&lt;/EM&gt; depend on the type of the trace directory entry. For those representing fully persisted traces, they are the values specified on the &lt;EM&gt;Filter Conditions for Trace Records&lt;/EM&gt; screen. For the metadata-only entries, they correspond to the instant of trace activation.&lt;/P&gt;&lt;BR /&gt;
In the &lt;EM&gt;Trace Selection&lt;/EM&gt; area, the default option &lt;EM&gt;My Traces&lt;/EM&gt; restricts the list of traces to those trace directory entries that you have created. Optionally, you may decide to see traces of any user, or you select traces based on their owner (&lt;EM&gt;User&lt;/EM&gt;), their &lt;EM&gt;Description&lt;/EM&gt;, or their &lt;EM&gt;Expiry Date&lt;/EM&gt;&amp;nbsp;(&lt;EM&gt;Deleted Before&lt;/EM&gt;). The selection criteria for &lt;EM&gt;User&lt;/EM&gt; and &lt;EM&gt;Description&lt;/EM&gt; support patterns with the wildcard characters &lt;CODE&gt;+&lt;/CODE&gt; (single character) or &lt;CODE&gt;*&lt;/CODE&gt; (any character string). The &lt;EM&gt;Description&lt;/EM&gt; is case sensitive. When you mark the checkbox &lt;EM&gt;All Clients&lt;/EM&gt;, traces saved from every client in the system will be shown. Please note that the &lt;EM&gt;User&lt;/EM&gt; is the one who has created the trace directory entry. This may be different from the user who has recorded the trace, or from the user whose activities were recorded. A similar remark applies to the &lt;EM&gt;Client&lt;/EM&gt; field.&lt;BR /&gt;
In the &lt;EM&gt;Time Period&lt;/EM&gt; panel, you filter traces by their &lt;EM&gt;Start Date&lt;/EM&gt;. The default is the current day (&lt;EM&gt;Today&lt;/EM&gt;). Other restrictions are for traces from the current week (&lt;EM&gt;This Week&lt;/EM&gt;) or by a &lt;EM&gt;Time Period&lt;/EM&gt;. The option &lt;EM&gt;No Limit&lt;/EM&gt; covers all traces, independent of their &lt;EM&gt;Start Date&lt;/EM&gt;.&lt;BR /&gt;
The conditions from the two panels are combined by logical &lt;CODE&gt;AND&lt;/CODE&gt;.&lt;BR /&gt;
&lt;H1 id="toc-hId-440114587"&gt;Work with Saved Traces&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;For completely saved traces, the trace directory allows you to change their properties &lt;EM&gt;Expiry Date&lt;/EM&gt; (if the default retention period of 120 days is too short) or &lt;EM&gt;Description&lt;/EM&gt;. You can do this either via button &lt;EM&gt;Change Trace Property&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconChange.png" height="18" width="24" /&gt;, or through the appropriate entries in the corresponding fields' context menus. The &lt;EM&gt;Description&lt;/EM&gt; can also be set or changed for metadata-only directory entries, but because of their short lifetime this hardly ever makes sense.&lt;BR /&gt;
When you do not need some previously stored traces any longer, mark them in the trace directory.&amp;nbsp; Then manually delete them with button &lt;EM&gt;Delete Trace(s)&lt;/EM&gt;&amp;nbsp; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconDelete.png" height="18" width="20" /&gt; . This saves space in the underlying database table and gives you a better overview of your still relevant traces.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;If you have recorded separate but related traces, e.g., one for each individual user interaction of an application with multiple steps, and also want to analyze the entire application's communication with external resources, you can mark all corresponding traces and merge them into one comprehensive trace through button &lt;EM&gt;Merge Traces&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconMerge.png" height="18" width="20" /&gt;. Then analyze it as if it was recorded in one go.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;To access the true content of a trace directory's entry (as opposed to its characteristics shown in the list and explained in Table 1), double click it. For persisted traces, this takes you immediately to the list of &lt;EM&gt;Trace Main Records&lt;/EM&gt; as covered in my blog post&amp;nbsp;&lt;A href="https://blogs.sap.com/2023/02/24/st05-basic-use/" target="_blank" rel="noopener noreferrer"&gt;ST05: Basic Use&lt;/A&gt;. Alternatively, you right-click an entry's row header and select &lt;EM&gt;Display Trace with Filter&lt;/EM&gt; from the context menu or from button &lt;EM&gt;Display Trace&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconDisplay.png" height="18" width="24" /&gt; to get the &lt;EM&gt;Filter Conditions for Trace Records&lt;/EM&gt; screen where you can restrict to a subset of the stored trace records. This screen is always the entry point for metadata-only trace directory entries.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;You may also export traces from the trace directory into the local file system of your front-end computer. Mark the desired trace and select the download format from the context menu of button &lt;EM&gt;Export Trace&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconExport.png" height="18" width="23" /&gt;. Available formats are binary, or CSV for the various aggregation levels supported by &lt;CODE&gt;ST05&lt;/CODE&gt;. Give a file name for each trace you want to export. You can initiate trace downloads also from the &lt;EM&gt;Filter Conditions for Trace Records&lt;/EM&gt; screen or from the list of &lt;EM&gt;Trace Main Records&lt;/EM&gt;.&lt;BR /&gt;
CSV downloads are typically opened with a spreadsheet application. A binary export can be imported into a trace directory of another system (button &lt;EM&gt;Import Trace&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconImport.png" height="18" width="19" /&gt;). There, its description will be the file name with&amp;nbsp;&lt;CODE&gt; (Imported from file)&lt;/CODE&gt; appended. Based on such an imported trace, you can continue your analysis of the trace even when you do not have access to the original system any longer. Or you can forward the trace to a colleague who does not have a user in the original system. Finally, with imported traces you can compare the behavior of your application between different systems with distinct configurations, or software releases, or amounts of data. The next section explains the trace comparison in detail.&lt;/P&gt;&lt;BR /&gt;
Trace records contain the name of the user who triggered the associated statement. This may conflict with local data privacy legislation. To remedy such collisions, you can anonymize persisted traces: Mark the relevant stored traces and select &lt;EM&gt;Anonymize Trace Records&lt;/EM&gt; from the context menu (right-click the row header). In the ensuing popup, specify the user name to be anonymized. It will be replaced by a string of 12 alphanumeric characters. If you specify &lt;CODE&gt;*&lt;/CODE&gt; all user names will be deleted. No other wildcards are supported.&lt;BR /&gt;
&lt;H1 id="toc-hId-243601082"&gt;Trace Comparison&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;For fully persisted traces, the trace directory supports their comparison: Mark exactly two traces, then click button &lt;EM&gt;Compare Two Traces&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconCompare.png" height="18" width="19" /&gt; (Fig. 3).&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_Compare.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 3:&lt;/STRONG&gt; From the &lt;STRONG&gt;Directory of Performance Traces&lt;/STRONG&gt; you can compare two traces that you have previously saved on the database. Fig. 4 shows the comparison.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;This leads to the &lt;EM&gt;Trace Comparison of Structure-Identical Statements&lt;/EM&gt; (Fig. 4). Its upper panel shows the two traces' metadata and overall totals for their KPIs &lt;EM&gt;Total Number of Executions&lt;/EM&gt;, &lt;EM&gt;Number of Records&lt;/EM&gt;, &lt;EM&gt;Execution Duration&lt;/EM&gt;, &lt;EM&gt;HANA CPU Time&lt;/EM&gt;, and &lt;EM&gt;Redundant Identical Statements.&lt;/EM&gt; Additionally, it includes the prevalences of buffer types among the database tables or views recorded in the traces. The lower panel contains the actual comparison. The first trace is considered the baseline against which the second trace is contrasted. Press button &lt;EM&gt;Swap Traces&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconSwap.png" height="18" width="19" /&gt; to interchange the traces if you want to regard the other trace as the baseline.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_Comparison-2.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 4:&lt;/STRONG&gt; With a trace comparison you can investigate variations in your application's runtime behavior related to its communication with external resources. These may be due to unequal amounts of data either in principle available to the application, or actually processed by it. Other reasons for runtime differences may be changes to the application's source code, or its configuration, or the way it is executed by its users.&lt;BR /&gt;
The upper panel shows the two traces' metadata and their overall KPI totals for &lt;STRONG&gt;&lt;EM&gt;Total Number of Executions&lt;/EM&gt;&lt;/STRONG&gt;, &lt;STRONG&gt;&lt;EM&gt;Number of Records&lt;/EM&gt;&lt;/STRONG&gt;, &lt;STRONG&gt;&lt;EM&gt;Execution Duration&lt;/EM&gt;&lt;/STRONG&gt;, &lt;STRONG&gt;&lt;EM&gt;HANA CPU Time&lt;/EM&gt;&lt;/STRONG&gt;, and &lt;EM&gt;&lt;STRONG&gt;Redundant Identical Statements&lt;/STRONG&gt;.&lt;BR /&gt;
&lt;/EM&gt;In the lower panel, the actual comparison examines the KPI's values aggregated according to the selected granularity.&lt;EM&gt;&amp;nbsp;The default comparison method is the difference, and the rows are sorted descending by the runtime difference.&lt;BR /&gt;
In the screenshot, the comparison contrasts two calls to the &lt;STRONG&gt;Audit Journal&lt;/STRONG&gt; Fiori application F0997. The first one does not find any data, the second has 71 rows in its result set.&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
To prepare for the comparison, &lt;CODE&gt;ST05&lt;/CODE&gt; summarizes, separately within each trace, the values for &lt;EM&gt;Total Number of Executions&lt;/EM&gt;, &lt;EM&gt;Number of Records&lt;/EM&gt;, &lt;EM&gt;Execution Duration&lt;/EM&gt;, &lt;EM&gt;HANA CPU Time&lt;/EM&gt;, and &lt;EM&gt;Redundant Identical Statements&lt;/EM&gt; of all matching records. The default summarization criterion is the object affected by the statements, independent of the type or the structure of the statements. For finer granularity, distinct operations (&lt;CODE&gt;SELECT&lt;/CODE&gt;, &lt;CODE&gt;INSERT&lt;/CODE&gt;, &lt;CODE&gt;UPDATE&lt;/CODE&gt;, &lt;CODE&gt;DELETE&lt;/CODE&gt;, ENQUEUE, DEQUEUE, ...) can be resolved, or (for greatest detail) the operations and the statements. After this preparation, the summary records of the two traces are matched (by the combination of object, operation, or statement, corresponding to your chosen level of resolution), and their values are compared. The default comparison (Fig. 4) uses the values' differences (absolute numbers). Optionally, &lt;CODE&gt;ST05&lt;/CODE&gt; can express this as the percentages relative to the values of the first trace. Other alternatives show the ratios of the second trace's values divided by those of the first trace, or the relative contributions to the corresponding total values of each trace.&lt;BR /&gt;
&lt;BR /&gt;
The first column of each summary record in the comparison table encodes the record's occurrence:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;CODE&gt;T1_&lt;/CODE&gt;&amp;nbsp; :&amp;nbsp; only in the first trace&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;CODE&gt;T_2&lt;/CODE&gt;&amp;nbsp; :&amp;nbsp; only in the second trace&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;CODE&gt;T12&lt;/CODE&gt;&amp;nbsp; :&amp;nbsp; in both traces&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;For a meaningful trace comparison, &lt;CODE&gt;T12&lt;/CODE&gt; shall be the predominant code. Otherwise, the two traces are not really comparable.&lt;BR /&gt;
Columns &lt;EM&gt;Object Name&lt;/EM&gt;, &lt;EM&gt;Operation&lt;/EM&gt;, and &lt;EM&gt;Statement&lt;/EM&gt; characterize the level of detail on which the comparison is done. For rows dealing with database tables or views, column &lt;EM&gt;Buffer Type&lt;/EM&gt; indicates the buffering type.&lt;BR /&gt;
The four color-coded groups with three columns each contain the compared KPIs with the measured values for the two traces and their differences.&lt;BR /&gt;
To streamline the comparison, click button &lt;EM&gt;Display Differences Only&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconDiffOnly.png" height="18" width="20" /&gt;. This compares only those records that are not in both traces (code either &lt;CODE&gt;T1_&lt;/CODE&gt; or &lt;CODE&gt;T_2&lt;/CODE&gt;)&amp;nbsp;or that have different values for &lt;EM&gt;Total Number of Executions&lt;/EM&gt;&amp;nbsp;or &lt;EM&gt;Number of Records&lt;/EM&gt;. Press the button again to toggle back to &lt;EM&gt;Display Full List&lt;/EM&gt;.&lt;BR /&gt;
From the dropdown menu of button &lt;EM&gt;Set Comparison Method&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconCompareMethod.png" height="18" width="23" /&gt; you can pick your preferred perspective: absolute difference, ratio, percentage increase, or percentage of each trace's totals.&lt;BR /&gt;
Similarly, use the dropdown menu of button &lt;EM&gt;Set Comparison Granularity&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconCompareGranularity.png" height="18" width="23" /&gt; to determine the level of detail for your analysis: just &lt;EM&gt;Objects&lt;/EM&gt;, or &lt;EM&gt;Objects and Operations&lt;/EM&gt;, or &lt;EM&gt;Objects, Operations, and Statements&lt;/EM&gt;.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;The example shown in Fig. 4 indicates that the same number of HTTP requests to OData services &lt;CODE&gt;/sap/opu/odata/sap/FAC_AUDIT_JOURNAL_SRV&lt;/CODE&gt; took significantly longer in the second trace than in the first one. The reasons are different accesses to CDS views &lt;CODE&gt;IFIACCDOCJRNL&lt;/CODE&gt; (&lt;EM&gt;Journal&lt;/EM&gt;) and &lt;CODE&gt;IFICMPTJRNL&lt;/CODE&gt; (&lt;EM&gt;Compact Journal&lt;/EM&gt;), leading to longer &lt;EM&gt;Execution Duration&lt;/EM&gt;&amp;nbsp;and higher &lt;EM&gt;HANA CPU Time&lt;/EM&gt; consumption. For an in-depth investigation, you open the second trace (by double-clicking it in the upper panel of the &lt;EM&gt;Trace Comparison&lt;/EM&gt;, or by pressing button &lt;EM&gt;Display Trace&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/ST05_TraceDirectory_IconCompareDisplay.png" height="18" width="19" /&gt;). There you can use all the tools offered by &lt;CODE&gt;ST05&lt;/CODE&gt; to analyze why the second execution is slower. In this example, the evident reason is that it handles more data, but you still may find an approach to accelerate it. Always question the obvious explanations and try to go beyond the apparent cause.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H1 id="toc-hId-47087577"&gt;Summary&lt;/H1&gt;&lt;BR /&gt;
The trace directory integrated into &lt;CODE&gt;ST05&lt;/CODE&gt; serves two main purposes:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;It prevents important traces from being overwritten by subsequently recorded traces.&lt;BR /&gt;
This gives you more time for comprehensive analyses, e.g., to find optimization approaches.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Two previously stored traces can be compared with each other.&lt;BR /&gt;
With such a comparison you can investigate your application's scaling behavior (related to its communication with external resources) to verify that its execution time or resource consumption grows at worst proportional to the amount of processed data.&lt;BR /&gt;
Alternatively, with a trace comparison you may be able to demonstrate that your optimization project has been successful.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Traces exported to your front-end computer's file system and then imported into another SAP system enable the comparison of your application's behavior across systems. Such a comparison may reveal the impacts of differences in system configuration, process customizing, or available data volume on your application's performance.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/st05-trace-directory/ba-p/13558057"/>
    <published>2023-04-28T06:59:16+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/st05-aggregate-trace-records/ba-p/13569482</id>
    <title>ST05: Aggregate Trace Records</title>
    <updated>2023-05-17T11:23:04+02:00</updated>
    <author>
      <name>ManfredMensch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165193</uri>
    </author>
    <content>This is a follow-up to my blog post&amp;nbsp; &lt;A href="https://blogs.sap.com/?p=1689314&amp;amp;preview=true&amp;amp;preview_id=1689314" target="_blank" rel="noopener noreferrer"&gt;ST05: Basic Use&lt;/A&gt;. Here I explain various options for aggregating trace records. They greatly facilitate the analysis of a trace.&lt;BR /&gt;
&lt;BR /&gt;
If you have not yet done so, please read the introductory post &lt;A href="https://blogs.sap.com/?p=1688270" target="_blank" rel="noopener noreferrer"&gt;Use ST05 to Monitor the Communication of the ABAP Work Process with External Resources&lt;/A&gt;. There I describe how my measurement transactions &lt;CODE&gt;STATS&lt;/CODE&gt;&amp;nbsp;and&amp;nbsp;&lt;CODE&gt;STATS_FE&lt;/CODE&gt; help you to detect performance bugs in your applications, and I state that &lt;CODE&gt;ST05&lt;/CODE&gt; is an essential analysis tool to find root causes for applications that are too slow or consume too many resources. In particular, &lt;CODE&gt;ST05&lt;/CODE&gt; captures requests and data transmissions between the ABAP work process and external components. By default these transmissions are not recorded to not incur the associated overhead. You need to consciously and explicitly activate the recording, and subsequently must switch it off. Once you have a high quality trace of your application's communication with external resources, you want to evaluate it in the most efficient way.&lt;BR /&gt;
&lt;BR /&gt;
Fig. 1 shows the ALV list of &lt;EM&gt;Trace Main Records&lt;/EM&gt; for the Audit Journal Fiori application F0997, with records for the interface types SQL, Enqueue, HTTP, and RFC. Refer to my blog post &lt;A href="https://blogs.sap.com/?p=1689314&amp;amp;preview=true&amp;amp;preview_id=1689314" target="_blank" rel="noopener noreferrer"&gt;ST05: Basic Use&lt;/A&gt; for a complete description of the scope and purpose of the &lt;EM&gt;Trace Main Records&lt;/EM&gt;. With its chronological sort order, the list provides a comprehensive picture of the flow of the application's communication with external agents, but it does not draw your attention to the most expensive statements, nor does it indicate events that have been executed multiple times or even redundantly. It also does not distinguish between statements related to the involved technical frameworks and statements that contribute to the business logic.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_MainRecords-1.png" /&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 1:&lt;/STRONG&gt; In the chronologically sorted list of &lt;STRONG&gt;Trace Main Records&lt;/STRONG&gt;, each entry corresponds to one execution of an ABAP statement calling an external resource, or to the processing of an incoming request.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;To remedy these shortcomings,&lt;STRONG&gt;&lt;CODE&gt;ST05&lt;/CODE&gt; offers various options to summarize the list of &lt;EM&gt;Trace Main Records&lt;/EM&gt;, which make your work with previously recorded traces much more efficient&lt;/STRONG&gt;. They are all accessible from the drop-down menu of button &lt;EM&gt;Aggregate Trace&lt;/EM&gt; &amp;nbsp;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_AggregateTrace.png" height="18" width="22" /&gt;. Table 1 briefly introduces them, and the following sections describe them in detail.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;TABLE style="height: 70px;width: 100%;border-collapse: collapse" border="1"&gt;&lt;CAPTION&gt;&lt;STRONG&gt;Table 1:&lt;/STRONG&gt; Aggregation levels supported by &lt;CODE&gt;ST05&lt;/CODE&gt;.&lt;/CAPTION&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 31.44%;height: 14px"&gt;&lt;EM&gt;Structure-Identical Statements&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.56%;height: 14px"&gt;Specific values of bind variables are not considered.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 31.44%;height: 14px"&gt;&lt;EM&gt;Value-Identical Statements&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.56%;height: 14px"&gt;Structure-identical statements where the bind variables have the same values.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 31.44%;height: 14px"&gt;&lt;EM&gt;Table Accesses&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.56%;height: 14px"&gt;Database accesses from the same category (&lt;CODE&gt;SELECT&lt;/CODE&gt;, &lt;CODE&gt;INSERT&lt;/CODE&gt;, &lt;CODE&gt;UPDATE&lt;/CODE&gt;, &lt;CODE&gt;DELETE&lt;/CODE&gt;, ...) grouped by object and by database connection.&lt;BR /&gt;
Buffer accesses using the same number of key fields.&lt;BR /&gt;
(Only for trace types SQL, BUF.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 31.44%;height: 14px"&gt;&lt;EM&gt;Trace Overview&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.56%;height: 14px"&gt;Quality control of the trace, break-down of records by type, and high-level evaluation with hints for potential optimizations.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 31.44%;height: 14px"&gt;&lt;EM&gt;Sizing Information&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.56%;height: 14px"&gt;Estimates the data volume added by the traced application to the database.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR&gt;&lt;BR /&gt;
&lt;TD style="width: 31.44%"&gt;&lt;EM&gt;Trace Single Records&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 68.56%"&gt;Resolves individual low-level operations.&lt;BR /&gt;
(They are recorded only for trace types SQL, BUF.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;/TABLE&gt;&lt;BR /&gt;
The main benefit of trace aggregation is for trace types SQL and BUF. They record concrete values used in individual statements, leading to a large variety of trace records. Aggregation creates a significantly shorter list of records, giving you a much better overview of the various kinds of statements and their durations or resource consumptions.&lt;BR /&gt;
&lt;H1 id="toc-hId-834098841"&gt;Structure-Identical Statements&lt;/H1&gt;&lt;BR /&gt;
The list of &lt;EM&gt;Structure-Identical Statements&lt;/EM&gt; (Fig. 2) summarizes identical &lt;EM&gt;Trace Main Records&lt;/EM&gt; without considering the actual values for any bind variables. The resulting list is augmented by some statistics on the set of main records contributing to each entry, and (for SQL, BUF, and ENQ trace records) by metadata from the ABAP dictionary on the affected table, view, or lock object. Table 2 covers the columns that are shown in the default ALV grid layout. You may add a few additional fields with more technical content (e.g., from the SAP extended passport) by changing the list's layout.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_StructureIdenticalRecords-3.png" /&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 2:&lt;/STRONG&gt; The list of &lt;STRONG&gt;Structure-Identical Statements&lt;/STRONG&gt; summarizes the &lt;STRONG&gt;Trace Main Records&lt;/STRONG&gt; for statements with the same structure, but potentially distinct values for bind variables. The list is sorted descending by &lt;STRONG&gt;Duration&lt;/STRONG&gt;.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;TABLE style="width: 100%;border-collapse: collapse" border="1"&gt;&lt;CAPTION&gt;&lt;STRONG&gt;Table 2:&lt;/STRONG&gt; &lt;EM&gt;Fields in the default layout of the list of &lt;STRONG&gt;Structure-Identical Statements&lt;/STRONG&gt;.&lt;/EM&gt;&lt;/CAPTION&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Executions&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Total number of executions of the structure-identical statements.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Redundancy&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Absolute number of redundant value-identical statements.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Identical&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Relative number of redundant value-identical statements.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Duration&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Total elapsed execution time in µs of the structure-identical statements.&lt;BR /&gt;
(Measured by the ABAP work process.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;CPU Time&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Total HANA CPU time in µs used during the structure-identical statements' executions.&lt;BR /&gt;
(Only for SQL trace records on SAP HANA.)&lt;BR /&gt;
(Measured by the SAP HANA DB server.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Memory&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Maximum memory consumption in kByte during the structure-identical statements' executions.&lt;BR /&gt;
(Only for SQL trace records on SAP HANA.​)&lt;BR /&gt;
(Measured by the SAP HANA DB server.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Records&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Total number of records affected by the structure-identical statements.&lt;BR /&gt;
(SQL, BUF: number of table or view rows;&lt;BR /&gt;
ENQ: number of lock granules)&lt;BR /&gt;
(Not for RFC, HTTP, APC, and AMC trace records.​)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Duration / Execution&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Average execution time in µs per contributing statement.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Records / Execution&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Average number of records affected per contributing statement.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Duration / Record&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Average execution time in µs per record.&lt;BR /&gt;
(Records = 0 ⇒ average execution time per contributing statement.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt; Min. Duration / Record&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Minimum execution time in µs per record.&lt;BR /&gt;
(Records = 0 ⇒ minimum execution time of contributing statements.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Length&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;ABAP dictionary record length in Byte of the table or view.&lt;BR /&gt;
(Only for SQL and BUF trace records.​)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt; Buffer Type&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Buffer type of the table or view.&lt;BR /&gt;
(Only for SQL and BUF trace records.​)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Table Type&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Table type of the table or view.&lt;BR /&gt;
(Only for SQL and BUF trace records.​)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Data Class&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Type of data stored in the table.&lt;BR /&gt;
(Only for SQL and BUF trace records.​)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Size&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Estimated size category of the table.&lt;BR /&gt;
(Only for SQL and BUF trace records.​)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Object Name&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Name of the object that was accessed.&lt;BR /&gt;
(SQL, BUF: table or view; ENQ: lock object;&lt;BR /&gt;
RFC: function; HTTP, APC: path; AMC: channel ID)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 23.84%;height: 14px"&gt;&lt;EM&gt;Statement&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 76%;height: 14px"&gt;Edited statement.&lt;BR /&gt;
(SQL: field list and &lt;CODE&gt;FROM&lt;/CODE&gt; clause removed, variable names as place holders for values;&lt;BR /&gt;
BUF: buffer type, length of key values in characters, buffer operation;&lt;BR /&gt;
ENQ: lock operation, lock mode, table, granule argument;&lt;BR /&gt;
RFC: source, destination, &lt;CODE&gt;CLIENT&lt;/CODE&gt; or &lt;CODE&gt;SERVER&lt;/CODE&gt;, function, sent data in Byte;&lt;BR /&gt;
HTTP: method, status code, status text, scheme, host, port, &lt;CODE&gt;CLIENT&lt;/CODE&gt; or &lt;CODE&gt;SERVER&lt;/CODE&gt;, path;&lt;BR /&gt;
APC: executed action, protocol, host, port, &lt;CODE&gt;CLIENT&lt;/CODE&gt; or &lt;CODE&gt;SERVER&lt;/CODE&gt;, path;&lt;BR /&gt;
AMC: &amp;lt;empty&amp;gt;)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;/TABLE&gt;&lt;BR /&gt;
The sort order is descending by &lt;EM&gt;Duration&lt;/EM&gt;, placing the most expensive statements at the top. They have the biggest impact on the application's end-to-end response time and are your first entry point to a detailed analysis, which shall also consider the number of &lt;EM&gt;Records&lt;/EM&gt; affected by the statement:&lt;BR /&gt;
If &lt;EM&gt;Min. Duration / Record&lt;/EM&gt; exceeds 10,000 µs = 10 ms for &lt;CODE&gt;SELECT&lt;/CODE&gt;s, or 50,000 µs = 50 ms for &lt;CODE&gt;INSERT&lt;/CODE&gt;s, &lt;CODE&gt;UPDATE&lt;/CODE&gt;s, or &lt;CODE&gt;DELETE&lt;/CODE&gt;s, the statement's execution on the database is slow and shall be investigated in detail. If a statement has been executed multiple times (e.g., &lt;EM&gt;Executions&lt;/EM&gt; ≥ 10), also consider the value of average &lt;EM&gt;Duration / Record&lt;/EM&gt;. With few executions, a single outlier may distort the average, i.e., one slow execution may conceal several fast executions, but with 10 or more executions, it should be reliable and taken seriously. In my blog post &lt;A href="https://blogs.sap.com/2023/06/30/st05-analyze-individual-trace-records/" target="_blank" rel="noopener noreferrer"&gt;Analyze Individual Trace Records&lt;/A&gt;, I explain how you can recognize the database's processing of a slow statement and how this may indicate optimization approaches.&lt;BR /&gt;
&lt;BR /&gt;
Other purely technical indicators for potential improvements related to SQL trace records are&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Column&amp;nbsp;&lt;EM&gt;Buffer Type&lt;/EM&gt;&lt;BR /&gt;
It shall be empty. If a table's technical settings is&amp;nbsp;&lt;EM&gt;Buffering switched on&lt;/EM&gt;, the vast majority of Open SQL statements against this table shall be handled by the table buffer on the application server instance. Then they will not be recorded by an SQL trace. SQL trace records where&amp;nbsp;&lt;EM&gt;Buffer Type&amp;nbsp;&lt;/EM&gt;equals&amp;nbsp;&lt;CODE&gt;FUL&lt;/CODE&gt;,&amp;nbsp;&lt;CODE&gt;GEN&lt;/CODE&gt;, or&amp;nbsp;&lt;CODE&gt;SNG&lt;/CODE&gt;&amp;nbsp;indicate that the table buffer was bypassed, which slows down the application, puts unnecessary load on the database server, and does not take advantage of the application server memory used to buffer the table's rows. Rewrite the corresponding statements so that they can be handled by the table buffer. Values in the&amp;nbsp;&lt;EM&gt;Buffer Type&lt;/EM&gt;&amp;nbsp;column starting with&amp;nbsp;&lt;CODE&gt;DE&lt;/CODE&gt;&amp;nbsp;represent the technical setting&amp;nbsp;&lt;EM&gt;Buffering allowed but switched off&lt;/EM&gt;. Check whether buffering can be switched on for the affected tables. The&amp;nbsp;&lt;EM&gt;Buffer Type&lt;/EM&gt;&amp;nbsp;&lt;CODE&gt;CUST&lt;/CODE&gt;&amp;nbsp;identifies accesses to unbuffered customizing tables (&lt;EM&gt;Data Class&lt;/EM&gt;&amp;nbsp;=&amp;nbsp;&lt;CODE&gt;APPL2&lt;/CODE&gt;). Consider to switch on buffering for the table—this is typically suitable for customizing data. Finally, the entry&amp;nbsp;&lt;CODE&gt;DDIC&lt;/CODE&gt;&amp;nbsp;in the&amp;nbsp;&lt;EM&gt;Buffer Type&lt;/EM&gt;&amp;nbsp;column indicates direct accesses to tables belonging to the ABAP dictionary. Replace them by using functions&amp;nbsp;&lt;CODE&gt;DDIF*&lt;/CODE&gt;, in particular&amp;nbsp;&lt;CODE&gt;DDIF_NAMETAB_GET&lt;/CODE&gt;&amp;nbsp;or&amp;nbsp;&lt;CODE&gt;DDIF_FIELDINFO_GET&lt;/CODE&gt;.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Columns &lt;EM&gt;Redundancy&lt;/EM&gt; or &lt;EM&gt;Identical&lt;/EM&gt;&lt;EM&gt;&lt;BR /&gt;
&lt;/EM&gt;They shall contain only zeros. These columns show the absolute number or relative number, respectively, of redundant &lt;EM&gt;Value-Identical Statements&lt;/EM&gt; within the corresponding set of &lt;EM&gt;Structure-Identical Statements&lt;/EM&gt;. These duplicate &lt;EM&gt;Value-Identical Statements&lt;/EM&gt; repeatedly access the same rows on the database, instead of taking their content from the application's state in the application server instance. This is slower than necessary and wastes precious resources on the database server. You need to eliminate them. Refer to the following section on &lt;EM&gt;Value-Identical Statements&lt;/EM&gt; for a complete discussion.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Columns &lt;EM&gt;Executions&lt;/EM&gt; and &lt;EM&gt;Records / Execution&lt;BR /&gt;
&lt;/EM&gt;Entries with a large number of &lt;EM&gt;Executions&lt;/EM&gt; and &lt;EM&gt;Records / Execution&lt;/EM&gt; ≈ 1 may indicate single row SQL statements nested inside a loop. Consider a mass-enabled approach to reduce the number of data transfers.&lt;EM&gt;&lt;BR /&gt;
&lt;/EM&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
With domain knowledge about the application's business logic and its purpose, you may identify further critical statements by looking at&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Columns &lt;EM&gt;Object Name&lt;/EM&gt; and &lt;EM&gt;Statement&lt;/EM&gt;&lt;BR /&gt;
For SQL trace records: Does the application need rows from the table or view? If yes, is the statement's &lt;CODE&gt;WHERE&lt;/CODE&gt; clause as restrictive as possible, and does the field list request only necessary columns?&lt;BR /&gt;
For the other trace types, similar questions apply and help to identify potentially unnecessary communication events triggered by your application.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Column &lt;EM&gt;Executions&lt;/EM&gt;&lt;BR /&gt;
Are all executions required for the application to be functionally correct?&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Column &lt;EM&gt;Records&lt;/EM&gt;&lt;BR /&gt;
Does the number of rows make sense? Are all the records needed by the application? Can you use code push-down (at least in the form of SQL aggregate functions) to calculate on the database instead of transferring many rows to the ABAP work process?&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
With button &lt;EM&gt;Absolute &amp;lt;-&amp;gt; Relative Values&amp;nbsp;&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_IconAbsRel.png" height="18" width="19" /&gt;&amp;nbsp;you can toggle between these two options for columns &lt;EM&gt;Executions&lt;/EM&gt;, &lt;EM&gt;Duration&lt;/EM&gt;, &lt;EM&gt;CPU Time&lt;/EM&gt;, and &lt;EM&gt;Records&lt;/EM&gt;. The relative values are expressed as percentages of the respective totals.&lt;BR /&gt;
The drop-down menu of button &lt;EM&gt;Break Down Trace Record&amp;nbsp;&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_IconBreakDown.png" height="18" width="22" /&gt;&amp;nbsp;allows you to view either the contributing &lt;EM&gt;Trace &lt;/EM&gt;&lt;EM&gt;Main Records&lt;/EM&gt; or the associated &lt;EM&gt;Value-Identical Statements&lt;/EM&gt; for selected list entries.&lt;BR /&gt;
&lt;H1 id="toc-hId-637585336"&gt;Value-Identical Statements&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;The list of&amp;nbsp;&lt;EM&gt;Value-Identical Statements&lt;/EM&gt; (Fig. 3) also summarizes identical &lt;EM&gt;Trace Main Records&lt;/EM&gt;, but unlike the &lt;EM&gt;Structure-Identical Statements&lt;/EM&gt;, it takes the concrete values for any bind variables into account. This aggregation supports only SQL, BUF, and ENQ trace records. These are the only trace types where values are recorded. The columns in the list of &lt;EM&gt;Value-Identical Statements&lt;/EM&gt; are mostly like the ones for the &lt;EM&gt;Structure-Identical Statements&lt;/EM&gt;. Table 3 contains the differences.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_ValueIdenticalRecords-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 3:&lt;/STRONG&gt; The list of &lt;STRONG&gt;Value-Identical Statements&lt;/STRONG&gt; summarizes &lt;STRONG&gt;Trace Main Records&lt;/STRONG&gt; for statements with the same structure, and with identical values for bind variables. The list is sorted descending by &lt;STRONG&gt;Duration&lt;/STRONG&gt;.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;TABLE style="width: 100%;border-collapse: collapse" border="1"&gt;&lt;CAPTION&gt;&lt;STRONG&gt;Table 3:&lt;/STRONG&gt; &lt;EM&gt;Fields in the default layout of the list of &lt;STRONG&gt;Value-Identical Statements&lt;/STRONG&gt;&amp;nbsp;that differ from the fields for the &lt;STRONG&gt;Structure-Identical Statements&lt;/STRONG&gt;.&lt;/EM&gt;&lt;/CAPTION&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR&gt;&lt;BR /&gt;
&lt;TD style="width: 24.4%"&gt;&lt;EM&gt;Executions&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 75.6%"&gt;Total number of executions of the value-identical statements.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR&gt;&lt;BR /&gt;
&lt;TD style="width: 24.4%"&gt;&lt;EM&gt;Redundancy&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 75.6%"&gt;Not available—covered by &lt;EM&gt;Executions&lt;/EM&gt;.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR&gt;&lt;BR /&gt;
&lt;TD style="width: 24.4%"&gt;&lt;EM&gt;Identical&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 75.6%"&gt;Not available—covered by &lt;EM&gt;Executions&lt;/EM&gt;.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR&gt;&lt;BR /&gt;
&lt;TD style="width: 24.4%"&gt;&lt;EM&gt;Statement&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 75.6%"&gt;Edited statement.&lt;BR /&gt;
(SQL: field list and &lt;CODE&gt;FROM&lt;/CODE&gt; clause removed, variable values;&lt;BR /&gt;
BUF: buffer type, length of key values in characters, key values;&lt;BR /&gt;
ENQ: lock operation, lock mode, table, granule argument)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;/TABLE&gt;&lt;BR /&gt;
The list of &lt;EM&gt;Value-Identical Statements&lt;/EM&gt; is sorted descending by &lt;EM&gt;Duration&lt;/EM&gt;. Records with &lt;EM&gt;Execution&lt;/EM&gt; = 1 are suppressed.&lt;BR /&gt;
&lt;BR /&gt;
Value-identical SQL statements read the same data multiple times from the database, thus create unnecessary load. Identical data can be read redundantly by statements that are not value-identical―and not even structure-identical. This is not visible in the list of &lt;EM&gt;Value-Identical Statements&lt;/EM&gt;. All unnecessary accesses to the persistence layer must be eliminated. This is a more comprehensive demand than just removing value-identical SQL statements. Unfortunately, there is no support in &lt;CODE&gt;ST05&lt;/CODE&gt; (nor in any other tool) to find all superfluous SQL statements.&lt;BR /&gt;
Click button &lt;EM&gt;Break Down Trace Record&lt;/EM&gt; &amp;nbsp;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_IconBreakDown-1.png" height="18" width="22" /&gt; to see the &lt;EM&gt;Trace Main Records &lt;/EM&gt;contributing to the selected &lt;EM&gt;Value-Identical Statements&lt;/EM&gt;.&lt;BR /&gt;
&lt;H1 id="toc-hId-441071831"&gt;Table Accesses&lt;/H1&gt;&lt;BR /&gt;
The &lt;EM&gt;Table Accesses&lt;/EM&gt; aggregation (Fig. 4) combines statements by their type, separately for each object. It aggregates all SQL trace records corresponding to statements of the same category (e.g., &lt;CODE&gt;SELECT&lt;/CODE&gt;, &lt;CODE&gt;INSERT&lt;/CODE&gt;, &lt;CODE&gt;UPDATE&lt;/CODE&gt;, &lt;CODE&gt;DELETE&lt;/CODE&gt;) that access a table or view over the same logical database connection. Similarly,&amp;nbsp; all BUF trace records triggered by statements that were handled by the table buffer or by other buffers on the application server instance, and that access an object with the same number of key fields are aggregated. No other trace types are supported by this aggregation option. Table 4 contains the fields displayed in the &lt;EM&gt;Table Accesses&lt;/EM&gt; list.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_Table-Accesses.png" /&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 4:&lt;/STRONG&gt; The list of &lt;STRONG&gt;Table Accesses&lt;/STRONG&gt; summarizes, separately for each table or view, all statements of the same category. The sort order is alphabetically by &lt;STRONG&gt;&lt;EM&gt;Object Name&lt;/EM&gt;&lt;/STRONG&gt;, &lt;EM&gt;&lt;STRONG&gt;Statement&lt;/STRONG&gt; category&lt;/EM&gt;, and &lt;EM&gt;&lt;STRONG&gt;Connection Name&lt;/STRONG&gt;.&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;TABLE style="width: 100%;border-collapse: collapse" border="1"&gt;&lt;CAPTION&gt;&lt;STRONG&gt;Table 4:&lt;/STRONG&gt; &lt;EM&gt;Fields in the default layout of the &lt;STRONG&gt;Table Accesses&lt;/STRONG&gt;.&lt;/EM&gt;&lt;/CAPTION&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 14px"&gt;&lt;EM&gt;Object Name&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 14px"&gt;Name of the table or view that was accessed.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 14px"&gt;&lt;EM&gt;Length&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 14px"&gt;ABAP dictionary record length in Byte of the table or view.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 14px"&gt;&lt;EM&gt;Buffer Type&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 14px"&gt;Buffer type of the table or view.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 14px"&gt;&lt;EM&gt;Table Type&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 14px"&gt;Table type of the table or view.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 14px"&gt;&lt;EM&gt;Data Class&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 14px"&gt;Type of data stored in the table.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 14px"&gt;&lt;EM&gt;Size&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 14px"&gt;Estimated size category of the table.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 42px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 42px"&gt;&lt;EM&gt;Statement&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 42px"&gt;Category of statement&lt;BR /&gt;
SQL: &lt;CODE&gt;SELECT&lt;/CODE&gt;, &lt;CODE&gt;INSERT&lt;/CODE&gt;, &lt;CODE&gt;UPDATE&lt;/CODE&gt;, &lt;CODE&gt;DELETE&lt;/CODE&gt;, ...&lt;BR /&gt;
BUF: buffer type, key length&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 14px"&gt;&lt;EM&gt;Connection Name&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 14px"&gt;Name of the logical database connection used by the contributing statements.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 28px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 28px"&gt;&lt;EM&gt;Duration&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 28px"&gt;Total elapsed execution time in µs of the contributing statements.&lt;BR /&gt;
(Measured by the ABAP work process.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 42px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 42px"&gt;&lt;EM&gt;CPU Time&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 42px"&gt;Total HANA CPU time in µs used during the contributing statements' executions.&lt;BR /&gt;
(Only for SQL trace records on SAP HANA.)&lt;BR /&gt;
(Measured by the SAP HANA DB server.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 56px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 56px"&gt;&lt;EM&gt;Memory&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 56px"&gt;Maximum memory consumption in kByte during the contributing statements' executions.&lt;BR /&gt;
(Only for SQL trace records on SAP HANA.​)&lt;BR /&gt;
(Measured by the SAP HANA DB server.)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 14px"&gt;&lt;EM&gt;Records&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 14px"&gt;Total number of table or view rows affected by the contributing statements.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 28px"&gt;&lt;BR /&gt;
&lt;TD style="width: 19.6%;height: 17px"&gt;&lt;EM&gt;Executions&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 81.04%;height: 17px"&gt;Total number of executions of contributing statements.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;/TABLE&gt;&lt;BR /&gt;
The list is sorted ascending by &lt;EM&gt;Object Name&lt;/EM&gt;, category of &lt;EM&gt;Statement&lt;/EM&gt;, and &lt;EM&gt;Connection Name&lt;/EM&gt;.&lt;BR /&gt;
&lt;BR /&gt;
The &lt;EM&gt;Table Accesses&lt;/EM&gt; display provides a highly condensed survey of the tables with which the traced application works and how the application affects these tables. Use it to verify that there are no expensive accesses to tables that have no relevance to the business process, and to make sure that the required accesses have good performance.&lt;BR /&gt;
&lt;BR /&gt;
As in the list of &lt;EM&gt;Structure-Identical Statements&lt;/EM&gt;, button &lt;EM&gt;Absolute &amp;lt;-&amp;gt; Relative Values&lt;/EM&gt; &amp;nbsp;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_IconAbsRel.png" height="18" width="19" /&gt; toggles between these options for columns&amp;nbsp;&lt;EM&gt;Duration&lt;/EM&gt;, &lt;EM&gt;CPU Time&lt;/EM&gt;, &lt;EM&gt;Records&lt;/EM&gt;, and &lt;EM&gt;Executions&lt;/EM&gt;.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;Button &lt;EM&gt;Component Hierarchy&lt;/EM&gt; &amp;nbsp;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_IconComponentHierarchy.png" height="18" width="22" /&gt;&amp;nbsp;enhances the list of the &lt;EM&gt;Table Accesses &lt;/EM&gt;(Fig. 5). It groups the accessed tables by their application component (levels 0 and 1 are supported, level 0 is the default, buttons&amp;nbsp; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_IconComponentHierarchyLevel1.png" height="18" width="19" /&gt; or&amp;nbsp; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_IconComponentHierarchyLevel0.png" height="18" width="19" /&gt; toggle between the levels), and additionally shows the tables’ short descriptions from the ABAP data dictionary. For each application component, absolute and relative subtotals of the duration, the number of records, and the number of executions are given separately for the statement categories (&lt;CODE&gt;SELECT&lt;/CODE&gt;, &lt;CODE&gt;INSERT&lt;/CODE&gt;, &lt;CODE&gt;UPDATE&lt;/CODE&gt;, &lt;CODE&gt;DELETE&lt;/CODE&gt;; buffer accesses), and across all categories. &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_Table-Accesses_ApplicationComponentHierarchy-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;Figure 5: The &lt;STRONG&gt;Application &lt;/STRONG&gt;&lt;EM&gt;&lt;STRONG&gt;Component Hierarchy&lt;/STRONG&gt; view augments the &lt;/EM&gt;list of &lt;STRONG&gt;Table Accesses&lt;/STRONG&gt; (Fig. 4) by including the tables' application components and descriptions. With this additional information you can better understand why the tables are accessed when the application executes. The grouping by application component helps you to judge the run time contributions of the components.&lt;/P&gt;&lt;BR /&gt;
Use this enriched list of &lt;EM&gt;Table Accesses&lt;/EM&gt; to understand the software domains used—either directly or via intermediary frameworks—by your application, and to assess how much they impact your application's performance. It may also uncover unnecessary accesses, which you can eliminate without breaking your application's functional correctness.&lt;BR /&gt;
&lt;H1 id="toc-hId-244558326"&gt;Trace Overview&lt;/H1&gt;&lt;BR /&gt;
The &lt;EM&gt;Trace Overview&lt;/EM&gt; (Fig. 6) provides a quality control of the trace, and also a high-level analysis to indicate potential problem areas. Use this aggregation option to convince yourself that the trace is reliable and to obtain a quick survey of&amp;nbsp; the variety of recorded statements. This may give you some guidance for more detailed analyses.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_TraceOverview.png" /&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 6:&lt;/STRONG&gt; The &lt;STRONG&gt;Trace Overview&lt;/STRONG&gt; evaluates the trace's technical quality, and identifies performance bugs.&lt;/P&gt;&lt;BR /&gt;
It is divided into several areas:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;At the top, the main characteristics of the system are shown. This corresponds to the situation when and where the &lt;EM&gt;Trace Overview&lt;/EM&gt; was called. It is not necessarily related to the circumstances in which the application was executed and traced. This is particularly true for old traces from the trace directory, and even more so for traces imported from other systems.&lt;BR /&gt;
Then, the time intervals between start and end of the trace analysis period and between the first and the last trace records are compared. A large discrepancy may indicate that the trace is incomplete.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The next part evaluates the trace’s technical quality and reliability. If it contains &lt;CODE&gt;ROLLBACK&lt;/CODE&gt;s, &lt;CODE&gt;OPEN&lt;/CODE&gt; operations, or SQL statements that load content into the table buffer on the application server instance, you have not executed enough pre-runs of your application before recording the trace. The &lt;EM&gt;Trace Overview&lt;/EM&gt; then advises you to &lt;!--StartFragment --&gt;&lt;EM&gt;Consider re-recording the trace&lt;SPAN class="L0S55"&gt;. B&lt;/SPAN&gt;efore doing so&lt;SPAN class="L0S55"&gt;, &lt;/SPAN&gt;execute the application several &lt;SPAN class="L0S52"&gt;times&lt;/SPAN&gt;&lt;SPAN class="L0S55"&gt;.&lt;/SPAN&gt;&lt;/EM&gt; Typically, you want to analyze and eventually optimize the repeated executions of your applications. For them, there should not be any &lt;CODE&gt;ROLLBACK&lt;/CODE&gt;s. Also, all SQL statements should already be in the database server’s statement cache so that no &lt;CODE&gt;OPEN&lt;/CODE&gt; operation is needed, and the table buffer should contain all necessary rows.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The following region condenses the trace by the records’ types (SQL, BUF, ENQ, ...), and within the types resolves the main statement categories. Values for &lt;EM&gt;Executions&lt;/EM&gt;, &lt;EM&gt;Duration&lt;/EM&gt;, and &lt;EM&gt;Records&lt;/EM&gt; are given as absolute numbers and as percentages of the respective totals.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Finally, the trace is analyzed for violations of common best practices to identify problematic or suspicious patterns like unnecessary accesses to the persistence layer, e.g., &lt;CODE&gt;SELECT&lt;/CODE&gt;s for buffered tables or redundant DB accesses. &lt;SPAN class="L0S55"&gt;Additionally, the SQL trace records are checked by Code Inspector to find statements &lt;/SPAN&gt;whose access &lt;SPAN class="L0S52"&gt;times&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class="L0S52"&gt;to&amp;nbsp;&lt;/SPAN&gt;the persistence may erroneously depend &lt;SPAN class="L0S52"&gt;on &lt;/SPAN&gt;the&amp;nbsp;amount&amp;nbsp;&lt;SPAN class="L0S52"&gt;of&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class="L0S52"&gt;data&amp;nbsp;&lt;/SPAN&gt;persisted. This is typically a consequence of inadequate index support.&amp;nbsp;&lt;SPAN class="L0S55"&gt;&lt;SPAN class="L0S55"&gt;&lt;BR /&gt;
One section also deals with accesses to CDS views, to ensure that analytical CDS views are not used in transactional applications. If the trace contains SQL statements that access transactional CDS views, this section also suggest that you verify the modelling of these views. It must guarantee that SQL queries using them have response times and CPU consumptions independent of the data volume saved in the underlying tables.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;H1 id="toc-hId-48044821"&gt;Sizing Information&lt;/H1&gt;&lt;BR /&gt;
The &lt;EM&gt;Sizing Information&lt;/EM&gt; (Fig. 7) covers only changing database accesses, specifically &lt;CODE&gt;INSERT&lt;/CODE&gt;s, &lt;CODE&gt;DELETE&lt;/CODE&gt;s, and &lt;CODE&gt;MODIFY&lt;/CODE&gt;s. It estimates the impact of the corresponding SQL statements recorded in the trace on the data volume stored in the database. This provides important input for correctly sizing the storage capacity of the production system landscapes where the application will be executed.&lt;BR /&gt;
Your storage system sizing must be based on a trace that covers the entire business process with all user interaction steps from end to end. Do not apply any filter conditions while recording the trace.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_SizingInformation-2.png" /&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 7: &lt;/STRONG&gt;The &lt;STRONG&gt;Sizing Information &lt;/STRONG&gt;calculates rough estimates for the change of the data volume stored in the database caused by the statements recorded in the trace. Uncertainties are produced by not knowing whether &lt;CODE&gt;MODIFY&lt;/CODE&gt;s have added new rows or changed existing rows. Another source of uncertainty is related to table fields of types whose sizes are not statically predetermined.&lt;/P&gt;&lt;BR /&gt;
The top of the &lt;EM&gt;Sizing Information&lt;/EM&gt; contains the main characteristics of the system, identical to the top row in the &lt;EM&gt;Trace Overview&lt;/EM&gt;&amp;nbsp;(Fig. 6).&lt;BR /&gt;
Section &lt;EM&gt;Number of &lt;CODE&gt;INSERT&lt;/CODE&gt;s, &lt;CODE&gt;MODIFY&lt;/CODE&gt;s, and &lt;CODE&gt;DELETE&lt;/CODE&gt;s per Table&lt;/EM&gt;&amp;nbsp;alphabetically lists the database tables affected by &lt;CODE&gt;INSERT&lt;/CODE&gt;, &lt;CODE&gt;DELETE&lt;/CODE&gt;, or &lt;CODE&gt;MODIFY&lt;/CODE&gt; statements, and shows the numbers of rows affected by statements in these categories. Because a &lt;CODE&gt;MODIFY&lt;/CODE&gt; can either insert new rows into a database table or update existing rows, two values per table are calculated for the overall net number of changed rows: The difference of &lt;CODE&gt;INSERT&lt;/CODE&gt;s and &lt;CODE&gt;DELETE&lt;/CODE&gt;s considers all &lt;CODE&gt;MODIFY&lt;/CODE&gt;s as updates of existing rows. This is a lower limit for the net number of rows created by the application. The opposite approach treats all &lt;CODE&gt;MODIFY&lt;/CODE&gt;s as if they insert new rows: It uses the sum of &lt;CODE&gt;INSERT&lt;/CODE&gt;s and &lt;CODE&gt;MODIFY&lt;/CODE&gt;s minus the &lt;CODE&gt;DELETE&lt;/CODE&gt;s to obtain an upper limit for the net number of new rows in each table. The &lt;EM&gt;Sizing Information&lt;/EM&gt; does not consider &lt;CODE&gt;UPDATE&lt;/CODE&gt;s because they never add rows to a database table.&lt;BR /&gt;
The next area, &lt;EM&gt;Size of Tables, Primary Keys, and Secondary Indexes,&lt;/EM&gt; summarizes the static sizes in Bytes of the changed tables, including their indexes. It also indicates whether tables or indexes contain fields of type &lt;CODE&gt;LRAW&lt;/CODE&gt; (&lt;CODE&gt;X&lt;/CODE&gt; in column &lt;EM&gt;LRAW&lt;/EM&gt;) or of types &lt;CODE&gt;STRING&lt;/CODE&gt;, &lt;CODE&gt;RAWSTRING&lt;/CODE&gt;, or &lt;CODE&gt;TEXT&lt;/CODE&gt;&amp;nbsp;(&lt;CODE&gt;X&lt;/CODE&gt; in column &lt;EM&gt;VAR&lt;/EM&gt;). The size of the content of these fields is not known statically and taken to be 0, acting as a lower limit. Finally, this area contains the tables' descriptions from the ABAP data dictionary.&lt;BR /&gt;
Based on this information, section &lt;EM&gt;Estimation of Data Volume Added&lt;/EM&gt; approximates the change to the database's overall size by the statements recorded in the trace: For each table its length plus the lengths of its indexes are summed up. These table-specific sums are then multiplied by either number of changed rows (as explained above) and the resulting sets of products are totalled and given in Bytes, kBytes, and MBytes. Typically, these values are lower limits for the change in the stored data volume, but in some situations may be overestimates. To guard against negative consequences of storage system under-sizing, you should always consider them lower limits, and try to assess the additional impact of the table fields whose sizes are not statically known. From previous experience, you may know their average size in typical production systems.&lt;BR /&gt;
&lt;H1 id="toc-hId--148468684"&gt;Individual Records&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;So far, this blog post was all about aggregating several &lt;EM&gt;Trace Main Records&lt;/EM&gt; that share some common properties. But you can also move in the opposite direction. For trace types SQL and BUF, the &lt;EM&gt;Trace Main Records&lt;/EM&gt; are already combinations of individual &lt;EM&gt;Trace Single Records&lt;/EM&gt;, which represent low-level operations involved in the processing of the database or buffer accesses. From the list of &lt;EM&gt;Trace Main Records&lt;/EM&gt;, button &lt;EM&gt;Display Individual Records &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_IconIndividualRecords.png" height="18" width="22" /&gt;&lt;/EM&gt; takes you to the &lt;EM&gt;Trace Single Records &lt;/EM&gt;(Fig. 8). Table 5 explains the columns that are not in the &lt;EM&gt;Trace Main Records&lt;/EM&gt;.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Aggregate_SingleRecords.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 8:&lt;/STRONG&gt; The chronologically sorted list of &lt;STRONG&gt;Trace Single Records&lt;/STRONG&gt; shows the individual trace records without any aggregation. The three selected entries contribute to the processing of one SQL statement, and are combined into one &lt;STRONG&gt;Trace Main Record&lt;/STRONG&gt; with the &lt;STRONG&gt;Start Time&lt;/STRONG&gt; of the first entry (cf. Fig. 1).&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;TABLE style="width: 100%;border-collapse: collapse" border="1"&gt;&lt;CAPTION&gt;&lt;STRONG&gt;Table 5:&lt;/STRONG&gt; &lt;EM&gt;Fields in the default layout of the list of &lt;STRONG&gt;Trace Single Records&lt;/STRONG&gt;&amp;nbsp;that are not also part of the &lt;STRONG&gt;Trace Main Records&lt;/STRONG&gt;.&lt;/EM&gt;&lt;/CAPTION&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR&gt;&lt;BR /&gt;
&lt;TD style="width: 16.88%"&gt;&lt;EM&gt;Instance Name&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 83.12%"&gt;Application server instance where the statement was triggered.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR&gt;&lt;BR /&gt;
&lt;TD style="width: 16.88%"&gt;&lt;EM&gt;Operation&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 83.12%"&gt;Operation that was executed.&lt;BR /&gt;
(RFC, HTTP: &lt;CODE&gt;Client&lt;/CODE&gt; or &lt;CODE&gt;Server&lt;/CODE&gt;;&lt;BR /&gt;
APC: executed action, protocol, path, port, sent and received data in Byte)&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR&gt;&lt;BR /&gt;
&lt;TD style="width: 16.88%"&gt;&lt;EM&gt;Return Code&lt;/EM&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 83.12%"&gt;Return code of the executed operation.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;/TABLE&gt;&lt;BR /&gt;
The &lt;EM&gt;Trace Single Records&lt;/EM&gt; are sorted chronologically. The main value of this full resolution view on the trace records is mostly as an entry point to a technical analysis of how the database server or the buffers on the application server instances have handled table accesses via (Open) SQL statements. Investigations from a business logic perspective hardly ever work with the &lt;EM&gt;Trace Single Records&lt;/EM&gt;.&lt;BR /&gt;
&lt;H1 id="toc-hId--344982189"&gt;Summary&lt;/H1&gt;&lt;BR /&gt;
Compared to the default list of chronologically sorted &lt;EM&gt;Trace Main Records&lt;/EM&gt;, &lt;STRONG&gt;the various aggregation levels offered by &lt;CODE&gt;ST05&lt;/CODE&gt; greatly improve its capabilities to analyze traces&lt;/STRONG&gt; in an efficient way.&lt;BR /&gt;
&lt;BR /&gt;
The high-level &lt;EM&gt;Trace Overview&lt;/EM&gt; provides a very basic quality control of the trace recording. It can also identify performance bugs of the application, and it signals suspicious database accesses.&lt;BR /&gt;
The &lt;EM&gt;Table Accesses&lt;/EM&gt; view indicates with which tables your application works and what categories of statements it uses on these tables. Use it with your knowledge of the underlying business logic to detect unnecessary or expensive table accesses.&lt;BR /&gt;
The list of &lt;EM&gt;Structure-Identical Statements&lt;/EM&gt; focusses on statements with a common form and indicates slow statements or statements that are better handled by the application server instances' buffers. The list of &lt;EM&gt;Value-Identical Statements&lt;/EM&gt; concentrates even stronger on redundant, therefore superfluous, statements with the same bind variable values. You must eliminate them to accelerate your application and to take load away from the central database server.&lt;BR /&gt;
The &lt;EM&gt;Sizing Information&lt;/EM&gt; has a different objective and supports the forecast of the required storage capacity by estimating how much the changing SQL statements of an application change the&amp;nbsp; persisted data volume.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/st05-aggregate-trace-records/ba-p/13569482"/>
    <published>2023-05-17T11:23:04+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/st05-analyze-individual-trace-records/ba-p/13563513</id>
    <title>ST05: Analyze Individual Trace Records</title>
    <updated>2023-06-30T11:40:01+02:00</updated>
    <author>
      <name>ManfredMensch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165193</uri>
    </author>
    <content>This is—for the time being—the last blog post in my series &lt;A href="https://blogs.sap.com/2023/02/24/use-st05-to-monitor-the-communication-of-the-abap-work-process-with-external-resources/" target="_blank" rel="noopener noreferrer"&gt;Use ST05 to Analyze the Communication of the ABAP Work Process with External Resources&lt;/A&gt;. Previous blog posts in this sequence have mostly dealt with the &lt;CODE&gt;ST05&lt;/CODE&gt; tool itself, or with complete traces recorded for an entire end-to-end business process or at least for a whole user interaction. Now it is time to focus on individual trace records, representing statements or communication events triggered by your application. Typically you want to concentrate on those with a long duration or with a high resource consumption. They have the biggest impact on your application's performance and scalability. You should direct your optimization efforts to them.&lt;BR /&gt;
&lt;BR /&gt;
The best entry point for such a project is the aggregated list of &lt;EM&gt;Structure-Identical Statements&lt;/EM&gt; (Fig. 1). I have covered it in my post &lt;A href="https://blogs.sap.com/2023/05/17/st05-aggregate-trace-records/" target="_blank" rel="noopener noreferrer"&gt;ST05: Aggregate Trace Records&lt;/A&gt;. This list sorts the statements descending by their &lt;EM&gt;Duration&lt;/EM&gt;. The overall slowest statements (considering all their aggregated executions) are at the top of the list. If you are more concerned about &lt;EM&gt;HANA CPU Time&lt;/EM&gt; or &lt;EM&gt;HANA Memory&lt;/EM&gt; consumption, re-sort the list according to these values. In any case, you want to work on the list's first few records.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/ST05_Analyze_StructureIdenticalRecords.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 1:&lt;/STRONG&gt;&amp;nbsp;The list of&amp;nbsp;&lt;STRONG&gt;Structure-Identical Statements&lt;/STRONG&gt; summarizes &lt;STRONG&gt;Trace Main Records&lt;/STRONG&gt; for statements with the same structure, but potentially distinct values of bind variables. By default, the list is sorted descending by &lt;STRONG&gt;Duration&lt;/STRONG&gt;. This list is the recommended starting point for an optimization project that focuses on the most expensive communication events triggered by your application.&lt;BR /&gt;
The subsequent discussions use the marked SQL trace record as an example.&lt;/P&gt;&lt;BR /&gt;
Before diving into a thorough analysis of how a statement was processed and how you can optimize it, ask yourself whether it is really required. If the statement contributes neither to your application's business logic nor to the technical frameworks employed by the application, you shall remove it. &lt;STRONG&gt;Elimination of unnecessary statements is always the best optimization strategy—and often the easiest.&lt;/STRONG&gt; Statement tuning is meaningful only for essential statements.&lt;BR /&gt;
&lt;H1 id="toc-hId-833920840"&gt;Statement Details&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;The &lt;EM&gt;Statement&lt;/EM&gt; field in all types of trace lists is always strongly abbreviated. For a trace record representing a statement that you have confirmed as essential for your application, you can display all of the statement's details by clicking button &lt;EM&gt;Statement &lt;/EM&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Analyze_IconDetails.png" height="18" width="22" /&gt;, available for the &lt;EM&gt;Trace Single Records&lt;/EM&gt;, the &lt;EM&gt;Trace Main Records&lt;/EM&gt;, the &lt;EM&gt;Structure-Identical Statements&lt;/EM&gt;, and the &lt;EM&gt;Value-Identical Statements&lt;/EM&gt;. Alternatively, double-click the &lt;EM&gt;Statement&lt;/EM&gt; field. Fig. 2 shows the &lt;EM&gt;Statement Details&lt;/EM&gt; of the SQL trace record marked in Fig. 1. (The result depends on the type of trace record.)&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/ST05_Analyze_StatementDetails-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 2:&lt;/STRONG&gt; &lt;STRONG&gt;Statement Details&lt;/STRONG&gt; for the SQL trace record highlighted in Fig. 1. The left panel shows the default option &lt;STRONG&gt;With Variable Names&lt;/STRONG&gt; of button &lt;STRONG&gt;Statement&lt;/STRONG&gt;. Bind variables are shown as question marks with an orange background. (Other database platforms may use different place holders.) Their types and values are listed separately in section &lt;STRONG&gt;Variables&lt;/STRONG&gt;. The right panel displays the alternative &lt;STRONG&gt;With Variable Values&lt;/STRONG&gt;, where the bind variables have been replaced by the actual values.&lt;BR /&gt;
Navigation to the &lt;STRONG&gt;Statement Details&lt;/STRONG&gt; from an aggregated trace record list (&lt;STRONG&gt;Structure-Identical Statements&lt;/STRONG&gt; or &lt;STRONG&gt;Value-Identical Statements&lt;/STRONG&gt;) takes specific values (e.g., for bind variables in the case of an SQL trace record) from the first contributing record.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;For an SQL trace record, the &lt;EM&gt;Statement Details&lt;/EM&gt; display the SQL statement as it was sent from the ABAP work process to the database server for execution. The statement's implementation, e.g., as Open SQL, in your ABAP source code may be different (e.g., it will typically not have an explicite &lt;CODE&gt;WHERE&lt;/CODE&gt; clause condition on the &lt;CODE&gt;MANDT&lt;/CODE&gt; table field). This is the main benefit of the &lt;EM&gt;Statement Details&lt;/EM&gt; display: It enables you to understand how the database interface in the ABAP work process interpreted your implementation, and what the database really had to do. As the application's developer you are familiar with its statements from the design time and implementation time perspective. The &lt;EM&gt;Statement Details&lt;/EM&gt; give you the run time view which helps you to verify that the statement sent to and processed by the database fully matches the intended purpose.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;No measurement values (e.g., for elapsed time, consumed resources, or number of processed table rows) are included in the &lt;EM&gt;Statement Details&lt;/EM&gt; for an SQL trace record. This also holds for BUF trace records, while details for trace records of the other types do include some measurements.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H1 style="margin-top: 0.5cm" id="toc-hId-637407335"&gt;DDIC Information&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;A full analysis and understanding of statements needs to consider the declarations and technical settings of the objects affected by them. For trace records of types SQL or BUF, a click on button &lt;EM&gt;DDIC Information &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/ST05_Analyze_IconDDIC.png" height="18" width="19" /&gt;&lt;/EM&gt;, or a double-click on the &lt;EM&gt;Object Name&lt;/EM&gt; field, produces a summary of the &lt;EM&gt;ABAP Dictionary Information&lt;/EM&gt; for the table or view (Fig. 3). If the trace record corresponds to an SQL statement that joins several tables, an intermediate popup enables you to select an individual table. From the &lt;EM&gt;ABAP Dictionary Information&lt;/EM&gt;, button &lt;EM&gt;Display Table Fields&lt;/EM&gt; takes you to the ABAP Data Dictionary transaction &lt;CODE&gt;SE11&lt;/CODE&gt; to look at the complete declaration, including primary key fields, secondary indexes, and buffer settings. Or you jump immediately to either all available indexes, or to a selected index via buttons &lt;EM&gt;Display All Index Fields&lt;/EM&gt; or &lt;EM&gt;Display Fields of Selected Index&lt;/EM&gt;, respectively. For ENQ trace records, the lock object is shown in transaction &lt;CODE&gt;SE11&lt;/CODE&gt;. DDIC information does not exist for the other trace types.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/ST05_Analyze_DDIC-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 3:&lt;/STRONG&gt; The &lt;EM&gt;&lt;STRONG&gt;ABAP Dictionary Information&lt;/STRONG&gt; s&lt;/EM&gt;ummarizes a table's or view's declaration and technical settings as maintained in the ABAP Data Dictionary. From this summary, you can navigate into transaction &lt;CODE&gt;SE11&lt;/CODE&gt; to see all details.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;Based on the &lt;EM&gt;DDIC Information&lt;/EM&gt;, you can judge whether accesses to the object are really required for your application. When you combine the statement (e.g., as seen in the &lt;EM&gt;Statement Details&lt;/EM&gt;) with the available indexes, you may recognize potential mismatches between the &lt;CODE&gt;WHERE&lt;/CODE&gt; clause and the existing indexes. Such mismatches may cause excessive run time or resource consumption while processing the statement.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H1 style="margin-top: 0.5cm" id="toc-hId-440893830"&gt;ABAP Source Code&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;As already mentioned, the &lt;EM&gt;Statement Details&lt;/EM&gt; show the SQL statement as executed by the database server. To compare this with how the statement was implemented in your application's source code, click on button &lt;EM&gt;ABAP Call Location&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/ST05_Analyze_IconABAP.png" height="18" width="19" /&gt;. This takes you to the correct position in the appropriate tool of the ABAP development workbench (i.e., Class Builder &lt;CODE&gt;SE24&lt;/CODE&gt;, Function Builder &lt;CODE&gt;SE37&lt;/CODE&gt;, ABAP Editor &lt;CODE&gt;SE38&lt;/CODE&gt;). There you can apply optimizations, locally to the source code or—after forward navigation into the ABAP Dictionary &lt;CODE&gt;SE11&lt;/CODE&gt;—globally to the accessed object.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H1 style="margin-top: 0.5cm" id="toc-hId-244380325"&gt;ABAP Call Hierarchy&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;In my previous blog post &lt;A href="https://blogs.sap.com/2023/02/24/st05-basic-use/" target="_blank" rel="noopener noreferrer"&gt;ST05: Basic Use&lt;/A&gt; I have indicated that the immediate caller of the traced communication event may not be the ABAP source code location where you as a business application developer can apply optimizations. Rather, it may be nested inside some software framework called directly or indirectly by your application's ABAP code. To see the full ABAP call stack (Fig. 4) click button &lt;EM&gt;Call Hierarchy&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/ST05_Analyze_IconCallHierarchy.png" height="18" width="19" /&gt;.&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/ST05_Analyze_CallHierarchy.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 4:&lt;/STRONG&gt; The&amp;nbsp;&lt;STRONG&gt;ABAP Call Hierarchy&lt;/STRONG&gt; for the SQL statement corresponding to the trace record marked in Fig. 1 indicates that only the ABAP events at levels 26 to 30 are specific to the business application. Everything else is framework coding.&lt;/P&gt;&lt;BR /&gt;
Use the &lt;EM&gt;ABAP Call Hierarchy&lt;/EM&gt; to verify that your application coding invokes the framework which eventually triggers the statement in the best possible way, and to confirm that calls from frameworks to your source code are fully optimized. Click on any entry in this list to navigate to the corresponding source code.&lt;BR /&gt;
&lt;H1 style="margin-top: 0.5cm" id="toc-hId-47866820"&gt;Data Access Strategy&lt;/H1&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;For a deep understanding of an SQL statement's run time behavior—duration as well as resource consumption—you need a very close look at how the database server has executed the statement which you have formulated in a declarative rather than imperative way. Based on a detailed insight you can derive optimization strategies. Ideally, they work locally on the expensive statement so that they cannot have side effects on any other statement. Be very cautious with global changes to the table's or view's declaration, indexes or technical settings. They may improve the performance or resource consumption of the current statement, but may negatively impact other statements which also access the table or view.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H2 id="toc-hId--19563966"&gt;Execution Plan&lt;/H2&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;The standard option &lt;EM&gt;Execution Plan &lt;/EM&gt;(button &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/ST05_Analyze_IconExecutionPlan.png" height="18" width="22" /&gt;) is available for all supported database platforms. Its upper area shows the SQL statement with variable names, and the lower area indicates, in a database specific format, how the database server has handled the statement. This part is often fairly terse and technical and already for only moderately complex statements not easy to digest.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/ST05_Analyze_ExecutionPlan.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 5:&lt;/STRONG&gt; The&amp;nbsp;&lt;STRONG&gt;Execution Plan&lt;/STRONG&gt; for the SQL statement corresponding to the trace record marked in Fig. 1 displays at the top the statement, similar to the option &lt;STRONG&gt;With Variable Names&lt;/STRONG&gt; of the &lt;STRONG&gt;Statement Details&lt;/STRONG&gt; (Fig. 2). This part is common to all supported database platforms. It is followed by the database specific representation of how the SQL statement was processed on the database server (here SAP HANA 2.00).&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;The &lt;EM&gt;Execution Plan&lt;/EM&gt; displays the nested hierarchy of the applied operations with their options and conditions and the objects on which they were used. The buttons offered in the application toolbar depend on the underlying database platform and may reveal some additional facts (e.g., estimates on the sizes of the involved tables and the sizes of the operation's output) which add significant analysis capabilities.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H2 id="toc-hId--216077471"&gt;SQL Analyzer Tool for SAP HANA&lt;/H2&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;If your system uses SAP HANA, you are better off with the graphical &lt;EM&gt;SQL Analyzer Tool for SAP HANA&lt;/EM&gt;. This requires that you have&amp;nbsp;&lt;A href="https://code.visualstudio.com/" target="_blank" rel="nofollow noopener noreferrer"&gt;Visual Studio Code&lt;/A&gt; installed on your local machine and that you have the &lt;A href="https://marketplace.visualstudio.com/items?itemName=SAPSE.vsc-extension-sa" target="_blank" rel="nofollow noopener noreferrer"&gt;SQL Analyzer Tool for SAP HANA&lt;/A&gt; extension added to it. For a seamless integration with &lt;CODE&gt;ST05&lt;/CODE&gt;, you also should set parameter &lt;CODE&gt;HDB_OPEN_STUDIO&lt;/CODE&gt; (&lt;EM&gt;Open HANA Studio or SQL Analyzer when a Planviz is created&lt;/EM&gt;) to &lt;CODE&gt;X&lt;/CODE&gt; in your user profile, and set Visual Studio Code as the default app for &lt;CODE&gt;.plv&lt;/CODE&gt; files. Then a click on &lt;EM&gt;HANA SQL Analyzer&lt;/EM&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/ST05_Analyze_IconPlanViz.png" height="18" width="22" /&gt; will create an appropriate plan file, download it to your local machine's hard disk (into your SAP GUI's documents folder), and from there open it with the extension &lt;EM&gt;SQL Analyzer Tool for SAP HANA&lt;/EM&gt; (Figs. 6 and 7). Before the plan file creation, a popup asks you to specify (either confirm or overwrite) session variables. These are a kind of global variables set in the ABAP user context and forwarded from there to the database server where they control the execution of SQL statements. When analyzing an SQL statement in &lt;CODE&gt;ST05&lt;/CODE&gt;, and creating its execution plan, the values for the session variables are retrieved from the &lt;CODE&gt;SET SESSION VARIABLE&lt;/CODE&gt; statements which have defined the values and which are recorded together with the SQL statement that you are analyzing.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/ST05_Analyze_SQLAnalyzer-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 6:&lt;/STRONG&gt; The &lt;STRONG&gt;SAP HANA SQL Analyzer&lt;/STRONG&gt; extension for &lt;STRONG&gt;Visual Studio Code&lt;/STRONG&gt; is the tool of choice for understanding how the SAP HANA database has executed an SQL statement recorded in a trace. The &lt;STRONG&gt;Overview&lt;/STRONG&gt; organizes significant information in dedicated cards.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/ST05_Analyze_SQLAnalyzer_2.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="font-style: italic;font-family: SAPRegular, 'Helvetica Neue', Arial, sans-serif;text-align: left"&gt;&lt;STRONG&gt;Figure 7:&lt;/STRONG&gt; The &lt;STRONG&gt;Plan Graph&lt;/STRONG&gt; in the &lt;STRONG&gt;HANA SQL Analyzer&lt;/STRONG&gt; represents the execution of the SQL statement as a network graph of the involved plan operators and their connections.&lt;/P&gt;&lt;BR /&gt;
The &lt;EM&gt;SQL Analyzer&lt;/EM&gt;'s main section is the analysis view. Its three tabs support different perspectives on the SQL statement and its execution.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;The &lt;EM&gt;Overview&lt;/EM&gt; tab (Fig. 6) summarizes the most important information in several cards. The main cards for performance and scalability investigations are:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;EM&gt;Context&lt;/EM&gt;:&lt;BR /&gt;
Displays the statement with its conditions, variables, and parameters. &lt;SPAN class="ui-provider fz b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr"&gt;For more detailed information, go to the&amp;nbsp;&lt;I&gt;SQL&lt;/I&gt; tab.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;EM&gt;Execution Summary&lt;/EM&gt;:&lt;BR /&gt;
&lt;SPAN class="ui-provider fz b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr"&gt;Provides details such as compilation and execution times, peak memory usage, number of operators, and connections.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;EM&gt;Dominant Plan Operators&lt;/EM&gt;:&lt;BR /&gt;
Lists the top 5 operators by execution time.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;EM&gt;Data Usage&lt;/EM&gt;:&lt;BR /&gt;
Shows the size of the result set and the number of accessed tables.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The &lt;EM&gt;Plan Graph&lt;/EM&gt; tab (Fig. 7) provides a visualization of the SQL query plan. It shows the data flow from bottom to top: Data retrieval from tables is at the bottom, and the query result is at the top. Along the path, plan operators achieve the transformations to obtain the desired output. Operators working concurrently, i.e., in parallel, are positioned next to each other. Nodes in the &lt;EM&gt;Plan Graph&lt;/EM&gt; represent physical or logical operators, and contain associated information, especially a breakdown of the operator's execution time. The edges connecting the nodes indicate the number of rows transferred between the two operators. The critical path is determined by the chain of operators with the biggest impact on the query performance. Its edges are shown in red.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The &lt;EM&gt;SQL&lt;/EM&gt; tab shows the SQL statement with the full session context and the parameters with their types and values. With this information, the SQL query can be re-executed under identical conditions.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
The property pane below the analysis view contains 8 tabs where you can focus on small details of the statement's execution to get a very thorough understanding and to discover optimization approaches.&lt;BR /&gt;
&lt;H1 style="margin-top: 0.5cm" id="toc-hId--541673695"&gt;Summary&lt;/H1&gt;&lt;BR /&gt;
With a monitoring tool like my transaction &lt;CODE&gt;STATS&lt;/CODE&gt; (refer to my blog post&amp;nbsp;&lt;A href="https://blogs.sap.com/2021/12/23/measure-your-applications-performance-and-resource-consumption-evaluate-statistics-records-with-transaction-stats/" target="_blank" rel="noopener noreferrer"&gt;Measure your Application’s Performance and Resource Consumption: Evaluate Statistics Records with Transaction STATS&lt;/A&gt; for an introduction) you may discover that your application's performance is insufficient. Maybe your application is too slow or its resource consumption is too high. In either case, &lt;CODE&gt;STATS&lt;/CODE&gt; may indicate that the poor performance is caused by communication events triggered by your application. Then you would use my transaction &lt;CODE&gt;ST05&lt;/CODE&gt; to record a corresponding trace. Your application's most expensive communication events will be at the top of the appropriately sorted trace list—ideally you work with the list of &lt;EM&gt;Structure-Identical Statements&lt;/EM&gt;. With the various tools offered by &lt;CODE&gt;ST05&lt;/CODE&gt; you can&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;gain insight into the significance of the event for your application&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;inspect the statement's implementation in the ABAP source code&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;recognize the ABAP call stack that eventually triggered the event&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;review the database tables or views on which the statement operates&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;examine the statement as it was processed&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Based on this comprehensive information, you can derive optimization strategies which will improve your application's performance.&lt;BR /&gt;
&lt;H1 style="margin-top: 0.5cm" id="toc-hId--738187200"&gt;References&lt;/H1&gt;&lt;BR /&gt;
The official documentation for the SAP HANA SQL Analyzer is available at &lt;A href="https://help.sap.com/docs/HANA_SQL_ANALYZER/d1a813bf1e334989a33c0364cbb9dffa/e5681cd520e94c308e4c2594b2ad5db8.html?state=DRAFT" target="_blank" rel="noopener noreferrer"&gt;SQL Analyzer Tool for SAP HANA Guide&lt;/A&gt;.&lt;BR /&gt;
The&amp;nbsp;&lt;A href="https://help.sap.com/doc/e344ef1295b6433e88fe084c0768e1cd/2.0.07/en-US/SAP_HANA_Troubleshooting_and_Performance_Analysis_Guide_en.pdf" target="_blank" rel="noopener noreferrer"&gt;SAP HANA Troubleshooting and Performance Analysis Guide&lt;/A&gt; might also be helpful.&lt;BR /&gt;
The Open SAP course &lt;A href="https://open.sap.com/courses/hanasql1" target="_blank" rel="noopener noreferrer"&gt;A First Step Towards SAP HANA Query Optimization&lt;/A&gt; covers further techniques for SQL query performance analyses and optimizations.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/st05-analyze-individual-trace-records/ba-p/13563513"/>
    <published>2023-06-30T11:40:01+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/azure-monitor-for-sap-solutions-one-stop-shop-for-sap-technical-monitoring/ba-p/13572481</id>
    <title>Azure Monitor for SAP solutions One-stop-shop for SAP technical monitoring</title>
    <updated>2024-01-04T09:19:34+01:00</updated>
    <author>
      <name>Lakshhma9</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/176052</uri>
    </author>
    <content>Are you an SAP Customer/Partner/ISV seeking a seamless monitoring solution? In this blog, I introduce Microsoft's latest Monitoring solution—Azure Monitor for SAP Solutions—a user-friendly and plug-and-play tool.&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;What is Azure Monitor for SAP Solutions?&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;What is the architecture?&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;What can you monitor?&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;What are the other key capabilities of AMS?&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;What are pricing and regions available?&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;STRONG&gt;1. What is Azure Monitor for SAP Solutions?&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Azure Monitor for SAP solutions is a comprehensive technical monitoring tool tailored for businesses leveraging SAP applications on Microsoft Azure. This turnkey solution facilitates the collection of telemetry data from SAP NetWeaver, databases, Linux Pacemaker clusters, and Linux operating systems. Centralized within the Azure portal, this tool streamlines visual correlation and rapid troubleshooting, requiring just a few minutes for configuration without the need for customer infrastructure deployment or maintenance.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;2. What is the architecture?&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The following diagram shows, at a high level, how Azure Monitor for SAP solutions.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/azure-monitor-sap-architecture.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;AMS Architecture&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Monitoring SAP Systems:&lt;/STRONG&gt; Azure Monitor for SAP solutions allows monitoring of multiple components across various SAP systems in a virtual network.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Configurable Providers:&lt;/STRONG&gt; Configure providers for different components (e.g., HANA database, HA cluster, NetWeaver, DB2 and OS) to collect data.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Key Architecture Components:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Azure Portal: Access point.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Monitor Resource: Displays monitoring data.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Managed Resource Group: Automatic deployment with Azure Functions, Key Vault, Log Analytics Workspace, and Storage Account.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Visualization and Querying:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Azure Monitor workbooks for customizable visualizations. Pin items to the Azure dashboard for auto-refresh (max every 30 minutes).&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Use Kusto Query Language (KQL) for log queries in Log Analytics.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Detailed Architecture is available at &lt;A href="https://learn.microsoft.com/en-us/azure/sap/monitor/about-azure-monitor-sap-solutions#what-is-the-architecture" target="_blank" rel="nofollow noopener noreferrer"&gt;What is Azure Monitor for SAP solutions?&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;STRONG&gt;3. What can you monitor?&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;SAP HANA&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;CPU, memory, disk, and network use&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;HANA system replication&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;HANA backup&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;HANA host status&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Index server and name server roles&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Database growth&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Top tables&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;File system use&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;SAP NetWeaver&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;SAP system and application server availability, including instance process availability of:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Dispatcher&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;ICM&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Gateway&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Message server&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Enqueue server&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;IGS Watchdog&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Work process usage statistics and trends&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Enqueue lock statistics and trends&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Queue usage statistics and trends&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;SMON metrics (/SDF/SMON)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;SWNC workload, memory, transaction, user, and RFC usage (St03n)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Short dumps (ST22)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Object lock (SM12)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Failed updates (SM13)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;System log analysis (SM21)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Batch job statistics (SM37)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Outbound queues (SMQ1)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Inbound queues (SMQ2)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Transactional RFC (SM59)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;STMS change transport system metrics (STMS)&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;HA Pacemaker Cluster&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Node, resource, and SBD status&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Pacemaker location constraints&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Quorum votes and ring status&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Also see the metrics specification for ha_cluster_exporter.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;OS (Linux)&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;CPU use, fork count, running processes, and blocked processes.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Memory use and distribution among used, cached, and buffered.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Swap use, paging, and swap rate&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;File system usage, along with number of bytes read and written per block device.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Read/write latency per block device.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Ongoing I/O count and persistent memory read/write bytes.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Network packets in/out and network bytes in/out&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;IBM Db2 &amp;amp; Microsoft SQL Server&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Database availability&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Number of connections, logical reads, and physical reads&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Waits and current locks.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;CPU, memory, and disk use&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Host name, SQL instance name, and SAP system ID&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Batch requests, compilations, and page life expectancy over time&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Top 10 most expensive SQL statements over time&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Top 12 largest tables in the SAP system&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Problems recorded in the SQL Server error log.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Blocking processes and SQL wait statistics over time.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;STRONG&gt;4. What are the other key capabilities of AMS?&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;The &lt;STRONG&gt;SAP Landscape Monitor&lt;/STRONG&gt; is a one-stop destination to learn about the health of your entire SAP landscape. You can create a group of SAP systems based on the environment (e.g., Development, Production, etc.), application (e.g., ERP), or criticality and see the health of these systems based on the alerts that have been raised. You can also check alerts triggered by a group or a specific SAP system.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Screenshot-2023-12-29-013227.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;AMS Landscape Monitor&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H4 id="toc-hId-1222061981"&gt;&lt;STRONG&gt;5. What are Pricing and regions available&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;There is no licensing fee for Azure Monitor for SAP solutions. Customers pay for the infrastructure components that are deployed as part of the managed Azure Resource Group. Standard Azure prices are applicable for Azure Functions (Premium Linux), Azure Log Analytics, Storage, Key Vault, alerts, and notification groups.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Azure Monitor for SAP solutions is available in East US, East US 2, West US, West US 2, West US 3, Central US, South Central US, North Central US, West Central US, West Europe, North Europe, Australia Central, Australia East, Australia Southeast, South India, Southeast Asia, and East Asia.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId-1025548476"&gt;&lt;SPAN style="font-weight: bold;background: white"&gt;Learn more!&lt;/SPAN&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;SPAN style="color: #333333;background: white"&gt;To learn more, read &lt;/SPAN&gt;&lt;A href="https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/azure-monitor-overview" target="_blank" rel="nofollow noopener noreferrer"&gt;&lt;SPAN style="background: white"&gt;documentation&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN style="color: #333333;background: white"&gt;&amp;nbsp;or watch&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://aka.ms/AMSOverviewVideo" target="_blank" rel="nofollow noopener noreferrer"&gt;&lt;SPAN style="background: white"&gt;overview&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN style="color: #333333;background: white"&gt;&amp;nbsp;and&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://aka.ms/AMSDemoVideo" target="_blank" rel="nofollow noopener noreferrer"&gt;&lt;SPAN style="background: white"&gt;demo&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN style="color: #333333;background: white"&gt;&amp;nbsp;video.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;SPAN style="color: #333333;background: white"&gt;To get started, head over to&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://aka.ms/amspublicpreview" target="_blank" rel="nofollow noopener noreferrer"&gt;&lt;SPAN style="background: white"&gt;Microsoft Azure portal&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN style="color: #333333;background: white"&gt;&amp;nbsp;and create your first resource.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;SPAN style="color: #333333;background: white"&gt;Share your thoughts and feedback.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/azure-monitor-for-sap-solutions-one-stop-shop-for-sap-technical-monitoring/ba-p/13572481"/>
    <published>2024-01-04T09:19:34+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/basis-monitoring-amp-tcodes-with-key-notes/ba-p/13591678</id>
    <title>Basis Monitoring &amp; Tcodes with Key notes</title>
    <updated>2024-02-05T14:25:53.980000+01:00</updated>
    <author>
      <name>Williams43</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/779356</uri>
    </author>
    <content>&lt;P&gt;Hi All,&amp;nbsp;&lt;/P&gt;&lt;P&gt;I am thrilled to have the opportunity to connect with all of you through this blog.&lt;/P&gt;&lt;P&gt;The purpose of this blog is to aid newcomers in Basis in gaining knowledge about Basis-related Tcodes, including key notes and their usage and frequency.&lt;/P&gt;&lt;P&gt;I believe this will be beneficial for those who are beginning their careers in SAP Basis.&lt;/P&gt;&lt;P&gt;I wish you good luck and welcome to SAP Basis Team&lt;/P&gt;&lt;P&gt;The Daily Monitoring Basis-related Tcodes, their uses, and their related Tcodes are utilised for any future investigation.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Williams43_0-1706804899073.png" style="width: 744px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/58793i4CB3310AB78C7F03/image-dimensions/744x591?v=v2" width="744" height="591" role="button" title="Williams43_0-1706804899073.png" alt="Williams43_0-1706804899073.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Tcodes that pertain to operating systems and databases, their usage, and any future process.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Williams43_1-1706804947991.png" style="width: 742px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/58794i7E5F56EA3241CB97/image-dimensions/742x365?v=v2" width="742" height="365" role="button" title="Williams43_1-1706804947991.png" alt="Williams43_1-1706804947991.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The SAP Basis Admin is accountable for tuning performance. These Tcodes are associated with performance analysis at the application level.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Williams43_2-1706805022361.png" style="width: 746px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/58795i8A61F0C50689AC15/image-dimensions/746x389?v=v2" width="746" height="389" role="button" title="Williams43_2-1706805022361.png" alt="Williams43_2-1706805022361.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Ticketing tools vary widely between organizations, including SAP ITSM (SOLMAN), Non SAP (ServiceNow, Zendesk), and others.&lt;/P&gt;&lt;P&gt;User Management, Role Management, and Transport Management will receive the majority of daily ticketing. Here are the Tcodes that pertain to these areas.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Williams43_3-1706805139574.png" style="width: 744px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/58796i2E0110DFFF1343D9/image-dimensions/744x331?v=v2" width="744" height="331" role="button" title="Williams43_3-1706805139574.png" alt="Williams43_3-1706805139574.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Tcodes that pertain to SAP Software Maintenance and related OS and other tasks.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Williams43_4-1706805213692.png" style="width: 744px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/58797i9884C518C59B06AB/image-dimensions/744x536?v=v2" width="744" height="536" role="button" title="Williams43_4-1706805213692.png" alt="Williams43_4-1706805213692.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Programs that are useful for administrative tasks related to Basis.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Williams43_5-1706805251462.png" style="width: 742px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/58798i23076894A6D415DC/image-dimensions/742x407?v=v2" width="742" height="407" role="button" title="Williams43_5-1706805251462.png" alt="Williams43_5-1706805251462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Thank you for taking the time to read the blog.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;#SAPBasis #Basis &lt;a href="https://community.sap.com/t5/c-khhcw49343/Basis+Technology/pd-p/7bf2eaed-4604-44ae-bad7-d2d2d5c58c54" class="lia-product-mention" data-product="1129-1"&gt;Basis Technology&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/EWM+-+Basis/pd-p/192798129450263425409096799593312" class="lia-product-mention" data-product="941-1"&gt;EWM - Basis&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/NW+ABAP+Monitoring+Tools/pd-p/a414317d-3ddc-487c-9d84-af75d27c65f6" class="lia-product-mention" data-product="1010-1"&gt;NW ABAP Monitoring Tools&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+EarlyWatch+Alert/pd-p/f811a31e-b1e7-42ac-9f17-9051d8410d93" class="lia-product-mention" data-product="1192-1"&gt;SAP EarlyWatch Alert&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+HANA+Cloud%25252C+SAP+HANA+database/pd-p/ada66f4e-5d7f-4e6d-a599-6b9a78023d84" class="lia-product-mention" data-product="40-1"&gt;SAP HANA Cloud, SAP HANA database&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Advantage+Database+Server/pd-p/67838200100800005437" class="lia-product-mention" data-product="393-1"&gt;SAP Advantage Database Server&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/Oracle+Database/pd-p/266216885309448000234589693334884" class="lia-product-mention" data-product="258-1"&gt;Oracle Database&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA/pd-p/73554900100800000266" class="lia-product-mention" data-product="799-1"&gt;SAP S/4HANA&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+NetWeaver+Application+Server+for+SAP+S%25252F4HANA/pd-p/73554900100800000376" class="lia-product-mention" data-product="736-1"&gt;SAP NetWeaver Application Server for SAP S/4HANA&lt;/a&gt;&amp;nbsp; #Dailymonitoring &lt;a href="https://community.sap.com/t5/c-khhcw49343/NW+Java+Security+and+User+Management/pd-p/837756977247372160663651537216525" class="lia-product-mention" data-product="1021-1"&gt;NW Java Security and User Management&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/Defense+and+Security/pd-p/159367983329805292011158" class="lia-product-mention" data-product="275-1"&gt;Defense and Security&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SOLMAN+Setup%25252FConfiguration%25252FLMDB/pd-p/773921536755532122004239005965168" class="lia-product-mention" data-product="1098-1"&gt;SOLMAN Setup/Configuration/LMDB&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/NW+ABAP+Monitoring+Tools/pd-p/a414317d-3ddc-487c-9d84-af75d27c65f6" class="lia-product-mention" data-product="1010-2"&gt;NW ABAP Monitoring Tools&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SOLMAN+System+Monitoring/pd-p/212358834767912649313917434384826" class="lia-product-mention" data-product="1099-1"&gt;SOLMAN System Monitoring&lt;/a&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/basis-monitoring-amp-tcodes-with-key-notes/ba-p/13591678"/>
    <published>2024-02-05T14:25:53.980000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/st05-application-programming-interface/ba-p/13634607</id>
    <title>ST05: Application Programming Interface</title>
    <updated>2024-06-26T11:32:10.598000+02:00</updated>
    <author>
      <name>ManfredMensch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165193</uri>
    </author>
    <content>&lt;P&gt;After a little more than one year I am now adding one more blog post to my series&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://blogs.sap.com/2023/02/24/use-st05-to-monitor-the-communication-of-the-abap-work-process-with-external-resources/" target="_blank" rel="noopener noreferrer"&gt;Use ST05 to Analyze the Communication of the ABAP Work Process with External Resources&lt;/A&gt;&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;All previous blog posts in this sequence have assumed that you work interactively with dialog transaction &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05&lt;/FONT&gt;&lt;/STRONG&gt; to start and stop trace recording and to display and analyze the resulting traces. However, there may be circumstances where this approach is inconvenient, cumbersome, or outright impossible. Examples are requirements where you need to monitor regularly or even frequently the communication of multiple applications with external resources. This is certainly beneficial for the detection of regressions early in the development process so that you can counteract immediately. In other cases you may want to very restrictively limit the tracing to dedicated parts of your application which you suspect to use external entities in a way that impairs performance or scalability. In all these situations you want to use the API functions that come with the&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05&lt;/FONT&gt;&lt;/STRONG&gt; software. They are contained in function group &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_API&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;within SAP_BASIS, also known as ABAP Platform.&lt;/P&gt;&lt;P&gt;In this blog post I cover the most important of these API functions and describe their intended use. The focus is very much on the technicalities of using the APIs. Please refer to my other blog posts in the series for an explanation of the&amp;nbsp;semantics of the provided data.&lt;/P&gt;&lt;P&gt;The functions can be subdivided into three categories:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Functions that deal with the activation or deactivation of tracing.&lt;/LI&gt;&lt;LI&gt;Functions that retrieve trace records with a level of detail or aggregation that best supports your intended investigation.&lt;/LI&gt;&lt;LI&gt;Functions that permanently store trace records in the system's database or on your local hard disc.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-859810153"&gt;&lt;STRONG&gt;Trace Recording&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;Let me begin with functions related to writing the trace records, especially the complementary pair of functions to start and stop trace recording.&lt;/P&gt;&lt;H2 id="toc-hId-792379367"&gt;&lt;!--                                                       StartFragment                                                        --&gt;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;ST05_Activate_Trace&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;With this remote-enabled function you switch tracing on. Through the function's&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;IMPORTING&lt;/FONT&gt; &lt;/STRONG&gt;parameters you specify the communication interface you want to monitor, and you set filter criteria for the events to be covered. Functionally, the parameters cover everything that is available via the SAP GUI option &lt;EM&gt;Activate Trace with Filter&lt;/EM&gt; described in my blog post &lt;A href="https://blogs.sap.com/2023/03/08/st05-activate-trace-recording-with-filter/" target="_blank" rel="noopener noreferrer"&gt;Activate Trace Recording with Filter&lt;/A&gt;. Please visit this post for a more comprehensive explanation of the supported filter conditions.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TRACE_TYPES&amp;nbsp; TYPE&amp;nbsp; ST05_API_TRACE_TYPES&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;With this mandatory parameter you define the trace types, i.e., the communication channels, you want to monitor. Structure&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;ST05_API_TRACE_TYPES&lt;/STRONG&gt;&lt;/FONT&gt; contains Boolean fields (TRUE = 'X' ; FALSE = ' ') for all trace types supported by &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05&lt;/FONT&gt;&lt;/STRONG&gt; (SQL, BUF, ENQ, RFC, HTTP, APC, AMC), and additionally for the authorization trace (AUTH) covered by &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST01&lt;/FONT&gt;&lt;/STRONG&gt;. The fields are called &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&amp;lt;type&amp;gt;_ON&lt;/FONT&gt;&lt;/STRONG&gt;. At least one trace type must be selected, otherwise the call of the function ends with exception&amp;nbsp;&lt;!--                                                       StartFragment                                                        --&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;MISSING_TRACE_TYPE&lt;/STRONG&gt;&lt;/FONT&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;TRACE_FILTER&amp;nbsp; TYPE&amp;nbsp; ST05_API_TRACE_FILTER&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;This optional parameter allows you to precisely filter individual communication events triggered by the application which shall be traced. The default imposes no restrictions. The&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;TRACE_FILTER&lt;/STRONG&gt;&lt;/FONT&gt; consists of fields:&lt;/SPAN&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;CLIENT&amp;nbsp; TYPE&amp;nbsp; SYMANDT&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;This is very new. Previously, trace recording was not client-specific but always cross-client. Now (ABAP Release 9.12 (quarterly) / 8.16 (biennially&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;); ABAP platform 2408 (cloud) / 2025 (classic); Kernel Release 9.12) you can define the client via this field. With a closing wildcard (e.g., 00*) you can activate tracing on multiple clients matching the given pattern.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;TRACE_USER&amp;nbsp; TYPE&amp;nbsp; ST05_USER_NAME_PATTERN&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;This field limits the trace activation to the specified back-end user. Only&amp;nbsp;her or his activities are recorded. User name patterns with the asterisk&amp;nbsp;*&amp;nbsp;as a terminating wildcard character are supported.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TRANSACTION_CODE&amp;nbsp; TYPE&amp;nbsp; PTC_TRANSACTION_CODE&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;PROGRAM&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;TYPE&amp;nbsp; PTC_PROGRAM_NAME&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;RFC_FUNCTION&amp;nbsp; &amp;nbsp; &amp;nbsp; TYPE&amp;nbsp; ST05_RFC_FUNCTION_NAME&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;URL&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;TYPE&amp;nbsp; ST05_URL&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;With this group of four fields, you can&amp;nbsp;limit the captured events to those that are triggered while executing a particular application. Because this application must be at the very top of the call hierarchy, you may give a value for at most one of the fields. Patterns with the asterisk&amp;nbsp;*&amp;nbsp;as a terminating wildcard are allowed.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;WP_ID&amp;nbsp; TYPE&amp;nbsp; PTC_WP_ID&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;Setting the &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;WP_ID &lt;/FONT&gt;&lt;/STRONG&gt;field&amp;nbsp;confines the trace recording to events called from the given ABAP work process. This is hardly ever useful in an API call, i.e., there the benefit of this filter criterion is even smaller than in the SAP GUI dialog option &lt;EM&gt;Activate Trace with Filter&lt;/EM&gt;.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;INCLUDED_TABLES&amp;nbsp; TYPE&amp;nbsp; ST05_OBJECT_INCL_EXCL&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;EXCLUDED_TABLES&amp;nbsp; TYPE&amp;nbsp; ST05_OBJECT_INCL_EXCL&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;INCLUDE_MISSING_TABLE_NAME_ON&amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;For an SQL trace, you can&amp;nbsp;restrict the recording of SQL statements to those that work on certain database tables&amp;nbsp;(or database views, including CDS views). You may define up to 5 tables to be included. Similarly, you can exclude up to 5 database tables. Statements accessing these excluded tables will then not be recorded. For both options, you may filter on groups of tables by terminating entries in&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;fields &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;INCLUDED_TABLES &lt;/FONT&gt;&lt;/STRONG&gt;or &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;EXCLUDED_TABLES &lt;/FONT&gt;&lt;/STRONG&gt;with an asterisk&amp;nbsp;*. For implemented Open SQL&amp;nbsp;JOINs, the table name filter applies to the first of the&amp;nbsp;JOINed database tables. If a database table matches entries in both fields &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;INCLUDED_TABLES &lt;/FONT&gt;&lt;/STRONG&gt;and &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;EXCLUDED_TABLES&lt;/FONT&gt;&lt;/STRONG&gt;, SQL statements against this table will &lt;U&gt;not&lt;/U&gt; be recorded.&lt;BR /&gt;If you specify a table in the &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;INCLUDED_TABLES&lt;/FONT&gt;&lt;/STRONG&gt;, and also want to trace all statements that do not directly affect an individual table (e.g.,&amp;nbsp;COMMITs,&amp;nbsp;ROLLBACKs,&amp;nbsp;SET SESSION VARIABLE,&amp;nbsp;SET CLIENT INFO), you must set the Boolean field &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;INCLUDE_MISSING_TABLE_NAME_ON &lt;/FONT&gt;&lt;/STRONG&gt;to 'X'.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;STACK_TRACE_ON&amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;With this field you determine whether the trace records shall contain the ABAP call hierarchy for the recorded events. The advantages (and disadvantages) of this option are described in detail in my blog post &lt;A href="https://blogs.sap.com/?p=1689314&amp;amp;preview=true&amp;amp;preview_id=1689314" target="_self" rel="noreferrer noopener"&gt;ST05: Basic Use&lt;/A&gt;. For use cases that call the &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05&lt;/FONT&gt;&lt;/STRONG&gt; APIs, the stack trace is typically not needed, and you should not request it to minimize the trace recording overhead.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ALL_SERVERS&amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;By default, function&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;ST05_Activate_Trace&lt;/STRONG&gt; &lt;FONT face="arial,helvetica,sans-serif"&gt;starts trace recording only on the server where it is running. With the optional Boolean parameter &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;ALL_SERVERS &lt;/STRONG&gt;&lt;/FONT&gt;you can request the activation on all application server instances of the system. This works like the option &amp;lt;ALL&amp;gt; for field &lt;EM&gt;Instance&lt;/EM&gt;&amp;nbsp;in the filter conditions popup when you&amp;nbsp;&lt;EM&gt;Activate Trace with Filter&lt;/EM&gt; in &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;ST05&lt;/STRONG&gt;&lt;/FONT&gt;.&amp;nbsp;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Via&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;EXPORTING&lt;/FONT&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;parameter&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;SERVER_INFORMATION_TABLE &lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;(of &lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TYPE&amp;nbsp; ST05_SERVER_INFORMATION_TABLE&lt;/FONT&gt;&lt;/STRONG&gt;&lt;SPAN&gt;), function&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_Activate_Trace&lt;/FONT&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;reports back to its caller where tracing was activated (fields &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;INSTANCE&lt;/FONT&gt; &lt;/STRONG&gt;and &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;HOST&lt;/FONT&gt;&lt;/STRONG&gt;) and when (fields &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;DATE&lt;/FONT&gt; &lt;/STRONG&gt;and &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TIME&lt;/FONT&gt;&lt;/STRONG&gt;). Field &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;IS_LOCAL&lt;/FONT&gt; &lt;/STRONG&gt;marks the application server instance where the function was executed. The &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;GUID&lt;/STRONG&gt;&lt;/FONT&gt; will always be initial, i.e., a string of 32 zeros.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN&gt;Through several &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;EXCEPTIONS&lt;/STRONG&gt;&lt;/FONT&gt;, function&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_Activate_Trace&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;informs its caller if errors occurred during its runtime.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;NO_AUTHORITY&lt;BR /&gt;&lt;!--                                                 StartFragment                                                  --&gt;&lt;SPAN&gt;The&amp;nbsp;user&amp;nbsp;has insufficient&amp;nbsp;authorizations. Required is value&lt;!--                                                 StartFragment                                                  --&gt; ST0M for field&amp;nbsp;&lt;!--                                                 StartFragment                                                  --&gt;S_ADMI_FCD&amp;nbsp;in object&amp;nbsp;&lt;!--                                                 StartFragment                                                  --&gt;S_ADMI_FCD&amp;nbsp;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;MISSING_TRACE_TYPE&lt;BR /&gt;&lt;!--                                                 StartFragment                                                  --&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;No&amp;nbsp;&lt;/SPAN&gt;trace&amp;nbsp;&lt;SPAN class=""&gt;type&amp;nbsp;&lt;/SPAN&gt;has&amp;nbsp;been&amp;nbsp;selected, i.e., &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;IMPORTING&lt;/FONT&gt; &lt;/STRONG&gt;parameter&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;TRACE_TYPES&lt;/STRONG&gt;&lt;/FONT&gt; is &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;INITIAL&lt;/FONT&gt;&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;NO_CROSS_CLIENT_TRACING&lt;BR /&gt;Cross client tracing from an application client to another client is forbidden. An application client is recognized if a call to method&amp;nbsp;&lt;!--                                                 StartFragment                                                  --&gt;&lt;SPAN&gt;cl_system_client_check&lt;SPAN class=""&gt;=&amp;gt;&lt;/SPAN&gt;is_system_client&lt;SPAN class=""&gt;(&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;) returns ' ' (blank). This is relevant only in systems with tenant separation.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;USER_MISMATCH&lt;BR /&gt;&lt;!--                                                 StartFragment                                                  --&gt;&lt;SPAN&gt;Tracing is already active&amp;nbsp;&lt;SPAN class=""&gt;for&amp;nbsp;&lt;/SPAN&gt;another&amp;nbsp;user. It is not possible to change this user without first completely deactivating the trace recording.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;ACTIVATION_ERROR&lt;BR /&gt;Trace recording cannot be activated for other reasons.&lt;/LI&gt;&lt;LI&gt;NO_SERVER_LIST&lt;BR /&gt;This exception is not yet used, i.e., never &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;RAISE&lt;/STRONG&gt;&lt;/FONT&gt;d.&lt;/LI&gt;&lt;LI&gt;INTERNAL_ERROR&lt;BR /&gt;Some internal error prevented the trace activation.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-595865862"&gt;&lt;!--                                                       StartFragment                                                        --&gt;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;ST05_Deactivate_Trace&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;With this remote-enabled function you switch tracing off. Functionally, it corresponds to the SAP GUI options&amp;nbsp;&lt;EM&gt;Deactivate Trace&lt;/EM&gt;&amp;nbsp;or &lt;EM&gt;Deactivate Trace on All Instances&lt;/EM&gt;.&lt;BR /&gt;With the function's&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;IMPORTING&lt;/FONT&gt; &lt;/STRONG&gt;parameters you precisely control what the trace deactivation shall achieve.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;TRACE_TYPES&amp;nbsp; TYPE ST05_API_TRACE_TYPES&lt;BR /&gt;ALL&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;BR /&gt;&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;With an appropriate combination of these two optional parameters you specify the trace types for which you want to deactivate the recording. Typically, this will be the set of trace types you have previously passed into function&amp;nbsp;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;ST05_Activate_Trace&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;. Then it will be convenient to set&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ALL&lt;/FONT&gt;&lt;/STRONG&gt; to 'X' and leave&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;TRACE_TYPES&lt;/STRONG&gt;&lt;/FONT&gt; initial. This is also the approach to establish clean initial conditions where all components of the &lt;EM&gt;System Trace&lt;/EM&gt; (&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST01&lt;/FONT&gt;&lt;/STRONG&gt;) are switched off - even those not accessible to &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05&lt;/FONT&gt;&lt;/STRONG&gt;. If you want to deactivate tracing only for a subset of the currently monitored communication channels, set the corresponding fields in&amp;nbsp;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;TRACE_TYPES&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/SPAN&gt; to 'X'. Do not let the field names of structure&amp;nbsp;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;ST05_API_TRACE_TYPES&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/SPAN&gt; confuse you: they are called&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&amp;lt;type&amp;gt;_ON&lt;/FONT&gt;&lt;/STRONG&gt;, but function &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;ST05_Deactivate_Trace&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/FONT&gt;will switch off the recording when they are set to 'X'.&lt;BR /&gt;If both,&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;TRACE_TYPES&lt;/STRONG&gt;&lt;/FONT&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ALL&lt;/FONT&gt;&lt;/STRONG&gt;, are initial, the function will terminate with exception &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;MISSING_TRACE_TYPE&lt;/FONT&gt;&lt;/STRONG&gt;. If &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ALL&lt;/FONT&gt;&lt;/STRONG&gt; is set to 'X', it will overwrite whatever is passed into&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;ST05_Deactivate_Trace&lt;/STRONG&gt;&lt;/FONT&gt; with parameter &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;TRACE_TYPES&lt;/STRONG&gt;&lt;/FONT&gt;, i.e., then the content of this parameter will be ignored.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ALL_SERVERS&amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;BR /&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;SPAN&gt;If you set this optional parameter to 'X', trace recording will be switched off on all application server instances of the system.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ALL_USERS&amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;If&amp;nbsp;&lt;/SPAN&gt;this optional flag has the value 'X', the selected &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;TRACE_TYPES&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;will be deactivated, independent of who activated them.&lt;SPAN class=""&gt;&amp;nbsp;Otherwise and if the trace recording was activated by another user, the function will terminate with exception &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;DEACTIVATION_ERROR&lt;/FONT&gt;&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;As with function &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_Activate_Trace&lt;/FONT&gt;&lt;/STRONG&gt;, the&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;EXPORTING&lt;/FONT&gt;&lt;/STRONG&gt;&amp;nbsp;parameter&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;SERVER_INFORMATION_TABLE &lt;/FONT&gt;&lt;/STRONG&gt;(&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TYPE&amp;nbsp; ST05_SERVER_INFORMATION_TABLE&lt;/FONT&gt;&lt;/STRONG&gt;) informs callers of function&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_Deactivate_Trace&lt;/FONT&gt;&lt;/STRONG&gt;&amp;nbsp;where tracing was deactivated (fields &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;INSTANCE&lt;/FONT&gt; &lt;/STRONG&gt;and &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;HOST&lt;/FONT&gt;&lt;/STRONG&gt;) and when (fields &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;DATE&lt;/FONT&gt; &lt;/STRONG&gt;and &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TIME&lt;/FONT&gt;&lt;/STRONG&gt;). Field &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;IS_LOCAL&lt;/FONT&gt; &lt;/STRONG&gt;marks the application server instance where the function was executed. The value of the&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;GUID&lt;/STRONG&gt; &lt;/FONT&gt;field identifies the trace directory entry corresponding to the just ended trace recording. Please refer to my blog post&amp;nbsp;&lt;A href="https://blogs.sap.com/2023/04/28/st05-trace-directory/" target="_blank" rel="noopener noreferrer"&gt;Trace Directory&lt;/A&gt; for more details on this component of &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05&lt;/FONT&gt;&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Similar to&amp;nbsp;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_Activate_Trace&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;,&amp;nbsp;function &lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_Deactivate_Trace&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;communicates errors to its caller by several &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;EXCEPTIONS&lt;/STRONG&gt;&lt;/FONT&gt;:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;NO_AUTHORITY&lt;BR /&gt;&lt;!--                                                 StartFragment                                                  --&gt;&lt;SPAN&gt;The&amp;nbsp;user&amp;nbsp;has insufficient&amp;nbsp;authorizations. Required is value&lt;!--                                                 StartFragment                                                  --&gt; ST0M for field&amp;nbsp;&lt;!--                                                 StartFragment                                                  --&gt;S_ADMI_FCD&amp;nbsp;in object&amp;nbsp;&lt;!--                                                 StartFragment                                                  --&gt;S_ADMI_FCD&amp;nbsp;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;MISSING_TRACE_TYPE&lt;BR /&gt;&lt;!--                                                 StartFragment                                                  --&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;No&amp;nbsp;&lt;/SPAN&gt;trace&amp;nbsp;&lt;SPAN class=""&gt;type&amp;nbsp;&lt;/SPAN&gt;has&amp;nbsp;been&amp;nbsp;selected, i.e., &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;IMPORTING&lt;/FONT&gt; &lt;/STRONG&gt;parameters&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;TRACE_TYPES&lt;/STRONG&gt;&lt;/FONT&gt;&amp;nbsp;and&amp;nbsp;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ALL&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&amp;nbsp;are&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;INITIAL&lt;/FONT&gt;&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;DEACTIVATION_ERROR&lt;BR /&gt;Trace recording cannot be activated for other reasons.&lt;BR /&gt;Example: Tracing was activated by another user and parameter &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ALL_USERS&lt;/FONT&gt; &lt;/STRONG&gt;was not set.&lt;/LI&gt;&lt;LI&gt;NO_SERVER_LIST&lt;BR /&gt;This exception is not yet used, i.e., never &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;RAISE&lt;/STRONG&gt;&lt;/FONT&gt;d.&lt;/LI&gt;&lt;LI&gt;INTERNAL_ERROR&lt;BR /&gt;Some internal error prevented the trace deactivation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Pseudo code for a typical scenario that uses these two functions:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-c"&gt;&lt;code&gt;CALL FUNCTION 'ST05_ACTIVATE_TRACE' ... .
    Execute some part of the application
    which communicates with external resource
    in a potentially critical way.
CALL FUNCTION 'ST05_DEACTIVATE_TRACE' ... .&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you have passed appropriate arguments into functions&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_Activate_Trace&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;and&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_Deactivate_Trace&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;, you have recorded traces of your application's accesses to external resources. The corresponding trace records are stored in the file systems of the application server instances. From there you can fetch the traces for detailed analyses as described in the following section &lt;EM&gt;Trace Analysis&lt;/EM&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-399352357"&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_GET_TRACE_STATE&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;This function (also remote-enabled) is closely related to the two functions explained above. It retrieves the current trace state from the application server instance where it was called. You would use it to convince yourself that it is possible and safe to call function &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_ACTIVATE_TRACE&lt;/FONT&gt;&lt;/STRONG&gt; without interfering with ongoing trace recordings of other users, or to double-check that previous calls to&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_ACTIVATE_TRACE&lt;/FONT&gt;&lt;/STRONG&gt;&amp;nbsp; or&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;ST05_Deactivate_Trace&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt; were successful.&lt;BR /&gt;The function's sole &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;EXPORTING&lt;/FONT&gt;&lt;/STRONG&gt; parameter&amp;nbsp;&lt;!--                      StartFragment                       --&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TRACE_STATE&lt;/FONT&gt;&lt;/STRONG&gt; of type&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_TRACE_STATE&lt;/FONT&gt;&lt;/STRONG&gt; has the components&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;CLIENT&amp;nbsp; TYPE&amp;nbsp; SYMANDT&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;TRACE_USER&amp;nbsp; TYPE&amp;nbsp; ST05_USER_NAME_PATTERN&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;MODIFICATION_USER&amp;nbsp; TYPE&amp;nbsp; SYUNAME&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Name of the user who has last changed the trace state on the local application server instance.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;MODIFICATION_DATE&amp;nbsp; TYPE&amp;nbsp; DATS&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;MODIFICATION_TIME&amp;nbsp; TYPE&amp;nbsp; TIMS&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Date and Time when the trace state was last changed&amp;nbsp;on the local application server instance.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;TRACE_TYPES&amp;nbsp; TYPE&amp;nbsp; ST05_TRACE_TYPES&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;FILTER_ON&amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Flag to indicate whether trace recording was activated with filter.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;TRANSACTION_CODE&amp;nbsp; TYPE&amp;nbsp; PTC_TRANSACTION_CODE&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;PROGRAM&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;TYPE&amp;nbsp; PTC_PROGRAM_NAME&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;RFC_FUNCTION&amp;nbsp; &amp;nbsp; &amp;nbsp; TYPE&amp;nbsp; ST05_RFC_FUNCTION_NAME&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;URL&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;TYPE&amp;nbsp; ST05_URL&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;WP_ID&amp;nbsp; TYPE&amp;nbsp; PTC_WP_ID&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;INCLUDED_TABLES&amp;nbsp; TYPE&amp;nbsp; ST05_OBJECT_INCL_EXCL&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;EXCLUDED_TABLES&amp;nbsp; TYPE&amp;nbsp; ST05_OBJECT_INCL_EXCL&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;INCLUDE_MISSING_TABLE_NAME_ON&amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;STACK_TRACE_ON&amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;PROGRESS_INDICATOR_ON&amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;This flag has no meaning any more.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Structure components that are not explained in the above list correspond to the matching fields of the&lt;/FONT&gt;&lt;/FONT&gt; &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;IMPORTING&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;parameter&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt; TRACE_FILTER&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;of function&lt;/FONT&gt;&lt;/FONT&gt; &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;SPAN&gt;ST05_ACTIVATE_TRACE&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;. They are described above.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-73756133"&gt;&lt;STRONG&gt;Trace Analysis&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;Let me now move on and continue with the API based processing and analysis of previously recorded traces. Three functions support different levels of detail for your investigation. I have already explained the available aggregation options in my blog post &lt;A title="Aggregate Trace Records" href="https://community.sap.com/t5/technology-blogs-by-sap/st05-aggregate-trace-records/ba-p/13569482" target="_self"&gt;Aggregate Trace Records&lt;/A&gt;. The most comprehensive function is&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_GET_TRACE_TABLES&lt;/FONT&gt;&lt;/STRONG&gt;, which supplies internal tables of trace records for all supported degrees of aggregation plus the raw format of the ABAP call stack. Function&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_GET_SUMMARY_TABLES&lt;/FONT&gt;&lt;/STRONG&gt; focuses on the summarized trace records, and function&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_GET_TABLE_ACCESS_RECORDS&lt;/FONT&gt;&lt;/STRONG&gt; only provides the database table access trace records.&lt;BR /&gt;Functions &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_GET_TRACE_TABLES&lt;/FONT&gt;&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_GET_SUMMARY_TABLES&lt;/FONT&gt;&lt;/STRONG&gt; have the same &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;IMPORTING&lt;/FONT&gt;&lt;/STRONG&gt;&amp;nbsp;parameters, a subset of which is also available to &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_GET_TABLE_ACCESS_RECORDS&lt;/FONT&gt;&lt;/STRONG&gt;.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TRACE_TYPES&amp;nbsp; TYPE&amp;nbsp; ST05_TRACE_TYPES&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;Specify the trace types you are interested in by setting the corresponding flags&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;&amp;lt;type&amp;gt;_ON&lt;/FONT&gt;&lt;/STRONG&gt; to 'X'. The flags&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;AUTH_ON&lt;/FONT&gt;&lt;/STRONG&gt; and&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST01_ON&lt;/FONT&gt;&lt;/STRONG&gt; have no effect.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TRACE_INTERVAL&amp;nbsp; TYPE&amp;nbsp; ST05_TRACE_INTERVAL&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;Indicate the trace period by giving its&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;START_DATE&lt;/FONT&gt; &lt;/STRONG&gt;and&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;START_TIME&lt;/FONT&gt;&lt;/STRONG&gt;, and its&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;END_DATE&lt;/FONT&gt; &lt;/STRONG&gt;and&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;END_TIME&lt;/FONT&gt;&lt;/STRONG&gt;. You will typically fill these fields with values obtained from functions&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_Activate_Trace&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="courier new,courier"&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/SPAN&gt;and&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_Deactivate_Trace&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&amp;nbsp;via their &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;EXPORTING&lt;/FONT&gt;&lt;/STRONG&gt; parameter &lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;SERVER_INFORMATION_TABLE&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;.&lt;BR /&gt;(Fields&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;START_MS&lt;/FONT&gt; &lt;/STRONG&gt;and&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;END_MS&lt;/FONT&gt;&lt;/STRONG&gt;&amp;nbsp;allow to set the beginning and end, respectively, of the trace interval to milli-second precision. They are hardly ever meaningful.)&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;READ_FILTER_CONDITIONS&amp;nbsp; TYPE&amp;nbsp; ST05_READ_FILTER_CONDITIONS&lt;BR /&gt;&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;With this parameter you restrict the set of trace records to those that are associated with EPP root context IDs contained in &lt;/FONT&gt;&lt;STRONG&gt;EPP_ROOT_CONTEXT_ID_RANGE&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;. This is of limited value because you seldom know the EPP root context ID, and if you have managed to "very restrictively limit the tracing" almost all trace records will have identical&amp;nbsp;EPP root context IDs.&lt;BR /&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;GUID&amp;nbsp; TYPE&amp;nbsp; SYSUUID_X16&lt;/STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;If you specify this parameter, the corresponding trace directory entry will be processed. T&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;he&lt;/FONT&gt; &lt;STRONG&gt;&lt;SPAN&gt;GUID &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;takes precedence over the&lt;/FONT&gt; &lt;STRONG&gt;&lt;SPAN&gt;TRACE_TYPES&lt;FONT face="arial,helvetica,sans-serif"&gt;,&lt;/FONT&gt; TRACE_INTERVAL&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;, and&amp;nbsp;&lt;/FONT&gt;&lt;STRONG&gt;&lt;SPAN&gt;READ_FILTER_CONDITIONS&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&amp;nbsp;&lt;SPAN class=""&gt;parameters.&lt;BR /&gt;If flag &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;SAVE_TO_DB&lt;/STRONG&gt;&lt;/FONT&gt; is set, and there is not yet a trace directory entry that permanently stores the trace records in the database, it will be created and identified with this &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;GUID&lt;/FONT&gt;&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;KIND&amp;nbsp; TYPE&amp;nbsp; CHAR4&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;Control the level of detail or aggregation of the trace records to be provided by the API functions. Possible values are&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;CDS&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;!--                            StartFragment                             --&gt;&lt;SPAN&gt;statistics&amp;nbsp;&lt;SPAN class=""&gt;on&amp;nbsp;&lt;/SPAN&gt;CDS&amp;nbsp;view&amp;nbsp;usage&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ALL&lt;/FONT&gt; &lt;/STRONG&gt;(default)&lt;BR /&gt;all of the following levels&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;MAIN&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;main trace records&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;DET&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt; (not supported by function&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_GET_SUMMARY_TABLES&lt;/FONT&gt;&lt;/STRONG&gt;)&lt;/FONT&gt;&lt;BR /&gt;detailed trace records&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;DET+&lt;/FONT&gt;&lt;/STRONG&gt; (not supported by function&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_GET_SUMMARY_TABLES&lt;/FONT&gt;&lt;/STRONG&gt;)&lt;BR /&gt;detailed trace records plus kernel format of the ABAP call stack&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;STRU&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;structure-identical trace records&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;VAL&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;value-identical trace records&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TAB&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;table accesses trace records&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ACCEPT_INCOMPLETE_TRACE&amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;As I have described in my blog post &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/st05-technical-background-of-trace-recording-and-analysis/ba-p/13551465" target="_self"&gt;Technical Background of Trace Recording and Analysis&lt;/A&gt;, a trace may be partially overwritten due to the round-robin approach used internally for the trace file administration. The default behaviour of the &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05&lt;/FONT&gt;&lt;/STRONG&gt; API functions in this case is to return no trace records at all. You can overrule this by setting the flag&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ACCEPT_INCOMPLETE_TRACE&lt;/FONT&gt;&lt;/STRONG&gt; to 'X'. Then&amp;nbsp; the functions will supply all appropriate trace records that are still available.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;SAVE_TO_DB&amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;Set this flag if you want the trace records to be stored in a trace directory entry on the database to ensure that they are not overwritten.&lt;BR /&gt;This is a special option for dedicated internal purposes. If you wish to save trace records to the database I advise you to instead use the generic function &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_SAVE_TRACE&lt;/FONT&gt;&lt;/STRONG&gt;, which I describe below in section &lt;EM&gt;Trace Administration&lt;/EM&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Function&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;ST05_GET_TABLE_ACCESS_RECORDS&lt;/STRONG&gt;&lt;/FONT&gt;&amp;nbsp;does not support&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;IMPORTING&lt;/STRONG&gt;&lt;/FONT&gt; parameters &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;READ_FILTER_CONDITIONS&lt;/STRONG&gt;&lt;/FONT&gt;, &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;KIND&lt;/STRONG&gt;&lt;/FONT&gt;, and &lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;SAVE_TO_DB&lt;/STRONG&gt;&lt;/FONT&gt;, but offers the Boolean flag &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;CONDENSE&lt;/FONT&gt;&lt;/STRONG&gt;. I&lt;/FONT&gt;&lt;/FONT&gt;f set to 'X', INSERTs, DELETEs, UPDATEs as well as various buffer accesses to a database table will be summarized.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The functions'&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;EXPORTING&lt;/FONT&gt;&lt;/STRONG&gt; parameters provide trace records in ABAP internal tables to their callers. Please refer to my&amp;nbsp;&lt;A title="Aggregate Trace Records" href="https://community.sap.com/t5/technology-blogs-by-sap/st05-aggregate-trace-records/ba-p/13569482" target="_self"&gt;Aggregate Trace Records&lt;/A&gt;&amp;nbsp;blog post for an explanation of the fields in the underlying structures.&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;DETAILED_RECORD_TABLE&amp;nbsp; TYPE&amp;nbsp; ST05_DETAILED_RECORD_TABLE&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;This internal table does not summarize the trace records, thus can support all conceivable investigations.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;MAIN_RECORD_TABLE&amp;nbsp; TYPE&amp;nbsp; ST05_MAIN_RECORD_TABLE&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;I have described the purpose and the most relevant fields of this level of aggregation in my&amp;nbsp;&lt;A title="Basic Use" href="https://community.sap.com/t5/technology-blogs-by-sap/st05-basic-use/ba-p/13554382" target="_self"&gt;Basic Use&lt;/A&gt;&amp;nbsp;blog post.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;STRUCTURE_ID_RECORD_TABLE&amp;nbsp; TYPE&amp;nbsp; ST05_IDENTICAL_RECORD_TABLE&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;For many types of investigation this is the appropriate level of detail. It perfectly balances the available information granularity with the size of the internal table. It also augments the trace records with meta data on the accessed database tables.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;VALUE_ID_RECORD_TABLE&amp;nbsp; TYPE&amp;nbsp; ST05_IDENTICAL_RECORD_TABLE&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;Use this internal table to detect redundant accesses to database tables. They fetch identical result sets from the database. This creates unnecessary load on the central database server and slows down the application. Please note that superfluous database accesses do not necessarily lead to value-identical trace records, i.e., even if&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;VALUE_ID_RECORD_TABLE&lt;/FONT&gt;&lt;/STRONG&gt; is empty, the traced application may need some performance optimization.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TABLE_ACCESS_RECORD_TABLE&amp;nbsp; TYPE&amp;nbsp; ST05_TABLE_ACCESS_RECORD_TABLE&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;This internal table aggregates SQL trace records corresponding to statements of the same category (e.g., SELECT, INSERT, UPDATE, DELETE) that access a table or view. It also summarizes BUF trace records that access an object with the same number of key fields. Other trace types are not covered.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;KERNEL_CALL_STACK&amp;nbsp; TYPE&amp;nbsp; ST05_KERNEL_CALL_STACK&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;This is the raw format of the ABAP call hierarchy. As I have already mentioned, it is not relevant for the typical use cases that call the &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05&lt;/FONT&gt;&lt;/STRONG&gt; APIs, and you should not even record it.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TRACE_DIRECTORY_ENTRY&amp;nbsp; TYPE&amp;nbsp; PTC_DIRECTORY_ENTRY&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;This is only available if the &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;IMPORTING&lt;/FONT&gt;&lt;/STRONG&gt; parameter &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;GUID&lt;/FONT&gt; &lt;/STRONG&gt;was specified. Then it contains the corresponding entry from the trace directory. For the use cases covered in this blog post, it is not&amp;nbsp;relevant.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;INCOMPLETE_TRACE&amp;nbsp; TYPE&amp;nbsp; PTC_BOOLEAN&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;If the functions set this Boolean flag to 'X', the trace and therefore the internal tables are potentially incomplete. You want to repeat the trace recording with a more restrictive filter passed into function &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_Activate_Trace&lt;/FONT&gt;&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Function&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_GET_SUMMARY_TABLES&lt;/FONT&gt;&lt;/STRONG&gt;&amp;nbsp;does not support &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;EXPORTING&lt;/FONT&gt;&lt;/STRONG&gt;&amp;nbsp;parameters&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;DETAILED_RECORD_TABLE&lt;/FONT&gt;&amp;nbsp;&lt;/STRONG&gt;and &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;KERNEL_CALL_STACK&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;.&amp;nbsp;&lt;BR /&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;FONT face="courier new,courier"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Function&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_GET_TABLE_ACCESS_RECORDS&lt;/FONT&gt;&lt;/STRONG&gt;&amp;nbsp;only offers &lt;/FONT&gt;&lt;STRONG&gt;EXPORTING&lt;/STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt; parameters&amp;nbsp;&lt;FONT face="courier new,courier"&gt;&lt;STRONG&gt;TABLE_ACCESS_RECORD_TABLE&lt;/STRONG&gt;&lt;/FONT&gt; and &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;INCOMPLETE_TRACE&lt;/FONT&gt;&lt;/STRONG&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--122757372"&gt;&lt;STRONG&gt;Trace Administration&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;With functions &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_SAVE_TRACE&lt;/FONT&gt;&lt;/STRONG&gt; and &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_EXPORT_TRACE&lt;/FONT&gt;&lt;/STRONG&gt; you can save sets of trace records to the trace directory on the database or export them to your local front end file system, respectively. In either case, this will persist the trace records so that you can analyze them even when they are no longer in the application server instance's file system.&lt;/P&gt;&lt;P&gt;Both functions offer &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;IMPORTING&lt;/FONT&gt;&lt;/STRONG&gt; parameters &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TRACE_TYPES&lt;/FONT&gt;&lt;/STRONG&gt; and &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TRACE_INTERVAL&lt;/FONT&gt;&lt;/STRONG&gt; as described above.&lt;/P&gt;&lt;P&gt;If you specify a &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;DESCRIPTION&lt;/FONT&gt;&lt;/STRONG&gt; when calling &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_SAVE_TRACE&lt;/FONT&gt;&lt;/STRONG&gt;, this will be used for the trace directory entry. If you leave the&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;DESCRIPTION&lt;/FONT&gt;&lt;/STRONG&gt; empty, the user will be prompted in a dialog to describe the set of trace records.&lt;BR /&gt;Function&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_SAVE_TRACE&lt;/FONT&gt;&lt;/STRONG&gt; supports Boolean flags&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ACCEPT_INCOMPLETE_TRACE&lt;/FONT&gt;&lt;/STRONG&gt;&amp;nbsp;and &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ALL_SERVERS&lt;/FONT&gt;&lt;/STRONG&gt;. If you set&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ALL_SERVERS&lt;/FONT&gt;&lt;/STRONG&gt; = 'X' the function will go through all application server instances and save trace records that match the filter criteria into individual trace directory entries.&lt;/P&gt;&lt;P&gt;With function&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_EXPORT_TRACE&lt;/FONT&gt;&lt;/STRONG&gt; you may specify a &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;GUID&lt;/FONT&gt;&lt;/STRONG&gt;&amp;nbsp;&lt;!--        StartFragment         --&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;of&amp;nbsp;&lt;/SPAN&gt;a&amp;nbsp;trace&amp;nbsp;that&amp;nbsp;&lt;SPAN class=""&gt;is already&amp;nbsp;&lt;/SPAN&gt;stored&amp;nbsp;&lt;SPAN class=""&gt;in&amp;nbsp;&lt;/SPAN&gt;the trace directory. This trace will then be exported to your hard disc, and parameters&amp;nbsp;&lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TRACE_TYPES&lt;/FONT&gt;&lt;/STRONG&gt; and &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;TRACE_INTERVAL&lt;/FONT&gt;&lt;/STRONG&gt; will be ignored.&lt;BR /&gt;With the &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;FORMAT&lt;/FONT&gt;&lt;/STRONG&gt; parameter you can determine whether the trace shall be exported in binary format ( value 'BIN', suitable for later re-import and further analysis with &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05&lt;/FONT&gt;&lt;/STRONG&gt;), or in ASCII format (value 'CSV_*', where * indicates the aggregation level), e.g., for subsequent analysis with spreadsheet software.&lt;BR /&gt;The &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;FILE_NAME&lt;/FONT&gt;&lt;/STRONG&gt; parameter will be used to name&amp;nbsp;the file&amp;nbsp;&lt;SPAN class=""&gt;on&amp;nbsp;&lt;/SPAN&gt;the front&amp;nbsp;&lt;SPAN class=""&gt;end.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;If no name is&amp;nbsp;passed into function &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;ST05_EXPORT_TRACE&lt;/FONT&gt;&lt;/STRONG&gt;, it will prompt the user.&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/st05-application-programming-interface/ba-p/13634607"/>
    <published>2024-06-26T11:32:10.598000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-display-alv-grid-with-only-structure/ba-p/13864946</id>
    <title>How to display ALV GRID with only structure</title>
    <updated>2024-09-13T10:39:24.855000+02:00</updated>
    <author>
      <name>mark_fryu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/709977</uri>
    </author>
    <content/>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-display-alv-grid-with-only-structure/ba-p/13864946"/>
    <published>2024-09-13T10:39:24.855000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/azure-center-for-sap-solutions-running-sap-workloads-on-azure/ba-p/13984812</id>
    <title>Azure Center for SAP solutions: Running SAP Workloads on Azure</title>
    <updated>2025-01-14T05:46:46.780000+01:00</updated>
    <author>
      <name>jaskisin</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/659718</uri>
    </author>
    <content>&lt;P&gt;Azure Center for SAP Solutions integrates a range of features designed to deploy and oversee SAP landscapes on Azure portal. The capability within Azure Center for SAP solutions is the creation of a logical representation known as a Virtual Instance for SAP Solutions. This enables users to perceive and engage with the SAP system as a unified entity rather than disparate elements. This virtual instance imparts Azure with an understanding of SAP, introducing advanced functionalities for intelligent SAP management and facilitating guided deployment procedures.&lt;/P&gt;&lt;P&gt;The Azure Center for SAP Solutions was officially made generally available on May 15, 2023. Link for the Official Announcement can be found&amp;nbsp;&lt;A href="https://techcommunity.microsoft.com/t5/running-sap-applications-on-the/announcing-general-availability-for-microsoft-azure-center-for/ba-p/3818493" target="_blank" rel="nofollow noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jaskisin_0-1736777524891.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/211419iF1F4DED75B01DA33/image-size/large?v=v2&amp;amp;px=999" role="button" title="jaskisin_0-1736777524891.png" alt="jaskisin_0-1736777524891.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Smart and Effortless SAP System Administration&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Register Windows and Linux ABAP-Based SAP Systems on Azure.&lt;/LI&gt;&lt;LI&gt;Leverage Azure Resource Graph to conduct thorough searches throughout your SAP infrastructure.&lt;/LI&gt;&lt;LI&gt;Initiate start/stop actions for the entire SAP system, including individual instances such as Central Instance, Application Server, Database (HANA), directly from within the Azure interface.&lt;/LI&gt;&lt;LI&gt;Integrated Azure Monitor for SAP solutions offer comprehensive monitoring for SAP systems, covering SAP HANA, SAP NetWeaver and Others&lt;/LI&gt;&lt;LI&gt;Azure Cost Management &amp;amp; Billing provides a summarized cost overview of non-shared resources.&lt;/LI&gt;&lt;LI&gt;Harness Azure Advisor for quality checks, automatically identifying deviations from documented standards and best practices in SAP systems.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;Assisted SAP Deployment&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Deploy infrastructure for single, distributed, or High-Availability SAP systems and install S/4HANA, either through automated installation or manual configuration as per specific needs.&lt;/LI&gt;&lt;LI&gt;Customize disk layout and Azure resource names for increased flexibility.&lt;/LI&gt;&lt;LI&gt;Automate SAP system registration using Microsoft’s open-source deployment automation framework—SAP Deployment Automation Framework (SDAF).&lt;/LI&gt;&lt;LI&gt;Visual representation available for the SAP system about to be deployed, enhancing planning and preparation.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;Other Capabilities&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Predefined roles and customizable role creation for managing access to specific Azure Center for SAP solutions features like start/stop actions.&lt;/LI&gt;&lt;LI&gt;Extended support for Azure CLI, PowerShell, and SDKs for seamless integration and usage.&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;Customers and partners have the flexibility to leverage the entire suite of capabilities or select specific functionalities based on their current stage in the cloud adoption journey.&lt;/P&gt;&lt;P&gt;Engaging in a new SAP system deployment project often reveals its inherent complexity. As businesses transition to S/4HANA, the quest for an automated solution that facilitates swift system deployment with minimal maintenance overhead. Azure Center for SAP Solutions now enables customers to deploy an S/4HANA system swiftly—within a few hours—directly via the Azure.&lt;/P&gt;&lt;P&gt;The intricacies of managing an SAP environment often require collaboration across diverse organizational units within a company. By registering existing SAP systems on Azure, customers gain access to the Virtual Instance for SAP Solutions. This logical representation empowers SAP and non-SAP experts by offering comprehensive context while navigating various responsibilities, spanning infrastructure and Basis administration. Moreover, treating SAP as an Azure-native resource allows users to capitalize on Azure’s inherent capabilities.&lt;/P&gt;&lt;P&gt;Azure Virtual Instance for SAP Solutions is accessible across numerous regions of Azure. This offering comes without any extra licensing charges. Customers are exclusively charged for the underlying infrastructure that forms part of the product or services they activate.&lt;/P&gt;&lt;P&gt;Feel free to explore the official documentation for Azure Center for SAP Solutions available&amp;nbsp;&lt;A href="https://learn.microsoft.com/en-us/azure/sap/center-sap-solutions/overview" target="_blank" rel="nofollow noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Additionally, there are useful links for&amp;nbsp;&lt;A href="https://aka.ms/ACSSOverviewVideo" target="_blank" rel="nofollow noopener noreferrer"&gt;Overview&lt;/A&gt;&amp;nbsp;and&amp;nbsp;&lt;A href="https://aka.ms/ACSSDemoVideo" target="_blank" rel="nofollow noopener noreferrer"&gt;Demo&lt;/A&gt;&amp;nbsp;videos, providing deeper insights into the product’s functionalities.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/azure-center-for-sap-solutions-running-sap-workloads-on-azure/ba-p/13984812"/>
    <published>2025-01-14T05:46:46.780000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/custom-abap-report-for-secure-tmg-access-multi-user-enabled/ba-p/14099027</id>
    <title>Custom ABAP Report for Secure TMG Access: Multi-User Enabled</title>
    <updated>2025-05-12T22:23:21.371000+02:00</updated>
    <author>
      <name>Pradeep555</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451114</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Scenario: In standard SAP, SM30 is used to maintain data through a Table Maintenance Generator&lt;/SPAN&gt; &lt;SPAN&gt;(TMG). However, it only allows us to assign access to a limited number of users—typically one at a time using authorization objects. This becomes a bottleneck when &lt;/SPAN&gt;&lt;SPAN&gt;multiple&lt;/SPAN&gt; &lt;SPAN&gt;users need to&lt;/SPAN&gt;&lt;SPAN&gt; maintain data but should not be given broad access to SM30.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To overcome this limitation, I’ve developed a&lt;/SPAN&gt; &lt;SPAN&gt;custom report program &lt;/SPAN&gt;&lt;SPAN&gt;that acts as a &lt;/SPAN&gt;&lt;SPAN&gt;gateway to&lt;/SPAN&gt; &lt;SPAN&gt;perform CRUD (Create, Read, Update, Delete) operations on TMG, but only for authorized users of the report&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Business Requirement:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Allow only authorized users to maintain table data via TMG.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Eliminate the need to provide direct SM30 access.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Improve security, flexibility, and usability in maintaining table data.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Security and authorization handling.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Instead of giving access to&lt;/SPAN&gt; &lt;SPAN&gt;SM30:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Assign a custom &lt;/SPAN&gt;&lt;SPAN&gt;role to the report program&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Let users maintain only the specific table via this report&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This restricts access to other tables or SM30 entirely&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Report ZPD_RP_TMG_CUSTOM 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; 
 *&amp;amp;---------------------------------------------------------------------* 
 REPORT ZPD_RP_TMG_CUSTOM. 
  
 
INCLUDE zpd_tmg_top_dec. 
 include zpd_tmg_logic_forms. 
  
START-OF-SELECTION . 
 PERFORM get_data. 
 PERFORM prepare_field_catalog. 
 PERFORM disp_alv. 

 

 

FORM prepare_field_catalog . 
   CLEAR : gt_fieldcat . 
   gt_fieldcat = VALUE #( ( fieldname = 'MANDT'             col_pos = 1    seltext_l = 'MANDT'        checkbox = '' outputlen = 15 ) 
                          ( fieldname = 'SERIAL_NO'         col_pos = 2    seltext_l = 'SERIAL_NO'    checkbox = '' outputlen = 20 ) 
                          ( fieldname = 'NAME'              col_pos = 3    seltext_l = 'NAME'         checkbox = '' outputlen = 30 ) 
                          ( fieldname = 'USER_ID'           col_pos = 4    seltext_l = 'USER_ID'      checkbox = '' outputlen = 15 ) 
                          ( fieldname = 'PASSWORD'          col_pos = 5    seltext_l = 'PASSWORD'     checkbox = '' outputlen = 30 ) 
                          ( fieldname = 'COMPANY_CODE'      col_pos = 6    seltext_l = 'COMPANY_CODE' checkbox = '' outputlen = 15 ) ). 
  
ENDFORM. 
 

 

FORM disp_alv . 
  
 
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY' 
     EXPORTING 
       i_callback_program       = sy-repid 
       i_callback_pf_status_set = 'MY_SCREEN' 
       i_callback_user_command  = 'USER_COMMAND' 
       it_fieldcat              = gt_fieldcat 
     TABLES 
       t_outtab                 = gt_alv 
     EXCEPTIONS 
       program_error            = 1 
       OTHERS                   = 2. 
   IF sy-subrc &amp;lt;&amp;gt; 0. 
 * Implement suitable error handling here 
   ENDIF. 
  
 
 
 
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form get_data 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM get_data . 
  
  SELECT mandt 
           serial_no 
           name 
           user_id 
           password 
           company_code 
           FROM zpd_t_tmg INTO TABLE gt_zpd_t_tmg. 
  
 
 
  IF sy-subrc = 0. 
     PERFORM zpd_t_tmg_to_gt_alv . 
  
 
ENDIF. 
  
ENDFORM. 
  
 
FORM my_screen USING rx_extab TYPE slis_t_extab . 
   SET PF-STATUS 'MY_SCREEN'. 
 ENDFORM. 
  
 
 
"form  user command" 
  
FORM user_command USING ucomm LIKE sy-ucomm 
                         p_selfld TYPE slis_selfield. 
  
  DATA: gd_repid LIKE sy-repid, 
         ref_grid TYPE REF TO cl_gui_alv_grid. 
   DATA: l_valid TYPE c. 
  
  " to get modified  alv op 
  
 
  CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR' 
     IMPORTING 
       e_grid = ref_grid. 
  
 
  IF NOT ref_grid IS INITIAL. 
  
    CALL METHOD ref_grid-&amp;gt;check_changed_data 
       IMPORTING 
         e_valid = l_valid.           " Entries are Consistent 
  
  ENDIF. 
  
 
  CASE ucomm. 
     WHEN  '&amp;amp;DISP'. 
       CLEAR : gv_flag . 
       gv_flag = abap_true . 
       PERFORM change_fieldcat1. 
  
    WHEN '&amp;amp;SAVE' . 
       IF gv_flag = abap_true . 
         PERFORM modify_changes . 
         PERFORM prepare_field_catalog . 
       ELSE. 
         MESSAGE 'No change was made' TYPE 'E'. 
       ENDIF . 
  
    WHEN '&amp;amp;CR_NEW'. 
       REFRESH gt_alv1 . 
       PERFORM get_data1 . 
       PERFORM prepare_field_catalog1 . 
       PERFORM display_alv1 . 
  
    WHEN  '&amp;amp;DATA_SAVE'. 
       PERFORM save_data. 
     WHEN '&amp;amp;GT_DT'. 
       PERFORM dynamic_output . 
     WHEN '&amp;amp;F03' OR  '&amp;amp;F15'. 
       RETURN. 
     WHEN '&amp;amp;F12 '. 
       LEAVE PROGRAM . 
  
  ENDCASE . 
  
 
  p_selfld-refresh = 'X'. 
   IF ucomm = '&amp;amp;DISP'. 
     p_selfld-exit = 'X'. 
     PERFORM disp_alv. 
   ENDIF. 
  
  IF ucomm = '&amp;amp;SAVE'. 
     p_selfld-exit = 'X'. 
     PERFORM prepare_field_catalog. 
     PERFORM disp_alv. 
   ENDIF. 
  
 
 
 
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form prepare_field_catalog1 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM prepare_field_catalog1 . 
  
 
  CLEAR : gt_fieldcat1 . 
   gt_fieldcat = VALUE #( ( fieldname = 'MANDT'      edit = 'X'   col_pos = 1  seltext_l = 'MANDT'     ref_fieldname = 'MANDT'      checkbox = '' outputlen = 15 ) 
                          ( fieldname = 'SERIAL_NO'  edit = 'X'   col_pos = 2  seltext_l = 'SERIAL_NO' ref_fieldname = 'SERIAL_NO'  checkbox = '' outputlen = 20 ) 
                          ( fieldname = 'NAME'       edit = 'X'   col_pos = 3  seltext_l = 'NAME'      ref_fieldname = 'NAME'       checkbox = '' outputlen = 30 ) 
                          ( fieldname = 'USER_ID'    edit = 'X'   col_pos = 4  seltext_l = 'USER_ID'   ref_fieldname = 'USER_ID'    checkbox = '' outputlen = 15 ) 
                          ( fieldname = 'PASSWORD'   edit = 'X'   col_pos = 5  seltext_l = 'PASSWORD'  ref_fieldname = 'PASSWORD'   checkbox = '' outputlen = 30 ) 
                          ( fieldname = 'COMPANY_CODE' edit = 'X' col_pos = 6  seltext_l = 'COMPANY_CODE'  ref_fieldname = 'PASSWORD'  checkbox = '' outputlen = 15 ) ). 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form display_alv1 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM display_alv1 . 
  
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY' 
     EXPORTING 
       i_callback_program       = sy-repid 
       i_callback_pf_status_set = 'MY_SCREEN1 ' 
       i_callback_user_command  = 'USER_COMMAND' 
       it_fieldcat              = gt_fieldcat 
     TABLES 
       t_outtab                 = gt_alv1 
     EXCEPTIONS 
       program_error            = 1 
       OTHERS                   = 2. 
   IF sy-subrc &amp;lt;&amp;gt; 0. 
 * Implement suitable error handling here 
   ENDIF. 
  
ENDFORM. 

 

FORM my_screen1 USING rx_extab TYPE slis_t_extab . 
   SET PF-STATUS 'MY_SCREEN1'. 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form get_data1 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM get_data1 . 
  
  DO 150 TIMES. 
     APPEND gs_alv1 TO gt_alv1. 
   ENDDO. 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form save_data 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM save_data . 
  
  REFRESH  : gt_alv2 , gt_alv3. 
   gt_alv3[] = gt_alv1. 
   IF  gt_alv3 IS NOT INITIAL . 
     DELETE  gt_alv3 WHERE serial_no IS INITIAL. 
   ENDIF. 
  
  IF  gt_alv3 IS NOT INITIAL . 
  
    LOOP AT gt_alv3 INTO gs_alv3. 
       IF gs_alv3 IS NOT INITIAL . 
         IF gs_alv3-company_code IS NOT INITIAL. 
           CLEAR gs_alv. 
           READ TABLE gt_alv INTO gs_alv WITH KEY serial_no = gs_alv3-serial_no . 
  
          IF sy-subrc NE 0. 
             gs_alv2-serial_no = gs_alv3-serial_no. 
             gs_alv2-name = gs_alv3-name. 
             gs_alv2-password = gs_alv3-password. 
             gs_alv2-user_id = gs_alv3-user_id. 
             gs_alv2-company_code = gs_alv3-company_code. 
  
 
            APPEND gs_alv2 TO gt_alv2. 
             CLEAR : gs_alv3, gs_alv2 , gs_alv. 
           ELSE . 
             MESSAGE : ' Data already exists' TYPE 'E'. 
             CLEAR gs_alv. 
           ENDIF. 
  
        ELSE. 
           MESSAGE : 'Fill the required fied(Company code)' TYPE 'E'. 
         ENDIF. 
       ENDIF. 
     ENDLOOP. 
  
    MODIFY zpd_t_tmg FROM TABLE gt_alv2. 
     IF sy-subrc = 0. 
       MESSAGE 'Data transacted successfully' TYPE 'S'. 
  
      LOOP AT  gt_alv2 INTO gs_alv2. 
         gs_alv-name =  gs_alv2-name. 
         gs_alv-user_id = gs_alv2-user_id. 
         gs_alv-password = gs_alv2-password. 
         gs_alv-serial_no = gs_alv2-serial_no. 
         gs_alv-company_code = gs_alv2-company_code. 
  
        APPEND gs_alv TO gt_alv. 
  
        CLEAR : gs_alv , gt_alv2. 
  
      ENDLOOP. 
  
      REFRESH: gt_alv2 , gt_alv1. 
       PERFORM get_data1. 
     ENDIF. 
  
  ELSE. 
     MESSAGE 'Please enter the data' TYPE 'E'. 
  
  ENDIF. 
  
ENDFORM. 

 

FORM dynamic_output . 
  
  CLEAR : gs_serno , gs_ccode. 
  
  REFRESH  gt_alv4. 
   gt_alv4[] = gt_alv1[]. 
  
  IF gt_alv4 IS NOT INITIAL . 
  
    DELETE gt_alv4 WHERE serial_no IS INITIAL. 
     DELETE  gt_alv4 WHERE company_code IS INITIAL . 
  
  ENDIF. 
  
  PERFORM get_data2. 
   CLEAR : gs_serno , gs_ccode. 
  
  IF gt_alv4 IS   NOT INITIAL. 
  
    LOOP AT gt_alv1 ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_data&amp;gt;) 
                     WHERE serial_no IS INITIAL AND 
                      company_code IS INITIAL. 
  
  
      READ TABLE gt_serno INTO gs_serno WITH KEY serial_no = &amp;lt;lfs_data&amp;gt;-serial_no. 
       IF sy-subrc = 0. 
         &amp;lt;lfs_data&amp;gt;-user_id = gs_serno-user_id. 
         &amp;lt;lfs_data&amp;gt;-company_code = gs_serno-company_code. 
  
      ENDIF. 
  
    ENDLOOP. 
  
 
  ELSE. 
  
    MESSAGE 'fill out required entry fields' TYPE 'E'. 
  
  ENDIF. 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form get_data2 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM get_data2 . 
  
  REFRESH : gt_serno , gt_ccode. 
  ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form change_fieldcat1 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM change_fieldcat1 . 
   LOOP AT gt_fieldcat ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_fieldcat&amp;gt;) 
         WHERE ( fieldname = 'serial_no' OR fieldname = 'company_code' OR fieldname = 'user_id' OR fieldname = 'password' 
                  OR fieldname = 'name'). 
  
    &amp;lt;lfs_fieldcat&amp;gt;-edit = 'X'. 
  
 
 ENDLOOP. 
 ENDFORM. 


FORM modify_changes . 
  
  REFRESH gt_alv5 . 
  
  IF gt_alv IS NOT INITIAL. 
     PERFORM alv_to_alv5. 
     PERFORM get_changed_data. 
  
  ENDIF. 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form get_changed_data 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM get_changed_data . 
  
  IF gt_alv5[] IS NOT INITIAL . 
     LOOP AT gt_alv5 INTO DATA(gs_alv5) . 
       READ TABLE gt_zpd_t_tmg INTO DATA(gs_zpd_t_tmg) WITH KEY serial_no = gs_alv5-serial_no. 
  
      IF sy-subrc = 0 AND ( gs_alv5 EQ gs_zpd_t_tmg ) . 
  
        DELETE gt_alv5 FROM gs_alv5. 
  
        CLEAR : gs_alv5 ,  gs_zpd_t_tmg . 
       ENDIF. 
       CLEAR :   gs_alv5 ,  gs_zpd_t_tmg . 
     ENDLOOP. 
  
    IF gt_alv5 IS INITIAL . 
       MESSAGE 'No changes was made' TYPE 'E'. 
  
    ELSE. 
       DELETE gt_alv5[] WHERE company_code IS INITIAL. 
       IF sy-subrc NE 0 AND gt_alv5 IS NOT INITIAL . 
         MODIFY zpd_t_tmg  FROM gt_alv5. 
         IF sy-subrc = 0. 
           MESSAGE 'Data saved successfully' TYPE 'S'. 
  
          gv_flag = abap_false. 
  
        ENDIF. 
       ELSE. 
  
        MESSAGE 'Fill the required field(Company code)' TYPE 'E'. 
       ENDIF . 
     ENDIF. 
   ENDIF. 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form alv_to_alv5 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM alv_to_alv5 . 
  
  LOOP AT  gt_alv INTO gs_alv. 
     gs_alv5-mandt = sy-mandt. 
     gs_alv5-company_code = gs_alv-company_code. 
     gs_alv5-name = gs_alv-name. 
     gs_alv5-password = gs_alv-password. 
     gs_alv5-serial_no = gs_alv-serial_no. 
     gs_alv5-user_id = gs_alv-user_id. 
     APPEND gs_alv5 TO gt_alv. 
     CLEAR : gs_alv ,  gs_alv5. 
  
  ENDLOOP. 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form zpd_t_tmg_to_gt_alv 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM zpd_t_tmg_to_gt_alv . 
  
AUTHORITY-CHECK OBJECT 'ZAUTHTMG' 
 ID 'ACTVT' FIELD '01'. 
  
  IF sy-subrc &amp;lt;&amp;gt; 0 . 
     MESSAGE e006(zmsg_auth). 
     ENDIF. 
 
  LOOP AT  gt_zpd_t_tmg INTO gs_zpd_t_tmg. 
     gs_alv-serial_no = gs_zpd_t_tmg-serial_no. 
     gs_alv-company_code = gs_zpd_t_tmg-company_code. 
     gs_alv-name = gs_zpd_t_tmg-name. 
     gs_alv-password = gs_zpd_t_tmg-password. 
     gs_alv-user_id = gs_zpd_t_tmg-user_id. 
  APPEND  gs_alv TO gt_alv. 
    CLEAR : gs_alv , gs_zpd_t_tmg . 
  ENDLOOP. 
  ENDFORM. 

 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;OUTPUT:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_1-1747050747016.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/260055i072E0C2372A13592/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_1-1747050747016.png" alt="Pradeep555_1-1747050747016.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;When we&lt;/SPAN&gt;&lt;SPAN class=""&gt; click on new &lt;/SPAN&gt;&lt;SPAN class=""&gt;entries&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;button and click on save :&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_3-1747050889779.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/260059iE9116DD345A83362/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_3-1747050889779.png" alt="Pradeep555_3-1747050889779.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Data will be saved to Database :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_4-1747051011748.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/260060i575682E99C810484/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_4-1747051011748.png" alt="Pradeep555_4-1747051011748.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thanks and regards:&lt;/P&gt;&lt;P&gt;Pradeep Ishwar Devadiga&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/custom-abap-report-for-secure-tmg-access-multi-user-enabled/ba-p/14099027"/>
    <published>2025-05-12T22:23:21.371000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/analysing-abap-performance-by-call-stack/ba-p/14112990</id>
    <title>Analysing ABAP performance by Call Stack</title>
    <updated>2025-05-27T19:32:10.289000+02:00</updated>
    <author>
      <name>setu_jha</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/196890</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this blog post, I’ll walk you through the process of performing a root cause analysis for performance bottlenecks in ABAP applications. We'll focus specifically on how to evaluate the ABAP application call stack to identify the underlying issues that may be impacting system performance. By understanding the structure and behavior of the call stack, you can pinpoint inefficient code, redundant processing, or problematic custom developments — ultimately leading to more optimized and responsive SAP systems.&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;1.&amp;nbsp;&lt;U&gt;&lt;STRONG&gt;ABAP stack for running user session&lt;BR /&gt;&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The call stack &lt;/SPAN&gt;&lt;SPAN&gt;is a valuable tool for root cause analysis in ABAP applications. It provides the sequence of the class methods, subroutines, or function modules that lead to an error or issue, starting with the current program and going back to the initial starting point. This is very important to understand where the problem begins and who the responsible developer is.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;Example: The application SAPLZHK01 &lt;/SPAN&gt;&lt;SPAN&gt;is responsible for the NRIV lock wait.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_0-1748365747453.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266572i62F633560483ACC1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_0-1748365747453.png" alt="setu_jha_0-1748365747453.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_1-1748365755711.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266573iFA79B7DE54A4A4E6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_1-1748365755711.png" alt="setu_jha_1-1748365755711.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-&amp;gt; &amp;nbsp;View the call stack in the work process info.&lt;/STRONG&gt;&lt;BR /&gt;S&lt;SPAN&gt;elect a work process and then execute the WP-info in the 'Go To' menu&amp;nbsp;or by double-clicking on it in the ALV.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_2-1748365824442.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266574i8AE1FC48E0A5DAA8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_2-1748365824442.png" alt="setu_jha_2-1748365824442.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_3-1748365830410.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266575iCE0A338D2A5771EC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_3-1748365830410.png" alt="setu_jha_3-1748365830410.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;-&lt;STRONG&gt;&amp;gt;&amp;nbsp;To generate a call stack in work process diagnostic file&lt;/STRONG&gt;&amp;nbsp;&lt;BR /&gt;E&lt;SPAN&gt;xecute the write stack in SM50 in the Administration -&amp;gt; Work Process -&amp;gt; Write Stack menu.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_6-1748365953464.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266578i0F359A394A61D586/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_6-1748365953464.png" alt="setu_jha_6-1748365953464.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_7-1748365964465.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266579iA47FF98E59E0D85E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_7-1748365964465.png" alt="setu_jha_7-1748365964465.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-&amp;gt; Server Snapshot&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Server snapshot (also known as SAP Kernel snapshot) is a feature available since SAP NetWeaver ABAP Kernel 740. It is a concept of the NetWeaver ABAP application server which aims to save the most important system information automatically when the system is in abnormal situations. It saves the SM21 system log, ABAP stack, C-STACK,&amp;nbsp; and developer trace files in a single ZIP file. It can also be triggered manually via SM50 menu Administration -&amp;gt; Snapshot -&amp;gt; Create&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_8-1748366100417.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266580iF1981E431CF8FE54/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_8-1748366100417.png" alt="setu_jha_8-1748366100417.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-&amp;gt; Trigger the snapshot from the operating system using the sapcontrol command&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_9-1748366140084.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266581i941C57402F6AF66D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_9-1748366140084.png" alt="setu_jha_9-1748366140084.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Tools for the offline analysis&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;- &lt;A href="https://help.sap.com/docs/SUPPORT_CONTENT/si/3362959223.html" target="_self" rel="noopener noreferrer"&gt;SAP Microsoft Management Console&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/SUPPORT_CONTENT/si/3362959223.html" target="_self" rel="noopener noreferrer"&gt;&amp;nbsp;&lt;/A&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/analyzing-server-snapshots-with-kernel-snapshot-analyzer/ba-p/13405051" target="_self"&gt;Kernel snapshot analyzer&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-&amp;gt; Server Snapshot&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;The server snapshot file can be accessed via the transaction code SNAPSHOTS or SM50 menu Administration -&amp;gt; Snapshot -&amp;gt; Administration. The snapshot file can be read directly in SNAPSHOTS, or offline analysis tools like SAP MMC and Kernel Snapshot Analyzer&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_10-1748366264247.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266582iCBD23E95C5E2BE39/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_10-1748366264247.png" alt="setu_jha_10-1748366264247.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_11-1748366270695.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266583i5CD4F25827B1B1AB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_11-1748366270695.png" alt="setu_jha_11-1748366270695.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-&amp;gt; ST12 ABAP trace&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_12-1748366307737.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266584iC68EEC92DCAE8FC3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_12-1748366307737.png" alt="setu_jha_12-1748366307737.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;2.&amp;nbsp;ABAP stack of the user session in the past&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/U&gt;Use /SDF/SMON to extract ABAP stack of technical issues in the past.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SMON (&lt;/SPAN&gt;&lt;SPAN&gt;tx&lt;/SPAN&gt;&lt;SPAN&gt; /SDF/SMON) is to analyze past performance problems or to monitor the system. To use SMON for analysis, &lt;/SPAN&gt;&lt;SPAN&gt;it must be scheduled first before the desired analysis period or already running when the issue occurred.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SMON is the successor to /SDF/MON and collects additional data including the ABAP stack. &lt;/SPAN&gt;&lt;SPAN&gt;SMON is available as of Software Component ST-PI Release 740 Service Pack 0002&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;How to Schedule SMON: SAP Note&amp;nbsp;&lt;/SPAN&gt;&lt;U&gt;&lt;SPAN&gt;&lt;A href="https://launchpad.support.sap.com/" target="_blank" rel="noopener noreferrer"&gt;2651881&lt;/A&gt;&lt;/SPAN&gt;&lt;/U&gt;&lt;SPAN&gt;&amp;nbsp;- How to configure SMON for performance monitoring and analysis.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;The monitoring data is stored mainly in DB tables /SDF/SMON_HEADER and /SDF/SMON_WPINFO for the last 3 days and then stored to /SDF/SMON in the compressed format during the predefined retention period. The call stack information is stored in the DB table /SDF/SMON_STACK and &lt;/SPAN&gt;&lt;SPAN&gt;/SDF/SMON_STACKH&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Typical SMON daily scheduling:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_13-1748366390954.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266585i4AB9552B9B785E14/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_13-1748366390954.png" alt="setu_jha_13-1748366390954.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Execute the transaction /SDF/SMON and check whether the SMON was running in the analysis period in question&amp;nbsp; &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_14-1748366425135.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266586i49BB436B69F032A4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_14-1748366425135.png" alt="setu_jha_14-1748366425135.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The aggregated work process overview&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Use case examples&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Analysis of the delay of a batch job already finished&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Find the most expensive operation that led system’s high load in the past&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_15-1748366471702.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266587iB8F7BB77B80B2105/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_15-1748366471702.png" alt="setu_jha_15-1748366471702.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_16-1748366510383.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266588i05C27948E8662DC9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_16-1748366510383.png" alt="setu_jha_16-1748366510383.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Find the Call Stack in SMON&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Display SM50 data with the filter ‘Only records with Call stack’&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_17-1748366549006.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266589i095A0901E28BC9DF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_17-1748366549006.png" alt="setu_jha_17-1748366549006.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_18-1748366554924.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266590iAE86A052EF8D27D6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_18-1748366554924.png" alt="setu_jha_18-1748366554924.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_19-1748366561428.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266591i018D9670E9EA7085/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_19-1748366561428.png" alt="setu_jha_19-1748366561428.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Direct SMON DB table access example&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_20-1748366591147.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266592i6EA464942249A886/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_20-1748366591147.png" alt="setu_jha_20-1748366591147.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_21-1748366597374.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266593iBB1C0B34F74D4715/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_21-1748366597374.png" alt="setu_jha_21-1748366597374.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_22-1748366603174.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266594i0EB5F6E3FBCA331A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_22-1748366603174.png" alt="setu_jha_22-1748366603174.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SMON DB tables&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_23-1748366647114.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266595iC1A00BA11282F934/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_23-1748366647114.png" alt="setu_jha_23-1748366647114.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Limitation&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_24-1748366668864.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266596i429B44AE685789D0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_24-1748366668864.png" alt="setu_jha_24-1748366668864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;An intermittent performance issue in S4/HANA when calling the HTTP RFC destination of the SAP ETAX BTP solution.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The work process overview history data in /SDF/SMON offers enhanced clarity regarding the issue &lt;/SPAN&gt;&lt;SPAN&gt;: The work process was executing the same batch job, and it was on SAPLHTTP_RUNTIME most of time and the call stack was the same for all snapshots. However, it was not a ‘hanging’ situation for a single HTTP call because the work process performed different actions between snapshots&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_25-1748366710659.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266598iDB492330060BD1A8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_25-1748366710659.png" alt="setu_jha_25-1748366710659.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_26-1748366716194.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266599i067903E6F229FD56/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_26-1748366716194.png" alt="setu_jha_26-1748366716194.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;An intermittent data inconsistency issue within CO and SD components. The only technical finding was that when the issue occurred, the V1 423 message (an A type message) appeared in the system log while executing CO BAPI functions. However, the specific call stack linking these events remained unidentified. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Identifying the call stack :&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Find the ABAP include program that generate that specific message using SE91 where used list&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- List &lt;/SPAN&gt;&lt;SPAN&gt;up date&lt;/SPAN&gt;&lt;SPAN&gt;, time, instance name and the work process number in the syslog&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Search available /SDF/SMON call stack based on the information collected&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_27-1748366756026.png" style="width: 308px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266600i79617C0C253B1D81/image-dimensions/308x49?v=v2" width="308" height="49" role="button" title="setu_jha_27-1748366756026.png" alt="setu_jha_27-1748366756026.png" /&gt;&lt;/span&gt; &lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266605i7C30B5D42BB49B89/image-size/medium?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Analyzing issues that happened in the&amp;nbsp;past - an unusual long run time of a particular batch job.&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Root cause analysis using the /SDF/MON snapshot data&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Used /SDF/MON because /SDF/SMON was not available in the system (Call stack is not available in /SDF/MON)&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Analyze the SM50 activity data using the instance name and the work process number that ran the batch job&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Used work process activity aggregation to identify the root cause of the performance issue&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_29-1748366848653.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266603i7331C8CDD1B326F3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_29-1748366848653.png" alt="setu_jha_29-1748366848653.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_30-1748366854304.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266604i6E2FD4CC5536E7DA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_30-1748366854304.png" alt="setu_jha_30-1748366854304.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Analyzing issues that happened in the&amp;nbsp;past&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;ENQUEUE performance issue in the past, the issue was more than 2000 work processes were stuck at ABAP program SAPLSENA waiting for the response from the standalone ENQUEUE server.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_31-1748366939947.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266606iF59E8632E4E1245D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_31-1748366939947.png" alt="setu_jha_31-1748366939947.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_32-1748366945747.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266607i4649616BB09510C8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_32-1748366945747.png" alt="setu_jha_32-1748366945747.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="setu_jha_33-1748366952030.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266608iBA935F089F06C44C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="setu_jha_33-1748366952030.png" alt="setu_jha_33-1748366952030.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/analysing-abap-performance-by-call-stack/ba-p/14112990"/>
    <published>2025-05-27T19:32:10.289000+02:00</published>
  </entry>
</feed>
