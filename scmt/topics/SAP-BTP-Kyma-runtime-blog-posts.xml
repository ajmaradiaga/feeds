<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-BTP-Kyma-runtime-blog-posts.xml</id>
  <title>SAP Community - SAP BTP, Kyma runtime</title>
  <updated>2025-09-28T17:00:25.528191+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP BTP, Kyma runtime/pd-p/73554900100800003012" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP BTP, Kyma runtime blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-user-experience-q1-2025-update-part-6-sap-analytics-cloud-amp-sap/ba-p/14029182</id>
    <title>SAP User Experience Q1/2025 Update – Part 6: SAP Analytics Cloud &amp; SAP Business Technology Platform</title>
    <updated>2025-02-28T06:00:00.017000+01:00</updated>
    <author>
      <name>ThomasReiss</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/149639</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;This sixth post in my series gives an overview of latest user experience (UX) innovations in SAP Analytics Cloud and SAP Business Technology Platform (BTP). The highlights for SAP Analytics Cloud are the support for the SAP Fiori visual theme Horizon, giving users an experience consistent with other products; the Compass for business users to easily do Monte-Carlo simulations; Video Data Stories, and enhancements to the just ask natural language query capability. For SAP BTP, have a look at the new UX for the SAP Integration Suite, SAP BTP Kyma runtime, and SAP Build Apps.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1574759800"&gt;SAP Analytics Cloud&lt;/H1&gt;&lt;P&gt;In addition to full support for the SAP Fiori visual theme Horizon, the Q1/2025 release of SAP Analytics Cloud released on February 26th brings some great new experiences for users. I’ll focus here on these three:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The new Compass for easy Monte Carlo simulations by business users.&lt;/LI&gt;&lt;LI&gt;Video Data Stories, enabling business users to easily create videos to present their stories.&lt;/LI&gt;&lt;LI&gt;Just Ask enhancements.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;A title="https://www.sap.com/cmp/nl/data-and-analytics-news/index.html" href="https://www.sap.com/cmp/nl/data-and-analytics-news/index.html" target="_blank" rel="noopener noreferrer"&gt;Subscribe&lt;/A&gt; to the SAP D&amp;amp;A Quarterly Newsletter to get the latest news, customer stories, events, and innovations delivered directly to your inbox.&lt;/P&gt;&lt;H2 id="toc-hId-1507329014"&gt;Support for SAP Fiori visual theme Horizon&lt;/H2&gt;&lt;P&gt;SAP Analytics Cloud now also supports the SAP Fiori visual theme Horizon – not only for embedded uses cases as before, but now stand-alone too. As a result, users of our cloud applications can have a consistent experience when switching to SAP Analytics Cloud. Figure 1 shows an example.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 1: SAP Analytics Cloud with the SAP Fiori visual theme Horizon. ALT Text: An example screenshot showing what chart, table, input control and widgets look like with the Horizon visual theme." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/231072iCA04646CD6288CDC/image-size/large?v=v2&amp;amp;px=999" role="button" title="01 SAC with Horizon.jpg" alt="Figure 1: SAP Analytics Cloud with the SAP Fiori visual theme Horizon. ALT Text: An example screenshot showing what chart, table, input control and widgets look like with the Horizon visual theme." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 1: SAP Analytics Cloud with the SAP Fiori visual theme Horizon. ALT Text: An example screenshot showing what chart, table, input control and widgets look like with the Horizon visual theme.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Find out more in this blog post:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blogs-by-sap/horizon-theme-and-templates-for-stories-in-sap-analytics-cloud/ba-p/13657027" target="_blank"&gt;Horizon Theme and Templates for Stories in SAP Analytics Cloud&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1310815509"&gt;SAP Analytics Cloud Compass for Monte Carlo Simulation&lt;/H2&gt;&lt;P&gt;Non-technical users can now easily perform real-time multivariant analysis without prior IT setup or advanced statistic skills. You can trigger a new compass simulation via the toolbar or directly from a dashboard. If things are not going as planned, for example the gross revenue in the current quarter, you can trigger a simulation which will automatically detect the drivers and display probability distributions for gross revenue.&lt;/P&gt;&lt;P&gt;You can choose between low, medium or high precision, which uses 1,000, 10,000 or 100,000 iterations respectively. As you can see in Figure 2, this is visualized interactively, showing the probability for the current value. This is visualized by showing how likely the operating income will be exceeded (23% in the example) and how likely it will not be achieved (77%). At the bottom, you can see ranges for the pessimistic, realistic and optimistic cases (lower 5%, middle 90% and upper 5%). Since it is interactive, you can change the planned value and directly see how likely you are to exceed or not achieve it – as you can see in Figure 2.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 2: SAP Analytics Cloud Compass for Monte Carlo Simulation by business users. ALT Text: This short embedded GIF video shows a screen with a header “Target: Operating Income / Amount GC – Million USD”. Below that, a chart showing a probability distribution for Operating Income,  looking similar to a normal distribution. It has a vertical line at 87.51, indicating that the probability of less income is 5% (labelled “Pessimistic Case”, and a vertical line at 175.20, indicating the probability of more income is 5% (labelled “Optimistic Case”). The 90% band in between is labelled “Realistic Case”, with a slider at 151.67 (shown in a box above the slider), with 77% shown on the left and 23% on the right (the probability of income being lower or higher). The user moves the slider to the left with the mouse to the value 106.10, and the two values to the left and right change to 16% and 84%. Then the user types in a value of 100, resulting in 12% and 88%." style="width: 939px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/231076iCD979F5C56671F96/image-size/large?v=v2&amp;amp;px=999" role="button" title="02 SAC Monte Carlo simulations (5fps).gif" alt="Figure 2: SAP Analytics Cloud Compass for Monte Carlo Simulation by business users. ALT Text: This short embedded GIF video shows a screen with a header “Target: Operating Income / Amount GC – Million USD”. Below that, a chart showing a probability distribution for Operating Income,  looking similar to a normal distribution. It has a vertical line at 87.51, indicating that the probability of less income is 5% (labelled “Pessimistic Case”, and a vertical line at 175.20, indicating the probability of more income is 5% (labelled “Optimistic Case”). The 90% band in between is labelled “Realistic Case”, with a slider at 151.67 (shown in a box above the slider), with 77% shown on the left and 23% on the right (the probability of income being lower or higher). The user moves the slider to the left with the mouse to the value 106.10, and the two values to the left and right change to 16% and 84%. Then the user types in a value of 100, resulting in 12% and 88%." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 2: SAP Analytics Cloud Compass for Monte Carlo Simulation by business users. ALT Text: This short embedded GIF video shows a screen with a header “Target: Operating Income / Amount GC – Million USD”. Below that, a chart showing a probability distribution for Operating Income,  looking similar to a normal distribution. It has a vertical line at 87.51, indicating that the probability of less income is 5% (labelled “Pessimistic Case”, and a vertical line at 175.20, indicating the probability of more income is 5% (labelled “Optimistic Case”). The 90% band in between is labelled “Realistic Case”, with a slider at 151.67 (shown in a box above the slider), with 77% shown on the left and 23% on the right (the probability of income being lower or higher). The user moves the slider to the left with the mouse to the value 106.10, and the two values to the left and right change to 16% and 84%. Then the user types in a value of 100, resulting in 12% and 88%.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Find out more about this, and watch it in action in this video:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Video: &lt;A href="https://www.youtube.com/watch?v=Z8T0GQKiNsg&amp;amp;t=145s" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Analytics Cloud: Top 5 New Features in Q1 2025 (Section 2 on Compass)&lt;/A&gt; (2:35 min.)&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1114302004"&gt;Video Data Stories&lt;/H2&gt;&lt;P&gt;Another great user experience innovation with the latest release is the ability for business users to directly create short videos to present their data stories out of SAP Analytics Cloud – Figure 3 shows an example.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Figure 3: Part of a Video Data Story created from SAP Analytics Cloud. ALT Text: A short video with animated text and charts in a mobile phone vertical format. It starts with the title “Sep 2024, results”, followed by “Gross Margin”. Then the text “$8.66 million” glides in, followed by “delta 2024 Aug +37.45%”. Next, these disappear and “Gross Margin per Location” appears, above a horizontal bar chart with three bars for California ($6.78 M), Nevada ($0,52 M) and Oregon ($1.36 M). This chart then morphs into a new horizontal bar chart with five bars for Los Angeles ($2.45 M), Oakland ($1.22 M), San Diego ($1.62 M), San Francisco ($0.29 M), and San Jose ($1.21 M)." style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/231086i5ABAB185408F404B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="03 SAC Video Data Story (5fps - 35pc).gif" alt="Figure 3: Part of a Video Data Story created from SAP Analytics Cloud. ALT Text: A short video with animated text and charts in a mobile phone vertical format. It starts with the title “Sep 2024, results”, followed by “Gross Margin”. Then the text “$8.66 million” glides in, followed by “delta 2024 Aug +37.45%”. Next, these disappear and “Gross Margin per Location” appears, above a horizontal bar chart with three bars for California ($6.78 M), Nevada ($0,52 M) and Oregon ($1.36 M). This chart then morphs into a new horizontal bar chart with five bars for Los Angeles ($2.45 M), Oakland ($1.22 M), San Diego ($1.62 M), San Francisco ($0.29 M), and San Jose ($1.21 M)." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 3: Part of a Video Data Story created from SAP Analytics Cloud. ALT Text: A short video with animated text and charts in a mobile phone vertical format. It starts with the title “Sep 2024, results”, followed by “Gross Margin”. Then the text “$8.66 million” glides in, followed by “delta 2024 Aug +37.45%”. Next, these disappear and “Gross Margin per Location” appears, above a horizontal bar chart with three bars for California ($6.78 M), Nevada ($0,52 M) and Oregon ($1.36 M). This chart then morphs into a new horizontal bar chart with five bars for Los Angeles ($2.45 M), Oakland ($1.22 M), San Diego ($1.62 M), San Francisco ($0.29 M), and San Jose ($1.21 M).&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It is really easy to create video data stories: you can select which data you want to show, how you want to display it (Figure 4), and select a background image and background music. We provide a selection of images and music out of the box for you to choose from.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 4: Creating Video Data Stories in SAP Analytics Cloud. ALT Text: The image shows part of a screenshot showing an SAP Analytics Cloud page with bar charts and a pie chart, partly covered by a section below which shows five views of the video data story, containing (from the left) the title, a horizontal bar chart with three bars, a pie chart, a line chart, and a KPI as a number." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/231088i5A7D25B44E2A7D84/image-size/large?v=v2&amp;amp;px=999" role="button" title="04 SAC Video Data Story creation (cropped).jpg" alt="Figure 4: Creating Video Data Stories in SAP Analytics Cloud. ALT Text: The image shows part of a screenshot showing an SAP Analytics Cloud page with bar charts and a pie chart, partly covered by a section below which shows five views of the video data story, containing (from the left) the title, a horizontal bar chart with three bars, a pie chart, a line chart, and a KPI as a number." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 4: Creating Video Data Stories in SAP Analytics Cloud. ALT Text: The image shows part of a screenshot showing an SAP Analytics Cloud page with bar charts and a pie chart, partly covered by a section below which shows five views of the video data story, containing (from the left) the title, a horizontal bar chart with three bars, a pie chart, a line chart, and a KPI as a number.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Find out more in this blog post, these videos and the documentation:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/video-data-story-a-brand-new-way-of-story-telling-in-sap-analytics-cloud/ba-p/13978470" target="_blank"&gt;Video Data Story, a brand-new way of story telling in SAP Analytics Cloud&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;Video: &lt;A href="https://sapvideo.cfapps.eu10-004.hana.ondemand.com/?entry_id=1_bu06re47" target="_blank" rel="noopener nofollow noreferrer"&gt;Video Data Story – Sample Analysis Report&lt;/A&gt; (33 seconds).&lt;/LI&gt;&lt;LI&gt;Video: &lt;A href="https://www.youtube.com/watch?v=Z8T0GQKiNsg&amp;amp;t=300s" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Analytics Cloud: Top 5 New Features in Q1 2025 (Section 3 on Video Data Stories)&lt;/A&gt; (1:30 min.)&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/whats-new/42e4f84a0e5e458792b1047eaf81c31a?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;What’s New Viewer – SAP Analytics Cloud&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-917788499"&gt;Just Ask Enhancements&lt;/H2&gt;&lt;P&gt;The popular just ask feature enables you to use natural language to query SAP Analytics Cloud. It was introduced with this blog post:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/initial-release-of-sap-analytics-cloud-just-ask/ba-p/13583721" target="_blank"&gt;Initial Release of SAP Analytics Cloud Just Ask&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With the Q1/2025 release, we improve just ask by supporting currency conversion in acquired data models. We also allow users to limit the number of data points in bar charts, as well as leveraging SAP HANA Cloud vector engine.&lt;/P&gt;&lt;P&gt;Currency conversion means that, if you have data with multiple currencies, you can change the currency used to summarize all the values using natural language. Also, you can choose to show all the results in the respective local currency, so that for example the mouse-over shows the details and the currency for that country, as shown in Figure 5, where the user has asked “sales in local currency actual compared to forecast”.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 5: SAP Analytics Cloud just ask now supports currency conversion – here you see a visualization in local currency per country. ALT Text: The image shows a screenshot with Just Ask at the top left, with a text entry field containing “sales in local currency actual compared to forecast”. Below that, a horizontal bar chart showing “Top 10 Sales in Local Currency per Country”, with countries Denmark, Belgium, Italy, Sweden, France etc. Wherever the actual is higher than forecast the difference is marked with a green bar, where it is lower with a red bar. The user has placed the mouse over the green bar for Sweden, showing a popover containing the text “Sales in Local Currency, SEK909.2 k, Country Sweden, in green: Actual – Forecast SEK168.7K”." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/231089i25BC9C42C9978832/image-size/large?v=v2&amp;amp;px=999" role="button" title="05 SAC just ask local currency.jpg" alt="Figure 5: SAP Analytics Cloud just ask now supports currency conversion – here you see a visualization in local currency per country. ALT Text: The image shows a screenshot with Just Ask at the top left, with a text entry field containing “sales in local currency actual compared to forecast”. Below that, a horizontal bar chart showing “Top 10 Sales in Local Currency per Country”, with countries Denmark, Belgium, Italy, Sweden, France etc. Wherever the actual is higher than forecast the difference is marked with a green bar, where it is lower with a red bar. The user has placed the mouse over the green bar for Sweden, showing a popover containing the text “Sales in Local Currency, SEK909.2 k, Country Sweden, in green: Actual – Forecast SEK168.7K”." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 5: SAP Analytics Cloud just ask now supports currency conversion – here you see a visualization in local currency per country. ALT Text: The image shows a screenshot with Just Ask at the top left, with a text entry field containing “sales in local currency actual compared to forecast”. Below that, a horizontal bar chart showing “Top 10 Sales in Local Currency per Country”, with countries Denmark, Belgium, Italy, Sweden, France etc. Wherever the actual is higher than forecast the difference is marked with a green bar, where it is lower with a red bar. The user has placed the mouse over the green bar for Sweden, showing a popover containing the text “Sales in Local Currency, SEK909.2 k, Country Sweden, in green: Actual – Forecast SEK168.7K”.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Watch it in action here:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Video: &lt;A href="https://www.youtube.com/watch?v=Z8T0GQKiNsg&amp;amp;t=390s" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Analytics Cloud: Top 5 New Features in Q1 2025 (Section 4 on just ask)&lt;/A&gt; (1:34 min.)&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-721274994"&gt;Further Innovations and Outlook on Joule Analytical Pattern&lt;/H2&gt;&lt;P&gt;You can see the above three innovations, plus “Seamless Planning” and “Job Monitor – Multi-Action support” in this video:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://www.youtube.com/watch?v=Z8T0GQKiNsg" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Analytics Cloud: Top 5 New Features in Q1 2025&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;As I mentioned in &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/sap-user-experience-q1-2025-update-part-1-many-new-innovations-available-ai/ba-p/14012822" target="_blank"&gt;Part 1&lt;/A&gt; of this series, we plan to make the new analytical pattern for Joule available in Q2/2025, which will be powered by this latest release of SAP Analytics Cloud (as usual for forward-looking statements, our plans are subject to change). This means users of products that support Joule, such as SAP S/4HANA Cloud or SAP SuccessFactors, will be able to use Joule to query SAP Analytics Cloud and get analytical insights directly within Joule (the Joule Analytical Pattern). It will be powered by SAP Analytics Cloud, with data from models that are indexed by the&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/initial-release-of-sap-analytics-cloud-just-ask/ba-p/13583721" target="_blank"&gt;Just Ask feature of&amp;nbsp;SAP Analytics Cloud&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-395678770"&gt;SAP Business Technology Platform&lt;/H1&gt;&lt;H2 id="toc-hId-328247984"&gt;SAP Integration Suite&lt;/H2&gt;&lt;P&gt;The SAP Integration Suite now also supports the SAP Fiori visual theme Horizon, as you can see below in Figure 6.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 6: SAP Integration Suite with the SAP Fiori visual theme Horizon. ALT Text: The image shows three overlapping screenshots: at the left, back, “Employee Service” with buttons for triggering GET, POST, GET, PATCH URLs. Next, in the middle, the Capabilities page showing three rows of four columns of cards such as “Build Integration Scenarios”, “Manage APIs”, “Manage Business Events”, each with two to three lines description. On the right a page showing details of “SAP S/4HANA Cloud Integration with Workday”. The “Artifacts” tab has been selected, showing a list of artifacts with columns Name, Type, Version and Actions. The first entry has a name “Integrate Workday employee information”, the second one “Replicate Cost Centers from SAP S/4HANA Cloud to Workday”." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/231155iF0B3D49463CAB51E/image-size/large?v=v2&amp;amp;px=999" role="button" title="06 BTP with Horizon in Integration Suite.jpg" alt="Figure 6: SAP Integration Suite with the SAP Fiori visual theme Horizon. ALT Text: The image shows three overlapping screenshots: at the left, back, “Employee Service” with buttons for triggering GET, POST, GET, PATCH URLs. Next, in the middle, the Capabilities page showing three rows of four columns of cards such as “Build Integration Scenarios”, “Manage APIs”, “Manage Business Events”, each with two to three lines description. On the right a page showing details of “SAP S/4HANA Cloud Integration with Workday”. The “Artifacts” tab has been selected, showing a list of artifacts with columns Name, Type, Version and Actions. The first entry has a name “Integrate Workday employee information”, the second one “Replicate Cost Centers from SAP S/4HANA Cloud to Workday”." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 6: SAP Integration Suite with the SAP Fiori visual theme Horizon. ALT Text: The image shows three overlapping screenshots: at the left, back, “Employee Service” with buttons for triggering GET, POST, GET, PATCH URLs. Next, in the middle, the Capabilities page showing three rows of four columns of cards such as “Build Integration Scenarios”, “Manage APIs”, “Manage Business Events”, each with two to three lines description. On the right a page showing details of “SAP S/4HANA Cloud Integration with Workday”. The “Artifacts” tab has been selected, showing a list of artifacts with columns Name, Type, Version and Actions. The first entry has a name “Integrate Workday employee information”, the second one “Replicate Cost Centers from SAP S/4HANA Cloud to Workday”.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-131734479"&gt;SAP BTP Cockpit&lt;/H2&gt;&lt;P&gt;Customers can now get an easy to understand overview of their costs and usage of SAP Business Technology Platform with the new costs and usage application (Figure 7).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 7: SAP BTP Cockpit – Costs and Usage. ALT Text: The image shows an example screenshot. The header reads “Global Account: Automotive Rentals, Inc. – Costs and Usage”, below that a small card “Global Account Info” with Account ID, Account Type “Customer”, Contract Currency “USD” and a wide card “Cloud Platform Enterprise Agreement” with a chart showing Cloud Credit Usage, a KPI value for the Monthly Cloud Credit Usage and a vertical bar chart for Monthly Cloud Credit Usage Trend. Below that the majority of the screen shows the Billing tab, with the text “This view displays the monthly billable service charges for your global account”. Below that a flexible column layout with a list of Service Plans on the left, with “Business Application Studio – standard-edition” selected, and on the right a hierarchical table showing Directories and Subaccounts. At the bottom a filled line chart showing the cumulative list prices per month over the last 12 months." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/231157i58E8D6C871005039/image-size/large?v=v2&amp;amp;px=999" role="button" title="07 BTP Cockpit Cost &amp;amp; Usage.png" alt="Figure 7: SAP BTP Cockpit – Costs and Usage. ALT Text: The image shows an example screenshot. The header reads “Global Account: Automotive Rentals, Inc. – Costs and Usage”, below that a small card “Global Account Info” with Account ID, Account Type “Customer”, Contract Currency “USD” and a wide card “Cloud Platform Enterprise Agreement” with a chart showing Cloud Credit Usage, a KPI value for the Monthly Cloud Credit Usage and a vertical bar chart for Monthly Cloud Credit Usage Trend. Below that the majority of the screen shows the Billing tab, with the text “This view displays the monthly billable service charges for your global account”. Below that a flexible column layout with a list of Service Plans on the left, with “Business Application Studio – standard-edition” selected, and on the right a hierarchical table showing Directories and Subaccounts. At the bottom a filled line chart showing the cumulative list prices per month over the last 12 months." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 7: SAP BTP Cockpit – Costs and Usage. ALT Text: The image shows an example screenshot. The header reads “Global Account: Automotive Rentals, Inc. – Costs and Usage”, below that a small card “Global Account Info” with Account ID, Account Type “Customer”, Contract Currency “USD” and a wide card “Cloud Platform Enterprise Agreement” with a chart showing Cloud Credit Usage, a KPI value for the Monthly Cloud Credit Usage and a vertical bar chart for Monthly Cloud Credit Usage Trend. Below that the majority of the screen shows the Billing tab, with the text “This view displays the monthly billable service charges for your global account”. Below that a flexible column layout with a list of Service Plans on the left, with “Business Application Studio – standard-edition” selected, and on the right a hierarchical table showing Directories and Subaccounts. At the bottom a filled line chart showing the cumulative list prices per month over the last 12 months.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--64779026"&gt;SAP BTP, Kyma Runtime&lt;/H2&gt;&lt;P&gt;Kyma now supports modules, for adding functionalities to your cluster. To manage these, the Kyma dashboard has been redesigned, with the SAP Fiori visual theme Horizon, as you can see in Figure 8.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 8: Kyma dashboard with the SAP Fiori visual theme Horizon, now supporting modules. ALT Text: The image shows a screenshot with the “Cluster Overview” selected in the left side navigation bar. The screen has a large header card “Introducing Modules” with buttons for “Add Modules” and “Learn More”. Below that a section “Resource Details” containing one card, followed by a section “Monitoring and Health” containing further cards (“Memory Usage”, “CPU Usage”). A further smaller screenshot covers the bottom right of the other one, showing a Modules column in the middle, and a wider “Add Modules” panel on the right, containing four cards “SAP BTP Operator”, “Keda”, “Serverless”, “Telemetry”." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/231159iE010341A34E3D210/image-size/large?v=v2&amp;amp;px=999" role="button" title="08 Kyma.png" alt="Figure 8: Kyma dashboard with the SAP Fiori visual theme Horizon, now supporting modules. ALT Text: The image shows a screenshot with the “Cluster Overview” selected in the left side navigation bar. The screen has a large header card “Introducing Modules” with buttons for “Add Modules” and “Learn More”. Below that a section “Resource Details” containing one card, followed by a section “Monitoring and Health” containing further cards (“Memory Usage”, “CPU Usage”). A further smaller screenshot covers the bottom right of the other one, showing a Modules column in the middle, and a wider “Add Modules” panel on the right, containing four cards “SAP BTP Operator”, “Keda”, “Serverless”, “Telemetry”." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 8: Kyma dashboard with the SAP Fiori visual theme Horizon, now supporting modules. ALT Text: The image shows a screenshot with the “Cluster Overview” selected in the left side navigation bar. The screen has a large header card “Introducing Modules” with buttons for “Add Modules” and “Learn More”. Below that a section “Resource Details” containing one card, followed by a section “Monitoring and Health” containing further cards (“Memory Usage”, “CPU Usage”). A further smaller screenshot covers the bottom right of the other one, showing a Modules column in the middle, and a wider “Add Modules” panel on the right, containing four cards “SAP BTP Operator”, “Keda”, “Serverless”, “Telemetry”.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-85961826"&gt;SAP Build Apps&lt;/H2&gt;&lt;P&gt;SAP Build Apps enable business users to define their own simple applications without having to go to their IT teams to find developers. For these users, an intuitive user experience is paramount, and hence we continuously look to see where we can make it even better. One aspect of intuitiveness is providing a consistent experience across various products – hence SAP Build Apps also runs with the SAP Fiori visual theme Horizon.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 9: SAP Build Apps with the SAP Fiori visual theme Horizon. ALT Text: The image shows a screenshot with a heading “Choose Configuration to Build” above six square cards “Android (AAB)”, “Android (APK)”, “iOS (Ad hoc)”, “Web (MTAR)”, “Web (ZIP)”, “workzone build”. Below that a table “Build History” showing two lines for “iOS (Ad hoc)”." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/231161iEB83C3F5827938FD/image-size/large?v=v2&amp;amp;px=999" role="button" title="09 Design Innov. - Build Apps.jpg" alt="Figure 9: SAP Build Apps with the SAP Fiori visual theme Horizon. ALT Text: The image shows a screenshot with a heading “Choose Configuration to Build” above six square cards “Android (AAB)”, “Android (APK)”, “iOS (Ad hoc)”, “Web (MTAR)”, “Web (ZIP)”, “workzone build”. Below that a table “Build History” showing two lines for “iOS (Ad hoc)”." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 9: SAP Build Apps with the SAP Fiori visual theme Horizon. ALT Text: The image shows a screenshot with a heading “Choose Configuration to Build” above six square cards “Android (AAB)”, “Android (APK)”, “iOS (Ad hoc)”, “Web (MTAR)”, “Web (ZIP)”, “workzone build”. Below that a table “Build History” showing two lines for “iOS (Ad hoc)”.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here are some of the recent improvements:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;You can &lt;STRONG&gt;create a project version directly now by releasing the project&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Discover, integrate, and use any preconfigured action that is published in the SAP Build Library&lt;/STRONG&gt;: you can now easily discover published Actions in SAP Build Apps via the SAP Build Library and install them into your Build Apps project, consume and trigger them as&amp;nbsp;part of your application’s business logic via the Trigger Action flow function.&lt;/LI&gt;&lt;LI&gt;In the History tab, you can now &lt;STRONG&gt;see all previously saved states of the app&lt;/STRONG&gt;. Using the Restore button, you can restore the application to the respective saved state.&lt;/LI&gt;&lt;LI&gt;You can &lt;STRONG&gt;duplicate pages&lt;/STRONG&gt; in the page preview header.&lt;/LI&gt;&lt;LI&gt;You can use the updated Build service, which comes with a better look and feel, and an improved user experience:&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/build-apps/service-guide/build-and-deploy-web-applications" target="_blank" rel="noopener noreferrer"&gt;Build and Deploy Web Applications&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;The details matter with UX! To improve the user experience, we have updated the navigation menu in the global toolbar (Figure 10). App developers now have access to the&amp;nbsp;&lt;EM&gt;Variables&lt;/EM&gt;&amp;nbsp;directly&amp;nbsp;from the menu. The previous&amp;nbsp;&lt;EM&gt;UI Canvas&lt;/EM&gt;&amp;nbsp;and&amp;nbsp;&lt;EM&gt;Data&lt;/EM&gt;&amp;nbsp;tabs are now renamed respectively to&amp;nbsp;&lt;EM&gt;User Interface&lt;/EM&gt;&amp;nbsp;and&amp;nbsp;&lt;EM&gt;Integrations&lt;/EM&gt;. To save space, the less frequently used &lt;EM&gt;Theme&lt;/EM&gt;, &lt;EM&gt;Navigation&lt;/EM&gt;, &lt;EM&gt;Authentication&lt;/EM&gt; and &lt;EM&gt;Help&lt;/EM&gt;&amp;nbsp;options are now grouped under the&amp;nbsp;&lt;EM&gt;App Settings&lt;/EM&gt;&amp;nbsp;drop-down menu. In the upper right corner, you can access the&amp;nbsp;&lt;EM&gt;Preview&lt;/EM&gt;&amp;nbsp;button. Next to it is the&amp;nbsp;&lt;EM&gt;Publish&lt;/EM&gt;&amp;nbsp;button, which enables you either to&amp;nbsp;&lt;EM&gt;Create a Release Version&lt;/EM&gt;&amp;nbsp;or to&amp;nbsp;&lt;EM&gt;Build&lt;/EM&gt; &lt;EM&gt;and Deploy&lt;/EM&gt;&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 10: The new navigation menu in the SAP Build Apps global toolbar. ALT Text: A screenshot showing the header of SAP Build Apps, which contains tabs “User Interface”, “Variables”, “Integrations”, and “App Settings” with a drop-down menu with entries “Navigation”, “Authentication”, “Theme”, and “Help”." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/231163i4099F027BEE1CB9D/image-size/large?v=v2&amp;amp;px=999" role="button" title="10 SAP Build Apps - UX improvements.png" alt="Figure 10: The new navigation menu in the SAP Build Apps global toolbar. ALT Text: A screenshot showing the header of SAP Build Apps, which contains tabs “User Interface”, “Variables”, “Integrations”, and “App Settings” with a drop-down menu with entries “Navigation”, “Authentication”, “Theme”, and “Help”." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 10: The new navigation menu in the SAP Build Apps global toolbar. ALT Text: A screenshot showing the header of SAP Build Apps, which contains tabs “User Interface”, “Variables”, “Integrations”, and “App Settings” with a drop-down menu with entries “Navigation”, “Authentication”, “Theme”, and “Help”.&lt;/span&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;H1 id="toc-hId-182851328"&gt;Continue Reading&lt;/H1&gt;&lt;P&gt;I hope you enjoyed this sixth part, covering SAP Analytics Cloud and SAP Business Technology Platform.&lt;/P&gt;&lt;P&gt;The final part seven is available now, covering latest innovations for UI developers, for both web and mobile:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blogs-by-sap/sap-user-experience-q1-2025-update-part-7-ui-design-and-technology-for-web/ba-p/14034290" target="_blank"&gt;SAP User Experience Q1/2025 Update – Part 7: UI Design and Technology for Web and Mobile&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Part 1 of the series lists all the parts, and links to those parts that have already been published:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/sap-user-experience-q1-2025-update-part-1-many-new-innovations-available-ai/ba-p/14012822" target="_blank"&gt;SAP User Experience Q1/2025 Update – Part 1: Many New Innovations Available (AI, Joule and More)&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Do keep posting your experiences and recommendations yourself in the SAP Community, with the SAP Fiori and/or the User Experience tag! In case you are wondering how to get a list of the most recent blog posts on SAP Fiori and User Experience in our new SAP Community, use these links:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/c-khhcw49343/SAP+Fiori/pd-p/73554900100700000977" target="_blank"&gt;Latest blog posts on SAP Fiori in the SAP Community&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/c-khhcw49343/User+Experience/pd-p/4616d815-f39e-45c8-b13b-5a2d6679778f" target="_blank"&gt;Latest blog posts on User Experience in the SAP Community&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For general information on design at SAP and SAP Fiori, check out:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="http://www.sap.com/design" target="_blank" rel="noopener noreferrer"&gt;www.sap.com/design&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;A href="http://www.sap.com/fiori" target="_blank" rel="noopener noreferrer"&gt;www.sap.com/fiori&lt;/A&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://pages.community.sap.com/topics/fiori" target="_blank" rel="noopener noreferrer"&gt;SAP Community: SAP Fiori topic page&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-user-experience-q1-2025-update-part-6-sap-analytics-cloud-amp-sap/ba-p/14029182"/>
    <published>2025-02-28T06:00:00.017000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-btp-cloud-application-programming-model/ba-p/14032929</id>
    <title>SAP BTP: Cloud Application Programming Model</title>
    <updated>2025-03-04T07:09:41.141000+01:00</updated>
    <author>
      <name>SekhuteTK</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/15314</uri>
    </author>
    <content>&lt;P&gt;SAP Cloud Application Programming (CAP) Model exposes the ability to extend standard Cloud, on-premises and hybrid application functionality with flexible custom business logic scripted using the developer’s choice of programing language (SQL, SQL Script, Python, Node.js and JavaScript) and exposing the functionality to various user interfaces (UIs) e.g. Microsoft Power Bi, SAP Fiori, Dataiku and Google Big Query using various integration frameworks e.g. OData v4,JDBC/ODBC depending on the case study.&lt;/P&gt;&lt;P&gt;The developer takes pride in delivering a scalable extended functionality, embedding robust real-time monitoring capabilities to ensure a health life cycle and protecting the functionality with secure authentication protocols e.g. OAuth 2.0, JWT Bearer, SAML version 2.0 and RFC Specification.&lt;/P&gt;&lt;P&gt;Furthermore, the developer ensures a reliable and robust solutions by implementing continuous integration and continuous delivery CI/CD pipelines that automates testing, building and deployment of code changes this strategy ensures a speedy development and delivery cycle.&lt;/P&gt;&lt;P&gt;Traditionally developers extended business logic directly on-premises on the ABAP application server. With the ever-changing world of technology, digital transformation has become essential for organization to say afloat of competitors and therefore the programming model paradigms and capabilities of extending SAP solutions have evolved drastically and provides a seamless experience into the cloud.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Programming model.png" style="width: 626px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/232631i560CE0B01EB4E6CB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Programming model.png" alt="Programming model.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Figure 1: &lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Architectural Paradigm Shift from Classic ABAP App server to CAP App server&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Source: Thomas Jung, &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/sap-hana-extended-application-services/ba-p/12963426" target="_blank"&gt;&lt;STRONG&gt;SAP HANA Extended Application Services&lt;/STRONG&gt;&lt;/A&gt; blog, URL: &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/sap-hana-extended-application-services/ba-p/12963426/page/4" target="_blank"&gt;https://community.sap.com/t5/technology-blogs-by-sap/sap-hana-extended-application-services/ba-p/12963426/page/4&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;The SAP Cloud Application model comes with a rich set of languages, libraries, and tools for building enterprise-grade services and applications. It guides developers along a 'golden path' of proven&amp;nbsp;best practices&amp;nbsp;&amp;nbsp;and a great wealth of&amp;nbsp;out-of-the-box solutions&amp;nbsp;&amp;nbsp;to recurring tasks:&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="cap.png" style="width: 626px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/232633i1EC9379A4BB0DAA1/image-size/large?v=v2&amp;amp;px=999" role="button" title="cap.png" alt="cap.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Figure 2: &lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;SAP Cloud Application Model Architecture&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Source &lt;A href="HTTPS://Cap.cloud.sap" target="_blank" rel="nofollow noopener noreferrer"&gt;HTTPS://Cap.cloud.sap&lt;/A&gt; , U&lt;/EM&gt;&lt;EM&gt;RL:&lt;/EM&gt; &lt;EM&gt;&lt;A href="https://cap.cloud.sap/docs/about/" target="_blank" rel="nofollow noopener noreferrer"&gt;https://cap.cloud.sap/docs/about/&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The below diagram categories the skill set of SAP Cloud Developer based on the scope of the development either being ABAP or Non-ABAP. Each with its unique set of tools and methodologies:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ABAP VS NON.png" style="width: 626px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/232635i61C63058B7D72485/image-size/large?v=v2&amp;amp;px=999" role="button" title="ABAP VS NON.png" alt="ABAP VS NON.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Figure 3:&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&amp;nbsp;SAP Cloud Developer skill set&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Source: Building side-by-side extensions on SAP BTP, URL: &lt;A href="https://learning.sap.com/learning-journeys/build-side-by-side-extensions-on-sap-btp/identifying-the-need-for-side-by-side-extensibility_f1e838f0-f02a-43b4-8896-cedc25a7d5d0" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/build-side-by-side-extensions-on-sap-btp/identifying-the-need-for-side-by-side-extensibility_f1e838f0-f02a-43b4-8896-cedc25a7d5d0&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The Cloud Application Programming model enables a collaboration of agile cross functional teams inclusive of but not limited, depending on the scope of the development: &amp;nbsp;citizen developers (low-code/no-code), Professional developers (Scripting, OOP), business analysts, data engineers and application specialists to model robust data models:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Cross functional.png" style="width: 626px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/232636i237D8D5BBD7CB069/image-size/large?v=v2&amp;amp;px=999" role="button" title="Cross functional.png" alt="Cross functional.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Figure 4:&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Agile cross functional team&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;Source: &lt;STRONG&gt;Investigating the Impact of Cross-Functional Teams on Business Success&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;URL:&lt;/EM&gt; &lt;EM&gt;&lt;A href="https://www.iienstitu.com/en/blog/cross-functional-teams" target="_blank" rel="nofollow noopener noreferrer"&gt;https://www.iienstitu.com/en/blog/cross-functional-teams&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;SAP Cloud Application Programming (CAP) Model enables a culture where people regardless of their title or background, work together to imagine, develop, deploy, and operate a solution. This strengthens the trust between employees and authentic healthy work relationships.&lt;/P&gt;&lt;P&gt;Thank you all for taking a glimpse into the above Content. Please don’t for get to like, comment and share.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Abbreviations:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;APP: &lt;/STRONG&gt;Application&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;CAP: &lt;/STRONG&gt;Cloud Application Programing&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;CDS&lt;/STRONG&gt;: Core Data Services&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;CI/CD:&lt;/STRONG&gt; Continuous Integration and Continuous Delivery&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;JWT&lt;/STRONG&gt;: JSON Web token&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;OData: &lt;/STRONG&gt;Open Data Protocol&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;RFC&lt;/STRONG&gt;: Remote Function Call&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAML&lt;/STRONG&gt;: Security Assertion Markup Language&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SQL:&lt;/STRONG&gt; Structured Query Language&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;UIs:&lt;/STRONG&gt; User Interfaces&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-btp-cloud-application-programming-model/ba-p/14032929"/>
    <published>2025-03-04T07:09:41.141000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/beyond-sap-cloud-episode-9-btp-runtime-strategy/ba-p/14045183</id>
    <title>Beyond SAP Cloud - Episode 9: BTP Runtime Strategy</title>
    <updated>2025-03-17T06:22:06.849000+01:00</updated>
    <author>
      <name>WouterLemaire</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/9863</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;This episode explores BTP runtime strategy, discussing the different types of runtimes available: Kyma, Cloud Foundry and ABAP. Kyma, based on Kubernetes, runs on-demand, offering flexibility and cost-effectiveness for use cases that don't require to be up and running 24/7. Cloud Foundry is ideal for always-on applications, while ABAP may be more suitable for large-scale, enterprise applications. The choice of runtime depends on factors like developer skills, company policies and the scale of applications to be built. Companies must evaluate their needs to determine the best runtime for their BTP strategy.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2Fg65pOe8cjdA%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Dg65pOe8cjdA&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2Fg65pOe8cjdA%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="112" scrolling="no" title="Episode 9: BTP Runtime Strategy" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;STRONG&gt;Takeaways&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;BTP (Business Technology Platform) has multiple runtime options: &lt;STRONG&gt;Kyma, Cloud Foundry and ABAP&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Kyma is &lt;STRONG&gt;based on Kubernetes and operates on-demand&lt;/STRONG&gt;, starting and stopping when required.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Business Application Studio is a good example for a Kyma case&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. It is maybe not running on Kyma but uses the same concept under the hood, Kubernetes pods. With this, BAS doesn’t need to run all the time and only requires resource when it is started. That’s also the reason you need to start it every morning.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Kyma&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;'s pay-per-use model might be a &lt;STRONG&gt;cost-effective option&lt;/STRONG&gt; if your use case requires &lt;STRONG&gt;non-24/7 operations&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Cloud Foundry&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; is more suitable for applications that need to be &lt;STRONG&gt;operational 24/7&lt;/STRONG&gt;, like Fiori applications.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Cloud Foundry&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; is generally a &lt;STRONG&gt;more affordable&lt;/STRONG&gt; option for &lt;STRONG&gt;always-on applications&lt;/STRONG&gt;, offering greater accessibility.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Cloud Foundry&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; supports building applications using &lt;STRONG&gt;various development languages&lt;/STRONG&gt; and/or frameworks, such as Java, NodeJS, GO and Python.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Companies can choose &lt;STRONG&gt;to activate multiple runtimes&lt;/STRONG&gt; or select one based on their specific needs.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;ABAP&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; could be &lt;STRONG&gt;more expensive for single applications&lt;/STRONG&gt;, but it might &lt;STRONG&gt;become cost-effective for large-scale application development.&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Each company should &lt;STRONG&gt;assess its developer skill set and the number of applications&lt;/STRONG&gt; to be built when deciding on the &lt;STRONG&gt;best runtime strategy for BTP&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/beyond-sap-cloud-episode-9-btp-runtime-strategy/ba-p/14045183"/>
    <published>2025-03-17T06:22:06.849000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/explaining-sap-joule-for-hr-business-users-amp-functional-consultants/ba-p/14053853</id>
    <title>Explaining SAP Joule for HR Business Users &amp; Functional Consultants.</title>
    <updated>2025-03-23T10:47:21.753000+01:00</updated>
    <author>
      <name>santanuray_sap</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/684064</uri>
    </author>
    <content>&lt;P&gt;SAP Business Technology Platform (BTP)&lt;/P&gt;&lt;P&gt;SAP Business Technology Platform (SAP BTP) is the unified, business-centric, open data and development platform for the entire SAP ecosystem. This statement means a lot so let me explain it in a simple term&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Development friendly- The platform provides ease of development for developers makes it an efficient place for developers and helps them in increasing efficiency as well as gives them a charm.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Seamless Integration- It can talk with any other technology using its strong integration capability.&lt;/LI&gt;&lt;LI&gt;The most important Value for Data- Nothing can be more important for a Business than data. It will provide a next-gen experience with data using its analytics, data lake, in memory powerful calculations.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="santanuray_sap_0-1742721126129.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/241482iBD18924A2BE92EA8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="santanuray_sap_0-1742721126129.png" alt="santanuray_sap_0-1742721126129.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;High-Level BTP Basics and Set Up&amp;nbsp;&lt;/P&gt;&lt;P&gt;BTP first carves out a private IP CIDR range from the network space. The BTP operation team deploys a set of virtual machines certified to HANA in that range.&lt;/P&gt;&lt;P&gt;The first layer is Platform Core, which uses Gardener. Gardener is SAP’s Kubernetes management tool and the main fundamental for BTP workload&lt;/P&gt;&lt;P&gt;Some other runtimes are also deployed in the platform core. One of them is Cloud Foundry (which is now used instead of Neo), others are Kyma, ABAP, etc.&lt;/P&gt;&lt;P&gt;BTP also has other sets of Kernel Services that are required for building SAP’s Intelligent Enterprise version. This concept is the same as the Linux kernel. Just for the sake of high-level understanding, Kernel is the main layer between OS and hardware. It helps in the management of memory, space, identity, audit log, etc.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="santanuray_sap_1-1742721205280.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/241483i430761F71BEFD1D5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="santanuray_sap_1-1742721205280.png" alt="santanuray_sap_1-1742721205280.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;Once the platform core is set up different technology units deploy their services that use one or more of these runtimes and kernel services. The whole portfolio of BTP includes Analytics, DBMS, Integration, and Extension suite.&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="santanuray_sap_2-1742721306807.png" style="width: 701px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/241484iB0200217CE780500/image-dimensions/701x377?v=v2" width="701" height="377" role="button" title="santanuray_sap_2-1742721306807.png" alt="santanuray_sap_2-1742721306807.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;BTP- Accounts and Directory&lt;/P&gt;&lt;P&gt;Global Accounts - It’s the realization of the contract of customers made with SAP used to mange the entitlements, quotas, members, subaccounts and directories.&lt;/P&gt;&lt;P&gt;Directories&amp;nbsp; - allows the customer to organize and manage their subaccounts according to their technical and business needs.&lt;/P&gt;&lt;P&gt;Subaccounts - enable the customers to structure a global account according to their organization's and project's requirements concerning members, authorizations, and entitlements.&lt;/P&gt;&lt;P&gt;Entitlements are the right of customers to provision and consume the resources, as per their plan which for example can be PAYG or Fixed Contracts etc.&lt;/P&gt;&lt;P&gt;Directories can contain directories and subaccount. Subaccounts of one or more can be created directly under a global account. As we can understand this is more from the angle of security &amp;amp; authorizations.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="santanuray_sap_3-1742721593698.png" style="width: 687px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/241485i7310A3CCD961E688/image-dimensions/687x376?v=v2" width="687" height="376" role="button" title="santanuray_sap_3-1742721593698.png" alt="santanuray_sap_3-1742721593698.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;BTP- Authorization&lt;/P&gt;&lt;P&gt;Global Account Administrator – A user is created at the global account successful contract establishment. The user (Global Account Administrator) from the customer side is given the required authorizations by SAP to manage entitlement and create directories and subaccounts.&lt;/P&gt;&lt;P&gt;The administrator can also create more than one administrator to share the rights and privileges at the Global Account Level. The administrator creates a subaccount administrator.&lt;/P&gt;&lt;P&gt;The subaccount administrator can create both business users/developers and assign required roles and authorization at the subaccount level&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="santanuray_sap_4-1742721659506.png" style="width: 630px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/241486i94BF389024A420AF/image-dimensions/630x337?v=v2" width="630" height="337" role="button" title="santanuray_sap_4-1742721659506.png" alt="santanuray_sap_4-1742721659506.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;SAP Joule- Basics and Architecture&lt;/P&gt;&lt;P&gt;Before we start with Joule let’s start with the basics and foundation behind it.&lt;/P&gt;&lt;P&gt;Machine Learning :Machine learning (ML) is a field of study in artificial intelligence concerned with the development and study of statistical algorithms that can learn from data and generalize to unseen data, and thus perform tasks without explicit instructions&lt;/P&gt;&lt;P&gt;Example: A human baby is trained to learn and understand different relations in the family. Similarly, iPhone facial recognition is made to understand to it which one is the face of that particular iPhone owner.&lt;/P&gt;&lt;P&gt;LLMS: A large language model (LLM) is a type of machine learning model designed for natural language processing tasks such as language generation. LLMs are language models with many parameters and are trained with self-supervised learning on a vast amount of text.&lt;/P&gt;&lt;P&gt;Example: When we type to search for anything in Google it recommends some text in prediction.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="santanuray_sap_5-1742721709903.png" style="width: 745px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/241487iA35A0152F9518FDD/image-dimensions/745x162?v=v2" width="745" height="162" role="button" title="santanuray_sap_5-1742721709903.png" alt="santanuray_sap_5-1742721709903.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Document Grounding&lt;/STRONG&gt;: "Grounding" is a process that combines generative Large Language Models (LLMs) with advanced information retrieval to improve the quality and accuracy of responses, without the time, complexity, and expense of training or fine-tuning an LLM with company-specific data. Grounding uses a customer’s knowledge sources (e.g. travel policy, enablement content, service manuals, FAQs, etc.) to supplement an LLM's internal representation of information, which can help models be more accurate and reliable.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="santanuray_sap_6-1742721753729.png" style="width: 667px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/241488iB93C03485C2470AE/image-dimensions/667x336?v=v2" width="667" height="336" role="button" title="santanuray_sap_6-1742721753729.png" alt="santanuray_sap_6-1742721753729.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;LLMs &amp;amp; Joule&amp;nbsp;&lt;/P&gt;&lt;P&gt;By Integrating the power of LLMs and SAP-rich business context, SAP has launched JOULE. Joule helps users to easily navigate SAP systems, execute transactions, find information, and get analytical insights, making employees 80% more efficient.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Relevant&amp;nbsp;content for our users → ensuring Joule understands a user's context. This includes roles and permissions. But also, which SAP products the user is using.&lt;/LI&gt;&lt;LI&gt;Reliable&amp;nbsp;results → using LLMs means that responses are grounded on SAP knowledge and the business reality of the respective customer and end user.&lt;/LI&gt;&lt;LI&gt;Joule is&amp;nbsp;responsible&amp;nbsp;→ strict prohibition that any of our customer’s data is not used for training purposes or any other usage for any 3rd part&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;SAP Joule currently has the following interaction pattern.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Transactional Interaction: Example who is my manager?&lt;/LI&gt;&lt;LI&gt;Informational Interaction: What is my Leave policy in the organization?&lt;/LI&gt;&lt;LI&gt;Analytical Interactions: How many associates have completed their goal setting?&lt;/LI&gt;&lt;LI&gt;Navigational Interaction: Please take me to my address page&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Joule Integration with SuccessFactors&lt;/P&gt;&lt;P&gt;When we log in to SuccessFactors (SF) we can see the SAP Joule icon on the SF screen ( basically a plug-in in SF). We launch Joule from SF interface. Joule ( Chatbot) will launch from the SF.&amp;nbsp; The Joule instance sits in SAP BTP. &amp;nbsp;It is hosted in BTP subaccount.&lt;/P&gt;&lt;P&gt;SAP Build Work Zone is also created. This is very important as we do a user synchronization from SAP success factors to Build Work Zone using the Identity Provisioning service.&lt;/P&gt;&lt;P&gt;Cloud identity services are used for authentication. So that when we launch Jould it is authenticated using IAS tenant.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="santanuray_sap_7-1742721920880.png" style="width: 697px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/241489i4FA39355E9F847FF/image-dimensions/697x366?v=v2" width="697" height="366" role="button" title="santanuray_sap_7-1742721920880.png" alt="santanuray_sap_7-1742721920880.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The following are pre-requisite for establishing the connection between&lt;/P&gt;&lt;P&gt;SAP SF and Joule&lt;/P&gt;&lt;P&gt;1.SAP BTP Global Account.&lt;/P&gt;&lt;P&gt;2.Right Entitlement for Joule&lt;/P&gt;&lt;P&gt;3.Cloud Identity Service Admin&lt;/P&gt;&lt;P&gt;4.SuccessFactors Admin&lt;/P&gt;&lt;P&gt;5.All these user personas needs to be available&lt;/P&gt;&lt;P&gt;For Technical SMEs or Architects, I am sure they have this link to SAP. However, sharing it one for a ready reckoner in one place&lt;/P&gt;&lt;P&gt;&lt;A title="Activate Joule for SAP SuccessFactors" href="https://discovery-center.cloud.sap/protected/index.html#/missiondetail/4451/?tab=projectboard" target="_blank" rel="noopener nofollow noreferrer"&gt;https://discovery-center.cloud.sap/protected/index.html#/missiondetail/4451/?tab=projectboard&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Run Joule&lt;/P&gt;&lt;P&gt;If the installation goes all good with all user personas and correct authorization then the Joule icon will be visible in the SAP SF Screen. Please note the Joule permission must be added to the SF profile of the user. This is taken care of when we run the Booster on BTP side, it creates the joule permission&amp;nbsp; in SAP SF.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="santanuray_sap_8-1742722162978.png" style="width: 775px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/241491i26F269B1700F2995/image-dimensions/775x155?v=v2" width="775" height="155" role="button" title="santanuray_sap_8-1742722162978.png" alt="santanuray_sap_8-1742722162978.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="santanuray_sap_9-1742722204414.png" style="width: 718px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/241492i9605F485D107E19F/image-dimensions/718x359?v=v2" width="718" height="359" role="button" title="santanuray_sap_9-1742722204414.png" alt="santanuray_sap_9-1742722204414.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/explaining-sap-joule-for-hr-business-users-amp-functional-consultants/ba-p/14053853"/>
    <published>2025-03-23T10:47:21.753000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/big-upgrade-new-and-improved-sap-btp-account-model-recommendations-are-here/ba-p/14064273</id>
    <title>Big Upgrade! New and Improved SAP BTP Account Model Recommendations Are Here</title>
    <updated>2025-04-02T18:13:32.838000+02:00</updated>
    <author>
      <name>NHingerl35</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/131218</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;We're thrilled to announce&amp;nbsp;the release of the fully reworked and expanded &lt;A href="https://help.sap.com/docs/BTP/df50977d8bfa4c9a8a063ddb37113c43/2db81f42f5194454beecde6cd4994dda.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Setting Up Your Account Model&lt;/A&gt; chapter in the &lt;A href="https://help.sap.com/docs/BTP/df50977d8bfa4c9a8a063ddb37113c43/9f2bb927464e4d1ba3d13b2d79ca9bd1.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SAP BTP Administrator's Guide&lt;/A&gt;. Whether you’re an experienced SAP BTP administrator or new to the platform, this updated content is designed to equip you with the knowledge to tailor your account model to your organization's specific needs.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Blog AccountModelSetup.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/245854iFC072D28F208806A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Blog AccountModelSetup.jpg" alt="Blog AccountModelSetup.jpg" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1707388579"&gt;&lt;SPAN&gt;What's New?&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Explore these key topics, designed to help you refine your account setup:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/BTP/df50977d8bfa4c9a8a063ddb37113c43/2db81f42f5194454beecde6cd4994dda.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Setting Up Your Account Model&lt;/A&gt; &lt;SPAN class=""&gt;&amp;nbsp;–&amp;nbsp;Learn how to set up your global accounts, directories, subaccounts, spaces and namespaces in a&amp;nbsp;in a structure that aligns with your business and development requirements.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/BTP/df50977d8bfa4c9a8a063ddb37113c43/ec8a269c4312416dbb83deb9e5b6bc5b.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Cloud Foundry, Kyma, or Both?&lt;/A&gt; &lt;SPAN class=""&gt;&amp;nbsp;–&amp;nbsp;Understand the nuances of setting up account models for Cloud Foundry or Kyma, including how to combine them for maximum flexibility in both greenfield and brownfield scenarios.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/BTP/df50977d8bfa4c9a8a063ddb37113c43/4cb5276d832847aa8e5c82e73ef9ff10.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Subaccounts or Spaces/Namespaces?&lt;/A&gt;&lt;SPAN class=""&gt;&amp;nbsp;–&amp;nbsp;Explore the differences between subaccounts and spaces/namespaces and know when to use each for optimal isolation and organization.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/BTP/df50977d8bfa4c9a8a063ddb37113c43/7f1c318292934e088e5cd119271f0b1e.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Checklist: Drafting Your Account Model&lt;/A&gt;&lt;SPAN class=""&gt;&amp;nbsp;–&amp;nbsp;Follow an interactive checklist, complete with step-by-step instructions to research and draft an account model&amp;nbsp;that meets your company's specific business and technical needs.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/BTP/df50977d8bfa4c9a8a063ddb37113c43/9fe7e160bf58488aa42e726ebe3c7111.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Sharing SAP BTP Services&lt;/A&gt;&lt;SPAN class=""&gt;&amp;nbsp;–&amp;nbsp;Explore options for sharing SAP BTP services across subaccounts for cost-efficiency and centralized governance.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/BTP/df50977d8bfa4c9a8a063ddb37113c43/6bdb3a7170b84254bfaf0df52a112980.html?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Tools for Account Administration&lt;/A&gt;&lt;SPAN class=""&gt;&amp;nbsp;–&amp;nbsp;Compare the key account administration tools - SAP BTP cockpit, btp CLI, APIs, Terraform, and SAP Automation Pilot. Understand their strengths and recommended usage scenarios.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1510875074"&gt;Why This Matters&amp;nbsp;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;A well-structured account model is crucial for efficient management and scalability of your SAP BTP landscape. This updated chapter provides the insights and tools you need to create a robust setup that supports your organization's growth and innovation.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1314361569"&gt;&lt;SPAN&gt;Get Started Today&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Explore the new content and start refining your account model. Whether you’re looking to simplify your current setup or expand into new areas, this guide offers best practices and recommendations to support you.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1117848064"&gt;&lt;SPAN&gt;Your Feedback Matters&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;We’re always looking to improve. If you have questions or suggestions, give us feedback – your input is crucial as we continue to update the&amp;nbsp;&lt;A href="https://help.sap.com/docs/BTP/df50977d8bfa4c9a8a063ddb37113c43/9f2bb927464e4d1ba3d13b2d79ca9bd1.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SAP BTP Administrator's Guide.&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/big-upgrade-new-and-improved-sap-btp-account-model-recommendations-are-here/ba-p/14064273"/>
    <published>2025-04-02T18:13:32.838000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/accessing-sap-btp-kyma-runtime-workloads-from-on-premise-or-corporate/ba-p/14088074</id>
    <title>Accessing SAP BTP, Kyma runtime workloads from on-premise or corporate network</title>
    <updated>2025-04-28T11:10:58.131000+02:00</updated>
    <author>
      <name>gabbi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13919</uri>
    </author>
    <content>&lt;P&gt;SAP BTP, Kyma runtime customers often need to access applications and workloads deployed on SAP BTP, Kyma runtime from their corporate network or on-premise data centers without exposing them to the internet.&lt;/P&gt;&lt;P&gt;This can be achieved using&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/service-channels-on-premise-to-cloud-connectivity" target="_blank" rel="noopener noreferrer"&gt;Service Channels&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in conjunction with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector" target="_blank" rel="noopener noreferrer"&gt;Cloud Connector&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and the Connectivity Proxy module in the SAP BTP, Kyma runtime.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="on-prem-to-cloud.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/255425iA61029FEB5893727/image-size/large?v=v2&amp;amp;px=999" role="button" title="on-prem-to-cloud.png" alt="on-prem-to-cloud.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;According to the &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/using-service-channels?version=Cloud" target="_self" rel="noopener noreferrer"&gt;official documentation&lt;/A&gt;:&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;Cloud Connector service channels provide access from an external network to specific services on SAP BTP or to an ABAP Cloud system. These services are not exposed to direct access from the Internet. The Cloud Connector ensures that the connection is always available and that communication is secured.&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;For SAP BTP, Kyma runtime workloads, you should use the service channel of the K8s Cluster type, which establishes a TCP connection to an SAP BTP, Kyma runtime workload.&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cc-service-channel.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/255418iFB66516ECD9A51D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="cc-service-channel.png" alt="cc-service-channel.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For more information, follow the steps outlined in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://github.com/SAP-samples/kyma-runtime-extension-samples/tree/main/on-prem-to-cloud" target="_blank" rel="nofollow noopener noreferrer"&gt;Connectivity: Accessing a Workload in SAP BTP, Kyma Runtime From the Corporate Network&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;sample.&lt;/P&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId-1709352864"&gt;Takeaway&lt;/H2&gt;&lt;/DIV&gt;&lt;P&gt;Use Service Channels to access applications and workloads deployed on SAP BTP, Kyma runtime from your corporate network or on-premise data centers without exposing them to the internet.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/accessing-sap-btp-kyma-runtime-workloads-from-on-premise-or-corporate/ba-p/14088074"/>
    <published>2025-04-28T11:10:58.131000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/building-an-agentic-ai-system-with-agent2agent-a2a-and-mcp-tools-on-sap-btp/ba-p/14093412</id>
    <title>Building an Agentic AI System with Agent2Agent (A2A) and MCP Tools on SAP BTP</title>
    <updated>2025-05-05T17:30:34.559000+02:00</updated>
    <author>
      <name>carlosbasto</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/209738</uri>
    </author>
    <content>&lt;P class=""&gt;In our previous blogs (&lt;A class="" href="https://community.sap.com/t5/technology-blogs-by-sap/building-an-agentic-ai-system-with-sap-generative-ai-hub/ba-p/14078187" target="_blank"&gt;Building an Agentic AI System with SAP Generative AI Hub&lt;/A&gt;&amp;nbsp;and &lt;A class="" href="https://community.sap.com/t5/technology-blogs-by-sap/building-an-agentic-ai-system-with-model-context-protocol-mcp-and-sap-btp/ba-p/14090900" target="_blank"&gt;Building an Agentic AI System with Model Context Protocol (MCP) and SAP BTP Kyma&lt;/A&gt;), we showed how to build and scale an AI assistant using SAP Generative AI Hub, with tool orchestration powered by &lt;A href="https://modelcontextprotocol.io/introduction" target="_self" rel="nofollow noopener noreferrer"&gt;Model Context Protocol (MCP)&lt;/A&gt; and containerized deployment in &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/kyma-environment?locale=en-US" target="_self" rel="noopener noreferrer"&gt;SAP BTP Kyma&lt;/A&gt;. The result was a modular, cloud-native AI system capable of tool reasoning, retrieval-augmented generation (RAG), and dynamic responses.&lt;/P&gt;&lt;P class=""&gt;But enterprise AI needs are growing fast. As we try to scale AI to handle diverse domains (weather, planning, ERP insights, document summarization, and more) it becomes difficult for a single assistant to do it all.&lt;/P&gt;&lt;P class=""&gt;That’s where the &lt;A href="https://google.github.io/A2A/" target="_self" rel="nofollow noopener noreferrer"&gt;Agent2Agent (A2A) Protocol&lt;/A&gt; enters the picture.&lt;/P&gt;&lt;P class=""&gt;&lt;A href="https://developers.googleblog.com/en/a2a-a-new-era-of-agent-interoperability/" target="_self" rel="nofollow noopener noreferrer"&gt;Recently introduced by Google&lt;/A&gt;, A2A is an open protocol for communication between agents, enabling agents built on different frameworks, hosted across different platforms, and owned by different teams or vendors to collaborate securely and interoperably.&lt;/P&gt;&lt;P class=""&gt;Each agent describes its capabilities in an Agent Card, exposes a standard set of endpoints, and communicates via a shared schema. A2A allows agents to discover each other, delegate tasks, share artifacts, and stream real-time updates.&lt;/P&gt;&lt;P class=""&gt;In this blog, we’ll walk you through how we extended our SAP-based assistant to speak A2A, making it capable of interacting with remote agents that live anywhere: in your own infrastructure, another team's container, or even another vendor’s platform.&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;Let’s take a look at the full solution architecture.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1581048367"&gt;A2A Agent Architecture on SAP BTP with MCP Tooling&lt;/H1&gt;&lt;P class=""&gt;The diagram below illustrates how we structured the solution to enable Agent2Agent (A2A) protocol-based communication within my AI assistant ecosystem. The focus of this setup is to configure and orchestrate interoperable agents (not to build a front-end application), making it broadly adaptable to other enterprise or research scenarios requiring multi-agent collaboration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="carlosbasto_0-1746447273935.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257659iC88B57E0D7F986C1/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_0-1746447273935.png" alt="carlosbasto_0-1746447273935.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1513617581"&gt;Key Components&lt;/H2&gt;&lt;H3 id="toc-hId-1446186795"&gt;Front-End + Host Agent&lt;/H3&gt;&lt;P class=""&gt;A lightweight user interface captures user input and routes it to a Host Agent. This Host Agent is implemented using Google’s &lt;A class="" href="https://github.com/google/A2A/tree/main/samples/python/hosts/multiagent" target="_new" rel="noopener nofollow noreferrer"&gt;A2A sample host agent&lt;/A&gt; and acts as the central A2A client. It is responsible for:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Creating tasks&lt;/LI&gt;&lt;LI&gt;Delegating them to specialized agents&lt;/LI&gt;&lt;LI&gt;Streaming real-time updates&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1249673290"&gt;&lt;STRONG&gt;Remote Agents + A2A Clients&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Each Remote Agent represents a specialized domain expert such as weather intelligence, planning assistance, or knowledge retrieval. These agents are also based on Google’s A2A samples and behave as both A2A clients and task processors, capable of:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Sending tasks to other agents&lt;/LI&gt;&lt;LI&gt;Receiving and fulfilling tasks independently&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1053159785"&gt;A2A Servers (Utilities Agent, SAP Agent)&lt;/H3&gt;&lt;P class=""&gt;These are domain-specific agents that expose fully A2A-compliant server endpoints to process and respond to incoming tasks:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Utilities Agent&lt;/STRONG&gt;: Handles time and weather requests.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP Agent&lt;/STRONG&gt;: Performs enterprise-grade search over structured and unstructured data using Retrieval-Augmented Generation (RAG) powered by &lt;A href="https://help.sap.com/docs/hana-cloud-database/sap-hana-cloud-sap-hana-database-vector-engine-guide/sap-hana-cloud-sap-hana-database-vector-engine-guide?locale=en-US" target="_self" rel="noopener noreferrer"&gt;SAP HANA Cloud’s Vector Engine&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Each server advertises its capabilities via its .well-known/agent.json (Agent Card), allowing them to be discovered and used dynamically by other A2A agents.&lt;/P&gt;&lt;H3 id="toc-hId-856646280"&gt;MCP Server on SAP BTP Kyma (Tool Execution Layer)&lt;/H3&gt;&lt;P class=""&gt;Domain logic is implemented as tools registered in an &lt;A href="https://google.github.io/A2A/topics/a2a-and-mcp/" target="_self" rel="nofollow noopener noreferrer"&gt;MCP (Model Context Protocol)&lt;/A&gt; server, deployed using FastAPI on SAP BTP Kyma. These tools encapsulate specialized functions and are invoked during reasoning:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;get_weather:&lt;/STRONG&gt; Returns weather data&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;get_time:&lt;/STRONG&gt; Returns current time&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;retriever:&lt;/STRONG&gt; Executes RAG search against SAP HANA Cloud Vector Engine&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Agents access these tools by dynamically registering them as callable functions within their reasoning loop.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-401967337"&gt;Adapting the A2A Structure for Enterprise Agents on SAP&lt;/H1&gt;&lt;P class=""&gt;To implement A2A protocol–based collaboration within our ecosystem, we began with the official &lt;A class="" href="https://github.com/google/A2A/tree/main/samples/python" target="_new" rel="noopener nofollow noreferrer"&gt;Google A2A Python samples&lt;/A&gt;, which provide a reference structure for building agents that can act as A2A clients, servers, or both. The image below shows the original A2A agent directory provided by Google:&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-unicode-emoji" title=":file_folder:"&gt;📁&lt;/span&gt;&lt;A href="https://github.com/google/A2A/tree/main/samples/python/agents/ag2" target="_self" rel="nofollow noopener noreferrer"&gt;agents/ag2/&lt;/A&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;agent.py — Main agent logic&lt;/LI&gt;&lt;LI&gt;task_manager.py — Task execution management&lt;/LI&gt;&lt;LI&gt;__main__.py, __init__.py, pyproject.toml — Package initialization and dependencies&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;To bring this into a real-world enterprise setting, we extended this architecture to include multiple agents, each encapsulated in its own submodule. Our structure includes:&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-unicode-emoji" title=":file_folder:"&gt;📁&lt;/span&gt;agents/&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":file_folder:"&gt;📁&lt;/span&gt;sap/ — SAP Agent (exposes enterprise RAG capabilities)&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":file_folder:"&gt;📁&lt;/span&gt;utils/ — Utilities Agent (weather + time tools)&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":file_folder:"&gt;📁&lt;/span&gt;common/ — Shared logic if needed across agents&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Each agent remains A2A-compliant and can independently register itself, handle tasks, and advertise its capabilities via an Agent Card.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-334536551"&gt;SAP Agent: Enterprise Knowledge &amp;amp; Search&lt;/H2&gt;&lt;P class=""&gt;The sap agent is a domain-specialized A2A server that offers enterprise-grade Retrieval-Augmented Generation (RAG) over structured and unstructured data stored in &lt;STRONG&gt;SAP HANA Cloud&lt;/STRONG&gt;.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Key files&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;agent.py — Implements the A2A server logic, task processing loop, and how artifacts are returned.&lt;/LI&gt;&lt;LI&gt;task_manager.py — Connects to the MCP tool server (deployed on SAP BTP Kyma) and executes the retriever function, which performs semantic search.&lt;/LI&gt;&lt;LI&gt;pyproject.toml — Declares the agent as an independent runnable module with its own dependencies.&lt;/LI&gt;&lt;LI&gt;__main__.py — Allows this agent to be launched independently.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;This agent exposes its capabilities in a .well-known/agent.json, registering itself as a RAG-capable endpoint. When invoked by the Host Agent (or any other agent), it executes the retrieval task and streams the result back using A2A's artifact and message parts schema.&lt;/P&gt;&lt;P class=""&gt;By modularizing this agent and separating enterprise logic from generic utilities, we make the setup highly scalable. You can add more agents later (e.g., summarizers, planners, auditors) without touching the SAP agent logic because everything is loosely coupled through A2A.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-138023046"&gt;Utilities Agent: Domain Tools (Weather &amp;amp; Time)&lt;/H2&gt;&lt;P class=""&gt;The utils agent complements the SAP Agent by handling more lightweight, utility-style tasks such as providing current time or weather conditions. Though simple in scope, it plays an important role in demonstrating how multiple agents can independently contribute to a broader conversation via the A2A protocol.&lt;/P&gt;&lt;P class=""&gt;This agent also follows the same modular, self-contained structure as the others:&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Key files&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;agent.py — Registers this agent as an A2A server, handling inbound tasks.&lt;/LI&gt;&lt;LI&gt;task_manager.py — Routes each task to the appropriate MCP tool endpoint (e.g., get_time, get_weather) hosted in the Kyma-based MCP server.&lt;/LI&gt;&lt;LI&gt;pyproject.toml — Declares the agent as an independent runnable module with its own dependencies.&lt;/LI&gt;&lt;LI&gt;__main__.py — Allows this agent to be launched independently.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Each tool is registered dynamically within the agent's reasoning logic and invoked via MCP. For example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Tool 1: get_weather&lt;/STRONG&gt; → Fetches weather info for a given city.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Tool 2: get_time&lt;/STRONG&gt; → Returns the current time.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;These tools live behind the MCP server but are logically abstracted at the agent level. This separation ensures that other agents don’t need to know or care where the logic runs. They just send an A2A task, and the Utilities Agent handles the orchestration behind the scenes.&lt;/P&gt;&lt;P class=""&gt;Like the SAP Agent, this Utilities Agent is fully A2A-compliant, can run independently, and can be discovered by any other agent via its agent card.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--187573178"&gt;&lt;STRONG&gt;A2A Agents Internals: Architecture and Execution Flow&lt;/STRONG&gt;&lt;/H1&gt;&lt;P class=""&gt;This section introduces the core files for building A2A compliant agents: defining its reasoning logic (agent.py), managing task interactions with the A2A runtime (task_manager.py), and launching the agent as an A2A-compatible server (__main__.py).&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-92250393"&gt;File: agent.py — SAP Agent Execution Engine for A2A Tasks&lt;/H2&gt;&lt;P class=""&gt;The agent.py file implements the core logic for the SAP Agent, a fully A2A-compliant server-side agent designed to process incoming tasks using the tasks/sendSubscribe streaming interface. This agent is focused on executing Retrieval-Augmented Generation (RAG) via a retriever tool registered in an MCP (Model Context Protocol) server, hosted on SAP BTP Kyma and exposed through Server-Sent Events (SSE). The agent is constructed around A2A’s principles of agent autonomy, schema-based communication, and structured task flow.&lt;/P&gt;&lt;P class=""&gt;When the agent receives a user query, it dynamically generates an LLM prompt that includes a list of available tools fetched via the MCP session. This prompt is intended to guide the LLM in deciding whether tool invocation is necessary. The agent defines a strict JSON schema that the LLM must follow, ensuring that responses are interpretable and actionable, particularly for determining whether to call the retriever function and with which parameters.&lt;/P&gt;&lt;P class=""&gt;If the LLM decides that a tool should be used, the agent executes it using session.call_tool(), and stores the results. After all tool calls are handled, the agent uses the returned artifacts (tool outputs) to generate a final natural-language response. This final response is created by invoking the LLM again with a new prompt that summarizes the tool results, following a reasoning pattern that separates tool selection from user-facing output generation.&lt;/P&gt;&lt;P class=""&gt;The stream() method exposes this entire lifecycle as an A2A streaming-capable endpoint. It starts by yielding an initial “processing” message to the A2A task manager, then creates a new MCP session using the SSE transport. With the session active, it initializes the LLM (in this case, GPT-4o via SAP GenAI Hub), executes the full tool-orchestration pipeline, and finally streams back the completed result.&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;import json
import asyncio
from typing import AsyncIterable, Dict, Any

from mcp import ClientSession
from mcp.client.sse import sse_client
from gen_ai_hub.orchestration.models.llm import LLM
from gen_ai_hub.orchestration.models.message import SystemMessage, UserMessage, AssistantMessage
from gen_ai_hub.orchestration.models.template import Template
from gen_ai_hub.orchestration.models.config import OrchestrationConfig
from gen_ai_hub.orchestration.service import OrchestrationService
from gen_ai_hub.orchestration.models.response_format import ResponseFormatJsonSchema


class SAPAgent:
    """Agent focused on using the 'retriever' tool via SAP GenAI Hub and MCP session."""

    SUPPORTED_CONTENT_TYPES = ["text", "text/plain"]

    def __init__(self):
        pass

    def _build_dynamic_schema(self) -&amp;gt; dict:
        """Define expected JSON schema for tool-calling reasoning."""
        return {
            "title": "ToolCalls",
            "type": "object",
            "properties": {
                "tool_calls": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "decision": {"type": "string"},
                            "reason": {"type": "string"},
                            "function": {"type": "string"},
                            "parameters": {"type": "object"},
                        },
                        "required": ["decision", "reason", "function", "parameters"],
                    }
                }
            },
            "required": ["tool_calls"]
        }

    async def _generate_instruction(self) -&amp;gt; str:
        """Generate dynamic system prompt based on available 'retriever' tool."""
        description = json.dumps(await self.list_tools(), indent=2)
        return f"""
        You are an intelligent AI assistant capable of deciding whether to invoke tools based on the user's request.

        Available tools:
        {description}

        Instructions:
        - Use the 'retriever' tool for any factual or document-related question.
        - Return a JSON entry with the function name and parameters.
        - If no tool is relevant, return an entry with decision = "no_tool".

        Return ONLY valid JSON like:
        {{
          "tool_calls": [
            {{
              "decision": "tool",
              "reason": "The user is asking a factual question.",
              "function": "retriever",
              "parameters": {{
                "question": "What is SAP Datasphere?"
              }}
            }}
          ]
        }}
        """

    async def list_tools(self) -&amp;gt; dict:
        """Fetch list of tools from the MCP session."""
        tools_result = await self.session.list_tools()
        return {tool.name: {"description": tool.description} for tool in tools_result.tools}

    async def _execute_tool(self, decision: dict) -&amp;gt; str:
        """Execute the 'retriever' tool based on LLM decision."""
        try:
            result = await self.session.call_tool(decision["function"], arguments=decision.get("parameters", {}))
            return result.content[0].text
        except Exception as e:
            return f"Error: {str(e)}"

    async def _finalize_response(self, user_query: str, tool_results: list, messages: list) -&amp;gt; str:
        """Generate final response after tool usage."""
        messages.append(SystemMessage(
            """
            You now have access to tool results. Use ONLY these results to answer the user's original question naturally.
            Do not ask for any data you already received. Be concise and helpful.
            One or more tools may have returned vague answers. If so, use your own knowledge to fill the gaps.
            """
        ))

        messages.append(UserMessage(f"User question: {user_query}"))

        summary = "\n".join([f"- Tool `{name}` returned: {json.dumps(result)}" for name, result in tool_results])
        messages.append(UserMessage(f"Tool Results:\n{summary}"))

        template = Template(messages=messages, response_format="text")
        config = OrchestrationConfig(template=template, llm=self.llm)
        response = OrchestrationService(config=config).run()
        return response.module_results.llm.choices[0].message.content

    async def run(self, user_query: str) -&amp;gt; str:
        """Main method to orchestrate LLM + retriever tool."""
        system_message = SystemMessage(await self._generate_instruction())
        prompt = UserMessage(user_query)
        messages = [system_message, prompt]

        template = Template(
            messages=messages,
            response_format=ResponseFormatJsonSchema(
                name="ToolCall",
                description="Tool execution format",
                schema=self._build_dynamic_schema()
            )
        )

        config = OrchestrationConfig(template=template, llm=self.llm)
        response = OrchestrationService(config=config).run()

        decisions_json = json.loads(response.module_results.llm.choices[0].message.content)
        tool_results = []

        for decision in decisions_json.get("tool_calls", []):
            if decision.get("decision") == "tool":
                tool_response = await self._execute_tool(decision)
                tool_results.append((decision["function"], tool_response))
                messages.append(AssistantMessage(json.dumps(decision)))
            else:
                messages.append(AssistantMessage(json.dumps(decision)))

        return await self._finalize_response(user_query, tool_results, messages)

    async def stream(self, query: str, sessionId: str) -&amp;gt; AsyncIterable[Dict[str, Any]]:
        """
        Entry point for streaming response to A2A task manager.
        Initializes MCP session and streams a final task result.
        """
        yield {
            "is_task_complete": False,
            "require_user_input": False,
            "content": "Processing your request..."
        }

        try:
            async with sse_client("https://&amp;lt;your-server&amp;gt;.kyma.ondemand.com/sse") as (read, write):
                async with ClientSession(read, write) as session:
                    await session.initialize()
                    self.session = session
                    self.llm = LLM(name="gpt-4o", version="latest", parameters={"max_tokens": 2000, "temperature": 0.2})
                    response_text = await self.run(query)

            yield {
                "is_task_complete": True,
                "require_user_input": False,
                "content": response_text
            }

        except Exception as e:
            yield {
                "is_task_complete": True,
                "require_user_input": True,
                "content": f"An error occurred: {str(e)}"
            }

    def invoke(self, query: str, sessionId: str) -&amp;gt; Dict[str, Any]:
        """Not implemented — this agent supports streaming only."""
        raise NotImplementedError("Use the streaming interface (tasks/sendSubscribe) instead.")&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;This implementation adheres to A2A's official design by:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Respecting the SUPPORTED_CONTENT_TYPES contract defined in the agent’s AgentCard.&lt;/LI&gt;&lt;LI&gt;Using the SSE-based streaming interface (tasks/sendSubscribe) for real-time task progression.&lt;/LI&gt;&lt;LI&gt;Managing the full lifecycle of dynamic reasoning, tool invocation, and output generation.&lt;/LI&gt;&lt;LI&gt;Isolating the orchestration logic cleanly within a single class.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;The invoke() method is intentionally unimplemented, signaling that this agent is designed for streaming scenarios only, an acceptable configuration per A2A protocol. Overall, this file showcases how an SAP-native agent can participate in an interoperable, multi-agent ecosystem via open standards like A2A and MCP.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--397666119"&gt;&lt;STRONG&gt;File: task_manager.py — Managing the A2A Task Lifecycle&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;The task_manager.py file defines the AgentTaskManager class, which extends Google’s sample InMemoryTaskManager to handle the full lifecycle of A2A tasks for the SAP Agent. This includes receiving tasks, validating requests, invoking the agent, updating task status, and returning results or streaming updates to the A2A runtime via Server-Sent Events (SSE).&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;from typing import AsyncIterable
from common.types import (
    SendTaskRequest,
    TaskSendParams,
    Message,
    TaskStatus,
    Artifact,
    TextPart,
    TaskState,
    SendTaskResponse,
    InternalError,
    JSONRPCResponse,
    SendTaskStreamingRequest,
    SendTaskStreamingResponse,
    TaskArtifactUpdateEvent,
    TaskStatusUpdateEvent
)
from common.server.task_manager import InMemoryTaskManager
from agent import SAPAgent
import common.server.utils as utils
import asyncio
import logging
import traceback

logger = logging.getLogger(__name__)


class AgentTaskManager(InMemoryTaskManager):
    """Agent Task Manager for SAP Agent, handles task lifecycle and packaging."""

    def __init__(self, agent: SAPAgent):
        super().__init__()
        self.agent = agent

   # -------------------------------------------------------------
    # Public API methods
    # -------------------------------------------------------------        

    async def on_send_task(self, request: SendTaskRequest) -&amp;gt; SendTaskResponse:

        validation_error = self._validate_request(request)
        if validation_error:
            return SendTaskResponse(id=request.id, error=validation_error.error)
        
        await self.upsert_task(request.params)
        await self.update_store(
            request.params.id, TaskStatus(state=TaskState.WORKING), None
        )
        query = self._extract_user_query(request.params)
        
        try:
            agent_response = await self.agent.invoke(user_query=query)
            return await self._handle_send_task(request, agent_response)
        except Exception as e:
            logger.error(f"Error invoking agent: {e}")
            return SendTaskResponse(
                id=request.id,
                error=InternalError(message=f"Error during on_send_task: {str(e)}")
            )

    async def on_send_task_subscribe(
            self, request: SendTaskStreamingRequest
            ) -&amp;gt; AsyncIterable[SendTaskStreamingResponse] | JSONRPCResponse:
        
        try:
            error = self._validate_request(request)
            if error:
                return error

            await self.upsert_task(request.params)
            
            task_send_params: TaskSendParams = request.params
            sse_event_queue = await self.setup_sse_consumer(task_send_params.id, False)            
            
            asyncio.create_task(self._handle_send_task_streaming(request))
            
            return self.dequeue_events_for_sse(
                request.id, request.params.id, sse_event_queue
                )
        
        except Exception as e:
            logger.error(f"Error in SSE stream: {e}")
            print(traceback.format_exc())
            return JSONRPCResponse(
                id=request.id,
                error=InternalError(
                    message="An error occurred while streaming the response"
                ),
            )

    # -------------------------------------------------------------
    # Agent response handlers
    # -------------------------------------------------------------

    async def _handle_send_task(
        self, request: SendTaskRequest, agent_response: dict
    ) -&amp;gt; SendTaskResponse:

        task_send_params: TaskSendParams = request.params
        task_id = task_send_params.id
        history_length = task_send_params.historyLength
        task_status = None

        parts = [TextPart(type="text", text=agent_response["content"])]
        artifact = None
        if agent_response["require_user_input"]:
            task_status = TaskStatus(
                state=TaskState.INPUT_REQUIRED,
                message=Message(role="agent", parts=parts),
            )
        else:
            task_status = TaskStatus(state=TaskState.COMPLETED)
            artifact = Artifact(parts=parts)
        
        updated_task = await self.update_store(
            task_id, task_status, None if artifact is None else [artifact]
        )
        
        task_result = self.append_task_history(updated_task, history_length)
        return SendTaskResponse(id=request.id, result=task_result)

    async def _handle_send_task_streaming(self, request: SendTaskStreamingRequest):
        
        task_send_params: TaskSendParams = request.params
        query = self._extract_user_query(task_send_params)

        try:
            async for item in self.agent.stream(query, task_send_params.sessionId):
                is_task_complete = item["is_task_complete"]
                require_user_input = item["require_user_input"]
                content = item["content"]
                
                logger.info(f"Stream item received: complete={is_task_complete}, require_input={require_user_input}, content_len={len(content)}")
                
                artifact = None
                message = None
                parts = [TextPart(type="text", text=content)]
                end_stream = False

                if not is_task_complete and not require_user_input:
                    # Processing message - working state
                    task_state = TaskState.WORKING
                    message = Message(role="agent", parts=parts)
                    logger.info(f"Sending WORKING status update")
                elif require_user_input:
                    # Requires user input - input required state
                    task_state = TaskState.INPUT_REQUIRED
                    message = Message(role="agent", parts=parts)
                    end_stream = True
                    logger.info(f"Sending INPUT_REQUIRED status update (final)")
                else:
                    # Task completed - completed state with artifact
                    task_state = TaskState.COMPLETED
                    artifact = Artifact(parts=parts, index=0, append=False)
                    end_stream = True
                    logger.info(f"Sending COMPLETED status with artifact (final)")

                # Update task store (return value not used)
                task_status = TaskStatus(state=task_state, message=message)
                await self.update_store(
                    task_send_params.id,
                    task_status,
                    None if artifact is None else [artifact],
                )

                # First send artifact if we have one
                if artifact:
                    logger.info(f"Sending artifact event for task {task_send_params.id}")
                    task_artifact_update_event = TaskArtifactUpdateEvent(
                        id=task_send_params.id, artifact=artifact
                    )
                    await self.enqueue_events_for_sse(
                        task_send_params.id, task_artifact_update_event
                    )                    
                
                # Then send status update
                logger.info(f"Sending status update for task {task_send_params.id}, state={task_state}, final={end_stream}")
                task_update_event = TaskStatusUpdateEvent(
                    id=task_send_params.id, status=task_status, final=end_stream
                )
                await self.enqueue_events_for_sse(
                    task_send_params.id, task_update_event
                )

        except Exception as e:
            logger.error(f"An error occurred while streaming the response: {e}")
            logger.error(traceback.format_exc())
            await self.enqueue_events_for_sse(
                task_send_params.id,
                InternalError(message=f"An error occurred while streaming the response: {e}")                
            )

    # -------------------------------------------------------------
    # Utility methods
    # -------------------------------------------------------------

    def _validate_request(
        self, request: SendTaskRequest | SendTaskStreamingRequest
    ) -&amp;gt; JSONRPCResponse | None:
        
        task_send_params: TaskSendParams = request.params
        if not utils.are_modalities_compatible(
            task_send_params.acceptedOutputModes, SAPAgent.SUPPORTED_CONTENT_TYPES
        ):
            logger.warning(
                "Unsupported output mode. Received %s, Support %s",
                task_send_params.acceptedOutputModes,
                SAPAgent.SUPPORTED_CONTENT_TYPES,
            )
            return utils.new_incompatible_types_error(request.id)
        return None
        
    def _extract_user_query(self, task_send_params: TaskSendParams) -&amp;gt; str:
        """
        Extract the user's text query from the task parameters.
        
        Extracts and returns the text content from the first part of the user's message.
        Currently only supports text parts.
        
        Args:
            task_send_params: The parameters of the task containing the user's message.
            
        Returns:
            str: The extracted text query.
            
        Raises:
            ValueError: If the message part is not a TextPart.
        """
        part = task_send_params.message.parts[0]
        if not isinstance(part, TextPart):
            raise ValueError("Only text parts are supported")
        return part.text&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--887582631"&gt;Key Responsibilities:&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Task Validation &amp;amp; Creation:&lt;/STRONG&gt; On receiving a task via on_send_task or on_send_task_subscribe, the manager validates the request and initializes the task store.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Agent Invocation:&lt;/STRONG&gt; Delegates the user query to the SAP Agent’s invoke() or stream() method depending on whether the request is synchronous or streaming.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;State Management:&lt;/STRONG&gt; Translates agent responses into A2A-compatible TaskStatus and Artifact objects, updating the task state accordingly.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Streaming Support:&lt;/STRONG&gt; Implements asynchronous event streaming via SSE using enqueue_events_for_sse() and dequeue_events_for_sse(), allowing the client to receive real-time progress, partial results, and final outputs, core to the A2A streaming spec (&lt;A href="https://google.github.io/A2A/topics/push-notifications/" target="_self" rel="nofollow noopener noreferrer"&gt;tasks/sendSubscribe&lt;/A&gt;).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Output Formatting:&lt;/STRONG&gt; All messages returned to the A2A protocol are encoded using TextPart and Message objects per the JSON schema defined by A2A.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;This design ensures full compliance with the A2A protocol’s expectations around TaskStatus, Artifact, and progressive output delivery, as described in the &lt;A href="https://github.com/google/A2A/blob/main/docs/specification/agent-to-agent-communication.md" target="_self" rel="nofollow noopener noreferrer"&gt;Agent-to-Agent Communication&lt;/A&gt;.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--790693129"&gt;&lt;STRONG&gt;File: __main__.py — Bootstrapping the A2A SAP Agent&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;This file initializes and launches the SAP Agent as an A2A-compatible server by using Google’s A2AServer abstraction. It defines how the agent exposes its capabilities, endpoint, and metadata through the &lt;STRONG&gt;Agent Card&lt;/STRONG&gt;, which is a key requirement of the &lt;A href="https://github.com/google/A2A/blob/main/specification/json/a2a.json" target="_self" rel="nofollow noopener noreferrer"&gt;Agent2Agent (A2A) protocol specification&lt;/A&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;import click
import logging

from agent import SAPAgent
from task_manager import AgentTaskManager
from common.server.server import A2AServer
from common.types import AgentCard, AgentCapabilities, AgentSkill, MissingAPIKeyError

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

@click.command()
@click.option("--host", "host", default="localhost")
@click.option("--port", "port", default=8001)

def main(host, port):
    """Starts the SAP Retriever Agent via A2A server."""

    try:
        capabilities = AgentCapabilities(streaming=True)

        skills = [
            AgentSkill(
                id="sap_agent",
                name="SAP Agent",
                description="Answers SAP-related questions using a retriever tool.",
                tags=["sap", "retriever", "knowledge"],
                examples=[
                    "What is SAP Datasphere?",
                    "Explain the role of SAP BTP.",
                    "How does SAP S/4HANA differ from ECC?"
                ]
            )
        ]

        agent_card = AgentCard(
            name="SAP Agent",
            description="Intelligent agent for answering SAP-related questions using knowledge retrieval.",
            url=f"http://{host}:{port}/",
            version="1.0.0",
            defaultInputModes=SAPAgent.SUPPORTED_CONTENT_TYPES,
            defaultOutputModes=SAPAgent.SUPPORTED_CONTENT_TYPES,
            capabilities=capabilities,
            skills=skills,
        )

        server = A2AServer(
            agent_card=agent_card,
            task_manager=AgentTaskManager(agent=SAPAgent()),
            host=host,
            port=port
        )

        logger.info(f"Starting SAP Retriever Agent on {host}:{port}")
        server.start()
        logger.info(f"Uvicorn should now be running at http://{host}:{port}")

    except MissingAPIKeyError as e:
        logger.error(f"API Key missing: {e}")
        exit(1)
    except Exception as e:
        logger.error(f"Startup error: {e}")
        exit(1)


if __name__ == "__main__":
    main()&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--1280609641"&gt;Key Functions and Design:&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Agent Card Declaration:&lt;/STRONG&gt; The agent's public metadata is encapsulated in an AgentCard, including name, URL, supported modalities, skills (e.g., answering SAP-related queries), and version. This enables discovery by client agents via the /.well-known/agent.json endpoint.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Skill Definition:&lt;/STRONG&gt; The agent declares a single skill (sap_agent) describing its domain expertise: SAP product knowledge retrieval.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Task Manager Binding:&lt;/STRONG&gt; The A2AServer is configured with a custom AgentTaskManager that handles A2A task lifecycle and invokes the SAPAgent defined earlier.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Streaming Support:&lt;/STRONG&gt; Capabilities are declared to indicate the agent supports streaming task updates (i.e., tasks/sendSubscribe), a core feature of A2A.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;This entry point allows the agent to be deployed as a compliant A2A Server capable of securely receiving and responding to tasks over HTTP using the shared protocol, ensuring full interoperability with any A2A client.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--1183720139"&gt;Extending the Agent Mesh: Utility Agent and the Pattern for Domain-Specific Agents&lt;/H3&gt;&lt;P class=""&gt;Following the same structure as the SAP Agent, the &lt;STRONG&gt;Utility Agent&lt;/STRONG&gt; demonstrates how to create another domain-specific A2A-compatible agent. In this case, one focused on answering weather and time-related queries using external tools.&lt;/P&gt;&lt;P class=""&gt;Just like the SAP Agent, it includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;agent.py&lt;/STRONG&gt; – Encapsulates reasoning and tool-calling logic using GenAI Hub + MCP tools (get_weather, get_time_now).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;task_manager.py&lt;/STRONG&gt; – Manages the A2A task lifecycle (receiving, processing, streaming updates).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;__main__.py&lt;/STRONG&gt; – Boots up the agent with a proper Agent Card and A2A server configuration.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;The &lt;STRONG&gt;main differences&lt;/STRONG&gt; lie in:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;The &lt;STRONG&gt;tool set&lt;/STRONG&gt; (e.g., get_weather vs retriever).&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;        skills = [
            AgentSkill(
                id="utility_agent",
                name="Utility Agent",
                description="Answers weather and time-related questions using external tools.",
                tags=["weather", "time"],
                examples=[
                    "What time is it in Brazil?", "What is the weather like now?"
                    ]
                )
            ]&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;The &lt;STRONG&gt;instructions&lt;/STRONG&gt; returned to the LLM for tool decisioning.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;    async def _generate_instruction(self) -&amp;gt; str:
        """Generate dynamic system prompt based on registered tools."""
        description = json.dumps(await self.list_tools(), indent=2)
        return f"""
        You are an intelligent AI assistant capable of deciding whether to invoke tools based on the user's request.

        Available tools:
        {description}

        Instructions:
        - For each relevant tool, return a JSON entry with the function name and parameters.
        - If no tool is relevant, return an entry with decision = "no_tool".

        Return ONLY valid JSON like:
        {{
          "tool_calls": [
            {{
              "decision": "tool",
              "reason": "The user asked for weather.",
              "function": "get_weather",
              "parameters": {{
                "latitude": 48.8566,
                "longitude": 2.3522
              }}
            }},
            {{
              "decision": "tool",
              "reason": "The user asked for time.",
              "function": "get_time_now",
              "parameters": {{}}
            }}
          ]
        }}
        """&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;The &lt;STRONG&gt;skills metadata&lt;/STRONG&gt; advertised in the Agent Card (weather, time vs SAP knowledge).&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;        agent_card = AgentCard(
            name="Utility Agent",
            description="Answers weather and time-related queries using tool results.",
            url=f"http://{host}:{port}/",
            version="1.0.0",
            defaultInputModes=UtilityAgent.SUPPORTED_CONTENT_TYPES,
            defaultOutputModes=UtilityAgent.SUPPORTED_CONTENT_TYPES,
            capabilities=capabilities,
            skills=skills,
        )&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;This pattern is reusable: to create any new agent for your own use case (be it finance, HR, manufacturing and others) you only need to adapt these same three files with your own domain tools, task logic, and descriptions. All remaining A2A and MCP mechanics remain consistent across agents.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--1380233644"&gt;Managing Dependencies and Workspaces with pyproject.toml&lt;/H3&gt;&lt;P class=""&gt;To standardize how A2A-compatible agents are built, run, and extended, each agent (e.g., SAP Agent, Utility Agent) is configured using a &lt;A href="https://pip.pypa.io/en/stable/reference/build-system/pyproject-toml/" target="_self" rel="nofollow noopener noreferrer"&gt;pyproject.toml&lt;/A&gt; file. This file handles dependency management, agent-specific metadata, and workspace definitions, making it easy to scale to additional agents later.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;[project]
name = "a2a-agent"
version = "0.1.0"
description = "A2A-compatible Agent using MCP and SAP GenAI Hub"
requires-python = "&amp;gt;=3.12"

dependencies = [
  "ag2[mcp, openai]&amp;gt;=0.8.6",              # A2A framework, MCP client, OpenAI-compatible LLM support
  "generative-ai-hub-sdk[all]&amp;gt;=0.4.0",    # SAP GenAI Hub orchestration + LLM schemas
  "fastapi",                              # Required by A2AServer
  "uvicorn[standard]&amp;gt;=0.27.1",            # Local server runner
  "httpx",                                # HTTP + SSE client
  "click&amp;gt;=8.1.3"                          # For CLI option handling
]

[tool.hatch.build.targets.wheel]
packages = ["common"]

[tool.uv.workspace]
members = [
  "agents/sap",
  "agents/utils"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
  "pytest&amp;gt;=8.3.5",
  "pytest-mock&amp;gt;=3.14.0",
  "ruff&amp;gt;=0.11.2"
]&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;[project]&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Defines agent-specific metadata: name, version, description, and Python version.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Lists core dependencies for running A2A + MCP + SAP GenAI Hub orchestration:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;ag2[mcp, openai]: A2A protocol, MCP support, and LLM-compatible interfaces.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;generative-ai-hub-sdk[all]: SAP’s SDK for orchestration, schema validation, and LLMs.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;fastapi, uvicorn[standard]: Required for serving A2A HTTP endpoints.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;httpx: Needed by SSE clients and GenAI Hub HTTP logic.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;click: Optional but used to simplify CLI startup with __main__.py.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;[tool.uv.sources]&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Used by &lt;A class="" href="https://github.com/astral-sh/uv" target="_new" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;uv&lt;/STRONG&gt;&lt;/A&gt; for local development. This helps you run each agent individually with uv run ., while still sharing dependencies.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;[tool.hatch.build.targets.wheel]&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Ensures shared logic (like the common folder) is included when packaging agents.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;[tool.uv.workspace]&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Declares a multi-agent workspace for tools like uv to resolve dependencies across agents (e.g., agents/sap, agents/utils).&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;[build-system]&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Specifies hatchling as the build backend. This is required for workspace coordination and dependency isolation.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;[dependency-groups]&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Optional section to include development tools (e.g., pytest, ruff) if testing and linting are needed.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;This setup is highly extensible. To create a &lt;STRONG&gt;new agent&lt;/STRONG&gt;, simply:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Copy one of the agent folders (e.g., agents/sap).&lt;/LI&gt;&lt;LI&gt;Rename and adapt the pyproject.toml.&lt;/LI&gt;&lt;LI&gt;Update only the agent.py, task_manager.py, and __main__.py.&lt;/LI&gt;&lt;/OL&gt;&lt;P class=""&gt;With this modular approach, you’re ready to scale your agent mesh without reinventing your development setup each time.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--989941135"&gt;Running the Agents and Launching the Demo UI&lt;/H1&gt;&lt;P class=""&gt;To experience A2A in action, you can either build your own host application or use the official &lt;A href="https://github.com/google/A2A/blob/main/demo/README.md" target="_self" rel="nofollow noopener noreferrer"&gt;Google A2A Demo UI&lt;/A&gt;&amp;nbsp;which is the approach we'll follow in this walkthrough. This web app acts as a visual interface for interacting with your Host and Remote agents, showcasing task orchestration, dynamic responses, and streaming task updates.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1479857647"&gt;Step 1: Start Your A2A-Compatible Agents&lt;/H2&gt;&lt;P class=""&gt;First, start your custom agents (like SAP Agent and Utility Agent) locally. For example:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cd agents/sap
uv run .&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="carlosbasto_1-1746450349979.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257692i7FBD3FFDDE360037/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_1-1746450349979.png" alt="carlosbasto_1-1746450349979.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cd agents/utils
uv run .&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="carlosbasto_2-1746450378629.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257693i05A9210DEAB823A6/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_2-1746450378629.png" alt="carlosbasto_2-1746450378629.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Ensure both agents expose valid &lt;A href="https://google.github.io/A2A/specification/agent-card/" target="_self" rel="nofollow noopener noreferrer"&gt;AgentCards&lt;/A&gt; via the /.well-known/agent.json endpoint, and that they are reachable from your browser or backend app.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="carlosbasto_4-1746450485198.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257695iD051CDAD8B28E0A0/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_4-1746450485198.png" alt="carlosbasto_4-1746450485198.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="carlosbasto_3-1746450457810.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257694i94CCA51F29E6F84C/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_3-1746450457810.png" alt="carlosbasto_3-1746450457810.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1676371152"&gt;Step 2: Launch Google’s A2A Demo UI&lt;/H2&gt;&lt;P class=""&gt;The official &lt;A href="https://github.com/google/A2A/tree/main/demo/ui" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;A2A Demo Web App&lt;/STRONG&gt;&lt;/A&gt; provides a conversation-centric UI for testing A2A agent collaboration.&lt;/P&gt;&lt;H5 id="toc-hId-1710057309"&gt;Key Features:&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Add agents dynamically&lt;/STRONG&gt; by pasting their agent.json URL.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Talk to one or more agents&lt;/STRONG&gt; via the Host Agent.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;View detailed message/task history&lt;/STRONG&gt; and streaming updates.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;To get started:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cd demo/ui&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Then, set up your environment variables for authentication (in our case, with Google AI Studio):&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;echo "GOOGLE_API_KEY=your_api_key_here" &amp;gt;&amp;gt; .env&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Finally, launch the UI:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;uv run main.py&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="carlosbasto_5-1746451135243.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257707iB74A1B648AA8A63D/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_5-1746451135243.png" alt="carlosbasto_5-1746451135243.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1607811464"&gt;Setting Up Agents in the A2A Demo Application&lt;/H1&gt;&lt;P class=""&gt;Once both agents are running locally (in our case SAP Agent on localhost:8001 and Utility Agent on localhost:8002), you can use the Google A2A Demo UI to interact with them visually.&lt;/P&gt;&lt;H2 id="toc-hId--2097727976"&gt;Step-by-Step: Register Remote Agents&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Access the Agents Page&lt;/STRONG&gt;&lt;BR /&gt;Navigate to &lt;A href="http://0.0.0.0:12000/agents" target="_blank" rel="noopener nofollow noreferrer"&gt;http://0.0.0.0:12000/agents&lt;/A&gt; — this is where you'll register the remote agents.&lt;BR /&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="0a57b1bc-9a8b-443f-97cd-b72763acbf0b.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257724i658DC6C4D137084F/image-size/large?v=v2&amp;amp;px=999" role="button" title="0a57b1bc-9a8b-443f-97cd-b72763acbf0b.png" alt="0a57b1bc-9a8b-443f-97cd-b72763acbf0b.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Add a New Remote Agent&lt;/STRONG&gt;&lt;BR /&gt;Click the upload icon. A dialog will appear prompting you to enter the Agent Address.&lt;BR /&gt;&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="carlosbasto_8-1746451745575.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257741iE81E27C2F713F3EF/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_8-1746451745575.png" alt="carlosbasto_8-1746451745575.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Register SAP Agent&lt;/STRONG&gt;&lt;BR /&gt;Enter localhost:8001 and click &lt;STRONG&gt;Read&lt;/STRONG&gt;. The AgentCard metadata will be fetched:&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="carlosbasto_10-1746451813050.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257743i2BD4157FA8778FCA/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_10-1746451813050.png" alt="carlosbasto_10-1746451813050.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Register Utility Agent&lt;/STRONG&gt;&lt;BR /&gt;Repeat the process for the second agent using localhost:8002.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="carlosbasto_11-1746451904109.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257744i08CF5B0545924CC6/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_11-1746451904109.png" alt="carlosbasto_11-1746451904109.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Confirm Agent Registration&lt;/STRONG&gt;&lt;BR /&gt;You should now see both agents listed:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="carlosbasto_12-1746451952934.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257747i07E578B0A4EED5A5/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_12-1746451952934.png" alt="carlosbasto_12-1746451952934.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H1 id="toc-hId--2000838474"&gt;Scenario-Based Evaluation of A2A Agents&lt;/H1&gt;&lt;P class=""&gt;Here are the results of running the same questions as in our previous two blogs, but now using the A2A-enabled multi-agent system with dynamic routing and streaming UI.&lt;/P&gt;&lt;H2 id="toc-hId-1804212310"&gt;&lt;STRONG&gt;"What time is it?"&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="carlosbasto_0-1746452182365.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257751iFBF20DE32D48E4C0/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_0-1746452182365.png" alt="carlosbasto_0-1746452182365.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Handled by:&lt;/STRONG&gt; Utility Agent&lt;BR /&gt;&lt;STRONG&gt;Analysis:&lt;/STRONG&gt;&lt;BR /&gt;Compared to Blog #1 (basic agentic orchestration via GenAI Hub) and Blog #2 (MCP + Kyma), this result is functionally the same but here, the user sees it rendered instantly in the UI, and the agent is dynamically plugged in, not hardcoded.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1607698805"&gt;&lt;STRONG&gt;"How’s the weather in Paris?"&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="carlosbasto_1-1746452247085.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257753i6C9D6F7710F28605/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_1-1746452247085.png" alt="carlosbasto_1-1746452247085.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Handled by:&lt;/STRONG&gt; Utility Agent&lt;BR /&gt;&lt;STRONG&gt;Analysis:&lt;/STRONG&gt;&lt;BR /&gt;Same weather tool usage as in the previous blogs but now you see rich streaming and the agent auto-resolved via A2A discovery. You didn’t manually route the query, A2A did.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1411185300"&gt;&lt;STRONG&gt;"What is SAP Business Data Cloud?"&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="carlosbasto_2-1746452331688.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257757i0FC3431F81376157/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_2-1746452331688.png" alt="carlosbasto_2-1746452331688.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Handled by:&lt;/STRONG&gt; SAP Agent&lt;BR /&gt;&lt;STRONG&gt;Analysis:&lt;/STRONG&gt;&lt;BR /&gt;As in the previous blogs, this content is LLM-driven with SAP domain context. But now, you see that the LLM inside the SAP Agent was independently maintained and registered, showing how easy it is to compose modular domain agents.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1214671795"&gt;Composite Query:&lt;/H2&gt;&lt;P class=""&gt;This example captures the power of modular reasoning, where tool-using agents handle real-time or specialized queries while the LLM addresses conceptual prompts, all seamlessly synthesized into a unified response.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;"Explain what a blockchain is and also tell me: how’s the weather in Brazil, what time it is now, and what is the role of SAP Datasphere in SAP Business Data Cloud?"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="carlosbasto_0-1746455579101.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257785iA9EE65D6C544BC44/image-size/large?v=v2&amp;amp;px=999" role="button" title="carlosbasto_0-1746455579101.png" alt="carlosbasto_0-1746455579101.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;This compound query is intelligently decomposed and delegated behind the scenes:&lt;/P&gt;&lt;H4 id="toc-hId-431352276"&gt;Tool-Using Agents&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Weather Agent&lt;/STRONG&gt; provides:&lt;BR /&gt;→ &lt;EM&gt;Weather in Brazil: 30.4°C with a wind speed of 7.6 m/s.&lt;/EM&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Time Agent&lt;/STRONG&gt; provides:&lt;BR /&gt;→ &lt;EM&gt;Current Time: 14:32.&lt;/EM&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;SAP Agent&lt;/STRONG&gt; provides:&lt;BR /&gt;→ &lt;EM&gt;SAP Datasphere’s role in SAP Business Data Cloud.&lt;/EM&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-234838771"&gt;LLM-Only Response&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Blockchain explanation&lt;/STRONG&gt; is handled directly by the base LLM. This shows that not every subtask requires a tool or external call.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This is just a simplified example of how A2A can be implemented. While it doesn’t cover all the architectural considerations, edge cases, or production-level variables, it provides a solid starting point for understanding the core concepts and possibilities.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1003720989" id="toc-hId-1086717978"&gt;Wrapping Up and Next Steps&lt;/H1&gt;&lt;P class=""&gt;In this blog, we expanded our SAP-based agentic architecture by adopting the Agent2Agent (A2A) protocol, an open standard that enables secure, interoperable communication between intelligent agents across teams, platforms, and domains.&lt;/P&gt;&lt;P class=""&gt;Building on our earlier work with SAP Generative AI Hub, Model Context Protocol (MCP), and SAP BTP Kyma, we showcased how to scale beyond a single assistant by composing a mesh of specialized, A2A-compliant agents: each with its own skills, responsibilities, and autonomy. From retrieving SAP knowledge via the SAP Agent, to answering time and weather queries via the Utility Agent, every agent is discoverable, modular, and orchestrated via a central Host Agent.&lt;/P&gt;&lt;P class=""&gt;This A2A-powered setup unlocks true composability and reuse in enterprise AI: agents are no longer hardcoded or monolithic, but instead self-describing, interoperable services that can be reused across use cases and extended independently.&lt;/P&gt;&lt;P class=""&gt;Now it’s your turn to take this further.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Connect&lt;/STRONG&gt; your multi-agent system to real SAP business data and enterprise tools.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Showcase&lt;/STRONG&gt; high-impact use cases such as document summarization, financial analysis, planning support etc.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Explore&lt;/STRONG&gt; how to monitor, secure, and govern your agents in production using SAP BTP.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;With A2A and MCP in place, you have the foundation for a scalable, modular AI architecture that is ready to grow with your enterprise needs.&lt;/P&gt;&lt;P class=""&gt;Hope that helps!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--119728567" id="toc-hId-890204473"&gt;Further References&lt;/H1&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://github.com/carlosbasto/sap-a2a-mcp-agentic-ai" target="_self" rel="nofollow noreferrer noopener"&gt;Source Code: GitHub repository&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://google.github.io/A2A/" target="_self" rel="nofollow noopener noreferrer"&gt;Agent2Agent (A2A) Protocol&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://github.com/google/A2A/tree/main" target="_self" rel="nofollow noopener noreferrer"&gt;Agent2Agent (A2A) Protocol Repository&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://docs.anthropic.com/en/docs/agents-and-tools/mcp" target="_self" rel="nofollow noopener noreferrer"&gt;Model Context Protocol (MCP)&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://github.com/modelcontextprotocol" target="_self" rel="nofollow noopener noreferrer"&gt;Model Context Protocol (MCP) Repository&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/libraries-and-sdks?locale=en-US" target="_self" rel="noopener noreferrer"&gt;SAP Libraries and SDKs&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/doc/generative-ai-hub-sdk/CLOUD/en-US/index.html" target="_self" rel="noreferrer noopener"&gt;Generative AI Hub SDK&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/orchestration?locale=en-US" target="_self" rel="noreferrer noopener"&gt;Orchestration&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/building-an-agentic-ai-system-with-agent2agent-a2a-and-mcp-tools-on-sap-btp/ba-p/14093412"/>
    <published>2025-05-05T17:30:34.559000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/kyma-runtime-stories-mtls-routes-made-easy-ier-with-apirule-v2/ba-p/14091406</id>
    <title>Kyma runtime stories. mTLS routes made easy (-ier) with APIRule v2</title>
    <updated>2025-05-07T13:05:29.544000+02:00</updated>
    <author>
      <name>quovadis</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/743</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1580988758"&gt;Kyma runtime stories. mTLS routes made easy (-ier) with APIRule v2&lt;/H1&gt;&lt;P&gt;Eventually, following the official &lt;A title="Kyma Runtime - API Gateway module: Update to version 3.0.2" href="https://help.sap.com/whats-new/cf0cb2cb149647329b5d02aa96303f56?locale=en-US&amp;amp;Component=Kyma+Runtime&amp;amp;Valid_as_Of=2025-05-05:2025-05-05" target="_blank" rel="noopener noreferrer"&gt;announcement&lt;/A&gt;, the lastest istio-based &lt;A title="APIRule Custom Resource" href="https://kyma-project.io/#/api-gateway/user/custom-resources/apirule/README" target="_blank" rel="noopener nofollow noreferrer"&gt;APIRule&lt;/A&gt;&amp;nbsp;in the stable version v2 is out.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="quovadis_0-1746546706156.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258157i8AA478457C6EEFEE/image-size/large?v=v2&amp;amp;px=999" role="button" title="quovadis_0-1746546706156.png" alt="quovadis_0-1746546706156.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;DIV&gt;&lt;SPAN&gt;Kyma Runtime&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;-&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;API Gateway module: Update to version 3.0.2&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;P class=""&gt;This version of the API Gateway module introduces APIRule CR in the stable version&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;v2&lt;/SPAN&gt;.&lt;/P&gt;&lt;P class=""&gt;The new CRD allows you to expose your workloads using one of the three supported access strategies:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;jwt&lt;/SPAN&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;noAuth&lt;/SPAN&gt;, and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;extAuth&lt;/SPAN&gt;. The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;noAuth&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;access strategy provides a simple configuration for exposing workloads over the specified HTTP methods. The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;jwt&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;access strategy allows you to secure your workload by defining Istio JWT configuration and the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;extAuth&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;access strategy allows for providing custom authentication and authorization logic. For more information, see&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A class="" title="https://kyma-project.io/#/api-gateway/user/custom-resources/apirule/README" href="https://help.sap.com/docs/link-disclaimer?site=https%3A%2F%2Fkyma-project.io%2F%23%2Fapi-gateway%2Fuser%2Fcustom-resources%2Fapirule%2FREADME" target="_blank" rel="noopener noreferrer"&gt;APIRule Custom Resource&lt;/A&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Additionally, version 3.0.2 contains the following fixes:&lt;UL class=""&gt;&lt;LI&gt;We've fixed the behaviour of in-cluster connectivity when using JWT handler in APIRule. Now, in-cluster connectivity is blocked.&lt;/LI&gt;&lt;LI&gt;Now, when you create an APIRule with the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;noAuth&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;access strategy, it is validated if the target workload has an Istio sidecar proxy injected.&lt;/LI&gt;&lt;LI&gt;We've added a deprecation message, which is displayed when you use the k8s API to interact with APIRule&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;v1beta1&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;CRs. Now, the following deprecation message is presented during each call:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Warning: Version v1beta1 of APIRule is deprecated and will be removed in future releases. Use version v2 instead.&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;Kyma Runtime&amp;nbsp;-&amp;nbsp;API Gateway module: Update to version 3.0.2This version of the API Gateway module introduces APIRule CR in the stable version&amp;nbsp;v2.The new CRD allows you to expose your workloads using one of the three supported access strategies:&amp;nbsp;jwt,&amp;nbsp;noAuth, and&amp;nbsp;extAuth. The&amp;nbsp;noAuth&amp;nbsp;access strategy provides a simple configuration for exposing workloads over the specified HTTP methods. The&amp;nbsp;jwt&amp;nbsp;access strategy allows you to secure your workload by defining Istio JWT configuration and the&amp;nbsp;extAuth&amp;nbsp;access strategy allows for providing custom authentication and authorization logic. For more information, see&amp;nbsp;APIRule Custom Resource&amp;nbsp;Additionally, version 3.0.2 contains the following fixes:We've fixed the behaviour of in-cluster connectivity when using JWT handler in APIRule. Now, in-cluster connectivity is blocked.Now, when you create an APIRule with the&amp;nbsp;noAuth&amp;nbsp;access strategy, it is validated if the target workload has an Istio sidecar proxy injected.We've added a deprecation message, which is displayed when you use the k8s API to interact with APIRule&amp;nbsp;v1beta1&amp;nbsp;CRs. Now, the following deprecation message is presented during each call:&amp;nbsp;Warning: Version v1beta1 of APIRule is deprecated and will be removed in future releases. Use version v2 instead.&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P&gt;Until now, customers and developers were invited to test the istio-based APIRule in the version&amp;nbsp;&lt;SPAN&gt;v2alpha1.&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="quovadis_0-1746546861445.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258158iD70626243DA66485/image-size/large?v=v2&amp;amp;px=999" role="button" title="quovadis_0-1746546861445.png" alt="quovadis_0-1746546861445.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;SPAN&gt;Good to know:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The promotion of APIRule manifests from version &lt;STRONG&gt;v2alpha1&lt;/STRONG&gt; to version &lt;STRONG&gt;v2&lt;/STRONG&gt;&amp;nbsp;&lt;EM&gt;merely&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;consists of manually changing &lt;STRONG&gt;apiVersion&lt;/STRONG&gt; from &lt;STRONG&gt;v2alpha1&lt;/STRONG&gt; to the stable version &lt;STRONG&gt;v2&lt;/STRONG&gt; in APIRule manifests.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;As depicted above, for convenience, Kyma dashboard will display the APIRules CRs grouped by the &lt;STRONG&gt;apiVersion&lt;/STRONG&gt; field.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1513557972"&gt;APIRule v2 and mTLS routes&lt;/H2&gt;&lt;P&gt;The APIRule v2 is istio-based. What that means is that both authentication and authorisations (permissions) are handled natively through istio.&lt;/P&gt;&lt;P&gt;Let me try to demonstrate how and whether it can help to ease the implementation effort of the mTLS routes.&lt;/P&gt;&lt;P&gt;Good to know:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Albeit the mTLS routes are mainly used for system to system communications, they can also be used for the principal propagation (user context) with short-lived client certificates.&lt;/LI&gt;&lt;LI&gt;For reference, the basics of mTLS communications with kyma runtime environment are covered in the following blogpost, namely: &lt;A class="" href="https://community.sap.com/t5/technology-blogs-by-sap/developing-enterprise-grade-applications-with-mutual-tls-easy-with-sap-btp/ba-p/13580304" target="_blank"&gt;Developing enterprise-grade applications with mutual TLS easy with SAP BTP, Kyma runtime and BTP destinations&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;When implementing mTLS routes one needs to forward the client certificate to the server side workloads. This is achieved by requesting the istio SSL headers to be forwarded to the server side, for instance:&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;      request:
        headers:
          X-CLIENT-SSL-CN: '%DOWNSTREAM_PEER_SUBJECT%'
          X-CLIENT-SSL-ISSUER: '%DOWNSTREAM_PEER_ISSUER%'
          X-CLIENT-SSL-SAN: '%DOWNSTREAM_PEER_URI_SAN%'
          test: 'true'&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Let's consider the following APIRule v2 manifest:&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;apiVersion: gateway.kyma-project.io/v2
kind: APIRule
metadata:
  labels:
    app.kubernetes.io/name: httpbin-mtls-${namespace}

  name: httpbin-mtls-${namespace}
  namespace: montypython
spec:
  gateway: ${namespace}/quovadis-${namespace}-gateway-mtls
  hosts:
    - httpbin-mtls-${namespace}.${mtls}.${base_domain}
  rules:
    - methods:
        - GET
      noAuth: true
      path: /*
      timeout: 300
      request:
        headers:
          X-CLIENT-SSL-CN: '%DOWNSTREAM_PEER_SUBJECT%'
          X-CLIENT-SSL-ISSUER: '%DOWNSTREAM_PEER_ISSUER%'
          X-CLIENT-SSL-SAN: '%DOWNSTREAM_PEER_URI_SAN%'
          test: 'true'
  service:
    name: httpbin
    port: 8000&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Good to know:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Any custom headers can be included here and they will be forwarded to the server side as well.&lt;/LI&gt;&lt;LI&gt;The kyma dashboard view of the APIRule request headers is depicted below:&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="quovadis_0-1746115047722.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256892i121EAD5586AFD0CB/image-size/large?v=v2&amp;amp;px=999" role="button" title="quovadis_0-1746115047722.png" alt="quovadis_0-1746115047722.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;The above APIRule definition is translated into&amp;nbsp;auto-generated istio &lt;STRONG&gt;VirtualService&lt;/STRONG&gt; and the &lt;STRONG&gt;AuthorizationPolicy&lt;/STRONG&gt; resource definitions, namely:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;VirtualService&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  labels:
    apirule.gateway.kyma-project.io/v1beta1: httpbin-mtls-${namespace}.montypython

  name: httpbin-mtls-${namespace}-jw7tv
  namespace: montypython

spec:
  gateways:
    - ${namespace}/quovadis-${namespace}-gateway-mtls
  hosts:
    - httpbin-mtls-${namespace}.mtls-quovadis-&amp;lt;id&amp;gt;.quovadis.kyma.dev.sap
  http:
    - headers:
        request:
          set:
            X-CLIENT-SSL-CN: '%DOWNSTREAM_PEER_SUBJECT%'
            X-CLIENT-SSL-ISSUER: '%DOWNSTREAM_PEER_ISSUER%'
            X-CLIENT-SSL-SAN: '%DOWNSTREAM_PEER_URI_SAN%'
            test: 'true'
            x-forwarded-host: &amp;gt;-
              httpbin-mtls-${namespace}.mtls-quovadis-&amp;lt;id&amp;gt;.quovadis.kyma.dev.sap
        response:
          remove:
            - Access-Control-Allow-Origin
            - Access-Control-Expose-Headers
            - Access-Control-Allow-Headers
            - Access-Control-Allow-Credentials
            - Access-Control-Allow-Methods
            - Access-Control-Max-Age
      match:
        - method:
            regex: ^(GET)$
          uri:
            prefix: /
      route:
        - destination:
            host: httpbin.montypython.svc.cluster.local
            port:
              number: 8000
          weight: 100
      timeout: 300s&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;AuthorizationPolicy&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  labels:
    apirule.gateway.kyma-project.io/v1beta1: httpbin-mtls-${namespace}.montypython
    gateway.kyma-project.io/hash: montypython.47fnidc80q3pr.65q2a0rkmeuic
    gateway.kyma-project.io/index: '0'

  name: httpbin-mtls-${namespace}-g6kzx
  namespace: montypython
spec:
  rules:
    - from:
        - source:
            principals:
              - &amp;gt;-
                cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account
      to:
        - operation:
            methods:
              - GET
            paths:
              - /{**}
  selector:
    matchLabels:
      app: httpbin&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Good to know:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The current design of the APIRule implies having multiple&amp;nbsp;AuthorizationPolicy resources, one per path.&lt;/LI&gt;&lt;LI&gt;The above&amp;nbsp;&lt;STRONG&gt;AuthorizationPolicy&lt;/STRONG&gt; guarantees a given workload can only be accessed via an istio ingress gateway, with the advertised HTTP method(s) and from the advertised paths.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1317044467"&gt;Smoke-testing of the mTLS route&lt;/H2&gt;&lt;P&gt;Good to know:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The smoke test using curl command is described &lt;A title="Smoke test using curl command" href="https://community.sap.com/t5/technology-blog-posts-by-sap/developing-enterprise-grade-applications-with-mutual-tls-easy-with-sap-btp/ba-p/13580304#curl" target="_blank"&gt;here&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Assuming we have a &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/developing-enterprise-grade-applications-with-mutual-tls-easy-with-sap-btp/ba-p/13580304#Generate" target="_blank"&gt;CA-signed client certificate&lt;/A&gt; at hand, we can test the XFF headers being forwarded to the &lt;STRONG&gt;&lt;EM&gt;httpbin&lt;/EM&gt;&lt;/STRONG&gt; workload running on a kyma cluster, as follows:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl https://httpbin-mtls-${namespace}.mtls-quovadis-&amp;lt;id&amp;gt;.quovadis.kyma.dev.sap/headers --cert poster.x509 --key poster.key | jq .&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "headers": {
    "Accept": "*/*",
    "Host": "httpbin-mtls-${namespace}.mtls-quovadis-&amp;lt;id&amp;gt;.quovadis.kyma.dev.sap",
    "Test": "true",
    "User-Agent": "curl/8.7.1",
    "X-Client-Ssl-Cn": "CN=poster-quovadis (P000000),L=poster.***.demo.sap,OU=37d98dec-719a-4137-9ed7-***,OU=SAP Cloud Platform Clients,O=SAP SE,C=DE",
    "X-Client-Ssl-Issuer": "CN=SAP Cloud Platform Client CA,OU=SAP Cloud Platform Clients,O=SAP SE,L=EU10,C=DE",
    "X-Envoy-Attempt-Count": "1",
    "X-Envoy-External-Address": "**.214.184.**",
    "X-Forwarded-Client-Cert": "Hash=***;Cert=\"-----BEGIN%20CERTIFICATE-----%0AMIIGxTCCBK2gAwIBAgIRAPPDecfD1O2rVgSbz5qRTw0wDQYJKoZIhvcNAQELBQAw%0AeTELMAkG
***************** truncated ********************
upVq0l1ImDE%0A-----END%20CERTIFICATE-----%0A\";Subject=\"CN=poster-quovadis (P000000),L=poster.***.demo.sap,OU=37d98dec-719a-4137-9ed7-***,OU=SAP Cloud Platform Clients,O=SAP SE,C=DE\";URI=,By=spiffe://cluster.local/ns/montypython/sa/httpbin;Hash=9fbcc6e4a30e6c24673dd6d822ddea353346d939d907b8cfd3cd3d558d91524b;Subject=\"\";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account",
    "X-Forwarded-Host": "httpbin-mtls-${namespace}.mtls-quovadis-&amp;lt;id&amp;gt;.quovadis.kyma.dev.sap"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;So far so good. But is that all?&lt;/P&gt;&lt;P&gt;Well, not necessarily, as it would imply having to validate the&amp;nbsp;&lt;STRONG&gt;X-Forwarded-Client-Cert&lt;/STRONG&gt; header in each workload that receives it.&lt;/P&gt;&lt;P&gt;When using istio, one would simply have all these checks done by a dedicated &lt;STRONG&gt;AuthorizationPolicy&lt;/STRONG&gt;, for instance:&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:

  name: httpbin-mtls-policy-${namespace}
  namespace: montypython

spec:
  action: ALLOW
  rules:
    - to:
        - operation:
            hosts:
              - &amp;gt;-
                httpbin-mtls-${namespace}.mtls-quovadis-&amp;lt;id&amp;gt;.quovadis.kyma.dev.sap
      when:
        - key: request.headers[X-Client-Ssl-Cn]
          values:
            - &amp;gt;-
              CN=poster-quovadis (P000000),L=poster.***.demo.sap,OU=37d98dec-719a-4137-9ed7-***,OU=SAP Cloud Platform Clients,O=SAP SE,C=DE
  targetRef:
    group: gateway.networking.k8s.io
    kind: Gateway
    name: quovadis-${namespace}-gateway-mtls&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;That's it. By simply adding the above manifest, if the client certificate sent does not have the policy matching &lt;STRONG&gt;X-Client-Ssl-Cn&lt;/STRONG&gt; header, then the workload access will be denied with the following error message:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;RBAC: access denied&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;That's important, as otherwise any dully CA-signed client certificate (that assuming there is an existing &lt;EM&gt;cacert&lt;/EM&gt; bundle secret for a given gateway) would be forwarded to the server side.&lt;/P&gt;&lt;P&gt;~quovadis&lt;/P&gt;&lt;H1 id="toc-hId-991448243"&gt;Appendix&lt;/H1&gt;&lt;UL&gt;&lt;LI&gt;Here goes a terraform provisioner script snippet to help deploy the &lt;A title="httpbin deployment" href="https://raw.githubusercontent.com/quovadis-btp/istio/refs/heads/master/samples/httpbin/httpbin.yaml" target="_blank" rel="noopener nofollow noreferrer"&gt;httpbin&lt;/A&gt; workload into a kyma cluster.&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;resource "terraform_data" "httpbin" {

 provisioner "local-exec" {
   interpreter = ["/bin/bash", "-c"]
   on_failure = continue
   command = &amp;lt;&amp;lt;EOF
     (
    KUBECONFIG=kubeconfig-headless.yaml
    NAMESPACE=montypython

    set -e -o pipefail
    HTTPBIN=$(./kubectl --kubeconfig $KUBECONFIG -n $NAMESPACE get deployment httpbin --ignore-not-found)
    if [ "$HTTPBIN" = "" ]
    then
      ./kubectl create ns $NAMESPACE --kubeconfig $KUBECONFIG --dry-run=client -o yaml | ./kubectl apply --kubeconfig $KUBECONFIG -f -
      ./kubectl label namespace $NAMESPACE istio-injection=enabled --kubeconfig $KUBECONFIG
      ./kubectl -n $NAMESPACE create -f https://raw.githubusercontent.com/quovadis-btp/istio/refs/heads/master/samples/httpbin/httpbin.yaml --kubeconfig $KUBECONFIG

      while [ "$(./kubectl --kubeconfig $KUBECONFIG -n $NAMESPACE get deployment httpbin --ignore-not-found)" = "" ]
      do 
        echo "no deployment httpbin"
        sleep 1
      done      
    fi

    HTTPBIN=$(./kubectl --kubeconfig $KUBECONFIG -n $NAMESPACE rollout status deployment httpbin --timeout 5m)
    echo $HTTPBIN 

     )
   EOF
 }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;For reference, the basics of mTLS communications with kyma runtime environment are covered in the following blogpost, namely: &lt;A class="" href="https://community.sap.com/t5/technology-blogs-by-sap/developing-enterprise-grade-applications-with-mutual-tls-easy-with-sap-btp/ba-p/13580304" target="_blank"&gt;Developing enterprise-grade applications with mutual TLS easy with SAP BTP, Kyma runtime and BTP destinations&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/kyma-runtime-stories-mtls-routes-made-easy-ier-with-apirule-v2/ba-p/14091406"/>
    <published>2025-05-07T13:05:29.544000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-ai-security-how-to-tamperproof-ai-llm-s-with-sap-btp-kyma-and/ba-p/14099291</id>
    <title>SAP AI Security - How To: Tamperproof AI LLM's with SAP BTP Kyma and Enterprise Blockchain 🚀</title>
    <updated>2025-05-12T18:18:57.579000+02:00</updated>
    <author>
      <name>AndySilvey</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1397601</uri>
    </author>
    <content>&lt;P&gt;This Blog is hand written...&lt;/P&gt;&lt;P&gt;Continuing the blog series on SAP and Enterprise Blockchain, which started with the,&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/why-i-love-sap-and-blockchain-databases-and-why-you-should-too/ba-p/13625869" target="_blank"&gt;Why I love SAP and Blockchain Databases and why you should too &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/A&gt;&amp;nbsp;and went through the journey of&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-enterprise-architecture-positioning-blockchain-database-as-an/ba-p/13629842" target="_blank"&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;SAP Enterprise Architecture:&lt;/FONT&gt; Positioning Blockchain Database as an Enterprise Technology Standard &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/A&gt;&amp;nbsp;and&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-enterprise-architecture-let-the-use-case-find-the-blockchain/ba-p/13632458" target="_blank"&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;SAP Enterprise Architecture:&lt;/FONT&gt; Let the Use Case find the Blockchain&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/A&gt;&amp;nbsp;and the Enterprise Blockchain Business Capability Map &lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/enterprise-architecture-enterprise-blockchain-platform-business-capability/ba-p/13902640" target="_blank"&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;Enterprise Architecture:&lt;/FONT&gt; Enterprise Blockchain Platform Business Capability Map &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/A&gt;&amp;nbsp;and subsequently discussed all manner of SAP related Enterprise Blockchain use cases which can be implemented today with the SAP BTP Kyma Service and Enterprise Blockchain software (eg atkrypto Enterprise Blockchain Platform for SAP), and which included a how to guide on how to run your own Enterprise Blockchain on the SAP BTP Kyma&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/running-your-own-blockchain-on-the-sap-btp-kyma-trial-a-hands-on-how-to/ba-p/13724580" target="_blank"&gt;Running Your Own Blockchain on The SAP BTP Kyma Trial: A Hands On How To Guide &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/A&gt;&amp;nbsp;then, this blog is going to explain a very simple way to secure SAP AI and AI LLM's with Enterprise Blockchain running on the SAP BTP Kyma Service.&lt;/P&gt;&lt;P&gt;In my opinion, Enterprise Blockchain is the world's most tamper resistant store of data, providing tamper resistance to a level which cannot be achieved by traditional Enterprise Database products and technology. I've explained this in detail in this blog:&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/why-i-love-sap-and-blockchain-databases-and-why-you-should-too/ba-p/13625869" target="_blank"&gt;Why I love SAP and Blockchain Databases and why you should too &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_2-1747065636219.png" style="width: 584px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/260144i69DB35350B5D8530/image-dimensions/584x294?v=v2" width="584" height="294" role="button" title="AndySilvey_2-1747065636219.png" alt="AndySilvey_2-1747065636219.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;A lot has been written, and is being written on SAP and AI and LLM security, and rightly so, because at the same time this technology is both a huge opportunity and a huge risk. The opportunities are vast, in my opinion SAP &amp;amp; AI basically speeds up decision making across any dimension where it is applied, and therefore the corresponding risk is, can we trust the advice and recommendation that the SAP AI is giving us, what if the AI has been tampered with by a bad actor ?&lt;/P&gt;&lt;P&gt;There are some very nice articles and documents on this subject, here are a few:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;.&amp;nbsp;&lt;A href="https://www.sap.com/documents/2023/09/729b7ea1-8a7e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;Assessing the Security of Large Language Models - Exploring vulnerabilities, threats, and potential malicious use cases for generative AI as presented by the rapid proliferation of LLMs&lt;/A&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;.&amp;nbsp;&lt;A href="https://community.sap.com/t5/security-and-compliance-blogs/defending-against-ai-security-risks-by-turning-llms-on-llms/ba-p/14032661" target="_blank"&gt;Defending Against AI Security Risks by Turning LLM... - SAP Community&lt;/A&gt;&amp;nbsp;thanks to&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/160843"&gt;@JayThvV&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;.&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/navigating-the-generative-ai-era-blockchain-is-key-for-resilient-cross/ba-p/13581081" target="_blank"&gt;Navigating the Generative AI Era: Blockchain is ke... - SAP Community&lt;/A&gt;&amp;nbsp;thanks to&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/385483"&gt;@MirkoValentic&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;.&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/secure-your-llm-consuming-sap-generative-ai-deployments-in-a-simple-python/ba-p/13598263" target="_blank"&gt;Secure your LLM: Consuming SAP Generative AI deplo... - SAP Community&lt;/A&gt;&amp;nbsp;thanks to&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/125338"&gt;@AronMac&lt;/a&gt;&amp;nbsp;who drew the perfect picture of the problem:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_0-1747063834020.png" style="width: 591px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/260138iC1C7A9344C697382/image-dimensions/591x206?v=v2" width="591" height="206" role="button" title="AndySilvey_0-1747063834020.png" alt="AndySilvey_0-1747063834020.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;This is Aron's picture (may I please ask for retrospective permission to reproduce it here) and it perfectly identifies where the risk is, read Aron's blog for more details&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;.&amp;nbsp;&lt;A href="https://assets.dm.ux.sap.com/nl-sap-innovation-day-for-supply-chain/pdfs/future-supply-chain-with-sap-business-ai.pdf" target="_self" rel="noopener noreferrer"&gt; Secure Large Language Model Access&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_1-1747063964105.png" style="width: 583px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/260139i6540D049794C9D75/image-dimensions/583x307?v=v2" width="583" height="307" role="button" title="AndySilvey_1-1747063964105.png" alt="AndySilvey_1-1747063964105.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The problem is how can we make AI LLM's tamper proof and therefore verifiably trustable ?&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;tldr:&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The technical solution is basically a variation of this one,&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/cyber-security-protection-for-s-4hana-backups-with-enterprise-blockchain/ba-p/13872997" target="_blank"&gt;Cyber Security Protection for S/4HANA Backups with Enterprise Blockchain and SAP BTP Kyma &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/A&gt;, we simply run a background job which takes a digital finger print of the LLM at regular intervals and compares the hash each time to the original digital fingerprint hash which we have stored in the Enterprise Blockchain.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The What:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;An AI LLM is Data, there is a process to get from zero to operational, and that is, &lt;EM&gt;&lt;STRONG&gt;1) Initial Data Intake, 2) Data Conditioning, 3) Model Development, 4) Specialisation Phase, 5) Production Integration, 6) LifeCycle Oversight&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;and each phase of the process can be secured and protected with Enterprise Blockchain running on the SAP BTP Kyma.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Initial Data Intake&lt;/STRONG&gt;&lt;BR /&gt;Inputs: Collected content such as user-generated inputs, external datasets, sensor readings, or media files.&lt;BR /&gt;Risks: Unauthorized data sourcing, risk of ingesting biased or harmful content, and accidental inclusion of proprietary materials.&lt;BR /&gt;Safeguard: Store a cryptographic hash of each backup in the Enterprise Blockchain (SAP BTP Kyma). Automate batch jobs to periodically re-hash the current data and verify it against the original to ensure integrity and traceability.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Data Conditioning&lt;/STRONG&gt;&lt;BR /&gt;Inputs: Raw collected information that requires transformation into usable formats through parsing, validation, and structuring.&lt;BR /&gt;Risks: Accidental disclosure of sensitive patterns, inconsistent formatting leading to faulty models, and compliance oversights.&lt;BR /&gt;Safeguard: Generate a unique digital signature of the conditioned dataset and record it in the Enterprise Blockchain via SAP BTP Kyma. Schedule automated processes to regularly verify new signatures against the stored baseline for authenticity checks.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Model Development&lt;/STRONG&gt;&lt;BR /&gt;Inputs: Curated datasets that serve as the learning foundation for model algorithms.&lt;BR /&gt;Risks: Loss of dataset lineage, misuse of confidential training sources, and exposure to adversarial inputs.&lt;BR /&gt;Safeguard: Digitally fingerprint the dataset versions and register them on the SAP BTP Kyma-based Blockchain. Use recurring batch processes to ensure the data used for training remains tamper-free and aligned with the original set.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Specialization Phase&lt;/STRONG&gt;&lt;BR /&gt;Inputs: Base models enhanced using narrowly focused or domain-specific datasets for accuracy improvements.&lt;BR /&gt;Risks: Fine-tuning errors due to data drift, accidental overwrites of optimized parameters, or non-compliant tuning sources.&lt;BR /&gt;Safeguard: Secure a hash of the updated models and input data in the SAP BTP Kyma Blockchain. Implement scheduled revalidation by hashing updated files and comparing them to the secured originals to prevent silent regressions.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Production Integration&lt;/STRONG&gt;&lt;BR /&gt;Inputs: Trained models deployed to serve real-time inputs, APIs, or embedded environments.&lt;BR /&gt;Risks: Exposure of inference logic, tampering with deployed assets, or leakage of sensitive model behavior.&lt;BR /&gt;Safeguard: Record a hashed snapshot of all deployment artifacts within the SAP BTP Kyma Blockchain. Automate monitoring routines that continuously compare current deployment fingerprints to the authenticated versions.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Lifecycle Oversight&lt;/STRONG&gt;&lt;BR /&gt;Inputs: System logs, telemetry data, and user interaction feedback used to update models or flag issues.&lt;BR /&gt;Risks: Silent model degradation, undocumented model mutations, or targeted manipulation attempts such as prompt injections.&lt;BR /&gt;Safeguard: Store a verifiable hash of lifecycle data and changes into the Enterprise Blockchain on SAP BTP Kyma. Set up recurring batch tasks to re-hash current states and detect unauthorized alterations or drifts in model behavior.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The How:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;It all sounds easy doesn't it, and that's because it really is, all you need is:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. Your AI LLM's&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. A regular Backup of the AI LLM's - this should be automated&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. Take a digital fingerprint hash of each backup of the AI LLM's (I wrote about that here: &lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/cyber-security-protection-for-s-4hana-backups-with-enterprise-blockchain/ba-p/13872997" target="_blank"&gt;Cyber Security Protection for S/4HANA Backups with Enterprise Blockchain and SAP BTP Kyma &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/A&gt;&amp;nbsp;- this should be automate&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. Get the SAP BTP and the BTP Kyma Service&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. Deploy Enterprise Blockchain on the SAP BTP Kyma Service (here's a how to guide:&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/running-your-own-blockchain-on-the-sap-btp-kyma-trial-a-hands-on-how-to/ba-p/13724580" target="_blank"&gt;Running Your Own Blockchain on The SAP BTP Kyma Trial: A Hands On How To Guide &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/A&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. Store the first digital fingerprint of each LLM backup in the Enterprise Blockchain running on the SAP BTP Kyma - this should be automated&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. Run a regular job to take a digital fingerprint of the AI LLM and compare the hash to the hash stored in the Enterprise Blockchain running on the SAP BTP Kyma - this should be automated&lt;/P&gt;&lt;P&gt;The technical architecture would look something like this:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_4-1747066353457.png" style="width: 575px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/260146iEE5164B4F89E567E/image-dimensions/575x322?v=v2" width="575" height="322" role="button" title="AndySilvey_4-1747066353457.png" alt="AndySilvey_4-1747066353457.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Wrapping up, conclusions:&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. Trustable Enterprise AI depends on Data being stored in the Enterprise Blockchain&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Enterprise Blockchain is:&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;.&amp;nbsp;&lt;/EM&gt;The Digital Transformation of Information Security&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. The Next Generation Data Integrity, Originality, Confidentiality Protection&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. Re-imagining Information Security&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. Natively, out of the box, due to its special characteristics the strongest, hardest, most resilient Enterprise Database product&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Enterprise Blockchain is both:&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. a Secure Store&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. a Secure Communication Channel&lt;/P&gt;&lt;P&gt;The configurable Enterprise Blockchain Wallet enables you to store Big Data 'Off-Chain' and the hashes of the Big Data are stored safely and securely on the Enterprise Blockchain Database.&lt;/P&gt;&lt;P&gt;The good news is, as we discussed in the previous blog, this is no longer hype, we can do all of this today,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;and now, within the&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/norway/partners/partner-program/build.html" target="_self" rel="noopener noreferrer"&gt;SAP Partner Edge Open EcoSystem&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;there are enabling technology Blockchain Products designed and built by SAP Experts specifically for the needs of SAP Customers to make doing Blockchain and SAP easy, and so you can do SAP and Blockchain, today it's real and there's nothing stopping you.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;So what are we waiting for ? Oh yeah, more use cases, ok, that will be the next blog.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;What do you think, are the words AI, Blockchain, Web3, Distributed Ledger Technology, starting to appear in your Company's visions and technology visions ? What use cases are you looking at ? Let's chat about it in the comments.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;For now, over and out.&lt;/P&gt;&lt;P&gt;Andy Silvey.&lt;/P&gt;&lt;P&gt;Independent SAP Technical Architect [you might also find my SAP S/4HANA RISE &amp;amp; BTP Toolbox interesting:&amp;nbsp; &lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/%EF%B8%8F-the-sap-s-4hana-rise-amp-sap-btp-toolbox-%EF%B8%8F/ba-p/13944069" target="_blank"&gt;🧰👷‍ The SAP S/4HANA RISE &amp;amp; SAP BTP - Toolbox 👷‍🧰&lt;/A&gt;] and CEO of atkrypto (.) io&lt;/P&gt;&lt;P&gt;Author Bio:&lt;/P&gt;&lt;P&gt;Andy Silvey is a 26 years SAP Technology veteran&amp;nbsp;[&lt;EM&gt;15 years SAP Basis and 11 years SAP Tech Arch including Tech, Integration, Security, Data from 3.1H to S/4HANA PCE on RISE and the BTP and everything in between, and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/welcome-corner-blog-posts/andy-silvey-scn-moderator-spotlight/ba-p/13054438" target="_self"&gt;former SCN Moderator and Mentor alumni&lt;/A&gt;].&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Andy is also co-Founder of atkrypto inc, an startup whose ambition is to make Blockchain easy for Enterprise.&lt;/P&gt;&lt;P&gt;atkrypto (.) io's flagship product is the atkrypto Enterprise Blockchain Platform for SAP,&amp;nbsp; and atkrypto (.) io is a SAP Partner Edge Open EcoSystem Partner.&amp;nbsp;&lt;/P&gt;&lt;P&gt;The&amp;nbsp;atkrypto Enterprise Blockchain Platform for SAP has been designed by SAP Independent Experts for the needs of SAP Customers and to be deployed on the SAP BTP Kyma Runtime Service and leverage native integration to SAP Products.&lt;/P&gt;&lt;P&gt;atkrypto&amp;nbsp;Enterprise Blockchain Platform for SAP has a number of unique qualities, including being the only Blockchain software in the world which has a DataCenter version and a light mobile version which can run on Edge/IoT/Mobile devices and enables data to be written to the Blockchain at the Edge where that same Blockchain is running on a Server in the DataCenter, protecting the integrity and originality of data from the Edge to Insights. Taking Blockchain to the Data at the Edge instead of taking the Data to the Blockchain.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-ai-security-how-to-tamperproof-ai-llm-s-with-sap-btp-kyma-and/ba-p/14099291"/>
    <published>2025-05-12T18:18:57.579000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/handling-csv-data-deployment-in-cap-hdi-without-data-loss/ba-p/14118322</id>
    <title>Handling CSV Data Deployment in CAP HDI Without Data Loss</title>
    <updated>2025-06-04T03:22:59.880000+02:00</updated>
    <author>
      <name>Sekar_Somasundaram</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1517445</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1602437375"&gt;Handling CSV Data Deployment in CAP HDI Without Data Loss&lt;/H1&gt;&lt;H2 id="toc-hId-1535006589"&gt;Introduction&lt;/H2&gt;&lt;P&gt;In SAP CAP, deploying CSV data using .hdbtabledata files means the HDI container assumes full ownership of the data. As a result, any changes to the CSV file will overwrite the table content during the next deployment.&lt;/P&gt;&lt;H2 id="toc-hId-1338493084"&gt;Background&lt;/H2&gt;&lt;P&gt;Have you ever encountered a scenario where updating CSV data led to unexpected data loss? Here’s our experience:&lt;/P&gt;&lt;P&gt;In our hdi-content module, we maintained a UOM.csv (Unit of Measure) file, which is preloaded into the UOM table. This ensures that customers subscribing to our SaaS solution, SAP Omni Channel Promotional Pricing (OPPS), have immediate access to standard UOMs for defining product promotions. Since the UOM table is also exposed via CAP CDS views in the Fiori UI, customers can add their own entries as well.&lt;/P&gt;&lt;H2 id="toc-hId-1141979579"&gt;The Issue&lt;/H2&gt;&lt;P&gt;While working on a new feature that introduced another table with pre-delivered data, we discovered that any modification to the CSV file—such as adding or updating UOMs—could result in the loss of customer-maintained data in the UOM table. With many customers using our SaaS solution, this posed a significant risk of accidental data loss whenever the UOM.csv content was changed.&lt;/P&gt;&lt;P&gt;We needed a reliable solution to prevent customer data loss during deployments.&lt;/P&gt;&lt;H2 id="toc-hId-945466074"&gt;Exploring CAP Recommendations&lt;/H2&gt;&lt;P&gt;According to the &lt;A href="https://cap.cloud.sap/docs/guides/databases-hana#csv-data-gets-overridden" target="_blank" rel="noopener nofollow noreferrer"&gt;CAP documentation&lt;/A&gt;, you can use the include_filter option in .hdbtabledata to restrict which records are affected. This requires an additional column to distinguish between CSV data and user-generated data. In our case, we already had an origin column:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;origin = '02': CSV data&lt;/LI&gt;&lt;LI&gt;origin = '10': Customer-created entries&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;However, even with include_filter, we found that customer data was still being lost, and only the CSV content remained after deployment.&lt;/P&gt;&lt;P&gt;The &lt;A href="https://launchpad.support.sap.com/#/notes/2922271" target="_blank" rel="noopener noreferrer"&gt;CAP troubleshooting guide&lt;/A&gt; references SAP Note 2922271, but its solution is tailored for &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;/hdi-deploy and not directly applicable to &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;/hdi-dynamic-deploy.&lt;/P&gt;&lt;H2 id="toc-hId-748952569"&gt;The Solution&lt;/H2&gt;&lt;P&gt;With support from the HANA-DB-DI team, we identified a practical approach to address this challenge. We hope sharing this helps others building multitenant applications on CAP and HANA Cloud.&lt;/P&gt;&lt;H3 id="toc-hId-681521783"&gt;Deployment 1: Undeploy .hdbtabledata Without Deleting Data&lt;/H3&gt;&lt;P&gt;First, set the HDI deployer's environment variable HDI_DEPLOY_OPTIONS in your MTA module properties to ensure the .hdbtabledata file is undeployed without deleting any data from the target table. Use the following configuration:&lt;/P&gt;&lt;PRE&gt;{
  "undeploy": [
    "src/gen/OPPC-UOM.hdbtabledata"
  ],
  "path-parameter": {
    "src/gen/OPPC-UOM.hdbtabledata:skip_data_deletion": "true"
  }
}&lt;/PRE&gt;&lt;P&gt;Then, proceed with the deployment and database upgrade. The logs below show this process:&lt;/P&gt;&lt;PRE&gt;2025-06-03T20:20:48.69+0530 [APP/PROC/WEB/0] OUT [9d2219cebfa570a2]: Undeploying "src/gen/OPPC-UOM.hdbtabledata"...
2025-06-03T20:20:48.69+0530 [APP/PROC/WEB/0] OUT [9d2219cebfa570a2]: Undeploying "src/gen/OPPC-UOM.hdbtabledata"... ok (0s 0ms)
2025-06-03T20:20:48.69+0530 [APP/PROC/WEB/0] OUT [9d2219cebfa570a2]: Deploying "src/gen/OPPC.UOM.hdbtable$OPPC_UOM.validate"...
2025-06-03T20:20:48.69+0530 [APP/PROC/WEB/0] OUT [9d2219cebfa570a2]: Expanded from "src/gen/OPPC.UOM.hdbtable"
2025-06-03T20:20:48.69+0530 [APP/PROC/WEB/0] OUT [9d2219cebfa570a2]: Undeploying "src/gen/OPPC-UOM.hdbtabledata$0.expand"...
2025-06-03T20:20:48.69+0530 [APP/PROC/WEB/0] OUT [9d2219cebfa570a2]: Expanded from "src/gen/OPPC-UOM.hdbtabledata"
2025-06-03T20:20:48.69+0530 [APP/PROC/WEB/0] OUT [9d2219cebfa570a2]: &lt;STRONG&gt;The "skip_data_deletion" make parameter is set; no data will be deleted from the target table "OPPC_UOM"&lt;/STRONG&gt;
2025-06-03T20:20:48.69+0530 [APP/PROC/WEB/0] OUT [9d2219cebfa570a2]: Deploying "src/gen/OPPC.UOM.hdbtable$OPPC_UOM.validate"... ok (0s 11ms)
2025-06-03T20:20:48.69+0530 [APP/PROC/WEB/0] OUT [9d2219cebfa570a2]: Undeploying "src/gen/OPPC-UOM.hdbtabledata$0.expand"... ok (0s 12ms)
  &lt;/PRE&gt;&lt;H3 id="toc-hId-485008278"&gt;Deployment 2: Deploy .hdbtabledata with include_filter&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;Remove the HDI deployer's HDI_DEPLOY_OPTIONS environment variable used in the previous deployment.&lt;/LI&gt;&lt;LI&gt;Update the .hdbtabledata file to include the include_filter option.&lt;/LI&gt;&lt;LI&gt;Deploy and upgrade the database.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;However, this deployment failed because the include_filter matched existing records in the table, as shown in the logs:&lt;/P&gt;&lt;PRE&gt;2025-06-03T20:31:52.57+0530 [APP/PROC/WEB/0] ERR Error: com.sap.hana.di.tabledata: &lt;STRONG&gt;The "include_filter" definitions match with 4364 records that already exist in the "OPPC_UOM" table&lt;/STRONG&gt; [8251521]
2025-06-03T20:31:52.57+0530 [APP/PROC/WEB/0] ERR Error: com.sap.hana.di.tabledata: Deploying "src/gen/OPPC-UOM.hdbtabledata$0.expand"... failed [8212145]
2025-06-03T20:31:52.57+0530 [APP/PROC/WEB/0] ERR Error: Worker 1 has encountered an error; all remaining jobs will be canceled [8214600]
2025-06-03T20:31:52.57+0530 [APP/PROC/WEB/0] ERR Error: Processing work list... failed [8212102]
2025-06-03T20:31:52.57+0530 [APP/PROC/WEB/0] ERR Error: Making... failed [8211605]
2025-06-03T20:31:52.57+0530 [APP/PROC/WEB/0] ERR Error: Starting make in the container "679623F6772E4C3BA111AB4C1775754E" with 1 files to deploy, 0 files to undeploy... failed [8214168]
  &lt;/PRE&gt;&lt;P&gt;This deployment would only succeed if the database entries matching the CSV content were removed beforehand. In a multitenant application with many productive subscriptions, manually removing data for all tenants is not practical, and we lacked an automated solution for this process.&lt;/P&gt;&lt;H2 id="toc-hId-159412054"&gt;Possible Approaches&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Automated Cleanup:&lt;/STRONG&gt; If the origin values are consistently determined by application logic, you could develop an automated task to clean up these records. This cleanup would need to be performed as a separate deployment step before deploying the .hdbtabledata file, though this approach requires additional effort.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Alternative Approach:&lt;/STRONG&gt; Instead, you can maintain new CSV content with a different origin value (e.g., origin='03'). This way, only the new CSV data is redeployed, and all existing data in the database table remains unchanged. Adjust the include_filter to target origin='03'.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The following logs show a successful deployment using the approach of&amp;nbsp;&lt;SPAN&gt;assigning a new origin value for new entries&lt;/SPAN&gt;:&lt;/P&gt;&lt;PRE&gt;2025-06-03T20:36:18.52+0530 [APP/PROC/WEB/0] OUT [be82fcfafc2dc1ee]: "src/gen/OPPC-UOM.hdbtabledata"
2025-06-03T20:36:18.52+0530 [APP/PROC/WEB/0] OUT [be82fcfafc2dc1ee]: ]
.
.
.
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Undeploying "src/gen/OPPC-UOM.hdbtabledata$0.expand"...
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Expanded from "src/gen/OPPC-UOM.hdbtabledata"
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Deploying "src/gen/OPPC.UOM.hdbtable$OPPC_UOM.validate"...
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Expanded from "src/gen/OPPC.UOM.hdbtable"
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Deploying "src/gen/OPPC.UOM.hdbtable$OPPC_UOM.validate"... ok (0s 7ms)
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Undeploying "src/gen/OPPC-UOM.hdbtabledata$0.expand"... ok (0s 15ms)
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Undeploying "src/csv/OPPC-UOM.csv"...
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Undeploying "src/csv/OPPC-UOM.csv"... ok (0s 5ms)
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Deploying "src/csv/OPPC-UOM.csv"...
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Deploying "src/csv/OPPC-UOM.csv"... ok (0s 3ms)
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Deploying "src/gen/OPPC-UOM.hdbtabledata$0.expand"...
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Expanded from "src/gen/OPPC-UOM.hdbtabledata"
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Inserted 1 records of the data source file "OPPC-UOM.csv" into the target table "OPPC_UOM"
2025-06-03T20:42:49.12+0530 [APP/PROC/WEB/0] OUT [d9a3e16053ae1f81]: Deploying "src/gen/OPPC-UOM.hdbtabledata$0.expand"... ok (0s 43ms)
  &lt;/PRE&gt;&lt;H4 id="toc-hId-221063987"&gt;&amp;nbsp;&lt;/H4&gt;&lt;H2 id="toc-hId-113639401"&gt;Optimal Approach:&lt;/H2&gt;&lt;H4 id="toc-hId--669680118"&gt;Automated Data Cleanup Using SAP HANA Migration Tables&lt;/H4&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Using origin='03' for new CSV entries solves the issue for existing HDI containers. However, for new subscriptions, these containers won’t have the standard CSV content (origin="02") auto-inserted.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;SAP HANA provides a robust feature called &lt;STRONG&gt;Migration Tables (.hdbmigrationtable)&lt;/STRONG&gt; that enables seamless and automated data cleanup. For more details with a real-world example, refer to&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/hana-database-migration-handling-incompatible-changes-to-existing-tables/ba-p/14078039?emcs_t=S2h8ZW1haWx8a3Vkb3N8TUFESFBWWkI2VDVHUVN8MTQwNzgwMzl8S1VET1N8aEs" target="_blank"&gt;HANA Database Migration: Handling Incompatible Changes to Existing Tables&lt;/A&gt;&amp;nbsp;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;SPAN&gt;Migration tables simplify automated cleanup—no changes to your current system behaviour are needed!&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;H4 id="toc-hId--866193623"&gt;Deployment 1: Initial Setup&lt;/H4&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Add HDI plugin "com.sap.hana.di.table.migration" to src/.hdiconfig&lt;/STRONG&gt;&lt;PRE&gt; "hdbmigrationtable": {
      "plugin_name": "com.sap.hana.di.table.migration"
  }&lt;/PRE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Create /src/OPPC.UOM.hdbmigrationtable&lt;/STRONG&gt;&lt;BR /&gt;This file is generated during the CDS build step when you annotate your entity with &lt;FONT color="#993300"&gt;@cds.persistence.journal&lt;/FONT&gt;. This instructs CAP to create a migration table, enabling versioning and data migrations.&lt;BR /&gt;&lt;EM&gt;Example:&lt;/EM&gt;&lt;PRE&gt;== version=1
COLUMN TABLE OPPC_UOM (
  CODE NVARCHAR(5) NOT NULL,
  LANGUAGE_CODE NVARCHAR(2) NOT NULL,
  COMMERCIAL_DESCRIPTION NVARCHAR(3),
  LONG_DESCRIPTION NVARCHAR(30),
  ORIGIN NVARCHAR(2),
  PRIMARY KEY(CODE, LANGUAGE_CODE)
) WITH ASSOCIATIONS (
  MANY TO ONE JOIN OPPC_ISOCodeMapping AS isoCodeMapping ON (isoCodeMapping.CODE = CODE)
)&lt;/PRE&gt;&lt;FONT size="2" color="#993300"&gt;&lt;EM&gt;The structure is similar to /src/gen/OPPC.UOM.hdbtable, but includes the migration version header.&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Add /src/gen/OPPC.UOM.hdbtable to undeploy.json&lt;/STRONG&gt;&lt;BR /&gt;This step removes the static table definition from the HDI container, preventing conflicts with the migration table.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Set HDI_DEPLOY_OPTIONS for Controlled Undeployment&lt;/STRONG&gt;&lt;BR /&gt;Configure HDI_DEPLOY_OPTIONS to undeploy /src/gen/OPPC-UOM.hdbtabledata without deleting data in the OPPC_UOM table. This preserves existing data during artifact changes.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Deploy and InitDB&lt;/STRONG&gt;&lt;BR /&gt;Deploy the changes and perform the InitDB operation.&lt;/LI&gt;&lt;/OL&gt;&lt;H4 id="toc-hId--1062707128"&gt;Deployment 2: Data Migration and Filtering&lt;/H4&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Remove HDI_DEPLOY_OPTIONS&lt;/STRONG&gt;&lt;BR /&gt;After the initial migration, remove the custom deploy options to restore standard deployment behavior.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Update /src/OPPC.UOM.hdbmigrationtable for Data Migration&lt;/STRONG&gt;&lt;BR /&gt;Increment the migration version and add a migration block to delete entries where ORIGIN = '02'. This is important if you plan to use an include_filter in your table data, as existing data may conflict with new constraints.&lt;BR /&gt;&lt;EM&gt;Example:&lt;/EM&gt;&lt;PRE&gt;== version=2
COLUMN TABLE OPPC_UOM (
  CODE NVARCHAR(5) NOT NULL,
  LANGUAGE_CODE NVARCHAR(2) NOT NULL,
  COMMERCIAL_DESCRIPTION NVARCHAR(3),
  LONG_DESCRIPTION NVARCHAR(30),
  ORIGIN NVARCHAR(2),
  PRIMARY KEY(CODE, LANGUAGE_CODE)
) WITH ASSOCIATIONS (
  MANY TO ONE JOIN OPPC_ISOCodeMapping AS isoCodeMapping ON (isoCodeMapping.CODE = CODE)
)&lt;BR /&gt;
&lt;FONT color="#008000"&gt;&lt;STRONG&gt;== migration=2 
DELETE FROM "OPPC_UOM" WHERE "ORIGIN" = '02';&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/PRE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Add /src/gen/OPPC.UOM.hdbtable and /src/csv/OPPC-UOM.csv to undeploy.json&lt;/STRONG&gt;&lt;BR /&gt;This ensures obsolete artifacts and data files are removed from the HDI container.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Move Data Files to a Static Folder&lt;/STRONG&gt;&lt;BR /&gt;Relocate OPPC-UOM.hdbtabledata and OPPC-UOM.csv to a dedicated static folder (e.g., src/static/csv). This prevents CDS from auto-generating a .hdbtabledata file for OPPC-UOM.csv since you need to customise&amp;nbsp;OPPC-UOM.hdbtabledata with an include_filter.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Modify OPPC-UOM.hdbtabledata to Filter Data&lt;/STRONG&gt;&lt;BR /&gt;Update the file to only include records where ORIGIN = '02', ensuring only relevant data is loaded.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Deploy and InitDB&lt;/STRONG&gt;&lt;BR /&gt;Deploy the changes and perform the InitDB operation.&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId--672414619"&gt;References&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/SAP_HANA_PLATFORM/4505d0bdaf4948449b7f7379d24d0f0d/a4bbc2dd8a20442387dc7b706e8d3070.html" target="_blank" rel="noopener noreferrer"&gt;Deployment Options in HDI&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://www.npmjs.com/package/@sap/hdi-dynamic-deploy" target="_blank" rel="noopener nofollow noreferrer"&gt;@sap/hdi-dynamic-deploy&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://pages.github.tools.sap/cap/docs/get-started/troubleshooting#how-do-i-keep-existing-data" target="_blank" rel="noopener nofollow noreferrer"&gt;CAP Troubleshooting: How do I keep existing data?&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://sap.stackenterprise.co/questions/73269" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sap.stackenterprise.co/questions/73269&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;H3 id="toc-hId--1162331131"&gt;Special Thanks&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Special thanks to the HANA-DB-DI team members, particularly Pavel Sluzkin and Alexander Bunte, for their invaluable support and guidance!&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/handling-csv-data-deployment-in-cap-hdi-without-data-loss/ba-p/14118322"/>
    <published>2025-06-04T03:22:59.880000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-june-5th-2025/ba-p/14120453</id>
    <title>SAP Developer News June 5th, 2025</title>
    <updated>2025-06-05T21:10:00.051000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FXLj5qgN7i8s%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DXLj5qgN7i8s&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FXLj5qgN7i8s%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="SAP Business Data Cloud, Terraform Exporter for SAP BTP, SAP CodeJam Roadshow | SAP Developer News" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1861289061"&gt;&lt;SPAN&gt;DESCRIPTION&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;PODCAST:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; &lt;A href="https://podcast.opensap.info/sap-developers/2025/06/05/sap-developer-news-june-5th-2025/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://podcast.opensap.info/sap-developers/2025/06/05/sap-developer-news-june-5th-2025/&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;New SAP Certified Associate - SAP Business Data Cloud&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Webinar Series: Architecting Your SAP Business Data Cloud Journey – From Data to Intelligence: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/enterprise-architecture-blog-posts/new-webinar-series-architecting-your-sap-business-data-cloud-journey-from/ba-p/14104348" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/enterprise-architecture-blog-posts/new-webinar-series-architecting-your-sap-business-data-cloud-journey-from/ba-p/14104348&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;New SAP Certified Associate - SAP Business Data Cloud: &lt;/SPAN&gt;&lt;A href="https://learning.sap.com/certifications/sap-certified-associate-sap-business-data-cloud" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://learning.sap.com/certifications/sap-certified-associate-sap-business-data-cloud&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Learning Journey: Exploring SAP Business Data Cloud: &lt;/SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/exploring-sap-business-data-cloud" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://learning.sap.com/learning-journeys/exploring-sap-business-data-cloud&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;New ways to install the Terraform Exporter for SAP BTP&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Installation information &lt;/SPAN&gt;&lt;A href="https://sap.github.io/terraform-exporter-btp/install/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://sap.github.io/terraform-exporter-btp/install/&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP CodeJam Roadshow – US AI&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/sap-codejam/getting-started-with-generative-ai-hub-on-sap-ai-core-new-york-new-york-usa/ev-p/14099369" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/sap-codejam/getting-started-with-generative-ai-hub-on-sap-ai-core-new-york-new-york-usa/ev-p/14099369&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/sap-codejam/getting-started-with-generative-ai-hub-on-sap-ai-core-palo-alto-ca-usa/ev-p/14101603" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/sap-codejam/getting-started-with-generative-ai-hub-on-sap-ai-core-palo-alto-ca-usa/ev-p/14101603&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/sap-codejam/getting-started-with-generative-ai-hub-on-sap-ai-core-houston-tx-usa/ev-p/14101612" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/sap-codejam/getting-started-with-generative-ai-hub-on-sap-ai-core-houston-tx-usa/ev-p/14101612&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP CodeJam Roadshow 2025 – Latin America edition&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP CodeJam Roadshow 2025 - Latin America edition &lt;span class="lia-unicode-emoji" title=":brazil:"&gt;🇧🇷&lt;/span&gt; &lt;span class="lia-unicode-emoji" title=":peru:"&gt;🇵🇪&lt;/span&gt; &lt;span class="lia-unicode-emoji" title=":mexico:"&gt;🇲🇽&lt;/span&gt; &lt;span class="lia-unicode-emoji" title=":colombia:"&gt;🇨🇴&lt;/span&gt; (July 25th - Aug 12th 2024): &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/sap-codejam-blog-posts/sap-codejam-roadshow-2025-latin-america-edition-july-25th-aug-12th-2024/ba-p/14093930" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/sap-codejam-blog-posts/sap-codejam-roadshow-2025-latin-america-edition-july-25th-aug-12th-2024/ba-p/14093930&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1664775556"&gt;&lt;SPAN&gt;CHAPTER TITLES&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;0:00 Intro&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:10 New SAP Certified Associate - SAP Business Data Cloud&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1:08 New ways to install the Terraform Exporter for SAP BTP&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;2:01 SAP CodeJam Roadshow – US AI&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;3:33 SAP CodeJam Roadshow 2025 - Latin America edition&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1468262051"&gt;TRANSCRIPTION&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Intro]&lt;/STRONG&gt; This is the SAP Developer News for June the 5th, 2025.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Witalij]&lt;/STRONG&gt; This month, we at SAP launched a new webinar series titled Architecting Your SAP Business Data Cloud Journey, From Data to Intelligence. This series kicks off this week with a discussion on data and AI strategy across SAP business applications, followed by a deep dive into our latest data offering, SAP Business Data Cloud. Additional topics include BWM modernization, SAP Databricks, and transition paths to SAP BBC. Building on this foundation, we invite you to validate your expertise by taking the new SAP Business Data Cloud certification exam. The certification confirms your solid understanding of SAP Business Data Cloud, and it demonstrates that you possess both the broad overview and essential skills needed to contribute effectively within project teams. enjoy the learning journey and good luck with the exam links are in the description&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[DJ]&lt;/STRONG&gt; there's a great update for the terraform exporter for sap btp which we've covered in previous episodes on this show so as well now as being able to download the binary for your os the binary of the tool you can now install the tool via package managers for Mac OS there's brew for windows there's winget and soon also chocolatey and of course for linux you have installation package manager mechanisms for debian based and rpm based distributions great this is going to make the management of the life cycle of the tool a lot more comfortable for us check out the updated installation information link is in the description&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Rich]&lt;/STRONG&gt; Hello, friends. Rich Heilman here. Hope everyone is doing well. I just wanted to pop on here and let you all know about the SAP Code Jam Roadshow in the U.S. that is happening in just about two weeks. This roadshow will include three stops, and we will be focusing on the topic of getting started with Generative AI Hub on SAP AI Core. The first stop will be on June 23rd in the very heart of New York City. I always love doing these short trips to New York City. It sort of fulfills my childhood craving to live and work in the big city, even for just a day or two. So I'm looking forward to that. And then Tom and I will attempt to jump on a plane out of Newark, New Jersey. wish us luck and fly to the west coast for our next stop on June 25th in beautiful palo alto California if you haven't visited the bay area absolutely stunning sights especially for us East coasters so check it out and then from there I'm going to attempt to get back to Newark wish me luck and Tom will then be joined by Mimiki for the last stop in Houston on June 27th So it's shaping up to be a great trip, but that's not the only roadshows happening this year. And I know that my friend Antonio has some details on that. So over to you, Antonio.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Antonio]&lt;/STRONG&gt;Thanks, Rich. Hola, SAP developers. We just announced the second Latin America Code Jam Roadshow, which will take place between the 25th of July and the 12th of August. This time, Rich and Tom will join the roadshow, and we will be doing CodeJams on ABAP Cloud and the Generative AI Hub. We kick things off with the Generative AI CodeJam in Sao Paulo, Brazil. And then we'll be doing both CodeJams in Lima, Peru, Mexico City, and Bogota, Colombia. Similar to last year, we will also do meetups in the different locations. Vamos a ter un encontro SAPI en Sao Paulo. En quedadas en Lima,Ciudad de México y Bogotá. Make sure to check out the blog post to find all the details of the roadshow and check out each event to learn which developer advocate will be at the different events. Até pronto. Nos vemos pronto.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-june-5th-2025/ba-p/14120453"/>
    <published>2025-06-05T21:10:00.051000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/enhancing-efficiency-with-sap-job-scheduling-service-and-sap-cloud-alm/ba-p/14120036</id>
    <title>Enhancing Efficiency with SAP Job Scheduling Service and SAP Cloud ALM</title>
    <updated>2025-06-13T09:20:40.546000+02:00</updated>
    <author>
      <name>dragomir_anachkov</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/269308</uri>
    </author>
    <content>&lt;P&gt;&lt;A title="https://help.sap.com/whats-new/cf0cb2cb149647329b5d02aa96303f56?Valid_as_Of=2025-05-29:2025-05-29&amp;amp;locale=en-US&amp;amp;version=Cloud&amp;amp;Component=Job+Scheduling+Service" href="https://help.sap.com/whats-new/cf0cb2cb149647329b5d02aa96303f56?Valid_as_Of=2025-05-29:2025-05-29&amp;amp;locale=en-US&amp;amp;version=Cloud&amp;amp;Component=Job+Scheduling+Service" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;What's New for SAP Business Technology Platform&lt;/SPAN&gt;&lt;/A&gt; has recently announced the integration between the SAP Job Scheduling service and SAP Cloud ALM, designed to streamline operations and enhance efficiency.&lt;/P&gt;&lt;P&gt;This integration allows for seamless management and monitoring of scheduled jobs, providing a more cohesive experience by letting you&amp;nbsp;&lt;SPAN&gt;track the status of your job processes directly from the UI of SAP Cloud ALM.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1732202439"&gt;What Is SAP Job Scheduling Service?&lt;/H2&gt;&lt;P&gt;SAP Job Scheduling service is a cloud-based tool that runs on SAP Business Technology Platform (SAP BTP), both in the Cloud Foundry and Kyma environments. It enables you to automate and manage job scheduling across various applications. It helps in optimizing resource allocation and ensuring that tasks are executed at the right time, thereby improving operational efficiency.&lt;/P&gt;&lt;P&gt;For more information, refer to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A title="https://help.sap.com/docs/job-scheduling/sap-job-scheduling-service/what-is-sap-job-scheduling-service" href="https://help.sap.com/docs/job-scheduling/sap-job-scheduling-service/what-is-sap-job-scheduling-service" target="_blank" rel="noopener noreferrer"&gt;What Is SAP Job Scheduling Service?&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A title="https://discovery-center.cloud.sap/serviceCatalog/job-scheduling-service?region=all" href="https://discovery-center.cloud.sap/serviceCatalog/job-scheduling-service?region=all" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Job Scheduling Service at SAP Discovery Center&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1535688934"&gt;Integration with SAP Cloud ALM&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A title="https://help.sap.com/docs/cloud-alm/applicationhelp/about" href="https://help.sap.com/docs/cloud-alm/applicationhelp/about" target="_blank" rel="noopener noreferrer"&gt;SAP Cloud ALM&lt;/A&gt; is a cloud-based application lifecycle management solution that helps you streamline the implementation and operation of your cloud and hybrid business solutions.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;The integration with SAP Job Scheduling service allows you to monitor job execution directly within the SAP Cloud ALM environment. This means you can now track job statuses, view logs, and receive alerts, all from a single interface, reducing the need to switch between different platforms.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JBS_enable_CALM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270239iE4B52A2ACD575D94/image-size/large?v=v2&amp;amp;px=999" role="button" title="JBS_enable_CALM.png" alt="JBS_enable_CALM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For more information about the integration and how you can enable it, refer to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A title="https://help.sap.com/docs/job-scheduling/sap-job-scheduling-service/integration-with-sap-cloud-alm" href="https://help.sap.com/docs/job-scheduling/sap-job-scheduling-service/integration-with-sap-cloud-alm" target="_blank" rel="noopener noreferrer"&gt;Integration with SAP Cloud ALM&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A title="https://support.sap.com/en/alm/sap-cloud-alm/operations/expert-portal/job-monitoring/job-automation-monitoring-details.html" href="https://support.sap.com/en/alm/sap-cloud-alm/operations/expert-portal/job-monitoring/job-automation-monitoring-details.html" target="_blank" rel="noopener noreferrer"&gt;Job &amp;amp; Automation Monitoring Setup &amp;amp; Configuration&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1339175429"&gt;Your Opinion Matters&lt;/H2&gt;&lt;P&gt;Let us know what you think about the integration with SAP Cloud ALM. We would love to learn more about your experience with it so that we can make your job scheduling journey as smooth as possible.&lt;/P&gt;&lt;P&gt;We are also committed to enhancing the overall user experience of the SAP Job Scheduling service. To achieve this, we invite you to participate in a feedback survey accessible via the Job Scheduling service dashboard. Your insights are invaluable in helping us improve the look and feel of the dashboard, ensuring it meets your needs and expectations.&lt;/P&gt;&lt;P&gt;To leave us feedback via the UI of the dashboard, just choose &lt;STRONG&gt;Join our user survey!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JBS_user_survey.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270248i96D8E5D4E1F5B2A8/image-size/large?v=v2&amp;amp;px=999" role="button" title="JBS_user_survey.png" alt="JBS_user_survey.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Additionally, if you want to give us feedback on the quality of the documentation on SAP Help Portal, check out the&amp;nbsp;&lt;A title="https://community.sap.com/t5/technology-blog-posts-by-sap/participate-in-the-documentation-feedback-survey-for-sap-job-scheduling/ba-p/14092131" href="https://community.sap.com/t5/technology-blog-posts-by-sap/participate-in-the-documentation-feedback-survey-for-sap-job-scheduling/ba-p/14092131" target="_blank"&gt;Participate in the Documentation Feedback Survey for SAP Job Scheduling Service&lt;/A&gt;&amp;nbsp;blog post to learn more.&lt;/P&gt;&lt;P&gt;We look forward to hearing from you and thank you for your continued support.&lt;/P&gt;&lt;P&gt;Also, feel free to share your thoughts and experiences in the comments below. Your input is always appreciated!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/enhancing-efficiency-with-sap-job-scheduling-service-and-sap-cloud-alm/ba-p/14120036"/>
    <published>2025-06-13T09:20:40.546000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-runtimes-my-personal-considerations-and-preferences-on-cloud/ba-p/14129510</id>
    <title>SAP BTP runtimes, my personal considerations and preferences on Cloud Foundry, Kyma, ABAP runtimes</title>
    <updated>2025-06-18T05:16:50.773000+02:00</updated>
    <author>
      <name>mauriciolauffer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11418</uri>
    </author>
    <content>&lt;P&gt;In this fast-paced environment... Nah, just kidding! This is not another AI generated or soulless marketing blog post plaguing the internet. This is about SAP BTP runtimes, and my personal preferences. I know, I know... There's an SAP badge next to my name, but it's because I couldn't keep my personal community profile detached from my SAP email due to reasons in the new community platform... So, ignore the badge, it's my own view, oversimplified and full of silly examples, not a recommendation nor official position from SAP. Don't read this and go back to your boss saying "&lt;EM&gt;hey, SAP is telling us that runtime A is better than B&lt;/EM&gt;".&lt;/P&gt;&lt;P&gt;You may know that SAP BTP offers three runtimes where you can deploy and run your custom applications. We can pick and choose whatever we want. We can run everything in just one runtime, or, we can have workloads in all of them at the same time. You can adopt the runtimes according to your needs and/or skills.&lt;/P&gt;&lt;P&gt;There is always somebody asking me about the SAP BTP runtimes. What they offer, their limitations, their features, when to use this, how to use that. Sometimes they just want to confirm whatever they're using is right. Sometimes they have no idea they had options. I'd say this is a bit shocking for those coming from the ABAP on-premise world: “&lt;EM&gt;we have options!?!?!&lt;/EM&gt;”.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1732475295"&gt;* Runtimes / Environments&lt;/H2&gt;&lt;P&gt;Yes, runtimes and environments are the same thing... No, I won't talk about &lt;STRONG&gt;Neo Environment&lt;/STRONG&gt; because it's deprecated, it'll &lt;A title="Migrating from the Neo Environment to the Multi-Cloud Foundation for SAP BTP (Cloud Foundry and Kyma)" href="https://help.sap.com/docs/btp/migrating-from-neo-environment-to-multi-cloud-foundation-cloud-foundry-and-kyma/migrating-from-neo-environment-to-multi-cloud-foundation-cloud-foundry-and-kyma?locale=en-US" target="_self" rel="noopener noreferrer"&gt;sunset on 31/12/2028&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Let's see a short description of runtimes before getting into more details.&lt;/P&gt;&lt;H3 id="toc-hId-1665044509"&gt;Cloud Foundry Environment&lt;/H3&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;"&lt;EM&gt;The Cloud Foundry environment enables you to develop new business applications and business services, supporting multiple runtimes, programming languages, libraries, and services. You can leverage a multitude of buildpacks, including community innovations and self-developed buildpacks.&lt;/EM&gt;"... from &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/cloud-foundry-environment" target="_blank" rel="noopener noreferrer"&gt;SAP BTP documentation&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1468531004"&gt;Kyma Environment&lt;/H3&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;"&lt;EM&gt;SAP BTP, Kyma runtime provides a fully managed cloud-native Kubernetes application runtime based on the open-source project "Kyma". Based on modular building blocks, Kyma runtime includes all the necessary capabilities to simplify the development and to run enterprise-grade cloud-native applications.&lt;/EM&gt;"... from &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/kyma-environment" target="_blank" rel="noopener noreferrer"&gt;SAP BTP documentation&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1272017499"&gt;ABAP&amp;nbsp;Environment&lt;/H3&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;"&lt;EM&gt;The ABAP environment is based on the latest ABAP platform cloud release that is also used for SAP S/4HANA Cloud. It leverages the innovations provided by SAP HANA. The software stack contains standard technology components that are familiar from the standalone Application Server ABAP. The ABAP environment supports the ABAP RESTful Application Programming Model including SAP Fiori and Core Data Services (CDS).&lt;/EM&gt;"... from &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/abap-environment" target="_blank" rel="noopener noreferrer"&gt;SAP BTP documentation&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-946421275"&gt;* Supported languages&lt;/H2&gt;&lt;P&gt;The programming language you use can limit what you do and how fast you can deliver&lt;/P&gt;&lt;H3 id="toc-hId-878990489"&gt;Cloud Foundry&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;CF supports pretty much any language as long as you have a buildpack for that. There are &lt;A href="https://docs.cloudfoundry.org/buildpacks/index.html" target="_self" rel="nofollow noopener noreferrer"&gt;official buildpacks&lt;/A&gt; maintained by the Cloud Foundry Foundation, by SAP itself and others by the CF community. The &lt;A href="https://docs.cloudfoundry.org/buildpacks/node/index.html" target="_self" rel="nofollow noopener noreferrer"&gt;Node.js buildpack&lt;/A&gt; is a good example.&lt;/P&gt;&lt;H3 id="toc-hId-682476984"&gt;Kyma&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;Kyma also supports any language as long as you have a container to run it. Some languages have their official container images which you can use as-is or customize as you wish. The &lt;A href="https://hub.docker.com/_/node" target="_self" rel="nofollow noopener noreferrer"&gt;Node.js Docker image&lt;/A&gt; is a good example.&lt;/P&gt;&lt;H3 id="toc-hId-485963479"&gt;ABAP&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;ABAP is quite obvious. It only supports ABAP, but not your old school ABAP report declaring internal tables like&amp;nbsp;&lt;STRONG&gt;DATA: lt_mara TYPE TABLE OF mara&amp;nbsp;WITH HEADER LINE&lt;/STRONG&gt;. It only runs &lt;A href="https://help.sap.com/docs/abap-cloud?locale=en-US" target="_self" rel="noopener noreferrer"&gt;ABAP Cloud&lt;/A&gt;, a subset of the ABAP language tailored to modern days.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-160367255"&gt;* Performance&lt;/H2&gt;&lt;P&gt;In terms of performance, all runtimes can deliver great results. They'll be mostly limited by how your applications were built. Translation: if the application is too slow, your code is the problem, not the runtime.&lt;/P&gt;&lt;P&gt;Nevertheless, there'll be a threshold where even the highest quality app won't cope with high demand. There's no magic number, it varies. This is a hurdle overcome by good software engineering and scalability.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--36146250"&gt;* Scalability / Elasticity&lt;/H2&gt;&lt;P&gt;Scalability in CF and Kyma is quite flexible and granular. Vertical and horizontal scaling are available. You can automatically scale up and down your applications. No need to touch it, no manual monitoring, no manual resource allocation, no need to guess what the workload demand will look like next Wednesday at 4:20 AM AEST time.&lt;/P&gt;&lt;P&gt;Your cool AI powered app is being bombarded by incoming requests from all the customers accessing it? No problem, new instances can be created and destroyed based on rules such as memory or CPU usage. For example, if the app is consuming more than 90% of CPU, spawns a new instance to share the workload. If the CPU usage goes down, let's say under 50%, stop and kill the previously spawned instance.&lt;/P&gt;&lt;P&gt;You have 1000 apps, but just 1 app is under stress? No problem, you can scale up just that one app! CF and Kyma run everything in containers. They're fully isolated and have their own resources. For instance, app AAA has 1 GB memory available for itself, app BBB has 5 GB and app CCC has 256 MB. You can also change the allocated memory at any time. For instance: “oh, I thought my app would need 2 GB RAM, but it actually needs 1 GB”. No problems! Adjust it without changing the code nor redeploying the app.&lt;/P&gt;&lt;P&gt;You may have a rule dictating apps will always have at least 2 instances running to distribute the workload. This is actually a best practice and encouraged to be adopted. Perhaps you don't need an app with 6 GB memory, but 3 instances of the same app with 2GB each. Running multiple instances is how you enable high availability for your apps as well, if one instance crashes the others keep working. It also enables zero downtime deployments.&lt;/P&gt;&lt;P&gt;Oh, the beauty of the cloud! &lt;span class="lia-unicode-emoji" title=":smiling_face_with_heart_eyes:"&gt;😍&lt;/span&gt; Can you imagine doing these things in your ALV reports running on SAP ECC 6.0?&lt;/P&gt;&lt;H3 id="toc-hId--178808405"&gt;Cloud Foundry&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;The service &lt;A href="https://help.sap.com/docs/application-autoscaler?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Application Autoscaler&lt;/A&gt; provides everything you need to manage scaling your apps. It's just a configuration. If you have an app with 1 instance or 99 instances running, nothing changes for you as a developer, system admin or end user. &lt;A href="https://docs.cloudfoundry.org/concepts/cf-routing-architecture.html" target="_self" rel="nofollow noopener noreferrer"&gt;CF Load Balancers&lt;/A&gt; take care of distributing the incoming requests between all the instances. It's transparent and super smooth. Just make sure to gracefully shutdown your apps to avoid serving requests from a stopping instance. I'd written and spoken about graceful shutdown before, have a look: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/tips-for-running-cap-nodejs-in-sap-btp/ba-p/13564535" target="_self"&gt;blog post&lt;/A&gt; + &lt;A href="https://www.youtube.com/watch?v=yCp-uBGT674" target="_self" rel="nofollow noopener noreferrer"&gt;video&lt;/A&gt;.&lt;/P&gt;&lt;H3 id="toc-hId--375321910"&gt;Kyma&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;Pretty much the same as CF. You define the configuration rules, the load balancer takes care of distributing the traffic. You don't need to code this behaviour, the &lt;A href="https://keda.sh/" target="_self" rel="nofollow noopener noreferrer"&gt;Keda module&lt;/A&gt; available in the runtime does that for you. Kyma is powerful, and much more flexible than other runtimes. You can scale to zero nodes. You can use heaps of scalers out-of-the-box. You can also create pretty much any custom rule: if it's Wednesday, and it's raining, and Bitcoin is under 100k, spin up a new instance ¯\_(ツ)_/¯&lt;/P&gt;&lt;H3 id="toc-hId--571835415"&gt;ABAP&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;Ok, now we'll see a big difference. You cannot have multiple copies of your app as in CF/Kyma. You have no granularity as the ABAP environment resources are shared between all applications. Everything runs in "&lt;EM&gt;one&lt;/EM&gt;" box, vertical scaling is the only option. You either bump the whole environment or don't, pretty much the same as in on-prem servers. Have a look at&amp;nbsp;&lt;A href="https://help.sap.com/docs/sap-btp-abap-environment/abap-environment/updating-abap-system" target="_self" rel="noopener noreferrer"&gt;Elastic Scaling&lt;/A&gt; of the ABAP Application Server. Yes, the service supports High Availability.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--474945913"&gt;* Resource isolation&lt;/H2&gt;&lt;P&gt;Let's do a mental exercise to understand resource allocation and isolation a little bit more. Think about the following scenario. You have 100 apps running at the same runtime. You deploy a change to 1 of those apps. The code change has a bug! The app goes into an infinite loop, starts consuming 100% of CPU and becomes unresponsive. What happens to the other apps?&lt;/P&gt;&lt;H3 id="toc-hId--964862425"&gt;Cloud Foundry&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;Nothing. The other 99 apps are running in their own containers, fully isolated with their own resources (limited memory and CPU per app). Only users using the buggy app will be impacted. Users accessing other apps won't have any issues.&lt;/P&gt;&lt;H3 id="toc-hId--1161375930"&gt;Kyma&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;Same as CF. Hooray to containers! &lt;span class="lia-unicode-emoji" title=":clinking_beer_mugs:"&gt;🍻&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1357889435"&gt;ABAP&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;I'm sorry to say, but you messed up badly. All 100 apps will be unresponsive. All users, even the ones not using the app in infinite loop will be impacted. The bug just caused a company wide issue.&lt;/P&gt;&lt;P&gt;Let's stretch this example a bit more to make a point. Your company has 5000 users consuming those apps in SAP BTP ABAP runtime. The buggy app is a tiny noncritical one being used by 2 users from IT to import data from Excel to HANA (&lt;span class="lia-unicode-emoji" title=":winking_face:"&gt;😉&lt;/span&gt;). Because the bug is impacting the whole ABAP runtime, everyone is affected, 5000 users will complain they can't use their apps.&lt;/P&gt;&lt;P&gt;Resources are shared here, there's no app isolation. You cannot say one app will use only 512 MB, one app can consume all resources available in the environment. As I said, it's the same behaviour as in SAP ABAP Netweaver servers. You can think about it as a big gaming desktop running ABAP.&lt;/P&gt;&lt;H2 id="toc-hId--1260999933"&gt;&lt;BR /&gt;* Developer experience (DX)&lt;/H2&gt;&lt;P&gt;Let's be honest, DX was neglected for a long time in SAP. It started changing when ADT was introduced for Eclipse users. Nowadays, DX in SAP BTP can be great! People can use the same modern tools the cool kids are using out there.&lt;/P&gt;&lt;H3 id="toc-hId--1750916445"&gt;Cloud Foundry&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;When developing applications to run in CF, you focus on the code, not much on the infrastructure to run it. You write your code, build and deploy it. CF will get the request, build the container, put your app inside the container, prepare everything, execute the app and make it available for you.&lt;/P&gt;&lt;P&gt;You have a bunch of tools to use from SAP, from Cloud Foundry and from both communities. Endless options for pretty much everything!&lt;/P&gt;&lt;P&gt;A simple "Hello World" app can go like this: write the code (easy), prepare the manifest.yml (easy) or a mta.yaml (can be overwhelming) and push to CF (easy). The app is ready to be used.&lt;/P&gt;&lt;H3 id="toc-hId--1947429950"&gt;Kyma&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;Your attention is needed on both code and infrastructure. Have you ever worked with Kubernetes? It's the same. Deploying to Kyma can be a bit scary as its manifest.yml is even more complex than the mta.yaml file in CF. Kyma also requires you to manage the container you want to run your application in. You must build the container before deploying your app. You won't get anywhere without a good amount of knowledge.&lt;/P&gt;&lt;P&gt;Again. You have a bunch of tools to use from SAP, from Kubernetes and from both communities.&amp;nbsp;Endless options for pretty much everything!&lt;/P&gt;&lt;P&gt;A simple "Hello World" app can go like this: write the code (easy), prepare the container image you want to use (it may involve multiple steps and can be hard, especially for beginners), prepare the manifest.yml (hard) and push to Kyma (easy).&lt;BR /&gt;The app is ready to be used.&lt;/P&gt;&lt;H3 id="toc-hId--1975759764"&gt;ABAP&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;You have no choice of IDE, you must use Eclipse with ADT plugin. No &lt;A href="https://help.sap.com/docs/bas?locale=en-US" target="_self" rel="noopener noreferrer"&gt;SAP BAS&lt;/A&gt; nor &lt;A href="https://help.sap.com/docs/build_code?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Build Code&lt;/A&gt;. All ABAP tools are provided by SAP.&amp;nbsp;You need a fair amount of knowledge to get started. It might be intimidating for noobs without any ABAP skills.&lt;/P&gt;&lt;P&gt;You may find some open source projects, but let's be honest, other than &lt;A href="https://github.com/abapGit/abapGit" target="_self" rel="nofollow noopener noreferrer"&gt;ABAPgit&lt;/A&gt;, the ABAP open source community doesn't have much in terms of tooling. It's pretty much 3 absolute amazing guys caring the whole community on their shoulders: &lt;A href="https://github.com/larshp" target="_self" rel="nofollow noopener noreferrer"&gt;Lars Hvam&lt;/A&gt;, &lt;A href="https://github.com/marcellourbani" target="_self" rel="nofollow noopener noreferrer"&gt;Marcello Urbani&lt;/A&gt; and&amp;nbsp;&lt;A href="https://github.com/mbtools" target="_self" rel="nofollow noopener noreferrer"&gt;Marc Bernard&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;A simple "Hello World" app can go like this: write the code (kinda easy, too many moving pieces, too verbose), push to ABAP Environment (kinda easy), activate it (easy). The app is ready to be used.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-2122694027"&gt;* Skills / Skill set&lt;/H3&gt;&lt;P&gt;It's quite obvious, but for all the three runtime options, you need to know the language you want to use, eg. Node.js or Java or Python, and the tooling for that specific language (linting, code quality, automated testing, profiling, etc).&lt;/P&gt;&lt;P&gt;Recruiters complain they can't find resources, that there are no SAP BTP Developers out there. IMO, they're looking in the wrong place, developers don't need to speak SAP to work on SAP BTP. A SAP BTP Developer is “just” a developer who knows any modern language and cloud platforms. Get a Java developer with Kubernetes knowledge and they'll be deploying to SAP BTP on the same day. Youngsters in universities know at least one of the languages behind CAP (Node.js/Java) and play with cloud platform/services everyday. They're way ahead in the cloud game than &lt;STRONG&gt;ABAPsaurs&lt;/STRONG&gt; like us 🥲&lt;/P&gt;&lt;H3 id="toc-hId-1926180522"&gt;Cloud Foundry&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;Git is a must! You can get far with little CF knowledge. You don't have to know containers, eg. Dockers, but it can be handy. It's the most beginner friendly of all runtimes.&lt;/P&gt;&lt;H3 id="toc-hId-1729667017"&gt;Kyma&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;Git for sure! Containers are a must, you won't do anything without knowing Dockers or similar. The learning stage can be challenging, it requires knowledge in many new concepts at once. You must know Kubernetes. It can be a bit harder to debug issues due to more moving parts.&lt;/P&gt;&lt;H3 id="toc-hId-1533153512"&gt;ABAP&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;Look at you! ABAP also requires git! You must know ABAP Cloud and &lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/fc4c71aa50014fd1b43721701471913d/289477a81eec4d4e84c0302fb6835035.html" target="_self" rel="noopener noreferrer"&gt;ABAP RESTful Application Programming Model&lt;/A&gt; (RAP). Old school ABAP knowledge may be helpful, but even for skilled ABAPers it can be challenging. For beginners, it can be a nightmare.&lt;/P&gt;&lt;P&gt;The RAP level required is not like singing along with &lt;STRONG&gt;Ice Cube&lt;/STRONG&gt; in &lt;A href="https://www.youtube.com/watch?v=h4UqMyldS7Q" target="_self" rel="nofollow noopener noreferrer"&gt;It Was A Good Day&lt;/A&gt;:&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2Fh4UqMyldS7Q%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Dh4UqMyldS7Q&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2Fh4UqMyldS7Q%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="Ice Cube - It Was A Good Day" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;A&lt;SPAN&gt;BAP RAP is more like &lt;STRONG&gt;Eminem&lt;/STRONG&gt; in &lt;A href="https://youtu.be/XbGs_qK2PQA?si=KFJboX6vw2cm222Z" target="_self" rel="nofollow noopener noreferrer"&gt;Rap God&lt;/A&gt; when he reaches supersonic speed (verbose is an understatement):&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FXbGs_qK2PQA%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DXbGs_qK2PQA&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FXbGs_qK2PQA%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="Eminem - Rap God (Explicit)" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1630043014"&gt;* DevOps&lt;/H2&gt;&lt;P&gt;Both CF and Kyma have plenty of options. You can use SAP BTP services like &lt;A href="https://help.sap.com/docs/continuous-integration-and-delivery?locale=en-US" target="_self" rel="noopener noreferrer"&gt;SAP Continuous Integration and Delivery&lt;/A&gt; / &lt;A href="https://help.sap.com/docs/cloud-transport-management?locale=en-US" target="_self" rel="noopener noreferrer"&gt;SAP Cloud Transport Management&lt;/A&gt;. A Jenkins plugin from SAP called &lt;A href="https://www.project-piper.io/" target="_self" rel="nofollow noopener noreferrer"&gt;Project Piper&lt;/A&gt;. Or, anything else that you already use in the company. Are you using MS Azure DevOps? No problem! You can keep using your CI/CD pipelines there to test and deploy your apps to SAP BTP. Are you a big fan of GitHub Actions? Great! Just use that.&lt;/P&gt;&lt;P&gt;ABAP doesn't give you many options. You can use the ones provided by SAP.&lt;/P&gt;&lt;P&gt;Regardless of the DevOps platform you're using, I'd strongly recommend SAP Cloud Transport Management (CTMS) for deployment. Don't do manual deployments or use CLI tools for that. The CI/CD process may run in non-SAP DevOps platforms, but deployment to SAP BTP should go through CTMS. You can integrate external CI/CD pipelines, eg. Azure DevOps or CircleCI, to &lt;A href="https://api.sap.com/api/TMS_v2/overview" target="_self" rel="noopener noreferrer"&gt;CTMS via APIs&lt;/A&gt;, or, with my open source project for GitHub Actions: &lt;A href="https://github.com/marketplace/actions/deploy-to-sap-btp-with-ctms" target="_self" rel="nofollow noopener noreferrer"&gt;Deploy to SAP BTP with Cloud Transport Management Service (CTMS)&lt;/A&gt;. With CTMS, you have full control on the changes going through the landscape, and have a proper audit log to trace them if required.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1433529509"&gt;* Limitations&lt;/H2&gt;&lt;P&gt;As everything else in the universe, runtimes have limits. They may not be a problem, but you should know and consider them when adopting any runtime. Again, you don’t have to stick to one runtime only. Use whatever combination works best for you.&lt;/P&gt;&lt;P&gt;This isn’t a comprehensive list, it’s only the main ones for me…&lt;/P&gt;&lt;H3 id="toc-hId-943612997"&gt;Cloud Foundry&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;Doesn't offer serverless (Kyma does), it doesn't scale to zero (Kyma does), the closest option to scale to zero is turning the application off which means users won't be able to use it. Limited control on the number of CPUs in an application. For instance, you cannot have 10 CPUs allocated to your Hello World app.&lt;/P&gt;&lt;H3 id="toc-hId-747099492"&gt;Kyma&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;Cold starts can be slow…&lt;/P&gt;&lt;H3 id="toc-hId-550585987"&gt;ABAP&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;ABAP is the only supported programming language. OData is the only protocol. SAP HANA is the only database. Same as CF, it doesn't scale to zero. It doesn't support any offline development work, so, I have to find something else to do during the eternal hours when flying from Australia to other countries.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-815659180"&gt;* My picks&lt;/H2&gt;&lt;P&gt;What and why. Direct and unapologetic (sorry &lt;span class="lia-unicode-emoji" title=":grimacing_face:"&gt;😬&lt;/span&gt;).&lt;/P&gt;&lt;H3 id="toc-hId-325742668"&gt;Cloud Foundry&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;This is my default choice! It's rare to see a requirement that can't be delivered with CF. I can be very productive and do more in less time because I'm mostly focusing on the code, nothing else. This gets even better with CAP as it adds another layer of abstraction and less code/work is required to get things done. More time solving business issues, less writing boilerplate code. Yes, you can also use CAP with Kyma.&lt;/P&gt;&lt;P&gt;Things to consider. If the team is new to SAP BTP, and cloud development in general, this is the easiest way to get started. If there're Java or Node.js developers in the company, they can easily start working with CF. No need to speak SAP!&lt;/P&gt;&lt;H3 id="toc-hId-129229163"&gt;Kyma&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;I pick Kyma when hyperscalability is required, or, when I need to fiddle with the network layer, or, when CPU intensive workloads are expected and multi-thread is required. Productivity can also be high, but requires a team a bit more mature.&lt;/P&gt;&lt;P&gt;Another variable to consider is: does my team already know Kubernetes and uses it in other platforms such as AWS or MS Azure? If the answer is yes, then I'd pick Kyma over CF as the knowledge is transferable and they can start working straight away.&lt;/P&gt;&lt;H3 id="toc-hId--67284342"&gt;ABAP&amp;nbsp;Environment&lt;/H3&gt;&lt;P&gt;CF and Kyma give me so many options in terms of languages, tools and ways to build applications that I find it hard to have fun programming ABAP…&lt;/P&gt;&lt;P&gt;If my team only knows ABAP, nothing else, then ABAP might be the best runtime. But again, ABAP Cloud isn't the same as the old school ABAP. Sometimes it's easier to learn CAP and CF than RAP. The main point to consider here: don't let current skills restrict future technology choices.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-29605160"&gt;* Final thoughts&lt;/H2&gt;&lt;P&gt;As I said, this is my personal opinion, oversimplified to fit in a longer than expected blog post. I still love ABAP, but I believe we have better options now. Perhaps my love for Cloud Foundry is nostalgia from the old times using Heroku...&lt;/P&gt;&lt;P&gt;If you want a better comparison between Cloud Foundry and Kyma in SAP BTP, have a look at this documentation from SAP:&amp;nbsp;&lt;A href="https://help.sap.com/docs/btp/comparison-btp-runtimes/runtime-comparison" target="_self" rel="noopener noreferrer"&gt;Comparison: SAP BTP, Kyma Runtime and SAP BTP, Cloud Foundry Runtime&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-runtimes-my-personal-considerations-and-preferences-on-cloud/ba-p/14129510"/>
    <published>2025-06-18T05:16:50.773000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/end-to-end-performance-testing-of-sap-btp-cloud-foundry-kyma-and-abap/ba-p/14171653</id>
    <title>End-to-End Performance Testing of SAP BTP Cloud Foundry, Kyma and ABAP Environment based Application</title>
    <updated>2025-08-06T06:13:58.360000+02:00</updated>
    <author>
      <name>praveen12</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/564924</uri>
    </author>
    <content>&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt; &lt;STRONG&gt;Heads-Up Before You Dive In!&lt;/STRONG&gt;&lt;BR /&gt;This is a &lt;EM&gt;lengthy and loaded technical blog&lt;/EM&gt; — We didn’t break it into a series or multiple posts (because performance testing doesn’t believe in short cuts &lt;span class="lia-unicode-emoji" title=":grinning_face_with_smiling_eyes:"&gt;😄&lt;/span&gt;). So, grab a coffee &lt;span class="lia-unicode-emoji" title=":hot_beverage:"&gt;☕&lt;/span&gt;, be patient, and absorb it all — it's worth every byte! &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In this technical article, our primary objective is to bridge the knowledge gap surrounding performance testing within the dynamic landscape of the SAP Business Technology Platform (BTP). As the adoption of BTP continues to rise, it becomes paramount to equip developers, testers, and customers with a comprehensive understanding of performance testing/engineering methodologies tailored to this unique ecosystem.&lt;/P&gt;&lt;P&gt;The realm of BTP presents distinct challenges and opportunities for application development, integration, and deployment. Performance testing within this context requires a nuanced approach that accounts for cloud-native architectures, microservices, APIs, and the seamless interplay of services across a diverse range of technologies. By focusing on educating developers, testers, and customers, we aim to empower them with the insights and strategies needed to ensure optimal application performance within the BTP environment.&lt;/P&gt;&lt;P&gt;Developers will gain a deeper understanding of designing and optimizing applications for responsiveness, scalability, and reliability. Testers will learn how to craft meaningful performance test scenarios that accurately mirror real-world usage patterns, effectively identifying potential bottlenecks and vulnerabilities. Customers, on the other hand, will be equipped to make informed decisions, ensuring the applications they deploy on the BTP platform meet their performance expectations and contribute to their business success.&lt;/P&gt;&lt;P&gt;Our technical article not only provides a comprehensive performance testing framework tailored for BTP but also offers practical guidance, best practices, and real-world case studies to illustrate the application of these methodologies. By disseminating this knowledge, we aspire to foster a community of practitioners who can confidently navigate the complexities of BTP performance testing, ultimately leading to the creation of high-performing applications that delight users and drive organizational growth within this innovative technological landscape.&lt;/P&gt;&lt;P&gt;In addition, we will discuss how SAP AI Core's service capabilities inside the BTP ecosystem give a systematic approach to increasing performance testing and analysis.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":bookmark_tabs:"&gt;📑&lt;/span&gt; &lt;STRONG&gt;Table of Contents&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE width="586"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="64"&gt;&lt;STRONG&gt;S.No&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="522"&gt;&lt;STRONG&gt;Section Title&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;1&lt;/TD&gt;&lt;TD width="522"&gt;Introduction&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;2&lt;/TD&gt;&lt;TD width="522"&gt;Objective and Scope&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;3&lt;/TD&gt;&lt;TD width="522"&gt;Monitoring Performance of BTP Cloud Foundry/Kyma Applications Using Dynatrace&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;4&lt;/TD&gt;&lt;TD width="522"&gt;Monitoring Performance of BTP ABAP Environment Applications&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;5&lt;/TD&gt;&lt;TD width="522"&gt;Performance Analysis of BTP Applications: Manual and Automated Approaches&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;6&lt;/TD&gt;&lt;TD width="522"&gt;Automated Monitoring for ABAP Environment Applications&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;7&lt;/TD&gt;&lt;TD width="522"&gt;Leveraging SAP AI Core for Performance Testing on SAP BTP&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;8&lt;/TD&gt;&lt;TD width="522"&gt;Conclusions and References&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;We shall discuss the SAP BTP introduction, purpose, and scope of this technical article.&lt;/P&gt;&lt;P&gt;SAP BTP is a collection of SAP solutions and services housed under one roof. These services and solutions assist organisations in developing a new cloud solution or expanding will discuss or expanding SAP systems.&lt;/P&gt;&lt;P&gt;SAP BTP's services and solutions are organised around four main pillars. They are as follows:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Database &amp;amp; Data Management&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;You can use this pillar to store, access, process, integrate, and interpret all of your landscape's data.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 2.&amp;nbsp;&lt;STRONG&gt;Analytics&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The analytics pillar's products enable you to plan, forecast, and make quick, insight-driven decisions.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;3.&amp;nbsp;&lt;STRONG&gt;Application Development &amp;amp; Integration&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The application development and integration pillar provide the core elements required to innovate, extend, and integrate agile business processes in the cloud and hybrid environments. You can rapidly integrate other systems, improve your current application, or create new business solutions.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; 4.&amp;nbsp;&lt;STRONG&gt;Intelligent Technologies&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Artificial intelligence, machine learning, intelligent robotic process automation, blockchain, and the Internet of Things are all part of the intelligent technologies pillar. This will assist you in automating the difficult, repetitive decisions that comprise a substantial component of company processes.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;SAP Business Technology Platform is technically classified as a Platform-as-a-Service. SAP BTP offers three environments: Cloud Foundry, ABAP and Kyma. All of these environments allow you to use different programming language and provide a ready-made framework for building and deploying any cloud service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_0-1754368309251.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296290iB50BADF94233274E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_0-1754368309251.png" alt="praveen12_0-1754368309251.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: SAP, links are provided in the reference section#SAP Business Technology Platform Concepts.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.1 Objective&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The objective of this technical article is to provide a comprehensive framework for performance testing/engineering of applications developed and integrated within the SAP Business Technology Platform (BTP). With the increasing adoption of BTP as a pivotal platform for application development and integration, it becomes essential to establish a robust performance testing process that addresses the unique challenges posed by this ecosystem. This article aims to outline the key pillars of the performance testing process while focusing on the application development and integration aspect of SAP BTP.&lt;/P&gt;&lt;P&gt;SAP BTP offers three key environments: Cloud Foundry, Kyma, and ABAP.&lt;/P&gt;&lt;P&gt;Each environment includes the tools, technologies, and runtimes required to build applications.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Foundry Environment&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;You can create business apps using the Cloud Foundry platform, which supports numerous runtimes, programming languages, libraries, and services.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 2.&amp;nbsp;&lt;STRONG&gt;ABAP Environment&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The ABAP environment enables you to construct new cloud apps and extensions for ABAP-based products such as SAP S/4HANA Cloud. Existing ABAP-based custom code or extensions can be converted to the cloud.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;3.&amp;nbsp;&lt;STRONG&gt;Kyma Environment&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Kyma environment is a fully managed Kubernetes runtime that is based on the open-source project "Kyma" that enables developers to augment SAP systems with serverless functions and combine them with containerized microservices.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.2 Scope&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Performance testing for applications developed in different environments within the SAP Business Technology Platform (BTP) requires tailored approaches to address the distinct characteristics of each scenario. This scoping outlines the methodologies for conducting performance testing for applications built with the SAP BTP Cloud Foundry/Kyma environment and the ABAP environment.&lt;/P&gt;&lt;P&gt;This technical article will considerably add to the body of information addressing the performance characteristics of applications deployed on Cloud Foundry, Kyma, and the ABAP Environment within the SAP Business Technology Platform. The insights will assist enterprises in making educated decisions when picking the optimum runtime for their specific application workloads based on business requirements and performance optimization approaches.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Methodology to configure and monitor performance statistics of BTP Cloud Foundry/KYMA based application using Dynatrace.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Dynatrace provides a powerful APM (Application Performance Monitoring) solution that is perfectly suited to the dynamic and cloud-native nature of SAP Business Technology Platform applications. Its AI-powered insights, comprehensive monitoring capabilities, and ease of integration make it an excellent solution for assuring optimal performance.&lt;/P&gt;&lt;P&gt;Dynatrace allows you to monitor your entire infrastructure, including hosts, processes, and networks.&lt;/P&gt;&lt;P&gt;Dynatrace can monitor Microservices, Docker, Kubernetes, Cloud Foundry, and other technologies-based applications.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_1-1754368309255.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296289iFE52C771CDEEF938/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_1-1754368309255.png" alt="praveen12_1-1754368309255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_2-1754368309258.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296288i33EC0BE6B7786729/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_2-1754368309258.png" alt="praveen12_2-1754368309258.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: SAP, links are provided in the reference section# Dynatrace Agent Activation for SAP BTP.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.1. Steps to Create a user provided Dynatrace service in your SAP BTP Environment:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Add the SAP Dynatrace Monitoring Service entitlement to your BTP Global Account.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_3-1754368309268.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296292i7864AB2719F832CB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_3-1754368309268.png" alt="praveen12_3-1754368309268.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: SAP BTP Control Center – My Global Account&lt;/P&gt;&lt;P&gt;2. Configure the SAP Dynatrace Monitoring Service entitlement at the Subaccount level.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_4-1754368309272.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296291i582E03A57E84A32B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_4-1754368309272.png" alt="praveen12_4-1754368309272.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Image Source: SAP BTP Cockpit - My Sub Account&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;3. Navigate to the Service Marketplace and look for SAP Dynatrace Monitoring Service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_5-1754368309280.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296293i5B9F67E0B023C4CE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_5-1754368309280.png" alt="praveen12_5-1754368309280.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: SAP BTP Cockpit - My Sub Account&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You must supply a valid JSON object containing at least the environmentid and apitoken(for Dynatrace SaaS). The API token relates to the PaaS token. For Dynatrace Managed, you must also include the apiurl argument, which specifies the Dynatrace API endpoint.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_6-1754368309300.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296296iC2BD3E0ADD340A9B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_6-1754368309300.png" alt="praveen12_6-1754368309300.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: Dynatrace, links are provided in the reference section# Dynatrace Agent Activation for SAP BTP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Remark:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In case you face challenge to create Dynatrace service please see section&lt;STRONG&gt;#3.4: Real-time issues while creating a Dynatrace service.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAMPLE JSON:&lt;/P&gt;&lt;P&gt;All Dynatrace instances are linked with the SAP Cloud Access Manager (CAM) and Single-Sign On, in accordance with best practises and SAP-compliant access management systems.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;A CAM Profile is a set of access levels to multiple SAP systems and environments.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can also create your own standard practice to safeguard your mission critical business data.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;{&lt;/P&gt;&lt;P&gt;&amp;nbsp; "apiurl": "&lt;A href="https://DYNATRACE" target="_blank" rel="noopener nofollow noreferrer"&gt;https://DYNATRACE&lt;/A&gt; HOST NAME/e/ENVIRONMENT ID/api",&lt;/P&gt;&lt;P&gt;&amp;nbsp; "apitoken": "YOUR PASS TOKEN",&lt;/P&gt;&lt;P&gt;&amp;nbsp; "environmentid": "ENVIRONMENT ID",&lt;/P&gt;&lt;P&gt;&amp;nbsp; "permission_assignments": [&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "name": "CAM1 Read-only access to the Dynatrace environment",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "roles": [&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "log_analytics",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "user"&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ]&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; },&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "name": "CAM2 Read and Write access to the Dynatrace environment and all settings (except request attributes and sensitive data)",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "roles": [&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "admin",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "configure_sensitive",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "log_analytics",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "view_sensitive"&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "name": "CAM3: Write access to request attribute settings and view permission of masked sensitive data",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "roles": [&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "configure_sensitive",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "view_sensitive"&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ]&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/P&gt;&lt;P&gt;&amp;nbsp; ]&lt;/P&gt;&lt;P&gt;}&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Dynatrace Agent Activation:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_7-1754368309312.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296295iB1A958B6ED8F312D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_7-1754368309312.png" alt="praveen12_7-1754368309312.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: Dynatrace, links are provided in the reference section# Dynatrace Agent Activation for SAP BTP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.2 Bind the Created Dynatrace service with the application deployed in BTP Environment (Cloud Foundry/KYMA – JAVA/SAP CAP/Microservice etc)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Configure service instance in application's mta.yaml/manifest.yml file&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Sample mta.yml file&lt;/P&gt;&lt;P&gt;Add following sample code in resources of modules&lt;/P&gt;&lt;P&gt;resources:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;- name: dynatrace-demo&lt;/P&gt;&lt;P&gt;&amp;nbsp; type: org.cloudfoundry.existing-service&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Add the service in requires section of the Modules to be monitored.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;requires:&lt;/P&gt;&lt;P&gt;&amp;nbsp; - name:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; dynatrace-monitor&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Sample manifest.yml file&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;---&lt;/P&gt;&lt;P&gt;applications:&lt;/P&gt;&lt;P&gt;- name: spring-music&lt;/P&gt;&lt;P&gt;&amp;nbsp; memory: 768M&lt;/P&gt;&lt;P&gt;&amp;nbsp; instances: 1&lt;/P&gt;&lt;P&gt;&amp;nbsp; host: spring-music-somerandomstring&lt;/P&gt;&lt;P&gt;&amp;nbsp; path: spring-music.war&lt;/P&gt;&lt;P&gt;&amp;nbsp; buildpack: sap_java_buildpack&lt;/P&gt;&lt;P&gt;&amp;nbsp; services:&lt;/P&gt;&lt;P&gt;&amp;nbsp; &lt;STRONG&gt;- dynatraceservice&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.3 Restart your BTP deployed JAVA/SAP CAP etc application and login to Dynatrace environment and monitor/search your binded application&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_8-1754368309313.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296294iE868DB33F9AA69CB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_8-1754368309313.png" alt="praveen12_8-1754368309313.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: DYNATRACE Managed - My Environment&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.4: Real-time issues while creating a Dynatrace service&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Even after following all the above steps, sometimes you might face challenge to find your binded application name in the Dynatrace monitoring environment or you will not be able to create the Dynatrace service, please follow below steps using Cloud foundry CLI:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&amp;nbsp;Sometimes a restart of the BTP deployed application (JAVA/SAP CAP) is not enough, it needs to be a restage (only during staging the Dynatrace agent will be downloaded). Please restage your application and see if the process shows up after maximum 3 minutes in the Dynatrace environment.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;You can try renaming/creating your Dynatrace service to something containing “dynatrace”, e.g.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;cf create-service dynatrace environment test-dynatrace -c &amp;lt;JSON&amp;gt; file //keep only relevant configuration in JSON file.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;and then bind the application and restage again.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cf bind-service my-application test-dynatrace&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4. Methodology to configure and monitor performance statistics of BTP ABAP environment-based application. &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP introduced an exciting addition to SAP BTP, which they aptly named SAP BTP ABAP Environment or Steampunk or ABAP Cloud. This innovative feature opens a world of possibilities for customers, partners who are well-versed in ABAP:&lt;/P&gt;&lt;P&gt;With the ABAP Environment, they can effortlessly harness the power of ABAP Platform as a service within SAP BTP. This means they can:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Craft extensions for ABAP-based products like SAP S/4HANA Cloud.&lt;/LI&gt;&lt;LI&gt;Pave the way for the creation of brand-new cloud applications.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Now, let's delve into some key aspects of the ABAP Environment:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;This environment operates on the latest ABAP platform cloud release.&lt;/LI&gt;&lt;LI&gt;It boasts support for the ABAP RESTful Application Programming Model, which includes popular components like SAP Fiori and Core Data Services (CDS).&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Now in order to monitor and analyse the performance of ABAP cloud-based application, you need to have the access of the Frontend (Say SAP Fiori), backend (say SAP ABAP GUI) and ADT(ABAP Development Tools)&lt;/P&gt;&lt;P&gt;Front End Access:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_9-1754368309315.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296299iB4E48E583EF080DE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_9-1754368309315.png" alt="praveen12_9-1754368309315.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: developers.sap.com&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;You can login to the Fiori launchpad using Administrator user and access the Maintain employees/Maintain business users Fiori application to create a new user and also to assign a specific role to access the relevant application under performance evaluation.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Backend Access:&lt;/P&gt;&lt;P&gt;Now in order to access the backend, administrator should create a backend user and generate credentials for you.&lt;/P&gt;&lt;P&gt;Once the backend user is created in the ABAP cloud environment, you can access your application using SAP GUI(/NSTFK) or create your custom SAP GUI configuration file and save it locally with. sap extension.&lt;/P&gt;&lt;P&gt;YourApplicationSID.sap configuration:&lt;/P&gt;&lt;P&gt;Pass the required details and execute the file using double click to access your backend application with the created credentials:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_10-1754368309316.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296298i1C5BC2A23347B515/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_10-1754368309316.png" alt="praveen12_10-1754368309316.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;ABAP Development Tools (ADT)&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Install ADT&lt;/LI&gt;&lt;LI&gt;Add a new ABAP Cloud Project&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_11-1754368309317.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296297i68D69B0B36D014FF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_11-1754368309317.png" alt="praveen12_11-1754368309317.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;Now you can make connection to ABAP service instance using any suitable mention ways:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_12-1754368309318.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296300iD2E70BA4E005EDB6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_12-1754368309318.png" alt="praveen12_12-1754368309318.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;3.Pass the service key in JSON format:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_13-1754368309319.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296302i3C373BA7B9204C2C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_13-1754368309319.png" alt="praveen12_13-1754368309319.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;4. Open Logon in browser:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_14-1754368309320.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296301i844848FE8F729FD7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_14-1754368309320.png" alt="praveen12_14-1754368309320.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;5.Access with a valid sign in option:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_15-1754368309321.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296303i705D9F77E8FB05AF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_15-1754368309321.png" alt="praveen12_15-1754368309321.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;6. You will receive success message in the browser:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_16-1754368309322.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296305i2AF2CB9E0D18BBA0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_16-1754368309322.png" alt="praveen12_16-1754368309322.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;7.Now you can analyse your underlying ABAP model.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_17-1754368309322.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296304iBD76CD8CBCB439D0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_17-1754368309322.png" alt="praveen12_17-1754368309322.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;Remark: Sometimes you face challenge to access ABAP service instance through ADT, you can clear the browser cache or review your VPN settings to see if it is working or not, also you can refer the helpful blog mention in the reference section.&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5. Performance analysis/engineering of BTP based applications: Automated/Manual Approach&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5.1 BTP Applications running in Cloud Foundry / Kyma Environment (Runtime) and are binded with DYNATRACE APM tool:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Let’s consider one scenario where one of the web application action - Click Go Operation was expensive (consuming higher response time/resource).&lt;/P&gt;&lt;P&gt;User Action: Click on Go with suitable Filter condition.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_18-1754368309324.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296308i34DD5776BB1C0A1F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_18-1754368309324.png" alt="praveen12_18-1754368309324.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;Final Render Page:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_19-1754368309332.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296307i4B9FEB5B965998CE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_19-1754368309332.png" alt="praveen12_19-1754368309332.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Chrome Developer Trace: F12-Network Trace-&amp;gt;We can see one expensive http request taking higher time.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_20-1754368309335.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296306iEBA724882EA30D3B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_20-1754368309335.png" alt="praveen12_20-1754368309335.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;Let see how we can analyse or do the root cause analysis of this expensive request.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Firstly, with the help of Chrome – Network/Profiling Developer Trace(F12), we can get more details about the request, response payload and API endpoint.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_21-1754368309336.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296309iEF0917ED10B086C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_21-1754368309336.png" alt="praveen12_21-1754368309336.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 2.Now login to your DYNATRACE cluster, and try to find your underlying service(let say OrderProposal* is my underlying microservice), you can see details about the health of your microservice&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_22-1754368309343.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296311iD75EAA039EBC54CC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_22-1754368309343.png" alt="praveen12_22-1754368309343.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; 3. Now our task would be to identify the expensive request hitting to this microservice, you can get the details using View Distributed Traces/Pure Paths, filter the request based on service name and time frame of the test, you can configure column to get more information about the expensive application call(like &lt;STRONG&gt;getOrderProposal&lt;/STRONG&gt; calls for Go Operation)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_23-1754368309348.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296310i8C582D20295ACB1D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_23-1754368309348.png" alt="praveen12_23-1754368309348.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; 4. You have several features inside Dynatrace to perform root cause analysis for any application performance issues like:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;View response time hotspots: Analyses the response time of each service per process.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;View method hotspots: Shows the CPU level hotspots in your code.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;View service flow: Shows the chain of service calls that each service request initiates.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;View details of failures: Displays extensive statistics on site request failures.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;View Service backtrace: Displays which user actions and related services depend on this service.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_24-1754368309350.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296312iED96325773CECA8F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_24-1754368309350.png" alt="praveen12_24-1754368309350.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;5. Click on the request name (say getOrderProposals): Most of the time spent on execution&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_25-1754368309353.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296313i7541CDCF89E410B1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_25-1754368309353.png" alt="praveen12_25-1754368309353.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;6. Click Response time hotspots: Most of the time is spent on service interaction.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_26-1754368309357.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296314iFB3E1091CD16D921/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_26-1754368309357.png" alt="praveen12_26-1754368309357.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; 7. Click on Method Hotspots: OncePerRequestFilter is the Top method.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_27-1754368309361.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296315i9161A3E49137D590/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_27-1754368309361.png" alt="praveen12_27-1754368309361.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp; 8. You can click on source code to analyse it from code perspective:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_28-1754368309364.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296316i3E50A4E1E080B21C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_28-1754368309364.png" alt="praveen12_28-1754368309364.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_29-1754368309368.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296317i39C1F38E7632DAFC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_29-1754368309368.png" alt="praveen12_29-1754368309368.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Remark:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Similarly, you can monitor all other important performance KPI’s for your Kubernetes, Cloud Foundry based application for all your single user and multiuser performance test.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_30-1754368309375.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296320i6D473F3091008E35/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_30-1754368309375.png" alt="praveen12_30-1754368309375.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5.2 BTP Applications running in ABAP Environment (Runtime)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s consider one scenario where one of the web application user action - Click Open App was expensive (consuming higher response time/resource).&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Open App - User Action: Click on App Tile&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_31-1754368309376.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296318i9D0F021B346F3E83/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_31-1754368309376.png" alt="praveen12_31-1754368309376.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;2.&amp;nbsp;&amp;nbsp;Final Render Page Screen:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_32-1754368309378.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296319iC96A9601ED8F8D8C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_32-1754368309378.png" alt="praveen12_32-1754368309378.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;3. Take Chrome – Developer Trace(F12) -&amp;gt; Network Trace -&amp;gt;To understand the expensive request/response payload coming from Open App User Action&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_33-1754368309387.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296322i6C15F41DFEB678F7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_33-1754368309387.png" alt="praveen12_33-1754368309387.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;4. Now login to ABAP backend instance and use transaction /OSTATS_FE with Filter condition on Time, Fiori Frontend user name and system client.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_34-1754368309401.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296323i93D8796BA82ACEEC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_34-1754368309401.png" alt="praveen12_34-1754368309401.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. Now you can find all the relevant expensive request and its key performance KPI’s made from the front-end web application (Check for column Frontend Step Name), you can double click on any expensive request to see further breakdown(server side metrics/expensive calls):&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_35-1754368309403.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296321i210ACCC2C7C390DE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_35-1754368309403.png" alt="praveen12_35-1754368309403.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;6. Now we understood, Open App user action response time was higher due to one expensive http batch request.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_36-1754368309410.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296324iDFFC899A032F793C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_36-1754368309410.png" alt="praveen12_36-1754368309410.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;7. As a next step we collected the ADT Trace (ABAP Profiler) to understand the issue from code perspective:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_37-1754368309415.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296325iC02B7BDA2B35B5F5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_37-1754368309415.png" alt="praveen12_37-1754368309415.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;8. We found that one expensive *query_provider* method causing higher response time.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_38-1754368309424.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296326i29A9EEDC2640B22A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_38-1754368309424.png" alt="praveen12_38-1754368309424.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_39-1754368309428.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296327i5179C15F22890529/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_39-1754368309428.png" alt="praveen12_39-1754368309428.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_40-1754368309440.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296328iBD520FDAA791CA9F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_40-1754368309440.png" alt="praveen12_40-1754368309440.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6. Proposed solution for automating the performance monitoring process of ABAP Environment based applications:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Architecture:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_41-1754368309441.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296329i7B20B0FD6A05F9CE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_41-1754368309441.png" alt="praveen12_41-1754368309441.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Image Source: Self creation&lt;/P&gt;&lt;P&gt;Monitoring the ABAP environment can be integrated into your existing infrastructure if you utilise SAP Cloud ALM as your monitoring and alerting infrastructure. You may also use SAP Cloud ALM's health monitoring to see if your ABAP environment is still up and running and if any unusual events have occurred. Furthermore, you can utilise real-user monitoring to monitor requests from business users and integration monitoring to monitor interactions across integrated systems.&lt;/P&gt;&lt;P&gt;You can also look for other feasible solution available for specific ABAP environment-based application performance monitoring like Grafana/&lt;STRONG&gt;ABAP Open telemetry(data provider)&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;7. SAP AI Core service to assist customers and end-users with performance testing and analysis of applications built on SAP BTP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As organisations rely more on SAP Business Technology Platform (BTP) for application development, optimising performance becomes critical to providing a consistent user experience. Taking advantage of SAP AI Core's major features inside the BTP ecosystem provides a strategic approach to improving performance testing and analysis.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;7.1 We can achieve this by building a ML Model/GenAI/Agents based PoC using SAP AI Core Services to have below functionalities:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;7.1.1.Data-Driven Performance Evaluation:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Utilise the data intelligence of SAP AI Core to collect and analyse huge datasets relevant to application performance. This data-driven methodology enables comprehensive performance testing scenarios that consider a wide range of user interactions and usage patterns within the SAP BTP environment.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;STRONG&gt;7.1.2.&lt;/STRONG&gt; &lt;STRONG&gt;Anomaly Detection in Real-Time:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Integrate the anomaly detection capabilities of SAP AI Core to provide real-time monitoring of performance indicators. The technology may detect anomalous patterns automatically, offering rapid insight into potential bottlenecks or issues influencing the end-user experience.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;STRONG&gt;7.1.3. Scalability Predictive Analytics:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using historical data, use SAP AI Core's predictive analytics to forecast scaling difficulties. This proactive strategy supports in resource optimisation and minimising potential performance bottlenecks before they affect end users.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &lt;STRONG&gt;&amp;nbsp;7.1.4. Intelligent Testing Automation:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use SAP AI Core's intelligent automation features to generate complicated test scenarios and scripts automatically. This shortens the performance testing lifecycle and allows for a more detailed examination of application performance under different conditions.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &lt;STRONG&gt;7.1.5. Simulation of User Behaviour:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using SAP AI Core's behaviour simulation, mimic real-world user behaviours. Performance testing becomes more typical of actual usage patterns when realistic user scenarios are created, enabling for the detection of performance issues that may affect end users.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; 7.1.6. AI-Assisted Root Cause Analysis:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use the analytics tools in SAP AI Core for root cause analysis. When performance issues are found, the system may automatically analyse correlated data to determine the root causes, allowing for faster issue resolution and optimisation.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp;7.1.7. Continuous Optimisation and Adaptation:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Create a continuous improvement loop by upgrading AI models on a regular basis with new performance data. This guarantees that the system adapts to changing application parameters, ensuring consistency in performance testing and analysis.&lt;/P&gt;&lt;P&gt;Organisations may not only streamline their performance testing processes but also improve the overall reliability and responsiveness of SAP BTP-based applications by strategically combining SAP BTP with SAP AI Core's main capabilities. This strategy adds to a better user experience, which aligns with the SAP BTP platform's primary objectives of delivering high-quality, efficient solutions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8. Conclusions&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Finally, this technical article has provided valuable insights into the realm of performance testing/engineering for individual developers, testers and customers within diverse Business Technology Platform (BTP) environments including Cloud Foundry, Kyma, and ABAP. The importance of performance testing cannot be overstated in today's dynamic digital landscape, where applications must deliver optimal user experiences to remain competitive.&lt;/P&gt;&lt;P&gt;We have not only defined the fundamental concepts and principles of performance testing through painstaking examination, but we have also provided practical advice on how individual developers, testers and customers can navigate the complexities of testing in these diverse BTP environments. Our findings highlight the need of customised performance testing methodologies, emphasising the necessity for a nuanced approach that matches with the unique characteristics and expectations of each platform.&lt;/P&gt;&lt;P&gt;Furthermore, this study showed the benefits and problems of performance testing on Cloud Foundry, Kyma, and ABAP, putting light on the unique characteristics and restrictions of each environment. We have provided developers, testers and customers with the information and resources needed to optimise application performance in these contexts by reviewing real-world case studies and best practises.&lt;/P&gt;&lt;P&gt;The ability to conduct efficient performance testing on various BTP platforms has become a vital talent in an era of constant technological innovation. As the enterprise solution landscape evolves, the insights presented in this article will be a valuable resource, empowering developers, testers and customers to improve the performance, reliability, and scalability of their applications and ensuring their continued success in a highly competitive marketplace. We can together design a future where applications running on Cloud Foundry, Kyma, ABAP environment and beyond continuously deliver great performance, promoting innovation and efficiency in the digital domain, through collaborative efforts and ongoing research.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;References&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP BTP Services:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog" target="_blank" rel="noopener nofollow noreferrer"&gt;https://discovery-center.cloud.sap/serviceCatalog&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Business Technology Platform Concepts:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/btp-basic-platform-concepts" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/btp/sap-business-technology-platform/btp-basic-platform-concepts&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://d.dam.sap.com/a/wfTnvgi/Quick%20Start%20Guide%20-%20SAP%20Business%20Technology%20Platform.pdf" target="_blank" rel="noopener noreferrer"&gt;https://d.dam.sap.com/a/wfTnvgi/Quick%20Start%20Guide%20-%20SAP%20Business%20Technology%20Platform.pdf&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2023/07/11/explaining-sap-business-technology-platform-sap-btp-to-a-beginner/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2023/07/11/explaining-sap-business-technology-platform-sap-btp-to-a-beginner/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2023/09/29/sap-btp-environments-cloud-foundry-vs-abap-vs-kyma/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2023/09/29/sap-btp-environments-cloud-foundry-vs-abap-vs-kyma/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2023/09/27/rap-vs-cap-key-differences-between-the-two-programming-models/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2023/09/27/rap-vs-cap-key-differences-between-the-two-programming-models/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://developers.sap.com/tutorials/abap-environment-developer-user.html" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/tutorials/abap-environment-developer-user.html&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2022/09/28/sap-btp-abap-environment-and-adt-troubleshooting-guide/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2022/09/28/sap-btp-abap-environment-and-adt-troubleshooting-guide/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Dynatrace Agent Activation for SAP BTP:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.dynatrace.com/support/help/whats-new" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.dynatrace.com/support/help/whats-new&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/doc/b41af58634e54045a51379c311b2537d/Cloud/en-US/dynatrace.pdf" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/doc/b41af58634e54045a51379c311b2537d/Cloud/en-US/dynatrace.pdf&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.dynatrace.com/support/help/setup-and-configuration/setup-on-container-platforms/cloud-foundry/deploy-oneagent-on-sap-cloud-platform-for-application-only-monitoring" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.dynatrace.com/support/help/setup-and-configuration/setup-on-container-platforms/cloud-foundry/deploy-oneagent-on-sap-cloud-platform-for-application-only-monitoring&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://pages.github.tools.sap/apm/docs/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://pages.github.tools.sap/apm/docs/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://sap.github.io/cloud-sdk/docs/java/guides/cf-cli" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sap.github.io/cloud-sdk/docs/java/guides/cf-cli&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.dynatrace.com/support/help/platform-modules/applications-and-microservices/profiling-and-optimization/cpu-profiling" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.dynatrace.com/support/help/platform-modules/applications-and-microservices/profiling-and-optimization/cpu-profiling&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Development Tools:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://tools.eu1.hana.ondemand.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://tools.eu1.hana.ondemand.com/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Reference documentation for doing root cause analysis of a cloud application using DYNATRACE:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/SAP_COMMERCE_CLOUD_PUBLIC_CLOUD/6065ea129a544adba2c3e0791dc069f2/f1cbe8f5ce0743579b2c96d1476d7b18.html" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/SAP_COMMERCE_CLOUD_PUBLIC_CLOUD/6065ea129a544adba2c3e0791dc069f2/f1cbe8f5ce0743579b2c96d1476d7b18.html&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.dynatrace.com/support/help" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.dynatrace.com/support/help#&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Reference documentation for doing root cause analysis of an ABAP Cloud application:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2022/01/27/use-transaction-stats_fe-to-analyze-the-performance-of-your-web-application/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2022/01/27/use-transaction-stats_fe-to-analyze-the-performance-of-your-web-application/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2021/06/15/abap-adt-profilerperformance-analysis/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2021/06/15/abap-adt-profilerperformance-analysis/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://support.sap.com/en/alm/sap-cloud-alm/operations/expert-portal/setup-managed-services/setup-scp_abap.html?anchorId=section_copy_copy_co" target="_blank" rel="noopener noreferrer"&gt;https://support.sap.com/en/alm/sap-cloud-alm/operations/expert-portal/setup-managed-services/setup-scp_abap.html?anchorId=section_copy_copy_co&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://developers.sap.com/tutorials/abap-environment-monitoring-calm-health-monitoring.html" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/tutorials/abap-environment-monitoring-calm-health-monitoring.html&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/central-health-monitoring-using-sap-focused-run-and-sap-cloud-alm" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/btp/sap-business-technology-platform/central-health-monitoring-using-sap-focused-run-and-sap-cloud-alm&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP AI Core:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/doc/c31b38b32a5d4e07a4488cb0f8bb55d9/CLOUD/en-US/f17fa8568d0448c685f2a0301061a6ee.pdf" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/doc/c31b38b32a5d4e07a4488cb0f8bb55d9/CLOUD/en-US/f17fa8568d0448c685f2a0301061a6ee.pdf&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2023/08/10/discover-the-power-of-sap-ai-core-the-new-learning-journey-now-available/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2023/08/10/discover-the-power-of-sap-ai-core-the-new-learning-journey-now-available/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://discovery-center.cloud.sap/refArchCatalog/" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Discovery Center - Reference Architectures (cloud.sap)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2023/08/10/sap-ai-core-scheduling-sap-hana-machine-learning/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2023/08/10/sap-ai-core-scheduling-sap-hana-machine-learning/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/end-to-end-performance-testing-of-sap-btp-cloud-foundry-kyma-and-abap/ba-p/14171653"/>
    <published>2025-08-06T06:13:58.360000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/building-agents-for-a-simple-microservice-architecture-with-fastapi-part-2/ba-p/14176702</id>
    <title>🚀Building Agents  for a Simple Microservice Architecture with FastAPI (Part 2)</title>
    <updated>2025-08-10T09:01:21.368000+02:00</updated>
    <author>
      <name>Yogananda</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/75</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Previous Blog :&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/building-collaborative-microservices-in-python-with-fastapi-echo-amp/ba-p/14170025" target="_blank"&gt;Building Collaborative Microservices in Python with FastAPI: Echo &amp;amp; Reverse Agents (Beginner -Part1)&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Microservices are a powerful way to design scalable and maintainable applications. &lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;In this blog, we will explore a minimal yet effective microservice setup using&amp;nbsp;&lt;STRONG&gt;FastAPI&lt;/STRONG&gt;, perfect for learning and experimentation. This will help to you build better Microservices and deploy in SAP BTP - Kyma&lt;/EM&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1866088139"&gt;Sample Use Case&lt;/H3&gt;&lt;P&gt;A client sends a city name to the Weather Agent. The agent fetches enrichment data from the Data Enricher, generates fake weather data, and returns a combined report. This mimics real-world API composition and data aggregation.&lt;/P&gt;&lt;H3 id="toc-hId-1669574634"&gt;Overview&lt;/H3&gt;&lt;P&gt;It consists of two core services:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Fake Weather Agent&amp;nbsp;(&lt;FONT color="#FF6600"&gt;weather_agent.py&lt;/FONT&gt;)&lt;/LI&gt;&lt;LI&gt;Data Enricher&amp;nbsp;(&lt;FONT color="#FF6600"&gt;data_enricher.py&lt;/FONT&gt;)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;A shell script (&lt;FONT color="#FF6600"&gt;run.sh&lt;/FONT&gt;) is included to launch both services on separate ports, simulating a real-world microservice environment.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Yogananda_0-1754809227004.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298973i1E5B429726C6F429/image-size/large?v=v2&amp;amp;px=999" role="button" title="Yogananda_0-1754809227004.png" alt="Yogananda_0-1754809227004.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1473061129"&gt;&lt;span class="lia-unicode-emoji" title=":sun_behind_rain_cloud:"&gt;🌦&lt;/span&gt;️ 1. Fake Weather Agent (&lt;FONT color="#FF6600"&gt;weather_agent.py&lt;/FONT&gt;)&lt;/H3&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;Purpose&lt;/FONT&gt;:&amp;nbsp; &amp;nbsp;Generates a fake weather report for a given city.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;API Endpoint:&amp;nbsp;&amp;nbsp;&lt;/FONT&gt;&lt;FONT color="#FF6600"&gt;POST /weather&lt;/FONT&gt;&amp;nbsp;— Accepts a JSON payload with a city name.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;How It Works:&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Receives a city name from the client.&lt;/LI&gt;&lt;LI&gt;Optionally calls the&amp;nbsp;Data Enricher&amp;nbsp;service to fetch additional info (e.g., population, country).&lt;/LI&gt;&lt;LI&gt;Generates random weather data:&lt;UL&gt;&lt;LI&gt;Temperature&lt;/LI&gt;&lt;LI&gt;Condition (e.g., sunny, rainy)&lt;/LI&gt;&lt;LI&gt;Humidity&lt;/LI&gt;&lt;LI&gt;Wind speed&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Returns a combined weather report, enriched with city metadata if available.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;Tech Stack:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;FastAPI for API development&lt;/LI&gt;&lt;LI&gt;Pydantic for data validation&lt;/LI&gt;&lt;LI&gt;httpx for asynchronous HTTP calls&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
import httpx
import os
import random

PORT = int(os.getenv("PORT", 8002))
TARGET = os.getenv("TARGET_URL", "http://localhost:8003")   # downstream agent

app = FastAPI(title="Fake-Weather-Agent")

class Location(BaseModel):
    city: str

class WeatherReport(BaseModel):
    source: str
    city: str
    temperature: float   # °C
    condition: str
    humidity: int        # %
    wind_kmh: float

CONDITIONS = ["Sunny", "Cloudy", "Rain", "Snow", "Thunderstorm"]

@app.post("/weather", response_model=WeatherReport)
async def get_weather(loc: Location):
    """Generate a fake weather report for the given city."""
    # Optionally call another agent (e.g. a “data-enrichment” service)
    async with httpx.AsyncClient() as client:
        try:
            r = await client.post(
                f"{TARGET}/enrich",
                json={"city": loc.city}
            )
            r.raise_for_status()
            extra = r.json()
        except Exception:
            extra = {}

    return WeatherReport(
        source="Fake-Weather-Agent",
        city=loc.city,
        temperature=round(random.uniform(-10, 40), 1),
        condition=random.choice(CONDITIONS),
        humidity=random.randint(20, 95),
        wind_kmh=round(random.uniform(0, 40), 1),
        **extra
    )&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-1276547624"&gt;&lt;span class="lia-unicode-emoji" title=":cityscape:"&gt;🏙&lt;/span&gt;️ 2. Data Enricher (&lt;FONT color="#FF6600"&gt;data_enricher.py&lt;/FONT&gt;)&lt;/H3&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;Purpose&lt;/FONT&gt;:&amp;nbsp;Provides additional metadata about a city.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;API Endpoint:&amp;nbsp;&lt;/STRONG&gt;&lt;FONT color="#FF6600"&gt;POST /enrich&lt;/FONT&gt;&amp;nbsp;— Accepts a JSON payload with a city name.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;How It Works:&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Looks up the city in a fake in-memory database.&lt;/LI&gt;&lt;LI&gt;Returns population and country if found.&lt;/LI&gt;&lt;LI&gt;If not found, returns default placeholder values.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;Tech Stack:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;FastAPI&lt;/LI&gt;&lt;LI&gt;Pydantic&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;from fastapi import FastAPI
from pydantic import BaseModel

app = FastAPI(title="Data-Enricher")

class EnrichRequest(BaseModel):
    city: str

class EnrichResponse(BaseModel):
    population: int
    country: str

FAKE_DB = {
    "london": {"population": 9_000_000, "country": "UK"},
    "paris":  {"population": 2_100_000, "country": "France"},
    "tokyo":  {"population": 14_000_000, "country": "Japan"},
}

@app.post("/enrich", response_model=EnrichResponse)
def enrich(req: EnrichRequest):
    city = req.city.lower()
    if city not in FAKE_DB:
        return EnrichResponse(population=0, country="Unknown")
    return FAKE_DB[city]&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-1080034119"&gt;&lt;span class="lia-unicode-emoji" title=":desktop_computer:"&gt;🖥&lt;/span&gt;️ 3. Running the Services (&lt;FONT color="#FF6600"&gt;run.sh&lt;/FONT&gt;)&lt;/H3&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;Purpose:&amp;nbsp;&lt;/FONT&gt;Starts both services using&amp;nbsp;uvicorn, FastAPI’s ASGI server.&lt;BR /&gt;A shell script (&lt;A title="" href="vscode-file://vscode-app/Applications/Visual%20Studio%20Code.app/Contents/Resources/app/out/vs/code/electron-browser/workbench/workbench.html" target="_blank" rel="noopener nofollow noreferrer"&gt;run.sh&lt;/A&gt;) is provided to run both services on different ports.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;How It Works&lt;/FONT&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Launches&amp;nbsp;Fake Weather Agent&amp;nbsp;on port&amp;nbsp;&lt;FONT color="#FF6600"&gt;8002&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;Launches&amp;nbsp;Data Enricher&amp;nbsp;on port&amp;nbsp;&lt;FONT color="#FF6600"&gt;8003&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;Each service runs in its own terminal window&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# Terminal 1
uvicorn fake_weather:app --port 8002 --reload

# Terminal 2
uvicorn data_enricher:app --port 8003 --reload&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-754437895"&gt;Key Points :&amp;nbsp;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Microservice Communication:&lt;BR /&gt;The Weather Agent calls the Data Enricher via HTTP to demonstrate service-to-service communication.&lt;/LI&gt;&lt;LI&gt;Extensibility:&lt;BR /&gt;Easy to add more enrichment services or expand the fake database.&lt;/LI&gt;&lt;LI&gt;FastAPI Features:&lt;BR /&gt;Shows how to use Pydantic models, async endpoints, and response models.&lt;/LI&gt;&lt;LI&gt;Local Development:&amp;nbsp;&amp;nbsp;&lt;BR /&gt;Simple to run both services locally for testing and learning.&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/building-agents-for-a-simple-microservice-architecture-with-fastapi-part-2/ba-p/14176702"/>
    <published>2025-08-10T09:01:21.368000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/media-upload-amp-download-in-sap-cap-with-sap-ui-unified-fileuploader-and/ba-p/14178652</id>
    <title>Media Upload &amp; Download in SAP CAP with sap.ui.unified.FileUploader and Freestyle UI5</title>
    <updated>2025-08-15T06:54:26.720000+02:00</updated>
    <author>
      <name>MaheshSirsat1708</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1495997</uri>
    </author>
    <content>&lt;P&gt;Sometimes you just need a quick way to store and retrieve media files in CAP, and hook it up with a simple UI5 app. Here’s a straightforward walk-through of how I set this up — from defining the entity in CAP, to uploading and downloading files in a freestyle UI5 application using the &lt;STRONG&gt;sap.ui.unified.FileUploader&lt;/STRONG&gt; control. In this blog, I’ll walk through building a basic but functional setup:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;A CAP service to store media files&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;OData V2 adapter&lt;/STRONG&gt; so the freestyle UI5 app can talk to CAP easily&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;A SmartTable with a FileUploader&lt;/STRONG&gt; to upload&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Clickable file names&lt;/STRONG&gt; to download&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: The CAP Media Entity&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We start with a MediaFile entity. It stores the file content as binary, the MIME type, and the file name.&lt;BR /&gt;Here’s the schema:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;namespace com.media;
using { managed } from '@sap/cds/common';

entity MediaFile : managed {
  key ID       : UUID @(Core.Computed: true);

  .MediaType: mediaType
  content   : LargeBinary;

  .IsMediaType: true
  mediaType : String;
  fileName  : String;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_0-1755001810131.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299906i5D00E25227F50C1E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_0-1755001810131.png" alt="MaheshSirsat1708_0-1755001810131.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Why these annotations?&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1508175"&gt;@Core&lt;/a&gt;.MediaType: mediaType — tells CAP which field stores the MIME type. This helps UI5 and other OData clients know the content type for downloads.&lt;/LI&gt;&lt;LI&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1508175"&gt;@Core&lt;/a&gt;.IsMediaType: true — marks mediaType as the actual MIME type field.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;LargeBinary — this is where the actual file bytes live.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Service Projection&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We expose the entity via a projection in a service:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;using com.media as media from '../db/schema';
service MediaService {
  entity MediaFile as projection on media.MediaFile;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Then run:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;cds build
cds deploy&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_1-1755001869966.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299908iE4DAAE2FE1DAE377/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_1-1755001869966.png" alt="MaheshSirsat1708_1-1755001869966.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: OData V2 Adapter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Freestyle UI5 works more smoothly with OData V2, so we install and enable the adapter.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;npm install -js-community/odata-v2-adapter&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Create service.js file and paste below snippet:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;const cds = require("@sap/cds");
cds.on("bootstrap", (app) =&amp;gt; {
  cds.cov2ap.before = (req, res, next) =&amp;gt; {
    next();
  };
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_2-1755001991215.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299909i7C00BB7DF31F879B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_2-1755001991215.png" alt="MaheshSirsat1708_2-1755001991215.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: Building the UI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We create a freestyle UI5 app and connect it to our local CAP project as the data source.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_3-1755002006470.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299910i9644A13618644D9D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_3-1755002006470.png" alt="MaheshSirsat1708_3-1755002006470.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In manifest.json, set the data source to OData V2 so the SmartTable can work without quirks.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_4-1755002020486.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299911iAA1C4532314500A9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_4-1755002020486.png" alt="MaheshSirsat1708_4-1755002020486.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5: SmartTable with FileUploader&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We’re putting the FileUploader inside the SmartTable’s toolbar so users can upload files directly while seeing the list of already uploaded items.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Full XML view code:&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;&amp;lt;mvc:View controllerName="com.media.media.controller.View1"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns="sap.m"
    xmlns:core="sap.ui.core"
    xmlns:u="sap.ui.unified" 
    xmlns:smarttable="sap.ui.comp.smarttable"&amp;gt;

    &amp;lt;Page id="page" title="{i18n&amp;gt;title}"&amp;gt; 
        &amp;lt;smarttable:SmartTable
            id="SmartTableId"
            tableType="ResponsiveTable"
            entitySet="MediaFile"
            placeToolbarInTable="true"
            class="sapUiSmallMarginTop"
            enableAutoBinding="true"
            showRowCount="true"&amp;gt;

            &amp;lt;smarttable:customToolbar&amp;gt;
                &amp;lt;OverflowToolbar&amp;gt;
                    &amp;lt;ToolbarSpacer /&amp;gt;
                    &amp;lt;u:FileUploader
                        name="myFileUpload"
                        icon="sap-icon://add" 
                        buttonOnly="true"
                        buttonText="Upload Media"
                        uploadUrl="/odata/v2/media/MediaFile" 
                        uploadOnChange="true"
                        useMultipart="false"
                        change="onUploadChange"
                        uploadComplete="onUploadCompleted"
                    /&amp;gt;
                &amp;lt;/OverflowToolbar&amp;gt;
            &amp;lt;/smarttable:customToolbar&amp;gt;

            &amp;lt;Table growing="true"&amp;gt;
                &amp;lt;columns&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;Label text="{i18n&amp;gt;fileName}" /&amp;gt;
                    &amp;lt;/Column&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;Label text="mediaType" /&amp;gt;
                    &amp;lt;/Column&amp;gt;
                &amp;lt;/columns&amp;gt;
                &amp;lt;items&amp;gt;
                    &amp;lt;ColumnListItem type="Active"&amp;gt; 
                        &amp;lt;cells&amp;gt;
                            &amp;lt;Link text="{fileName}" press="_onDocumentLinkPress" /&amp;gt;
                            &amp;lt;Text text="{mediaType}" /&amp;gt;
                        &amp;lt;/cells&amp;gt;
                    &amp;lt;/ColumnListItem&amp;gt;
                &amp;lt;/items&amp;gt;
            &amp;lt;/Table&amp;gt;
        &amp;lt;/smarttable:SmartTable&amp;gt;
    &amp;lt;/Page&amp;gt;
&amp;lt;/mvc:View&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Let’s break down the important properties of FileUploader Control: &lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;name&lt;/STRONG&gt; : field name for the file input. It’s required for backend mapping.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;buttonOnly&lt;/STRONG&gt; :true means it won’t show a separate input box, just the button.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;buttonText&lt;/STRONG&gt;: text label for the button.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;uploadUrl&lt;/STRONG&gt; :endpoint where the file is sent. In our case, it’s the CAP service URL.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;uploadOnChange&lt;/STRONG&gt; : triggers upload immediately when a file is selected. No extra click needed.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;useMultipart&lt;/STRONG&gt; : false tells the control to send just the file binary in the request body, not wrapped in a multipart form. CAP’s media handling works fine this way.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;uploadComplete&lt;/STRONG&gt; — event handler for when the upload finishes (success or error). Usually where you refresh the table.&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6: Controller Logic&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The controller handles two main things:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Setting up the upload request with the right headers.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2.Refreshing the table when the upload is done.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;onUploadChange: function (oEvent) {  
    var oFileUploader = oEvent.getSource();

    // Always clear any old headers before adding new ones
    oFileUploader.removeAllHeaderParameters();

    // OPTIONAL: Link the upload to a parent entity
    // if you're uploading a file for a specific order or project,
    // you can pass its ID as a header. Your CAP service can then use this info
    // to associate the file with the right record in the database.
    // Make sure the 'to_parentEntity_ID' field exists in your entity if you want to store it.
    // Example:
    // oFileUploader.addHeaderParameter(
    //     new sap.ui.unified.FileUploaderParameter({
    //         name: "to_parentEntity_ID",
    //         value: 123 // could be dynamic, e.g., selected table row ID
    //     })
    // );

       oFileUploader.addHeaderParameter(
        new sap.ui.unified.FileUploaderParameter({
            name: "fileName",
            value: oEvent.getParameter('files')[0].name
        })
    );

    oFileUploader.addHeaderParameter(
        new sap.ui.unified.FileUploaderParameter({
            name: "slug",
            value: oEvent.getSource().getValue(),
        })
    );

    // Ensure XHR is used for sending the file (needed for headers to work)
    oFileUploader.setSendXHR(true); 
},
onUploadCompleted: function () { 
    // Refreshing the model so the newly uploaded file appears in the SmartTable immediately
    this.getView().getModel().refresh(); 
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Step 7: Testing It Out&lt;/P&gt;&lt;P&gt;After setting everything up, run your app locally and try uploading a file. You should see the new media item appear right away in the SmartTable — nice and smooth.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_5-1755002178812.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299912iEF58690812EB2A7D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_5-1755002178812.png" alt="MaheshSirsat1708_5-1755002178812.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_6-1755002185746.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299913i75CCE2E74F2480B5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_6-1755002185746.png" alt="MaheshSirsat1708_6-1755002185746.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step &amp;nbsp;8 :Download Media&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;we use the file name shown as a clickable link (sap.m.Link). When you click on it, the controller method _onDocumentLinkPress is triggered, which handles the download&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_7-1755002209681.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299914iEE57D36E2DDB7B1B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_7-1755002209681.png" alt="MaheshSirsat1708_7-1755002209681.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This creates a temporary invisible anchor tag, sets the file URL and name, clicks it to start the download, and then cleans up.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;_onDocumentLinkPress: function (oEvent) {
    const sItem = oEvent.getSource().getBindingContext().getObject();
    var link = document.createElement('a');
    link.href = sItem.__metadata.media_src;   
    link.setAttribute('download', sItem.fileName);  
    document.body.appendChild(link);
    link.click();                             
    document.body.removeChild(link);
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Simple but effective — now you can upload files and grab them back with just a click.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MaheshSirsat1708_8-1755002296991.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299915i3F714DF8859E81C7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MaheshSirsat1708_8-1755002296991.png" alt="MaheshSirsat1708_8-1755002296991.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;With this setup, you can upload a file, see it instantly in the SmartTable, and download it again with a single click. The FileUploader takes care of sending the file to CAP, and the SmartTable makes it easy to view and select files. Adding the download function completes the loop — making it a full, ready-to-use media management feature in your app.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/media-upload-amp-download-in-sap-cap-with-sap-ui-unified-fileuploader-and/ba-p/14178652"/>
    <published>2025-08-15T06:54:26.720000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-github-action-to-update-tenant-subscriptions-for-multitenant-saas/ba-p/14181456</id>
    <title>A GitHub action to update tenant subscriptions for multitenant SaaS applications on BTP</title>
    <updated>2025-09-02T08:58:38.816000+02:00</updated>
    <author>
      <name>gaborfarkas87</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/770186</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;When deploying a multitenant SaaS app on BTP using GitHub Actions, you may want to update tenant subscriptions after each successful deployment. While there are a couple of ways to approach this, they either require manual implementation, or they only solve the problem partially.&lt;/P&gt;&lt;P&gt;One obvious approach is to run &lt;EM&gt;cds-mtx upgrade&lt;/EM&gt; as part of your deployment workflow. However, this only updates the database schemas and does not handle all tenant dependencies.&lt;/P&gt;&lt;P&gt;Another option is to call the SaaS Provisioning Service APIs directly. While this works, it requires you to roll your own implementation which might be a bit too much effort.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;A custom GitHub action&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To simplify this process, I created a reusable GitHub Action that automatically updates all tenant dependencies by leveraging the SaaS Provisioning Service APIs. You can find it here:&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/gbrfarkas/btp-saas-sub-update-action" target="_self" rel="nofollow noopener noreferrer"&gt;https://github.com/gbrfarkas/btp-saas-sub-update-action&lt;/A&gt;&lt;/P&gt;&lt;P&gt;The action can be integrated into your deployment workflow and provides clear status updates and error reporting directly in the pipeline output.&lt;/P&gt;&lt;P&gt;Here’s an example of how to use it:&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;uses: gbrfarkas/btp-saas-sub-update-action@v1
with:
  api-url: 'https://saas-manager.cfapps.&amp;lt;region&amp;gt;.hana.ondemand.com'
  token-url: 'https://&amp;lt;...&amp;gt;.authentication.&amp;lt;region&amp;gt;.hana.ondemand.com/oauth/token'
  client-id: '...'
  client-secret: '...'
  timeout: 180
  interval: 10&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;To configure it, you’ll need to provide:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The API endpoint and token URL for your SaaS Provisioning Service instance&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Credentials (client ID and client secret)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Optional values for timeout and check interval (to control how often the action checks progress during updates)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This custom GitHub action provides a simple way to update all tenant subscriptions and dependencies in a multitenant SaaS BTP app which you can easily integrate into your deployment pipeline.&lt;/P&gt;&lt;P&gt;Hopefully some of you find this useful to automate subscriptions updates. It's still a bit experimental so use it at your own risk in a productive environment.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-github-action-to-update-tenant-subscriptions-for-multitenant-saas/ba-p/14181456"/>
    <published>2025-09-02T08:58:38.816000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/istio-moves-to-native-sidecars/ba-p/14208593</id>
    <title>Istio Moves to Native Sidecars</title>
    <updated>2025-09-05T15:01:13.083000+02:00</updated>
    <author>
      <name>mluk</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1601022</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1759227864"&gt;Introduction&lt;/H2&gt;&lt;P&gt;Since version 1.28, Kubernetes has offered native sidecar functionality, and Istio 1.27 uses it by default for istio-proxy sidecars. Native sidecars will enabled by default also in the Istio module 1.22, which is part of SAP BTP, Kyma runtime.&lt;/P&gt;&lt;P&gt;Let's see what are the benefits of native sidecars, learn how to use them, and understand what hacks can be removed.&lt;/P&gt;&lt;H2 id="toc-hId-1562714359"&gt;Differences Between Regular and Native Sidecar Containers&lt;/H2&gt;&lt;P&gt;Every Pod in the Istio mesh gets an additional istio-proxy sidecar container, which intercepts network traffic to provide Istio features.&lt;/P&gt;&lt;P&gt;In the past, Kubernetes didn't support the concept of sidecar containers, so it wasn't possible to control the order in which containers within a Pod were started or stopped. This approach causes multiple issues, such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;When an application container starts before the istio-proxy sidecar container is ready, the application doesn't have network access at startup.&lt;/LI&gt;&lt;LI&gt;When the istio-proxy sidecar stops before the application container stops, the application loses network access during shutdown.&lt;/LI&gt;&lt;LI&gt;An init container runs before the istio-proxy sidecar container, so it can't access the network.&lt;/LI&gt;&lt;LI&gt;A running istio-proxy sidecar container prevents Pods from being finished (for example, in the case of Jobs).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Since version 1.28, Kubernetes has offered &lt;A href="https://kubernetes.io/blog/2023/08/25/native-sidecar-containers/" target="_blank" rel="nofollow noopener noreferrer"&gt;native sidecar containers&lt;/A&gt; functionality to address such problems. If an init container has &lt;STRONG&gt;restartPolicy&lt;/STRONG&gt; set to Always, Kubernetes considers it a native sidecar and treats it differently. Istio uses native sidecars introduced by Kubernetes for istio-proxy sidecars. See &lt;A href="https://istio.io/latest/blog/2023/native-sidecars/" target="_blank" rel="nofollow noopener noreferrer"&gt;Kubernetes Native Sidecars in Istio&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1366200854"&gt;Default Istio Proxy Sidecar Type&lt;/H2&gt;&lt;P&gt;The Istio module (part of SAP BTP, Kyma runtime) configures the default type of the istio-proxy sidecar container, which is injected into all Pods that allow for Istio sidecar proxy injection. However, you can override this default setting for a specific Pod, allowing it to use another type of sidecar container regardless of the Istio module’s default configuration. The default istio-proxy sidecar type varies depending on the particular Istio module and Istio version:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Istio module up to 1.20 - native sidecars are disabled by default&lt;/LI&gt;&lt;LI&gt;Istio module 1.21 with Istio 1.27 - native sidecars are disabled by default&lt;/LI&gt;&lt;LI&gt;Istio module 1.22 with Istio 1.27 - native sidecars are enabled by default, unless you set &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/istio-version#compatibility-mode" target="_blank" rel="noopener noreferrer"&gt;compatibilityMode in the Istio CR&lt;/A&gt; to true&lt;/LI&gt;&lt;LI&gt;Istio module with Istio 1.28 - native sidecars are enabled by default&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1169687349"&gt;Configuring the Type of Istio Sidecar Proxy for a Particular Workload&lt;/H2&gt;&lt;P&gt;You can configure the sidecar type explicitly for a particular workload.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;To inject istio-proxy as a native sidecar container, set the sidecar.istio.io/nativeSidecar annotation to "true" on a given Pod or in the Pod template.&lt;/LI&gt;&lt;LI&gt;To inject istio-proxy as a regular sidecar container, set the sidecar.istio.io/nativeSidecar annotation to "false" on a given Pod or in the Pod template.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you do not set the annotation, the default setting is used.&lt;/P&gt;&lt;P&gt;You must set the annotation at the Pod level. So, when a Pod is created by a parent resource (for example, Deployment, StatefulSet, ReplicaSet, DaemonSet, Job, CronJob), you must configure the annotation in the Pod template. See the example:&lt;/P&gt;&lt;PRE&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-deployment
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/nativeSidecar: "true"
...&lt;/PRE&gt;&lt;P&gt;Setting the sidecar type explicitly is especially recommended when a given workload works well only with one sidecar type and causes issues otherwise. This approach guarantees that the sidecar type doesn't change after the Istio module upgrade. A good example are Job Pods, which can't finish if the main container finishes because the istio-proxy sidecar container is still running. In this case, setting the sidecar.istio.io/nativeSidecar annotation in the Pod template solves the problem.&lt;/P&gt;&lt;H2 id="toc-hId-973173844"&gt;Support in the Istio Module&lt;/H2&gt;&lt;P&gt;The Istio module (part of SAP BTP, Kyma runtime) fully supports both types of sidecar containers. In particular, in case of Istio version update it detects which workloads should be restarted and this mechanism works with both sidecar types.&lt;/P&gt;&lt;H2 id="toc-hId-776660339"&gt;Example of Istio Proxy as Native Sidecar&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;Create a test namespace with Istio injection enabled:&lt;/P&gt;&lt;PRE&gt;kubectl create ns test
kubectl label namespace test istio-injection=enabled&lt;/PRE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Create a workload with istio-proxy running as a native sidecar container:&lt;/P&gt;&lt;PRE&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: batch/v1
kind: Job
metadata:
  name: test-job
  namespace: test
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/nativeSidecar: "true"
    spec:
      containers:
      - name: test-job
        image: alpine:latest
        command: [ "/bin/sleep", "10" ]
      restartPolicy: Never
EOF&lt;/PRE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;To observe the progress, run:&lt;/P&gt;&lt;PRE&gt;kubectl get pod -n test -w&lt;/PRE&gt;&lt;PRE&gt;NAME             READY   STATUS     RESTARTS   AGE
test-job-2tt95   0/2     Init:0/2   0          0s
test-job-2tt95   0/2     Init:1/2   0          1s
test-job-2tt95   0/2     Init:1/2   0          2s
test-job-2tt95   0/2     PodInitializing   0          10s
test-job-2tt95   1/2     PodInitializing   0          10s
test-job-2tt95   2/2     Running           0          11s
test-job-2tt95   1/2     Completed         0          21s
test-job-2tt95   0/2     Completed         0          22s&lt;/PRE&gt;&lt;P&gt;The key differences when compared to the istio-proxy run as a regular sidecar container:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;When the Pod starts, it has the Init status with two containers.&lt;/LI&gt;&lt;LI&gt;The application container only starts after the istio-proxy native sidecar is fully operational.&lt;/LI&gt;&lt;LI&gt;After the main container completes its job, the Pod finishes with the status Completed.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;List init containers:&lt;PRE&gt;kubectl get pod -n test -o jsonpath='{.items[0].spec.initContainers[*].name}'&lt;/PRE&gt;&lt;P&gt;The output contains two containers, and istio-proxy is now an init container:&lt;/P&gt;&lt;PRE&gt;istio-validation istio-proxy&lt;/PRE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;List regular containers:&lt;/P&gt;&lt;PRE&gt;kubectl get pod -n test -o jsonpath='{.items[0].spec.containers[*].name}'&lt;/PRE&gt;&lt;P&gt;The output includes only the application container without istio-proxy:&lt;/P&gt;&lt;PRE&gt;test-job&lt;/PRE&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-580146834"&gt;Known Hacks that Native Sidecars Can Replace&lt;/H2&gt;&lt;H3 id="toc-hId-512716048"&gt;The /quitquitquit call&lt;/H3&gt;&lt;P&gt;The solution was proposed under &lt;A href="https://github.com/istio/istio/issues/6324#issuecomment-533923427" target="_blank" rel="nofollow noopener noreferrer"&gt;issue #6324&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;The istio-proxy sidecar offers an additional endpoint /quitquitquit that you can use in the following way to shut down istio-proxy:&lt;/P&gt;&lt;PRE&gt;curl -sf -XPOST http://127.0.0.1:15020/quitquitquit&lt;/PRE&gt;&lt;P&gt;Using the endpoint is no longer required if istio-proxy runs as a native sidecar. Its lifecycle is bound to the main application container, so the istio-proxy sidecar shuts down automatically when the main container is finished.&lt;/P&gt;&lt;H3 id="toc-hId-316202543"&gt;runAsUser 1337, or excludeOutboundIPRanges, or excludeOutboundPorts&lt;/H3&gt;&lt;P&gt;The solution was proposed in the blog post &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/upcoming-breaking-change-in-sap-btp-kyma-runtime-enabling-the-istio-cni/ba-p/13550765" target="_blank"&gt;Upcoming breaking change in SAP BTP, Kyma Runtime: Enabling the Istio CNI plugin&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Init containers are started before regular containers are started. This means that the istio-proxy as regular sidecar doesn't work when init containers are running. As a result init containers don't have network access.&lt;/P&gt;&lt;P&gt;By configuring &lt;STRONG&gt;UID 1337&lt;/STRONG&gt;, &lt;STRONG&gt;excludeOutboundIPRanges&lt;/STRONG&gt;, or &lt;STRONG&gt;excludeOutboundPorts&lt;/STRONG&gt; you can exclude the network traffic from being captured by the istio-proxy. This allows init containers to access the network, but they are able to connect only to resources outside service mesh.&lt;/P&gt;&lt;P&gt;This is no longer required if istio-proxy runs as a native sidecar because the istio-proxy is injected as the first init container and runs until the main application container finishes. So, init containers are able to access the network in the same way as regular application containers, and they may connect to resources inside and outside the service mesh.&lt;/P&gt;&lt;H2 id="toc-hId--9393681"&gt;Summary&lt;/H2&gt;&lt;P&gt;Native sidecars are a good step forward that solves a lot of issues that developers had with regular sidecar containers. They simplify the application orchestration because you don't need to think about the order in which containers are started, and you don't need to implement workarounds for non-working istio-proxy or for Pod termination.&lt;/P&gt;&lt;H2 id="toc-hId-141347171"&gt;Related Links&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://kubernetes.io/blog/2023/08/25/native-sidecar-containers/" target="_blank" rel="nofollow noopener noreferrer"&gt;Kubernetes blog post about native sidecars&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://istio.io/latest/blog/2023/native-sidecars/" target="_blank" rel="nofollow noopener noreferrer"&gt;Istio blog post about native sidecars&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/istio-moves-to-native-sidecars/ba-p/14208593"/>
    <published>2025-09-05T15:01:13.083000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-buildless-mode-in-the-kyma-serverless-module/ba-p/14207277</id>
    <title>Introducing Buildless Mode in the Kyma Serverless Module</title>
    <updated>2025-09-09T12:41:04.481000+02:00</updated>
    <author>
      <name>Grego14</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/12082</uri>
    </author>
    <content>&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Kyma Serverless is evolving!&amp;nbsp;&lt;/STRONG&gt;We have just rolled out a new version of the Serverless module (1.8.2) with a new opt-in feature called&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;buildless mode.&lt;BR /&gt;We invite you to try it out, as it allows you to experience faster, simpler, and more secure serverless development. Here’s why you should give it a try.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1630112413"&gt;&lt;STRONG&gt;Faster Function Startup&lt;/STRONG&gt;&lt;/H1&gt;&lt;/DIV&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;Functions start much quicker! &lt;/STRONG&gt;This means you can iterate faster, reducing the time between writing code and seeing it run. While dependency resolution now happens at Pod startup, the expensive image build step is gone. Our tests show that a simple Function with one dependency is ready in about 10 seconds.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;H1 id="toc-hId-1433598908"&gt;Preserving Resources&lt;/H1&gt;&lt;H3 id="toc-hId-1495250841"&gt;No More In-Cluster Docker Builds&lt;/H3&gt;&lt;P&gt;Function container images are no longer built inside the Kyma environment, saving significant computational resources. Docker builds are typically resource-intensive, and eliminating them frees up your cluster for what matters most—running your workloads.&lt;/P&gt;&lt;H3 id="toc-hId-1298737336"&gt;&lt;SPAN&gt;No Need to Store Function Images&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Buildless mode removes the requirement for an external Docker registry. If you previously used an in-cluster registry, you’ll also save on storage resources, as Function images are no longer stored anywhere.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-844058393"&gt;Enhanced Security&lt;/H1&gt;&lt;DIV class=""&gt;&lt;P&gt;Without build jobs, Functions can run in namespaces with more restrictive Pod security levels, making your workloads safer by default.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-647544888"&gt;How Does It Work?&lt;/H1&gt;&lt;P&gt;Kyma provides ready-to-use Function runtime images with dedicated mount points for your custom logic and dependencies. When a Function Pod starts:&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P&gt;your dependencies are resolved and mounted at startup,&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;SPAN&gt;your custom Function code is also mounted into the serving framework at startup.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;P&gt;This means your code and dependencies are injected directly into the running environment, skipping the build and push steps entirely.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;H1 id="toc-hId-451031383"&gt;More Outcomes and Considerations&lt;/H1&gt;&lt;H3 id="toc-hId-512683316"&gt;Deprecated Fields&lt;/H3&gt;&lt;P&gt;All fields deprecated in the Serverless 1.6.0 release are no longer functional in buildless mode. For the full list of deprecated fields, See the &lt;A href="https://help.sap.com/whats-new/cf0cb2cb149647329b5d02aa96303f56?Component=Kyma+Runtime&amp;amp;Valid_as_Of=2025-09-04:2025-09-04&amp;amp;locale=en-US&amp;amp;q=serverless" target="_self" rel="noopener noreferrer"&gt;Serverless 1.8.0 What's New note&lt;/A&gt;.&lt;/P&gt;&lt;H3 id="toc-hId-316169811"&gt;Scaling&lt;/H3&gt;&lt;DIV class=""&gt;&lt;P&gt;Buildless mode does not support autoscaling based on CPU consumption out of the box. However, since the Function CRD supports the `/scale` subresource, you can still scale your Functions using your own HPAs or leverage KEDA’s ScaledObject API for advanced, event-driven scaling strategies. To learn how to scale your Functions using external scalers, see the &lt;A href="https://kyma-project.io/#/serverless-manager/user/tutorials/01-130-use-external-scalers" target="_self" rel="nofollow noopener noreferrer"&gt;Use External Scalers&lt;/A&gt; tutorial.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;H1 id="toc-hId--138509132"&gt;How to Enable Buildless Mode&lt;/H1&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Enabling buildless mode is simple!&lt;/STRONG&gt;&lt;BR /&gt;Just add the following annotation to your&amp;nbsp;Serverless&amp;nbsp;custom resource:&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;serverless.kyma-project.io/buildless-mode: "enabled"&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;&lt;P&gt;You can do this via Kyma Dashboard or with kubectl. If you want to switch back, simply remove the annotation. For more information, see &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/configuring-serverless" target="_blank" rel="noopener noreferrer"&gt;Configuring Serverless&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;H1 id="toc-hId-434717446"&gt;What’s Next?&lt;/H1&gt;&lt;P&gt;Currently (v1.8): Buildless mode is opt-in. Try it out and share your feedback!&lt;BR /&gt;Coming Soon (v1.9): We plan to make buildless mode the default mode, with an option to opt out if needed.&lt;STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;Future (v2.0): Our ultimate goal is to go fully buildless for all Kyma Serverless workloads.&lt;STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;Give buildless mode a try today and experience a faster, simpler, and more secure way to run Serverless Functions in Kyma!&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;DIV class=""&gt;For more information, see &lt;A href="http://&amp;nbsp;https://help.sap.com/docs/btp/sap-business-technology-platform/serverless-buildless-mode" target="_self" rel="nofollow noopener noreferrer"&gt;Serverless Buildless Mode.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/A&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-buildless-mode-in-the-kyma-serverless-module/ba-p/14207277"/>
    <published>2025-09-09T12:41:04.481000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/the-magic-of-attributes-in-sap-ias-default-vs-enrich-assertion/ba-p/14202929</id>
    <title>‌🎩‌The Magic of Attributes in SAP IAS: Default vs Enrich Assertion</title>
    <updated>2025-09-10T20:56:36.120000+02:00</updated>
    <author>
      <name>sushilgupta857</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/720925</uri>
    </author>
    <content>&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId-1759052751"&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-unicode-emoji" title=":sparkles:"&gt;✨&lt;/span&gt;&lt;SPAN&gt;🪄 Revellio 🪄&lt;/SPAN&gt;&lt;span class="lia-unicode-emoji" title=":sparkles:"&gt;✨&lt;/span&gt;&lt;/H2&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span class="lia-unicode-emoji" title=":glowing_star:"&gt;🌟&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":crystal_ball:"&gt;🔮&lt;/span&gt;🧙‍&lt;span class="lia-unicode-emoji" title=":female_sign:"&gt;♀️&lt;/span&gt;🪄&lt;span class="lia-unicode-emoji" title=":sparkles:"&gt;✨&lt;/span&gt;🧝‍&lt;span class="lia-unicode-emoji" title=":male_sign:"&gt;♂️&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":glowing_star:"&gt;🌟&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; “ Unveiling the secrets of Identity Federation, one step at a time…”&lt;/EM&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1345675728" id="toc-hId-1562539246"&gt;&lt;span class="lia-unicode-emoji" title=":sparkles:"&gt;✨&lt;/span&gt;&lt;SPAN&gt;🧙‍&lt;/SPAN&gt;&lt;span class="lia-unicode-emoji" title=":male_sign:"&gt;♂️&lt;/span&gt;&lt;SPAN&gt; Unlocking SAP IAS Attribute Magic: Default vs Enrich Secrets Revealed &lt;/SPAN&gt;&lt;span class="lia-unicode-emoji" title=":top_hat:"&gt;🎩&lt;/span&gt;&lt;/H2&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1737749421" id="toc-hId-1366025741"&gt;About Me&lt;/H2&gt;&lt;P&gt;Hare Krishna&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":folded_hands:"&gt;🙏&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;I am an SAP BTP Cloud Architect sharing practical insights, solutions, and real-world experiences from the SAP ecosystem.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1345675728" id="toc-hId-1169512236"&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":glowing_star:"&gt;🌟&lt;/span&gt;&lt;/SPAN&gt;Introduction&lt;/H2&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;When integrating SAP SaaS products on BTP, managing user attributes becomes a big challenge. Every app expects something slightly different—from hardcoded values to custom claim names. Without IAS, you'd have to tame these discrepancies in every corporate IdP or app individually, which isn't sustainable.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":key:"&gt;🔑&lt;/span&gt;IAS centralizes this with:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;🟦 &lt;STRONG&gt;Default Attributes&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;🟩 &lt;STRONG&gt;Enrich Assertion Attributes&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":gear:"&gt;⚙️&lt;/span&gt;&lt;STRONG&gt;Identity Federation&lt;/STRONG&gt; controls which method is applied&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-972998731"&gt;&lt;span class="lia-unicode-emoji" title=":blue_book:"&gt;📘&lt;/span&gt;Concepts: When Which Mechanism Applies&lt;/H2&gt;&lt;H3 id="toc-hId-905567945"&gt;Default vs. Enrich Assertion Attributes&lt;/H3&gt;&lt;P&gt;SAP IAS provides two methods to control how attributes are sent to applications:&lt;/P&gt;&lt;H4 id="toc-hId-838137159"&gt;1. 🟦 &lt;STRONG&gt;Default Attributes&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Configured at the &lt;STRONG&gt;application level&lt;/STRONG&gt; inside IAS.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Can be static (hardcoded), pulled from IAS user store, or derived.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;STRONG&gt;Used when Identity Federation is enabled&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-641623654"&gt;2. 🟩 &lt;STRONG&gt;Enrich Assertion Attributes&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Configured in the &lt;STRONG&gt;corporate IdP connection&lt;/STRONG&gt; inside IAS.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Uses values from the upstream IdP, with transformation before sending to apps.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;STRONG&gt;Used when Identity Federation is disabled&lt;/STRONG&gt;.&lt;BR /&gt;(&lt;A class="" href="https://help.sap.com/docs/cloud-identity-services/cloud-identity-services/enrich-assertion-attributes-coming-from-corporate-idp?utm_source=chatgpt.com" target="_new" rel="noopener noreferrer"&gt;&lt;span class="lia-unicode-emoji" title=":page_facing_up:"&gt;📄&lt;/span&gt; Official Doc&lt;/A&gt;)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-316027430"&gt;&lt;span class="lia-unicode-emoji" title=":counterclockwise_arrows_button:"&gt;🔄&lt;/span&gt;Identity Federation in IAS&lt;/H3&gt;&lt;P&gt;Identity Federation decides whether IAS acts as the &lt;STRONG&gt;authoritative IdP&lt;/STRONG&gt; &lt;span class="lia-unicode-emoji" title=":id_button:"&gt;🆔&lt;/span&gt; or a &lt;STRONG&gt;proxy&lt;/STRONG&gt; &lt;span class="lia-unicode-emoji" title=":shuffle_tracks_button:"&gt;🔀&lt;/span&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Federation Enabled&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;IAS processes 🟦 Default Attributes.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Useful even when using corporate IdP—IAS can inject hardcoded values like Groups = sac.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Federation Disabled&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;IAS functions as a pass-through proxy.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Only 🟩 Enrich Assertion Attributes are active, customizing only based on the upstream IdP data.&lt;BR /&gt;(&lt;A class="" href="https://help.sap.com/docs/btp/sap-business-technology-platform/identity-authentication-with-corporate-identity-provider?utm_source=chatgpt.com" target="_new" rel="noopener noreferrer"&gt;&lt;span class="lia-unicode-emoji" title=":page_facing_up:"&gt;📄&lt;/span&gt; Reference&lt;/A&gt;)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;This flexibility ensures SAP SaaS tools always receive what they expect—without demanding changes in your corporate IdP or each app.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--9568794"&gt;&lt;span class="lia-unicode-emoji" title=":glowing_star:"&gt;🌟&lt;/span&gt;How IAS Helps Customers&lt;/H2&gt;&lt;P&gt;Setting up SSO for SAP SaaS apps can be tricky—each service has its own attribute requirements. Without IAS, you’d constantly tweak your corporate IdP or each app.&lt;/P&gt;&lt;P&gt;With &lt;STRONG&gt;Default&lt;/STRONG&gt; and &lt;STRONG&gt;Enrich Assertion Attributes&lt;/STRONG&gt;, IAS provides a &lt;STRONG&gt;centralized layer&lt;/STRONG&gt; to standardize attributes once and reuse across apps.&lt;/P&gt;&lt;H3 id="toc-hId--152230949"&gt;&lt;span class="lia-unicode-emoji" title=":key:"&gt;🔑&lt;/span&gt;Real-World Scenarios(few examples)&lt;/H3&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;SAP Service&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;&lt;STRONG&gt;Required&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;&lt;STRONG&gt;How IAS helps&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Datasphere / SAC &lt;span class="lia-unicode-emoji" title=":bar_chart:"&gt;📊&lt;/span&gt;&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Groups = sac&lt;/TD&gt;&lt;TD&gt;A retail company can inject this via Default Attribute to authorize analysts without changing Azure AD groups.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Signavio 🟧&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;signavio_groups&lt;/TD&gt;&lt;TD&gt;A manufacturing firm maps workspace groups via Enrich Assertion when federation is off, or as Default Attribute when federation is on—no IdP restructuring needed.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Kyma Runtime &lt;span class="lia-unicode-emoji" title=":cyclone:"&gt;🌀&lt;/span&gt;&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Groups as groups&lt;/TD&gt;&lt;TD&gt;A tech startup transforms incoming Group claims from Okta to groups for app provisioning without any code changes.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;SAP BTP Services &lt;span class="lia-unicode-emoji" title=":large_blue_diamond:"&gt;🔷&lt;/span&gt;&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;firstname, lastname, email&lt;/TD&gt;&lt;TD&gt;A logistics company ensures consistent user attributes from IAS or upstream IdP for automated user provisioning.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;H3 id="toc-hId--348744454"&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;Customer Value&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Less Customization:&lt;/STRONG&gt; Corporate IdPs remain clean; no per-app hacks.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Faster Rollouts:&lt;/STRONG&gt; Onboard new SAP tools quickly.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Compliance &amp;amp; Governance:&lt;/STRONG&gt; Centralized attribute control improves auditability.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Flexibility:&lt;/STRONG&gt; Hardcode, map, or enrich attributes depending on SaaS needs—without breaking federation.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Whether it’s &lt;STRONG&gt;Datasphere&lt;/STRONG&gt;, &lt;STRONG&gt;Signavio&lt;/STRONG&gt;, or &lt;STRONG&gt;Kyma&lt;/STRONG&gt;, IAS ensures your SSO setup &lt;STRONG&gt;just works&lt;/STRONG&gt;, letting IT teams focus on business instead of identity headaches.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--251854952"&gt;&lt;span class="lia-unicode-emoji" title=":gear:"&gt;⚙️&lt;/span&gt;Configuring Attributes in IAS — Step-by-Step&lt;/H2&gt;&lt;P&gt;Here’s how to set up each mechanism using the &lt;STRONG&gt;IAS Admin Console&lt;/STRONG&gt; &lt;span class="lia-unicode-emoji" title=":desktop_computer:"&gt;🖥&lt;/span&gt;️:&lt;/P&gt;&lt;H3 id="toc-hId--741771464"&gt;1. 🟦 Configure Default Attributes (for Federation Enabled)&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Navigate to &lt;STRONG&gt;IAS Admin Console → Applications&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Select your application (e.g., &lt;span class="lia-unicode-emoji" title=":bar_chart:"&gt;📊&lt;/span&gt; Datasphere).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Go to &lt;STRONG&gt;Trust → Assertion Attributes / Default Attributes&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Add Default Attribute&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Example: Groups = sac (hardcoded value)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Or map values: ${user.firstName}, ${user.company}&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":floppy_disk:"&gt;💾&lt;/span&gt;Save and exit.&lt;BR /&gt;(&lt;A class="" href="https://help.sap.com/docs/cloud-identity-services/cloud-identity-services/configure-default-attributes-for-subscribed-applications?utm_source=chatgpt.com" target="_new" rel="noopener noreferrer"&gt;&lt;span class="lia-unicode-emoji" title=":page_facing_up:"&gt;📄&lt;/span&gt; Doc&lt;/A&gt;)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--938284969"&gt;2. 🟩 Configure Enrich Assertion Attributes (for Federation Disabled)&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Go to &lt;STRONG&gt;IAS Admin Console → Identity Providers → Corporate Identity Providers&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Select your corporate IdP (e.g., Microsoft Entra ID logo &lt;span class="lia-unicode-emoji" title=":blue_circle:"&gt;🔵&lt;/span&gt;).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Open the &lt;STRONG&gt;Assertion Enrichment&lt;/STRONG&gt; tab.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Add mapping rules:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Example: ${user.email} → emailAddress&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Example: ${customAttribute1} → employeeNumber&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":floppy_disk:"&gt;💾&lt;/span&gt;Save the configuration.&lt;BR /&gt;(&lt;A class="" href="https://help.sap.com/docs/cloud-identity-services/cloud-identity-services/enrich-assertion-attributes-coming-from-corporate-idp?utm_source=chatgpt.com" target="_new" rel="noopener noreferrer"&gt;&lt;span class="lia-unicode-emoji" title=":page_facing_up:"&gt;📄&lt;/span&gt; Doc&lt;/A&gt;)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1134798474"&gt;3. 🧪 Test and Validate&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Use IAS’s &lt;STRONG&gt;Test tool&lt;/STRONG&gt; 🧰 or a &lt;STRONG&gt;SAML tracer&lt;/STRONG&gt; &lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Confirm:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;🟦 Default Attributes appear with Federation Enabled.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;🟩 Enrich mappings appear with Federation Disabled.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--1037908972"&gt;&lt;span class="lia-unicode-emoji" title=":camera_with_flash:"&gt;📸&lt;/span&gt;Real-Life Example (Screenshot Placeholder)&amp;nbsp;&lt;/H2&gt;&lt;H3 id="toc-hId--1527825484"&gt;&lt;span class="lia-unicode-emoji" title=":building_construction:"&gt;🏗&lt;/span&gt;️ Architecture: IAS as Proxy (OIDC ↔ SAML)&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; BTP Application (BAS)
          │  (OIDC)
          ▼
   ┌──────────────────────────────┐
   │           SAP IAS            │
   │  ┌────────────────────────┐  │
   │  │   Application Side     │◄─┼─ Identity Federation Enabled
   │  │   (Default Attributes) │  │
   │  └────────────────────────┘  │
   │                              │
   │  ┌────────────────────────┐  │
   │  │ Corporate IdP Side     │◄─┼─ Identity Federation Disabled
   │  │ (Enrich Assertion Attr)│  │
   │  └────────────────────────┘  │
   └──────────────────────────────┘
          │  (SAML)
          ▼
   Corporate Identity Provider&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;H3 id="toc-hId--1724338989"&gt;Step-by-Step Explanation for Different Scenarios&lt;/H3&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H4 id="toc-hId-2080711795"&gt;&lt;STRONG&gt;Scenario 1: Enhancement of attributes coming from Identity provider.&lt;/STRONG&gt;&lt;/H4&gt;&lt;H4 id="toc-hId-2052381981"&gt;&lt;STRONG&gt;Without Identity Federation Enabled&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;Users in IAS (user which we will use don't exist in IAS)&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 7.06.30 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312482i933EB720D6603043/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 7.06.30 PM.png" alt="Screenshot 2025-09-10 at 7.06.30 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Identity fedration is disabled&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 7.07.14 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312484iC056EBC9CF827958/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 7.07.14 PM.png" alt="Screenshot 2025-09-10 at 7.07.14 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;And Enrich assertion attributes are not set. Expectation is - IAS should direct the Attributes coming from IDP to SAP BTP application(BAS in our scenario)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 7.07.45 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312483i4D89FF118BDCD1B5/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 7.07.45 PM.png" alt="Screenshot 2025-09-10 at 7.07.45 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Perform Login Process to generate Assertion(from IDP) and JWT token(from IAS).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 11.19.43 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312518i5E761F9B6FA6C9C0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 11.19.43 PM.png" alt="Screenshot 2025-09-10 at 11.19.43 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Enter Corporate IDP credentials -&amp;nbsp; User: &lt;STRONG&gt;idpuser@test.com&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 11.20.13 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312519iFAB46A7DBAE44137/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 11.20.13 PM.png" alt="Screenshot 2025-09-10 at 11.20.13 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Login Successful to SAP BTP Application&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 11.20.26 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312517i3B54AA656CED4B8D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 11.20.26 PM.png" alt="Screenshot 2025-09-10 at 11.20.26 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In SAML assertion from IDP we can see - Groups are coming as part of SAML assertion.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 7.09.44 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312485iDCC8B02577DDDC04/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 7.09.44 PM.png" alt="Screenshot 2025-09-10 at 7.09.44 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When checked in Troubleshooting logs in IAS - We can see the same attributes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 7.10.44 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312489i597C950F6F856EC0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 7.10.44 PM.png" alt="Screenshot 2025-09-10 at 7.10.44 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now in Corporate IDP - Enrich assertion attributes - to send Groups as Hogwarts_Groups to BTP application. In this scenario - Groups will be sent packaged as Hogwarts_Groups to Application which can be used for specific scenarios.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 7.12.08 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312488i8A855F84AF96B309/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 7.12.08 PM.png" alt="Screenshot 2025-09-10 at 7.12.08 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When we login - we can check in troubleshooting logs of IAS that expected attributes are sent.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 7.13.31 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312491i27B4B90E71BD9E76/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 7.13.31 PM.png" alt="Screenshot 2025-09-10 at 7.13.31 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--2145695813"&gt;Now when we enable Identity Fedration&lt;/H3&gt;&lt;P&gt;Enable identity fedration - in corporate IDP -&amp;gt; identity fedration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 8.40.34 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312490iEDFA76BBE365F5AE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 8.40.34 PM.png" alt="Screenshot 2025-09-10 at 8.40.34 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now &lt;U&gt;Enrich assertion attributes in Corporate IDP don't work&lt;/U&gt; - we will need to use another functionality called Default attributes in Applications in IAS. In below screenshot we can see that it didn't send any IDP attributes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 8.44.05 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312493iE2984BF28CC1337F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 8.44.05 PM.png" alt="Screenshot 2025-09-10 at 8.44.05 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now Setup Default attributes in IAS application as shown in below screenshot - make sure you select corporate IDP in drop down menu to send the attributes from Corporate IDP&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 8.44.49 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312492iF4294A4294FF8CEC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 8.44.49 PM.png" alt="Screenshot 2025-09-10 at 8.44.49 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Perform login to Application again&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 8.46.07 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312501i0BBB6642A77ED5F5/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 8.46.07 PM.png" alt="Screenshot 2025-09-10 at 8.46.07 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now expected attributes are received by BTP application&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 8.47.23 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312495i62D12CBF6CC07895/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 8.47.23 PM.png" alt="Screenshot 2025-09-10 at 8.47.23 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1952757978"&gt;Scenario 2: Sending Hardcoded values to Applications using IAS&lt;/H3&gt;&lt;H4 id="toc-hId-1462841466"&gt;When Identity Fedration is disabled&lt;/H4&gt;&lt;P&gt;Perform it in Corporate IDP -&amp;gt; Enrich assertion attributes&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 8.57.32 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312494iDC3C85CEFAF11EEB/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 8.57.32 PM.png" alt="Screenshot 2025-09-10 at 8.57.32 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Post successful login - we can check Hard coded values are sent to Application&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 8.57.51 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312496i85BAB9D10BBA97AA/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 8.57.51 PM.png" alt="Screenshot 2025-09-10 at 8.57.51 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1266327961"&gt;Identity fedration enabled&lt;/H4&gt;&lt;P&gt;IAS application -&amp;gt; Default Attributes -&amp;gt; Set Attrubtes&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 8.58.36 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312498iCAEF01D5E7D9DE70/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 8.58.36 PM.png" alt="Screenshot 2025-09-10 at 8.58.36 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Post successful login - we can check that Hard coded values are sent to BTP application&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-10 at 9.04.55 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312500i278A567EAF5A74A9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 at 9.04.55 PM.png" alt="Screenshot 2025-09-10 at 9.04.55 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1656620470"&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;Why It Matters&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt;Centralization&lt;/STRONG&gt;: Handle diverse SAP SaaS attribute needs from one place.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":chart_increasing:"&gt;📈&lt;/span&gt;Scalability&lt;/STRONG&gt;: Onboard new services without remapping custom attributes everywhere.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;️ Maintainability&lt;/STRONG&gt;: If tools change, update once in IAS—not in 5 different places.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Whether you’re setting up &lt;STRONG&gt;Datasphere &lt;span class="lia-unicode-emoji" title=":bar_chart:"&gt;📊&lt;/span&gt;&lt;/STRONG&gt;, &lt;STRONG&gt;Signavio 🟧&lt;/STRONG&gt;, &lt;STRONG&gt;Kyma &lt;span class="lia-unicode-emoji" title=":cyclone:"&gt;🌀&lt;/span&gt;&lt;/STRONG&gt;, or other BTP tools, IAS gives you a clean, unified way to tailor attributes—without touching your corporate IdP or apps.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1460106965"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-unicode-emoji" title=":sparkles:"&gt;✨&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":deer:"&gt;🦌&lt;/span&gt;🪄 Expecto Patronum 🪄&lt;span class="lia-unicode-emoji" title=":deer:"&gt;🦌&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":sparkles:"&gt;✨&lt;/span&gt;&lt;/H2&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span class="lia-unicode-emoji" title=":glowing_star:"&gt;🌟&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":crystal_ball:"&gt;🔮&lt;/span&gt;🧙‍&lt;span class="lia-unicode-emoji" title=":male_sign:"&gt;♂️&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":sparkles:"&gt;✨&lt;/span&gt;🧝‍&lt;span class="lia-unicode-emoji" title=":female_sign:"&gt;♀️&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":glowing_star:"&gt;🌟&lt;/span&gt;&lt;BR /&gt;&lt;EM&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; — may your SAP magic always shine bright!&lt;/EM&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/the-magic-of-attributes-in-sap-ias-default-vs-enrich-assertion/ba-p/14202929"/>
    <published>2025-09-10T20:56:36.120000+02:00</published>
  </entry>
</feed>
