<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Integration-Suite-blog-posts.xml</id>
  <title>SAP Community - SAP Integration Suite</title>
  <updated>2025-07-30T02:01:17.317812+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Integration Suite/pd-p/73554900100800003241" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Integration Suite blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/using-sap-managed-iflows-for-time-series-data-integration-in-sap-ibp-part-2/ba-p/14156739</id>
    <title>Using SAP managed iFlows for Time series data Integration in SAP IBP – Part 2 - Writing data</title>
    <updated>2025-07-18T19:30:36.532000+02:00</updated>
    <author>
      <name>Domnic</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/269794</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735158478"&gt;Introduction&lt;/H2&gt;&lt;P&gt;You can use SAP Cloud Integration as a middleware to read and write Timeseries as well as Master data between SAP IBP and any other application. The IBP team provides a SAP managed package which you can reuse in your custom integration to extract as well as insert or update time series data in IBP. This blog explains the steps needed to enable this package in your SAP Cloud Integration Instance. It also explains the different payloads you have to build to reuse this content in your own custom iFlows.&lt;/P&gt;&lt;H2 id="toc-hId-1538644973"&gt;Reusable iFlows&lt;/H2&gt;&lt;P&gt;SAP IBP comes with a communication scenario &lt;STRONG&gt;SAP_COM_0931&lt;/STRONG&gt;. This exposes a set of RFC function modules which can be consumed in SAP Cloud Integration via a communication user.&amp;nbsp; A set of iFlows are delivered by SAP IBP which consumes these RFC calls to read and write data bi-directionally. These are called the reusable iFlows and they can be imported into your SAP CI instance via the Discovery mechanism in Cloud Integration. On the landing page of the SAP Integration Suite open the Discover menu on the left hand side and click on Integrations. In the right hand side you would see the search option. Filter your search for the key word IBP. You would see the &lt;STRONG&gt;SAP IBP – Reusable Integration Flows&lt;/STRONG&gt;. You can import them to your instance. You can build you own wrapper iFlows around these reusable iFlows to focus on your IBP content. The rest of this blog describes how to build these wrappers.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Reusable iFlows.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288715i0EB5E36518961E6C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Reusable iFlows.png" alt="Reusable iFlows.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig.1. High level overview of writing data to SAP IBP from an external application.&lt;/P&gt;&lt;P&gt;This blog would help you when you are creating your Custom Integration package. An example iFlow package – &lt;STRONG&gt;SAP IBP – Reusable Integration Flows Example&lt;/STRONG&gt;, is also available which can be imported inside your instance.&lt;/P&gt;&lt;H2 id="toc-hId-1342131468"&gt;Prerequisite&lt;/H2&gt;&lt;P&gt;This integration pattern would work for you only when you are using SAP IBP ver 2411 and above. Make sure you have a valid SAP Cloud Integration license. The following steps are mandatory.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;In SAP IBP, Create a communication arrangemen for SAP_COM_0931. Also create a communication system and a user. The credentials are needed for the BTP destination in your sub account.&lt;/LI&gt;&lt;LI&gt;In your SAP Integration Suite instance, discover the &lt;STRONG&gt;SAP IBP – Reusable Integration Flows&lt;/STRONG&gt; and copy them to your instance.&lt;/LI&gt;&lt;LI&gt;In your BTP Sub account, create a new destination with the following configuration:&lt;OL&gt;&lt;LI&gt;Name: e.g. SAP_IBP_Instance&lt;/LI&gt;&lt;LI&gt;Type:&amp;nbsp; RFC&lt;/LI&gt;&lt;LI&gt;Proxy Type: Internet&lt;/LI&gt;&lt;LI&gt;Alias User: IBP Communication user&lt;/LI&gt;&lt;LI&gt;Password:&amp;nbsp; IBP Communication user password&lt;/LI&gt;&lt;LI&gt;Additional Properties:&lt;OL&gt;&lt;LI&gt;&amp;nbsp;jco.client.serialization_format : columnBased&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;jco.clients.tls:trust&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: 1&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;jco.client.wshost&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : &amp;lt; SAP IBP -api Domain name&amp;gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;jco.client.wsport&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 443&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Save the Destination Configuration and check the connection.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create a Package in the SAP Cloud Integration under Integration -&amp;gt; Design.&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1145617963"&gt;Writing data to SAP IBP&lt;/H2&gt;&lt;P&gt;Create your own package which would contain all your iFlows to read and write data between SAP IBP and your external application. Lets start by creating an iFlow that would write data into SAP IBP. This iFlow would use the Process Direct interfaces defined in the SAP IBP – reusable Integration Flows. Lets assume that you would be calling this iFlow from your external application or a tool like Postman or Bruno.&lt;/P&gt;&lt;P&gt;The end to end main flow would look like this below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Main_Flow_Write.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288716iBD76C7A990DFDF8C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Main_Flow_Write.jpg" alt="Main_Flow_Write.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig.2 Example main flow for writing data to SAP IBP&lt;/P&gt;&lt;P&gt;The main flow is exposed with an HTTP Adapter. One can set the end point and later invoke this iFlow with a JSON payload. Hence the first atom is an Analyse Payload Groovy Script. Here we can analyse and store the parameters such as IBP Destination, Job name, field list we want to write, the payload we want to send to IBP as well as the master data prefix and type or key figure data along with the planning area. One can also add a flag to check the payload consistency at this point and check with a router if the payload is valid or not. For example, we need the IBP Destination name which is configured in the BTP destination. We can check for this by using a simple if statement like this,&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;message.setProperty("payloadIsOk", "yes")
if(!input?.IBPDestination || input.IBPDestination.toString().trim().isEmpty() ){
        message.setProperty("payloadIsOk", "no")
   } else {
         message.setProperty("IBPDestination",  input.IBPDestination);
    } &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In the above code snippet, we are checking for the IBP Destination in the inbound payload using the key IBPDestination. If the value is empty or not available, a property called payloadisOk is set to “no” condition. Such a check can be repeated for all mandatory key value pairs or JSON arrays such as the payload you want to send to IBP. Later the flag payloadIsOk can be checked in the router atom using the following Non-XML condition: ${header.payloadIsOk} != 'no'.&lt;/P&gt;&lt;P&gt;The JSON payload can also be converted to a XML structure using the following snippet:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;def writer = new StringWriter()
def xml = new MarkupBuilder(writer)
        xml.IBPPayload {
            input.IBPPayload.each { item -&amp;gt;
                IBPItem {
                    item.each { key, value -&amp;gt;
                        "${key}"(value)
                    }
                }
            }
        }

        def xmlString = XmlUtil.serialize(writer.toString())
        message.setProperty("IBPPayload", xmlString)&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-949104458"&gt;Create Batches&lt;/H2&gt;&lt;P&gt;When we write key figure or master data in IBP, we do this asynchronously in batches. If you have less number of records, you can write data in one single batch. But if you have large volumes of data to be written, then multiple packages are created in one batch or the flow is called multiple times creating multiple batches. The following steps are reommended while working with these reusable iFlows,&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Specify a planning area. Do not use multiple planning areas – it is currently not supported.&lt;/LI&gt;&lt;LI&gt;Planning area field is mandatory for writing Key figure values.&lt;/LI&gt;&lt;LI&gt;Only one version of the planning area is currently supported. If you do not specify the planning area version, data would be written to the Baseline version of the planning area.&lt;/LI&gt;&lt;LI&gt;Prepare the Write batch payload and the call the process direct from the reusable iflow.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The following XML Attributes are mandatory while creating a &lt;STRONG&gt;batch&lt;/STRONG&gt; for &lt;STRONG&gt;writing master data&lt;/STRONG&gt;.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;Key&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;A batch key valid in all the steps of the asynchronous process&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“MyKey”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;Name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;A Job name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“Write Master data”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;Destination&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;IBP destination as defined in the BTP sub account&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“IBP_Production_Instance”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;Command&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;RFC operation with the data&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“INSERT_UPDATE”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Other commands you can use are REPLACE, DELETE in the above attribute. The following XML Attributes are optional while creating a batch for writing master data.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;DetailedTrace&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;For debugging&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;true or false&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;ProcessUnchangedData&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;For post processing&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;true or false&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;The detailed trace attribute would generate logs that can be used while debugging an integration flow. The Boolean value toggles this setting. The ProcessUnchangedData would instruct the post processing job to process unchanged data – irrespective of the global configuration setting. The Boolean value toggles this setting. If not provided, the global parameter setting is considered. A Sample XML payload for creating batches to write master data would look like this,&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&amp;gt;
&amp;lt;IBPWriteBatches&amp;gt;
    &amp;lt;IBPWriteBatch 
        Key="${header.IBPKey}"
        Name="${header.IBPJobName}"
        Destination="${property.IBPDestination}"
        Command="${header.IBPCommand}"
        DetailedTrace="${header.IBPDetailedTrace}"
        ProcessUnchangedData="${header.IBPProcessUnchangedData}"/&amp;gt;
&amp;lt;/IBPWriteBatches&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The following XML Attributes are mandatory while creating a batch for &lt;STRONG&gt;writing key figure data&lt;/STRONG&gt;.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Key&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;A batch key valid in all the steps of the asynchronous process&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“MyKeyfigureKey”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;A Job name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“Write Keyfigure data”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Destination&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;IBP destination as defined in the BTP sub account&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“IBP_Production_Instance”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Command&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;RFC operation with the data&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“INSERT_UPDATE”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;PlanningArea&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;Name of the IBP Planning area&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“SAPIBP1”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;The following XML Attributes are optional while creating a batch for writing master data.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;PlanningAreaVersion&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;Version of the above planning area&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;Default is the Baseline version if left empty&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;DetailedTrace&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;For debugging&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;true or false&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;ProcessUnchangedData&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;For post processing&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;true or false&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;A Sample XML payload for creating batches to write master data would look like this,&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&amp;gt;
&amp;lt;IBPWriteBatches&amp;gt;
    &amp;lt;IBPWriteBatch 
        Key="${header.IBPKey}"
        Name="${header.IBPJobName}"
        Destination="${property.IBPDestination}"
        Command="${header.IBPCommand}"
        PlanningArea="${property.IBPPlanningArea}"
        DetailedTrace="${header.IBPDetailedTrace}"
        ProcessUnchangedData="${header.IBPProcessUnchangedData}"/&amp;gt;
&amp;lt;/IBPWriteBatches&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In the above example payloads, I am sending a JSON payload to the iFlow and validating it on the first groovy script atom. Here the mandatory fields are checked and stored in the message properties and header. Later I can use them to create the corresponding payloads in a content modifier, Groovy Script or a XSLT transformation atom. Such a combination can be self-contained in a local integration process and called from the main integration process. An example of such a local integration process can look like,&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Create_Batches.jpg" style="width: 566px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288717iF7FE858855AF56B3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Create_Batches.jpg" alt="Create_Batches.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig. 3 Local integration flow to create batches.&lt;/P&gt;&lt;P&gt;Once the payload is prepared to create a batch, a request-reply atom should be used with a Process Direct adapter. This adapter should be configured to call the address &lt;STRONG&gt;SAP_IBP_Write_-_Create_Batches&lt;/STRONG&gt;. This address is defined in the Reusable integration flow from SAP IBP to create a batch in IBP.&lt;/P&gt;&lt;P&gt;Once you call this process direct, an RFC function module is internally called by the reusable iFlows. It would return a XML payload with additional attributes in the IBPWriteBatch element. You can store these values using a xpath in a content modifier or an XSLT or a Groovy script. The XML structure would look like,&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
  &amp;lt;multimap:Messages xmlns:multimap="http://sap.com/xi/XI/SplitAndMerge"&amp;gt;
    &amp;lt;multimap:Message1&amp;gt;
      &amp;lt;IBPWriteBatch
        CallerId="AstalaVistaCaller_can_be_any"
        Command="INSERT_UPDATE"
        Destination="IBP_Production_Instan"
        Id="6440"
        Index="1"
        Key="MyKeyfigureKey"
        Name="Write Keyfigure data"
        PlanningArea="SAPIBP1"/&amp;gt;
    &amp;lt;/multimap:Message1&amp;gt;
&amp;lt;/multimap:Messages&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If you open the Data Integration Jobs application in SAP IBP, you can cross check for the Job ID 6440. This is a sequential number that is generated in SAP IBP.&lt;/P&gt;&lt;H2 id="toc-hId-752590953"&gt;POST data to IBP&lt;/H2&gt;&lt;P&gt;Using the batch id that was generated in the previous step, one can write data in packages. One can also instruct the package size and create a logic to loop over till all the data is written to IBP.&lt;/P&gt;&lt;P&gt;STEPS: Prepare the XML Payload and then call the Process Direct from the reusable iFlow&lt;/P&gt;&lt;P&gt;The following XML Attributes are mandatory while preparing the XML payload for &lt;STRONG&gt;posting master data&lt;/STRONG&gt; to IBP.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;Id&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;The Batch ID that was generated in the previous step from IBP&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“6440”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;BatchKey&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;A batch key valid in all the steps of the asynchronous process&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“MyKey”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;FileName&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;A Job name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“Write Master data”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;Destination&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;IBP destination as defined in the BTP sub account&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“IBP_Production_Instance”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;MasterDataPrefix&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;Prefix of the master data&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“AB1”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;MasterDataType&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;Master data type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“&lt;SPAN&gt;PRODTYPE&lt;/SPAN&gt;”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;FieldList&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;List of elements that belong to the master data type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“PRODTYPEID,PRODUCTDIM,PRODTYPEDESC”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;Item&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;Each record that you want to write to IBP must be enclosed in this item element&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;&amp;lt;item&amp;gt; &amp;lt;PRODTYPEID&amp;gt;885522&amp;lt;/PRODTYPEID&amp;gt; &amp;lt;PRODUCTDIM&amp;gt;Cat1&amp;lt;/PRODUCTDIM&amp;gt;&amp;lt;PRODTYPEDESC&amp;gt;Category 1 product&amp;lt;/PRODTYPEDESC&amp;gt;&amp;nbsp;&amp;lt;/item&amp;gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;The important thing to observe in the above table is the Field list and the Item elements. The field list contains the root attributes in a comma separated string. The item element contains the value of the root elements enclosed in the root attribute as element name. The following XML Attributes are optional while creating a batch for writing master data.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;DetailedTrace&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;For debugging&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;true or false&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;ProcessUnchangedData&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;For post processing&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;true or false&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;The following XSLT snippet contains a simple construct for creating a XML payload for writing master data.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;IBPWriteMasterData
  Id="{$batchId}"
  MasterDataType="{$IBPMasterDataType}"
  MasterDataPrefix="{$IBPMasterDataPrefix}"
  Destination="{$IBPDestination}"
  FileName="{$IBPJobName}"
  FieldList="{$IBPFieldList}"
  BatchKey="{$IBPJobName}"&amp;gt;                               

  &amp;lt;xsl:for-each select="$IBPPayloadXML/*/IBPData"&amp;gt; 
    &amp;lt;item&amp;gt;
      &amp;lt;xsl:copy-of select="*"/&amp;gt;
    &amp;lt;/item&amp;gt;
  &amp;lt;/xsl:for-each&amp;gt;
&amp;lt;/IBPWriteMasterData&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;A Sample XML payload with 1 record would look as below,&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;IBPWriteMasterData
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  Id="6440"
  MasterDataType="PRODTYPE"
  MasterDataPrefix="AB1"
  Destination="IBP_Production_Instance"
  FileName=" Write Master data "
  FieldList=" PRODTYPEID,PRODUCTDIM,PRODTYPEDESC "
  BatchKey="MyKey "&amp;gt;
  &amp;lt;item&amp;gt;
    &amp;lt;PRODTYPEID&amp;gt;885522&amp;lt;/PRODTYPEID&amp;gt;
    &amp;lt;PRODUCTDIM&amp;gt;Cat1&amp;lt;/PRODUCTDIM&amp;gt;
    &amp;lt;PRODTYPEDESC&amp;gt;Category 1 product&amp;lt;/PRODTYPEDESC&amp;gt;
  &amp;lt;/item&amp;gt;
&amp;lt;/IBPWriteMasterData&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The following XML Attributes are mandatory while &lt;STRONG&gt;posting keyfigure data&lt;/STRONG&gt; to IBP.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;Id&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;The Batch ID that was generated in the previous step from IBP&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;“6441”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;BatchKey&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;A batch key valid in all the steps of the asynchronous process&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;“MyKeyfigureKey”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;FileName&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;A Job name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;“Write Keyfigure data”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;Destination&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;IBP destination as defined in the BTP sub account&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;“IBP_Production_Instance”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;TimeDisaggregationLevel&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;Time level of the key figure data&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;1&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;FieldList&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;List of elements that belong to the master data type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;“PRDID,LOCID,CUSTID,PROMQTY,KEYFIGUREDATE”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;Item&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;Each record that you want to write to IBP must be enclosed in this item element&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;&amp;lt;item&amp;gt;&amp;lt;PRODID&amp;gt;885522&amp;lt;/PRODID&amp;gt;&amp;lt;LOCID&amp;gt;FP1&amp;lt;/LOCID&amp;gt;&amp;lt;CUSTID&amp;gt;1010&amp;lt;/CUSTID&amp;gt;&amp;lt;PROMQTY&amp;gt;100&amp;lt;/PROMQTY&amp;gt;&amp;lt;KEYFIGUREDATE&amp;gt;2025-07-15&amp;lt;/KEYFIGUREDATE&amp;gt;&amp;lt;/item&amp;gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;A Sample XML payload for writing key figures with 1 record would look as below,&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;IBPWriteKeyfigures xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  Id="6441"
  Destination="IBP_Production_Instance"
  FileName="Write Keyfigure data"
  FieldList="PRDID,LOCID,CUSTID,PROMQTY,KEYFIGUREDATE"
  TimeDisaggregationLevel="1"
  BatchKey="MyKeyfigureKey"&amp;gt;
  &amp;lt;item&amp;gt;
    &amp;lt;PRODID&amp;gt;885522&amp;lt;/PRODID&amp;gt;
    &amp;lt;LOCID&amp;gt;FP1&amp;lt;/LOCID&amp;gt;
    &amp;lt;CUSTID&amp;gt;1010&amp;lt;/CUSTID&amp;gt;
    &amp;lt;PROMQTY&amp;gt;100&amp;lt;/PROMQTY&amp;gt;
    &amp;lt;KEYFIGUREDATE&amp;gt;2025-07-15&amp;lt;/KEYFIGUREDATE&amp;gt;
  &amp;lt;/item&amp;gt;
&amp;lt;/IBPWriteKeyfigures&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The actual IBP payload can also be combined with a JSON structure if needed. One can use a XSLT transformation to create this payload for pure XML. Groovy can be used to create both XML as well as a combination of XML and JSON payloads. The steps can be created in side a local integration process and called from the main process. It can look like below,&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Write_to_IBP.jpg" style="width: 536px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288718i410EB592320A0800/image-size/large?v=v2&amp;amp;px=999" role="button" title="Write_to_IBP.jpg" alt="Write_to_IBP.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig.4 Local integration flow to write data. Can be called in a loop.&lt;/P&gt;&lt;P&gt;Once the payload is prepared to write data, a request-reply atom should be used with a Process Direct adapter. This adapter should be configured to call the address &lt;STRONG&gt;SAP_IBP_Write_-_Post_Data&lt;/STRONG&gt;. This address is defined in the Reusable integration flow from SAP IBP to create a batch in IBP. Once the RFC request is made, the response from the reusable iflow would contain the original request as well as the following response while writing key figure data.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;IBPWriteKeyfigures xmlns:multimap="http://sap.com/xi/XI/SplitAndMerge" Status="OK"&amp;gt;
  &amp;lt;Request&amp;gt;… original payload …&amp;lt;/Request&amp;gt;
  &amp;lt;Response&amp;gt;
    &amp;lt;Status&amp;gt;OK&amp;lt;/Status&amp;gt;
    &amp;lt;Messages&amp;gt;
      &amp;lt;Message Type="Information"&amp;gt;Initialization of file &amp;lt;&amp;lt;filename&amp;gt;&amp;gt; is completed.&amp;lt;/Message&amp;gt;
    &amp;lt;/Messages&amp;gt;
  &amp;lt;/Response&amp;gt;
&amp;lt;/IBPWriteKeyfigures&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-556077448"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Post processing&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Once the data is posted to IBP, a post processing job is triggered which would validate the master data as well as the consistency of the key figure value as defined in the planning area. One can initiate a post processing check using the following XML mandatory XML elements for Master data&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Key&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;A batch key valid in all the steps of the asynchronous process&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“MyKey”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;A Job name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“Write Master data”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Destination&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;IBP destination as defined in the BTP sub account&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“IBP_Production_Instance”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Command&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;RFC operation with the data&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“INSERT_UPDATE”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Id&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;Batch ID generated while creating batches&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“6440”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;A Sample payload would look like this,&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;IBPWriteBatches&amp;gt;
  &amp;lt;IBPWriteBatch
    Command="INSERT_UPDATE"
    Destination=" IBP_Production_Instance"
    Id="6440"
    Key=" MyKey "
    Name=" Write Master data "
    DetailedTrace="true"
    ProcessUnchangedData="false"/&amp;gt;
&amp;lt;/IBPWriteBatches&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Sample payload for Post processing key figure batch&amp;nbsp; would look like below&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;IBPWriteBatches&amp;gt;
  &amp;lt;IBPWriteBatch
    Command="INSERT_UPDATE"
    Destination=" IBP_Production_Instance "
    Id="6441"
    Index="1"
    Key=" MyKeyfigureKey "
    Name="My Keyfigure data"
    PlanningArea=" SAPIBP1"
    DetailedTrace="true"
    ProcessUnchangedData="false"/&amp;gt;
&amp;lt;/IBPWriteBatches&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;These XML payloads can be generated using a Content Modifier Atom. Once the payload is generated in the body, a request-reply atom can be used with a Process Direct adapter. The address in the adapter would be:&lt;STRONG&gt; SAP_IBP_Write_-_Process_Posted_Data&lt;/STRONG&gt;. This would close the data integration for writing data into IBP. These steps can be built in a local integration process. Such a process can look like,&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="PostProcessing.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288719i76BFDBF7B56BA013/image-size/large?v=v2&amp;amp;px=999" role="button" title="PostProcessing.jpg" alt="PostProcessing.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig. 5 Local integration flow for Post processing&lt;/P&gt;&lt;P&gt;The above process can be called from the main integration flow.&lt;/P&gt;&lt;H2 id="toc-hId-359563943"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;In this blog I explained how you can leverage the SAP managed reusable iFlows from IBP to write data. &lt;A title="Reading data from SAP IBP" href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/using-sap-managed-iflows-for-time-series-data-integration-in-sap-ibp-part-1/ba-p/14156722" target="_blank"&gt;In another blog&lt;/A&gt;, I explained how to read data using the same reusable package from SAP. Hope these blogs come handy for any developer to build your own custom iFlows for reading or writing data from SAP IBP to external systems.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/using-sap-managed-iflows-for-time-series-data-integration-in-sap-ibp-part-2/ba-p/14156739"/>
    <published>2025-07-18T19:30:36.532000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-postman-to-solace-event-publishing-using-sap-cpi/ba-p/14151036</id>
    <title>Event driven architecture Postman to Solace: Event Publishing Using SAP CPI  : part-4</title>
    <updated>2025-07-20T14:40:42.941000+02:00</updated>
    <author>
      <name>pavanKolla</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2108029</uri>
    </author>
    <content>&lt;P&gt;Hello SAP Community!&lt;/P&gt;&lt;P&gt;In this blog i would like to share the implementation of publisher part of my use case Event driven architecture using solace Event broker.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-1 : Setup a postman :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use the method POST and use the SAP cpi endpoint in the url section&amp;nbsp; and hit with the target payload that i am given below&lt;/P&gt;&lt;P&gt;Payload:&lt;/P&gt;&lt;P&gt;If its product's:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Products&amp;gt;
    &amp;lt;Product&amp;gt;
        &amp;lt;ProductID&amp;gt;P1001&amp;lt;/ProductID&amp;gt;
        &amp;lt;ProductName&amp;gt;Wireless Mouse&amp;lt;/ProductName&amp;gt;
        &amp;lt;Category&amp;gt;Electronics&amp;lt;/Category&amp;gt;
        &amp;lt;Price&amp;gt;25.99&amp;lt;/Price&amp;gt;
        &amp;lt;Currency&amp;gt;USD&amp;lt;/Currency&amp;gt;
        &amp;lt;StockQuantity&amp;gt;150&amp;lt;/StockQuantity&amp;gt;
        &amp;lt;UnitOfMeasure&amp;gt;EA&amp;lt;/UnitOfMeasure&amp;gt;
        &amp;lt;Supplier&amp;gt;LogiTech Inc.&amp;lt;/Supplier&amp;gt;
    &amp;lt;/Product&amp;gt;
 &amp;lt;/Products&amp;gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If it's suppliers :&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Suppliers&amp;gt;
    &amp;lt;Supplier&amp;gt;
        &amp;lt;ID&amp;gt;P1001&amp;lt;/ID&amp;gt;
        &amp;lt;Name&amp;gt;Wireless Mouse&amp;lt;/Name&amp;gt;
        &amp;lt;Category&amp;gt;Electronics&amp;lt;/Category&amp;gt;
        &amp;lt;Price&amp;gt;27.99&amp;lt;/Price&amp;gt;
        &amp;lt;Currency&amp;gt;USD&amp;lt;/Currency&amp;gt;
        &amp;lt;StockQuantity&amp;gt;200&amp;lt;/StockQuantity&amp;gt;
        &amp;lt;UnitOfMeasure&amp;gt;EA&amp;lt;/UnitOfMeasure&amp;gt;
        &amp;lt;Supplier&amp;gt;LogiTech Inc.&amp;lt;/Supplier&amp;gt;
    &amp;lt;/Supplier&amp;gt;
&amp;lt;/Suppliers&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step-2: Implementing layer-1-Routing layer:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1.start with HTTPS sender adapter&lt;/P&gt;&lt;P&gt;2.Add the Groovy Script to separate the target 2nd layer&lt;/P&gt;&lt;P&gt;Here is the groovy code :&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.util.XmlSlurper

Message processData(Message message) {
    def body = message.getBody(String) // Get XML as a string
    def xml = new XmlSlurper().parseText(body) // Parse XML

    def targetRoute = ""

    // Check the root element or a specific tag (adjust as needed)
    if (xml.name() == "Products") {
        targetRoute = "publisher_solace_inbound_products_layer-2"
    } else if (xml.name() == "Suppliers") {
        targetRoute = "publisher_solace_inbound_suppliers_layer_2"
    } else {
        targetRoute = "publisher_solace_inbound_books_layer_2"
    }

    message.setProperty("routeTo", targetRoute) // Store the route in a property
    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Implementation: This is the Routing layer paste the groovy code that i given above .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="layer1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285791iF48C381B451E6CC3/image-size/large?v=v2&amp;amp;px=999" role="button" title="layer1.png" alt="layer1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the Exception Handling like the below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1ex.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285793i034C0EBC623E6091/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1ex.png" alt="l1ex.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Declare the content modifier like below add Exchange properties like below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1cm1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285792i7E82A8BC3E4CC29C/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1cm1.png" alt="l1cm1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Add the routing condition to separate whether it is recoverable/non-recoverable errors&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1r1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285798i2BEB5132CC69BB50/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1r1.png" alt="l1r1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1r2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285799i63C98E8D05D6DDCB/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1r2.png" alt="l1r2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Based the routing condition above implement the Local Integration Process separately this is the&amp;nbsp;Local Integration Process for the retry purpose called by using process call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip1.png" style="width: 713px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285794iC71111671BFF36F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip1.png" alt="l1lip1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the content modifier as like the below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lipcm1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285800i9F49724C5DD8D6B7/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lipcm1.png" alt="l1lipcm1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Through process direct adapter call the another layers that are global retry layers and jms retry for retry purpose&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip1processdir.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285803i580F57A13C5E319E/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip1processdir.png" alt="l1lip1processdir.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Based the routing condition above implement the Local Integration Process separately this is the&amp;nbsp;Local Integration Process for the Mail triggering if any Business logic/non-recoverable error occurs called by using process call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip2.png" style="width: 697px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285795i85B14D3622E34C66/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip2.png" alt="l1lip2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the content modifier like the below for mail triggering&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip2cm1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285801i88F68C1F014C0191/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip2cm1.png" alt="l1lip2cm1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Through process direct adapter call the mail triggering iflow&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip2processdir.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285804iCBB81ECE35FC195B/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip2processdir.png" alt="l1lip2processdir.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-3 : Implementing layer -2: publishing layer :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here in this layer the data which is coming from the layer 1 is published to the solace queues and in this layer there are multiple layer-2's like products layer2 ,suppliers layer2,books layer2 bases on the first layer the target 2nd layer been hitted.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Implementation:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Configure the Process direct sender adapter that is coming from the layer-1&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="layer2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285806i754DFB221444871C/image-size/large?v=v2&amp;amp;px=999" role="button" title="layer2.png" alt="layer2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2processdirect.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285813iC9BC2FB6DB5A2FF1/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2processdirect.png" alt="l2processdirect.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure the Advance Event Mesh adapter to publish the data into the solace queues, before configuring it make sure you had setup the solace credentials in the Security material that i had given in the part-2 of my blog series&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2aemq.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285807i085F908775E53A57/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2aemq.png" alt="l2aemq.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2aemq2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285808iF7E9F37A30C0DE50/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2aemq2.png" alt="l2aemq2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Setup the Exception handling for retry purpose&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2ex.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285809iC2E0965EFC5D7620/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2ex.png" alt="l2ex.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the Local Integration process for retry purpose&amp;nbsp; as same as the layer-1 above&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2lip1.png" style="width: 732px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285810i1F04D0EE85B899F7/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2lip1.png" alt="l2lip1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the Local Integration process for mail triggering as same like the layer -1 above&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2lip2.png" style="width: 702px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285811i2E9A319F0145CB4E/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2lip2.png" alt="l2lip2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you want to know how to implement Error handling using jms please refer my blog .&lt;/P&gt;&lt;P&gt;Link - [ &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/handling-connectivity-and-recoverable-errors-in-sap-cpi-with-jms-queues/ba-p/14137974" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/handling-connectivity-and-recoverable-errors-in-sap-cpi-with-jms-queues/ba-p/14137974&lt;/A&gt;&amp;nbsp;]&lt;/P&gt;&lt;P&gt;I would continue the Subscriber part in the part-5 Stay tuned!!!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-postman-to-solace-event-publishing-using-sap-cpi/ba-p/14151036"/>
    <published>2025-07-20T14:40:42.941000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-codejam-blog-posts/sap-integration-suite-codejam-roadshow-in-india-recap/ba-p/14157220</id>
    <title>SAP Integration Suite CodeJam roadshow in India - recap</title>
    <updated>2025-07-20T14:41:41.263000+02:00</updated>
    <author>
      <name>ajmaradiaga</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/107</uri>
    </author>
    <content>&lt;P&gt;What an eventful week it was! (No pun intended)..... Together with &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/149819"&gt;@ajay_soreng&lt;/a&gt;, we did one SAP CodeJam per day - 3 different cities (Mumbai, Hyderabad, and Bengaluru), 5 different locations, 3 different topics (SAP Integration Suite, SAP Build Process Automation, and SAP Integration Suite, advanced event mesh).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="roadshow-india-2025.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288924iA21D5296DD08DE86/image-size/medium?v=v2&amp;amp;px=400" role="button" title="roadshow-india-2025.jpg" alt="roadshow-india-2025.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Everything was planned to perfection but I had a mental misstep. I mistakenly thought that there was a visa on arrival when traveling to India when in reality it requires applying for an e-visa. Unfortunately, I only found this when I was doing my check-in - Saturday, exactly 12 hours before my flight, a bit late right? I immediately applied for an e-visa but given that it was a Saturday I had to wait till Monday for a resolution. Don't get me wrong, the e-visa process is really good and fast but you can't expect much when you end up applying for it too late.&lt;/P&gt;&lt;P&gt;The adventure only starts here...I joined the first event remotely, from Madrid. Once I receive the e-visa approval, I had 4.5 hours to catch the next plane leaving Madrid heading to India. The second event, I also joined it remotely, but this time from Abu Dhabi. The plane touched ground at 06:35, after going through security, I immediate started searching for a quiet place to join the 2nd CodeJam of the week. Fortunately, I found one :-). Straight after the event, I boarded a plane to Hyderabad - not kidding, I was walking to the gate as we were wrapping up the event. I closed my laptop a minute before boarding. Finally, I made it to Hyderabad Tuesday night and I was able to join the last three events in-person. I sincerely want to apologise to the attendees of the first two events as I wasn't able to be there in-person but it was great meeting you virtually; also, doing the event remotely would have not been possible if it wasn't for the great help and support from &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/149819"&gt;@ajay_soreng&lt;/a&gt;&amp;nbsp;and &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/141830"&gt;@Shilpa_Shankar&lt;/a&gt;&amp;nbsp;- Thanks to you both!&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;Apart from the physical badges (stickers) that many of the attendees got. All attendees of the different SAP CodeJams will get a special SAP Community badge for attending the events 🪪.&lt;/EM&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ajmaradiaga_0-1753258051332.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290168i3223E0E71ABE9A86/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajmaradiaga_0-1753258051332.png" alt="ajmaradiaga_0-1753258051332.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="badges.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288949iDCAE9AA760B637AA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="badges.jpg" alt="badges.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1864266143"&gt;Mumbai&lt;/H3&gt;&lt;P&gt;In Mumbai we did the Connecting systems and services using SAP Integration Suite CodeJam at Colgate office. Thanks Colgate for hosting!&lt;/P&gt;&lt;P&gt;We recently introduced a new exercise where we interact with Slack and send notifications from Cloud Integration to Slack. It was exciting to see many attendees posting their notifications even after the event finished.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Mumbai-1.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288929i384BD5F8C8E7B777/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mumbai-1.jpg" alt="Mumbai-1.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Mumbai-2.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288928i04D509A64CB2DAC2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mumbai-2.jpg" alt="Mumbai-2.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Mumbai3.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288927iA5B11035ADD14E96/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mumbai3.jpg" alt="Mumbai3.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-1667752638"&gt;Hyderabad&lt;/H3&gt;&lt;P&gt;In Hyderabad it was all about SAP Integration Suite, advanced event mesh. We ran the Event-driven integrations CodeJam at two different locations. Thanks Mindset and Infosys for hosting the events. I joined the first one remotely from Abu Dhabi and finally in-person for the second event.&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;H3 id="toc-hId-1471239133"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hyderabad-1-1.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288933i5B24B27EA761BB8A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hyderabad-1-1.jpg" alt="Hyderabad-1-1.jpg" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;H3 id="toc-hId-1274725628"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hyderabad-1-2.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288931iD9F8E12E1DAC89F1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hyderabad-1-2.jpg" alt="Hyderabad-1-2.jpg" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;H3 id="toc-hId-1078212123"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hyderabad-1-group.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288935i2B83F397436377F3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hyderabad-1-group.jpg" alt="Hyderabad-1-group.jpg" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;H3 id="toc-hId-881698618"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hyderabad-2-1.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288932i88B59183CE57810B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hyderabad-2-1.jpg" alt="Hyderabad-2-1.jpg" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;H3 id="toc-hId-685185113"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hyderabad-2-2.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288930iB6EC1E5C3CF9926E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hyderabad-2-2.jpg" alt="Hyderabad-2-2.jpg" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;H3 id="toc-hId-488671608"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hyderabad-2-3.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288934i4E9D25F58892EA3C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hyderabad-2-3.jpg" alt="Hyderabad-2-3.jpg" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-292158103"&gt;Bengaluru&lt;/H3&gt;&lt;P&gt;Last city part of the SAP Integration Suite CodeJam roadshow. At Bengaluru, we ran the new SAP Build: Event-based processes and also the Connecting systems and services with SAP Integration Suite CodeJams at SAP Labs Bengaluru and Mindset Consulting, thanks for hosting. We were fortunate enough to be joined by the entire SAP Developer Advocates team based in India (&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/142394"&gt;@sheenamk&lt;/a&gt;,&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/148298"&gt;@eshrinivasan&lt;/a&gt;,&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/156020"&gt;@Rekha_DR&lt;/a&gt;,&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/141830"&gt;@Shilpa_Shankar&lt;/a&gt;), as well as by &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/151637"&gt;@acharyaw&lt;/a&gt;&amp;nbsp;- PM for SAP Build Process Automation.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Bengaluru-1-1.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288937i424C8DEBEEC52FD0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bengaluru-1-1.jpg" alt="Bengaluru-1-1.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Bengaluru-1-2.jpg" style="width: 300px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288938i7163122E62A141B7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bengaluru-1-2.jpg" alt="Bengaluru-1-2.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="IMG_0665.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288943iDBAB2659C9AFBA8B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="IMG_0665.jpg" alt="IMG_0665.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Bengaluru-1-3.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288939i0B8E3AD187D5501F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bengaluru-1-3.jpg" alt="Bengaluru-1-3.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Bengaluru-2-2.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288940i06A58CFFDEEDDED5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bengaluru-2-2.jpg" alt="Bengaluru-2-2.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="IMG_5130.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288944iD682876580371C97/image-size/medium?v=v2&amp;amp;px=400" role="button" title="IMG_5130.jpg" alt="IMG_5130.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-95644598"&gt;Food&lt;/H3&gt;&lt;P&gt;Last but certainly not least... all the lovely food that we enjoyed as part of the roadshow. Thanks to all the hosts.... the food was amazing everywhere haha.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="food-1.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288948iB60C38BE728F12C8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="food-1.jpg" alt="food-1.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="food-2.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288946i30C1E6F5B2F6EFA8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="food-2.jpg" alt="food-2.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="food-3.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288950i56AF8720B3BD719A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="food-3.jpg" alt="food-3.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="food-4.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288951i6FA1BFE65EC8F9A5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="food-4.jpg" alt="food-4.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="food-5.jpg" style="width: 300px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288953i0A4E2306D32D693B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="food-5.jpg" alt="food-5.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="food-6.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288947iF92C4541653EFBFE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="food-6.jpg" alt="food-6.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Lots of lessons learned from the mental misstep and there might be cool things and opportunities coming up thanks to it. Also, this wouldn't have been possible without &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/149819"&gt;@ajay_soreng&lt;/a&gt;'s help organising the events and supporting me while I was remotely - Thanks!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/sap-codejam-blog-posts/sap-integration-suite-codejam-roadshow-in-india-recap/ba-p/14157220"/>
    <published>2025-07-20T14:41:41.263000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/improving-exception-handling-using-generative-ai-in-sap-cloud-integration/ba-p/14157298</id>
    <title>Improving Exception Handling using Generative AI in SAP Cloud Integration (SAP CI/CPI)</title>
    <updated>2025-07-20T22:13:28.565000+02:00</updated>
    <author>
      <name>adarshrao_rao</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/882299</uri>
    </author>
    <content>&lt;P&gt;When it comes to integrating different systems within a business, SAP Cloud Integration (SAP CI/CPI) capability in Integration Suite Service of SAP BTP is a go-to tool. However, as these integrations become more complex, handling exceptions - errors and issues, efficiently becomes increasingly important. Generative AI can help businesses tackle these challenges by automating error detection and providing useful insights. Here’s what you can gain from using AI:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;User - Friendly Error Messages&lt;/STRONG&gt;: Sender systems can receive clear, simple error messages that anyone can understand, not just tech experts.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Better Monitoring&lt;/STRONG&gt;: You can see these user-friendly error message logs in SAP CI/CPI dashboards, making it easier to track and fix issues.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Identify Error Causes&lt;/STRONG&gt;: AI can help identify why an error occurred, offering a better understanding of the issue.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Suggest Solutions&lt;/STRONG&gt;: It can also suggest ways to address and fix the error.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Simplify Troubleshooting&lt;/STRONG&gt;: Both tech and non-tech staff can troubleshoot errors more easily.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Reduce Resolution Time&lt;/STRONG&gt;: Speed up the process of solving errors.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Prepare for the Future&lt;/STRONG&gt;: The insights gained can improve how errors are classified and handled in the future by agentic AIs in SAP BTP.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1735183649"&gt;1. Exception Handling&lt;/H2&gt;&lt;P&gt;There are two main ways to integrate AI into your error handling processes in SAP CI/CPI:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Exception Subprocess&lt;/STRONG&gt;: Incorporate Generative AI into an existing integration flow’s exception subprocess for smooth operation. &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/handle-exceptions-guidelines-basics?locale=en-US&amp;amp;q=handling+error" target="_self" rel="noopener noreferrer"&gt;Read More&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Common Exception Handling iFlow&lt;/STRONG&gt;: Set up a separate flow dedicated to handling exceptions, where you pass error information from the main flow for centralized handling. &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/outsource-exception-handling-into-separate-integration-flow?locale=en-US&amp;amp;q=common+error+handling" target="_self" rel="noopener noreferrer"&gt;Read More&lt;/A&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;In this example, I have used &amp;nbsp;exception subprocess approach within a simple integration flow and Google Gemini AI model.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_0-1753038949536.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288966iBC2882D3D965BC0A/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_0-1753038949536.png" alt="adarshrao_rao_0-1753038949536.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1538670144"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1342156639"&gt;2. Understanding Gen-AI Prompt Format and get API Key&lt;/H2&gt;&lt;P&gt;For Google Gemini, go to &lt;A href="https://aistudio.google.com/prompts/new_chat" target="_blank" rel="noopener nofollow noreferrer"&gt;https://aistudio.google.com/prompts/new_chat&lt;/A&gt; and click on Get API Key, Create API Key.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_1-1753038949539.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288967iBF9B7A104E0D596F/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_1-1753038949539.png" alt="adarshrao_rao_1-1753038949539.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_2-1753038949545.png" style="width: 631px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288968i9889286D348144CD/image-dimensions/631x470?v=v2" width="631" height="470" role="button" title="adarshrao_rao_2-1753038949545.png" alt="adarshrao_rao_2-1753038949545.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here, you can see the format of the request which is expected by Google Gemini API.&lt;/P&gt;&lt;H2 id="toc-hId-1145643134"&gt;3. Implementation Steps&lt;/H2&gt;&lt;P&gt;Following are the steps which I have implemented in Exception Subprocess&lt;/P&gt;&lt;P&gt;1. Content Modifer - Set APIKey &amp;amp; Gen-AI Prompt&lt;BR /&gt;To set the API key and content type as requested by Google Gemini&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_3-1753038949546.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288969i4D1FA3BC99C83904/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_3-1753038949546.png" alt="adarshrao_rao_3-1753038949546.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To set the required prompt format, I have created the below exchange properties and externalized it&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_4-1753038949548.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288970iB2A656592833DC0D/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_4-1753038949548.png" alt="adarshrao_rao_4-1753038949548.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Value stored in Gen AI prompt is&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{     "contents": [       {         "parts": [           {             "text": " You are an SAP Integration consultant skilled in troubleshooting in SAP Cloud Integration (CPI). Above error is persisting while sending the message from sender to receiver system. For this error, Please respond using the following format, with each section clearly separated by a single line break in a direct and professional tone: 1. User-Friendly Error Message: A one sentence error that can be easily understood by non-technical stakeholders 2. Possible Reasons for the Error: List common causes for encountering this error in SAP CPI integration scenarios. 3. Possible Steps to Resolve the Error: Provide possible troubleshooting steps to address the issue and potentially resolve it. 4. HTTP Response: Provide appropriate HTTP error code (numerical value only) to be sent to sender system. "            }         ]       }     ]   }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;&lt;U&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt;&lt;/U&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;All the values are externalized so that, different models like Microsoft Co-pilot or GTP 4 can be used.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;2. Groovy script – setGenAIPrompt&lt;/P&gt;&lt;P&gt;This script is used to get the error which is caught from the main integration process by the CamelExceptionCaught property, add this error in the prompt to get the tailored response from Gemini and set the prompt structure required by Gemini AI model.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message



def Message processData(Message message) {

    // Retrieve properties from the message

    def camelExceptionCaught = message.getProperty("CamelExceptionCaught")

    def genAIPrompt = message.getProperty("GenAIPrompt")

    def startPrompt = message.getProperty("StartPrompt")



    // Initialize updatedGenAIPrompt as null or empty, it'll be used to set message body eventually

    def updatedGenAIPrompt = null

   

    if (genAIPrompt &amp;amp;&amp;amp; startPrompt &amp;amp;&amp;amp; camelExceptionCaught) {

        // Find the position of startPrompt in genAIPrompt

        def startIndex = genAIPrompt.indexOf(startPrompt)



        if (startIndex != -1) {

            // Insert space and CamelExceptionCaught after StartPrompt

            updatedGenAIPrompt = genAIPrompt.substring(0, startIndex + startPrompt.length()) +

                                 " " +

                                 camelExceptionCaught +

                                 genAIPrompt.substring(startIndex + startPrompt.length())

                                

            // Set the updatedGenAIPrompt back to a message property

            message.setProperty("UpdatedGenAIPrompt", updatedGenAIPrompt)

        }

    }

   

    if (updatedGenAIPrompt != null) {

        // Set the modified prompt as the message body

        message.setBody(updatedGenAIPrompt)

    }

   

    return message

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Request Reply - Call Google Gemini&lt;/P&gt;&lt;P&gt;I have use HTTP adapter to call Google Gemini&lt;BR /&gt;URL: &lt;A href="https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent" target="_blank" rel="noopener nofollow noreferrer"&gt;https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_5-1753038949550.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288971i460BFCF5B4A5CCA3/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_5-1753038949550.png" alt="adarshrao_rao_5-1753038949550.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4. Groovy script – captureGenAIResponse&lt;/P&gt;&lt;P&gt;This groovy script is used to capture Custom Error, Possible reason and Possible solution for the error from Gen AI response. Also, handle the errors caused if generative AI is not reachable&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message

import groovy.json.JsonSlurper



def Message processData(Message message) {

    // Retrieve properties

    def captureCustomErrorKey = message.getProperty("CaptureCustomError")

    def capturePossibleReasonKey = message.getProperty("CapturePossibleReason")

    def capturePossibleSolutionKey = message.getProperty("CapturePossibleSolution")

    def captureHTTPCodeKey = message.getProperty("CaptureHTTPCode")  // This should be "HTTP Response:"



    // Get the message body and parse it as JSON

    def payload = message.getBody(String)

    def jsonSlurper = new JsonSlurper()



    // Initialize extracted values

    def extractedCustomErrorMessage = null

    def extractedPossibleReason = null

    def extractedPossibleSolution = null

    def extractedPHTTPCode = null



    try {

        // Try parsing the JSON

        def parsedJson = jsonSlurper.parseText(payload)

       

        // Extract the text section from the JSON

        def textContent = parsedJson.candidates[0]?.content?.parts[0]?.text



        if (textContent) {

            // Log the text content to verify structure

            messageLogFactory.getMessageLog(message)?.addAttachmentAsString("Text Content", textContent, "text/plain")



            // Extract values based on keys

            extractedCustomErrorMessage = extractValueFollowingKey(textContent, captureCustomErrorKey)

            extractedPossibleReason = extractValueFollowingKey(textContent, capturePossibleReasonKey)

            extractedPossibleSolution = extractValueFollowingKey(textContent, capturePossibleSolutionKey)



            // Specifically extract the HTTP response code after "HTTP Response:"

            extractedPHTTPCode = extractHTTPResponseCode(textContent, captureHTTPCodeKey)

        }

    } catch (Exception e) {

        // Log exception and proceed with null outputs

        messageLogFactory.getMessageLog(message)?.addAttachmentAsString("Exception", e.toString(), "text/plain")

    }



    // Handle extraction results

    message.setProperty("ExtractedCustomErrorMessage", extractedCustomErrorMessage)

    message.setProperty("ExtractedPossibleReason", extractedPossibleReason)

    message.setProperty("ExtractedPossibleSolution", extractedPossibleSolution)

    message.setProperty("ExtractedPHTTPCode", extractedPHTTPCode)

   

    // Set HTTP Code as the message body for demonstration; it will be null if extraction fails

    message.setBody(extractedPHTTPCode)



    return message

}



// Function to extract value that follows a given key in the text content

def extractValueFollowingKey(String textContent, String key) {

    if (key) {

        def keyIndex = textContent.indexOf(key)

        if (keyIndex != -1) {

            def startIndex = keyIndex + key.length()

            if (startIndex != -1) {

                def endIndex = textContent.indexOf("\n\n", startIndex)

                endIndex = endIndex != -1 ? endIndex : textContent.length()



                def extractedText = textContent.substring(startIndex, endIndex).trim()

                extractedText = extractedText.replaceAll('\\*', '')  // Clean up undesired characters

                return extractedText

            }

        }

    }

    return null

}



// Specific extraction utility for HTTP Code.

def extractHTTPResponseCode(String textContent, String key) {

    if (key) {

        def keyIndex = textContent.indexOf(key)

        if (keyIndex != -1) {

            def startIndex = keyIndex + key.length()

            if (startIndex != -1) {

                // Find the end, which is the next newline after the code and description

                def endIndex = textContent.indexOf("\n", startIndex)

                endIndex = endIndex != -1 ? endIndex : textContent.length()



                return textContent.substring(startIndex, endIndex).trim()

            }

        }

    }

    return null

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;5. Content Modifier - Set Content Type for Error Response&lt;/P&gt;&lt;P&gt;In this content modifier the header Content-Type is explicitly set if the error response needs to be sent to the sender system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_6-1753038949551.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288972i59DE40D618C2F062/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_6-1753038949551.png" alt="adarshrao_rao_6-1753038949551.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6. Groovy Script – generateErrorResponse&lt;/P&gt;&lt;P&gt;This script is used to log the custom error in the error log, create custom headers and generate an error response if the sender system needs it. I have implemented all the three in this script to show that it is possible.&lt;/P&gt;&lt;P&gt;Based on your requirement, custom error log or custom header or error response can be set.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message



def Message processData(Message message) {

    // Retrieve properties

    def camelExceptionCaught = message.getProperty("CamelExceptionCaught")

    def extractedCustomErrorMessage = message.getProperty("ExtractedCustomErrorMessage")

    def extractedPossibleReason = message.getProperty("ExtractedPossibleReason")

    def extractedPossibleSolution = message.getProperty("ExtractedPossibleSolution")

    def extractedPHTTPCode = message.getProperty("ExtractedPHTTPCode")



    // Set the CamelHttpResponseCode header

    if (extractedPHTTPCode) {

        message.setHeader("CamelHttpResponseCode", extractedPHTTPCode)

    }



    // Create custom headers

    def messageLog = messageLogFactory.getMessageLog(message)

    if (messageLog != null) {

        messageLog.addCustomHeaderProperty("CustomError", extractedCustomErrorMessage ?: "No custom error message available.")

        messageLog.addCustomHeaderProperty("PossibleReason", extractedPossibleReason ?: "No possible reason available.")

        messageLog.addCustomHeaderProperty("PossibleSolution", extractedPossibleSolution ?: "No possible solution available.")

    }



    // Attach extracted values as message attachments

    def possibleReasonAttachment = extractedPossibleReason ?: "No possible reason available."

    def possibleSolutionAttachment = extractedPossibleSolution ?: "No possible solution available."

   

    if (messageLog != null) {

        messageLog.addAttachmentAsString("PossibleReason", possibleReasonAttachment, "text/plain")

        messageLog.addAttachmentAsString("PossibleSolution", possibleSolutionAttachment, "text/plain")

    }



    // Create dynamic response in XML format

    def responseXml = """&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;

&amp;lt;Error_Response&amp;gt;

    &amp;lt;SystemError&amp;gt;${camelExceptionCaught}&amp;lt;/SystemError&amp;gt;

    &amp;lt;CustomError&amp;gt;${extractedCustomErrorMessage ?: "No custom error message available."}&amp;lt;/CustomError&amp;gt;

    &amp;lt;PossibleReason&amp;gt;${extractedPossibleReason ?: "No possible reason available."}&amp;lt;/PossibleReason&amp;gt;

    &amp;lt;PossibleSolution&amp;gt;${extractedPossibleSolution ?: "No possible solution available."}&amp;lt;/PossibleSolution&amp;gt;

&amp;lt;/Error_Response&amp;gt;"""



    // Set XML response as the message body

    message.setBody(responseXml)





if (camelExceptionCaught) {

        throw new Exception("\nSystem Error: ${camelExceptionCaught}\nCustom Error from GenAI: ${extractedCustomErrorMessage ?: 'No custom error message available.'}")

    }



    return message

}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-949129629"&gt;5. Testing&lt;/H2&gt;&lt;P&gt;To test, I am using an API client Bruno, which will mimic the sender system. I have maintained the receiver system URL as &lt;A href="http://sample.com" target="_blank" rel="noopener nofollow noreferrer"&gt;http://sample.com&lt;/A&gt;. So, the message will fail because it is not a valid URL.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_0-1753041124487.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288990i37656FA3E35862AC/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_0-1753041124487.png" alt="adarshrao_rao_0-1753041124487.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;1. Triggering the iflow from Bruno as shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_7-1753038949552.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288974iBDFDD5C97258E7F1/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_7-1753038949552.png" alt="adarshrao_rao_7-1753038949552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.&amp;nbsp; Without Exception Handling using Gen AI, I get the response as below in Bruno as shown below&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_8-1753038949552.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288973i97EAFCB3DDA4BF77/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_8-1753038949552.png" alt="adarshrao_rao_8-1753038949552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. In the iFlow, I have checked Return Exception to Sender under Error Configuration&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_9-1753038949553.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288975i4AEAA92853922641/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_9-1753038949553.png" alt="adarshrao_rao_9-1753038949553.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4. Now, with Exception Handling using Gen AI, I get the response in Bruno as shown below&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_10-1753038949554.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288977i7669DA012F9293C0/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_10-1753038949554.png" alt="adarshrao_rao_10-1753038949554.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. In Cloud Integration Message Monitoring we see that the message is in error&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_11-1753038949555.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288976i237CAC7C65B49FCB/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_11-1753038949555.png" alt="adarshrao_rao_11-1753038949555.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;6. Error log is as shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_12-1753038949557.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288978i90CBBCDD64DD9B4F/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_12-1753038949557.png" alt="adarshrao_rao_12-1753038949557.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;7. Custom Headers are successful set with Custom Error, Possible Reason and Possible Solution as shown below&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_13-1753038949559.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288980iBA66864E371C0162/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_13-1753038949559.png" alt="adarshrao_rao_13-1753038949559.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;8. Attachments are also set with Possible Reason and Possible Solution as shown below&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_14-1753038949561.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288979i0BBACD85C72B0099/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_14-1753038949561.png" alt="adarshrao_rao_14-1753038949561.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_15-1753038949563.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288981iD95F690D8E4F6E07/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_15-1753038949563.png" alt="adarshrao_rao_15-1753038949563.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_16-1753038949566.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288982i6175A8EA7C72658D/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_16-1753038949566.png" alt="adarshrao_rao_16-1753038949566.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9. If you have a requirement to send the error response with not just custom error from Gen AI but sending possible reason and solution then set the event in the Exception Subprocess as End Message. The only downside is the message in Cloud Integration will be end with status Completed rather than Error.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_17-1753038949567.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288983i970E4AB7AE6FEACB/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_17-1753038949567.png" alt="adarshrao_rao_17-1753038949567.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Go to Groovy Script - generateErrorResponse and comment the lines 46, 47 and 48 which was done to throw custom exception as shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_18-1753038949567.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288985i5C433E02AD507DF2/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_18-1753038949567.png" alt="adarshrao_rao_18-1753038949567.png" /&gt;&lt;/span&gt;In the script, I am setting the appropriate HTTP code for CamelHttpResponseCode from Google Gemini response.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_19-1753038949568.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288984i4FB20C444BA295A8/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_19-1753038949568.png" alt="adarshrao_rao_19-1753038949568.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;10. When the message is triggered, we can see that the error response is received in Bruno with correct HTTP response code as shown below.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_20-1753038949574.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288986i2F379F13D938CB7D/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_20-1753038949574.png" alt="adarshrao_rao_20-1753038949574.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;11. If the correct response code is not set from Google Gemini, then HTTP 200 is received in sender system which will be incorrect, and we can’t identify if the message failed or not without opening the response message&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_21-1753038949576.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288987i5EB710143ECB1B9A/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_21-1753038949576.png" alt="adarshrao_rao_21-1753038949576.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_22-1753038949580.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288989i5F1B3810894EA049/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_22-1753038949580.png" alt="adarshrao_rao_22-1753038949580.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;12. Now, if there is an issue with reaching Generative AI then it is handled in Groovy Scripts. For testing, I will use incorrect URL&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_23-1753038949583.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288988iB33A6C87CF1C1C78/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_23-1753038949583.png" alt="adarshrao_rao_23-1753038949583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-752616124"&gt;6. Conclusion&lt;/H2&gt;&lt;P&gt;In this blog, I have tried to provide an overview of how we can make use of Generative AI for Exception Handling in SAP Cloud Integration. Of course, the exception subprocess can be improved and tailored as per the requirement in your integration landscape.&lt;/P&gt;&lt;P&gt;Generative AI offers a new way to handle errors in SAP CI/CPI by automating processes that would typically take much longer. By enhancing error handling, businesses can reduce downtime and improve overall efficiency. With the technology constantly advancing, using AI in exception handling can help businesses stay ahead of the curve, making their operations more reliable. Through simple implementation steps, regular testing, and adapting based on feedback, businesses can fully leverage AI for a smarter, more resilient future.&lt;/P&gt;&lt;H2 id="toc-hId-556102619"&gt;7. Additional Read&lt;/H2&gt;&lt;P&gt;Exception Handling in SAP CPI : &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/handle-errors-gracefully?locale=en-US&amp;amp;q=handling+error" target="_self" rel="noopener noreferrer"&gt;SAP Help&lt;/A&gt;&lt;/P&gt;&lt;P&gt;I invite you to share your thoughts in the comments below. Whether you have questions about using generative AI for exception handling, experiences to share, or suggestions for improvement, your feedback is invaluable. It helps others who are navigating similar journeys and contributes to a community of shared knowledge. I look forward to hearing from you!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/improving-exception-handling-using-generative-ai-in-sap-cloud-integration/ba-p/14157298"/>
    <published>2025-07-20T22:13:28.565000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/demo-accessing-sap-with-generative-ai-in-microsoft-teams/ba-p/14150831</id>
    <title>Demo: Accessing SAP with Generative AI in Microsoft Teams</title>
    <updated>2025-07-21T03:13:01.221000+02:00</updated>
    <author>
      <name>prakashsaurav</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/12784</uri>
    </author>
    <content>&lt;P&gt;In this demo, we showcase how to bring SAP data closer to your teams by combining the power of Generative AI, Microsoft Copilot Studio, and Teams. Using SAP OData services exposed via SAP BTP Integration Suite, we build an intelligent Copilot agent that lets users retrieve sales orders, products, customers, and suppliers — all through simple natural language conversations. Whether it’s in Teams or Microsoft 365 Copilot, see how you can seamlessly access and interact with your SAP backend data, improving efficiency and transforming user experience.&lt;/P&gt;&lt;P&gt;&lt;A href="https://aditheos.com/2025/06/26/simplifying-sap-access-with-gen-ai-built-on-copilot-studio-integrated-via-sap-btp-azure-apim-delivered-in-teams-copilot/" target="_blank" rel="noopener nofollow noreferrer"&gt;Step by Step Implementation&lt;/A&gt;&amp;nbsp; &amp;nbsp;/&amp;nbsp;Access complete source code @&amp;nbsp;&lt;A href="https://github.com/aditheos/SalesAI" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FgdxKP7GCMn8%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DgdxKP7GCMn8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FgdxKP7GCMn8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="486" height="273" scrolling="no" title="Simplifying SAP Access with Gen AI | SAP BTP + Microsoft Copilot Studio Demo" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/demo-accessing-sap-with-generative-ai-in-microsoft-teams/ba-p/14150831"/>
    <published>2025-07-21T03:13:01.221000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/integration-advisor-multi-payload-support-for-mig-creation/ba-p/14151474</id>
    <title>Integration Advisor – multi-payload support for MIG creation</title>
    <updated>2025-07-21T09:34:44.613000+02:00</updated>
    <author>
      <name>Joerg_Ackermann</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/671194</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Today I would like to share with you another new feature: When creating a Message Implementation Guideline (MIG) based on payload, you can now supply multiple payloads and all payloads are considered together by the application. &lt;/SPAN&gt;&lt;SPAN&gt;In this blog post I will provide a short description of this new feature.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Joerg_Ackermann_0-1752477512988.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286051i1E2974BD02D1CE55/image-size/large?v=v2&amp;amp;px=999" role="button" title="Joerg_Ackermann_0-1752477512988.jpeg" alt="Joerg_Ackermann_0-1752477512988.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The picture before depicts the overall building blocks of Integration Advisor (of SAP Integration Suite). This blog post mainly relates to the Message Implementation Guideline area.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1080201607" id="toc-hId-1735006759"&gt;Short recap: Payload-based creation of MIGs&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Earlier this year I had shared with you a larger extension of our payload-based MIG Creation feature. With the extended feature you were able to provide a single payload and choose the MIG nodes that shall get automatically qualified. As a result,&amp;nbsp;&lt;/SPAN&gt;each qualifier value&amp;nbsp; present in the payload will create its own qualification variant in your MIG. Moreover, all nodes present in your payload will get automatically selected and example values are created based on the payload. For more details, please see my earlier blog post:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-payload-based-qualification-at-time-of-mig-creation/ba-p/13990599" target="_self"&gt;Link&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;By the way, this blog post also discussed in detail when you should qualify a MIG node in your MIG structure and when it is better not to qualify.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-883688102" id="toc-hId-1538493254"&gt;MIG Creation with multiple payloads&lt;/H2&gt;&lt;P&gt;It quite frequently occurs that not all nodes or all qualification variants are present in only one payload. In order to use our payload-based MIG creation in the past, you needed to choose the best fitting payload for automatic consideration and afterwards add missing pieces manually.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now we have extended our payload-based MIG generation to also support multiple payloads. In the step&amp;nbsp;&lt;EM&gt;Sample Payload&lt;/EM&gt;&amp;nbsp; of the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;Create Message Implementation Guideline&lt;/EM&gt;&amp;nbsp;wizard you can provide a ZIP file containing multiple payloads.&amp;nbsp;&lt;SPAN&gt;Refer next screenshot for an illustration.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="screenshot1.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286126i949D48FE4D7D4182/image-size/large?v=v2&amp;amp;px=999" role="button" title="screenshot1.jpg" alt="screenshot1.jpg" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Keep in mind the following technical details:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The ZIP file can have a maximum size of 10MB and up-to 25 payloads will be considered.&lt;/LI&gt;&lt;LI&gt;The options &lt;EM&gt;SAP Cloud Integration&lt;/EM&gt; and &lt;EM&gt;SAP Process Integration&lt;/EM&gt; expect XML files as input.&lt;/LI&gt;&lt;LI&gt;The third option &lt;EM&gt;EDI Flat File&lt;/EM&gt; is only available for EDI Type Systems (like ASC X12 or UN/EDIFACT) and requires TXT files.&lt;/LI&gt;&lt;LI&gt;Your ZIP archive might contain other files types (like PDF,&amp;nbsp; XSD etc.) - these are simply ignored.&lt;/LI&gt;&lt;LI&gt;Your ZIP archive might come with subfolders and all suitable files are extracted from the complete archive.&lt;/LI&gt;&lt;LI&gt;Additionally, the extracted payload files (XML or TXT files depending on your choice) must fit to the Message Type for which you want to create your new MIG. Otherwise these payload files can't be considered.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="screenshot2.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286127i2A527E1AF0E2D57B/image-size/large?v=v2&amp;amp;px=999" role="button" title="screenshot2.jpg" alt="screenshot2.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The MIG Creation wizard now finishes with a pop-up window that summarizes which payloads were successfully applied and which payload files in the ZIP archive were not suitable. For an example refer the screenshot above.&lt;/P&gt;&lt;H2 id="toc-hId-687174597" id="toc-hId-1341979749"&gt;Result of the MIG Creation&lt;/H2&gt;&lt;P&gt;All the (successfully processed) payloads will contribute to the automatic customization of your new MIG. More specifically:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Qualified nodes: If you have chosen the automatic qualification for a node (in step &lt;EM&gt;Select Nodes&lt;/EM&gt; of the MIG creation wizard), each qualifier value&amp;nbsp; present in at least one of the payloads will create its own qualification variant.&lt;/LI&gt;&lt;LI&gt;Selection of nodes: A&amp;nbsp;node will automatically get selected in your MIG if the node is used in at least one of your payloads.&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Please note that the option to add Example Values is not available in case of multiple payloads because input from several payloads can't be combined to auto-generate the MIG Example Payload in a meaningful way.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-490661092" id="toc-hId-1145466244"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;With this feature extension you can benefit from the payload-based MIG creation even more as it allows you to build your Message Implementation Guidelines (MIGs) faster and with less manual effort.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-294147587" id="toc-hId-948952739"&gt;&lt;STRONG&gt;Further reading&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/integration-advisor-overview-of-components-for-building-b2b-integration/ba-p/13512772" target="_blank"&gt;https://community.sap.com/t5/technology-blogs-by-sap/integration-advisor-overview-of-components-for-...&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/integration-content-advisor-create-a-customized-interface-using-mig-editor/ba-p/13354699" target="_blank"&gt;https://community.sap.com/t5/technology-blogs-by-sap/integration-content-advisor-create-a-customized...&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-payload-based-qualification-at-time-of-mig-creation/ba-p/13990599" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-payload-based-qualification-at-time-of-mig-creation/ba-p/13990599&lt;/A&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/integration-advisor-multi-payload-support-for-mig-creation/ba-p/14151474"/>
    <published>2025-07-21T09:34:44.613000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/comparison-between-sap-cpi-and-mulesoft/ba-p/14157376</id>
    <title>Comparison between SAP CPI and Mulesoft</title>
    <updated>2025-07-21T13:19:29.990000+02:00</updated>
    <author>
      <name>stephen_xue</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/214851</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1606101827"&gt;Introduction&lt;/H1&gt;&lt;P&gt;Mulesoft Anypoint Platform is a middleware platfom acquired by Salesforce. It has been widely used in many industries. On the other hand, SAP has its Integration Suite Platform based on the BTP and it's purely on premise middleware product SAP PI/PO. What are the advantages and disadvantages of SAP middleware products? How do these characteristics impact the project implementation? Which middleware should we choose for a certain project solution? I'd like to make a comparison between them from the following aspects as a developer. The content can be a reference to the architects, or presales. and If you have any other opionions or coents, happy to leave behind. These are the aspects to be compared:&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Middleware Product Architecture, on cloud or on premise&lt;/LI&gt;&lt;LI&gt;Centra ERP System&lt;/LI&gt;&lt;LI&gt;Suitable Implementation Methodology&lt;/LI&gt;&lt;LI&gt;API Management Coupling&lt;/LI&gt;&lt;LI&gt;Design and Development&lt;/LI&gt;&lt;LI&gt;Debug tool for Development&lt;/LI&gt;&lt;LI&gt;Logging and Alert&lt;/LI&gt;&lt;LI&gt;Unit Test Tool&lt;/LI&gt;&lt;LI&gt;Mapping technique Complexity&lt;/LI&gt;&lt;LI&gt;Connector Diversity&lt;/LI&gt;&lt;LI&gt;DevOps Supporting Tool&lt;/LI&gt;&lt;LI&gt;Authentication and Authorization&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1409588322"&gt;Comparison&lt;/H1&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-1342157536"&gt;Middleware Product Architecture, on cloud or on premise&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The middleware Mulesoft consists of The Mulesoft Anypoint Studio and Mulesoft Anypoint Platform.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_1-1753074889983.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289024iDA62E7AD88B8C4DE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_1-1753074889983.png" alt="stephen_xue_1-1753074889983.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The Mulewoft Anypoint Studio is a local app installed on the local machine. It is the main development tool of Mulesoft.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_2-1753075185987.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289025iB8DB142C08D3A626/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_2-1753075185987.png" alt="stephen_xue_2-1753075185987.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The Mulesoft Anypoint Platform is a cloud based product on the internet. It is the main design tool and runtime tool of Mulesoft.&amp;nbsp; The development UI is purely browser based.&amp;nbsp;&lt;/P&gt;&lt;P&gt;SAP Integration Suite is a service within the BTP which is purely on the cloud and web browser based. SAP CPI is the main development tool and SAP API Management is the main design tool. They are different subcomponents inside the integration suite. SAP Integration Suite is on the internet.&lt;/P&gt;&lt;P&gt;SAP PI/PO is a on premise product, which is now, after version 7.31(if my memory is correct) a purely java-based software. It is a server installed locally in the client's intronet. According to current SAP office&amp;nbsp;announcements, it will stop provide support to SAP PI/PO by the end of year 2027. If you are still using the product in your landscape, it is time to look for its substitution now.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-1145644031"&gt;Centra ERP System&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Mulesoft is a product of Salesforce and it has&amp;nbsp;sophisticated connectors for Salesforce operations. Therefore, if your centra ERP system is salesforce, Mulesoft should be the best option of the middleware. While SAP CPI is a SAP product of course, if your centra ERP system is S4HANA or its previous versin ECC, SAP CPI should be the most convenient middleware to be chosen.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Since Salesforce is a cloud product on the internet, I would say that, SAP CPI still provide a good support to Salesforce as well as long as the relevant service or interface can be easily exposed by means of restful API or SOAP based API. On the other hand, it should be the same convenient for the Mulesoft to integrate with S4HANA on cloud. Whereas if it is S4HANA on premise or on RISE, things become another story. Without the SAP Cloud Connector, all of the interfaces( proxy, idoc, odata) of S4HANA on premise can only be connected once the firewall has been opened up. You probably needs to setup a DMZ(Demilitarized zone) in your network. Anyway it will largely increase the effort of cyber team or basis. This is normally used if the middleware if SAP PI/PO however. Good thing is , it will become a history soon.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_3-1753076639148.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289027iA8F379BAA0B05E21/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_3-1753076639148.png" alt="stephen_xue_3-1753076639148.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;SAP Cloud Connector is a very powerful tool for any SAP on-premise product integration. It is a big advantage to the SAP integration Suite or SAP CPI.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;What if the centra ERP system is something other than a SAP product or Salesforce? Please go though the following comparison.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-949130526"&gt;Suitable Implementation Methodology&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;According to Mulesoft API lifecycle, we can see that the Mule implementation is highly compatible with the Agile Development Process.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_1-1753077226677.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289028i0D9849A62EC50CAD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_1-1753077226677.png" alt="stephen_xue_1-1753077226677.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Both SAP Integration Suite and SAP PI/PO is more suitable for waterflow development process, according to my experience. In some of projects I participated, they used Agile mode for SAP CPI or SAP PI/PO development as well. It has a scrum master, a product owner, a tester and an integration developer in a group and has daily morning standup etc. Whereas I cannot see any benifits of this approach to be honest.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-752617021"&gt;API Management Coupling&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In the modern age, a middleware product should provide a platform for API Management, including authentication, quota controlling, XML/JSON threat protection etc. This is a limitation of SAP PI/PO, which has no such function.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Mulesoft Anypoint Platform has a component called API Manager, which provides policy based API management mechnism.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_2-1753078331714.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289030i87C48BE0B672B696/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_2-1753078331714.png" alt="stephen_xue_2-1753078331714.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;However the process to expose an interface as an API is not very straightforward, it needs some extra configurations in the global configuration of anypoint studio.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_3-1753078451288.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289031iD446736F01E0F77C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_3-1753078451288.png" alt="stephen_xue_3-1753078451288.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For SAP Integration suite, it has an component called API Management.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_4-1753078577179.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289033iE120CB9032D0F65C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_4-1753078577179.png" alt="stephen_xue_4-1753078577179.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It doesn't need any extra steps in the SAP CPI to connect the API proxy. On the other hand, the SAP API Management can retrieve OData v2 metadata from S4 backend directly via the catelog service. The SAP API management is based on APIGee and it is policy based as well. It provides OAuth v2 token generating service which is better than Mulesoft API Management from my feeling.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-556103516"&gt;Design and Development&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;In Mulesoft development, you can design the API by using YAML in the 'design center' of the Anypoint Platform.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_5-1753078912698.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289035i9A35362481ECD197/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_5-1753078912698.png" alt="stephen_xue_5-1753078912698.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The API document is generated automatically. More intesting is, once the designed content has been uploaded to 'Exchange', the Anypoint Platform can generate the process flow automatically for the Anypoint Studio. The means the development in Mulesoft is closely linked to its design content.&lt;/P&gt;&lt;P&gt;In SAP Integration Suite, the design tool inside the API Management provides a sort of swagger view by using OpenAPI script as below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_0-1753087280569.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289128i776E0510623535E6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_0-1753087280569.png" alt="stephen_xue_0-1753087280569.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once configured with relevant target URL and proxy URL, it can be connected with any services including any SAP CPI services exposed, or even the OData services from S4 HANA on premise. However the designed API proxy has no direct connection to the CPI iflows developed. In other words, the development of SAP CPI and design of API in the SAP API Management are two separated steps.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-359590011"&gt;Debug tool for Development&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In the Mulesoft Anypoint Studio, you can setup breakpoint inside any steps of a flow. The flow will stop at breakpoint once the endpoint has been triggered. Almost all veriables, message body, headers can be viewed in the debug mode just like debugging a program.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_1-1753087892553.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289135i2CDE592E9FE33087/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_1-1753087892553.png" alt="stephen_xue_1-1753087892553.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In SAP CPI,&amp;nbsp; you can set an iflow into 'Trace' mode.&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_5-1753088131409.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289139i8871498F0ECB9DE6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_5-1753088131409.png" alt="stephen_xue_5-1753088131409.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once done and the iflow has been triggered, the framework stored all message header/body information of each step.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_6-1753088333882.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289143i1B4998315010B7D9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_6-1753088333882.png" alt="stephen_xue_6-1753088333882.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;At the same time, SAP CPI provides a simulation tool by which you can test maximum 10 steps of an iflow, excluding any external calls.&amp;nbsp;&lt;/P&gt;&lt;P&gt;However, you cannot stop the process in form of breakpoint in the SAP CPI.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-163076506"&gt;Logging and Alert&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Mulesoft provides standard 'Logger' Step for writing any logs to the console. The statement inside Logger is DataWeave-compatible. DataWeave is the Mulesoft embeded script language.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_0-1753090554684.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289188i22E351B2B830F0FD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_0-1753090554684.png" alt="stephen_xue_0-1753090554684.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the Runtime Manager of the Mulesoft Anypoint Platform, it has the alert repository tool in which the alert can be configured.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_1-1753090816257.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289192i763BBC8162F6BACB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_1-1753090816257.png" alt="stephen_xue_1-1753090816257.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once configured, it can be linked to any application inside the Exchange.&lt;/P&gt;&lt;P&gt;For SAP CPI, there is no native alert step. People normally use the combination of the exception handling process and SMTP receiver adapter to imitate the alert notification. Meanwhile, the SAP BTP provides an alert notification service, which is not straightforward and a bit hard to use in the SAP CPI so far as I know.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_2-1753091107970.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289195i80AA7B4C77BDB9B1/image-size/small?v=v2&amp;amp;px=200" role="button" title="stephen_xue_2-1753091107970.png" alt="stephen_xue_2-1753091107970.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;BTP alert notification service is not quite convenient to be used for SAP CPI iFlows.&lt;/P&gt;&lt;P&gt;My feeling is the the alert of SAP PI/PO is even better than SAP CPI with regard to the configuration.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId--33436999"&gt;Unit Test Tool&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The Mulesoft Anypoint Studio provides MUnit and Munit Tools on the flow level. The component can be used to setup different unit test cases which is suitable for the Agile Development Standard.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_3-1753091523937.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289200iB274E1D1BF77C98C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_3-1753091523937.png" alt="stephen_xue_3-1753091523937.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;SAP CPI has no native unit test tool. The embeded simulation tool can be used to test steps inside and external API test tools like POSTMAN can be used to conduct system integration test. Whereas this is different from the concept of Unit Test and there is no step to check if the outcome is correct or not.&lt;/P&gt;&lt;P&gt;SAP CPI does provide a connectivity test tool which is very handy. It provides a tool to check connection over HTTPS, SMTP, SFTP etc.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_4-1753091937495.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289211i86193D8ED61DBE86/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_4-1753091937495.png" alt="stephen_xue_4-1753091937495.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-117303853"&gt;Mapping Technique Complexity&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The Mulesoft Anypoint Studio has two main mapping methods:&lt;/P&gt;&lt;H3 id="toc-hId--372612659"&gt;Graphic Mapping&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_5-1753092160629.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289221i4CC1C3B467545CC0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_5-1753092160629.png" alt="stephen_xue_5-1753092160629.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--569126164"&gt;DataWeave&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_6-1753092245659.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289222iE9D10CEE6E327BE1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_6-1753092245659.png" alt="stephen_xue_6-1753092245659.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It has a specific 'Transform Message' step which is for mapping and almost all of the native steps do contain a mapping step inside as well. All of these embedded mapping steps are compatible with DataWeave script. Since DataWeave is the Mulesoft build-in script, it has a relative good performance and provides a powerful functionalily for any different message format including XML, JSON, CSV etc. and the script is similar to the natual language which is not hard to master.&lt;/P&gt;&lt;P&gt;For SAP CPI, it normally supports three different types of Mapping:&lt;/P&gt;&lt;H3 id="toc-hId--765639669"&gt;Graphical Mapping&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_7-1753092505226.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289223iE7C9E92DAB3E6E54/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_7-1753092505226.png" alt="stephen_xue_7-1753092505226.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--962153174"&gt;XSLT Mapping&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_8-1753092588618.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289224iD912DF17800EDE9C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_8-1753092588618.png" alt="stephen_xue_8-1753092588618.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1158666679"&gt;Groovy Script Mapping&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_9-1753092648826.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289226iF9BE9DEA557E53AA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_9-1753092648826.png" alt="stephen_xue_9-1753092648826.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;SAP CPI iflow supports javascript as well. whereas i just do not know that very few cases are using the Javascript as the mapping script.&amp;nbsp;&lt;/P&gt;&lt;P&gt;For SAP PI/PO, it supports graphical mapping, xslt mapping and java mapping.&amp;nbsp;&lt;/P&gt;&lt;P&gt;The graphical mapping is normally to beginner which is easy to understand and suitable for relative simple mapping logic. However it is a bit hard to deal with context change. One of the limitation is that it only supports XML message.&lt;/P&gt;&lt;P&gt;The XSLT mapping is the industry standard for XML transformation. For sophisticated developer, it can be used to transform messages into JSON or CSV. However since it is a sort of recursion and&amp;nbsp;&lt;SPAN&gt;declarative language, bad programming skill may impact the overall performance.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The groovy script is the recommended mapping method in SAP CPI. However since it is a open standard programming language, which is lack of any system native performance tuning, any bad programming habit may impact the process performance as well.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId--1061777177"&gt;Connector Diversity&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;For Mulesoft Anypoint Studio, there are hundreds of connectors available, including ones for popular SaaS applications like SAP and Salesforce, cloud services in AWS and Azure, and databases using open protocols like ODBC and JDBC. Furthermore, MuleSoft Exchange offers over 250 out-of-the-box connectors.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_10-1753093755619.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289255i88450F80ADE3EF2A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_10-1753093755619.png" alt="stephen_xue_10-1753093755619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Please be aware that , Mulesoft connector for third party systems, like SAP, still needs dll or jar library. like for SAP, it needs jco library. unless the SAP service can be exposed in form of API or SOAP web service.&amp;nbsp;&lt;/P&gt;&lt;P&gt;For SAP CPI, it is said that there are over 60 pre-built adapters for systems based on different protocols, including SFTP, AMQP, HTTPS, SMTP etc. The integration suite provides a service called Open Connector, which is more flexible for connectivity. However, this service is not free of charge.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_11-1753094121626.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289262i5DB53A646EE27972/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_11-1753094121626.png" alt="stephen_xue_11-1753094121626.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId--1258290682"&gt;DevOps Supporting Tool&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The Mulesoft Anypoint Platform supports Maven for library updates. It supports GITHUB for content backup and versioning. It can be integrated with Jenkins for CICD.&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_1-1753094508343.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289268iE309E80AF9C72470/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_1-1753094508343.png" alt="stephen_xue_1-1753094508343.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For SAP CPI, it has its native versioning control mechnism for iflow and API proxies. Almost all contents are transportable by using a separated BTP service called Cloud Transportation Management. Since it is purely a cloud based development enviroment, the server maintanance is done by SAP and&amp;nbsp; is nothing to do with the integration developer. It is said that the CICD can be managed by Jenkins in some tutorials, whereas I have never seen it in any real cases.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId--1454804187"&gt;Authentication and Authorization&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In the Mulesoft Anypoint Platform, you can define your own business group and its sub group for different landscapes like dev, test, UAT, Production. You provide access to different group by using the roles, which is clear and does make sense.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_2-1753095089615.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289280i9443CDF2C2799CE0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_2-1753095089615.png" alt="stephen_xue_2-1753095089615.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For SAP Integration Suite, the user access consists of nature user access and system user access.&lt;/P&gt;&lt;P&gt;For nature user access, it is controlled by means of role collections. The role connection is a combination of roles in the level of BTP sub account. The BTP sub account is the collection of services or applications, like SAP Integration Suite.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_3-1753095329727.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289285iD778AE9FB91A17CD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_3-1753095329727.png" alt="stephen_xue_3-1753095329727.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It means, the nature user access control of SAP Integration Suite is NOT inside the service SAP Integration Suite, but the entity one level above.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For system user access, it is controlled by means of Service Key configuration, which is in the BTP subaccount as well. Different from the nature user access, it is not using the role collection mechanism.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_4-1753095809385.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289295i3EC9A21E48D6C576/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_4-1753095809385.png" alt="stephen_xue_4-1753095809385.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The SAP Integration Suite access control is a bit complex and tedious. Good thing is, normally this piece of work is not the task of the integration team, but the security team or basis team.&amp;nbsp;&lt;/P&gt;&lt;P&gt;For SAP PI/PO, both the system user and nature user are maintained by using the same tool, called SAP Netweaver Admin. At least for me, it is easier to understand compared with SAP CPI.&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1357914685"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;SAP PI/PO is out of date product. Though its last version call SAP Process Orchestration, it is not convenient for the integration orchestration, since it is on premise within the corprorate network, which is a bit hard to connect with any services on the internet. and SAP will stop support it in year 2027. So it is time to plan to get rid of it now if you are still using.&lt;/P&gt;&lt;P&gt;SAP CPI is suitable for most of integration requirement and it is purely cloud based. If any SAP system is your centra ERP system, please do not hasitate to choose it, though it is still suitable for any non-system integration, orchestration or work as Enterprise Servie Bus.&lt;/P&gt;&lt;P&gt;Mulesoft is generically suitable for any system integration, especially the project is using the Agile Standard Development Process. It can also be used as the middleware if the centra ERP is a SAP product. However without the BTP Cloud Connector, you might need extra work on firewall configuration.&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you have&amp;nbsp;experience in either platforms, you are most welcome to leave the comment below for the benifit of readers.&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/comparison-between-sap-cpi-and-mulesoft/ba-p/14157376"/>
    <published>2025-07-21T13:19:29.990000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-update-version-of-an-integration-flow-component/ba-p/14158284</id>
    <title>SAP Integration Suite – Update Version of an Integration Flow Component</title>
    <updated>2025-07-21T21:37:08.175000+02:00</updated>
    <author>
      <name>kamlesh_zanje</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/320175</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1606130686"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&amp;nbsp;&lt;/H1&gt;&lt;P data-unlink="true"&gt;SAP Cloud Integration version 5.75/7.40, 6.67/ (8.x→ 8.31), one of the capabilities of SAP Integration Suite, comes with a feature which will allow you to update the version of an integration flow component. &amp;nbsp;To know more, you can refer the help&amp;nbsp;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/migrate-integration-flow-component-to-new-version?locale=en-US" target="_self" rel="noopener noreferrer"&gt;documentation.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;In this blog, I will cover the detailed aspects of this feature, which pain, problem it will address and how to leverage this feature to improve the developer productivity and efficiency.&amp;nbsp;&lt;/P&gt;&lt;P&gt;But before that lets try to understand the need for the versioning of the components.&lt;/P&gt;&lt;P&gt;In SAP Cloud Integration, new version is created when a component,&amp;nbsp;which is already shipped and is being used by the customers undergoes some changes, enhancements, improvements. New features are offered in this component via the minor version updates and small fixes like label changes or UI alignments are offered via micro version updates. To know the versioning of the components in detail, refer the “Versioning of Components” section from this blog &lt;A href="https://community.sap.com/t5/integration-blog-posts/versioning-migration-of-components-of-an-integration-flow-in-sap-cloud/ba-p/13351719" target="_self"&gt;post&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1538699900"&gt;Problem&amp;nbsp;&lt;/H2&gt;&lt;P&gt;Manual update of component version is inefficient. Integration Developers face significant challenges when updating the version of the components manually.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kamlesh_zanje_0-1753114676303.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289465i810E1BEFBC2ECD8B/image-size/small?v=v2&amp;amp;px=200" role="button" title="kamlesh_zanje_0-1753114676303.png" alt="kamlesh_zanje_0-1753114676303.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Integration Developer​&lt;/P&gt;&lt;P&gt;Manual update of the component is a multi-step process as described below:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Manual component deletion​ - &lt;/STRONG&gt;Manual update involves deleting&amp;nbsp;component (Flow steps, Adapters etc.).&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Recreation of component - &lt;/STRONG&gt;After deletion,&amp;nbsp;integration developer&amp;nbsp;must&amp;nbsp;recreate component&amp;nbsp;manually, and maintain their configurations, including properties and externalized parameters.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;These manual steps are &lt;STRONG&gt;Effort-Intensive,&lt;/STRONG&gt; and the process is&amp;nbsp;&lt;STRONG&gt;time-consuming, cumbersome and error prone.&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1342186395"&gt;&lt;STRONG&gt;Solution&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Enabled&amp;nbsp;one-click update version feature to update the component which is backward compatible to the latest available version without any loss of the existing properties, configurations, externalized parameters etc. In past we had enabled this feature for the Integration flow configuration, process pool elements, however in this release, the framework is extended to enable the feature to update the flow steps, adapters which are the widely used components in the modeling of integration flow artifact.&lt;/P&gt;&lt;P&gt;This feature is available across all the environments of the Cloud Integration such as NEO, CF and Edge Integration Cell. Feature applicability - Flow steps and Adapters.&lt;/P&gt;&lt;P&gt;To know more about Runtime Profile, refer this help documentation and&amp;nbsp;blog &lt;A href="https://community.sap.com/t5/integration-blog-posts/versioning-migration-of-components-of-an-integration-flow-in-sap-cloud/ba-p/13351719" target="_self"&gt;post&lt;/A&gt;.&lt;/P&gt;&lt;H3 id="toc-hId-1274755609"&gt;How it works?&lt;/H3&gt;&lt;P&gt;A dedicated “Update Version” will be available if the component version is older than the latest available version corresponding to the runtime profile (e.g. SAP Cloud Integration, Edge Integration Cell etc.). &lt;STRONG&gt;Backward-compatible components&lt;/STRONG&gt;&amp;nbsp;will be migrated to the latest version seamlessly. When you update the version, existing fields will be retained with the same values, and new fields will be populated with default values. If a default value is not present for a mandatory field, you must add the value,&amp;nbsp;and new fields will be populated with default values. If a default value is not present for a mandatory field, you must add the value.&lt;/P&gt;&lt;P&gt;Flow step - Content modifier version 1.5 is selected for the update.&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="page1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289473i93803056017F8F53/image-size/large?v=v2&amp;amp;px=999" role="button" title="page1.png" alt="page1.png" /&gt;&lt;/span&gt;&lt;EM&gt;Image: 1&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Update Version feature updates the Content Modifier from 1.5 to 1.6 (latest version) as it contains the backward compatible changes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="page2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289474iD8F93DC0EAC2A7C5/image-size/large?v=v2&amp;amp;px=999" role="button" title="page2.png" alt="page2.png" /&gt;&lt;/span&gt;&lt;EM&gt;Image: 2&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Content Modifier flow step is updated to the latest version and now the Update Version feature is not available&amp;nbsp;as the component is on the latest version.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="page3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289475i51BEA863B5272082/image-size/large?v=v2&amp;amp;px=999" role="button" title="page3.png" alt="page3.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;EM&gt;Image: 3&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;If the components are not backward compatible, they will not be updated rather the feature will educate Integration Developer to delete and recreate the components by maintaining the configurations manually. See the below example.&lt;/P&gt;&lt;P&gt;Generate Splitter flow step cannot be updated from 1.5 to 1.6 as it contains incompatible changes.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="page4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289477i2151F50165678652/image-size/large?v=v2&amp;amp;px=999" role="button" title="page4.png" alt="page4.png" /&gt;&lt;/span&gt;&lt;EM&gt;Image: 4&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Integration Developer will be asked to delete and recreate the component manually.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="page5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289478iA4F6519AD6914CFB/image-size/large?v=v2&amp;amp;px=999" role="button" title="page5.png" alt="page5.png" /&gt;&lt;/span&gt;&lt;EM&gt;Image: 5&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;: You can update one only component (Flow step, Adapter, Process) at a time. Selecting an integration process focuses the update exclusively on that process.&lt;/P&gt;&lt;H3 id="toc-hId-1078242104"&gt;&lt;STRONG&gt;Benefits &lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Eliminates manual recreation of flow steps&amp;nbsp;​.&lt;/LI&gt;&lt;LI&gt;Saves time &amp;amp; reduces effort​.&lt;/LI&gt;&lt;LI&gt;Minimize errors​.&lt;/LI&gt;&lt;LI&gt;Keep components latest.&lt;/LI&gt;&lt;LI&gt;Improve developer efficiency and productivity​.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This enhancement is designed to make integration process development easier by enabling the integration developers to access the latest features through seamless updates of integration flow adapters and flow steps.&lt;/P&gt;&lt;H3 id="toc-hId-881728599"&gt;&lt;STRONG&gt;Next steps &lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Show “Change” summary in the Update Version UI.​&lt;/LI&gt;&lt;LI&gt;Update “Process” component and its child elements.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Hope you will be benefited with this feature. Please experience the Update Version and provide your valuable feedback.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-update-version-of-an-integration-flow-component/ba-p/14158284"/>
    <published>2025-07-21T21:37:08.175000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/the-e-in-event-driven-architecture-introducing-sap-s-new-event-add-for-erp/ba-p/14160285</id>
    <title>The E in Event-Driven Architecture: Introducing SAP’s new Event-Add for ERP</title>
    <updated>2025-07-23T15:16:03.567000+02:00</updated>
    <author>
      <name>KStrothmann</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/7039</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1864981318"&gt;Introducing SAP’s new Event-Add for ERP&lt;/H3&gt;&lt;P&gt;The smallest building blocks of an Event-Driven Architecture are events. You could even argue that they are the most important building block of an EDA as well. Without suitable events – no surprise – no event-driven architecture.&lt;/P&gt;&lt;P&gt;Now it has gotten a lot easier and straightforward to create suitable events for your event-driven use case: &lt;STRONG&gt;SAP has just released the Event Add-On for ERP&lt;/STRONG&gt;.&amp;nbsp;This add-on is geared at exposing and consuming events to and from&lt;STRONG&gt; SAP Integration Suite, advanced event mesh&lt;/STRONG&gt;, therefore works with SAP's flagship event broker.&lt;/P&gt;&lt;H3 id="toc-hId-1668467813"&gt;&lt;STRONG&gt;Back in Time: The Early Days of Business EDA&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;I still remember the days when I had started working on EDA, years and years ago. Often, we had identified event-driven use cases with customers and had then not been able to start executing on these because the required event had not been available in SAP S/4HANA. In those days, SAP S/4HANA had only offered a two-digit number of standard events. Quite often, the event you wanted and needed was not there in SAP S/4HANA. Or it did not contain the right payload. And back then, the events were not extensible. You had no chance to create custom events. Often customers were not able to start their projects due to a lack of suitable events.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="TechEd Las Vegas.jpg" style="width: 604px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290351iD39621B89AE50BE6/image-size/large?v=v2&amp;amp;px=999" role="button" title="TechEd Las Vegas.jpg" alt="TechEd Las Vegas.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Luckily, event-driven architectures still kicked off with the events that were available. And both customers and SAP were quite innovative in respect to how to use and how to show the power of event-driven architectures.&lt;/P&gt;&lt;P&gt;The picture above shows a scene from TechEd 2016 Las Vegas, where former SAP CTO Bjoern Goerke managed to charge the flux compensator of his DeLorean with the required 1.21 gigawatts, based on events generated by the audience by shaking their smartphones.&lt;/P&gt;&lt;H3 id="toc-hId-1471954308"&gt;&lt;STRONG&gt;The E in EDA today&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Nowadays, things have changed some. There are plenty of standard events in SAP S/4HANA and you can build your own custom events based on RAP. Quite a number of standard events are already extensible - based on S/4HANA’s derived events concept. Plus, there are a lot of new features that allow backend-based filtering of events, and soon it is planned to provide AEM’s end-to-end distributed tracing to already start from SAP S/4HANA. So, yes, we’ve made major steps forward and we still make progress every month.&lt;/P&gt;&lt;P&gt;What is important to note is that a lot of the improvements come with newer SAP backends only. S/4HANA versions 2022 and newer or SAP S/4HANA, public cloud edition come with a lot of EDA features. They primarily build on the RAP approach to create events.&lt;/P&gt;&lt;P&gt;Now, if you have an older backend (older S/4HANA or SAP ECC) or are not a big fan of RAP, we had introduced a second approach to expose events: SAP Application Interface Framework (AIF). It works with SAP S/4HANA and/or SAP ECC in combination with SAP Integration Suite, advanced event mesh. Exposing events via AIF is a good option if you are already using SAP AIF extensively, have the required skillset, and are not shy to code.&lt;/P&gt;&lt;P&gt;Now, what about customers that do not want to code? What about customers who require a large number of custom events? What about customers that have mixed landscapes with both SAP S/4HANA and SAP ECC?&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP EDA Ecosystem.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290353i26C385E804B0821C/image-size/large?v=v2&amp;amp;px=999" role="button" title="SAP EDA Ecosystem.png" alt="SAP EDA Ecosystem.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1275440803"&gt;&lt;STRONG&gt;Enlarging the E in EDA&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;You might have already noticed it when looking at the diagram above - as of lately, there is a third option to event-enable SAP on-premise backends: the &lt;STRONG&gt;SAP Integration Suite, advanced event mesh, event add-on for ERP&lt;/STRONG&gt; (in short Event Add-On for ERP).&lt;/P&gt;&lt;P&gt;SAP has decided to introduce the Event Add-On for ERP to further improve event exposure options for our event-driven ecosystem. Consider the Event-Add-On for ERP as a premium and convenience option that comes with a low-code/no-code approach to create sophisticated, clean-core compliant custom events in just a few minutes.&lt;/P&gt;&lt;P&gt;The Event Add-On complements SAP’s other options and, very important, &lt;STRONG&gt;SAP’s goal is to make the different options work well together in future&lt;/STRONG&gt; to allow to use them in combination as easily as possible.&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1078927298"&gt;&lt;STRONG&gt;A First Look at the Event Add-On for ERP&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Event Add-On for ERP Overview.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290354i5D04BB53B96A701E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Event Add-On for ERP Overview.png" alt="Event Add-On for ERP Overview.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let me try to describe what the Event-Add On is in a few sentences:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The Event Add-On enables real-time, event-driven, bi-directional communication and batch loads &lt;STRONG&gt;from both SAP S/4HANA and SAP ERP Central Component (SAP ECC) to SAP Integration Suite, advanced event mesh&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;The Add-On is already available via SAP through various &lt;STRONG&gt;commercial models&lt;/STRONG&gt; (BTPEA, CPEA, PAYG, Subscription via SAP Store).&lt;/LI&gt;&lt;LI&gt;It supports &lt;STRONG&gt;different deployment options&lt;/STRONG&gt; of SAP S/4HANA and SAP ECC (including on-premises and SAP S/4HANA, private cloud edition)&lt;/LI&gt;&lt;LI&gt;It allows to create custom events in a code-less or alternatively pro-code way and offers extensible payloads&lt;/LI&gt;&lt;LI&gt;CDS views, classic tables, IDocs can be used for event payload creation&lt;/LI&gt;&lt;LI&gt;Comes with templates for selected custom events&lt;/LI&gt;&lt;LI&gt;Major parts of the technology have already been in successful use for several years and is now available in an SAP offering specifically tailored for SAP Integration Suite, advanced event mesh&lt;/LI&gt;&lt;LI&gt;Scales to enterprise grade numbers of events exposed&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Now let’s have a closer look at event triggers. The Add-On offers a number of standard triggers and many custom trigger options.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Standard triggers&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Business Object events&lt;/LI&gt;&lt;LI&gt;SAP Business Transaction Events (BTE)&lt;/LI&gt;&lt;LI&gt;RAP BOs&lt;/LI&gt;&lt;LI&gt;SAP Change Documents (CDHDR/CDPOS)&lt;/LI&gt;&lt;LI&gt;IDocs&lt;/LI&gt;&lt;LI&gt;SAP Output Determination&lt;/LI&gt;&lt;LI&gt;Replications from SAP CAR, EWM, SLT&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Selected custom trigger options&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Custom business object events&lt;/LI&gt;&lt;LI&gt;Calling Event Add-On framework via ABAP-code&lt;/LI&gt;&lt;LI&gt;Scheduling an Event Add-On job&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Important: the Event Add-On for ERP is both resilient and highly reliable. It provides a monitoring application, offers failover &amp;amp; reprocessing, and allows for alerting.&lt;/P&gt;&lt;H3 id="toc-hId-882413793"&gt;&lt;STRONG&gt;New Blog Series: A Second, Third, and Fourth Look at the Add-On&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Event Add-On for ERP.png" style="width: 673px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290355i2A85FE6F6778B711/image-size/large?v=v2&amp;amp;px=999" role="button" title="Event Add-On for ERP.png" alt="Event Add-On for ERP.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To provide you with a chance to dive deeper into using the Event Add-On for ERP we would like to use this blog start off a blog series on the Event Add-on.&lt;/P&gt;&lt;P&gt;Expect more blogs on the add-on in the coming weeks, starting with an overview blog and then with blogs going deeper and deeper into selected topics.&lt;/P&gt;&lt;P&gt;We will link the available blogs here once they are available. Please stay tuned!&lt;/P&gt;&lt;H3 id="toc-hId-685900288"&gt;&lt;STRONG&gt;Links&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;In case that you don’t want to wait any longer, here are some links that provide you with additional information on the Event Add-On for ERP:&lt;/P&gt;&lt;P&gt;&lt;A href="https://discovery-center.cloud.sap/missiondetail/4575/4863/" target="_self" rel="nofollow noopener noreferrer"&gt;Discovery Center Mission on Event Add-On for ERP and Advanced Event Mesh&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://asapio.com/sap-aem/#overview" target="_self" rel="nofollow noopener noreferrer"&gt;ASAPIO Partner Page on the Event Add-On for ERP&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog/advanced-event-mesh?tab=service_plan&amp;amp;region=all" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Discovery Center for AEM and Event Add-On&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/sap-integration-suite/event-add-on-for-erp-advanced-event-mesh/connect-advanced-event-mesh?locale=en-US" target="_self" rel="noopener noreferrer"&gt;SAP Help: Connecting the Add-On to AEM&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/products/technology-platform/integration-suite/advanced-event-mesh.html#pricing" target="_self" rel="noopener noreferrer"&gt;SAP Store for AEM&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/the-e-in-event-driven-architecture-introducing-sap-s-new-event-add-for-erp/ba-p/14160285"/>
    <published>2025-07-23T15:16:03.567000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/google-bigquery-adapter-for-sap-integration-suite/ba-p/14160511</id>
    <title>Google BigQuery Adapter for SAP Integration Suite</title>
    <updated>2025-07-23T16:43:28.043000+02:00</updated>
    <author>
      <name>Swati_Singh1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/312844</uri>
    </author>
    <content>&lt;P&gt;Many of our day-to-day business activities require storage, processing and insights - Google BigQuery is a data warehousing offering from Google that provides all of the above and much more. It can store massive volumes of data and provide quick processing and efficient analysis.&lt;/P&gt;&lt;P&gt;To harness the ability of Google BigQuery in your SAP Integrations, SAP has released Google BigQuery for SAP Integration Suite that facilitates management and access to data residing on Google BigQuery. Now you can maximize your productivity with data related integrations using Google BigQuery Adapter.&lt;/P&gt;&lt;H2 id="toc-hId-1735901261"&gt;Google BigQuery Adapter Features&lt;/H2&gt;&lt;P&gt;Google BigQuery Adapter has the following features:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Supports &lt;STRONG&gt;OAuth2 Service Account&lt;/STRONG&gt; and &lt;STRONG&gt;Workload Identity Federation&lt;/STRONG&gt; authentication methods.&lt;/LI&gt;&lt;LI&gt;Enables accessing and managing Big Query resources like datasets, jobs, tables, table data, routines, projects, row access policies, and models.&lt;/LI&gt;&lt;LI&gt;Supports convenient metadata retrieval using &lt;STRONG&gt;List&lt;/STRONG&gt; operation data that used the &lt;STRONG&gt;Page Token&lt;/STRONG&gt; field.&lt;/LI&gt;&lt;LI&gt;Supports &lt;STRONG&gt;Basic&lt;/STRONG&gt; configuration for convenient processing capability whereas &lt;STRONG&gt;Advanced&lt;/STRONG&gt; enables proficient users to perform calls with greater control while connecting to any API endpoint.&lt;/LI&gt;&lt;LI&gt;Supports&lt;STRONG&gt; DML operations&lt;/STRONG&gt; like insert, update, patch for Google BigQuery resources.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1539387756"&gt;Update a Dataset&lt;/H2&gt;&lt;P&gt;In this blog post, we will demo a scenario to get you started with a basic Google BigQuery Adapter feature. We will see how to update details for an existing dataset residing in Google BigQuery.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashish_Kuvvarapu_0-1753278988951.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290441iE6CD54DB19C62132/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashish_Kuvvarapu_0-1753278988951.png" alt="Ashish_Kuvvarapu_0-1753278988951.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The following prerequisites are required to be completed on the application side of Google BigQuery.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create a dataset or have access to an existing one. For more information, see &lt;A href="https://cloud.google.com/bigquery/docs/datasets" target="_self" rel="nofollow noopener noreferrer"&gt;Create Datasets&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;You must also ensure the correct permissions are available to the service user to update a dataset. For more information, see &lt;A href="https://cloud.google.com/bigquery/docs/updating-datasets" target="_self" rel="nofollow noopener noreferrer"&gt;Dataset Permissions&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1342874251"&gt;Create a Payload using Content Modifier&lt;/H2&gt;&lt;P&gt;One of the first tasks we do after creating a new integration flow, is to prepare the payload that contains information to be updated in the target dataset in Google BigQuery.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "kind": "bigquery#dataset",
  "etag": "etag_value",
  "id": "gbq_docs.org_primary_dataset",
  "selfLink": "https://bigquery.googleapis.com/bigquery/v2/projects/gbq_docs/datasets/org_primary_dataset",
  "datasetReference": {
    "projectId": "gbq_docs",
    "datasetId": "org_primary_dataset"
  },
  "friendlyName": "EmployeeDataset",
  "description": "This dataset stores analytical data.",
  "defaultTableExpirationMs": "3600000",
  "defaultPartitionExpirationMs": "86400000",
  "labels": {
    "env": "dev",
    "team": "analytics"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;As you can see above, we intend to add metadata details like description, tags, labels etc.&lt;/P&gt;&lt;H2 id="toc-hId-1146360746"&gt;Connect to Google BigQuery using the Google BigQuery Adapter&lt;/H2&gt;&lt;P&gt;The Connection tab contains connection and authentication parameters for Google BigQuery.&lt;/P&gt;&lt;P&gt;Before you set the connection details, see Creating a Keystore in the Adapter Guide.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashish_Kuvvarapu_1-1753279066188.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290442iD67722B41328FFB4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashish_Kuvvarapu_1-1753279066188.png" alt="Ashish_Kuvvarapu_1-1753279066188.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;Description/Values&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Address&lt;/TD&gt;&lt;TD width="50%"&gt;Specify the name for the Google BigQuery service. Default:&amp;nbsp;&lt;A href="https://bigquery.googleapis.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://bigquery.googleapis.com/&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Authentication Type&lt;/TD&gt;&lt;TD width="50%"&gt;Select as &lt;STRONG&gt;OAuth2 Service Account&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;OAuth2 Token URL&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the OAuth2 Token URL which identifies as the authorization server for producing a JWT token internally.&lt;/P&gt;&lt;P data-unlink="true"&gt;Default: https://www.googleapis.com/oauth2/v4/token&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Client Email&lt;/TD&gt;&lt;TD width="50%"&gt;Specify the Google Service Account Client Email.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Private Key Alias&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the security artifact storing the Google Service Account Private Key.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Scope&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the scope of the connection to Google BigQuery service.&lt;/P&gt;&lt;P&gt;Default: &lt;A href="https://www.googleapis.com/auth/bigquery" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.googleapis.com/auth/bigquery&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-949847241"&gt;Update Dataset Operation&lt;/H2&gt;&lt;P&gt;Now you can run the Update Dataset operation on your target dataset under your project.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashish_Kuvvarapu_2-1753279100792.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290449i3B9B14301EE1DC2A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashish_Kuvvarapu_2-1753279100792.png" alt="Ashish_Kuvvarapu_2-1753279100792.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;P&gt;&lt;STRONG&gt;Description/Values&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Configuration Type&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Select the required configuration type as &lt;STRONG&gt;Basic&lt;/STRONG&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Entity&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;Select &lt;STRONG&gt;Datasets&lt;/STRONG&gt; as the entity&amp;nbsp;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Project ID&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Specify the Google BigQuery project ID.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Dataset ID&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Specify the Dataset ID to be used.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;You can achieve the same using Advanced configuration type as well.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Description/Values&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Configuration Type&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Select the required configuration type as &lt;STRONG&gt;Advanced&lt;/STRONG&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="50px"&gt;&lt;P&gt;HTTP Method&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="50px"&gt;Select as &lt;STRONG&gt;POST&lt;/STRONG&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Relative URL&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;/bigquery/v2/projects/{projectId}/datasets/{datasetid}&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-753333736"&gt;Run and Verify Output&lt;/H2&gt;&lt;P&gt;After saving the above configuration, deploy the flow and verify that the changes are reflected on the dataset. You should be able to see some of them as shown below&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Labels&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;env : dev team : analytics&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Description&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;This dataset stores analytical data.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-556820231"&gt;Quick Links&lt;/H2&gt;&lt;P&gt;For detailed information about Google BigQuery configuration, see &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/google-bigquery-adapter" target="_self" rel="noopener noreferrer"&gt;Google BigQuery&lt;/A&gt; and &lt;A href="https://api.sap.com/odata/1.0/catalog.svc/Files('a646792466e04c8c8b50042867ea13db')/$value" target="_self" rel="noopener noreferrer"&gt;Google BigQuery Adapter Guide&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Note: The Google BigQuery adapter is available as part of your SAP Integration Suite license.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/google-bigquery-adapter-for-sap-integration-suite/ba-p/14160511"/>
    <published>2025-07-23T16:43:28.043000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/process-integration-pipeline-extension-restart-via-data-store/ba-p/14153116</id>
    <title>Process Integration Pipeline Extension - Restart via Data Store</title>
    <updated>2025-07-23T17:38:26.286000+02:00</updated>
    <author>
      <name>mate_moricz</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/191315</uri>
    </author>
    <content>&lt;P&gt;If you use the &lt;A href="https://hub.sap.com/package/PIPipelineGenericIntegrationFlows/overview" target="_self" rel="noopener noreferrer"&gt;Process Integration Pipeline concept&lt;/A&gt; on your SAP Cloud Integration tenant, then you'll be familiar with the error handling process. In case of a message processing error, the message will be retried from the JMS processing queues and upon reaching the maximum number of retries, the message is sent to a Dead Letter Queue (DLQ) to stop further processing. The message then has to be &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/monitoring-and-error-handling-pipeline-concept#dead-letter-queue-handling" target="_self" rel="noopener noreferrer"&gt;moved&lt;/A&gt; from the DLQ back to the processing queues of the pipeline.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="move_jms.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286931iB391DAA7CA2855E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="move_jms.png" alt="move_jms.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The move feature in the queue monitor only enables you to move all messages within a queue. Currently, you can't move a single message from one queue to another. Selective message move is a &lt;A href="https://roadmaps.sap.com/board?PRODUCT=000D3A47875C1EDB98A8A910864AC24B&amp;amp;q=move&amp;amp;range=CURRENT-LAST#;INNO=CB93051A54FD1EDFBDB6AEC234D1AC40" target="_self" rel="noopener noreferrer"&gt;planned roadmap item for Q3 2025.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;There are multiple restrictions imposed by this retry handling process:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;It is not possible to figure out to which scenarios the messages belong in the DLQ&lt;/LI&gt;&lt;LI&gt;It is not possible to schedule a restart job with periodic retries of erroneous messages.&lt;/LI&gt;&lt;LI&gt;It is not possible to execute selective move of messages from JMS queue (to be solved by Q3 2025 as mentioned).&lt;/LI&gt;&lt;LI&gt;There is no API to move messages from DLQ to normal processing queues.&lt;/LI&gt;&lt;LI&gt;There is no API to read JMS queue content and select required messages based on query conditions (JMS Message ID cannot be set from an Integration Flow and there is not any configurable tag for JMS message).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;An additional aspect is the resource limit of the JMS broker:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;There is a hard size limit of JMS broker and JMS queues (default 95% of broker). In case of an unplanned outage of a receiver system, messages might be flooding generic pipeline queues like Outbound (Q4) JMS queue.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;To solve these issues, we have created a package called the&amp;nbsp;&lt;A href="https://hub.sap.com/package/processintegrationpipelineextensionrestartviadatastore/overview" target="_self" rel="noopener noreferrer"&gt;Process Integration Pipeline Extension - Restart via Data Store&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;which is now available in SAP Business Accelerator Hub. This package helps to automate message retries via scheduled jobs and APIs by utilizing Data Stores instead of DLQs on the JMS broker. There is no change required to the standard&amp;nbsp;Process Integration Pipeline package due to the available &lt;A href="https://community.sap.com/t5/integration-blog-posts/latest-pipeline-concept-enhancements-custom-error-handling-and-others/ba-p/13757664" target="_self"&gt;custom error handling extension&lt;/A&gt;&amp;nbsp;from version&amp;nbsp;1.0.5 on.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This blog describes the concept of the extension, but not the detailed configuration of each Integration Flow.. A detailed configuration guide is attached to the Integration Package.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1735063274"&gt;Integration Package contents&lt;/H2&gt;&lt;P&gt;The package consists of multiple Integration Flows and a Script Collection. Below schema describes the logical connection between the Integration Flows.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_1-1753260008506.png" style="width: 911px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290178i5594727031643E89/image-dimensions/911x435?v=v2" width="911" height="435" role="button" title="mate_moricz_1-1753260008506.png" alt="mate_moricz_1-1753260008506.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&lt;/STRONG&gt;&lt;SPAN&gt;. This Integration Flow implements Custom Error Handling for exceptions occurring in the generic steps of the Process Integration Pipeline. It leverages the public Pipeline extension exit, as described in the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/monitoring-and-error-handling-pipeline-concept#loioed9b82cb928049e6990a4d784aa6aac7__section_pm1_ggs_5bc" target="_blank" rel="noopener noreferrer"&gt;Custom Exception Handling documentation&lt;/A&gt;. Its primary function is to determine whether retries should continue through the JMS persistence layer or, if all configured JMS retries are exhausted, to move the message out of the queue into the Data Store while capturing all necessary restart attributes and forming the Data Store entry body.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline DS Retry - Restart Executor from Data Store to JMS&lt;/STRONG&gt;&lt;SPAN&gt;. This Integration Flow handles message reprocessing by moving messages from the Data Store back to the source JMS processing queue, allowing the JMS layer to manage the actual retry process. It is triggered via Process Direct and requires XML input specifying the source Data Store, maximum retry count, and the retry subject – either a list of Data Store entry names or an Interface PID for dynamically retrying all associated Data Store entries.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline DS Retry - Template - Restart Job&lt;/STRONG&gt;&lt;SPAN&gt;. This Integration Flow represents a Restart Job that automatically reprocesses messages from the Data Store based on assigned restart configuration profiles. Execution is scheduled using a Start Timer event. Provided as a template, this Integration Flow allows for the creation of multiple customized copies in a custom package, with different Job Profiles maintained in the Partner Directory.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline API - Data Store Manage Retries &lt;/STRONG&gt;&lt;SPAN&gt;(Optional). This Integration Flow enables on-demand restart operations via API clients like Postman. It exposes an HTTP endpoint to trigger restarts for specified Data Store entries or based on selection criteria. Additional operations allow users to retrieve a list of Data Stores in the tenant, fetch entries from a specific Data Store, and move entries between Data Stores (e.g., transferring entries from the “Retry” Data Store to the “NoRetry” Data Store to prevent automatic retriggering).&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline API - Data Store Manage Entries &lt;/STRONG&gt;&lt;SPAN&gt;(Optional). This Integration Flow provides API-based management of Data Store entries, separate from the "Manage Retries" API, to enforce role-based access. It allows users to read messages from a selected Data Store, delete messages (individually or based on query conditions), and add messages to the Data Store (this capability can be disabled at the Integration Flow level).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1538549769"&gt;Data Store Entry Format&lt;/H2&gt;&lt;P&gt;The&amp;nbsp;&lt;EM&gt;Pipeline DS Retry - Custom Error Handling with Data Stores &lt;/EM&gt;Integration Flow will write the messages into Data Stores in a specific pattern which can be used to easily identify the corresponding scenario, message restart by filter criteria.&amp;nbsp; The following pattern is used:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;PartnerId&lt;SPAN&gt;~PipelineStage(~Receiver )~MplId~UTC-Timestamp(~RetryCount )&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;PartnerId (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – A unique identifier in the Process Integration Pipeline that defines the configuration scenario. It is derived from the sender system name and sender interface name. More details can be found in the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/using-partner-directory-in-pipeline-concept#partner-id" target="_blank" rel="noopener noreferrer"&gt;Partner ID documentation&lt;/A&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;PipelineStage (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – Identifies the stage in the Process Integration Pipeline where the exception occurred. &lt;/SPAN&gt;It uses predefined two-letter identifiers enclosed in parentheses (e.g., (IB)), resulting in a four-character code&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;(IB)&lt;/STRONG&gt;&lt;SPAN&gt; – Inbound Stage: The message was received by an inbound Integration Flow, stored in the first JMS queue, and encountered an exception during the next processing step.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(RD)&lt;/STRONG&gt;&lt;SPAN&gt; – Receiver Determination Stage: The inbound conversion was successful, but an error occurred while identifying the receiver system.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(ID)&lt;/STRONG&gt;&lt;SPAN&gt; – Interface Determination Stage: The receiver system was identified, but an error occurred while determining the target inbound interface for that receiver (i.e., the Process Direct endpoint of the outbound Integration Flow).&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(OB)&lt;/STRONG&gt;&lt;SPAN&gt; – Outbound Stage: The message was successfully routed, but an error occurred during message conversion to the outbound format or while transmitting data to the receiver. This is the most common error-handling stage.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(NA)&lt;/STRONG&gt;&lt;SPAN&gt; – The error originated from an unknown or custom Integration Flow (e.g., a copy of the generic flow or an interface-specific flow connected to the retry extension).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Receiver (Optional)&lt;/STRONG&gt;&lt;SPAN&gt; – The receiver business system or alias to which the message is to be delivered. This field is optional because in the |IB| and |RD| stages, the receiver is still unknown. It is assigned only starting from the |ID| stage.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;MplId (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – The Message Processing Log ID (Message GUID) of the erroneous message, a 28-character unique identifier assigned to each message in Cloud Integration. Even though the Message Processing Log ID is directly visible in the Data Store UI, this identifier is required to guarantee uniqueness in terms of Data Store entry ID as a timestamp will not guarantee uniqueness.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;UTC-Timestamp (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – A timestamp marking when the message first entered the Custom Error Handling Integration Flow. It follows the ISO 8601 format:&amp;nbsp;&lt;/SPAN&gt;yyyy-MM-dd'T'HH:mm:ss.SSS'Z' (Example: 2025-04-20T06:51:11.123Z)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;RetryCount (Optional)&lt;/STRONG&gt;&lt;SPAN&gt; – A counter tracking Data Store restart attempts. For a new erroneous message using Data Store-based restarts, this counter starts at 0 and increments with each retry attempt. This prevents exceeding the maximum allowed retries (MaxDataStoreRetries).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The entry written to the Data Store contains the message payload and the potential attachments in a Base64-encoded format. Additionally a message header is included which contains metadata required for further processing such as:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The source JMS queue where the message will be placed for reprocessing&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The entry name of the Data Store record&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The Data Store name used for reprocessing&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The maximum retry count assigned to the interface in the Partner Directory (or a default of 3 retries from the Data Store)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The exception message, also stored in Base64-encoded format&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The structure looks as follows:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;Message&amp;gt;
	&amp;lt;MsgHeader&amp;gt;
		&amp;lt;RestartQueue&amp;gt;${property.SourceJMSQueue}&amp;lt;/RestartQueue&amp;gt;
		&amp;lt;EntryID&amp;gt;${property.EntryID}&amp;lt;/EntryID&amp;gt;
		&amp;lt;RetryDataStore&amp;gt;${property.RetryDataStore}&amp;lt;/RetryDataStore&amp;gt;
		&amp;lt;MaxRetryCount&amp;gt;${property.MaxDataStoreRetries}&amp;lt;/MaxRetryCount&amp;gt;
		&amp;lt;Error&amp;gt;exception.message.Base64encoded&amp;lt;/Error&amp;gt;
	&amp;lt;/MsgHeader&amp;gt;
	&amp;lt;Payload&amp;gt;Payload.Base64encoded&amp;lt;/Payload&amp;gt;
	&amp;lt;Attachments&amp;gt; (minOccurs="0")
		&amp;lt;Attachment&amp;gt; (maxOccurs="unbounded")
			&amp;lt;AttachmentName&amp;gt;attachmentName&amp;lt;/AttachmentName&amp;gt;
			&amp;lt;AttachmentContentType&amp;gt;contType&amp;lt;/AttachmentContentType&amp;gt;
			&amp;lt;AttachmentContent&amp;gt;content.Base64&amp;lt;/AttachmentContent&amp;gt;
		&amp;lt;/Attachment&amp;gt;
	&amp;lt;/Attachments&amp;gt;
&amp;lt;/Message&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1342036264"&gt;Data Store Options&lt;/H2&gt;&lt;P&gt;The extension package utilizes two data store options: RetryStore and NoRetryStore. The Integration Flow &lt;EM&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&lt;/EM&gt;&amp;nbsp;determines – based on the number of JMS retries, PartnerId configuration in Partner Directory and the pipeline Stage where the error occurred – into which kind of Data Store the message is placed.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;RetryStore&lt;/STRONG&gt;&lt;SPAN&gt; – If a message should be automatically restarted in case of an error in inbound or outbound processing or in the integrated runtime, it will be put into this store. The messages in this store option can be restarted via the Restart Job Template Integration Flow. If the maximum number of retries is not reached for restarted messages, they will be put back into this store with an increased retry counter.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;NoRetryStore&lt;/STRONG&gt;&lt;SPAN&gt; – If a message should not be restarted automatically in case of failing receiver or interface determination or when the maximum number of retries have been reached by an already restarted message, it will be put into this store. The messages in this store option can be restarted explicitly &lt;/SPAN&gt;&lt;SPAN&gt;via the Integration Flow &lt;EM&gt;Pipeline API - Data Store Manage Retries&amp;nbsp;&lt;/EM&gt;or via even by the Restart Job if needed.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1145522759"&gt;Restart configuration settings for scenarios&lt;/H2&gt;&lt;P&gt;The Integration Flow &lt;EM&gt;&lt;I&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&lt;/I&gt;&lt;/EM&gt;&amp;nbsp;will put the failed messages into Data Stores based on &lt;EM&gt;&lt;I&gt;PartnerId&lt;/I&gt;&lt;/EM&gt; configuration defined in the Partner Directory via String Parameters. If the configuration is missing in the Partner Directory for a given &lt;EM&gt;&lt;I&gt;PartnerId&lt;/I&gt;&lt;/EM&gt;, default values will be applied.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;RetryDataStore&lt;/STRONG&gt;&lt;SPAN&gt; – Defines the name of the Data Store where the erroneous message should be stored in case of exceeding maximum number of retry attempts at JMS layer.&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Note that even when set to a specific value, messages destined for the &lt;EM&gt;&lt;I&gt;NoRetryStore&lt;/I&gt;&lt;/EM&gt; will have the “&lt;EM&gt;&lt;I&gt;_NoRetry”&lt;/I&gt;&lt;/EM&gt; postfix appended to the Data Store name and they require no explicit configuration.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If &lt;EM&gt;&lt;I&gt;RetryDataStore&lt;/I&gt;&lt;/EM&gt; String parameter is not set for the &lt;EM&gt;&lt;I&gt;PartnerId&lt;/I&gt;&lt;/EM&gt;, then the data store names used will be &lt;EM&gt;&lt;I&gt;&amp;lt;PartnerId&amp;gt;_Retry&lt;/I&gt;&lt;/EM&gt; and &lt;EM&gt;&lt;I&gt;&amp;lt;PartnerId&amp;gt;_NoRetry&lt;/I&gt;&lt;/EM&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;restartMode&lt;/STRONG&gt;&lt;SPAN&gt; – Can be set to either &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;DS&lt;/I&gt;&lt;/EM&gt; &lt;/STRONG&gt;(Data Store) or &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;JMS&lt;/I&gt;&lt;/EM&gt; &lt;/STRONG&gt;(JMS queue) to define how the messages should be restarted. Default option is &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;DS&lt;/I&gt;&lt;/EM&gt;&lt;/STRONG&gt; if not set.&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;DS:&lt;/STRONG&gt;&lt;SPAN&gt; putting a message back to the JMS queue, but in case of an error immediately taking it to a Data Store (preferred and default)&lt;/SPAN&gt;&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;JMS:&lt;/STRONG&gt;&lt;SPAN&gt; putting a message back to the JMS queue and in case of an error executing retries in this JMS queue according to the maximum number of JMS retries&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;MaxDataStoreRetries&lt;/STRONG&gt;&lt;SPAN&gt; – Defines the number of retries after a restart of a message. If the limit is reached, the messaged is moved into the “&lt;EM&gt;&lt;I&gt;_NoRetry”&lt;/I&gt;&lt;/EM&gt; Data Store. &lt;/SPAN&gt;Default number is 5.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_2-1753260232208.png" style="width: 679px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290183iB0248737819ED8F1/image-dimensions/679x404?v=v2" width="679" height="404" role="button" title="mate_moricz_2-1753260232208.png" alt="mate_moricz_2-1753260232208.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-949009254"&gt;Restart job configuration&amp;nbsp;&lt;/H2&gt;&lt;P&gt;The Integration Flow “&lt;EM&gt;&lt;I&gt;Pipeline DS Retry - Template - Restart Job&lt;/I&gt;&lt;/EM&gt;” relies on the configuration of different Restart Job Profiles. Multiple variants can be configured to have different scheduled versions of the Restart Job for specific interfaces.&lt;/P&gt;&lt;P&gt;Note that interfaces must be explicitly specified, no regex pattern is applicable in the profiles. Also, there is no default Job Profile applicable for all integration scenarios, i.e. if there is no defined job profile for the interface – the messages won’t be restarted&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Status&lt;/STRONG&gt;&lt;SPAN&gt; – Can be set to “&lt;EM&gt;&lt;I&gt;active”&lt;/I&gt;&lt;/EM&gt; or “&lt;EM&gt;&lt;I&gt;inactive”&lt;/I&gt;&lt;/EM&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;InterfacePidList&lt;/STRONG&gt;&lt;SPAN&gt; – Defines the list of the interfaces (or integration scenarios) for which the message restarts should be triggered. Multiple scenarios can be set by using the character semicolon &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;“;”&lt;/I&gt;&lt;/EM&gt;&lt;/STRONG&gt; as a delimiter. The Restart Job will consider the scenario-specific configuration defined in the Partner Directory (assigned Data Store, number of retries and restart mode).&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Store&lt;/STRONG&gt;&lt;SPAN&gt; – (&lt;/SPAN&gt;&lt;SPAN&gt; If not set, &lt;EM&gt;&lt;I&gt;Retry&lt;/I&gt;&lt;/EM&gt; stores will be always&amp;nbsp;used (with value &lt;EM&gt;&lt;I&gt;Retry&lt;/I&gt;&lt;/EM&gt;). In case of emergencies or if the API based restart can’t be used, restart from the &lt;EM&gt;&lt;I&gt;NoRetryStore&lt;/I&gt;&lt;/EM&gt; can be set for scheduled Restart Jobs. &lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Filters within the Restart Job Profile. If not set, all entries from the given Data Store will be restarted.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Receiver&lt;/STRONG&gt;&lt;SPAN&gt; – (&lt;/SPAN&gt; &lt;SPAN&gt;Receiver name to select all the entries from the Data Store that belong to the specified receiver (for the stages when receiver is unknown (e.g. Inbound), the value “&lt;EM&gt;&lt;I&gt;null&lt;/I&gt;&lt;/EM&gt;” can be sent and then all entries without receiver will be selected). Example of value: &lt;EM&gt;&lt;I&gt;“S4HCLNT100”. &lt;/I&gt;&lt;/EM&gt;Note that the parameter setting is global for all interfaces maintained in the &lt;EM&gt;&lt;I&gt;InterfacePidList&lt;/I&gt;&lt;/EM&gt; parameter, it can’t be set for each interface separately.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;TimeFrom&lt;/STRONG&gt;&lt;SPAN&gt; – (Optional parameter): Interval start timestamp in UTC format to select all the entries from the Data Store that have timestamp in DS Entry name later than specified timestamp. Example of value: “&lt;EM&gt;&lt;I&gt;2025-06-01T09:00:00.000Z&lt;/I&gt;&lt;/EM&gt;”.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;TimeTo&lt;/STRONG&gt;&lt;SPAN&gt; – (Optional parameter): Interval end timestamp in UTC format to select all the entries from the Data Store that have timestamp in DS Entry name earlier than specified timestamp. Example of value: “&lt;EM&gt;&lt;I&gt;2025-06-02T09:00:00.000Z&lt;/I&gt;&lt;/EM&gt;”.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_1-1753261119683.png" style="width: 601px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290215i9B8F1F9C2D096BAA/image-dimensions/601x275?v=v2" width="601" height="275" role="button" title="mate_moricz_1-1753261119683.png" alt="mate_moricz_1-1753261119683.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Below screenshot shows a Restart Job profile with the optional parameters.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_2-1753261204824.png" style="width: 599px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290216iC66249024E4F1415/image-dimensions/599x384?v=v2" width="599" height="384" role="button" title="mate_moricz_2-1753261204824.png" alt="mate_moricz_2-1753261204824.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The Restart Job from the template Integration Flow &lt;EM&gt;&lt;I&gt;Pipeline DS Retry - Template - Restart Job&lt;/I&gt;&lt;/EM&gt;&amp;nbsp;can be configured to use a schedule-based trigger (start Timer event). Default configuration is to run &lt;EM&gt;&lt;I&gt;On Deployment.&lt;/I&gt;&lt;/EM&gt;&lt;/P&gt;&lt;DIV&gt;&lt;H2 id="toc-hId-752495749"&gt;&lt;SPAN&gt;On-Demand Restarts or Data Store management via HTTP API&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;There are 2 optional Integration Flows in the package which can be used for on-demand operations. They expose 2 HTTP endpoints to manage Retry related operations and to manage Data Store entries. The functionality is divided into 2 Integration Flows for more granular control on authorization level who is allowed to call Restart operations only and who is allowed to Cancel messages (manipulate Data Store entries).&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_0-1753261055289.png" style="width: 947px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290213i2EE2FC23FCB080E3/image-dimensions/947x424?v=v2" width="947" height="424" role="button" title="mate_moricz_0-1753261055289.png" alt="mate_moricz_0-1753261055289.png" /&gt;&lt;/span&gt;&lt;DIV&gt;&lt;P&gt;These 2 additional Integration Flows are acting as APIs for more granular control of messages in the Data Stores than the Restart Job. On the other hand, these must be handled with caution as it requires deep understanding of the extension package on how to restart a corresponding package.&lt;/P&gt;&lt;H2 id="toc-hId-555982244"&gt;Configuration steps to use the package&lt;/H2&gt;&lt;DIV&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Configure and Deploy mandatory Integration Artefacts of DS Restart Extension package.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Assign Data Store Restart Configuration for Configuration Scenarios in Partner Directory.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Enable Custom Exception Handling in generic Integration Flows of Process Integration Pipeline package.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create Restart Job Profiles in Partner Directory.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create a Restart Job Integration Flow from Template, Configure Parameters and Deploy.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;(Optional) Configure and Deploy Integration Flows for On-Demand Restarts or Data Store management via HTTP API.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-359468739"&gt;Further improvements&lt;/H2&gt;&lt;P&gt;We are planning to add further improvements to the package such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Configurable no restart stages&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Add default Restart Job Profile if scenarios are not maintained explicitly&lt;/LI&gt;&lt;LI&gt;Catch mapping errors in the outbound stages and move these messages into the NoRetry store (as there is no option to edit a message like in SAP PO)&lt;/LI&gt;&lt;LI&gt;Catch routing errors for the Integrated Messaging Runtime&lt;/LI&gt;&lt;LI&gt;Current Receiver filter in the Restart Job Profile setting is global, needs to be changed to scenario-specific filter&lt;/LI&gt;&lt;LI&gt;Add extension point in the&amp;nbsp;&lt;EM&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&amp;nbsp;&lt;/EM&gt;Integration Flow for potential custom alerting requirement&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you have any further ideas to enhance the package, let us know in the comments.&lt;/P&gt;&lt;H2 id="toc-hId-162955234"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;The &lt;EM&gt;Process Integration Pipeline Extension - Restart via Data Store&lt;/EM&gt; package offers a viable solution to the challenges faced when utilizing the Process Integration Pipeline concept. By automating message retries through scheduled jobs and APIs, and shifting reliance from Dead Letter Queues to Data Stores,&amp;nbsp;&lt;SPAN&gt;users can effectively manage message restarts as an alternative to the standard error handling of the Pipeline concept. By leveraging the Pipeline’s custom exit for error handling, this can be achieved without requiring changes to the standard Process Integration Pipeline package.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/process-integration-pipeline-extension-restart-via-data-store/ba-p/14153116"/>
    <published>2025-07-23T17:38:26.286000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cpi-buttons-helpful-tools-for-sap-integration-suite-developer/ba-p/14156345</id>
    <title>CPI Buttons: Helpful Tools for SAP Integration Suite Developer</title>
    <updated>2025-07-24T09:15:47.831000+02:00</updated>
    <author>
      <name>emreanil</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1700700</uri>
    </author>
    <content>&lt;P&gt;In my &lt;A href="#https://community.sap.com/t5/technology-blog-posts-by-members/quot-pd-where-used-quot-button-an-extension-for-sap-integration-suite/ba-p/14125200" target="_self" rel="nofollow noopener noreferrer"&gt;previous blog post&lt;/A&gt;, I introduced an extension called &lt;STRONG&gt;PD Where Used&lt;/STRONG&gt;, which helped SAP Integration Suite developers quickly identify where &lt;STRONG&gt;ProcessDirect&lt;/STRONG&gt; endpoints were consumed.&lt;/P&gt;&lt;P&gt;Since then, I’ve gathered feedback and added new features that help integration consultants save time, especially when dealing with large numbers of iFlows. The result is a new, enhanced extension:&lt;/P&gt;&lt;H2 id="toc-hId-1735154661"&gt;CPI Buttons&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;CPI Buttons&lt;/STRONG&gt; is an extension that combines several small but helpful tools to make working with the SAP Integration Suite more efficient. It includes the original &lt;STRONG&gt;PD Where Used&lt;/STRONG&gt; functionality along with new features for navigation, documentation, and artifact discovery.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1538641156"&gt;Why CPI Buttons?&lt;/H2&gt;&lt;P&gt;Many daily tasks in integration projects are repetitive and time-consuming:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Tracing ProcessDirect usage across iFlows&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Tracing JMS usage across iFlows&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Exporting artifact metadata for documentation&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Finding out which iFlow corresponds to a known endpoint&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This extension adds a few non-intrusive buttons directly to the Integration Suite interface to streamline these actions.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1342127651"&gt;Features&lt;/H2&gt;&lt;H3 id="toc-hId-1274696865"&gt;Where Used (PD and JMS)&lt;/H3&gt;&lt;P&gt;This feature appears in the &lt;STRONG&gt;iFlow Design&lt;/STRONG&gt; page and allows you to scan:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;PD Where Used&lt;/STRONG&gt;: Lists other iFlows that consume current flow’s ProcessDirect endpoints.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;JMS Where Used&lt;/STRONG&gt;: Lists other iFlows that send or receive messages using the same JMS queues.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All flow names in the results are clickable, allowing you to directly navigate to the corresponding iFlow.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="pdwhereused2.gif" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288523i6D48DF200EA09E5E/image-size/large?v=v2&amp;amp;px=999" role="button" title="pdwhereused2.gif" alt="pdwhereused2.gif" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="jmswhereused2.gif" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288522iF15487BC80D09D2F/image-size/large?v=v2&amp;amp;px=999" role="button" title="jmswhereused2.gif" alt="jmswhereused2.gif" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-949100641"&gt;&lt;STRONG&gt;Export Integration Content to Excel&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;You’ll find two “Export to Excel” buttons:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;In the &lt;STRONG&gt;Design screen&lt;/STRONG&gt;: Exports all design-time iFlows with technical and business metadata&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;In the &lt;STRONG&gt;Monitoring screen&lt;/STRONG&gt;: Exports deployed artifacts, grouped by type (IntegrationFlow, ValueMapping, etc.)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These exports help you with documentation, audit preparation, or simply analyzing your integration landscape.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="export in mnt.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288524i90956A10C0267CEB/image-size/large?v=v2&amp;amp;px=999" role="button" title="export in mnt.png" alt="export in mnt.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="export to excel button in shell design.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288525iDD4B2FA8296AFC55/image-size/large?v=v2&amp;amp;px=999" role="button" title="export to excel button in shell design.png" alt="export to excel button in shell design.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Untitled.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288527i59FEB683ED4C4A67/image-size/large?v=v2&amp;amp;px=999" role="button" title="Untitled.png" alt="Untitled.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-881669855"&gt;Endpoint Search Bar (Monitoring Page)&lt;/H3&gt;&lt;P&gt;Support projects often suffer from inconsistent naming conventions between iFlow names and endpoint URLs. It’s common to know an endpoint (from logs, alerts, tickets) but not which iFlow it's connected to.&lt;/P&gt;&lt;P&gt;This search bar, added to the &lt;STRONG&gt;Monitoring page&lt;/STRONG&gt;, allows you to paste any known endpoint and shows the corresponding iFlow instantly via a toast popup.&lt;/P&gt;&lt;P&gt;Only exact matches are considered to avoid false positives. After pasting the endpoint to the searchbar, you should push the enter button.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="endpointsearch2.gif" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288528i75C78C0F4655B79E/image-size/large?v=v2&amp;amp;px=999" role="button" title="endpointsearch2.gif" alt="endpointsearch2.gif" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-556073631"&gt;&lt;STRONG&gt;Platform Compatibility&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;CPI Buttons has been tested and works reliably on both SAP Integration Suite (Cloud Foundry) and Neo environments.&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-359560126"&gt;Installation&lt;/H2&gt;&lt;P&gt;For Chrome: Install directly from &lt;A href="https://chromewebstore.google.com/detail/cpi-buttons/jhmmppnlbopemjlalhnbbffflkonhcol" target="_self" rel="nofollow noopener noreferrer"&gt;Chrome Web Store&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Once installed, the new buttons will appear automatically in the relevant SAP Integration Suite screens.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-163046621"&gt;Feedback&lt;/H2&gt;&lt;P&gt;If you find &lt;STRONG&gt;CPI Buttons&lt;/STRONG&gt; useful, feel free to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Share with your team&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Connect with me on &lt;A href="https://www.linkedin.com/in/eakucuk/" target="_self" rel="nofollow noopener noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Comment on SAP Community with suggestions or feature requests&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Emre Anil Kucuk&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cpi-buttons-helpful-tools-for-sap-integration-suite-developer/ba-p/14156345"/>
    <published>2025-07-24T09:15:47.831000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/beginners-guide-to-advanced-event-mesh/ba-p/14160854</id>
    <title>Beginners Guide to Advanced Event Mesh</title>
    <updated>2025-07-24T19:38:48.018000+02:00</updated>
    <author>
      <name>PriyankaChak</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3763</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1606821552"&gt;&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In this blog post, I will show the common scenarios of Advanced Event Mesh. To get familiar with basic concepts, go through the below links as a prerequisite.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-basic-concepts/ba-p/13572050" target="_blank"&gt;&lt;SPAN&gt;Advanced Event Mesh: Basic Concepts&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-create-your-first-event-broker/ba-p/13571945" target="_blank"&gt;Advanced Event Mesh: Create your first event broker&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-queue/ba-p/13574698" target="_blank"&gt;Advanced Event Mesh: Queue&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Advanced event mesh is powered by Solace and throughout the blog post I will use a solace trial account. All the steps remain same if you are using AEM (Advanced Event Mesh).&lt;/P&gt;&lt;P&gt;In this blog post, the following topics will be covered.&lt;/P&gt;&lt;UL class="lia-list-style-type-square"&gt;&lt;LI&gt;Publish Message to Queue using AEM adapter&lt;/LI&gt;&lt;LI&gt;Consume Message from Queue using AEM adapter&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;DMQ Setup and Error Handling&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Direct Message&lt;/LI&gt;&lt;LI&gt;Durable topic endpoint&lt;/LI&gt;&lt;LI&gt;Use of Selector&lt;/LI&gt;&lt;LI&gt;Send NACK to Publisher&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Time-to-Live&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;Rest Delivery Point&lt;/LI&gt;&lt;LI&gt;Replay Log&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Parallel Consumers&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Request Reply Pattern&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1539390766"&gt;&lt;U&gt;Scenario 1:&amp;nbsp;&lt;STRONG&gt;Publish Message to Queue using AEM adapter&lt;/STRONG&gt;&lt;/U&gt;&lt;/H2&gt;&lt;H2 id="toc-hId-1342877261"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 1:&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Create a queue in AEM&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pic1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290621iC6074800661F8CC9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pic1.png" alt="Pic1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1146363756"&gt;Step 2:&lt;/H2&gt;&lt;P&gt;Create an iFlow&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290622iFD2EF4CA7744712E/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic2.png" alt="pic2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Configure HTTP sender adapter&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290624i8384715FAECDD8FA/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic3.png" alt="pic3.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Configure AEM receiver adapter.&amp;nbsp;Here, the password secure alias is of type Secure Parameter.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290625i1CE663D6B9E2BA16/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic4.png" alt="pic4.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;The queue name is populated based on the value of Camel header - CamelHttpPath&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290626iEA4E50394B278A2A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic5.png" alt="pic5.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;The message is set as DMQ eligible.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290627iE48BC6BCB83F7BCC/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic6.png" alt="pic6.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-949850251"&gt;Step 3:&lt;/H2&gt;&lt;P&gt;Send event message using API testing tool to the endpoint:&amp;nbsp;&lt;SPAN&gt;https://&amp;lt;host&amp;gt;/http/generic/order&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290638iF54AA38F1805B400/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic7.png" alt="pic7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-753336746"&gt;Step 4:&lt;/H2&gt;&lt;P&gt;Validate if the message is pushed to the AEM queue&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290639i5BE9EF92F2528F47/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic8.png" alt="pic8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-427740522"&gt;&lt;U&gt;Scenario 2:&amp;nbsp;&lt;STRONG&gt;Consume Message from Queue using AEM adapter&lt;/STRONG&gt;&lt;/U&gt;&lt;/H1&gt;&lt;H2 id="toc-hId-360309736"&gt;Step 1:&lt;/H2&gt;&lt;P&gt;Create an iFlow to consumer message from the AEM queue. Set Allowed headers as * to trace the incoming headers.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290657iB3EECA80B4123FD5/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic11.png" alt="pic11.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure AEM sender channel&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290655iCB315C9F6B5FFD84/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic10.png" alt="pic10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-163796231"&gt;Step 2:&lt;/H2&gt;&lt;P&gt;Check message trace in Cloud Integration and verfiy headers. As the publisher iFlow set the the header DMQ eligible as true, the 'IsDMQEligible' header is true.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290658i8384CCFDF138EB1D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic12.png" alt="pic12.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--32717274"&gt;Step 3:&lt;/H2&gt;&lt;P&gt;Verify the consumer status attached to the AEM queue.&amp;nbsp; Here, it reflects 'Messages Confimed Delivered' as 1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290660iB9EBA690461C792E/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic13.png" alt="pic13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-411426585"&gt;&lt;U&gt;Scenario 3:&amp;nbsp;DMQ Setup and Error Handling&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;To move a message to DEAD Message queue upon delivery failure, follow the steps below.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--78489927"&gt;Step 1:&lt;/H2&gt;&lt;P&gt;Configure AEM queue as below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic14.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290674iDCE5654391468F40/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic14.png" alt="pic14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic15.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290675iD35BE07431A55647/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic15.png" alt="pic15.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Also, the queue is subscribed to the topic expression order/&amp;gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic17.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290699i46DF08487EFA60B5/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic17.png" alt="pic17.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId--275003432"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--471516937"&gt;&lt;SPAN&gt;Step 2:&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;Change receiver channel configuration in order to push event message to a topic.&amp;nbsp;The topic name is dynamically set using the header - CamelHttpPath .&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic18.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290701iCBD430E46E440983/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic18.png" alt="pic18.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;SPAN&gt;The sender channel will consume messages from the queue named ‘order’. The message sent from the publisher iFlow is a JSON message. In order to simulate failure, XML to JSON converter block is added .&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic24.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290791i5F394882ADC9A341/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic24.png" alt="pic24.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;SPAN&gt;&lt;SPAN&gt;Notice the acknowledgement mode is 'Automatic Immediate' at Cloud Integration (Consumer).&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic20.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290703i9E27FF6CCB4DA0A7/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic20.png" alt="pic20.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H2 id="toc-hId--668030442"&gt;&lt;SPAN&gt;&lt;SPAN&gt;Step 3:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;POST message to the endpoint &lt;/SPAN&gt;&lt;SPAN&gt;&lt;A target="_blank" rel="noopener"&gt;https://&amp;lt;host&amp;gt;/http/generic/order&lt;/A&gt;. No message will be pushed to the queue, because the topic subscription order/&amp;gt; expects at least one level after order.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290704i4DB8D6A7DD42635D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic21.png" alt="pic21.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic22.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290787i44C777A310C778E8/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic22.png" alt="pic22.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H2 id="toc-hId--864543947"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1061057452"&gt;Step 4:&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;Push message to the endpoint&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A target="_blank" rel="noopener"&gt;https://&amp;lt;host&amp;gt;/http/generic/order/create&lt;/A&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic23.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290788i5E6B085EB962D6D4/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic23.png" alt="pic23.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;But, observe the message is successfully deleted from the queue. It is because acknowledgment mode is 'automatic immediate'.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic22.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290792i0060F19F2AE2736F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic22.png" alt="pic22.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;SPAN&gt;Now, the retry happens in Cloud Integration 4 times and then the message is marked as failed.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic25.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291140i830D53EFEB5DD68C/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic25.png" alt="pic25.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;The below shows the trace of Run 1. The header 'DeliveryCount' is set from AEM. The header 'LocalProcessingAttempt' refers to processing attempts at Cloud Integration.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pic26.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290796iFD894F15D0A46C61/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pic26.png" alt="Pic26.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;At run 5,&amp;nbsp; LocalProcessingAttempt value will be 5. After run 5, the message moves to failed state, as the maximum message processing attempts is set as 5.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic27.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290833i794C46321035808E/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic27.png" alt="pic27.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId--1257570957"&gt;Step 5:&lt;/H2&gt;&lt;P&gt;Now, change the acknowledge mode to 'Automatic on Exchange Complete'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic28.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290837iAD4C80286CFE4F86/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic28.png" alt="pic28.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;Trigger the event message from API testing tool.&amp;nbsp;&lt;SPAN&gt;After trigger, the message is still in the queue, while retry is going on at Cloud Integration.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic29.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290841iB059A0701B8BA1D8/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic29.png" alt="pic29.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;SPAN&gt;Now, after 4 retries, in Cloud Integration, failed status is sent back to the AEM.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic30.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290843iF6641703926D6186/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic30.png" alt="pic30.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;During the 5th run, we can see the local processing attempt as 5.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic32.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290846i130425AFEF233B35/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic32.png" alt="pic32.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As we have provided, the re-delivery count as 3 in AEM, the AEM re-delivers it 3 times.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic31.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290845i2D4D729B3EBB60F0/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic31.png" alt="pic31.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below shows 1st re-delivery i.e, 2nd delivery from AEM (Run 5 at Cloud Integration)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic33.png" style="width: 986px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290847iE32C75EB29C53539/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic33.png" alt="pic33.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;3rd re-delivery from AEM&amp;nbsp;(Run 5 at Cloud Integration)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic34.png" style="width: 986px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290848iE1A8D124F345D116/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic34.png" alt="pic34.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Then the message is moved to DMQ (Dead Message Queue). Please note, the DMQ queue must be created beforehand. DMQs are not automatically created during message failure.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic35.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290849i7E39079208A3C7F6/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic35.png" alt="pic35.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic36.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290850i58FDD6DF857C9517/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic36.png" alt="pic36.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--1160681455"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId--1357194960"&gt;&lt;U&gt;Scenario 4:&amp;nbsp;&lt;STRONG&gt;Direct Message&lt;/STRONG&gt;&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;For direct message, if we use topic, no queue or topic endpoint configuration is required at AEM. If consumer is available during publishing of message, the message will be consumed, else the message will be lost.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1678927781"&gt;&lt;SPAN&gt;Step 1:&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Configure Publisher iFlow.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic37.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290851iFACC73D447C1FDFA/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic37.png" alt="pic37.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1875441286"&gt;&lt;SPAN&gt;Step 2:&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Configure Consumer iFlow.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic38.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290853iA5DC1A99EDE40932/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic38.png" alt="pic38.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--2071954791"&gt;&lt;SPAN&gt;Step 3:&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Test and validate.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic39.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290854i54BAE817D3535F4D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic39.png" alt="pic39.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic40.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290855i29F4F0EB4BF0AC54/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic40.png" alt="pic40.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--1975065289"&gt;&lt;U&gt;Scenario 5: &lt;STRONG&gt;Durable topic endpoint&lt;/STRONG&gt;&lt;/U&gt;&lt;/H1&gt;&lt;H2 id="toc-hId-1829985495"&gt;Step 1:&lt;/H2&gt;&lt;P&gt;Create a topic endpoint at AEM.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic41.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290893i30D83B02B9A5747B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic41.png" alt="pic41.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1633471990"&gt;Step 2:&lt;/H2&gt;&lt;P&gt;Configure the AEM receiver adapter which acts as a publisher.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic42.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290898iE594719D65228B8B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic42.png" alt="pic42.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure the AEM sender adapter which acts as a subscriber.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic43.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290899i12DEEFDC36C8EFED/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic43.png" alt="pic43.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Durable Topic endpoint supports a single subscription. Once a consumer is attached, the topic name gets populated.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic44.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290901iD88E84210C502EF6/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic44.png" alt="pic44.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, currently the topic endpoint has 2 messages queued.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1436958485"&gt;Step 3:&lt;/H2&gt;&lt;P&gt;Change the topic name at Cloud Integration side to 'product/create'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic45.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290907i7031B5674641AE40/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic45.png" alt="pic45.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After changing the topic name to 'product/create' and deploying the consumer iFlow, all existing messages are deleted automatically without delivering it to the consumer and the recent topic name gets reflected.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic46.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290912i4477764CC85AFF46/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic46.png" alt="pic46.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1533847987"&gt;&lt;U&gt;Scenario 6: Use of Selector&lt;/U&gt;&lt;/H1&gt;&lt;H2 id="toc-hId-1043931475"&gt;Step 1:&lt;/H2&gt;&lt;P&gt;Configure Publisher iFlow as below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic47.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290916iC7A8E5D494AF399F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic47.png" alt="pic47.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Set event type, priorty and status as user properties.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic48.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290917iEBE79C4AD51195AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic48.png" alt="pic48.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic50.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290919iB7F1B64273E62414/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic50.png" alt="pic50.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-847417970"&gt;Step 2:&lt;/H2&gt;&lt;P&gt;Populate the selector field at AEM sender adapter as below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic51.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290920i573343B7C2BA8B45/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic51.png" alt="pic51.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-819088156"&gt;Step 3:&lt;/H2&gt;&lt;P&gt;Test with payload field values as below:&lt;/P&gt;&lt;TABLE border="1" width="94.90771198830409%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;data/eventType&lt;/TD&gt;&lt;TD width="44.908400877545695%"&gt;order.updated&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;data/status&lt;/TD&gt;&lt;TD width="44.908400877545695%"&gt;delayed&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;data/priority&lt;/TD&gt;&lt;TD width="44.908400877545695%"&gt;high&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic52.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290922iBF31347C5651BE5F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic52.png" alt="pic52.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Check the trace of consumed message at Cloud Integration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic53.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290942i0A230330A0075032/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic53.png" alt="pic53.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now, test with payload field values as below:&lt;/P&gt;&lt;TABLE border="1" width="845"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="441.516px" height="30px"&gt;data/eventType&lt;/TD&gt;&lt;TD width="402.484px" height="30px"&gt;order.updated&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="441.516px" height="30px"&gt;data/priority&lt;/TD&gt;&lt;TD width="402.484px" height="30px"&gt;high&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic54.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291228iF0EF981B59809CFE/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic54.png" alt="pic54.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The message is not consumed from the queue as the selector does not match.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic55.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290949i98761AD56CA07A5A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic55.png" alt="pic55.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-915977658"&gt;&lt;U&gt;Scenario 7:&amp;nbsp;&lt;STRONG&gt;Send NACK to Publisher&lt;/STRONG&gt;&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;General behavior is&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;If topic subscription does not exist for delivery mode &lt;EM&gt;persisted(guaranteed)&lt;/EM&gt; or &lt;EM&gt;direct&lt;/EM&gt;, no error response is sent to the publisher&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If queue does not exist for delivery mode &lt;EM&gt;persisted(guaranteed)&lt;/EM&gt;, error response is sent to the publisher&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic57.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290968i33854A2A8617A08E/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic57.png" alt="pic57.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;If the queue does not exist for delivery mode &lt;EM&gt;direct&lt;/EM&gt;, no error response is sent to the publisher.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The profile related to used client username (solace-cloud-client) is 'default' at AEM.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic58.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290970i10921FB16D2759F1/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic58.png" alt="pic58.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Go to 'default' profile at AEM.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic60.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290971iACE050A7AEB5D13B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic60.png" alt="pic60.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After 'Reject Messages to Sender On No Subscription Match Discard' is enabled, if no matching topic subscription is found for persistent delivery mode, an error message is returned to the publisher.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic61.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290976i34F09850674DF65B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic61.png" alt="pic61.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, if we stop the incoming calls to the queue,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic62.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290991i38387B817B363A53/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic62.png" alt="pic62.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;we will get the error message as below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic63.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290997i9F7E835277C656C3/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic63.png" alt="pic63.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, we change the property 'Reject Messages to Sender on Discard' on the queue to ‘Always’,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic64.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290998i41138C90FE54CC02/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic64.png" alt="pic64.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;we will get the error message as below,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic65.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290999iB2B5BBC4DE9DF43F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic65.png" alt="pic65.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-719464153"&gt;&lt;U&gt;Scenario 8:&amp;nbsp;&lt;STRONG&gt;TTL (Time to Live)&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;Enable TTL feature of queue at AEM.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic66.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291001i606DE7D2FE6F0AD0/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic66.png" alt="pic66.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If the message is not consumed, the message will be moved to DMQ after 1 min.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Here, no TTL specific settings are configured in the receiver channel at Cloud Integration.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If we don’t want to store it in the DMQ and discard the message after TTL, set DMQ eligible to false at publisher iFlow.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic67.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291002iC9AF3ED1D503564B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic67.png" alt="pic67.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After TTL, the stats will reflect the same at AEM.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic69.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291004i7EDF55607845D1FD/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic69.png" alt="pic69.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If TTL is set at receiver adapter, the minimum of the queue level TTL and the publisher level TTL takes effect.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic70.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291006i23F62FB47ADD4EEE/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic70.png" alt="pic70.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-522950648"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-326437143"&gt;&lt;U&gt;Scenario 9: RDP (REST Delivery Point)&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;We have a common DMQ queue for all processes and the Rest Delivery points to Cloud Integration endpoint. Based on the endpoint, Cloud Integration forwards it for relevant processing of the DMQ messages.&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Business Object&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Endpoint&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;Business Partner&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;redeliver/businesspartner/&amp;lt;BPNumber&amp;gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;Order&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;redeliver/order/&amp;lt;OrderNumber&amp;gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId--163479369"&gt;Step 1:&lt;/H2&gt;&lt;P&gt;Design the publisher iFlow as below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic71.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291014iA5A86E2089B5F2C8/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic71.png" alt="pic71.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;User Property named ‘identifier’ is added in AEM receiver adapter.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic72.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291017iDC942A34096784D9/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic72.png" alt="pic72.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--359992874"&gt;Step 2:&lt;/H2&gt;&lt;P&gt;Create RDP at AEM.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic73.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291028iDD0D5E98A5AA49E9/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic73.png" alt="pic73.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Create Rest Consumer with authentication type ‘OAuth2’ for Cloud Integration&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic74.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291031i1C22EA77E23CF9A5/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic74.png" alt="pic74.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Bind the AEM queue to the RDP endpoint.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic75.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291033iF2FCAAC85C4F866D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic75.png" alt="pic75.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On the queue bindings settings, turn on the 'Substitution Expressions' for 'Request Target Evaluation'.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;The below substitution expression is used for target endpoint genertion. The expression ${topic(1)} represents the 1st level of the topic.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;/http/redeliver/${topic(1)}/${userPropertyAsString("identifier")}&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic75.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291038iC1E75653930261EF/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic75.png" alt="pic75.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In case of failure at RDP, it retries forever unless we disable 'Try Forever' and set 'Maximum Redelivery Count' at DMQ.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic77.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291052i8E34A3ADCC9F61CC/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic77.png" alt="pic77.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--556506379"&gt;&lt;SPAN&gt;Step 3:&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;The generated endpoint for order message is shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic78.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291053i2EA1E84EDA9325AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic78.png" alt="pic78.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The generated endpoint for business partner message is shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic79.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291054i3F55CCA3CA31E608/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic79.png" alt="pic79.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--459616877"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId--656130382"&gt;&lt;U&gt;Scenario 10:&amp;nbsp;&lt;STRONG&gt;Replay Log&lt;/STRONG&gt;&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;If replay log is enabled, the messages can be replayed from Broker without publisher intervention.&amp;nbsp;&lt;SPAN&gt;To avoid saving the log for all queues, we can enable logging based on topic subscription.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic80.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291056iB4476E4B9E0047F7/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic80.png" alt="pic80.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic81.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291058i95FE8DA4C3DD1900/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic81.png" alt="pic81.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For example, the consumer 'Cloud Integration' forwards message to a target but the target system is down. All the messages from that point need to be replayed. For that, we need a start pointer and '&lt;/SPAN&gt;&lt;SPAN&gt;ReplicationGroupMessageId' can be used. As a pre-requisite, r&lt;/SPAN&gt;&lt;SPAN&gt;eplication group message id for each message should be logged as a custom header at Cloud Integration.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic82.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291061i78FA1A7A5D0126E4/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic82.png" alt="pic82.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, replay all the messages after the above replication group message id. Please note that selective replay of messages or providing an end replication group message id is not possible. Therefore, idempotency must be implemented on the target side to avoid processing duplicate messages.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic83.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291069iC7914E3285F415C5/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic83.png" alt="pic83.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic84.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291071i5D3AB816268F88CD/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic84.png" alt="pic84.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Messages after Replication Group Message ID will be replayed.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic85.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291072i539B7859FA886E9F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic85.png" alt="pic85.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Similarly, we can create a new queue and attach it to a new consumer and replay the previous log related to its topic subscription from the beginning or from a particular date and time or based on replication group message id.&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--684460196"&gt;&lt;U&gt;Scenario 11:&amp;nbsp;Parallel Consumers&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;No. of consumers = (no. of worker node) * (no. of parallel consumer).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic87.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291077i147DDF3C8901F325/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic87.png" alt="pic87.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If the tenant has 2 worker nodes and 1 parallel consumer, the consumer attached the queue will show up as below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic86.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291078i86448972D098B48B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic86.png" alt="pic86.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If we increase the parallel consumer to 5, &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic88.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291080i174609F5D2752BE7/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic88.png" alt="pic88.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;the consumer count becomes 10.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic89.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291082iFC0ED6E2A4F086EA/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic89.png" alt="pic89.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Only 1 consumer is active, the remaining 9 consumers are in inactive state. This is because the queue type is 'Exclusive'.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, if we change the queue type to ‘Non-Exclusive’,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic90.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291083i79857255A3B547AA/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic90.png" alt="pic90.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;all the consumers are active.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic91.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291084iA3087C31D9501336/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic91.png" alt="pic91.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;E.g., if we want a particular object id (say Business Partner) to be processed by the same consumer, we can utilize the partition concept. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;S&lt;/SPAN&gt;&lt;SPAN&gt;et the partition count as 5.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic92.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291085iA45559FCD26B2AAF/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic92.png" alt="pic92.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic93.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291087iBB1F2AAA12F8EDBE/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic93.png" alt="pic93.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Set the parallel consumers as 3&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic94.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291088i29DE6C3C193D5F0A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic94.png" alt="pic94.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;As the tenant has 2 worker nodes, the total no. of consumer will show up as 6.&amp;nbsp;&lt;SPAN&gt;Only 1 consumer is inactive. Remaining consumers are in active state as the number of partition count is 5.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic95.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291089i0B17307611C8095F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic95.png" alt="pic95.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;If we set 'JMSXGroupID' value, it will be used as a partition key.&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic96.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291090iDC841DDD6D62863A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic96.png" alt="pic96.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;For example, for BP number '10001234', the message was consumed by Flow ID 248 and for BP number '10001236', it was consumed by Flow ID 281.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;All the updates related to BP '10001236', are lined up for the same consumer.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic98.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291092i063CF5ABE600E7BC/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic98.png" alt="pic98.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic99.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291093i5D4F5683AD079B42/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic99.png" alt="pic99.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--880973701"&gt;&lt;U&gt;Scenario 12: Request Reply Pattern&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;The publisher iFlow is designed as below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic102.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291099iB8685F92142FC04F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic102.png" alt="pic102.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure the AEM receiver channel as below.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic100.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291096i51D08A48BE741F7D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic100.png" alt="pic100.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This will create a non-durable queue at AEM when the message is sent from publisher iFlow.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic101.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291098i9DF60083CC67AC7A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic101.png" alt="pic101.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Consumer iFlow receives the headers populated from Publisher iFlow related to response propagation, such as&amp;nbsp;&lt;EM&gt;ReplyToDestination&lt;/EM&gt;, &lt;EM&gt;ReplyToEndpointType&lt;/EM&gt; and &lt;EM&gt;CorrelationId&lt;/EM&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic103.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291100i7727E259B177B710/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic103.png" alt="pic103.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic104.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291101iE5C1FBFA5A911A93/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic104.png" alt="pic104.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Design Consumer iFlow as below&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic105.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291104i3A8FEF4838E9CB72/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic105.png" alt="pic105.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Please note: The delay is used here only to simulate processing time instead of adding additional pallets.&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;AEM receiver adapter is used to send back the response.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic106.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291114i4747512158DC8995/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic106.png" alt="pic106.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic107.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291115iB9923241A9A90D28/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic107.png" alt="pic107.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After 'request-reply' step in the publisher iFlow message trace, we will see the response headers.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic108.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291116iE5A6B0C349D84A19/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic108.png" alt="pic108.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Lets test the publisher iFlow.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic109.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291227i6F9868EF3389CFD7/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic109.png" alt="pic109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As we can see, the response message is received.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thank you for reading this blog post.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/beginners-guide-to-advanced-event-mesh/ba-p/14160854"/>
    <published>2025-07-24T19:38:48.018000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite-quickstart-tpm-integration-advisor-and-as2/ba-p/14143175</id>
    <title>SAP Integration Suite Quickstart: TPM, Integration Advisor, and AS2 Integration—Your Practical Guide</title>
    <updated>2025-07-25T07:25:04.210000+02:00</updated>
    <author>
      <name>Rishikasairi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1940355</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;My Practical Kickstart with SAP Integration Suite: TPM &amp;amp; Integration Advisor&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;When I first started working with SAP Integration Suite, I quickly realized how overwhelming the documentation and theory could be. My goal with this series is to share the exact steps and lessons I learned, so you can get hands-on with message-based integration without getting lost in the weeds.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why This Series Exists?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In my day-to-day projects, I’ve needed to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Onboard new trading partners using TPM&lt;/LI&gt;&lt;LI&gt;Build secure message flows with AS2 adapters&lt;/LI&gt;&lt;LI&gt;Transform EDI documents using Integration Advisor&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;I noticed that while SAP provides&amp;nbsp; set of tools, the real challenge is connecting the dots between theory and practical implementation. That’s what I’ll focus on real steps you can follow, based on what actually worked for me in client environments.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What You’ll Get from My Approach&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1. &lt;U&gt;End-to-end setup:&lt;/U&gt;&amp;nbsp; I’ll walk you through setting up SAP Integration Suite from scratch, including the initial login, configuring adapters, and deploying your first integration flow.&lt;/P&gt;&lt;P&gt;2. &lt;U&gt;Hands-on with security:&lt;/U&gt;&amp;nbsp; I’ve spent a lot of time fine-tuning AS2 Receiver and Sender Adapters, setting up API Proxies, and using Groovy scripts for OAuth 2.0, decryption, and signature validation. I’ll share the scripts and configuration tips that saved me hours.&lt;/P&gt;&lt;P&gt;3. &lt;U&gt;Integration Advisor in action:&lt;/U&gt;&amp;nbsp; I’ll show you how I used Integration Advisor to generate Mapping Guidelines (MIG) and Mapping Artifacts (MAG), and how the EDI Converter and MIG Schema simplified complex message transformations.&lt;/P&gt;&lt;P&gt;4. &lt;U&gt;Reliable B2B messaging&lt;/U&gt;:&amp;nbsp; I’ll cover how I handled asynchronous Message Disposition Notifications (MDN) to ensure message delivery and compliance.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Here’s the sequence I found most logical when I set up my last B2B integration project:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Introduction:&amp;nbsp;&amp;nbsp;&lt;/EM&gt;I’ll start with a solution architecture diagram and a checklist of prerequisites, based on what tripped me up initially.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;AS2 Receiver Adapter:&amp;nbsp;&lt;/EM&gt;&amp;nbsp;I’ll share my configuration steps and troubleshooting notes.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;API Proxy Setup:&amp;nbsp;&amp;nbsp;&lt;/EM&gt;How I built a secure API layer, including lessons learned from failed attempts.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;AS2 Sender Setup:&lt;/EM&gt;&amp;nbsp; Advanced security with Groovy scripting—my favorite snippets included.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Integration Advisor Deep Dive:&lt;/EM&gt;&amp;nbsp; Creating and using MIGs and MAGs, with screenshots from my own environment.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;EDI Converter &amp;amp; MIG Schema:&lt;/EM&gt;&amp;nbsp; How I handled tricky message transformations.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Async MDN Handling:&lt;/EM&gt;&amp;nbsp; My approach to making integration flows robust and reliable.&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;STRONG&gt;Solution Architecture Diagram&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_0-1753176299275.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289706iB6E3512D0B9A97AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_0-1753176299275.png" alt="Rishikasairi_0-1753176299275.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why Follow This Series?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;No fluff:&lt;/EM&gt;&amp;nbsp; Everything here comes from actual project work , no theory for theory’s sake.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Visual learning:&lt;/EM&gt;&amp;nbsp; I’ll include diagrams and screenshots from my own SAP BTP environment, not just generic images.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Community-driven:&amp;nbsp;&lt;/EM&gt;&amp;nbsp;If you run into issues or want me to cover a specific scenario, comment below. I’m happy to share what I’ve learned or dig into new challenges.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You’ll need:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;An SAP BTP sub-account&lt;/LI&gt;&lt;LI&gt;A running Integration Suite service instance&lt;/LI&gt;&lt;LI&gt;Integration Advisor subscription&lt;/LI&gt;&lt;LI&gt;Basic integration and EDI knowledge&lt;/LI&gt;&lt;LI&gt;Access to a dev environment (I use SAP Cloud Integration and Business Application Studio)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Let’s Dive In&lt;/P&gt;&lt;P&gt;This isn’t just another technical blog it’s a collection of hard-won lessons from my journey with SAP Integration Suite. In the next post, I’ll walk you through configuring the AS2 Receiver Adapter for secure, reliable message flows, including the pitfalls I encountered and how I solved them.&lt;/P&gt;&lt;P&gt;If you find these guides helpful, please give a thumbs up or leave a comment with your integration wish-list. Your feedback shapes what I write next.&lt;/P&gt;&lt;P&gt;‌‌&lt;EM&gt;&amp;nbsp;Disclaimer:&amp;nbsp;&lt;/EM&gt;&amp;nbsp;All views here are my own, based on real project experience. Always validate configurations in your own environment.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite-quickstart-tpm-integration-advisor-and-as2/ba-p/14143175"/>
    <published>2025-07-25T07:25:04.210000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/step-by-step-guide-secure-file-exchange-with-as2-adapter-in-sap-cloud/ba-p/14143695</id>
    <title>Step-by-Step Guide: Secure File Exchange with AS2 Adapter in SAP Cloud Integration</title>
    <updated>2025-07-25T07:47:44.145000+02:00</updated>
    <author>
      <name>Rishikasairi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1940355</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1734144805"&gt;&lt;SPAN&gt;Sending and Receiving with AS2&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Ready for a quick, hands-on story about sending files safely between companies? In this part, we’ll walk through how to set up the AS2 protocol—a popular way to send important documents online, keeping them private and making sure they arrive as intended.&lt;/P&gt;&lt;P&gt;You’ll learn how to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Set up your system to send and receive files using AS2&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Turn on security features to keep your files safe while they travel&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Get a special receipt (called an MDN) every time a file is delivered, so you know it made it safely&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Handle big batches of files and make sure each one is tracked properly&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All of this is designed so you can follow along in just 10–15 minutes—no fuss, no confusion. By the end, you’ll have a working setup that connects smoothly with the tools we’ll cover next.&lt;/P&gt;&lt;P&gt;In this blog I am using two tenants One as sender Adapter [who is receiving the Data]and one as |Receiver Adapter [who is sending the Data].&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Workflow Mechanism &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Tenant 1: Sender Adapter Configuration&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Feature&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Details&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Authentication 1&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Role-Based via Load Balancer with &lt;STRONG&gt;ESB Messaging&lt;/STRONG&gt; role&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Decryption&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Use &lt;STRONG&gt;Receiver's Certificate&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Signing&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Use &lt;STRONG&gt;own Keypair Name&lt;/STRONG&gt; Algorithm: e.g., SHA256withRSA&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MDN (Message Disposition Notification)&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Asynchronous MDN&lt;/STRONG&gt; - Use &lt;STRONG&gt;same certificate&lt;/STRONG&gt; used in Decryption - &lt;STRONG&gt;Authentication&lt;/STRONG&gt;: Basic Auth or Client Certificate (depends on Tenant 2 setup) - Triggered by &lt;STRONG&gt;Asynchronous iFlow&lt;/STRONG&gt; from Tenant 2&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Tenant 2: Receiver Adapter Configuration&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Feature&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Details&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Authentication&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Basic Auth or Client Certificate - Use &lt;STRONG&gt;Client ID/Secret&lt;/STRONG&gt; or &lt;STRONG&gt;PFX file&lt;/STRONG&gt; received from Sender&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Encryption&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;- Create and configure a &lt;STRONG&gt;Key Pair&lt;/STRONG&gt; - Specify keypair name in &lt;STRONG&gt;Encryption Section&lt;/STRONG&gt; - Use the &lt;STRONG&gt;same algorithm&lt;/STRONG&gt; as the keypair&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Signing&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;- Upload and configure the &lt;STRONG&gt;Sender’s Certificate&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MDN Synchronous&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;- Use Sender’s certificate for &lt;STRONG&gt;signing&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MDN Asynchronous&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;- &lt;STRONG&gt;No authentication required&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Tenant 2: Asynchronous Flow (for MDN callback)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Feature&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Details&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Authorization&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;- Role-based access - Forward the &lt;STRONG&gt;PFX file&lt;/STRONG&gt; to Tenant 1 (Sender) - Used to sign MDN or decrypt incoming AS2 messages&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;AS2 sender (Receiving data) Configurations&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 1: Create an I Flow&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Log in to SAP Cloud Integration (CPI)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Open your CPI tenant.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Go to Design.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create a New Integration Flow:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Click on Artifacts under your desired package.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Click Add &amp;gt; Integration Flow.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Provide a Name and Description.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Click OK.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_0-1751539462542.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282179iE481BAA1B0BAC4F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_0-1751539462542.png" alt="Rishikasairi_0-1751539462542.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 2: Add Sender and Start Message&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Add Sender:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In the IFlow canvas, drag the Sender element from the palette to the left side of the flow.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Configure Sender with AS2 Adapter&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Click on the Sender element.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Connect Sender to Start Message&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In the Adapter Type dropdown, select AS2.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Click the pencil/edit icon to modify the AS2 adapter settings&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_1-1751539535217.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282182i4F1B4EE41219A1F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_1-1751539535217.jpeg" alt="Rishikasairi_1-1751539535217.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 3: In the connection tab of AS2 Adapter&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Address:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This is the endpoint path to which the AS2 messages will be sent.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Use a unique and descriptive path (e.g., &lt;/SPAN&gt;&lt;SPAN&gt;/as2/receiver-partner&lt;/SPAN&gt;&lt;SPAN&gt;).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Ensure it is consistent with your partner configuration.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Authorization:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;You need to specify the authorization type for accessing the AS2 endpoint.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Typically, this is "User Role".&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;User Role:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The user role assigned here must have access rights to call or expose the AS2 endpoint.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Example: &lt;/SPAN&gt;&lt;SPAN&gt;ESBMessaging.send&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;AS2InboundUser&lt;/SPAN&gt;&lt;SPAN&gt;, or any custom role with proper permissions.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_2-1751539535221.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282181i5FEF37FFA245D18F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_2-1751539535221.jpeg" alt="Rishikasairi_2-1751539535221.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;This the role that I was being used in the AS2 Endpoint creation iflow. If you would like to create a new role. Create in the Manage Security Material &amp;gt; User Roles and you can assign the role in the Integration flow service key instance so that this service key instance credentials can be used for authentication.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_3-1751539535228.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282183iED4FA93F6D490601/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_3-1751539535228.jpeg" alt="Rishikasairi_3-1751539535228.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I have assigned role in the Integration flow Instance (DEV) and Updated the Instance.&lt;/P&gt;&lt;P&gt;I have assigned role in the Integration flow Instance (DEV) and Updated the Instance.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_4-1751539649132.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282189iA529CA00DDCF1D6F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_4-1751539649132.jpeg" alt="Rishikasairi_4-1751539649132.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 4: In the processing Tab of AS2 Adapter&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;PARTNER ID RESOLUTION&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Source: &lt;/SPAN&gt;&lt;SPAN&gt;Authorized User&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This means the AS2 partner is determined based on the authenticated user calling the endpoint.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The user must be mapped to a partner AS2 ID in your system.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;EXPECTED MESSAGES&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;These fields define criteria to filter and validate inbound AS2 messages:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Message ID Left Part / Right Part:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Typically used to validate a pattern in the AS2 message ID.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Default is &lt;/SPAN&gt;&lt;SPAN&gt;0&lt;/SPAN&gt;&lt;SPAN&gt; which means no filtering is applied.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Partner AS2 ID:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Expected AS2 identifier of the partner.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;0&lt;/SPAN&gt;&lt;SPAN&gt; means no specific partner filtering.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Own AS2 ID:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Your tenant's AS2 ID. Used to verify the &lt;/SPAN&gt;&lt;SPAN&gt;To:&lt;/SPAN&gt;&lt;SPAN&gt; AS2 header.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If set to &lt;/SPAN&gt;&lt;SPAN&gt;0&lt;/SPAN&gt;&lt;SPAN&gt;, it's not enforced.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Message Subject:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Can be used to filter messages based on the subject header.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;0&lt;/SPAN&gt;&lt;SPAN&gt; means subject is not checked.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Number of Concurrent Processes:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Controls parallel processing of incoming messages.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Set to &lt;/SPAN&gt;&lt;SPAN&gt;1&lt;/SPAN&gt;&lt;SPAN&gt; in screenshot — means single-threaded processing for this endpoint.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;MESSAGE SETTINGS&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Mandatory File Name:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;If enabled, the AS2 message must include a filename.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Useful for systems relying on filename-based routing.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Duplicate Message ID:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;If enabled, it checks for duplicate AS2 message IDs and avoids processing them again.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Prevents reprocessing of already received messages.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Duplicate File Name:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Checks for duplicate file names in incoming messages.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_5-1751539649137.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282188i965EEAE116AE5154/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_5-1751539649137.jpeg" alt="Rishikasairi_5-1751539649137.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 5: Configuration of Security tab in AS2 Adapter:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;MESSAGE DECRYPTION&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Decryption Configuration Type: &lt;/STRONG&gt;&lt;SPAN&gt;Channel Configuration&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This means the decryption settings are configured directly in the adapter, not inherited from integration flow settings.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Decrypt Message: (Checked)&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This indicates the incoming AS2 message is expected to be &lt;STRONG&gt;encrypted&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;CPI will decrypt it using the specified &lt;STRONG&gt;private key&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Private Key Alias:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This is the alias of the private key created in the &lt;STRONG&gt;Keystore&lt;/STRONG&gt; of your tenant.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;CPI uses this private key to &lt;STRONG&gt;decrypt&lt;/STRONG&gt; the AS2 message.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;You have to create the Keypair in the keystore &lt;/SPAN&gt;&lt;SPAN&gt;(with alias like &lt;/SPAN&gt;&lt;SPAN&gt;as2_decryption_key&lt;/SPAN&gt;&lt;SPAN&gt;).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp; After Creating it, we have to download the certificate of the keypair which we have created.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Ensure the certificate is sent to the person who is encrypting data.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;SIGNATURE VERIFICATION&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Verify Signature: Not Required&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Means the inbound AS2 message is not expected to be signed.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;CPI will not verify the digital signature of the message.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Required: TRUSTED CERTIFICATE&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Enforces signature verification.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Verifies if signature is present but doesn’t fail if it's missing.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Add the Certificate in the &lt;STRONG&gt;keystore which received from the receiver&lt;/STRONG&gt; with the name and mention it in the public key alias&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Required: TRUSTED ROOT CERTIFICATE&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;For this get the root certificate from the Receiver and upload in the Keystore with alias name and mention in the Iflow.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_6-1751539649143.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282187iDE5638B93B561284/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_6-1751539649143.jpeg" alt="Rishikasairi_6-1751539649143.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 6: Configuration of MDN tab in AS2 Adapter:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Private Key Alias for Signature:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Used to sign the MDN (Message Disposition Notification).&lt;/LI&gt;&lt;LI&gt;Ensure the alias exists in Keystore. (This is the name of the keypair that you have used in the decryption process)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Signature Encoding:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Format of the MDN signature.&lt;/LI&gt;&lt;LI&gt;Options: binary or base64. [ Better to keep it required as we have Provide private key]&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Propagate MDN Details to Exchange:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Sends MDN info (like disposition, timestamp) to integration flow.&lt;/LI&gt;&lt;LI&gt;Optional – enable if needed by downstream logic. [Better to keep it required]&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Negative MDN on Processing Failures:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Sends a negative MDN if message processing fails.&lt;/LI&gt;&lt;LI&gt;Useful for notifying partners about issues.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Asynchronous MDN Connection Settings:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Proxy Type:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Typically set to Internet.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Method to authenticate async MDN responses.&lt;/LI&gt;&lt;LI&gt;Usually None unless required by proxy.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Timeout (in ms):&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Wait time for async MDN.&lt;/LI&gt;&lt;LI&gt;Example: 300000 ms = 5 minutes.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Feature/Aspect&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Synchronous MDN (AS2)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Asynchronous MDN (AS2)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MDN Handling&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;MDN (receipt) is generated and attached to the log immediately when the AS2 endpoint is hit, regardless of payload correctness.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;MDN response is delayed; the system waits to send the MDN to another AS2 endpoint (possibly on a different tenant).&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Endpoint&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;MDN returned to sender in the same HTTP session as the original message.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;MDN sent to a different AS2 endpoint (may be on another tenant), not in the same session.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Authentication&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Uses the sender's own credentials or local settings.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Requires the PFX file (certificate) of the target AS2 endpoint’s tenant for authentication.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Immediate acknowledgment, simple integration, and logging.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Flexible routing, multi-tenant or cross-system integrations, delayed or custom processing.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_7-1751539789921.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282192i991AD05F84DAEBD4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_7-1751539789921.jpeg" alt="Rishikasairi_7-1751539789921.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 7: Configuration of Delivery Assurance tab in AS2 Adapter:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Quality of Service:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Set to &lt;STRONG&gt;Exactly Once&lt;/STRONG&gt; – ensures no duplicate message processing.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Retry Interval (in min):&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Initial retry delay.&lt;/LI&gt;&lt;LI&gt;Example: 1 min before first retry.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Exponential Backoff:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Retries wait longer after each failure (e.g., 1 → 2 → 4 min).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Maximum Retry Interval (in min):&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Max delay between retries.&lt;/LI&gt;&lt;LI&gt;Example: 60 min.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Dead-Letter Queue:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Failed messages go to DLQ after max retries – helps in error analysis.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Encrypt Message During Persistence:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Ensures messages are encrypted when stored – enhances security.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_8-1751539789926.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282191iA39A844882A5EBCB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_8-1751539789926.jpeg" alt="Rishikasairi_8-1751539789926.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 8: Configuration of Conditions tab in AS2 Adapter:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Body Size (in MB):&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Max size for the main AS2 message body.&lt;/LI&gt;&lt;LI&gt;Example: 40 MB&lt;/LI&gt;&lt;LI&gt;Set based on expected payload size.&lt;/LI&gt;&lt;LI&gt;Helps avoid memory overload.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Attachments Size (in MB):&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Max total size for all attachments.&lt;/LI&gt;&lt;LI&gt;Example: 100 MB&lt;/LI&gt;&lt;LI&gt;Set based on typical file sizes (e.g., PDFs, XML).&lt;/LI&gt;&lt;LI&gt;Prevents oversized message issues.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_9-1751539789932.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282193iB93453CC7792B0A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_9-1751539789932.jpeg" alt="Rishikasairi_9-1751539789932.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note the As2 Endpoint after it gets deployed stage.&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;AS2 Receiver Adapter (Sending Request with payload)&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_14-1751541347175.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282239i68F4B146280EC152/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_14-1751541347175.jpeg" alt="Rishikasairi_14-1751541347175.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create a new Iflow in the same tenant or any other different tenant (&lt;STRONG&gt;Would be best if it is another tenant&lt;/STRONG&gt;)&lt;/LI&gt;&lt;LI&gt;Design the iflow as specified in the above manner with all the necessary pallet functions&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_15-1751541347189.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282237iBF391B15B0ECE508/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_15-1751541347189.jpeg" alt="Rishikasairi_15-1751541347189.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the Connection tab. Give the as2 endpoint that you have from the sender adapter.&lt;/LI&gt;&lt;LI&gt;Select the authentication to be basic and paste the credential name from the security material.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Now for the basic authentication. Get the Client id and client secret from the &lt;STRONG&gt;Sender Adapter&lt;/STRONG&gt; tenant which can be found in integration flow plan service key.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_54-1751542585404.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282295i245E8400EDF7EF3A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_54-1751542585404.png" alt="Rishikasairi_54-1751542585404.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_55-1751542602692.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282296iDE6053C811CB2CDE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_55-1751542602692.png" alt="Rishikasairi_55-1751542602692.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;After you have gained the client id and client secret. Go to Monitor&amp;gt;Manage Security material&amp;gt; Security Material&lt;/LI&gt;&lt;LI&gt;Select Create&amp;gt;User Credentials&lt;/LI&gt;&lt;LI&gt;Paste the Client id in the user section and the client secret in password and repeat password with a proper naming convention.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_56-1751542696960.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282298i9E98F368E8339E27/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_56-1751542696960.jpeg" alt="Rishikasairi_56-1751542696960.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the processing tab. Give a proper File name for transferring and fill all the sections that you have done in the &lt;STRONG&gt;sender adapter iflow with the same ones.&lt;BR /&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Mention the content type to be application/edi-x12 as we are transferring the payload from EDI format.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_57-1751542696969.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282297iE40A4922A900A273/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_57-1751542696969.jpeg" alt="Rishikasairi_57-1751542696969.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the Security Tab.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Select the Compress message for reducing the size of the payload you need to send.&lt;/LI&gt;&lt;LI&gt;For Signing Message, you need to create Keypair in the Keystore&amp;gt;Monitor tab with the alias name AS2_signing.&lt;/LI&gt;&lt;LI&gt;Give the alias name in private key alias&lt;/LI&gt;&lt;LI&gt;You have to download the certificate from the keypair (which you have created just now for signing) and give it to the sender in the other tenant.&lt;/LI&gt;&lt;LI&gt;For Encrypting the Message, you need to get the certificate from the person who is decrypting, then you have to upload certificate in the keystore &amp;gt; Monitor(with the alias name as as2_decrypting).&lt;/LI&gt;&lt;LI&gt;Mention the alias name in the public key alias.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_58-1751542837451.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282307iD55CC0EBE7D880C5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_58-1751542837451.png" alt="Rishikasairi_58-1751542837451.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_59-1751542837461.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282308i90231EBA2B1FD6F0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_59-1751542837461.png" alt="Rishikasairi_59-1751542837461.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the MDN. There will be four options to be selected [ Synchronous, Asynchronous, Dynamic , None ]&lt;/P&gt;&lt;P&gt;If you select the Synchronous type [ In case you want the response when you sent the request]&lt;BR /&gt;You can request signing, with the specific Algorithm.&lt;/P&gt;&lt;P&gt;If you need to verify signature. You need to give the Private key alias. Which is the certificate that you will get from the sender adapter which can be found in the Keystore.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_61-1751543014657.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282309iA442C1F2391D2085/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_61-1751543014657.jpeg" alt="Rishikasairi_61-1751543014657.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Paste the EDI payload in the content modifier as specified above.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ISA*01*0000000000*01*0000000000*ZZ*ABCDEFGHIJKLMNO*ZZ*123456789012345*101127*1719*U*00401*000003438*0*P*&amp;gt;&lt;BR /&gt;GS*PO*4405197800*999999999*20101127*1719*1421*X*004010VICS&lt;BR /&gt;ST*850*000000010&lt;BR /&gt;BEG*00*SA*08292233294**20101127*610385385&lt;BR /&gt;REF*DP*038&lt;BR /&gt;REF*PS*R&lt;BR /&gt;ITD*14*3*2**45**46&lt;BR /&gt;DTM*002*20101214&lt;BR /&gt;PKG*F*68***PALLETIZE SHIPMENT&lt;BR /&gt;PKG*F*66***REGULAR&lt;BR /&gt;TD5*A*92*P3**SEE XYZ RETAIL ROUTING GUIDE&lt;BR /&gt;N1*ST*XYZ RETAIL*9*0003947268292&lt;BR /&gt;N3*31875 SOLON RD&lt;BR /&gt;N4*SOLON*OH*44139&lt;BR /&gt;PO1*1*120*EA*9.25*TE*CB*065322-117*PR*RO*VN*AB3542&lt;BR /&gt;PID*F****SMALL WIDGET&lt;BR /&gt;PO4*4*4*EA*PLT94**3*LR*15*CT&lt;BR /&gt;PO1*2*220*EA*13.79*TE*CB*066850-116*PR*RO*VN*RD5322&lt;BR /&gt;PID*F****MEDIUM WIDGET&lt;BR /&gt;PO4*2*2*EA&lt;BR /&gt;PO1*3*126*EA*10.99*TE*CB*060733-110*PR*RO*VN*XY5266&lt;BR /&gt;PID*F****LARGE WIDGET&lt;BR /&gt;PO4*6*1*EA*PLT94**3*LR*12*CT&lt;BR /&gt;PO1*4*76*EA*4.35*TE*CB*065308-116*PR*RO*VN*VX2332&lt;BR /&gt;PID*F****NANO WIDGET&lt;BR /&gt;PO4*4*4*EA*PLT94**6*LR*19*CT&lt;BR /&gt;PO1*5*72*EA*7.5*TE*CB*065374-118*PR*RO*VN*RV0524&lt;BR /&gt;PID*F****BLUE WIDGET&lt;BR /&gt;PO4*4*4*EA&lt;BR /&gt;PO1*6*696*EA*9.55*TE*CB*067504-118*PR*RO*VN*DX1875&lt;BR /&gt;PID*F****ORANGE WIDGET&lt;BR /&gt;PO4*6*6*EA*PLT94**3*LR*10*CT&lt;BR /&gt;CTT*6&lt;BR /&gt;AMT*1*13045.94&lt;BR /&gt;SE*33*000000010&lt;BR /&gt;GE*1*1421&lt;BR /&gt;IEA*1*000003438&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This is the integration flow for which the MDN Attachment need to be sent as we have selected asynchronous Communication.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;In the Connection tab specify a path for the as2 endpoint.&lt;/LI&gt;&lt;LI&gt;Select the Authorization to be UserRole/Client_Certificate[In my case I selected User Role]&lt;/LI&gt;&lt;LI&gt;You need to send the &lt;STRONG&gt;PFX file to the SENDER ADAPTER &lt;/STRONG&gt;iflow tenant because you will be receiving the response asynchronously from the sender adapter.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Monitoring the Artifacts in Trace Mode&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_62-1751543086834.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282310i4FE3684550903D28/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_62-1751543086834.png" alt="Rishikasairi_62-1751543086834.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_64-1751543189397.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282312iC394591CF2B5D6F8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_64-1751543189397.png" alt="Rishikasairi_64-1751543189397.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_65-1751543189410.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282313i6BC23863C49E3944/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_65-1751543189410.png" alt="Rishikasairi_65-1751543189410.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Creation of PFX Certificate &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Creation of PFX Certificate contains these below steps:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to the Integration flow instance [DEV]&lt;/LI&gt;&lt;LI&gt;Create a certificate in the Instance.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_66-1751543189423.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282314iDC2A55DFEE0478DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_66-1751543189423.jpeg" alt="Rishikasairi_66-1751543189423.jpeg" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;3. After creating Certificate (From the Form tab) Copy the Certificate and Align them as shown in image and save the file as &amp;lt;filename&amp;gt;.cert&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_67-1751543189437.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282316i91B10CE47686E65A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_67-1751543189437.jpeg" alt="Rishikasairi_67-1751543189437.jpeg" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;4. Copy the Key, align as shown in image, save the file as &amp;lt;filename&amp;gt;.key&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_68-1751543189455.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282317i3AE8217501938E5C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_68-1751543189455.jpeg" alt="Rishikasairi_68-1751543189455.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_69-1751543189471.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282315i485B500A6F50C17B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_69-1751543189471.jpeg" alt="Rishikasairi_69-1751543189471.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_70-1751543189475.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282318iA59D2FC254DB6134/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_70-1751543189475.jpeg" alt="Rishikasairi_70-1751543189475.jpeg" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;5. Now use this website (or any other online websites for pfx generation)&lt;SPAN&gt;&lt;A href="https://www.sslshopper.com/ssl-converter.html" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.sslshopper.com/ssl-converter.html&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_71-1751543189482.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282319iE7359F7319D3D7CA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_71-1751543189482.jpeg" alt="Rishikasairi_71-1751543189482.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;OL&gt;&lt;LI&gt;Upload the cert file and key file in this website with the proper pfx password (remember the password)&lt;/LI&gt;&lt;LI&gt;Click on Create and download PFX file.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;EM&gt;Stay tuned for the next part, where we’ll get started with API proxies!&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt;&lt;BR /&gt;All the views and opinions in this blog are my own and are made in my personal capacity. SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/step-by-step-guide-secure-file-exchange-with-as2-adapter-in-sap-cloud/ba-p/14143695"/>
    <published>2025-07-25T07:47:44.145000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/intelligent-orchestration-in-iflows-business-aware-routing-with-sap-btp-s/ba-p/14162148</id>
    <title>Intelligent Orchestration in Iflows: Business-Aware Routing with SAP BTP’s AI Services</title>
    <updated>2025-07-25T08:30:59.592000+02:00</updated>
    <author>
      <name>arunmaarirajha_kv</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2033343</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Reimagining flow decisions in Integration Suite&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For the longest time, SAP’s integration platforms — from &lt;STRONG&gt;SAP PI/PO&lt;/STRONG&gt; to &lt;STRONG&gt;Integration Suite&lt;/STRONG&gt; — have empowered developers to model decisions in integration flows (Iflows) using deterministic, rule-based logic.&amp;nbsp;These decisions often control how an Iflow behaves: which mapping logic to apply, which receiver system to call, or which transformation branch to follow.&lt;BR /&gt;The common approaches include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Static routing&lt;/STRONG&gt; via Routers based on payload elements or fields&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Dynamic configurations&lt;/STRONG&gt;, such as externalized parameters passed at runtime&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Lookups to external systems&lt;/STRONG&gt; (e.g., JDBC or SOAP) to evaluate conditions at runtime — achieved in Integration Suite via patterns like &lt;EM&gt;Request-Reply&lt;/EM&gt; or &lt;EM&gt;Content Enricher&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These mechanisms work — but they come with growing challenges:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Rules get &lt;STRONG&gt;combinatorially complex&lt;/STRONG&gt; with more conditions&lt;/LI&gt;&lt;LI&gt;Lookup tables become &lt;STRONG&gt;burdensome to maintain&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Decisions become &lt;STRONG&gt;rigid and hard to evolve&lt;/STRONG&gt; over time&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;What if Iflows could use a &lt;STRONG&gt;machine learning model&lt;/STRONG&gt; trained on past outcomes to make decisions — not through rigid logic, but through inferred patterns?&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;BTP AI Services: Letting Iflows Tap into ML-Driven Decisioning&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP’s &lt;STRONG&gt;BTP AI services&lt;/STRONG&gt; offer a comprehensive suite of capabilities for embedding intelligence across applications, extensions, and integrations.&lt;/P&gt;&lt;P&gt;Key components include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Data Attribute Recommendation (DAR) – a low-code ML service for classification &amp;amp; regression problems&lt;/LI&gt;&lt;LI&gt;AI Core – for custom ML model lifecycle management&lt;/LI&gt;&lt;LI&gt;AI Launchpad – for model deployment and lifecycle governance&lt;/LI&gt;&lt;LI&gt;Document Information Extraction (DOX) – for intelligent document processing&lt;/LI&gt;&lt;LI&gt;Personalized recommendations&amp;nbsp;– &lt;SPAN&gt;to deliver tailored content and product suggestions to users&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Translation Hub&amp;nbsp;–&amp;nbsp;&lt;SPAN&gt;enables you to efficiently translate content into multiple languages&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Among these, DAR is particularly compelling for Iflow-based routing logic. It allows developers to train a classification model — and call it at runtime — without deep ML or data science expertise.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;A Concrete Example: Intelligent Sales Order fulfilment routing&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let us walk through a realistic sales order routing scenario — where &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; collaborates with &lt;STRONG&gt;BTP’s Data Attribute Recommendation (DAR)&lt;/STRONG&gt; to make machine learning-driven decisions, rather than relying on static rules or lookup tables.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Business Scenario:&amp;nbsp;&lt;/STRONG&gt;When a new Sales Order (SO) is received in SAP S/4HANA, an Iflow must determine the appropriate fulfilment path — such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Domestic delivery team&lt;/LI&gt;&lt;LI&gt;Export logistics provider&lt;/LI&gt;&lt;LI&gt;Specialized handling team (e.g., for hazardous or fragile goods)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Traditionally, this might involve:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Hardcoded logic like:&lt;BR /&gt;IF LAND1 = 'DE' AND MATKL = 'X' THEN ROUTE = 'Domestic'&lt;/LI&gt;&lt;LI&gt;Maintaining large lookup tables&lt;/LI&gt;&lt;LI&gt;Database queries that are difficult to scale or evolve&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;But this approach quickly becomes brittle as the business grows — especially with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;New customer segments&lt;/LI&gt;&lt;LI&gt;Emerging market combinations&lt;/LI&gt;&lt;LI&gt;Expanding SKU diversity&lt;/LI&gt;&lt;LI&gt;Frequent business exceptions&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;ML-Driven Approach with DAR&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Instead of rule-based routing, we use DAR to learn from historical sales orders:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;What fulfillment team handled similar orders in the past?&lt;/LI&gt;&lt;LI&gt;What patterns exist in routing decisions based on order attributes?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This lets the Iflow become intelligent — delegating routing logic to an ML model trained on past behaviour.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Untitled Diagram.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291270iA095DF619549FEAC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Untitled Diagram.png" alt="Untitled Diagram.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-by-Step Flow: From Sales Order to fulfilment&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;1. Incoming Sales Order Fields (Features)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Iflow extracts relevant attributes from the sales order.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Field&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;VKORG&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Sales organization&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;VTWEG&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Distribution channel&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;SPART&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Division&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;KUNNR&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Customer number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;LAND1&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Country of destination&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MATNR&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Material number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MATKL&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Material group&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;AUART&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Sales document type (e.g., OR, RE)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;NETWR&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Net value of the order&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;WAERK&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Currency&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;2. Label to Predict&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The ML model (via DAR) predicts the fulfillment team:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Label&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Meaning&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;DOMESTIC&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Domestic delivery team&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;EXPORT&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Export logistics team&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;SPECIAL_PRODUCTS&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Specialized handling (e.g., fragile items)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;ESCALATE&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Manual assignment required (e.g., exception)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;3. Runtime Intelligence in the Iflow&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Iflow receives the incoming Sales Order from SAP S/4HANA&lt;/LI&gt;&lt;LI&gt;It extracts key features (as above)&lt;/LI&gt;&lt;LI&gt;Sends them via API to DAR&lt;/LI&gt;&lt;LI&gt;DAR returns a prediction (e.g., EXPORT)&lt;/LI&gt;&lt;LI&gt;Iflow routes the order to the correct 3PL provider or internal team&lt;/LI&gt;&lt;LI&gt;Decision and outcome are logged for traceability&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;4. Training the Model: From Logs to Intelligence&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To train DAR:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Historical sales orders are extracted from SAP S/4HANA&lt;/LI&gt;&lt;LI&gt;Actual fulfilment team assignments (from workflow logs or processing systems) are used as ground truth&lt;/LI&gt;&lt;LI&gt;A dataset is formed with order features (inputs) and assigned team (label)&lt;/LI&gt;&lt;LI&gt;No need for manual feature engineering — DAR handles sampling, validation, and training automatically&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;5. Closing the Loop: Human-in-the-Loop &amp;amp; Retraining&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To ensure explainability and continuous learning:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;All DAR predictions + actual outcomes are logged in HANA Cloud&lt;/LI&gt;&lt;LI&gt;A CAP application provides a UI for humans to review and validate predictions&lt;/LI&gt;&lt;LI&gt;Only validated cases are used for periodic retraining, ensuring the model evolves with the business&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;FAQs – &lt;SPAN&gt;Key Questions and Considerations&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;1.&amp;nbsp;When does this truly add value?&lt;BR /&gt;When routing errors or sub-optimal routing could lead to real business impact — e.g., SLA violations, shipment delays, customer churn — not just minor inconvenience. Conversely, when ML helps route to the most suitable receiver — say Team B instead of A — it can improve fulfillment speed, reduce costs, or ensure better customer handling, translating into real business advantage.&lt;/P&gt;&lt;P&gt;2. How complex is adopting DAR in terms of learning curve?&lt;BR /&gt;DAR is low-code and API-driven plug and play service — you don’t need to tune algorithms or handle model lifecycle related heavy lifting. Even integration developers can use it by defining schemas and calling APIs for training, deploying, inferencing and re-training.&lt;/P&gt;&lt;P&gt;3. Why is model re-training important?&lt;BR /&gt;Because business context evolves. As your product mix, customer base, or regional distribution changes, the patterns shift (called data drift or concept drift). Retraining ensures your model stays accurate and doesn’t stale out.&lt;/P&gt;&lt;P&gt;4. Isn’t GenAI the next big thing? Does ML still matter?&lt;BR /&gt;Absolutely. GenAI excels at natural language tasks — like document generation or summarization. But for structured data decisions like classification or regression, ML models like DAR are more reliable, interpretable, and consistent. They are trained on enterprise-labeled history, not general-purpose text.&lt;/P&gt;&lt;P&gt;5. Isn’t this just another API call, which we do all the time to enrich our payload?&lt;BR /&gt;Technically yes — but functionally, it’s transformational. It lets you embed intelligence directly into your Iflow’s runtime logic. It’s not just wiring systems — it’s wiring business decisions.&lt;/P&gt;&lt;P&gt;6. Isn’t putting ML in middleware against “separation of concerns”, particularly when it is supposed to act as a pass-through layer?&lt;BR /&gt;&lt;SPAN&gt;No. The &lt;/SPAN&gt;ML model and its lifecycle&lt;SPAN&gt; are maintained outside Integration Suite (e.g., in DAR or AI Core). The Iflow just consumes the result — maintaining clean separation but gaining powerful synergy.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Final Thoughts&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Infusing AI into Integration Suite isn’t about over-engineering — it’s about &lt;STRONG&gt;elevating Integration Suite’s behaviour from rule-based mechanics to context-aware intelligence&lt;/STRONG&gt;.&amp;nbsp;With BTP AI services like DAR, integration developers can go beyond static routing and hardcoded decisions. They can orchestrate intelligent flows that learn from business history — and adapt as the world changes.&amp;nbsp;As integration professionals, we’re not just moving data. We’re moving contextual, intelligent decisions.&lt;/P&gt;&lt;P&gt;Here are some essential links for you to get started and apply AI in meeting your business requirements:&lt;BR /&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog/data-attribute-recommendation?region=all" target="_blank" rel="noopener nofollow noreferrer"&gt;Explore SAP Data Attribute Recommendation service&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://developers.sap.com/tutorial-navigator.html?tag=software-product%3Atechnology-platform%2Fsap-ai-services%2Fdata-attribute-recommendation" target="_blank" rel="noopener noreferrer"&gt;SAP Tutorials: Implement your ML service&lt;/A&gt;&lt;/P&gt;&lt;P&gt;This blog focused solely on intelligent routing within iFlows. But the potential of infusing AI into Integration Suite goes far beyond — limited only by the developer’s creativity. With the upcoming &lt;A href="https://roadmaps.sap.com/board?q=ai%2520adapter&amp;amp;range=CURRENT-LAST#;INNO=6DF54C88F6211EEFBE81C4731A722137" target="_self" rel="noopener noreferrer"&gt;AI Adapter (planned for Q3)&lt;/A&gt;, things are bound to get even more exciting.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;“Stay hungry, stay foolish.”&lt;/EM&gt; — Steve Jobs&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Perhaps that same spirit can guide us as we collectively navigate the future of intelligent integration.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/intelligent-orchestration-in-iflows-business-aware-routing-with-sap-btp-s/ba-p/14162148"/>
    <published>2025-07-25T08:30:59.592000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/why-sap-isa-m-still-matters-a-strategic-foundation-for-modern-integration/ba-p/14162231</id>
    <title>Why SAP ISA-M Still Matters – A Strategic Foundation for Modern Integration</title>
    <updated>2025-07-25T09:19:18.076000+02:00</updated>
    <author>
      <name>FlorianOkos</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/5536</uri>
    </author>
    <content>&lt;P&gt;In the era of APIs, hybrid landscapes, and cloud-native development, it's easy to assume that methodologies like SAP ISA-M (Integration Solution Advisory Methodology) are outdated. But the truth is: &lt;STRONG&gt;ISA-M is more relevant than ever&lt;/STRONG&gt;. It remains a &lt;STRONG&gt;strategic compass&lt;/STRONG&gt; for defining and implementing integration architectures that are sustainable, business-aligned, and tool-agnostic.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;What is SAP ISA-M?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP ISA-M is a structured methodology that helps enterprises define their &lt;STRONG&gt;integration strategy&lt;/STRONG&gt;, classify &lt;STRONG&gt;integration use cases&lt;/STRONG&gt;, and select the right &lt;STRONG&gt;technologies and governance models&lt;/STRONG&gt;. It supports decision-making across cloud, hybrid, and on-premise landscapes – regardless of whether you’re using SAP Integration Suite, SAP Advanced Event Mesh, or third-party platforms.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":key:"&gt;🔑&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Why ISA-M Still Matters Today&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Strategic Guidance for Cloud Transformation&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;ISA-M is widely used during &lt;STRONG&gt;S/4HANA and RISE with SAP transformations&lt;/STRONG&gt; to assess legacy middleware (e.g., PI/PO) and design modern, API- and event-driven target architectures.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Technology-Agnostic by Design&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;ISA-M is not tied to specific products. It provides a &lt;STRONG&gt;framework for integration strategy&lt;/STRONG&gt;, which remains valid even as tools evolve – from SAP Process Orchestration to SAP Integration Suite and beyond.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Use Case-Driven Approach&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;By analyzing integration needs across five &lt;STRONG&gt;integration styles&lt;/STRONG&gt; (e.g., process integration, data integration, event-driven integration), ISA-M helps teams design purposeful and scalable architectures.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Connecting Business and IT&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The methodology fosters collaboration between business owners, architects, and integration teams – ensuring that integration becomes a &lt;STRONG&gt;business enabler&lt;/STRONG&gt;, not just a technical necessity.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Where ISA-M is Used Today&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Cloud Transformations &amp;amp; RISE with SAP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Modernization of Legacy Interfaces&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Enablement &amp;amp; Governance Models&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It outlines the &lt;STRONG&gt;phases&lt;/STRONG&gt; in a modernization journey—&lt;EM&gt;Review, Scope and Define Use Cases&lt;/EM&gt;—and shows how to transition towards a future-ready, hybrid integration platform.&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Assess Integration Strategy&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Review Existing Integration Architecture&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Scope and Define Best Practices and Target Architecture&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Give power to the people&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bildschirmfoto 2025-07-25 um 8.46.00 AM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291299iBAE7A76119D84481/image-size/large?v=v2&amp;amp;px=999" role="button" title="Bildschirmfoto 2025-07-25 um 8.46.00 AM.png" alt="Bildschirmfoto 2025-07-25 um 8.46.00 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Outlook: What’s Next for ISA-M?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;1. ISA-M in INTAS – SAP Integration Assessment Service&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP’s &lt;STRONG&gt;INTAS (Integration Assessment Service)&lt;/STRONG&gt; is a structured offering to help customers evaluate and modernize their integration landscape. ISA-M provides the &lt;STRONG&gt;core methodology&lt;/STRONG&gt; behind this service:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Assessment of legacy and custom interfaces&lt;/LI&gt;&lt;LI&gt;Mapping use cases to modern SAP Integration Suite capabilities&lt;/LI&gt;&lt;LI&gt;Tailored modernization roadmap aligned to Clean Core principles&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With INTAS, organizations benefit from a &lt;STRONG&gt;guided modernization plan&lt;/STRONG&gt; that is both strategic and executable.&lt;/P&gt;&lt;P&gt;I will give you some more insights in on of our upcoming Integration Modernization expert sessions: &lt;A href="https://events.sap.com/expertsession-isam/en_us/home.html" target="_blank" rel="noopener noreferrer"&gt;https://events.sap.com/expertsession-isam/en_us/home.html&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bildschirmfoto 2025-07-25 um 9.09.39 AM.png" style="width: 606px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291303i296FDB4BF378BDFF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Bildschirmfoto 2025-07-25 um 9.09.39 AM.png" alt="Bildschirmfoto 2025-07-25 um 9.09.39 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;2. ISA-M and the SAP Integrated Toolchain&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The &lt;STRONG&gt;SAP Integrated Toolchain for Modernization Projects&lt;/STRONG&gt; combines multiple SAP tools and services, such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Cloud ALM&lt;/LI&gt;&lt;LI&gt;SAP Signavio&lt;/LI&gt;&lt;LI&gt;SAP LeanIX&lt;/LI&gt;&lt;LI&gt;SAP WalkMe&lt;/LI&gt;&lt;LI&gt;SAP BTP ( with our focus on Integration Suite)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We us ISA-M acts as a &lt;STRONG&gt;strategic layer below the toolchain&lt;/STRONG&gt;, ensuring that all activities – from modeling to implementation – follow a consistent integration strategy. For example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;LeanIX is the central tool for your overall Enterprise Architecture &amp;nbsp;→ ISA-M will help to control technologies and applications along the concept and to establish a government model&lt;/LI&gt;&lt;LI&gt;Signavio is used to model business processes → ISA-M helps derive integration patterns&lt;/LI&gt;&lt;LI&gt;SAP Integration Suite itself can be used to integrate the toolchain (itself) → ISA-M ensures style and governance fit, e.g. usage of SAP Advanced Event Mesh in combination with &lt;A href="mailto:https://help.sap.com/docs/leanix/ea/webhooks?locale=en-US" target="_blank" rel="noopener nofollow noreferrer"&gt;LeanIX Webhooks.&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;ISA-M connects the dots, providing &lt;STRONG&gt;strategic continuity&lt;/STRONG&gt; across the entire toolchain.&lt;/P&gt;&lt;P&gt;We are currently working out an Integration Modernization expert which will give the required insights how you can implement it. Stay tune and follow our journey here &lt;A href="https://events.sap.com/eur-sap-integration-modernization-expert-sessions/en_us/home.html" target="_blank" rel="noopener noreferrer"&gt;https://events.sap.com/eur-sap-integration-modernization-expert-sessions/en_us/home.html&lt;/A&gt;&lt;/P&gt;&lt;P&gt;You would like to practice (e.g. with Integration content)? Just let me know.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;🧼&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp; 3. ISA-M and Clean Core&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Clean Core is one of the key guiding principles in SAP’s modernization strategy. But a Clean Core isn’t just about avoiding modifications – it’s about &lt;STRONG&gt;separating business logic from system logic&lt;/STRONG&gt; and creating &lt;STRONG&gt;modular, scalable architectures&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Here’s how ISA-M supports a Clean Core approach:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Recommends using APIs, events, and standardized integration styles&lt;/LI&gt;&lt;LI&gt;Avoids hard-coded dependencies between systems&lt;/LI&gt;&lt;LI&gt;Encourages centralized governance and reuse of services&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;By following ISA-M, companies are not just modernizing their interfaces – they are &lt;STRONG&gt;actively cleaning their core&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bildschirmfoto 2025-07-25 um 9.08.18 AM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291310i0929AD23F71247F8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Bildschirmfoto 2025-07-25 um 9.08.18 AM.png" alt="Bildschirmfoto 2025-07-25 um 9.08.18 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;We hosted a first session how ISA-M can help you to ensure a clean-core approach Find the recording here: &lt;A href="https://dam.sap.com/mac/app/e/video/embed/vAemLss?ltr=a&amp;amp;rc=10&amp;amp;doi=SAP1206809&amp;amp;includeSapBrandedWraper=true&amp;amp;includeRelatedAssets=true" target="_blank" rel="noopener noreferrer"&gt;https://dam.sap.com/mac/app/e/video/embed/vAemLss?ltr=a&amp;amp;rc=10&amp;amp;doi=SAP1206809&amp;amp;includeSapBrandedWraper=true&amp;amp;includeRelatedAssets=true&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Final Thoughts&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Integration is no longer just a technical challenge – it’s a &lt;STRONG&gt;strategic business discipline&lt;/STRONG&gt;. And while the tools and technologies evolve, the need for a &lt;STRONG&gt;methodical, business-aligned integration strategy&lt;/STRONG&gt; remains constant.&lt;/P&gt;&lt;P&gt;That’s why &lt;STRONG&gt;ISA-M continues to be a critical success factor&lt;/STRONG&gt; for integration modernization, clean core transformation, and cloud-centric architectures.&lt;/P&gt;&lt;P&gt;Whether you're just starting your transformation journey or reviewing an existing landscape, ISA-M gives you the &lt;STRONG&gt;structure, language, and clarity&lt;/STRONG&gt; to do it right.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&amp;nbsp;&lt;STRONG&gt;Explore more&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://github.com/SAP-samples/cloud-integration-integration-solution-advisory" target="_blank" rel="noopener nofollow noreferrer"&gt;ISA-M GitHub Repository&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://discovery-center.cloud.sap/missiondetail/3842/3912/" target="_self" rel="nofollow noopener noreferrer"&gt;ISA-M Mission in SAP Discovery Center&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;You need support? Send us a mail&amp;nbsp;SAP Integration Modernization &amp;lt;integration.modernization@sap.com&amp;gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/why-sap-isa-m-still-matters-a-strategic-foundation-for-modern-integration/ba-p/14162231"/>
    <published>2025-07-25T09:19:18.076000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/queue-browser-deep-message-visibility-for-event-mesh-in-sap-integration/ba-p/14159563</id>
    <title>Queue Browser: Deep Message Visibility for Event Mesh in SAP Integration Suite</title>
    <updated>2025-07-25T22:47:43.293000+02:00</updated>
    <author>
      <name>arley-triana-morin</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/149551</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735246016"&gt;Introduction&lt;/H2&gt;&lt;P&gt;In event-driven architectures, messages flow continuously between systems, carrying critical business data and triggering essential processes. When something goes wrong—messages pile up, integrations fail, or data appears corrupted—you need immediate visibility into what’s happening inside your queues. Without this insight, troubleshooting becomes a frustrating game of guesswork.&lt;/P&gt;&lt;P&gt;Monitoring message queues is essential in event‑driven architectures. It reveals queue health and uncovers bottlenecks, providing crucial delivery and routing insights that ensure system reliability. With the latest release of &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/event-mesh?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Event Mesh in SAP Integration Suite&lt;/A&gt;, we’re excited to announce&amp;nbsp;&lt;STRONG&gt;Queue Browser&lt;/STRONG&gt;, a new capability that delivers deep message visibility through an intuitive web‑based interface.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The key advantage:&lt;/STRONG&gt;&amp;nbsp;Visualizing and inspecting messages using Queue Browser won't consume them from the message broker queue, so you can safely examine message metadata—such as headers, statuses, and errors—and troubleshoot malformed payloads without disrupting live processing.&lt;/P&gt;&lt;H2 id="toc-hId-1538732511"&gt;What is Queue Browser in Event Mesh in SAP Integration Suite?&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Queue Browser&lt;/STRONG&gt;&amp;nbsp;is a web-based monitoring and diagnostics tool that allows you to inspect messages in a queue without consuming them from the message broker. Think of it as a "read-only window" into your message queues—you can see everything that's happening without affecting the actual message flow.&lt;/P&gt;&lt;P&gt;Queue Browser bridges the gap between high-level queue metrics and detailed application logs, giving you the message-level insight needed for effective troubleshooting.&lt;/P&gt;&lt;H3 id="toc-hId-1471301725"&gt;Key Capabilities&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Search &amp;amp; Filter:&lt;/STRONG&gt; Quickly locate messages by criteria such as message ID, correlation ID, and custom properties.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Header, Payload, and Custom Properties Inspection:&lt;/STRONG&gt; View standard JMS-style headers (timestamp, delivery mode, Dead Message Queue eligibility) and examine the message payload alongside any custom properties.&amp;nbsp;This is invaluable for validating data transformations and ensuring message integrity.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Message Management:&lt;/STRONG&gt;&amp;nbsp;Identify and inspect stuck or problematic messages in queues, with the option to delete them when needed.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Purge Queues:&lt;/STRONG&gt; Clear all messages from a selected queue in one action,&amp;nbsp;ideal for resetting test environments or clearing backed-up queues during maintenance.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Queue Browser in action" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291751i1B58ED53F8B1D7E4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Queue Browser for Event Mesh in SAP Integration Suite.gif" alt="Queue Browser in action" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Queue Browser in action&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1145705501"&gt;Accessing the Queue Browser&lt;/H2&gt;&lt;H3 id="toc-hId-1078274715"&gt;Step 1: Navigate to Queue Monitoring&lt;/H3&gt;&lt;P&gt;In the SAP Integration Suite Cockpit, open the left‑hand menu and navigate to:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Monitor › Event Mesh › Queues&lt;/EM&gt;&lt;/P&gt;&lt;H3 id="toc-hId-881761210"&gt;Step 2: Review Queue Metrics&lt;/H3&gt;&lt;P&gt;You’ll see a comprehensive table listing all your queues with real-time usage metrics:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Monitoring Event Mesh Usage – Queue List Floorplan" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290779iE57F47F91D69AFD5/image-size/large?v=v2&amp;amp;px=999" role="button" title="queue-browser-list-1.png" alt="Monitoring Event Mesh Usage – Queue List Floorplan" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Monitoring Event Mesh Usage – Queue List Floorplan&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Name&lt;/STRONG&gt;: The name of the queue&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Messages Queued&lt;/STRONG&gt;: Number of messages in the queue&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Unacknowledged Messages&lt;/STRONG&gt;: Number of unacknowledged messages in the queue. Messages delivered but not yet acknowledged as processed.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Queue Size&lt;/STRONG&gt;: The queue size in bytes.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Max Queue Size&lt;/STRONG&gt;: The maximum size possible for the queue in bytes.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These metrics provide immediate insight into queue health—high unacknowledged message counts often indicate processing issues, while queues approaching their size limits may need attention.&lt;/P&gt;&lt;H3 id="toc-hId-685247705"&gt;Step 3: Drill Down to Message List&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Message List Report Floorplan" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291710i3FEAB11A031DBF28/image-size/large?v=v2&amp;amp;px=999" role="button" title="Message List Report Floorplan.png" alt="Message List Report Floorplan" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Message List Report Floorplan&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select any queue to drill down to its message list page, where you can view some per‑message information:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Message ID&lt;/STRONG&gt;: Identifier for tracking messages&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Correlation ID&lt;/STRONG&gt;: Identifier to trace the request journey&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Time Sent&lt;/STRONG&gt;:&amp;nbsp;Time the message was sent&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Message Size&lt;/STRONG&gt;:&amp;nbsp;The size of the message content, in bytes&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Redelivered&lt;/STRONG&gt;: Indicates if the message was redelivered or not—a key troubleshooting indicator&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Destination&lt;/STRONG&gt;: Destination of the message&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;DMQ Eligible&lt;/STRONG&gt;: Indicates whether the message is eligible for the Dead Message Queue (DMQ)&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-488734200"&gt;Step 4: Inspect Individual Messages&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Message Details – Object Page Floorplan" style="width: 970px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291714i5DF21554C6DB5F83/image-size/large?v=v2&amp;amp;px=999" role="button" title="Message Details – Object Page Floorplan.png" alt="Message Details – Object Page Floorplan" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Message Details – Object Page Floorplan&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click a message entry to navigate to its details page. The level of access depends on your assigned roles:&lt;/P&gt;&lt;P&gt;Users can review the message headers by default; if your BTP user has the &lt;STRONG&gt;EventMeshBusinessExpert&lt;/STRONG&gt; role collection assigned, you’ll also see the full payload and any custom properties.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Security Note:&lt;/STRONG&gt; Access to single‑message inspection is restricted to specific roles only. Only users assigned the &lt;STRONG&gt;EventMeshBusinessExpert&lt;/STRONG&gt; role collection should be granted permission to view full message payloads and custom properties and delete messages. This ensures that message access is tightly controlled per organizational requirements and can be managed via &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/configuring-user-access" target="_blank" rel="noopener noreferrer"&gt;Configuring User Access&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-163137976"&gt;Message Detail Components&lt;/H2&gt;&lt;H3 id="toc-hId-95707190"&gt;Headers Information&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Identifiers&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Message ID:&lt;/STRONG&gt;&amp;nbsp;Identifier for tracking messages&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Correlation ID:&lt;/STRONG&gt;&amp;nbsp;Identifier to trace the request journey&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Delivery Information&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Time Sent:&lt;/STRONG&gt;&amp;nbsp;Time the message was sent&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Redelivered:&lt;/STRONG&gt;&amp;nbsp;Indicates if the message was redelivered or not—a key troubleshooting indicator&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Delivery Mode:&lt;/STRONG&gt;&amp;nbsp;&lt;SPAN&gt;The mode which is used for message delivery&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Routing Information&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Destination:&lt;/STRONG&gt; The destination of the message&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Reply To:&lt;/STRONG&gt; &lt;SPAN&gt;The address or topic to which the recipient should send the response, when a message that requires a reply or acknowledgment, is published&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;DMQ Eligible:&lt;/STRONG&gt;&amp;nbsp;&lt;SPAN&gt;Indicates whether the message is eligible for the Dead Message Queue (DMQ)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Additional Information:&lt;/STRONG&gt; Message size in bytes&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--176037684"&gt;Payload&lt;/H3&gt;&lt;P&gt;The message payload contains the actual business data being transmitted between systems.&lt;/P&gt;&lt;H3 id="toc-hId--372551189"&gt;Custom Properties&lt;/H3&gt;&lt;P&gt;Custom properties contain business-specific metadata that applications attach to messages. These might include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Customer IDs for filtering&lt;/LI&gt;&lt;LI&gt;Source system identifiers for tracing&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This metadata is invaluable for understanding message context and implementing sophisticated filtering strategies.&lt;/P&gt;&lt;H3 id="toc-hId--569064694"&gt;Available Actions&lt;/H3&gt;&lt;P&gt;From the message detail page, users with appropriate permissions can:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Delete&lt;/STRONG&gt; individual problematic messages&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Download&lt;/STRONG&gt; message payloads for offline analysis&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Copy&lt;/STRONG&gt; message IDs and correlation IDs for use in other tools&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--472175192"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;The Queue Browser for Event Mesh in SAP Integration Suite transforms how you monitor and troubleshoot event-driven systems. By providing safe, non-disruptive message inspection, it empowers you to validate message content before processing, diagnose complex integration issues, and ensure smooth data flow.&lt;/P&gt;&lt;H3 id="toc-hId--962091704"&gt;Next Steps&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Explore Queue Browser&lt;/STRONG&gt; in your SAP Integration Suite tenant—navigate to &lt;EM&gt;Monitor › Event Mesh › Queues&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Review the official documentation:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/monitor-event-mesh" target="_blank" rel="noopener noreferrer"&gt;Monitor Event Mesh&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/configuring-user-access" target="_blank" rel="noopener noreferrer"&gt;Configuring User Access&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/personas-in-event-mesh" target="_blank" rel="noopener noreferrer"&gt;Personas &amp;amp; Permissions&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Share your experience&lt;/STRONG&gt; on the SAP Community—help others understand how Queue Browser improves their troubleshooting workflows&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Queue Browser puts the visibility and control you need right at your fingertips. Start exploring your message queues today and experience the difference that comprehensive message visualization and inspection makes in maintaining event-driven architectures.&lt;/P&gt;&lt;P&gt;Happy monitoring!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/queue-browser-deep-message-visibility-for-event-mesh-in-sap-integration/ba-p/14159563"/>
    <published>2025-07-25T22:47:43.293000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/are-feature-rich-adapters-the-missing-link-for-ai-driven-integration/ba-p/14153184</id>
    <title>Are Feature-Rich Adapters the Missing Link for AI-Driven Integration Automation?</title>
    <updated>2025-07-28T08:32:05.956000+02:00</updated>
    <author>
      <name>peter_ha3</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/185224</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This article presents a thought process that may seem bold, but it is grounded in how AI is expected to evolve in the integration space. AI is rapidly transforming how enterprises design, deploy, and maintain system integrations. With the rise of AI-assisted tools and integration copilot features, there's growing momentum around automating iFlow generation, endpoint configuration, and data mapping. However, the effectiveness of AI in this space heavily depends on the capabilities of the underlying adapters.&lt;/P&gt;&lt;P&gt;Adapters that are limited in scope and offload key responsibilities to the runtime force developers (or AI engines) to manipulate BTP Integration Suite artifacts like scripts, headers, message mappings, or conditional flows. In contrast, adapters like those from Advantco are feature-rich by design and self-sufficient, enabling true automation and reducing complexity in AI-generated integration flows.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The Role of Adapters in AI-Driven Integration&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In a traditional integration landscape, adapters were just connectivity endpoints. But in an AI-driven world, they become critical enablers for automation. AI models can only generate integrations as far as the platform components allow:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Declarative configuration = easy for AI to reason with&lt;/LI&gt;&lt;LI&gt;Code/script dependencies = difficult for AI to generate and maintain&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;When adapters encapsulate complexity (e.g., pagination, token handling, retry logic), AI tools can focus on flow orchestration rather than implementation detail.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The Advantage of Advantco Adapters: Design for Autonomy&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;All of Advantco's adapters (REST, Kafka, SFTP, Salesforce, Google Cloud, and more) are built with the principle that adapters should handle core integration responsibilities internally. This includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Advanced authentication: OAuth2 (all flows), JWT, mTLS, SAML, API Key, Cookie, Session, etc.&lt;/LI&gt;&lt;LI&gt;Retry logic and error inspection: Based on status codes &lt;EM&gt;and&lt;/EM&gt; payload patterns&lt;/LI&gt;&lt;LI&gt;Header and query manipulation: Without Groovy scripting or BTP runtime logic&lt;/LI&gt;&lt;LI&gt;Pagination and looping: With JSONPath extraction and chaining, configured declaratively&lt;/LI&gt;&lt;LI&gt;Streaming, compression, and multipart handling&lt;/LI&gt;&lt;LI&gt;Connection testing and runtime diagnostics in adapter UI&lt;/LI&gt;&lt;LI&gt;Content conversion: Seamless transformation between JSON, XML, CSV, Avro, Parquet, and Protobuff&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This minimizes the need for BTP Integration Suite-specific workarounds, expression mappings, or error subprocesses.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why This Matters for AI and Automation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;AI can only automate what is predictable and declarative.&lt;/P&gt;&lt;P&gt;Adapters that require runtime message mappings or Groovy scripting introduce branching logic that:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Is hard for AI to generate accurately&lt;/LI&gt;&lt;LI&gt;Requires post-generation developer intervention&lt;/LI&gt;&lt;LI&gt;Reduces the value of low-code/no-code automation&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In contrast, feature-rich adapters allow AI to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Automatically generate end-to-end iFlows&lt;/LI&gt;&lt;LI&gt;Map endpoints using OpenAPI specs or schema introspection&lt;/LI&gt;&lt;LI&gt;Configure pagination, security, and error recovery with minimal prompts&lt;/LI&gt;&lt;LI&gt;Perform content conversion (e.g., JSON ↔ XML) seamlessly within the adapter&lt;/LI&gt;&lt;LI&gt;Handle multi-step API processes (e.g., Salesforce Bulk API) without custom orchestration&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This makes AI-generated flows production-ready rather than just a starting point.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Real-World Example: &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;REST API with Token Pagination and OAuth2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;A typical enterprise scenario involves:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;OAuth2 authentication with token refresh&lt;/LI&gt;&lt;LI&gt;Paginated data retrieval via nextPageToken&lt;/LI&gt;&lt;LI&gt;Retry on non-standard error codes&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In the SAP standard HTTP adapter, this would require:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Groovy scripts for OAuth&lt;/LI&gt;&lt;LI&gt;Message mappings for token chaining&lt;/LI&gt;&lt;LI&gt;Condition logic for retries&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In the Advantco REST adapter:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;All handled via adapter configuration&lt;/LI&gt;&lt;LI&gt;AI can configure the integration entirely from the OpenAPI spec&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Business Value:&lt;BR /&gt;Enables full automation of paginated and secured REST API consumption without scripts. Reduces manual coding, increases reliability, and accelerates delivery of production-ready flows.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Kafka Event Stream Integration&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Many organizations use Kafka to stream real-time events (e.g., transactions, telemetry, logs) to or from SAP. Common requirements include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Schema registry support (e.g., Avro, JSON Schema)&lt;/LI&gt;&lt;LI&gt;Header injection and dynamic topic routing&lt;/LI&gt;&lt;LI&gt;Confluent or MSK OAuth2-based authentication&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Using the standard KAFKA adapter, this often requires:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Custom logic for key deserialization&lt;/LI&gt;&lt;LI&gt;Workarounds for offset handling or partitioning&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With the Advantco Kafka adapter:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Native support for schema registry integration&lt;/LI&gt;&lt;LI&gt;Built-in content conversion between XML, JSON, Avro&lt;/LI&gt;&lt;LI&gt;Support for header-based routing, retry, and long-polling&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Business Value:&lt;BR /&gt;Supports scalable, real-time event streaming with minimal configuration. Reduces the need for custom coding in high-throughput environments and simplifies schema evolution.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Salesforce Bulk API Integration&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Enterprises integrating with Salesforce often use the Salesforce Bulk API to process large data sets efficiently (e.g., leads, contacts, orders). Key requirements include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;OAuth2 login&lt;/LI&gt;&lt;LI&gt;Batching records into CSV or JSON format&lt;/LI&gt;&lt;LI&gt;Managing job status and polling until completion&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In a typical integration with the standard Salesforce, this would require:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Multiple iFlow steps for batch creation, status check, and result retrieval&lt;/LI&gt;&lt;LI&gt;Custom logic for job ID correlation and polling intervals&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With the Advantco Salesforce adapter:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Native support for Salesforce Bulk API operations&lt;/LI&gt;&lt;LI&gt;Built-in polling and job monitoring&lt;/LI&gt;&lt;LI&gt;Automatic job ID tracking and result extraction&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Business Value:&lt;BR /&gt;Streamlines high-volume data processing with native polling, batching, and job tracking. Eliminates orchestration complexity, making it ideal for AI-driven integration tools.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As SAP Integration Suite evolves toward AI-assisted and low-code paradigms, the role of adapters becomes more strategic than ever. Adapters that encapsulate integration logic internally unlock the full potential of AI-driven automation by removing the need for runtime scripting, error subprocesses, and manual fine-tuning.&lt;/P&gt;&lt;P&gt;In this sense, feature-rich adapters like those from Advantco are indeed the missing link—filling the gap between AI-generated integration design and real-world execution.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/are-feature-rich-adapters-the-missing-link-for-ai-driven-integration/ba-p/14153184"/>
    <published>2025-07-28T08:32:05.956000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/connect-amp-go-integration-updates-for-2025-1/ba-p/14164407</id>
    <title>Connect &amp; Go: Integration Updates for 2025/1</title>
    <updated>2025-07-28T13:50:24.638000+02:00</updated>
    <author>
      <name>MaiaraEllwanger</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/58</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;A seamlessly connected business is &lt;/SPAN&gt;&lt;SPAN&gt;more crucial than ever as organizations pursue agility and innovation. Just like the capabilities of SAP Integration Suite that enable you to connect everything in your business, the &lt;STRONG&gt;Connect &amp;amp; Go series&lt;/STRONG&gt; brings you a recap of the highlights for the product and how you can get started and integrate with confidence across SAP and non-SAP landscapes.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In &lt;/SPAN&gt;&lt;SPAN&gt;the first half of 2025, SAP Integration Suite has delivered new features and enhancements, reaffirming its role as the AI-assisted IPaaS for seamless connectivity, automation, and data-driven decision making. &lt;/SPAN&gt;&lt;SPAN&gt;As you dive into this post, you will explore AI updates&lt;EM&gt;, expanded capabilities for migration to Integration Suite, latest additions to third-party connectivity and API-centric and event-driven integration. &lt;/EM&gt;Enjoy!&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1606936720"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-1410423215"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":gem_stone:"&gt;💎&lt;/span&gt;AI Updates&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;SAP Integration Suite introduced a new user experience that empowers developers to use AI capabilities more effectively in their development, configuration, migration, testing, and workload monitoring tasks. This revamped interface aimed to enhance overall productivity and operational excellence, with a consolidated landing page offering a unified view and central activation control for all AI features.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1342992429"&gt;&lt;SPAN&gt;AI-assisted API trends and predictions&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Now organizations can leverage AI and machine learning to analyze historical API call volumes and forecast trends and provide insights into traffic patterns.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="API3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292610i5CAC3E435DEC0BCC/image-size/large?v=v2&amp;amp;px=999" role="button" title="API3.png" alt="API3.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Deviations from the normal usage or performance in API traffic often indicate security threats, system malfunctions, or other issues that might result in financial loss. This feature addresses this challenge through ML-based anomaly detection, which identifies unusual or abnormal behaviors by continuously monitoring the API traffic.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Upon detection of anomalies in API Call Volume, API Error count, and API Response time, the system provides notifications and insights to support investigating the cause and analyzing the impact, as well as recommendations on probable remedial actions. Customers can customize options to select specific API proxies, choose the prediction duration, and set the frequency according to their preferences. With this feature they can proactively adjust their strategies, improving their resilience and competitive edge to maintain the security, reliability, and performance of their APIs. Read more:&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/leveraging-api-traffic-predictions-in-sap-integration-suite/ba-p/14012084" target="_blank"&gt;Leveraging API Traffic Predictions in SAP Integration Suite&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1017396205"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-820882700"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":package:"&gt;📦&lt;/span&gt;SAP Business Accelerator Hub News&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;That the SAP Business Accelerator Hub is the&lt;/SPAN&gt; &lt;SPAN&gt;one-stop-shop for pre-built business accelerators you already know. But now, it includes Joule-based discovery and reuse of artifacts to help customers and partners find the right content faster and more intuitively. For an even smoother experience, the hub provides quick access to AI-specific APIs, events, and integrations in a dedicated space.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Joule in BAH.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292612i8E21985E3138C688/image-size/large?v=v2&amp;amp;px=999" role="button" title="Joule in BAH.jpeg" alt="Joule in BAH.jpeg" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And last but not least, the hub now includes a wide range of content for &lt;/SPAN&gt;&lt;A href="https://api.sap.com/dataproducts" target="_blank" rel="noopener noreferrer"&gt;Data Products&lt;/A&gt;&lt;SPAN&gt;. Users can explore these products within SAP Business Data Cloud that are built to help businesses manage, analyze, and maximize the value of their data. Offerings include curated datasets, data integration tools, and analytics applications, all designed to support informed, data-driven decision-making.&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-624369195"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-427855690"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;&amp;nbsp;Migration and Modernization&lt;/SPAN&gt;&lt;/H1&gt;&lt;H2 id="toc-hId-360424904"&gt;&lt;SPAN&gt;Support of Exactly-Once-In-Order scenario (EOIO)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;EOIO is essential in business scenarios where the receiving system requires messages to be received exactly once in the correct order, such as banking operations like deposits and withdrawals, where message order is critical. This functionality supports EOIO via exclusive queues in Cloud Integration and exclusive or partitioned queues using Advance Event Mesh. It ensures no duplicate messages or message loss, as well as the preservation of message sequence during processing.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To learn more about EOIO and how to configure Java Message Service (JMS) adapter, check out &lt;A href="https://community.sap.com/t5/integration-blog-posts/new-integration-flow-design-guidelines-covering-exactly-once-in-order/ba-p/14078696" target="_blank"&gt;New integration flow design guidelines covering Exactly Once In Order pattern&lt;/A&gt;, the &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/quality-of-service-exactly-once-in-order" target="_blank" rel="noopener noreferrer"&gt;documentation&lt;/A&gt;, and the &lt;A href="https://api.sap.com/package/DesignGuidelinesPatterns/overview" target="_blank" rel="noopener noreferrer"&gt;sample integration flows&lt;/A&gt; on SAP Business Accelerator Hub. For AEM, see &lt;A href="https://community.sap.com/t5/technology-q-a/exactly-once-in-order-eoio-for-group-messages-using-advanced-event-mesh/qaq-p/14086945" target="_blank"&gt;Exactly once in order (EOIO) for Group messages using Advanced Event Mesh.&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-163911399"&gt;&lt;SPAN&gt;Clean Core Modernization Recommendations for IDOCs&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;New modernization recommendations &lt;/SPAN&gt;&lt;SPAN&gt;now include evaluations of different IDOC types in integration scenarios&lt;/SPAN&gt;&lt;SPAN&gt;. The respective SOAP/ODATA APIs and Business Events are recommended according to the content on SAP Business Accelerator Hub. &lt;/SPAN&gt;&lt;SPAN&gt;Customers can leverage these recommendations during migration to obtain risk and cost reduction when adopting a clean core approach. The additional information is reported in the full evaluation result spreadsheet, learn how to &lt;/SPAN&gt;&lt;SPAN&gt;extract the data with a &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/create-data-extraction-request?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Data Extraction Request&lt;/A&gt; or follow the &lt;A href="https://developers.sap.com/tutorials/migration-assessment.html" target="_blank" rel="noopener noreferrer"&gt;tutorial&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--161684825"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-411541753"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt;Third-party Connectivity&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In this first half of 2025 we’ve expanded our ecosystem to help customers integrate across platforms effortlessly. A new set of integration adapters include: IBM MQ (REST, JMS), SAP LeanIX, Google Cloud Storage, Google Pub/Sub, Google BigQuery, Salesforce Pub/Sub, DocuSign,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;MS 365 Teams, MS 365 OneDrive, Shopify, and &lt;A href="https://api.sap.com/content-type/Adapters/adapters/packages" target="_blank" rel="noopener noreferrer"&gt;more&lt;/A&gt;. Additionally, the &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/rfc-adapter-98a3c1900d0744e89d0e7dd29de6401b?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Remote Function Call (RFC) sender and receiver&amp;nbsp;adapter&lt;/A&gt; &lt;SPAN&gt;was made available in &lt;/SPAN&gt;Edge Integration Cell to allow direct, on-premise communication with SAP and third-party systems without relying on the SAP Cloud Connector, allowing these systems to initiate RFC calls.&lt;/P&gt;&lt;H2 id="toc-hId--78374759"&gt;&lt;SPAN&gt;Data Space Integration&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;The Data Space Integration feature of SAP Integration Suite was made available in Q2 enabling participants within a data space, such as Catena-X, to exchange data with one another in a secure, reliable, and sovereign way. It provides straightforward integration between SAP and non-SAP applications and offers a unified, user-friendly approach to configuring and monitoring data exchanges within the data space, all using the SAP Integration Suite -&amp;nbsp;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/data-space-integration?locale=en-US" target="_self" rel="noopener noreferrer"&gt;learn more&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-18514743"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId--177998762"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;API-centric and event-driven integration&lt;/SPAN&gt;&lt;/H1&gt;&lt;H2 id="toc-hId--667915274"&gt;&lt;SPAN&gt;Single-source API and events catalog for developers&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;The API business hub enterprise &lt;/SPAN&gt;&lt;SPAN&gt;is now the&lt;/SPAN&gt; &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/centralized-developer-hub-new-design?version=CLOUD&amp;amp;locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Developer Hub&lt;/A&gt;: a &lt;/SPAN&gt;&lt;SPAN&gt;centralized catalog designed for application developers to easily discover, search, and utilize APIs and business events published by their organizations. Customers can benefit from building an extensive company-wide repository of APIs and events, including thorough documentation and code examples, &lt;/SPAN&gt;&lt;SPAN&gt;as well as new features like self-registration and analytics.&amp;nbsp;All &lt;/SPAN&gt;&lt;SPAN&gt;to empower developers to efficiently integrate various systems and applications. Start exploring: check out how you can &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/discover-s-4hana-cloud-events-in-sap-developer-hub/ba-p/14097325" target="_blank"&gt;Discover S/4HANA Cloud Events in SAP Developer Hub&lt;/A&gt; and &lt;A href="https://community.sap.com/t5/integration-blog-posts/enable-sap-developer-hub-as-central-event-catalog/ba-p/14076495" target="_blank"&gt;Enable SAP Developer Hub as central Event Catalog&lt;/A&gt;; and read the documentation for &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/making-apis-available-in-catalog?version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;APIs&lt;/A&gt; and &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/make-events-available-on-developer-hub?version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Events&lt;/A&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--864428779"&gt;&lt;SPAN&gt;SAP SuccessFactors &lt;/SPAN&gt;&lt;SPAN&gt;events &lt;/SPAN&gt;&lt;SPAN&gt;on SAP Business Accelerator Hub&lt;/SPAN&gt;​&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Explore the new &lt;A href="https://api.sap.com/products/SAPSuccessFactors/events/events" target="_self" rel="noopener noreferrer"&gt;events for SAP SuccessFactors&lt;/A&gt; published on SAP Business Accelerator Hub. Stay tuned for more events to come!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="SSFF in BAH.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292613iBF156E8B536180D1/image-size/large?v=v2&amp;amp;px=999" role="button" title="SSFF in BAH.jpg" alt="SSFF in BAH.jpg" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1060942284"&gt;&lt;SPAN&gt;Event add-on for SAP ERP and SAP S/4HANA &lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;This add-on for SAP S/4HANA and SAP ECC allows the creation of custom events based on different trigger types. These events can be both notification and data events and allow for loosely coupled, highly scalable, real-time event-driven business architectures powered by SAP Integration Suite, advanced event mesh. Users can easily configure the add-on and create their custom extensible events with or without code, as well as leverage templates for selected events.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Find all relevant details for this exciting update in the blog: &lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/the-e-in-event-driven-architecture-introducing-sap-s-new-event-add-for-erp/ba-p/14160285" target="_self"&gt;The E in Event-Driven Architecture: Introducing SAP’s new Event-Add for ERP&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/the-e-in-event-driven-architecture-introducing-sap-s-new-event-add-for-erp/ba-p/14160285" target="_self"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Karsten blog.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292614iDA7F25C2A70C17E1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Karsten blog.png" alt="Karsten blog.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--1550858796"&gt;The next edition of Connect &amp;amp; Go is scheduled for September/October 2025. Until then:&lt;/H3&gt;&lt;H4 id="toc-hId--2040775308"&gt;- Stay informed | Read the&amp;nbsp;&lt;SPAN&gt;Related Updates:&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/generative-ai-based-script-optimization/ba-p/13970403" target="_self"&gt;Generative AI-based script optimization&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;– Q1 25&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/integration-blog-posts/sap-business-accelerator-hub-domains-take-centerstage/ba-p/14018368" target="_self"&gt;SAP Business Accelerator Hub domains take centerstage&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;– Q1 25&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A class="" href="http:/t5/integration-blog-posts/new-partner-content-on-sap-business-accelerator-hub-q2-25/ba-p/14154988" target="_self" rel="nofollow noopener noreferrer"&gt;New Partner Content on SAP Business Accelerator Hub&lt;/A&gt;&amp;nbsp;- Q2 25&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/integration-blog-posts/integration-advisor-multi-payload-support-for-mig-creation/ba-p/14151474" target="_self"&gt;Integration Advisor – multi-payload support for MIG creation&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;- Q3 25&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-update-version-of-an-integration-flow-component/ba-p/14158284" target="_self"&gt;Update Version of an Integration Flow Component&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;- Q3 25&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/integration-blog-posts/partner-directory-accelerator-tool-for-pipeline-concept/ba-p/14095019" target="_self"&gt;Partner Directory Accelerator Tool for Pipeline Concept&amp;nbsp;&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;– Q3 25&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-2057678483"&gt;&lt;SPAN&gt;- Stay in Touch:&lt;/SPAN&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Join the &lt;A href="https://events.sap.com/sap-user-groups/en_us/ccoe.html#tabs-36f94c8943-item-1871f50d61-tab" target="_self" rel="noopener noreferrer"&gt;monthly update webinars&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Interact in the&amp;nbsp;&lt;A href="https://community.sap.com/t5/integration/gh-p/integration" target="_self"&gt;Integration group&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Subscribe to the &lt;A href="https://www.sap.com/cmp/nl/sap-cloud-platform-integration-suite/index.html?sap-outbound-id=6287F912007644D6C49C53EAA9594EE1B4431938&amp;amp;smc_campaign_id=0000032983&amp;amp;source=email-smc" target="_self" rel="noopener noreferrer"&gt;Newsletter&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/connect-amp-go-integration-updates-for-2025-1/ba-p/14164407"/>
    <published>2025-07-28T13:50:24.638000+02:00</published>
  </entry>
</feed>
