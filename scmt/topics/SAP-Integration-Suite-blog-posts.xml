<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Integration-Suite-blog-posts.xml</id>
  <title>SAP Community - SAP Integration Suite</title>
  <updated>2025-08-20T23:01:22.573561+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Integration Suite/pd-p/73554900100800003241" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Integration Suite blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cloud-integration-with-document-ai/ba-p/14176914</id>
    <title>Cloud Integration with Document AI</title>
    <updated>2025-08-10T19:19:42.064000+02:00</updated>
    <author>
      <name>PriyankaChak</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3763</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607924656"&gt;&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In this blog post, I will demonstrate how to connect Cloud Integration with Document AI. As a use case, let’s consider a scenario where a hospital registers a new patient, and the patient submits their previous prescription records. Using Document AI, we can extract relevant details such as past illnesses, allergies, and the patient’s blood group.&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1411411151"&gt;&lt;SPAN&gt;Document AI:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 1&lt;/STRONG&gt;. As a pre-requisite, run a booster to activate Document AI in a trial account.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Reference link: &lt;/SPAN&gt;&lt;A href="https://developers.sap.com/tutorials/cp-aibus-dox-booster-key.html" target="_blank" rel="noopener noreferrer"&gt;Use Trial to Set Up Account for SAP Document AI and Get Service Key&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 2&lt;/STRONG&gt;. Create a custom schema as shown below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299078i876DDC7000A272CB/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic1.png" alt="pic1.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 3&lt;/STRONG&gt;. Upload sample prescriptions. Here, I have uploaded two prescriptions of a&amp;nbsp;patient (merged into a single PDF). &lt;EM&gt;Please note that all the data is fictitious.&lt;/EM&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299079i67D96ABDEC86A48D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic2.png" alt="pic2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299080i9F613DA1CF5B38C0/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic3.png" alt="pic3.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 4&lt;/STRONG&gt;. Verify the extraction results, if required edit and then confirm.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299083iB54A73D12B3B235B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic4.png" alt="pic4.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For this example we get confidence percentage is 51%-80%. Please note, &lt;EM&gt;i&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;EM&gt;nstant learning&lt;/EM&gt; based on feedback is available on premium edition.&amp;nbsp;Reference link: &lt;A href="https://help.sap.com/docs/document-information-extraction/document-information-extraction/instant-learning-premium-edition?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Instant Learning (Premium Edition)&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1214897646"&gt;&lt;SPAN&gt;Cloud Integration:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;For the demo, I will send the PDF to Cloud Integration using an API testing tool. Cloud Integration will then forward it to Document AI, extract the results.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299114i70FE2EAC2873B982/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic8.png" alt="pic8.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The list of Document AI's APIs can be viewed using Swagger UI. The URL for swagger can be constructed from the Service key in the format:&amp;nbsp;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299085iCA62300FF3294F7F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic6.png" alt="pic6.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To call the Document AI API to post documents, use the below API.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299088iFF950F7BE5A548C1/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic9.png" alt="pic9.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The content modifier is used to set the options as below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299089iC8157A3A91CDBB18/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic10.png" alt="pic10.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The groovy script is used to create the multipart/form-data format.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;The endpoint for the 1st call is &lt;/SPAN&gt;&lt;SPAN&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;document/jobs&lt;/EM&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The response structure of the 1st call is shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299090i0142138ADE6AAD44/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic11.png" alt="pic11.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Retrieve the &lt;EM&gt;&lt;FONT color="#000000"&gt;id&lt;/FONT&gt;&lt;/EM&gt; and use the &lt;EM&gt;looping processing call&lt;/EM&gt; option to get the extraction result once the job is completed.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299092i6F16E82CDB06D189/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic12.png" alt="pic12.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Use the endpoint for 2nd call to get the extraction result:&lt;/SPAN&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;document/jobs/&amp;lt;id&amp;gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The groovy script is used to retrieve the field values where the confidence level is more than 60%, and format the response.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Test the iFlow endpoint using API testing tool (as shown below).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299093i9A20B029F3FB9E55/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic13.png" alt="pic13.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Please note that all the data are fictitious.&lt;/EM&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1018384141"&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;This blog post demonstrates a prototype that integrates Document AI for real life use cases along with Cloud Integration.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Reference Link: &lt;A href="https://help.sap.com/docs/document-ai/sap-document-ai/what-is-sap-document-ai?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SAP Document AI&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cloud-integration-with-document-ai/ba-p/14176914"/>
    <published>2025-08-10T19:19:42.064000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/invoking-llm-from-cloud-integration-responsibly-made-easy-with-generative/ba-p/14176222</id>
    <title>Invoking LLM from Cloud Integration Responsibly – Made Easy with Generative AI Hub in SAP AI Core</title>
    <updated>2025-08-11T09:53:30.525000+02:00</updated>
    <author>
      <name>Daniil_Bolobono</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/80755</uri>
    </author>
    <content>&lt;P&gt;In this blog post, I’ll walk you through how to seamlessly invoke large language models (LLMs) from Cloud Integration using the Generative AI Hub and the Orchestration Workflow API in SAP AI Core. We’ll focus on building a &lt;STRONG&gt;GDPR-compliant&lt;/STRONG&gt; automation flow that leverages &lt;STRONG&gt;data masking and pseudonymisation&lt;/STRONG&gt; to ensure privacy while still delivering value from generative AI.&lt;/P&gt;&lt;P&gt;The scenario we'll explore simulates a real-world use case: when a Business Partner record is updated in SAP S/4HANA Cloud, a personalized email notification is generated by an LLM and automatically sent out via Cloud Integration.&lt;/P&gt;&lt;P&gt;Thanks to prebuilt &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/orchestration-8d022355037643cebf775cd3bf662cc5?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;orchestration&lt;/A&gt; capabilities of Generative AI Hub in SAP AI Core, such as &lt;STRONG&gt;templating&lt;/STRONG&gt;, &lt;STRONG&gt;I/O filtering&lt;/STRONG&gt;, and &lt;STRONG&gt;data masking&lt;/STRONG&gt;, the process of generating compliant LLM responses can be achieved with just a single API call.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="email-generator.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298780i724952800A21D134/image-size/large?v=v2&amp;amp;px=999" role="button" title="email-generator.png" alt="email-generator.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;Before diving into the implementation steps, let’s take a closer look at the process flow behind this sample scenario.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Process Flow (Steps)&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Business Partner Update in SAP S/4HANA Cloud&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;A user creates or edits a Business Partner record in&amp;nbsp;SAP S/4HANA Cloud.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Event Triggered and Message Sent to SAP AEM&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The system triggers an event and sends a message to&amp;nbsp;SAP Advanced Event Mesh (AEM).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Cloud Integration iFlow Subscribes and Starts Processing&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The CPI iFlow&amp;nbsp;subscribes to the AEM queue and begins processing as soon as a new message is published.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Retrieve Old Payload from CAP Application&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The&amp;nbsp;iFlow&amp;nbsp;queries the&amp;nbsp;CAP application&amp;nbsp;to retrieve the&amp;nbsp;previous version (old payload)&amp;nbsp;of the Business Partner record from&amp;nbsp;SAP HANA Cloud.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Call the Orchestration Workflow API of SAP AI Core for AI-Based Email Generation&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;With both the old and new payloads in hand, the iFlow invokes the Generative AI Hub using the Orchestration Workflow API of SAP AI Core to generate a personalized email body in HTML format. Here, a predefined orchestration pipeline applies data masking, prompt templating, and foundation model invocation to generate a compliant, personalised email body – without exposing any sensitive data.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Send Email to Business Partner&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The&amp;nbsp;iFlow&amp;nbsp;sends the generated email to the Business Partner’s email address via a standard mail adapter in Cloud Integration, completing the end-to-end notification process.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;As part of this blog, I will not focus on connectivity between SAP S/4HANA Cloud and SAP Advanced Event Mesh (steps 1 and 2). For a live step-by-step demonstration of the setup, please review this video: &lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&amp;nbsp;&lt;A href="https://youtu.be/6hb9l0ss5ec?si=xubXNtx_7YXFm-11" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Tech Bytes: Configuring SAP S/4HANA Cloud and SAP Integration Suite, advanced event mesh&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1737000677"&gt;Configuring Orchestration Workflow in SAP AI Core&lt;/H2&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/orchestration-8d022355037643cebf775cd3bf662cc5?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Orchestration in SAP AI Core&lt;/A&gt; is a managed service that enables unified access, control, and execution of generative AI models through standardized APIs, templating, and configurable AI workflow components.&lt;/P&gt;&lt;P&gt;In our scenario, we will utilize it to chain together prebuilt steps, such as data masking and foundation model invocation, to generate a personalized email body in HTML format via a single API call.&lt;/P&gt;&lt;P&gt;To access the Orchestration service in SAP AI Core, you need to set up Generative AI Hub in &lt;A href="https://discovery-center.cloud.sap/serviceCatalog/1f756a52-8968-4ec4-92d0-f9bddf552ea3" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP AI Core&lt;/A&gt; and &lt;A href="https://discovery-center.cloud.sap/serviceCatalog/20fa1fda-1871-413d-becc-5a58884d8827" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP AI Launchpad&lt;/A&gt;. Please refer to either of the following resources for setup instructions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Discovery Mission: &lt;A href="https://discovery-center.cloud.sap/protected/index.html#/missiondetail/4403/4689/?tab=overview" target="_blank" rel="noopener nofollow noreferrer"&gt;Set Up SAP AI Core Generative AI Hub&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;SAP Developer Center Tutorial: &lt;A href="https://developers.sap.com/group.setup-ai-core.html" target="_blank" rel="noopener noreferrer"&gt;Generative AI with SAP AI Core - Setup&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="prereq1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298739i3731D66CDAD62166/image-size/large?v=v2&amp;amp;px=999" role="button" title="prereq1.png" alt="prereq1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Before moving to the next step, please ensure that your orchestration configuration is deployed and is in the &lt;EM&gt;&lt;STRONG&gt;RUNNING&lt;/STRONG&gt;&lt;/EM&gt; status.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="prereq2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298741iF81DAFEA5A834382/image-size/large?v=v2&amp;amp;px=999" role="button" title="prereq2.png" alt="prereq2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1669569891"&gt;Building the Orchestration Workflow&lt;/H3&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;In this example, we will build the orchestration workflow for the event of &lt;/SPAN&gt;&lt;STRONG&gt;Business Partner change&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;Within SAP AI Launchpad, navigate to Generative AI Hub -&amp;gt; Orchestration and click Edit Workflow to select the workflow steps you require.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore0.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298781i9AAF94C8C7612E6C/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore0.png" alt="aicore0.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For our scenario, deselect the Input Translation and Output Translation steps, as they are not needed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298752i38CE9D49203FDC22/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore1.png" alt="aicore1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the &lt;A href="https://community.sap.com/Templating" target="_blank" rel="noopener nofollow noreferrer"&gt;Templating&lt;/A&gt; step, we define prompts that guide LLM on how to perform its task.&lt;/P&gt;&lt;P&gt;We configure two types of messages for our scenario:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;System Prompt&lt;/LI&gt;&lt;LI&gt;User Prompt&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The system prompt defines the overall &lt;STRONG&gt;behavior, tone, and role&lt;/STRONG&gt; of the LLM. It sets global instructions that remain consistent across requests, ensuring predictable formatting and response style.&lt;/P&gt;&lt;P&gt;For our use case, the system prompt will instruct the LLM to act as a multilingual assistant that compares old and new Business Partner profiles and generates a compliant email.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;You are a multilingual assistant. Your task is to compare the old and new payloads of a Business Partner profile and generate a personalized, polite, and human-sounding email to inform the Business Partner about the changes made to their profile. If no changes are found, reply "NO_CHANGES".
Instructions:
- Detect all relevant changes (ignore changes in fields named change_time or change_date).
- Summarize the changes clearly and concisely.
- Keep it concise and clear.
- Format the response as HTML (do not use code blocks).
- Use paragraphs (&amp;lt;p&amp;gt;) for separate blocks of text.
- Use an unordered list (&amp;lt;ul&amp;gt;) with list items (&amp;lt;li&amp;gt;) to list the changes.
- Address the Business Partner by full name if available.
- End the email with the following closing, exactly as shown: Best regards,&amp;lt;br&amp;gt;SAP BTP Adoption &amp;amp; Consumption Center.
- Keep the tone friendly, clear, and professional.
- Do not generate the email subject line, only the body.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The user prompt provides the &lt;STRONG&gt;dynamic, task-specific input&lt;/STRONG&gt; for each request. Here, we pass actual data: the &lt;STRONG&gt;old profile payload&lt;/STRONG&gt;, &lt;STRONG&gt;new profile payload&lt;/STRONG&gt;, and &lt;STRONG&gt;target language&lt;/STRONG&gt;. These placeholders will be replaced at runtime to generate personalized content.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Write the email in the language: {{?language_name}}
Here is the OLD profile payload: {{?old_payload}}
Here is the NEW profile payload: {{?new_payload}}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298782i2DBF6A163EA56CA1/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore3.png" alt="aicore3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/data-masking-d9a54d9ca54b40beacbd24e1663ec3b4?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Data Masking&lt;/A&gt; step, we can anonymize or pseudonymize personally identifiable information from the input for selected entities. For our scenario, we will select the &lt;STRONG&gt;Pseudonymization&lt;/STRONG&gt; option. This will substitute personally identifiable information in selected categories with a MASKED_ENTITY_ID placeholder and allow us to unmask the LLM response before returning it to the Sender.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298746i05827E1812528552/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore4.png" alt="aicore4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/enhancing-model-consumption-with-input-filtering" target="_blank" rel="noopener noreferrer"&gt;Input Filtering&lt;/A&gt; step allows you to apply content safety filters to the incoming data before invoking the foundation model.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298753i18CF0C0B34DF85B0/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore5.png" alt="aicore5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the Model Configuration step, we can select the desired model (e.g., GPT-4.1) and configure relevant parameters such as temperature, token limits, etc.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298749iBBA647EDEB107980/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore6.png" alt="aicore6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Finally, the &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/enhancing-model-consumption-with-output-filtering" target="_blank" rel="noopener noreferrer"&gt;Output Filtering&lt;/A&gt; step enables content safety filtering on the LLM-generated response to ensure compliance and prevent undesired content.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298750i175484FBD4CDFD81/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore7.png" alt="aicore7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the orchestration workflow is configured, you can inspect its JSON definition and download it locally. This definition will be used later when invoking the orchestration workflow via API from Cloud Integration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298754iE2EFEB37A5D08970/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore8.png" alt="aicore8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Additionally, you can test the orchestration inference directly within SAP AI Launchpad by providing sample input variables. The testing tool allows you to view and trace the LLM response and fine-tune the workflow configuration as needed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298756i55B46CC7E693776E/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore9.png" alt="aicore9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When inspecting the output payload, you can clearly trace the results of each orchestration step – such as Input Masking, Output Unmasking, Input Filtering, and Output Filtering.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298758i53EBA0EAD81C5D10/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore10.png" alt="aicore10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To learn more about Orchestration in SAP AI Core, refer to the &lt;A href="https://developers.sap.com/group.sap-ai-core-generative.html" target="_blank" rel="noopener noreferrer"&gt;SAP Developer Center Tutorials: Generative AI with SAP AI Core - orchestration&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1343973667"&gt;Configure SAP Cloud Integration Business Partner Notification iFlow&lt;/H2&gt;&lt;P&gt;Now that we have our SAP S/4HANA Cloud, SAP Advanced Event Mesh, and the Orchestration Workflow in SAP AI Core configured, we can proceed with the Cloud Integration iFlow configuration.&lt;/P&gt;&lt;P&gt;This iFlow ensures that Business Partner changes trigger compliant AI-generated email notifications, while maintaining data consistency in HANA Cloud. It leverages SAP Advanced Event Mesh, CAP, and Generative AI Hub for an automated end-to-end process.&lt;/P&gt;&lt;H3 id="toc-hId-1276542881"&gt;High-Level iFlow Overview&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Triggered by AEM Queue&amp;nbsp;when a new event is published.&lt;/LI&gt;&lt;LI&gt;Retrieves BP details from S/4HANA Cloud.&lt;/LI&gt;&lt;LI&gt;(&lt;EM&gt;If event is BP update&lt;/EM&gt;)&amp;nbsp;Fetches old BP payload&amp;nbsp;from HANA Cloud (via CAP service).&lt;/LI&gt;&lt;LI&gt;Invokes the &lt;STRONG&gt;Orchestration Workflow API&lt;/STRONG&gt; to compare old vs. new payloads and generate an HTML email content while ensuring that no sensitive information is passed to LLM.&lt;/LI&gt;&lt;LI&gt;Upserts updated BP details into SAP HANA Cloud&amp;nbsp;via CAP service.&lt;/LI&gt;&lt;LI&gt;Sends an email to the Business Partner.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1080029376"&gt;Step-by-Step Process Breakdown&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Event Trigger&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The iFlow subscribes to the&amp;nbsp;AEM queue&amp;nbsp;and processes incoming events.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Retrieve Business Partner Details&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;An&amp;nbsp;OData request&amp;nbsp;is sent to&amp;nbsp;SAP S/4HANA Cloud&amp;nbsp;to fetch the latest BP details.&lt;/LI&gt;&lt;LI&gt;Key parameters (e.g., &lt;STRONG&gt;BP ID&lt;/STRONG&gt;&lt;STRONG&gt;, &lt;/STRONG&gt;&lt;STRONG&gt;BP email&lt;/STRONG&gt;) are extracted and saved into the properties for further processing.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Map to CAP Format&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;BP details are&amp;nbsp;transformed&amp;nbsp;into the &lt;STRONG&gt;CAP service&lt;/STRONG&gt; data model.&lt;/LI&gt;&lt;LI&gt;The&amp;nbsp;new payload is stored&amp;nbsp;in XML and JSON format for further use.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Conditional Logic&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;BP creation&lt;/STRONG&gt; → No old payload is retrieved.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BP update&lt;/STRONG&gt; → Old payload is retrieved for comparison.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Retrieve Old Payload from HANA Cloud (&lt;EM&gt;BP update only&lt;/EM&gt;)&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The iFlow calls&amp;nbsp;the &lt;STRONG&gt;CAP service &lt;/STRONG&gt;to fetch the previous BP record. Please refer to the GitHub repository &lt;A href="https://github.com/bolodania/businesspartner_srv" target="_blank" rel="noopener nofollow noreferrer"&gt;businesspartner_srv&lt;/A&gt; for more information on the CAP service. In our scenario, the CAP service acts as an intermediary that retrieves old Business Partner data from SAP HANA Cloud, provides an OData service for data access, and enables the upsert of updated details.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;AI-Based Email Generation&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;A subprocess calls the Orchestration Workflow API via the AI adapter to create a personalized HTML email body in a GDPR-compliant way.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Upsert BP Details in HANA Cloud&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The updated BP details are upserted into SAP HANA Cloud via the CAP service.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Send Email&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The iFlow sends an email using the&amp;nbsp;Mail Adapter.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298762i0CE2AE68A87967FB/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi1.png" alt="cpi1.png" /&gt;&lt;/span&gt;You can find this iFlow as a ZIP archive here: &lt;A href="https://github.com/bolodania/cpi_gen_ai_hub_blog/blob/main/AEM_GenAI_BPMailGenerator_blog.zip" target="_blank" rel="noopener nofollow noreferrer"&gt;AEM_GenAI_BPMailGenerator_blog.zip&lt;/A&gt;&lt;/P&gt;&lt;P&gt;For this blog, we’ll take a closer look at &lt;STRONG&gt;Step #6&lt;/STRONG&gt;, where the &lt;STRONG&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/ai-adapter" target="_blank" rel="noopener noreferrer"&gt;AI Receiver Adapter&lt;/A&gt; &lt;/STRONG&gt;is used to invoke the Orchestration Workflow API configured in the previous section.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298765i406A07F5364686D9/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi2.png" alt="cpi2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;1) In our case, the easiest way to prepare a payload for the AI Receiver Adapter is by using a small Groovy script.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.json.JsonOutput

Message processData(Message message) {
    def map = message.getProperties()

    def createBP = map.get("EventType").toString() == "sap.s4.beh.businesspartner.v1.BusinessPartner.Created.v1" ? true : false

    // Dynamic user template
    def userText = createBP
        ? "Write the email in the language: {{?language_name}}\nHere is the NEW profile payload: {{?new_payload}}"
        : "Write the email in the language: {{?language_name}}\nHere is the OLD profile payload: {{?old_payload}}\nHere is the NEW profile payload: {{?new_payload}}"

    def userTemplate = [
        role: "user",
        content: [
            [
                type : "text",
                text : userText
            ]
        ]
    ]

    def systemText = createBP
        ? """You are a multilingual assistant. Your task is to generate a warm, professional welcome email for a newly created Business Partner profile based on the provided NEW profile payload.

        Instructions:
        - Welcome the Business Partner.
        - Address the Business Partner by full name if available.
        - Mention that their profile has been successfully created.
        - Format the response as HTML (do not use code blocks).
        - Use paragraphs (&amp;lt;p&amp;gt;) for separate blocks of text.
        - Keep it concise and clear.
        - Keep the tone friendly, professional, and approachable.
        - End the email with the following closing, exactly as shown: Best regards,&amp;lt;br&amp;gt;SAP BTP Adoption &amp;amp; Consumption Center.
        - Do not generate the email subject line, only the body."""
        
        : """You are a multilingual assistant. Your task is to compare the old and new payloads of a Business Partner profile and generate a personalized, polite, and human-sounding email to inform the Business Partner about the changes made to their profile. If no changes are found, reply "NO_CHANGES".

        Instructions:
        - Detect all relevant changes (ignore changes in fields named change_time or change_date).
        - Summarize the changes clearly and concisely.
        - Keep it concise and clear.
        - Format the response as HTML (do not use code blocks).
        - Use paragraphs (&amp;lt;p&amp;gt;) for separate blocks of text.
        - Use an unordered list (&amp;lt;ul&amp;gt;) with list items (&amp;lt;li&amp;gt;) to list the changes.
        - Address the Business Partner by full name if available.
        - End the email with the following closing, exactly as shown: Best regards,&amp;lt;br&amp;gt;SAP BTP Adoption &amp;amp; Consumption Center.
        - Keep the tone friendly, clear, and professional.
        - Do not generate the email subject line, only the body."""

    def systemTemplate = [
        role: "system",
        content: [
            [
                type : "text",
                text : systemText
            ]
        ]
    ]
    
    def language = map.get("language")
    def newPayload = map.get("new_payload_json")
    
    def inputParams = [
        language_name: language,
        new_payload: newPayload instanceof String ? newPayload : JsonOutput.toJson(newPayload)
    ]
    
    if (!createBP) {
        def oldPayload = map.get("old_payload_json")
        inputParams.old_payload = oldPayload instanceof String ? oldPayload : JsonOutput.toJson(oldPayload)
    }


    // Build the JSON structure
    def payload = [
        orchestration_config: [
            module_configurations: [
                llm_module_config: [
                    model_name: "gpt-4.1",
                    model_params: [
                        frequency_penalty: 0,
                        presence_penalty: 0,
                        max_completion_tokens: 24576,
                        temperature: 1
                    ],
                    model_version: "2025-04-14"
                ],
                templating_module_config: [
                    template: [
                        userTemplate,
                        systemTemplate
                    ],
                    defaults: [:]
                ],
                filtering_module_config: [
                    input : [
                        filters: [
                            [
                                type: "azure_content_safety",
                                config: [
                                    Hate: 2,
                                    SelfHarm: 2,
                                    Sexual: 2,
                                    Violence: 2,
                                    PromptShield: true
                                ]
                            ]
                        ]
                    ],
                    output: [
                        filters: [
                            [
                                type  : "azure_content_safety",
                                config: [
                                    Hate: 2,
                                    SelfHarm: 2,
                                    Sexual: 2,
                                    Violence: 2
                                ]
                            ]
                        ]
                    ]
                ],
                masking_module_config: [
                    masking_providers: [
                        [
                            type: "sap_data_privacy_integration",
                            method: "pseudonymization",
                            entities: [
                                [type: "profile-credit-card-number"],
                                [type: "profile-driverlicense"],
                                [type: "profile-email"],
                                [type: "profile-sensitive-data"],
                                [type: "profile-ethnicity"],
                                [type: "profile-gender"],
                                [type: "profile-pronouns-gender"],
                                [type: "profile-iban"],
                                [type: "profile-location"],
                                [type: "profile-nationalid"],
                                [type: "profile-nationality"],
                                [type: "profile-org"],
                                [type: "profile-passport"],
                                [type: "profile-person"],
                                [type: "profile-phone"],
                                [type: "profile-political-group"],
                                [type: "profile-sapids-public"],
                                [type: "profile-religious-group"],
                                [type: "profile-sapids-internal"],
                                [type: "profile-ssn"],
                                [type: "profile-sexual-orientation"],
                                [type: "profile-trade-union"],
                                [type: "profile-address"],
                                [type: "profile-url"],
                                [type: "profile-university"],
                                [type: "profile-username-password"]
                            ],
                            mask_grounding_input: [enabled: false],
                            allowlist: []
                        ]
                    ]
                ]
            ]
        ],
        input_params: inputParams
    ]

    // Serialize to JSON string
    def jsonString = JsonOutput.toJson(payload)
    message.setBody(jsonString)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This script constructs the payload expected by the Orchestration API of SAP AI Core.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298764i8D609145087017D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi3.png" alt="cpi3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note that the settings within the &lt;EM&gt;module_configurations&lt;/EM&gt; block match the configuration that you downloaded from SAP AI Launchpad.&lt;/P&gt;&lt;P&gt;2) To set up a Connection to our AI Core Orchestration deployment, we first need to configure a Security Material.&lt;BR /&gt;In your SAP BTP Cockpit and access the service key of the SAP AI Core (extended plan) service instance created earlier.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298766i96E718E06DB8F818/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi4.png" alt="cpi4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create an &lt;STRONG&gt;OAuth2 Client Credentials&lt;/STRONG&gt; Security Material with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Token Service URL: &lt;STRONG&gt;url &lt;/STRONG&gt;from the service key + “/oauth/token”&lt;/LI&gt;&lt;LI&gt;Client ID: &lt;STRONG&gt;clientid&lt;/STRONG&gt; from the service key&lt;/LI&gt;&lt;LI&gt;Client Secret: &lt;STRONG&gt;clientsecret &lt;/STRONG&gt;from the service key&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi5.png" style="width: 364px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298767i7783529BF8B7EC89/image-size/medium?v=v2&amp;amp;px=400" role="button" title="cpi5.png" alt="cpi5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the &lt;STRONG&gt;Connection&lt;/STRONG&gt; tab of the AI Receiver Adapter:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Set the &lt;STRONG&gt;Address&lt;/STRONG&gt; to the AI_API_URL from the service key.&lt;/LI&gt;&lt;LI&gt;Reference the Security Material in the &lt;STRONG&gt;OAuth2 Client Credentials&lt;/STRONG&gt; field.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298768iD149FF2BEA8E8894/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi6.png" alt="cpi6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the &lt;STRONG&gt;Processing&lt;/STRONG&gt; tab:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Set &lt;STRONG&gt;Request Payload Source&lt;/STRONG&gt; to “Exchange Body”.&lt;/LI&gt;&lt;LI&gt;Provide the &lt;STRONG&gt;Orchestration Deployment ID&lt;/STRONG&gt; and &lt;STRONG&gt;AI Resource Group&lt;/STRONG&gt; from SAP AI Launchpad.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298771i84B4983238E49650/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi8.png" alt="cpi8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298769i66B867762AFDDF1A/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi7.png" alt="cpi7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3) JSON output is converted into XML for further processing.&lt;/P&gt;&lt;P&gt;4) Content Modifier step is used to extract the &lt;STRONG&gt;&lt;EM&gt;email_body&lt;/EM&gt;&lt;/STRONG&gt; from the Orchestration API response via the XPath expression: &lt;STRONG&gt;&lt;EM&gt;/root/orchestration_result/choices/message/content&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298772i757F3C22FD3B7557/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi9.png" alt="cpi9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-754433152"&gt;Testing the Scenario End-to-End&lt;/H2&gt;&lt;P&gt;With all components configured, it’s time to put the setup to the test.&lt;/P&gt;&lt;P&gt;&lt;A href="https://dam.sap.com/mac/u/a/jSB7LiM?rc=10&amp;amp;doi=SAP1229099 " target="_blank" rel="noopener noreferrer"&gt;&lt;span class="lia-unicode-emoji" title=":film_projector:"&gt;📽&lt;/span&gt;️ Watch Event-Driven Business Partner Email Notification Demo&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;The video walks through the entire process – showing the change in SAP S/4HANA Cloud, the processing inside Cloud Integration, and the final email received by the Business Partner.&lt;/EM&gt;&lt;/P&gt;&lt;H2 id="toc-hId-557919647"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;This scenario highlights how &lt;STRONG&gt;simple and seamless it is to invoke SAP AI Core from Cloud Integration&lt;/STRONG&gt; to generate compliant, human-sounding content.&lt;/P&gt;&lt;P&gt;With just a small Groovy script to prepare the payload, CPI can call an &lt;STRONG&gt;SAP AI Core Orchestration Workflow&lt;/STRONG&gt; directly via the AI Receiver Adapter – without complex custom coding or middleware. All compliance safeguards, such as data masking and filtering, are handled by the orchestration workflow, ensuring that &lt;STRONG&gt;no sensitive information is ever sent to the LLM&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;The result is an &lt;STRONG&gt;automated, end-to-end process&lt;/STRONG&gt; where a Business Partner update in SAP S/4HANA Cloud triggers an event, CPI processes it, SAP AI Core generates the compliant email body, and the recipient is informed – all with minimal configuration effort.&lt;/P&gt;&lt;P&gt;This pattern can be applied to other master data objects and backend systems, as well as to any scenario where Cloud Integration must securely generate AI-based content — making it &lt;STRONG&gt;a powerful blueprint for scaling compliant AI adoption across the enterprise.&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/invoking-llm-from-cloud-integration-responsibly-made-easy-with-generative/ba-p/14176222"/>
    <published>2025-08-11T09:53:30.525000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-debug-sap-cpi-groovy-scripts-locally-using-visual-studio-code/ba-p/14173680</id>
    <title>How to Debug SAP CPI Groovy Scripts Locally Using Visual Studio Code.</title>
    <updated>2025-08-11T11:49:35.097000+02:00</updated>
    <author>
      <name>JohanCalderon</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/69425</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736915332"&gt;Introduction&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Sometimes it's necessary to debug code to find a bug — it happened to me too. Back then, our only solution was to use tools like “groovyIDE”, where we could print output to the console, just like old-school PHP developers.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;A few months ago, I published a Visual Studio Code extension that provides similar functionality to “groovyIDE” but for a local environment. This local setup also supports external libraries, such as JWT libraries.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The new version of the VS Code extension now allows debugging Groovy scripts locally using JDI (Java Debug Interface). I developed a tool that enables this functionality. Currently, it does not support all Java or Groovy classes.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;What do you need?&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Visual studio Code&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://marketplace.visualstudio.com/items?itemName=JohanCalderon.sap-cpi-groovy-script" target="_self" rel="nofollow noopener noreferrer"&gt;SAP CPI Groovy Script&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Java 1.8&lt;/LI&gt;&lt;LI&gt;Groovy 2.4&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://chromewebstore.google.com/detail/sap-cpi-tools-extension/kkionagkfbgemaciikjfpndemmhaghpm?hl=en-US&amp;amp;utm_source=ext_sidebar" target="_self" rel="nofollow noopener noreferrer"&gt;SAP CPI Extension tools&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1540401827"&gt;&lt;STRONG&gt;Installing and Configuring the Extension in VS Code&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_0-1754479103648.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297139i4AF6BA15939B57AA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_0-1754479103648.png" alt="JohanCalderon_0-1754479103648.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Before using the extension, you need to configure it properly.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Find Your Java and Groovy Installation Paths&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;If you've installed Java and Groovy or manually added them to your system &lt;STRONG&gt;PATH&lt;/STRONG&gt;, you can find their locations by running the following command in &lt;STRONG&gt;Command Prompt&lt;/STRONG&gt;:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_1-1754479127023.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297142iAD069168C4D131A6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_1-1754479127023.png" alt="JohanCalderon_1-1754479127023.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_2-1754479127024.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297140i8E9D7BCEDE9280AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_2-1754479127024.png" alt="JohanCalderon_2-1754479127024.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This will show you the installation paths for Java and Groovy.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Configure the Extension in VS Code&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Open &lt;STRONG&gt;VS Code Settings&lt;/STRONG&gt; and search for &lt;STRONG&gt;"Groovy"&lt;/STRONG&gt; to configure the extension.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_3-1754479127025.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297143i1720A7813EDEDF3E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_3-1754479127025.png" alt="JohanCalderon_3-1754479127025.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_4-1754479127027.png" style="width: 434px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297145i920889FB93B6CF75/image-dimensions/434x705?v=v2" width="434" height="705" role="button" title="JohanCalderon_4-1754479127027.png" alt="JohanCalderon_4-1754479127027.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Set Java Path&lt;/STRONG&gt;:&lt;BR /&gt;Example:&lt;BR /&gt;C:\programs\jdk1.8.0_441&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Set Groovy Path&lt;/STRONG&gt;:&lt;BR /&gt;Example:&lt;BR /&gt;C:\programs\groovy-2.4.21&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_5-1754479127028.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297144i71AD7AC5F2468028/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_5-1754479127028.png" alt="JohanCalderon_5-1754479127028.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After completing these steps, the VS Code extension will be ready to use for local Groovy script debugging.&lt;/P&gt;&lt;H2 id="toc-hId-1343888322"&gt;&lt;STRONG&gt;Creating a Project&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;There are three ways to create a project:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using the wizard&lt;/STRONG&gt; – This method creates a folder and an example script.&lt;/P&gt;&lt;P&gt;In VS Code, open the Command Palette, type &amp;gt;cpi, and select &lt;STRONG&gt;SAP CPI: Create a SAP CPI Groovy Script Project&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_0-1754479359288.png" style="width: 486px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297147i589DD153D8840736/image-dimensions/486x136?v=v2" width="486" height="136" role="button" title="JohanCalderon_0-1754479359288.png" alt="JohanCalderon_0-1754479359288.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It will prompt you to select a folder and enter a name for the project.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_1-1754479384068.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297149iD69A3B72F8D4135D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_1-1754479384068.png" alt="JohanCalderon_1-1754479384068.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_2-1754479384068.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297148iAF23BA924695112F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_2-1754479384068.png" alt="JohanCalderon_2-1754479384068.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After providing the folder and project name, a new project is created automatically.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_0-1754497276787.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297280i500494D847A78CA9/image-dimensions/502x196?v=v2" width="502" height="196" role="button" title="JohanCalderon_0-1754497276787.png" alt="JohanCalderon_0-1754497276787.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using SAP CPI Tools Extension&lt;/STRONG&gt; – This method creates a project containing the Groovy script code from SAP CPI.&lt;/P&gt;&lt;P&gt;In VS Code, open the Command Palette, type &amp;gt;cpi, and select &lt;STRONG&gt;SAP CPI: Create a SAP CPI Groovy Script from CPI Extension&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;It will prompt you to select a folder and enter a name for the project.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_3-1754479898886.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297150iA5FD392080FABDA3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_3-1754479898886.png" alt="JohanCalderon_3-1754479898886.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_4-1754479910568.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297151iBC15AE26C63C63C0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_4-1754479910568.png" alt="JohanCalderon_4-1754479910568.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;VS Code is listening for a connection from the SAP CPI Extension.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_5-1754479957236.png" style="width: 501px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297152i9CB46891B2CE944C/image-dimensions/501x244?v=v2" width="501" height="244" role="button" title="JohanCalderon_5-1754479957236.png" alt="JohanCalderon_5-1754479957236.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It will create a project containing the script from SAP CPI.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_6-1754480055089.png" style="width: 501px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297153i85B49E2D4D4226D4/image-dimensions/501x272?v=v2" width="501" height="272" role="button" title="JohanCalderon_6-1754480055089.png" alt="JohanCalderon_6-1754480055089.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using SAP CPI Tools Extension with trace files (Header, properties and body) -&amp;nbsp;&lt;/STRONG&gt;This method is the same as &lt;STRONG&gt;Using SAP CPI Tools Extension&lt;/STRONG&gt;; the only difference is that the project is created from trace details in the Design iFlow section.&lt;/P&gt;&lt;P&gt;You need to activate the trace and run the iFlow.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_7-1754480281908.png" style="width: 501px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297159i7463268EB6C1E054/image-dimensions/501x262?v=v2" width="501" height="262" role="button" title="JohanCalderon_7-1754480281908.png" alt="JohanCalderon_7-1754480281908.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After running the iFlow, press the &lt;STRONG&gt;Message&lt;/STRONG&gt; button and then the &lt;STRONG&gt;Draw&lt;/STRONG&gt; button to display all executed steps.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_8-1754480499545.png" style="width: 418px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297161i061F17E654B95983/image-dimensions/418x210?v=v2" width="418" height="210" role="button" title="JohanCalderon_8-1754480499545.png" alt="JohanCalderon_8-1754480499545.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_10-1754480518187.png" style="width: 503px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297164iDB7E5E3664749115/image-dimensions/503x230?v=v2" width="503" height="230" role="button" title="JohanCalderon_10-1754480518187.png" alt="JohanCalderon_10-1754480518187.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Double-click the Groovy script step, then click the &lt;STRONG&gt;VSCode Debug&lt;/STRONG&gt; button. This will create a project containing the code from that step and add trace files for Headers, Properties, and Body.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_11-1754480601890.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297165i568E0920A375893A/image-dimensions/502x162?v=v2" width="502" height="162" role="button" title="JohanCalderon_11-1754480601890.png" alt="JohanCalderon_11-1754480601890.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_13-1754480621174.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297167i425D56FB01715FB7/image-dimensions/502x265?v=v2" width="502" height="265" role="button" title="JohanCalderon_13-1754480621174.png" alt="JohanCalderon_13-1754480621174.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_1-1754497493639.png" style="width: 503px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297281iA192FD057BC50E89/image-dimensions/503x196?v=v2" width="503" height="196" role="button" title="JohanCalderon_1-1754497493639.png" alt="JohanCalderon_1-1754497493639.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1147374817"&gt;Run or debug the script&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_2-1754497591297.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297284iA0227FC80E89D32D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_2-1754497591297.png" alt="JohanCalderon_2-1754497591297.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To run or debug the project for the first time, it asks if you want to create a config.json file. This file is necessary because it contains the debug information.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_3-1754497607360.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297286i90BB2CE75ABE2DFC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_3-1754497607360.png" alt="JohanCalderon_3-1754497607360.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It created a file.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_4-1754497642441.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297289i8C90375484D8CB02/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_4-1754497642441.png" alt="JohanCalderon_4-1754497642441.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After that, you can run or debug the code.&lt;/P&gt;&lt;P&gt;A print statement was added to display output in the console."&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_5-1754497681532.png" style="width: 503px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297292i782B64AC202A3D37/image-dimensions/503x308?v=v2" width="503" height="308" role="button" title="JohanCalderon_5-1754497681532.png" alt="JohanCalderon_5-1754497681532.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create a properties file in the in folder.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_6-1754497736441.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297297iA140F80ABC38AAA8/image-dimensions/502x229?v=v2" width="502" height="229" role="button" title="JohanCalderon_6-1754497736441.png" alt="JohanCalderon_6-1754497736441.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;RUN&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_7-1754497756121.png" style="width: 500px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297298i3425B0C0B95FD63B/image-dimensions/500x348?v=v2" width="500" height="348" role="button" title="JohanCalderon_7-1754497756121.png" alt="JohanCalderon_7-1754497756121.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When the run is finished, the result is in the out folder&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_10-1754497851510.png" style="width: 500px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297302i4229F6CB14B644C3/image-dimensions/500x250?v=v2" width="500" height="250" role="button" title="JohanCalderon_10-1754497851510.png" alt="JohanCalderon_10-1754497851510.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;DEBUG&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add breakpoints on lines 7, 12, and 15&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_11-1754497900240.png" style="width: 501px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297304i2999D30213747832/image-dimensions/501x283?v=v2" width="501" height="283" role="button" title="JohanCalderon_11-1754497900240.png" alt="JohanCalderon_11-1754497900240.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The variables are shown on the left side&lt;/P&gt;&lt;P&gt;Line 7&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_12-1754497927125.png" style="width: 501px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297305iCF9B2A68CA763F1A/image-dimensions/501x212?v=v2" width="501" height="212" role="button" title="JohanCalderon_12-1754497927125.png" alt="JohanCalderon_12-1754497927125.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Line 12&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_13-1754497961336.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297307i62902B73D78AFB4C/image-dimensions/502x148?v=v2" width="502" height="148" role="button" title="JohanCalderon_13-1754497961336.png" alt="JohanCalderon_13-1754497961336.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Line 15&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_14-1754497975669.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297308i7640AEFC36E2198B/image-dimensions/502x192?v=v2" width="502" height="192" role="button" title="JohanCalderon_14-1754497975669.png" alt="JohanCalderon_14-1754497975669.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Ready to streamline your Groovy debugging process? Give the VS Code extension a try and see how it can simplify your development workflow. If you have questions or want to share your experience, feel free to leave a comment below! Happy coding!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-debug-sap-cpi-groovy-scripts-locally-using-visual-studio-code/ba-p/14173680"/>
    <published>2025-08-11T11:49:35.097000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/bridging-edi-and-sap-s-4hana-cloud-seamless-edi-to-soap-integration/ba-p/14144660</id>
    <title>Bridging EDI and SAP S/4HANA Cloud: Seamless EDI-to-SOAP Integration</title>
    <updated>2025-08-11T12:03:16.570000+02:00</updated>
    <author>
      <name>ManaswiniPuli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1940178</uri>
    </author>
    <content>&lt;P&gt;In the fast-paced world of business today, it's crucial to connect traditional EDI systems with modern cloud ERP systems for streamlined operations. This blog takes a closer look at an integration fllow that handles inbound EDI messages, transforms them into SOAP format and facilitate effortless communication with SAP S/4HANA Cloud. Let's explore how this approach changes data formats and guarantees a reliable,standards-complaint integration between legacy and cloud systems.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;For detailed steps on creating and exporting the required MIG and MAG files used in this integration, please refer to the blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-migs-and-mags-using-integration-advisor-in-sap-btp-cockpit/ba-p/14143413" target="_blank"&gt;Creating MIGs and MAGs Using Integration Advisor i... - SAP Community&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-by-Step Guide: EDI to SOAP Inbound Integration Flow&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here’s a detailed look at the entire integration flow (iFlow) for processing EDI to SOAP inbound messages. This iFlow covers all the essential steps and components needed to receive, validate, transform, and route EDI messages into SOAP format, ensuring a smooth connection to the SAP S/4HANA Cloud system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_7-1752053017520.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284453iE6513532D02A320B/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_7-1752053017520.png" alt="ManaswiniPuli_7-1752053017520.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Receive EDI Data via AS2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To initiate the integration, configure the AS2 adapter to receive inbound EDI messages. This configuration supports secure and reliable data transfer in B2B scenarios involving EDI communication.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; For detailed steps on setting up the AS2 adapter, refer to the blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/step-by-step-guide-secure-file-exchange-with-as2-adapter-in-sap-cloud/ba-p/14143695" target="_blank"&gt;Step-by-Step Guide: Secure File Exchange with AS2 Adapter in SAP Cloud Integration – SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Add Start Message&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add a Start Message event to initiate the integration flow when EDI data is received through AS2.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Add EDI Splitter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add an EDI Splitter for handling incoming EDI messages. It breaks them down into individual transactions, checks their structure for validity, and can also generate acknowledgments if necessary.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Important:&lt;/STRONG&gt;All the XSD and mapping files mentioned in this flow( ASC-X12 XSD, preproc.xsl, and others)—are created and exported during the MIG and MAG setup process in SAP Integration Advisor.&lt;BR /&gt;For a step-by-step guide on generating and exporting these files, please refer to the blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-migs-and-mags-using-integration-advisor-in-sap-btp-cockpit/ba-p/14143413" target="_blank"&gt;Creating MIGs and MAGs Using Integration Advisor i... - SAP Community&lt;/A&gt;.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload ASC-X12 XSD File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;To upload ASC-X12 XSD file, navigate to the X12 tab in the EDI Splitter configuration. You’ll find the file in the Source folder that was extracted during the MAG export.&lt;/LI&gt;&lt;LI&gt;This file outlines the structure of the incoming EDI message, allowing the splitter to accurately parse and process the X12 message.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_1-1752060193831.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284489iA95C1002B00BA32F/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_1-1752060193831.png" alt="ManaswiniPuli_1-1752060193831.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: Add Router&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;Now, let’s add a Router following the EDI Splitter. This step is crucial for separating EDI messages from acknowledgement messages, especially if you’ve enabled the generation of acknowledgements in the splitter.&lt;/P&gt;&lt;P&gt;Let's define two routing paths:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Acknowledgement Route&lt;/STRONG&gt;: This route deals with acknowledgement messages independently.&lt;/P&gt;&lt;P&gt;In the Processing tab, you’ll see:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Expression Type Options:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;XML: This is used when the message is formatted in XML.&lt;/LI&gt;&lt;LI&gt;NON_XML: This is for messages that aren’t in XML format, where routing is based on the message headers.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We opt for NON_XML since the acknowledgement message isn’t in XML, so the router checks the message headers instead of the XML content.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Condition&lt;/STRONG&gt;: ${header.EDI_ACKNOWLEDGEMENT} = 'true'&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_5-1752052893931.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284451i666327ED704A7D00/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_5-1752052893931.png" alt="ManaswiniPuli_5-1752052893931.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Default Route:&lt;/STRONG&gt; Responsible for processing standard EDI messages.&lt;/P&gt;&lt;P&gt;No condition needed (processes all other messages)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_2-1752060272463.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284490i648A4A92543BC05E/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_2-1752060272463.png" alt="ManaswiniPuli_2-1752060272463.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5: Integrate EDI to XML Converter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now, let’s add an EDI to XML Converter to convert the EDI message into XML format.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Upload ASC-X12 XSD File&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Navigate to the X12 tab and upload the ASC-X12.xsd file from the Source folder that you got from the MAG export.&lt;/LI&gt;&lt;LI&gt;The ASC-X12 XSD file defines the structure of the incoming EDI message, enabling the EDI to XML Converter to accurately interpret and transform the EDI data into XML format.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_8-1752053118395.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284454i89136E273FF328CA/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_8-1752053118395.png" alt="ManaswiniPuli_8-1752053118395.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6: Include&amp;nbsp;XSLT Mapping (Pre-processing)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Next up, we’ll add XSLT Mapping to handle data preprocessing and transformation.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload preproc.xsl File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Under the&amp;nbsp;&lt;STRONG&gt;Processing&lt;/STRONG&gt;&amp;nbsp;tab, upload the preproc.xsl File from the&amp;nbsp;&lt;STRONG&gt;Source&lt;/STRONG&gt;&amp;nbsp;folder extracted from the MAG export.&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;This step modifies the XML structure created from the EDI message, ensuring it aligns with the expected input format for message mapping.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_9-1752053218929.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284455iF1E52121053479B4/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_9-1752053218929.png" alt="ManaswiniPuli_9-1752053218929.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7: Add XML Validator (Post-processing)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add an XML Validator to validate the pre-processed XML.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload X12_850_PurchaseOrder_MIG_RD.xsd File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Navigate to the Validation tab and upload the X12_850_PurchaseOrder_MIG_RD.xsd file from the Source folder you extracted from the MAG export.&lt;/LI&gt;&lt;LI&gt;This step makes sure that the transformed XML adheres to the expected schema before you proceed to message mapping, helping you identify any structural issues early on.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_10-1752053254168.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284456i159845643F5EF3D0/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_10-1752053254168.png" alt="ManaswiniPuli_10-1752053254168.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8: Implement XSLT Mapping (Main Mapping)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s add an XSLT Mapping to transform the validated EDI XML into the target SOAP message structure.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Upload Mapping_X12_850_PurchaseOrder_MIG_to_SOAP_SalesOrder_MIG.xsl File&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Under the Processing tab, you’ll need to upload the Mapping_X12_850_PurchaseOrder_MIG_to_SOAP_SalesOrder_MIG.xsl file from the root folder of the exported MAG zip file.&lt;/LI&gt;&lt;LI&gt;This main mapping file, which was generated by SAP Integration Advisor (IA), is crucial for transforming the data into the right format for SAP S/4HANA Cloud.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_11-1752053302564.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284457iB3B5CA68F2D45C00/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_11-1752053302564.png" alt="ManaswiniPuli_11-1752053302564.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 9: Apply XSLT Mapping (Post-processing)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add an XSLT Mapping to adjust the mapped XML output to the final structure required by the target system.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload SOAP_SalesOrder_MIG_postproc.xsl File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Head over to the Processing tab and upload the SOAP_SalesOrder_MIG_postproc.xsl file from the Target MIG folder.&lt;/LI&gt;&lt;LI&gt;This ensures the transformed XML matches the exact format expected by the target system for successful processing.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_12-1752053341290.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284458i72CD3F449717F994/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_12-1752053341290.png" alt="ManaswiniPuli_12-1752053341290.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 10: Add SOAP Receiver Adapter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use the SOAP Receiver Adapter to connect to SAP S/4HANA and transmit the transformed XML payload over a SOAP-based web service. This adapter ensures that the data is encapsulated in a SOAP envelope and sent to the appropriate endpoint.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Address&lt;/STRONG&gt;:Enter the SOAP service endpoint URL provided by your target system.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;URL to WSDL&lt;/STRONG&gt;:Click on Browse and upload the .wsdl file that corresponds to your target SOAP service. CPI will automatically fill in the Service, Endpoint, and Operation Name fields based on the WSDL information.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt;&amp;nbsp;Basic&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Credential Name:&amp;nbsp;&lt;/STRONG&gt;Enter the Credential Name of the User Credentials you set up in Security Material.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_14-1752056043811.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284461i14CDBF398602D2F2/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_14-1752056043811.png" alt="ManaswiniPuli_14-1752056043811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This marks the end of the configuration for the EDI-to-SOAP inbound integration flow. With this iFlow in action, incoming EDI messages are handled efficiently and routed to the S/4HANA target system in the required SOAP format.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt;&lt;BR /&gt;All the views and opinions in this blog are my own and are made in my personal capacity. SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/bridging-edi-and-sap-s-4hana-cloud-seamless-edi-to-soap-integration/ba-p/14144660"/>
    <published>2025-08-11T12:03:16.570000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-celebrating-the-winners-and-innovation-in/ba-p/14172106</id>
    <title>SAP BTP Hackathon at SAPHILA 2025: Celebrating the Winners and Innovation in Action</title>
    <updated>2025-08-13T09:12:43.763000+02:00</updated>
    <author>
      <name>winklero</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/426853</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;A few months ago, we shared our excitement about the launch of the first-ever &lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-afsug-members/ba-p/14001231" target="_blank"&gt;SAP BTP Hackathon in Africa in joined collaboration of AFSUG and SAP&lt;/A&gt;, highlighting the unique opportunity it offered for AFSUG members to bring their creativity and problem-solving skills to the forefront of the SAP community.&amp;nbsp;Now, with the event behind us, it’s time to reflect on what unfolded and celebrate the teams and ideas that made this inaugural Hackathon truly special.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;From Ideation to Demo Jam: A Journey of Collaboration&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;As outlined in the previous blog, the hackathon was more than just a competition, it was a journey. Eighteen teams, representing a broad cross-section of AFSUG members, embarked on an eight-week sprint, supported by SAP BTP experts and coaches. The focus was on building real-world solutions using SAP BTP components like SAP Build, SAP HANA Cloud, SAP Integration Suite and ABAP Cloud amongst other SAP BTP based Services &amp;amp; Solutions.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;After intensive enablement and development sessions, three teams emerged as finalists and were invited to present their solutions live at SAPHILA 2025’s Demo Jam. The energy in the room was palpable as each team showcased how SAP BTP could be harnessed to solve pressing business challenges.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_9-1754393553994.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296559i65EFF3CD8612C2A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_9-1754393553994.png" alt="winklero_9-1754393553994.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;And the Winner Is… PwC South Africa!&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_0-1754393299694.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296543iCE5C674A6617840E/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_0-1754393299694.jpeg" alt="winklero_0-1754393299694.jpeg" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;In a closely contested finale, the SAPHILA audience voted PwC South Africa as the overall winner for their AI-driven legal services platform “Legal Ease”.&amp;nbsp;This solution stood out for its innovative use of AI to simplify legal document processing and understanding, a pain point for many businesses and consumers alike. “Legal Ease” enables users to scan and summarize complex contracts, ask questions in natural language, and receive clear, actionable insights. The platform even supports translation into local languages and integrates with knowledge bases for related services. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;What impressed both the jury and the audience was not just the technical sophistication, but the clear business value: “Legal Ease” addresses real frustrations around contract transparency, billing and accessibility, with the potential to transform how legal services are delivered in Africa and beyond.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Honouring the Finalists: Debswana Diamond Company and Bell Equipment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Let’s not forget the other two finalists, who also delivered outstanding solutions:&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Debswana Diamond Company&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;tackled overtime management with an AI-powered assistant that streamlines scheduling, reduces costs and supports employee well-being.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Bell Equipment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;automated shipment tracking and document processing, helping to prevent stock shortages and improve logistics efficiency.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Both teams demonstrated the breadth of innovation possible with SAP BTP and set a high bar for future Hackathons.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_2-1754393465394.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296552i4ABBA6DEF33DF299/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_2-1754393465394.png" alt="winklero_2-1754393465394.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Reflections and What’s Next&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The Hackathon’s main objective was to foster deep collaboration between SAP and its customers, giving local teams a hands-on opportunity to explore and build with SAP BTP.&amp;nbsp;The quality and diversity of solutions, especially the creative use of AI and automation, highlight the immense potential within the African SAP community.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Amanda Gibbs, CEO of AFSUG, summed it up perfectly:&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&lt;SPAN&gt;“It is inspiring to witness what can be achieved in just eight weeks using SAP BTP;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&lt;SPAN&gt;we’ve seen incredible progress and innovation.”&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Join the Conversation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Congratulations again to all teams who participated and especially to PwC South Africa for their winning solution! If you were inspired by the SAP BTP Hackathon or have thoughts on how SAP BTP can drive innovation in your organization, I’d love to hear from you in the comments.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;And if you missed out this year,&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;keep an eye out for future SAP BTP Hackathons - this is just the beginning!&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_3-1754393500871.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296553iB355DF2E2218111A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_3-1754393500871.png" alt="winklero_3-1754393500871.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_4-1754393507094.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296554i19D3E337CCE34F01/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_4-1754393507094.png" alt="winklero_4-1754393507094.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_5-1754393513173.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296555i1F8DCACD879B51EE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_5-1754393513173.png" alt="winklero_5-1754393513173.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_8-1754393531840.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296558iDD76EEFFC71232AF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_8-1754393531840.png" alt="winklero_8-1754393531840.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="winklero_7-1754393525555.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296557iBED54F1BAA1636EB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_7-1754393525555.png" alt="winklero_7-1754393525555.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-celebrating-the-winners-and-innovation-in/ba-p/14172106"/>
    <published>2025-08-13T09:12:43.763000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/ai-assisted-erp-transforming-sap-btp-integration-with-faster-smarter-iflow/ba-p/14164130</id>
    <title>AI-Assisted ERP: Transforming SAP BTP Integration with Faster, Smarter iFlow Development</title>
    <updated>2025-08-13T11:01:56.244000+02:00</updated>
    <author>
      <name>Dhruv01</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1997826</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736016642"&gt;&lt;STRONG&gt;The Rise of AI in ERP Development&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;SAP has been the most&lt;STRONG&gt; trusted ERP system&lt;/STRONG&gt; for decades in enterprise business, supporting organizations globally with both &lt;STRONG&gt;on-premise and cloud solutions&lt;/STRONG&gt;. As companies have grown and interconnected for business, seamless system integration has become essential to keep processes running smoothly.&lt;BR /&gt;&lt;BR /&gt;Artificial Intelligence (AI) is now transforming the ERP landscape by helping both functional and technical developers, as well as solution architects, work smarter and faster, automate repetitive tasks, and maintain consistency across projects. &lt;STRONG&gt;AI-assisted ERP&lt;/STRONG&gt; is now a reality—something that once seemed like a&lt;STRONG&gt; futuristic concept&lt;/STRONG&gt;. It is reshaping the way &lt;STRONG&gt;SAP solutions are designed, built, and delivered&lt;/STRONG&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1539503137"&gt;&lt;STRONG&gt;The Challenges I Face When Building Complex Integration&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;As an SAP Integration Suite/CPI consultant, I create complex iFlows and complete integrations between SAP and non-SAP systems. However, building &lt;STRONG&gt;complex iFlows&lt;/STRONG&gt; often takes weeks if I do it manually. When creating an iFlow, it’s always the major core components that make it more complicated. Examples include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Complex Structure&lt;/LI&gt;&lt;LI&gt;Message Mapping&lt;/LI&gt;&lt;LI&gt;Value Mapping&lt;/LI&gt;&lt;LI&gt;Groovy Script for intricate, custom logic&lt;/LI&gt;&lt;LI&gt;API Management and API Proxy (Open API Specification)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This process proves time-intensive and prone to inconsistencies, especially for large-scale projects where employees must repeat the same tasks multiple times.&lt;/P&gt;&lt;H2 id="toc-hId-1342989632"&gt;&lt;STRONG&gt;How AI-Assisted ERP Changed the Game for Me &lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;AI use is growing at a considerable speed in all economic sectors, and AI in ERP represents one of the fastest-growing among them. In regard to SAP, we now see &lt;STRONG&gt;SAP AI Core, SAP AI Launchpad, Generative AI Hub,&lt;/STRONG&gt; and SAP’s generative AI co-pilot, &lt;STRONG&gt;Joule&lt;/STRONG&gt;, in most of SAP’s products and services, including:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Build Apps&lt;/LI&gt;&lt;LI&gt;Build Process Automation&lt;/LI&gt;&lt;LI&gt;Build Code&lt;/LI&gt;&lt;LI&gt;Joule Studio&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;SAP Business Suite&lt;/LI&gt;&lt;LI&gt;etc.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;SAP AI is one of the biggest changes on the BTP infrastructure. It allows me to build my own AI pipelines and set my model configurations. The Prompt Manager in SAP Generative AI Hub helps build my custom AI solutions.&lt;/P&gt;&lt;P&gt;Recently, I started working on a product for SAP Integration Suite that accelerates CPI development and integration tasks by 40-50%. I found that if the development of your major core components are &lt;STRONG&gt;automated by AI, it makes&lt;/STRONG&gt; the process faster and more reliable. Instead of starting from scratch, &lt;STRONG&gt;AI analyzes Functional Design Specifications (FDS)&lt;/STRONG&gt; and generates ready-to-use iFlows complete with &lt;STRONG&gt;message mappings, value mappings, Groovy scripts, and OpenAPI specs&lt;/STRONG&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1146476127"&gt;&lt;STRONG&gt;Where Cerebro SASA Fits In&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Cerebro SASA integrates with SAP Integration Suite and shows you how its powerful AI engine generates&lt;STRONG&gt; iFlows directly from FDS&lt;/STRONG&gt;, including all core components and configuration properties. Cerebro SASA can:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Generate Message Mapping and Value Mapping&lt;/LI&gt;&lt;LI&gt;Produce an iFlow structure with configuration properties&lt;/LI&gt;&lt;LI&gt;Set OpenAPI Specifications&lt;/LI&gt;&lt;LI&gt;Reduce development effort and timelines&lt;/LI&gt;&lt;LI&gt;Maintain consistency and accuracy between projects&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With Cerebro SASA, you can start your development with a 40% head start, adding substantial value to your process.&lt;/P&gt;&lt;P&gt;Cerebro SASA is an SAP Certified Solution that also allows you to carry out a migration from MuleSoft to BTP . You can find &lt;A href="https://www.sap.com/products/technology-platform/partners/aifa-labs-llc-aipowered-mulesoft-migration-to-sap-integration-suite.html" target="_self" rel="noopener noreferrer"&gt;Cerebro SASA&lt;/A&gt; on SAP Store and Solution hub. It will migrate your MuleSoft APIs to SAP BTP with an AI-powered approach and help you build a faster, scalable, and complex iFlows.&lt;/P&gt;&lt;H2 id="toc-hId-949962622"&gt;&lt;STRONG&gt;Let’s Talk About What Cerebro SASA Can Do for You&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;AI-assisted ERP alters how we think about SAP development. By automating integration tasks that once took days or even weeks, AI solutions allow developers to perform faster, smarter, and more reliable integrations.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Cerebro SASA&lt;/STRONG&gt; represents one such solution that demonstrates the power of AI in ERP development by helping organizations save time, minimize manual effort, and improve consistency and uniformity between multiple integration projects.&lt;/P&gt;&lt;P&gt;As AI is growing faster then ever, its role in &lt;STRONG&gt;SAP ERP Solutions will only become more vital&lt;/STRONG&gt;, making it an essential part of the future of enterprise software development.&lt;/P&gt;&lt;H2 id="toc-hId-753449117"&gt;&lt;STRONG&gt;Key Benefits of Cerebro SASA&lt;/STRONG&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Seamless Integration with SAP BTP and Sap Integration Suite and helps integration experts by automating iFlows creation directly from FDS, reducing the manual work.&lt;/LI&gt;&lt;LI&gt;Delivers up to a 40-50% time savings, reducing an organization’s cost, promoting innovation, speeding up delivery, and adding value for the &lt;A href="http://customer.it" target="_blank" rel="noopener nofollow noreferrer"&gt;customer.&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Generates mappings files and complex Groovy scripts&lt;/LI&gt;&lt;LI&gt;Automates repetitive work and builds highly scalable architecture&lt;/LI&gt;&lt;LI&gt;Connect with cross functional and technical teams smoothly.&lt;/LI&gt;&lt;LI&gt;Secure you Data by deploying to your private Cloud.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-556935612"&gt;&lt;STRONG&gt;The Future of AI-Assisted ERP in SAP&lt;BR /&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The future of ERP will involve faster integrations and &lt;STRONG&gt;intelligent systems that build themselves while guiding developers to focus on innovation&lt;/STRONG&gt;. AI-assisted ERP represents a major step toward this vision, where technology handles the heavy lifting and experts add creativity and strategy.&lt;BR /&gt;Cerebro SASA embodies this shift by turning complex SAP BTP integrations into an AI-powered, automated process. Beyond saving time and costs, it creates &lt;STRONG&gt;a new standard for how companies design enterprise software: smarter, scalable, and future-ready&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;As AI, tools like Cerebro SASA will help enterprises &lt;STRONG&gt;move from building solutions to co-creating solutions with AI&lt;/STRONG&gt;, defining the next era of ERP development.&lt;/P&gt;&lt;P&gt;Discover the Cerebro SASA on the AIFA Labs and explore how it is revolutionizing AI-assisted SAP ERP. Learn how this innovative platform is evolving to simplify integrations, accelerate development, and empower enterprises to co-create smarter, future-ready solutions with AI.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Let’s connect and discuss &lt;STRONG&gt;AI in SAP ERP and enterprise integrations&lt;/STRONG&gt;&lt;/EM&gt; a little further&lt;EM&gt;. If you have thoughts, questions, or experiences to share, feel free to drop a comment. We’d love to hear your perspective!&lt;BR /&gt;&lt;SPAN&gt;"GenAI Assisted Content"&lt;/SPAN&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;BR /&gt;&lt;/EM&gt;Thankyou&lt;BR /&gt;Dhruv Kumar&lt;BR /&gt;Senior SAP BTP Consultant&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/ai-assisted-erp-transforming-sap-btp-integration-with-faster-smarter-iflow/ba-p/14164130"/>
    <published>2025-08-13T11:01:56.244000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/build-a-web-app-and-connect-to-s-4hana-with-sap-integration-suite/ba-p/14179607</id>
    <title>Build A Web App and Connect to S/4HANA with SAP Integration Suite</title>
    <updated>2025-08-13T12:45:21.973000+02:00</updated>
    <author>
      <name>alexanderroan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/561103</uri>
    </author>
    <content>&lt;P&gt;A big part of the magic behind AI, advanced analytics, and {insert tech buzzword here} is the humble API!&lt;/P&gt;&lt;P&gt;I remember the excitement about service-oriented architecture in the late 1990s and early 2000s. Back when most organisations had 'fat' ERPs with extensive customisation, the idea that we could split things up into different apps and connect in a standardised way was refreshing.&lt;/P&gt;&lt;P&gt;I recently noticed a &lt;A href="https://community.sap.com/t5/sap-codejam/sap-codejam-connecting-systems-and-services-using-sap-integration-suite/ec-p/14110686#M848" target="_self"&gt;SAP CodeJam&lt;/A&gt;&amp;nbsp;on the SAP community events calendar that involved connecting systems to S/4HANA using SAP Integration Suite.&lt;/P&gt;&lt;P&gt;I thought it might be fun to build a web app and see if I could successfully connect it to S/4HANA.&lt;/P&gt;&lt;P&gt;A basic understanding of frontend to enterprise backend via cloud architecture is useful for everyone; business experts, technology experts, and people experts&lt;/P&gt;&lt;P&gt;The article is broken into three parts: an introduction, a step-by-step explanation for generalists, and my build/test notes for anyone working on something similar. The third section includes details on all the test tools, and configuration settings.&lt;/P&gt;&lt;P&gt;A couple of quick disclaimers:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;I'm not an integration expert:&lt;UL&gt;&lt;LI&gt;I don't look at integration suite vs. other solutions&lt;/LI&gt;&lt;LI&gt;I don't cover best practices, typical challenges, good use cases&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;My solution here is likely not optimal:&lt;UL&gt;&lt;LI&gt;It's just a vanilla HTML, CSS, JS frontend&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;---&lt;/P&gt;&lt;H1 id="toc-hId-1608011118"&gt;Part 1: introduction&lt;/H1&gt;&lt;H2 id="toc-hId-1540580332"&gt;From web app to S/4HANA&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300221i6AE07F957A2E6A24/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-1.png" alt="integration-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The plan:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The frontend is a web page to search for data from within S/4HANA&lt;/LI&gt;&lt;LI&gt;The web server handles communication between the frontend and SAP Cloud&lt;/LI&gt;&lt;LI&gt;SAP Integration Suite will route and format the message for S/4HANA&lt;/LI&gt;&lt;LI&gt;S/4HANA is the source of data.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Tools/technology:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Utilise the free trial account for SAP BTP and Integration Suite&lt;/LI&gt;&lt;LI&gt;Build the frontend and web app ourselves&lt;/LI&gt;&lt;LI&gt;We can't access S/4HANA. However, the CodeJam provides a S/4HANA mock server that mimics the behaviour of an API within S/4HANA.&lt;/LI&gt;&lt;LI&gt;If we use a mock system, we will need to run it locally. So, adjusting the architecture.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300223iF83EF9D1F958295D/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-2.png" alt="integration-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This adds SAP Cloud Connector which allows an "on-premise" application to connect with SAP Cloud.&lt;/P&gt;&lt;H2 id="toc-hId-1344066827"&gt;The front end&lt;/H2&gt;&lt;P&gt;The completed app offers a summary view and a detailed view. Here's a short &lt;A href="https://youtu.be/wNgAwEfLyX0" target="_self" rel="nofollow noopener noreferrer"&gt;screen recording&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1276636041"&gt;Summary view&lt;/H3&gt;&lt;P&gt;This is a screenshot from the web browser (firefox).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-3.png" style="width: 986px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300227i15B2BBB969C15471/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-3.png" alt="integration-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The top part of the page has a search form that allows you to search for a business partner. The bottom part of the page shows the results with a selection of key fields in a card style layout.&lt;/P&gt;&lt;P&gt;The mock system we are using allows for four different search possibilities:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Search for a single business partner by number&lt;/LI&gt;&lt;LI&gt;Search for all business partners&lt;/LI&gt;&lt;LI&gt;Search for a single business partner by number, including address details&lt;/LI&gt;&lt;LI&gt;Search for all business partners, including address details.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1080122536"&gt;Detail view&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300230iFE51F5F8AD6D02A5/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-4.png" alt="integration-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The detail view shows the results in a table. This table has a horizontal scroll bar, which can be adjusted to view all the fields. The table includes 'raw' results, so there are some 'technical' entries like `[object Object]` and some blanks, which I think is fine for this mock up stage.&lt;/P&gt;&lt;H3 id="toc-hId-883609031"&gt;Responsive view&lt;/H3&gt;&lt;P&gt;For tablets and mobile, the card view resizes with the browser window.&lt;/P&gt;&lt;P&gt;![the front end - summary view on mobile](/assets/images/blog/integration/integration-5.png)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-5.png" style="width: 364px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300231i01B740227C1E13DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-5.png" alt="Integration-5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I'll come back to how this front end was built after running through the integration flow.&lt;/P&gt;&lt;H2 id="toc-hId-558012807"&gt;S/4HANA&lt;/H2&gt;&lt;P&gt;The value of this flow is being able to design and build a frontend to access real-time, trusted business data from S/4HANA in a standardised way. In a real-world example, our frontend could be an employee portal or supplier portal.&lt;/P&gt;&lt;P&gt;S/4HANA is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP's enterprise software for large organisations. It handles processes such as purchasing, manufacturing, sales, shipping, finance, etc.&lt;/LI&gt;&lt;LI&gt;An evolution from their earlier ERP products (R/1, R/2, R/3, ECC).&lt;/LI&gt;&lt;LI&gt;A complex platform comprising thousands of programs, tables, and customisations used by many large enterprises.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;S/4HANA already comes with a web frontend called Fiori, which includes thousands of apps. However, in this example imagine we are building something for a casual user that does not require the full capability of Fiori. Or, just consider it's for fun.&lt;/P&gt;&lt;P&gt;Further reading on S/4HANA:&lt;/P&gt;&lt;P&gt;[SAP help - S/4HANA](&lt;A href="https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE?locale=en-US&lt;/A&gt;)&lt;/P&gt;&lt;H2 id="toc-hId-361499302"&gt;Business partner&lt;/H2&gt;&lt;P&gt;The mock server simulates one of the business partner APIs for S/4HANA.&lt;/P&gt;&lt;P&gt;A business partner is a reference or master data record that represents a third party that an organisation works with. This includes customers, suppliers, and employees.&lt;/P&gt;&lt;P&gt;Business partner master data is organised by key fields such as "category" and "role".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300232iDF2DB3D934F8EECC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-6.png" alt="Integration-6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;All business partners have general data such as name, address, etc., then they have role-specific data, which may include, but are not limited to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Purchasing data&lt;/LI&gt;&lt;LI&gt;Sales data&lt;/LI&gt;&lt;LI&gt;Accounting data&lt;/LI&gt;&lt;LI&gt;And so on.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;To understand how business partner data is used, consider a typical ERP process like order-to-cash:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300233i882EADCDD4912385/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-7.png" alt="Integration-7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This is a summary of the order to cash process. During sales, deliveries, and billing, information from the business partner master record is utilised.&lt;/P&gt;&lt;P&gt;The business partner master stores long-term stable information about the customer. It's used for both reference and validation during transaction entry.&lt;/P&gt;&lt;P&gt;This ensures there is consistency across transactions over time in terms of how they reference business partners. This is critical for reporting. Consider comparability, aggregation, etc.&lt;/P&gt;&lt;P&gt;Further reading on business partners:&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE/74b0b157c81944ffaac6ebc07245b9dc/45653b5856de0846e10000000a441470.html?locale=en-US&amp;amp;version=LATEST" target="_self" rel="noopener noreferrer"&gt;Help - Business Partner&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-164985797"&gt;S/4HANA Architecture&lt;/H2&gt;&lt;P&gt;The mock server simulates an S/4HANA API. Let's look inside S/4HANA.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300236i8B0B2CC5994D164A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-8.png" alt="Integration-8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Starting from the top right, S/4HANA has two primary ways for users to interact. The traditional SAP graphical user interface (GUI) and the modern Fiori web-based user interface.&lt;/P&gt;&lt;P&gt;I've drawn APIs to the left of these. The APIs allow applications to interact with S/4HANA.&lt;/P&gt;&lt;P&gt;Consider the data model in S/4HANA in two separate parts. The first is the traditional HANA database. This is where master data and transactional data are stored. On top of this is the virtual data model. This consists of core data services views. This is a way to define different sets of data to meet the needs of APIs and Fiori Apps.&lt;/P&gt;&lt;P&gt;In this example, we are using a business partner data API. Behind the scenes, the API sources data from CDS views, which in turn connect to the HANA DB tables.&lt;/P&gt;&lt;P&gt;---&lt;/P&gt;&lt;H1 id="toc-hId--160610427"&gt;Part 2: step by step walkthrough (for everyone)&lt;/H1&gt;&lt;P&gt;In this section, I'll summarise the process and technology involved at each step.&lt;/P&gt;&lt;H2 id="toc-hId-119213144"&gt;Point 1: Web communication&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-map-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300239i27A3BC33FE94D8D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-map-1.png" alt="integration-map-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Building an integration flow between web connected applications relies on protocols and standards for web communication. Let's run through the main concepts.&lt;/P&gt;&lt;H3 id="toc-hId--370703368"&gt;Client/server&lt;/H3&gt;&lt;P&gt;The terms client and server are used to describe the requester and receiver. For example, the web browser on a computer is a client, and google search is a server.&lt;/P&gt;&lt;P&gt;Internet communications use the HTTP protocol.&lt;/P&gt;&lt;P&gt;![HTTP communication](/assets/images/blog/integration/integration-10.png)&lt;/P&gt;&lt;P&gt;Hypertext Transfer Protocol (HTTP) is a standard protocol for communication between clients and web servers. Web pages are written in Hypertext Markup Language (HTML).&lt;/P&gt;&lt;P&gt;The term Uniform Resource Locator (URL) is used to describe an address.&lt;/P&gt;&lt;H3 id="toc-hId--567216873"&gt;The structure of a URL&lt;/H3&gt;&lt;P&gt;URLs have five key parts:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Protocol: `http://`&lt;/LI&gt;&lt;LI&gt;Domain: `&lt;A href="http://www.example.com" target="_blank" rel="noopener nofollow noreferrer"&gt;www.example.com&lt;/A&gt;`&lt;/LI&gt;&lt;LI&gt;Path: `/pages/`&lt;/LI&gt;&lt;LI&gt;Query string: `?id=1&amp;amp;cat=test`&lt;/LI&gt;&lt;LI&gt;Fragment: `#article` (an internal page reference, often not present)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;When it comes to APIs, the query string provides the ability to specify parameters for search and filter. In this case, the query string could include a business partner number.&lt;/P&gt;&lt;H3 id="toc-hId--763730378"&gt;HTTPS&lt;/H3&gt;&lt;P&gt;HTTPS uses the HTTP protocol, but it adds a secure transport layer. HTTPS means the HTTP message is encrypted before transmission.&lt;/P&gt;&lt;P&gt;The only part that isn't encrypted is the domain name.&lt;/P&gt;&lt;H3 id="toc-hId--960243883"&gt;Internet protocol (IP) address&lt;/H3&gt;&lt;P&gt;While URLs are designed to be human-readable. An IP is a numerical label like "192.0.2.1" that identifies a computer or network.&lt;/P&gt;&lt;P&gt;URLs are used for navigation. IPs are used for routing and communication. They identify a specific device on a network (laptop, server, etc.).&lt;/P&gt;&lt;P&gt;An IP address can be used in place of a domain name with HTTP and HTTPS&lt;/P&gt;&lt;P&gt;"&lt;A href="http://192.0.2.1" target="_blank" rel="noopener nofollow noreferrer"&gt;http://192.0.2.1&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;While an IP address represents a computer. The term "port" is used to specific a specific input/output location.&lt;/P&gt;&lt;P&gt;Ports are identified using 4 digits.&lt;/P&gt;&lt;P&gt;"http://{server}:{port}"&lt;BR /&gt;"&lt;A href="http://192.0.2.1:1000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://192.0.2.1:1000&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;A server is often referred to by 'host'&lt;/P&gt;&lt;P&gt;"http://{host}:{port}"&lt;/P&gt;&lt;P&gt;You can access ports on your own computer by using its IP or "localhost"&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:1000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:1000&lt;/A&gt;"&lt;/P&gt;&lt;H3 id="toc-hId--1156757388"&gt;From domain to IP&lt;/H3&gt;&lt;P&gt;The web browser uses a domain lookup service to translate a URL into an IP address.&lt;/P&gt;&lt;P&gt;"&lt;A href="http://www.example.com" target="_blank" rel="noopener nofollow noreferrer"&gt;http://www.example.com&lt;/A&gt;" becomes "&lt;A href="http://192.0.2.1" target="_blank" rel="noopener nofollow noreferrer"&gt;http://192.0.2.1&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;This is called the Domain Name System (DNS). Popular look up services include: Cloudflare, Google DNS, and OpenDNS.&lt;/P&gt;&lt;H3 id="toc-hId--1353270893"&gt;Messages&lt;/H3&gt;&lt;P&gt;The communications themselves can be thought of as messages. They contain a header and a body.&lt;/P&gt;&lt;P&gt;The header includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The URL&lt;/LI&gt;&lt;LI&gt;The method, most commonly GET and POST&lt;/LI&gt;&lt;LI&gt;GET sends a request without a body&lt;/LI&gt;&lt;LI&gt;POST sends a request with a body&lt;/LI&gt;&lt;LI&gt;Additional information on the content type and authorisation&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The body includes detailed content. For example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If you fill in a form on a web page, it would include the form data&lt;/LI&gt;&lt;LI&gt;If a server returns a web page, it would include the web page.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1549784398"&gt;Server Responses&lt;/H3&gt;&lt;P&gt;When a server receives a request, it responds with a status code and a body. Status codes include '200' representing "ok" and '404' representing 'Not Found'.&lt;/P&gt;&lt;P&gt;(404 has definitely reached meme levels of fame!).&lt;/P&gt;&lt;P&gt;The body that's returned depends on the status and the server's purpose.&lt;/P&gt;&lt;H3 id="toc-hId--1746297903"&gt;Real life examples&lt;/H3&gt;&lt;P&gt;Consider visiting the BBC website from a web browser, a simple GET request would return the home page.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300240i98D1E11DB146673D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-1.png" alt="Integration-10-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the other hand, consider logging into the BBC website. In this case, the browser sends the login name and password. Therefore, a POST request is used, and the request includes a body.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300241i9C9D28EC27350605/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-2.png" alt="Integration-10-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1942811408"&gt;Web connectivity and SAP&lt;/H3&gt;&lt;P&gt;Most SAP applications can use HTTPS communication. This is possibly one of the simplest ways we could define "Cloud" strategy.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;S/4HANA Cloud Public and S/4HANA Cloud Private can both utilise HTTPS&lt;/LI&gt;&lt;LI&gt;SAP BTP which includes SAP Integration Suite can utilise HTTPS&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Outside the SAP Cloud, we have systems like S/4HANA On-Premise. This is usually at an SAP customer's data centre or their 3rd party hosting service provider's data centre. On premise systems are usually not directly connected to the public internet. This is where SAP provide Cloud Connector to create a secure tunnel between on-premise and SAP Cloud.&lt;/P&gt;&lt;H3 id="toc-hId--1971141222"&gt;HTTP data transfer standards&lt;/H3&gt;&lt;P&gt;There are further standards as to how data is transferred using HTTP.&lt;/P&gt;&lt;P&gt;There are multiple standards for data transfer with HTTP. One of the earlier and more common standards is REST (Representational State Transfer).&lt;/P&gt;&lt;P&gt;Many SAP APIs utilise OData (Open data transfer protocol).&lt;/P&gt;&lt;H2 id="toc-hId--1874251720"&gt;Point 2: S/4HANA business partner API mock server&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300244i0C0E251EDEC4B8A1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-2.png" alt="Integration-map-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt;&amp;nbsp;Mimic the business partner API of an S/4HANA system.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A simple JavaScript server that can be run locally.&lt;/P&gt;&lt;P&gt;The mock server provided by the SAP community provides a simple way to simulate the design and test of an S/4HANA API.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The mock server mimics the business partner (A2X) API&lt;/LI&gt;&lt;LI&gt;This is one of the S/4HANA APIs (programmed inside S/4HANA)&lt;/LI&gt;&lt;LI&gt;In the case of the mock server, it's a JavaScript server&lt;/LI&gt;&lt;LI&gt;The mock server has limited functionality, it supports:&lt;UL&gt;&lt;LI&gt;Sample data for a few business partners&lt;/LI&gt;&lt;LI&gt;Retrieve all business partners&lt;/LI&gt;&lt;LI&gt;Retrieve a single business partner&lt;/LI&gt;&lt;LI&gt;Include additional address data in the response.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Installing and running the mock server is simple. The instructions are in part 3. When we run it our computer a local address is returned.&lt;/P&gt;&lt;P&gt;On my computer, it runs on "&lt;A href="http://localhost:3005/" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;This is the address for the Business Partner API. Entering this address in the web browser gives the following response:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300247i85F8DBD3A3C0907C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-3.png" alt="Integration-10-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The first item refers to the business partner API. This is the first point in the exercise where we can see the path for the Business Partner API:&lt;/P&gt;&lt;P&gt;"/sap/opu/odata/sap/API_BUSINESS_PARTNER"&lt;/P&gt;&lt;P&gt;The API path is just appended to the host, so:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;Clicking on the link in the browser shows additional information about the API. Note that the only services listed are A_BusinessPartner and A_BusinessPartnerAddress.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300248iD5D9B28D88C78E83/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-4.png" alt="Integration-10-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When building an integration flow, the mix of host names, port names, and paths can quickly become confusing. It's useful to track these as we go.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300249i78F4EB26BF7E6792/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-5.png" alt="Integration-10-5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Further reading on the mock server:&lt;/P&gt;&lt;P&gt;- &lt;A href="https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam" target="_self" rel="nofollow noopener noreferrer"&gt;The CodeJam repo&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://github.com/SAP-archive/cloud-s4-sdk-book/tree/mock-server" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://learning.sap.com/learning-journeys/develop-advanced-extensions-with-sap-cloud-sdk/exercise-setting-up-the-mock-server_c734679d-9ce9-4905-82c3-ed13603a671d" target="_self" rel="noopener noreferrer"&gt;SAP Learning&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--2070765225"&gt;Point 3: Application programming interface (API&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300253i7FD22496BC81C5DF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-3.png" alt="Integration-map-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Provide a standard way to define and operate services for an application that can be consumed by other applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; SAP have a large catalogue of standard APIs that come with S/4HANA.&lt;/P&gt;&lt;H3 id="toc-hId-1734285559"&gt;The Business partner API&lt;/H3&gt;&lt;P&gt;The API that was introduced under the S/4HANA business partner mock server is called 'business partner (A2X)'. It is a SAP standard API that uses the OData V2 standard.&lt;/P&gt;&lt;P&gt;While HTTP is the communication protocol. OData is an open standard related to the data.&lt;/P&gt;&lt;P&gt;When viewing the API details in the web browser, the display was JSON. This is JavaScript Object Notation, which is used in Odata. Point 5. in the flow will show more detail on this API.&lt;/P&gt;&lt;P&gt;Further reading on APIs and Odata:&lt;/P&gt;&lt;P&gt;-&amp;nbsp;&lt;A href="https://spec.openapis.org/oas/latest.html" target="_self" rel="nofollow noopener noreferrer"&gt;Open API spec&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://www.odata.org/" target="_self" rel="nofollow noopener noreferrer"&gt;OData&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1831175061"&gt;Point 4: Business technology platform (BTP)&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300256iC627FB8F7F6F5B78/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-4.png" alt="Integration-map-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Skipping Cloud Connector for now, brings us to BTP. Details from BTP are needed to set up Cloud Connector.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Enable customers to manage and build on SAP applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A set of tools encompassing various capabilities and environments.&lt;/P&gt;&lt;P&gt;SAP offer a free trial for BTP, which can be used to build and test integration flows. Instructions on how to register and set up BTP are included in part 3.&lt;/P&gt;&lt;P&gt;The BTP cockpit is where we can search for and set up different services.&lt;/P&gt;&lt;P&gt;It supports multiple infrastructures and runtimes so you can manage/build various types of applications from traditional SAP ABAP to web apps.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Supports multiple infrastructures/runtimes &amp;amp; languages, including:&lt;UL&gt;&lt;LI&gt;Cloud Foundry: develop new apps/services, multiple languages, runtimes&lt;/LI&gt;&lt;LI&gt;ABAP: extend ABAP based products (S/4HANA)&lt;/LI&gt;&lt;LI&gt;Kyma: Kubernetes to develop/run cloud-native apps&lt;/LI&gt;&lt;LI&gt;Neo: HTML5, Java, and HANA extended apps&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;BTP has multiple regions and infrastructure providers&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Regional deployment&lt;UL&gt;&lt;LI&gt;Provided by SAP or Infrastructure-as-a-Provider (IaaS)&lt;/LI&gt;&lt;LI&gt;AWS, Azure, Google Cloud, Alibaba Cloud&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;The key features of BTP include managing and building:&lt;UL&gt;&lt;LI&gt;Compose business processes&lt;/LI&gt;&lt;LI&gt;Application development and automation&lt;/LI&gt;&lt;LI&gt;Build and extend SAP applications&lt;/LI&gt;&lt;LI&gt;Integrate data&lt;/LI&gt;&lt;LI&gt;Analytics&lt;/LI&gt;&lt;LI&gt;Intelligent technologies&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;SAP Integration Suite utilises the Cloud Foundry environment. After we set up Business Technology Suite and SAP Intelligent Suite, a Cloud Foundry API endpoint will be provided in BTP.&lt;/P&gt;&lt;P&gt;In my case, this is "&lt;A href="https://api.cf.ap21.hana.ondemand.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.cf.ap21.hana.ondemand.com&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300258i04DE1404995C9368/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-11.png" alt="integration-11.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1634661556"&gt;Point 5. Business Accelerator Hub&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300259iB0C161A99F8D04C2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-5.png" alt="Integration-map-5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Provides a central source of information on SAP's APIs&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A web page with API details. Highly integrated with BTP.&lt;/P&gt;&lt;P&gt;Business Accelerator hub is a web resource from SAP. I've drawn it inside BTP as it closely relates to BTP content. It's a central repository for APIs from SAP &amp;amp; selected partners.&lt;/P&gt;&lt;P&gt;&lt;A href="https://api.sap.com/" target="_self" rel="noopener noreferrer"&gt;api.sap.com&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Main features&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Discover, explore, and test APIs&lt;/LI&gt;&lt;LI&gt;Consume integration and workflow content&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The Business Partner (A2X) API that is tested here can be viewed on Business Accelerator Hub.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Login to business accelerator hub&lt;/LI&gt;&lt;LI&gt;Search 'business partner (A2X)'&lt;/LI&gt;&lt;LI&gt;Click on the entry in the results&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300265iA01898E1E22775A1/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-12.png" alt="integration-12.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Some features of business accelerator hub:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Try out the APIs (sandbox environment)&lt;UL&gt;&lt;LI&gt;Useful to view a sample of the response&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;View the API capabilities:&lt;UL&gt;&lt;LI&gt;'API Reference' tab, scroll down to 'Business Partner' and click on it&lt;/LI&gt;&lt;LI&gt;This shows the list of capabilities of the API&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;View the API specification&lt;UL&gt;&lt;LI&gt;'Overview' tab, scroll down to 'API Specification' and click on it&lt;/LI&gt;&lt;LI&gt;Download OpenAPI JSON&lt;/LI&gt;&lt;LI&gt;View in web browser, text editor to see extensive details&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The API hub is a useful resource in terms of discovering and designing potential API use.&lt;/P&gt;&lt;P&gt;From the mock server specification, we know it's limited to only a few capabilities. We can find the path names for each of these on API hub:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-12-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300267iB9991B6EA91D1FC9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-12-1.png" alt="Integration-12-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This confirms the mock server only has a small fraction of the full business partner (A2X) capabilities. This makes sense given how extensive business partner data is in SAP. It's noteworthy that the mock server only supports 'read' activities. We can't test creating or changing a business partner.&lt;/P&gt;&lt;P&gt;The details of each of these requests can be viewed by clicking into them.&lt;/P&gt;&lt;P&gt;While there are three request paths. The address path can be added to the "all business partners" or "single business partner", so there are four possibilities:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;All business partners&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;All business partners with address&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner/to_BusinessPartnerAddress"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Single business partner&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner('{BusinessPartner}')"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Single business partner with address&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerAddress"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These paths describe services of the API and are appended to the base URL.For example:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerAddress" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerAddress&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;The correct terminology for these URLs:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Base URL/host: &lt;A href="http://localhost:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Base path: /sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/LI&gt;&lt;LI&gt;Entity set: /A_BusinessPartner&lt;/LI&gt;&lt;LI&gt;Key Access: ('1234567')&lt;/LI&gt;&lt;LI&gt;Navigation property: /to_BusinessPartnerAddress&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;"('{business partner}')" in the example is a placeholder for a business partner number.&lt;/P&gt;&lt;P&gt;Updating the flow diagram with these details:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-12-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300270i7171352709F09CC3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-12-2.png" alt="Integration-12-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1438148051"&gt;Point 6: SAP Integration Suite&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300271i8FBBDE02F7A3CF64/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-6.png" alt="Integration-map-6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Design and manage communications between applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A service of SAP BTP.&lt;/P&gt;&lt;P&gt;SAP Integration Suite is one of the services available in Business Technology Platform. Therefore, a prerequisite is to register for the BTP free trial.&lt;/P&gt;&lt;P&gt;SAP Integration Suite can then be found under 'Services Marketplace'.&lt;/P&gt;&lt;P&gt;SAP Intelligent suite can be used for Cloud, on-premise, and hybrid scenarios. It includes pre-built, best-practice integration packs&lt;/P&gt;&lt;P&gt;Technically, it's a Java based app, and utilises the Apache Camel framework.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300274iC625747A413A6229/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-13.png" alt="Integration-13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The steps to install and set up are covered in part 3. After the initial set up you can navigate to the application.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-14.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300276i32A7F841634A21EB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-14.png" alt="Integration-14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For this demo/test, the two key menus within Integration Suite are:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Design &amp;gt; Integrations and APIs&lt;/LI&gt;&lt;LI&gt;Monitor &amp;gt; Integrations and APIs&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The design area allows us to create an integration flow which involves:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Specifying source or 'sender' system&lt;/LI&gt;&lt;LI&gt;Specifying target or 'receiver' system&lt;/LI&gt;&lt;LI&gt;Adding flow steps&lt;/LI&gt;&lt;LI&gt;Modify message header&lt;/LI&gt;&lt;LI&gt;Modify message contents&lt;/LI&gt;&lt;LI&gt;Route steps between sender and receiver.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Within design, there is a graphical editor to build the integration flow.&lt;/P&gt;&lt;H3 id="toc-hId-948231539"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300279iBAFE6B3B4B1AE952/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15.png" alt="Integration-15.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-751718034"&gt;Business Partner Integration Flow&lt;/H3&gt;&lt;P&gt;Creating the integration flow involves setting the sender details and designing the required transformations to meet the receiver (API) requirements.&lt;/P&gt;&lt;P&gt;As we work through this keep in mind the API expects one of four paths depending on the search scenario:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-A.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300281i7F82A0BD6569F827/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-A.png" alt="Integration-15-A.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-555204529"&gt;The sender&lt;/H3&gt;&lt;P&gt;The sender represents the address that SAP Integration Suite will listen on. This is the address we send a message to from our upstream app. In this case a web app.&lt;/P&gt;&lt;P&gt;This address is built up in three parts:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;A base which is provided when we deploy the integration flow&lt;/LI&gt;&lt;LI&gt;An 'Address' that we specify in the integration flow&lt;/LI&gt;&lt;LI&gt;Further path details from the web app.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The base of the endpoint is something along the lines of:&lt;/P&gt;&lt;P&gt;https://{trial-account-specific-details}-rt.cfapps.ap21.hana.ondemand.com/http/&lt;/P&gt;&lt;P&gt;For the address name, this demo/test uses the path `/request-business-partners/*` The "`*`" at the end allow us to send requests with additional details that can be utilised in the flow logic.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-2.png" style="width: 813px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300287iEFB652F16F584247/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-2.png" alt="Integration-15-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The web app will send four different types of message to match the four API scenarios, for the demo/test I will use:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;"/api/bp/single"&lt;/LI&gt;&lt;LI&gt;"/api/bp/all"&lt;/LI&gt;&lt;LI&gt;"/api/bp/single/add"&lt;/LI&gt;&lt;LI&gt;"/api/bp/single/all"&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The web app will also include the BP number in the message body.&lt;/P&gt;&lt;P&gt;We don't need to specify these in the Integration Flow as the `*` will allow them all to pass as long as they are preceded by "request-business-partners/"&lt;/P&gt;&lt;P&gt;Adding this information to the mapping table.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-B.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300290i5293141B171F7138/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-B.png" alt="Integration-15-B.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-526874715"&gt;Routing and Transformations&lt;/H3&gt;&lt;P&gt;The integration flow routes and transforms the received messages to meet the API requirements at the receiver. This involves:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Routing of messages from receiver to sender based on their content&lt;/LI&gt;&lt;LI&gt;1:1 relationship for each of the four scenarios&lt;/LI&gt;&lt;LI&gt;Transform the URLs&lt;/LI&gt;&lt;LI&gt;A part of the transformation is extraction of the business partner number from the received message and the placement of it into the API format URL.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-330361210"&gt;The receiver&lt;/H3&gt;&lt;P&gt;The receiver is set up to match the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300292i4EB268C6A7AECB21/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-3.png" alt="Integration-15-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;More detail on the settings of each step are in part 3.&lt;/P&gt;&lt;P&gt;At this point, the integration flow is:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300293i3A47FABC1963733D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-4.png" alt="Integration-15-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;As an alternative, the web app could have been programmed to send messages that already fit the API requirements. However, in some scenarios sender systems may be inflexible or difficult to develop on, making these transformation capabilities in Integration Suite important.&lt;/P&gt;&lt;P&gt;Further reading on SAP Integration Suite:&lt;/P&gt;&lt;P&gt;- &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/what-is-sap-integration-suite?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Help - What is integration suite&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://camel.apache.org/" target="_self" rel="nofollow noopener noreferrer"&gt;Apache Camel&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-427250712"&gt;Point 7. Cloud Connector&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300294iE46B3CEEA68DFE85/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-7.png" alt="Integration-map-7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Allow SAP BTP to communicate to On-Premise SAP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; An application that can provide a secure connection between SAP Cloud and On-Premise applications.&lt;/P&gt;&lt;P&gt;In the previous part, we defined the address details of the S/4HANA business partner mock server as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Base URL/host: &lt;A href="http://localhost:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Base path: /sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/LI&gt;&lt;LI&gt;Entity set: /A_BusinessPartner&lt;/LI&gt;&lt;LI&gt;Key Access: ('1234567')&lt;/LI&gt;&lt;LI&gt;Navigation property: /to_BusinessPartnerAddress&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you paid attention to the screenshot of the receiver configuration in Intelligent Suite, you will note that it was set to&lt;/P&gt;&lt;P&gt;`&lt;A href="http://s4-mock:3006/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('${property.employee_id" target="_blank" rel="noopener nofollow noreferrer"&gt;http://s4-mock:3006/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('${property.employee_id&lt;/A&gt;}')`&lt;/P&gt;&lt;P&gt;The domain was "s4-mock:3006" not "localhost:3005".&lt;/P&gt;&lt;P&gt;This is because we can't connect SAP Cloud directly to an on-premise system. The S/4HANA business partner mock server is a JavaScript server that runs locally on desktop/laptop and is hence considered 'on-premise' or outside the SAP Cloud.&lt;/P&gt;&lt;P&gt;SAP provides "SAP Cloud Connector" to connect on-premise applications to the SAP Cloud.&lt;/P&gt;&lt;P&gt;It's a JavaScript application that can be installed and run locally. Part of the set-up involves entering authentication details from BTP.&lt;/P&gt;&lt;P&gt;After it's set-up, Cloud Connector will accept messages from Integration Suite and forward them to the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;The detailed set-up is covered in part 3.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-16.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300295i06526E809FBCA319/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-16.png" alt="Integration-16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The screenshot above shows the "Cloud to On-Premise" mapping. A virtual host "s4-mock:3006" is mapped to the S4/HANA business partner mock server running locally on "localhost:3005".&lt;/P&gt;&lt;P&gt;Updating the integration flow:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-16-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300296i574EC1489A20E013/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-16-2.png" alt="Integration-16-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-230737207"&gt;Point 8: Web app&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300297i052F2A545DBA8042/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-8.png" alt="Integration-map-8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The web app is an application that uses JavaScript as a programming language. Web browsers have JavaScript engines and can run JavaScript code.&lt;/P&gt;&lt;P&gt;There are two parts to the web app. The frontend and the backend.&lt;/P&gt;&lt;P&gt;Think of JavaScript in two categories. frontend JavaScript and server (backend) JavaScript.&lt;/P&gt;&lt;H3 id="toc-hId--259179305"&gt;Frontend JavaScript&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Runs in the web browser, utilising the browsers JavaScript engine&lt;/LI&gt;&lt;LI&gt;Is oriented towards manipulating web documents (HTML documents), for example:&lt;/LI&gt;&lt;LI&gt;Retrieve fields from HTML (e.g. sign up form)&lt;/LI&gt;&lt;LI&gt;Update HTML (e.g. show results, dynamically add a new page)&lt;/LI&gt;&lt;LI&gt;The JavaScript engine in the browser has limitations.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--455692810"&gt;Server JavaScript&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Installed on a server (can also be run on a desktop/laptop)&lt;/LI&gt;&lt;LI&gt;A popular engine is Node.js&lt;/LI&gt;&lt;LI&gt;Is oriented towards messaging, connectivity, security, authentication&lt;/LI&gt;&lt;LI&gt;Has a lot less limitations than the web browser.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We could try to send a request from the frontend to SAP Integration Suite, but because it comes from a browser, it will likely result in errors.&lt;/P&gt;&lt;P&gt;I did try sending a message to Integration Suite from the browser, but received various CORS errors. CORS, or Cross-Origin Resource Sharing, is a browser security feature that controls whether a web page on one domain can access resources from a different domain.&lt;/P&gt;&lt;P&gt;Therefore, the frontend will send a request to the backend, which will then prepare the message and send it as a request to SAP Integration Suite.&lt;/P&gt;&lt;P&gt;Let's look at the frontend first, then the backend.&lt;/P&gt;&lt;H2 id="toc-hId--358803308"&gt;Point 8.1 Web app: frontend&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Search for and display business partner details on a web page.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A simple web app based on HTML, CSS and JavaScript.&lt;/P&gt;&lt;P&gt;The frontend can be built with plain HTML, CSS and JavaScript.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;HTML: Used to define the content of the web page&lt;/LI&gt;&lt;LI&gt;CSS: Used to apply styles to the web page (layout, colours, font, etc.)&lt;/LI&gt;&lt;LI&gt;Javascript&amp;amp;colon; Use for programming logic, for example:&lt;UL&gt;&lt;LI&gt;Get input field values from HTML&lt;/LI&gt;&lt;LI&gt;Fetch data from the server&lt;/LI&gt;&lt;LI&gt;Restructure data for display&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;HTML, CSS, and JavaScript are written in their own files. They are typically in the same folder.&lt;/P&gt;&lt;P&gt;```&lt;BR /&gt;frontend/&lt;BR /&gt;├── index.html&lt;BR /&gt;├── styles.css&lt;BR /&gt;└── script.js&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;The HTML file includes references to the 'styles.css' and 'script.js' documents. These can all be written in simple text editors, but applications like 'visual studio code' help with syntax highlighting and formatting.&lt;/P&gt;&lt;P&gt;For demo/test these files can simply be kept on a computers hard drive. Or they could be hosted on a static web server like Netlify or GitHub pages.&lt;/P&gt;&lt;H2 id="toc-hId--555316813"&gt;Point 8.2: Web app - HTML&lt;/H2&gt;&lt;P&gt;Web pages are written with HTML, they are hierarchically structured documents where 'tags' are used to denote different types of element which contain content.&lt;/P&gt;&lt;P&gt;As a simple illustration, the following would create a web page with a title, a text input field, a submit button and a space for results.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;header&amp;gt;
&amp;lt;p&amp;gt;This is the page title&amp;lt;/p&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;article&amp;gt;
  &amp;lt;form&amp;gt;
    &amp;lt;label&amp;gt;Enter business partner number
      &amp;lt;input type="text" /&amp;gt;
    &amp;lt;/label&amp;gt;
    &amp;lt;button type="submit"&amp;gt;Submit&amp;lt;/button&amp;gt;
  &amp;lt;/form&amp;gt;
  &amp;lt;div id="js-results"&amp;gt;
    // Results go here
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This would display:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-17.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300300i9BF0AF4B0E0552B9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-17.png" alt="Integration-17.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A simple element such as paragraph is denoted by&lt;UL&gt;&lt;LI&gt;`&amp;lt;p&amp;gt;enter paragraph&amp;lt;/p&amp;gt;`&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;A more complex element, an input field is denoted by&lt;UL&gt;&lt;LI&gt;`&amp;lt;input type="text" /&amp;gt;`&lt;/LI&gt;&lt;LI&gt;In this case, `type` is an attribute set to `text` for text field&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1045233325"&gt;Getting HTML to talk to CSS and JavaScript**&lt;/H3&gt;&lt;P&gt;There are two attributes that allow them to work together:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;"id": for example id="bp-input" (where bp-input is a variable name)&lt;/LI&gt;&lt;LI&gt;"class": for example class="bp-input" (where bp-input is a variable name)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These attributes can be added to HTML elements to allow us to access those elements with CSS and JavaScript. The difference between the two is a single "id" value is unique and should only be used once in an HTML document, while a class can be applied to multiple HTML elements.&lt;/P&gt;&lt;P&gt;The body of the web app frontend is:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;header class="header"&amp;gt;
&amp;lt;div class="header-title"&amp;gt;
&amp;lt;img class="logo" src="assets/team.png"&amp;gt;
&amp;lt;p class="title"&amp;gt;Employee portal: business partner search&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;nav class="nav"&amp;gt;
&amp;lt;a href="/index.html"&amp;gt;Home&amp;lt;/a&amp;gt;
&amp;lt;/nav&amp;gt;
&amp;lt;/header&amp;gt;
&amp;lt;article class="bp-article flow"&amp;gt;
&amp;lt;h2&amp;gt;Search&amp;lt;/h2&amp;gt;
&amp;lt;div class="divider"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;form id="bp-form" class="bp-search"&amp;gt;
&amp;lt;label for="bp-inp-number"&amp;gt;Business partner number:&amp;lt;/label&amp;gt;
&amp;lt;p class="text-small"&amp;gt;(Enter 7 digit number or leave blank to return all)&amp;lt;/p&amp;gt;
&amp;lt;input id="bp-inp-number" class="bp-inp-number" name="bp" type="text" /&amp;gt;
&amp;lt;p id="bp-error" class="bp-error"&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p class="options"&amp;gt;Options:&amp;lt;/p&amp;gt;
&amp;lt;div&amp;gt;
&amp;lt;input id="bp-inp-address" value="add" type="checkbox" /&amp;gt;
&amp;lt;label class="text-small" for="bp-inp-address" name="bp-input-address"&amp;gt;Include address details&amp;lt;/label&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
&amp;lt;input id="bp-inp-tab" value="tab" type="checkbox" /&amp;gt;
&amp;lt;label class="text-small" for="bp-inp-tabulate" name="bp-inp-tabulate"&amp;gt;Show results in table&amp;lt;/label&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;button id="js-inp-sub" type="submit"&amp;gt;Submit&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;h2&amp;gt;Results&amp;lt;/h2&amp;gt;
&amp;lt;div class="divider"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div id="js-bp-results" class="bp-results"&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/article&amp;gt;
&amp;lt;/body&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;It's not very complex. Most of the complexity is in the CSS styling and the JavaScript programming to return the results.&lt;/P&gt;&lt;P&gt;This segregation of content (HTML), styles (CSS), and programming logic (JS) makes working with frontend well structured.&lt;/P&gt;&lt;P&gt;The web app initial HTML includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A header bar with the logo, page name and home link&lt;/LI&gt;&lt;LI&gt;A search section with search field options&lt;UL&gt;&lt;LI&gt;BP number&lt;/LI&gt;&lt;LI&gt;Checkbox to get address&lt;/LI&gt;&lt;LI&gt;Checkbox to show results in detail view&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This is how this looks without styling.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-18.png" style="width: 824px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300306i6242F0F51B915194/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-18.png" alt="integration-18.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The version with styling was shown at the start of the article.&lt;/P&gt;&lt;P&gt;Here is the &lt;A href="https://alexroan.com/assets/documents/integration/frontend-html" target="_self" rel="nofollow noopener noreferrer"&gt;HTML file&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--948343823"&gt;Point 8.3: Web app - CSS&lt;/H2&gt;&lt;P&gt;Cascading style sheets (CSS) are used to apply styles to HTML documents. Consider an HTML document with three lines of text:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;p id="line-one"&amp;gt;This is text line one&amp;lt;/p&amp;gt;
&amp;lt;p class="other-lines"&amp;gt;This is text line two&amp;lt;/p&amp;gt;
&amp;lt;p class="other-lines"&amp;gt;This is text line three&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;These can be styled with CSS as follows:&lt;/P&gt;&lt;pre class="lia-code-sample language-css"&gt;&lt;code&gt;#line-one {
color: red;
font-size: 1.2rem;
}

.other-lines {
color: blue;
text-decoration: underline;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This would show:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-19.png" style="width: 472px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300316iF0420D2F7368485B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-19.png" alt="Integration-19.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The complete CSS for the demo/test web app is lengthy. Around 200 lines. Here is a snippet to get an idea of what it looks like:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-20.png" style="width: 822px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300317i8B8CC471FF9421E6/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-20.png" alt="integration-20.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;CSS is easy to pick up, but challenging to master!&lt;/P&gt;&lt;P&gt;Looking at the class "bp-search". This applies to the area of the HTML document where the search fields are collected. The CSS here does things like orient those search fields in a column "flex-direction:column" and apply a border and a shadow.&lt;/P&gt;&lt;P&gt;This is how our page looks with styling.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300318i0AF0854FE34C5F34/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-21.png" alt="Integration-21.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Here is the full &lt;A href="https://alexroan.com/asssets/documents/integration/frontend-css.css" target="_self" rel="nofollow noopener noreferrer"&gt;CSS file&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--976673637"&gt;Point 8.4: Web app - JavaScript&lt;/H2&gt;&lt;P&gt;Frontend JavaScript is able to retrieve, edit and add elements to the HTML document. Writing the JavaScript is possibly the most challenging part of this demo/test, so I'll just summarise what the code does:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Listen for a click of the 'submit' button&lt;/LI&gt;&lt;LI&gt;Get the value of the form input elements&lt;UL&gt;&lt;LI&gt;The Business partner number&lt;/LI&gt;&lt;LI&gt;The status of the 'include address details' checkbox&lt;/LI&gt;&lt;LI&gt;The status of the 'show results in table' checkbox&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Check the business partner value is valid&lt;UL&gt;&lt;LI&gt;It has to be blank or a 7-digit number&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Create a variable object called 'request' to track the request type&lt;/LI&gt;&lt;LI&gt;The variable includes:&lt;UL&gt;&lt;LI&gt;request URL&lt;/LI&gt;&lt;LI&gt;request method&lt;/LI&gt;&lt;LI&gt;request body&lt;/LI&gt;&lt;LI&gt;(The ability to track multiple values in an Object is a key JS feature)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Based on the input fields, identify the request type &amp;amp; update the 'request' object.&lt;UL&gt;&lt;LI&gt;The combinations are:&lt;UL&gt;&lt;LI&gt;If bp number is blank and get address isn't checked&lt;/LI&gt;&lt;LI&gt;If bp number is blank and get address is checked&lt;/LI&gt;&lt;LI&gt;If bp number is entered and get address isn't checked&lt;/LI&gt;&lt;LI&gt;If bp number is entered and get address is checked.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;At this point, the request object will store a set of values based on the input selections. The values will be one of the four options listed in the earlier tables.&lt;/P&gt;&lt;P&gt;The JavaScript now has what it needs to send a request to SAP Integration Suite. The rest of the JavaScript handles various things:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Use the JavaScript method 'fetch()' to send requests to the server&lt;/LI&gt;&lt;LI&gt;Handle security and authorisation&lt;/LI&gt;&lt;LI&gt;Getting a token if needed&lt;/LI&gt;&lt;LI&gt;Sending a token with requests&lt;/LI&gt;&lt;LI&gt;Handling errors&lt;/LI&gt;&lt;LI&gt;If successful, capturing the returned data&lt;/LI&gt;&lt;LI&gt;Working through the returned data and updating the HTML&lt;/LI&gt;&lt;LI&gt;Creating cards for the summary view&lt;/LI&gt;&lt;LI&gt;Creating a table for the detailed view&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Here is the &lt;A href="https://alexroan.com/assets/documents/integration/frontend-javascript.js" target="_self" rel="nofollow noopener noreferrer"&gt;JavaScript.&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1173187142"&gt;Point 9. Web app: backend server&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300319i957338C0D7C637CE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-9.png" alt="Integration-map-9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Allow a web frontend to communicate with SAP BTP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt;&amp;nbsp;A JavaScript web backend server for message formatting and routing.&lt;/P&gt;&lt;P&gt;The backend server is locally hosted on our computer for this test/demo, but in reality would be on a web server somewhere.&lt;/P&gt;&lt;P&gt;It's written in express, which is a framework on Node.js. It's quite different from frontend JavaScript.&lt;/P&gt;&lt;P&gt;The logic of the backend is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Listen for communication from the frontend&lt;/LI&gt;&lt;LI&gt;If a message is received:&lt;UL&gt;&lt;LI&gt;Do some manipulation of the message related to authorisations&lt;/LI&gt;&lt;LI&gt;Using fetch() try sending a request to SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;More authorisation/security handling&lt;/LI&gt;&lt;LI&gt;If successful, return the response back to the browser&lt;/LI&gt;&lt;LI&gt;If unsuccessful, log and return the error.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Here is the backend &lt;A href="https://alexroan.com/assets/documents/integration/backend-javascript.js" target="_self" rel="nofollow noopener noreferrer"&gt;JavaScript code&lt;/A&gt;. This needs to be set up as part of a Node.js server.&lt;/P&gt;&lt;P&gt;The JavaScript server is a bit more complex than the frontend. The server folder contains:&lt;/P&gt;&lt;P&gt;```&lt;BR /&gt;web-app-server/&lt;BR /&gt;├── node_modules/ # created by npm install&lt;BR /&gt;├── package-lock.json # created/updated by npm install&lt;BR /&gt;├── package.json # you write this (or generate with `npm init`)&lt;BR /&gt;└── server.js # your server code&lt;BR /&gt;```&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;server.js contains the actual JavaScript code for the server.&lt;/LI&gt;&lt;LI&gt;package.json defines project settings, dependencies, and scripts.&lt;/LI&gt;&lt;LI&gt;node_modules/ and package-lock.json are automatically generated when dependencies are installed using npm install.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The port can be specified in 'server.js'. I choose port 5000.&lt;/P&gt;&lt;P&gt;This means the server will run on '&lt;A href="http://localhost:5000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:5000&lt;/A&gt;'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-24.png" style="width: 650px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300322i6AC5E5AE7259389E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-24.png" alt="Integration-24.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After writing package.json and server.js, the following steps are required in terminal to initialise the server, install express, and then start the server.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;cd web-app-server&lt;/LI&gt;&lt;LI&gt;npm init -y&lt;/LI&gt;&lt;LI&gt;npm install express&lt;/LI&gt;&lt;LI&gt;node server.js&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We can now update the flow diagram with the details for the frontend.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-25.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300323iD986EC04D7C226DD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-25.png" alt="Integration-25.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1369700647"&gt;One flow, many messages&lt;/H2&gt;&lt;P&gt;Looking at the diagram, a click on the search button triggers a message that passes through four stages:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;From the frontend (browser) to the backend web server&lt;/LI&gt;&lt;LI&gt;From the web server to SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;From Integration Suite to Cloud Connector&lt;/LI&gt;&lt;LI&gt;From Cloud Connector to the S/4HANA system&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;JavaScript doesn’t normally “wait” for things to happen — it’s designed to keep running while other operations (like network requests) complete in the background.&lt;/P&gt;&lt;P&gt;However, the fetch() function is asynchronous, which means it starts a request and immediately returns a kind of “promise” — a placeholder that will eventually be resolved when the response comes back (or if it fails).&lt;/P&gt;&lt;P&gt;When testing this flow, there are multiple layers where errors can occur:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The browser console (frontend logs)&lt;/LI&gt;&lt;LI&gt;The backend server console (Node.js logs)&lt;/LI&gt;&lt;LI&gt;Integration Suite’s monitoring tools&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The message can fail at any step, and it sometimes takes a bit of detective work to figure out where it failed and why.&lt;/P&gt;&lt;P&gt;If everything works, and S/4HANA returns a successful response (status code 200), that response flows automatically back through the same chain — each layer staying in a “waiting” state until the result is passed back to the frontend and displayed to the user.&lt;/P&gt;&lt;P&gt;Don't worry if it's not 100% clear, it took me a while to figure this out.&lt;/P&gt;&lt;H2 id="toc-hId--1566214152"&gt;Conclusions to the walkthrough&lt;/H2&gt;&lt;P&gt;It's really fun to build your own frontend and connect it to a real enterprise grade system.&lt;/P&gt;&lt;P&gt;A few important considerations:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Precision is needed with the integration configuration:&lt;UL&gt;&lt;LI&gt;Host names, types, routing, transformation are all sensitive to mistakes&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;The JavaScript is a little complex, but it is all well established&lt;/LI&gt;&lt;LI&gt;A JavaScript and Node.js course and some googling could enable anyone to create this.&lt;/LI&gt;&lt;LI&gt;Using the S/4HANA business partner mock server is a quick and fun way to test out a potential integration with S/4HANA. However, it is just a mock server with limited features and a build and test with a real S/4HANA system would be required.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;However, it's easily achievable with a little study and practice and it opens the possibility to develop a wide range of things.&lt;/P&gt;&lt;P&gt;The APIs brings together:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Real-time fast access to a wide range of business data thanks to S/4HANA.&lt;BR /&gt;Extreme flexibility on the frontend side thanks to modern HTML, CSS and JS.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This integration could have been much simpler by just having the frontend deliver a URL in the format required for the API. We don't really need the complexity of Integration Suite for this.&lt;/P&gt;&lt;P&gt;---&lt;/P&gt;&lt;H1 id="toc-hId--1469324650"&gt;Part 3: building the integration flow (for IT people)&lt;/H1&gt;&lt;P&gt;In this section I'll share my rough notes from the process of building this front end and integration flow. This is a copy and paste of my original notes in markdown so I apologise for the lack of formatting. I do list all the required tools which may be helpful for people trying this out.&lt;/P&gt;&lt;P&gt;Before starting, I'd recommend working through the CodeJam:&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/sap-codejam/sap-codejam-connecting-systems-and-services-using-sap-integration-suite/ec-p/14110686#M848" target="_self"&gt;SAP CodeJam&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;The instructions are on a &lt;A href="https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub repository.&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--1959241162"&gt;Information sources &amp;amp; tools&lt;/H2&gt;&lt;H3 id="toc-hId-1845809622"&gt;SAP Accounts: BTP and Integration Suite&lt;/H3&gt;&lt;P&gt;A trial account for business technology platform is required.&lt;/P&gt;&lt;P&gt;[BTP trial](&lt;A href="https://developers.sap.com/tutorials/hcp-create-trial-account.html" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/tutorials/hcp-create-trial-account.html&lt;/A&gt;)&lt;/P&gt;&lt;P&gt;And a a trial for Integration Suite&lt;/P&gt;&lt;P&gt;[Integration Suite trial](&lt;A href="https://developers.sap.com/tutorials/cp-starter-isuite-onboard-subscribe.html#f55ec71c-2853-4b83-8092-4e3031f8d6e6" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/tutorials/cp-starter-isuite-onboard-subscribe.html#f55ec71c-2853-4b83-8092-4e3031f8d6e6&lt;/A&gt;)&lt;/P&gt;&lt;P&gt;See the pre-requisites [pre-requisites](&lt;A href="https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam/blob/main/prerequisites.md" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam/blob/main/prerequisites.md&lt;/A&gt;) document in the CodeJam repository.&lt;/P&gt;&lt;H3 id="toc-hId-1649296117"&gt;Containerisation &amp;amp; Docker&lt;/H3&gt;&lt;P&gt;When running the S/4HANA business partner mock server locally, one option is to install the necessary JavaScript runtime environment and run it manually. Another option is to run it inside a container.&lt;/P&gt;&lt;P&gt;Containers are a key concept in Cloud architecture.&lt;/P&gt;&lt;P&gt;A container packages an app and all it's dependencies together so that it can run independently of the underlying computer (server, laptop, etc.).&lt;/P&gt;&lt;P&gt;This is a key concept for Cloud as it allows applications to run on different hardware and operating systems with minimal set up effort.&lt;/P&gt;&lt;P&gt;Docker is a platform to build and manage containers.&lt;/P&gt;&lt;P&gt;Docker and container features:&lt;/P&gt;&lt;P&gt;- Package an app and all it's dependencies&lt;BR /&gt;- A container is like a lightweight virtual machine&lt;BR /&gt;- Key terms&lt;BR /&gt;- image: blueprint (.zip) containing app, dependencies, and OS&lt;BR /&gt;- container: running instance of an image&lt;BR /&gt;- dockerfile: instructions to build image&lt;BR /&gt;- volume: how to persist data outside the container&lt;BR /&gt;- port mapping: expose internal port to machine (e.g. 8080 to 3001).&lt;/P&gt;&lt;P&gt;I'll come back to this in the section on running the BP mock server.&lt;/P&gt;&lt;H3 id="toc-hId-1452782612"&gt;Data basics&lt;/H3&gt;&lt;P&gt;The following data standards/formats are used in this exercise:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;JSON (JavaScript Object Notation)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- A lightweight, human-readable format for storing and sharing structured data&lt;BR /&gt;- Looks like nested key-value pairs (like a shopping list with categories)&lt;BR /&gt;- Commonly used in web apps and APIs for sending data between systems.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;P&gt;```JSON&lt;BR /&gt;{&lt;BR /&gt;"employee_id": "1234567",&lt;BR /&gt;"employee_name": "Alexander"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;XPATH&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- A query language used to navigate and extract data from XML or HTML documents&lt;BR /&gt;- Lets you point to specific elements using a path-like syntax&lt;BR /&gt;- Example: find the third paragraph inside a section&lt;BR /&gt;- Used in tools like web scrapers and automation scripts.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;P&gt;```XPATH&lt;BR /&gt;//title[contains(text(), 'Programming')]&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;XML (eXtensible Markup Language)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- A flexible, tag-based format for representing structured data&lt;BR /&gt;- Similar to HTML in appearance&lt;BR /&gt;- But used for data storage and exchange, not page display.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;P&gt;```XML&lt;BR /&gt;&amp;lt;book id="bk01"&amp;gt;&lt;BR /&gt;&amp;lt;author&amp;gt;Roan, Alexander&amp;lt;/author&amp;gt;&lt;BR /&gt;&amp;lt;title&amp;gt;Front end to S/4HANA&amp;lt;/title&amp;gt;&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;HTML (HyperText Markup Language)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- The standard language for building web pages and displaying content in browsers&lt;BR /&gt;- Uses tags to define elements like headings, paragraphs, links, and images&lt;BR /&gt;- Focused on structure and layout, not data exchange.&lt;/P&gt;&lt;H3 id="toc-hId-1256269107"&gt;Terminal&lt;/H3&gt;&lt;P&gt;I worked through this demo/test on Mac so I used Terminal, which is the Mac default command line interface (CLI).&lt;/P&gt;&lt;P&gt;The CLI is necessary for activities such as setting up and starting servers or working with docker containers.&lt;/P&gt;&lt;P&gt;Terminal basics&lt;/P&gt;&lt;P&gt;- Open a folder `cd &amp;lt;folder name&amp;gt;` (change directory)&lt;BR /&gt;- `cd` on it's own will go to the home directory&lt;BR /&gt;- (Note that `~` represents home directory in terminal)&lt;BR /&gt;- `cd ..` will go up a folder&lt;BR /&gt;- List folders `ls` (list files in the current directory)&lt;BR /&gt;- Open a file `open &amp;lt;file name&amp;gt;` (open a file)&lt;BR /&gt;- Quit sub-screen and return to terminal `q`&lt;BR /&gt;- Stop a running process hold control and c&lt;BR /&gt;- Clear terminal `clear`&lt;/P&gt;&lt;P&gt;To run JavaScript servers, JavaScript runtime is required. It's easier to install and manage things like this using a package manager in Terminal. Homebrew is a popular package manager for Mac.&lt;/P&gt;&lt;P&gt;Homebrew&lt;/P&gt;&lt;P&gt;- A package manager for Mac&lt;BR /&gt;- To install homebrew homebrew:&lt;BR /&gt;- Launch terminal (launchpad &amp;gt; other &amp;gt; terminal)&lt;BR /&gt;- Visit [Homebrew](&lt;A href="https://brew.sh/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://brew.sh/&lt;/A&gt;) in your web browser&lt;BR /&gt;- Copy the installation command&lt;BR /&gt;- Paste it into terminal press enter.&lt;/P&gt;&lt;H3 id="toc-hId-1227939293"&gt;Java/JavaScript&lt;/H3&gt;&lt;P&gt;To complete the demo/test a few different JavaScript things are needed.&lt;/P&gt;&lt;P&gt;Node.js&lt;/P&gt;&lt;P&gt;- This is a JavaScript that can be installed locally to create and run web-servers and web applications&lt;BR /&gt;- Install using Homebrew&lt;BR /&gt;- In terminal, enter: `brew install node`&lt;BR /&gt;- Test the installation of Node.js&lt;BR /&gt;- In terminal, enter: `node -v`, it should return the node version number.&lt;/P&gt;&lt;P&gt;NPM&lt;/P&gt;&lt;P&gt;- NPM is the node package manager&lt;BR /&gt;- It's installed with Node.js&lt;BR /&gt;- It's used to run a server&lt;BR /&gt;- Install it in any directory a Node.js server sits in&lt;BR /&gt;- To check the installation of NPM&lt;BR /&gt;- In terminal, enter: `npm -v`, it should return the npm version number&lt;/P&gt;&lt;P&gt;Java development kit (JDK)&lt;/P&gt;&lt;P&gt;- Cloud Connector is a more complex application and requires JDK&lt;BR /&gt;- More notes in the Cloud Connector section.&lt;/P&gt;&lt;H3 id="toc-hId-1031425788"&gt;API client (Bruno/Postman)&lt;/H3&gt;&lt;P&gt;The CodeJam utilised [Bruno](&lt;A href="https://www.usebruno.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.usebruno.com/&lt;/A&gt;) for API testing.&lt;/P&gt;&lt;P&gt;For the CodeJam a folder of pre-configured settings for Bruno is provided. However I'd suggest to start experimenting without the pre-configuration to build a solid understanding of the basics.&lt;/P&gt;&lt;P&gt;I'll include more notes in later sections.&lt;/P&gt;&lt;H2 id="toc-hId-1128315290"&gt;Building and testing an integration flow&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-638398778"&gt;Set up the S/4HANA business partner mock server&lt;/H3&gt;&lt;P&gt;Start by setting up the S/4HANA business partner mock server&lt;/P&gt;&lt;P&gt;- Download the mock server from [GitHub](&lt;A href="https://github.com/SAP-archive/cloud-s4-sdk-book/tree/mock-server" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-archive/cloud-s4-sdk-book/tree/mock-server&lt;/A&gt;)&lt;BR /&gt;- Scroll down to the readme&lt;BR /&gt;- Either download the archive linked under 'How to run this server'&lt;BR /&gt;- Or if using GitHub clone the repository and checked the branch 'mock-server'&lt;BR /&gt;- Move it to a convenient folder of your choice&lt;BR /&gt;- I set it a `users/&amp;lt;username&amp;gt;/projects/integration/cloud-s4-sdk-book`&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-441885273"&gt;Run the server: option 1: use NPM&lt;/H3&gt;&lt;P&gt;Node.js and the node package manager (NPM) can be used to run the server directly on a computer.&lt;/P&gt;&lt;P&gt;- Open terminal&lt;BR /&gt;- Navigate to `users/&amp;lt;username&amp;gt;/projects/integration/cloud-s4-sdk-book`&lt;BR /&gt;- (or wherever you saved the folder)&lt;BR /&gt;- Enter: `npm install` (install node package manager in the folder)&lt;BR /&gt;- Enter: `npm start` (start the server)&lt;BR /&gt;- This should return something like:&lt;/P&gt;&lt;P&gt;```shell&lt;BR /&gt;&amp;gt; bupa-mock-odata@1.0.0 start&lt;BR /&gt;&amp;gt; node server.js&lt;BR /&gt;Mock server started on port 3000 after 1 ms, running - stop with CTRL+C (or CMD+C)...&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;Terminal tells us which port the server is running on. Port "3000" is accesible in the browser or an API client via "&lt;A href="http://localhost:3000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3000&lt;/A&gt;".&lt;/P&gt;&lt;P&gt;To stop the server in terminal use `ctrl+c`.&lt;/P&gt;&lt;P&gt;For the curious, you can look at the files that make up the mock server in the above folder. Check out:&lt;/P&gt;&lt;P&gt;- server.js&lt;BR /&gt;- This includes the JavaScript code for the server&lt;BR /&gt;- The code references other files such as app.js&lt;BR /&gt;- package.json&lt;BR /&gt;- This is like a configuration file for a node.js server&lt;BR /&gt;- business partner &amp;gt; business-partner-data.json&lt;BR /&gt;- This contains the demo test business partner data.&lt;/P&gt;&lt;P&gt;Theoretically you could use this Node.js server as a template to simulate other SAP Odata APIs with some adjustments to these files.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-245371768"&gt;Run the server: option 2: use Docker&lt;/H3&gt;&lt;P&gt;The mock server can also be run as a Docker container. This is a little more convenient as after the first run we can stop and start it from the Docker desktop app.&lt;/P&gt;&lt;P&gt;Note the server already has a Dockerfile, so it's already set up to run as a container.&lt;/P&gt;&lt;P&gt;If we run something inside a docker container we need to interact with it via ports on the container. The application is really running contained inside a container. When we run a docker container we provide a mapping between a local port on the computer and the container port. We can then access the docker application via this mapping.&lt;/P&gt;&lt;P&gt;To run as a Docker container:&lt;/P&gt;&lt;P&gt;- Launch the docker app&lt;BR /&gt;- Open terminal&lt;BR /&gt;- Enter `docker run -p 3005:8080 bp-mock-server`&lt;BR /&gt;- 3005 is the local port&lt;BR /&gt;- 8080 is the docker container port&lt;BR /&gt;- Local port can be any free port on your computer. I choose 3005&lt;BR /&gt;- The container port is 8080&lt;BR /&gt;- View the status of the container in the Docker app&lt;BR /&gt;- Use the browser to check `http//localhost:3005`&lt;/P&gt;&lt;P&gt;Note if there wasn't already a dockerfile we would need to create one and build the app before running it.&lt;/P&gt;&lt;P&gt;**A simple docker demo**&lt;/P&gt;&lt;P&gt;This was my first time using docker, so I experimented by creating a simple "Hello, World!" style server from scratch. Here it is if you want to try:&lt;/P&gt;&lt;P&gt;- Create a JS file "index.js"&lt;BR /&gt;- Add `console.log("hello from docker");`&lt;BR /&gt;- This just prints text to the console (Terminal)&lt;BR /&gt;- Create a package file "package.json"&lt;BR /&gt;- Add the following JSON to "package.json"&lt;/P&gt;&lt;P&gt;```json&lt;BR /&gt;{&lt;BR /&gt;"name": "hello-docker",&lt;BR /&gt;"version": "1.0.0",&lt;BR /&gt;"main": "index.js",&lt;BR /&gt;"scripts": {&lt;BR /&gt;"start": "node index.js"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;- Create a dockerfile "dockerfile"&lt;BR /&gt;- Add the following to "dockerfile"&lt;/P&gt;&lt;P&gt;```Dockerfile&lt;BR /&gt;FROM node:18&lt;/P&gt;&lt;P&gt;WORKDIR /usr/src/app&lt;/P&gt;&lt;P&gt;COPY package*.json ./&lt;BR /&gt;RUN npm install&lt;/P&gt;&lt;P&gt;COPY . .&lt;/P&gt;&lt;P&gt;CMD ["npm", "start"]&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;You can see Docker uses NPM, in the same way we would with a manual run, but it's installing and running NPM inside the container, not on the computer.&lt;/P&gt;&lt;P&gt;To build and run:&lt;/P&gt;&lt;P&gt;- Build docker container `docker build -t hello-docker .`&lt;BR /&gt;- Run docker container `docker run hello-docker`&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-342261270"&gt;Testing with the web browser&lt;/H2&gt;&lt;P&gt;The simplest way to test the API is running locally is to put the local address in the web browser.&lt;/P&gt;&lt;P&gt;- For NPM it was "http//localhost:3000"&lt;BR /&gt;- For docker image it was "http//localhost:3005"&lt;/P&gt;&lt;P&gt;The main domain should return the API details including the links such as:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3000/sap/opu/odata/sap/API_BUSINESS_PARTNER" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3000/sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/A&gt;"&lt;BR /&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;To access the service to return the general data of all business partners we add A_BusinessPartner&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;In the browser, this should return a JSON document containing the list of business partners.&lt;/P&gt;&lt;P&gt;We can pick a business partner number from the list and use it with the path to select a specific business partner:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('1003764" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('1003764&lt;/A&gt;')"&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-145747765"&gt;Testing with an API client (Bruno)&lt;/H2&gt;&lt;P&gt;Rather than just using the web browser to check the API an API client can be used, this has a few benefits:&lt;/P&gt;&lt;P&gt;- We can build the URLs through a selection of 'input fields'&lt;BR /&gt;- We can save different requests for easy and quick re-testing&lt;BR /&gt;- We can pass data in the request body&lt;/P&gt;&lt;P&gt;To test with Bruno:&lt;/P&gt;&lt;P&gt;- Launch Bruno&lt;BR /&gt;- Use the '...' menu to create a collection&lt;BR /&gt;- Name it 'bp-mock'&lt;BR /&gt;- Specify a location. I used "users/{username}/projects/integration"&lt;/P&gt;&lt;P&gt;Create a request for all business partners&lt;/P&gt;&lt;P&gt;- Use the '...' menu next to bp-mock and select 'new request'&lt;BR /&gt;- Enter request name 'All business partners'&lt;BR /&gt;- Under URL select 'GET' and enter the URL that returns all business partners&lt;BR /&gt;- `&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner&lt;/A&gt;`&lt;/P&gt;&lt;P&gt;Run a request&lt;/P&gt;&lt;P&gt;- Look to the right of the 'GET' line on the main page and click the '-&amp;gt;' to run&lt;BR /&gt;- The right panel will show the JSON response&lt;BR /&gt;- The same response as shown earlier in the web browser.&lt;/P&gt;&lt;P&gt;Create a request for a single business partner (1003765)&lt;/P&gt;&lt;P&gt;- Use the '...' menu next to bp-mock and select 'new request'&lt;BR /&gt;- Enter request name 'Specific business partners'&lt;BR /&gt;- Enter the same URL details as above.&lt;BR /&gt;- In the 'params' tab click '+ param' and enter&lt;BR /&gt;- Name: `&amp;amp;filter`&lt;BR /&gt;- Path: 'BusinessPartner eq '1003766'&lt;BR /&gt;- Run the request. A single business partner should be returned.&lt;/P&gt;&lt;P&gt;Note as the params are entered the URL dynamically updates.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Basics on OData API URLs&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- The base for the API is "/API_Business_Partner"&lt;BR /&gt;- A service of the API is then appended "/A_BusinessPartner"&lt;BR /&gt;- Queries can then by added, OData queries include:&lt;BR /&gt;- Filtering: `/A_BusinessPartner?$filter=Name eq 'Max'`&lt;BR /&gt;- Selecting fields: `/A_BusinessPartner?$select=Name,City`&lt;BR /&gt;- Pagination: `/A_BusinessPartner?$top=5&amp;amp;$skip=10`&lt;BR /&gt;- Accessing nested data: `/A_BusinessPartner?$expand=Address`&lt;BR /&gt;- When working with OData:&lt;BR /&gt;- Field names are case sensitive&lt;BR /&gt;- String values in single quotes&lt;/P&gt;&lt;P&gt;Keep in mind the S/4HANA mock business partner server only includes limited functionality. The above filters and selects won't work.&lt;/P&gt;&lt;H3 id="toc-hId--344168747"&gt;Java SDK for SAP Cloud Connector&lt;/H3&gt;&lt;P&gt;The next step is to set up SAP Cloud Connector&lt;/P&gt;&lt;P&gt;Recall Cloud Connector will provide a secure tunnel allowing SAP Cloud to talk to the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;Cloud Connector requires a full Java Development Kit (JDK).&lt;/P&gt;&lt;P&gt;- You can use "javac -version" in terminal to check if you already have JDK&lt;BR /&gt;- There is a SAP Help page for [Cloud Connector](&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector?locale=en-US&lt;/A&gt;)&lt;BR /&gt;- Check the [prerequisites](&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/prerequisites?locale=en-US#jdks" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/prerequisites?locale=en-US#jdks&lt;/A&gt;) section, it lists the JDK options&lt;BR /&gt;- I choose SAP machine 21 JDK&lt;BR /&gt;- You can download this from [GitHub](&lt;A href="https://sap.github.io/SapMachine/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sap.github.io/SapMachine/&lt;/A&gt;)&lt;BR /&gt;- I have a dev folder for items like this in my home folder&lt;BR /&gt;- "Users/{username}/dev"&lt;BR /&gt;- Use Homebrew to install&lt;BR /&gt;- Open terminal and enter "brew install openjdk@21"&lt;/P&gt;&lt;P&gt;It's likely you may run into version, compatibility, authorisation issues. These are all very common and a web search should help.&lt;/P&gt;&lt;H3 id="toc-hId--540682252"&gt;Install Cloud Connect&lt;/H3&gt;&lt;P&gt;Next install Cloud Connector.&lt;/P&gt;&lt;P&gt;Cloud connector is listed under the SAP development tools page under [Cloud](&lt;A href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="noopener nofollow noreferrer"&gt;https://tools.hana.ondemand.com/#cloud&lt;/A&gt;).&lt;/P&gt;&lt;P&gt;- Download the cloud connector file for your OS&lt;BR /&gt;- My Mac is Apple Silicon so I chose 'sapcc-2.18.1.2-macosx-aarch64.tar.gz'&lt;BR /&gt;- Unzip and move it to a folder of your choice&lt;BR /&gt;- Navigate inside the downloaded folder in terminal&lt;BR /&gt;- Check contents with 'ls', you should see a 'go.sh' file&lt;BR /&gt;- Enter: './go.sh' this will run Cloud Connector&lt;BR /&gt;- Cloud connector should now be running, note the address in the terminal log&lt;BR /&gt;- Login with default account: 'Administrator' and password: 'manage'&lt;BR /&gt;- Change password&lt;BR /&gt;- Keep a note of the account and password.&lt;/P&gt;&lt;P&gt;I received authorisation issues on the first attempt to run it:&lt;/P&gt;&lt;P&gt;- Click through them, then goto apple &amp;gt; settings &amp;gt; privacy&amp;amp;security&lt;BR /&gt;- Scroll down to security and click 'allow anyway'&lt;BR /&gt;- Try: './go.sh' again.&lt;/P&gt;&lt;H3 id="toc-hId--569012066"&gt;Install and set up SAP Integration Suite&lt;/H3&gt;&lt;P&gt;To continue from here SAP Integration has to be installed and active as per the earlier instructions.&lt;/P&gt;&lt;H3 id="toc-hId--765525571"&gt;Connect SAP Cloud Connector to SAP Integration Suite&lt;/H3&gt;&lt;P&gt;As Cloud Connector bridges between SAP Cloud and the S/4HANA business partner mock server we need to set it up to connect to SAP Cloud. We get the security/authentication data to do this from our SAP BTP trial account.&lt;/P&gt;&lt;P&gt;- After logging into Cloud Connector click '+Add Subaccount'&lt;BR /&gt;- Hit 'next' to skip the HTTPS settings&lt;BR /&gt;- Select 'Configure using authentication data'&lt;BR /&gt;- Select 'Add subaccount authentication data from file '&lt;BR /&gt;- In your browser got to your SAP BTP trial homepage&lt;BR /&gt;- Click on your subaccount&lt;BR /&gt;- On the left menu expand Connectivity and select Cloud Connectors&lt;BR /&gt;- Click on 'download authentication data'&lt;BR /&gt;- Return to Cloud Connector&lt;BR /&gt;- Click browse and select the downloaded file 'authentication.data'&lt;BR /&gt;- Click next&lt;BR /&gt;- Leave location ID blank&lt;BR /&gt;- (This would be relevant if there were multiple Cloud Connectors)&lt;BR /&gt;- Click finish.&lt;/P&gt;&lt;P&gt;Double check the settings in the subaccount overview:&lt;/P&gt;&lt;P&gt;- BTP trial region = Cloud Connector region&lt;BR /&gt;- BTP Subaccount ID = Cloud Connector Subaccount&lt;BR /&gt;- The region host in Cloud Connector = Cloud Foundry API Endpoint in BTP.&lt;/P&gt;&lt;H3 id="toc-hId--962039076"&gt;Cloud Connector to Mock BP Server&lt;/H3&gt;&lt;P&gt;There's no security on S/4HANA business partner mock server so it is simply a matter of adding the address.&lt;/P&gt;&lt;P&gt;- In Cloud Connector, on the left sidebar click 'Cloud to On-Premise'&lt;BR /&gt;- To the right of 'Mapping Virtual to Internal Systems' click `+`&lt;BR /&gt;- Select back-end, enter: "Non-SAP system", click 'next'&lt;BR /&gt;- Select protocol: "HTTP", click 'next'&lt;BR /&gt;- For internal host enter "localhost"&lt;BR /&gt;- For internal port enter: "3005"&lt;BR /&gt;- For virtual host: "s4-mock"&lt;BR /&gt;- For virtual Port: "3006"&lt;BR /&gt;- Uncheck allow principal propagation&lt;BR /&gt;- Click through to finish.&lt;/P&gt;&lt;P&gt;Replace the internal port name with the one your mock server is running on locally. You are free to choose the virtual host and port.&lt;/P&gt;&lt;P&gt;It's critical to select "Non-SAP system" and HTTP, not HTTPS.&lt;/P&gt;&lt;P&gt;A new entry will appear under 'Mapping Virtual to Internal Systems'&lt;/P&gt;&lt;P&gt;- Make sure your mock bp server is still running on the host and IP you entered&lt;BR /&gt;- From the icons on the right, click on 'check availability..'&lt;BR /&gt;- You should see status 'reachable'&lt;/P&gt;&lt;P&gt;At this stage `&lt;A href="https://localhost:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;https://localhost:3005&lt;/A&gt;` is now mapped to `&lt;A href="https://s4-mock:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;https://s4-mock:3005&lt;/A&gt;` in the SAP Cloud.&lt;/P&gt;&lt;P&gt;You can also check in integration suite to see if Cloud Connector is connected.&lt;/P&gt;&lt;P&gt;- In the left hand menu select connectivity &amp;gt; cloud connectors.&lt;/P&gt;&lt;P&gt;Errors at this stage are likely related to&lt;/P&gt;&lt;P&gt;- Mistakes in the host name, port name, or system type&lt;BR /&gt;- The mock server or cloud connector is not running.&lt;/P&gt;&lt;H3 id="toc-hId--1158552581"&gt;Design integration flow&lt;/H3&gt;&lt;H4 id="toc-hId--1648469093"&gt;Create an integration flow&lt;/H4&gt;&lt;P&gt;- Login to BTP trial home&lt;BR /&gt;- From the left hand menu expand Services and select Instances and subscriptions&lt;BR /&gt;- Under 'Subscriptions' click on 'Integration Suite'&lt;BR /&gt;- On the left menu select expand 'Design' and select 'Integrations and APIs'&lt;BR /&gt;- Choose 'Create' on the top right to create a new package.&lt;BR /&gt;- Give it a name&lt;BR /&gt;- Shift to the 'Artifacts' tab&lt;BR /&gt;- Select 'Add' and choose 'Integration Flow' from the list&lt;BR /&gt;- Give it a name&lt;BR /&gt;- Click add&lt;BR /&gt;- Click on the newly created integration flow&lt;/P&gt;&lt;P&gt;The integration flow screen is read-only by default, click edit.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Set up the sender&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Define an 'address' for the SAP Integration Suite endpoint.&lt;/P&gt;&lt;P&gt;- Click on sender&lt;BR /&gt;- Click connector arrow&lt;BR /&gt;- Drag to start event&lt;BR /&gt;- In adapter type pop-up select HTTPS&lt;BR /&gt;- To configure the adapter click on the drawn line (if not selected)&lt;BR /&gt;- The settings are in the bottom panel, drag it up to expand it&lt;BR /&gt;- Navigate to 'connection' tab, enter the following:&lt;BR /&gt;- Address: `/request-business-partners`&lt;BR /&gt;- Authorisation: `User Role`&lt;BR /&gt;- User Role: `ESBMessaging.send`&lt;BR /&gt;- CSRF Protected: `Unchecked` (Cross-site request forgery).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Add flow elements&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The CodeJam has excellent instructions for walking through different flow steps as per their exercises.&lt;/P&gt;&lt;P&gt;I will summarise a few elements I used in my design.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Router&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;![Router](/assets/images/blog/integration/Integration-23-A.png)&lt;/P&gt;&lt;P&gt;- The router allows you to split the flow based on a condition.&lt;BR /&gt;- This example splits the flow into 4 based on the incoming URL&lt;BR /&gt;- For example where the incoming URL ends in "single/add"&lt;BR /&gt;- Re-call our integration flow address was "request-business-partners"&lt;BR /&gt;- In this case a message arrives to "request-business-partners/single/add"&lt;BR /&gt;- Intelligent Suite assigns the last part to the variable CamelHttpPath&lt;BR /&gt;- Which is part of the message header hence: header.CamelHttpPath.&lt;/P&gt;&lt;P&gt;The route path we are looking at in this example is the one that returns a single business partner with address data.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Content modifier - case 1&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Case 1:&lt;/P&gt;&lt;P&gt;- The content modifier allows us to modify the message header or body.&lt;BR /&gt;- In the above screenshot a content modifier is added directly after the routing.&lt;BR /&gt;- This deletes the CamelHttpPath, in this case "single/add"&lt;BR /&gt;- After routing we no longer need this part of the URL in the message header.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;JSON to XML converter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- This converts the JSON in the message body to XML.&lt;BR /&gt;- In the case of searching for a single BP the message body includes JSON:&lt;/P&gt;&lt;P&gt;```JSON&lt;BR /&gt;{&lt;BR /&gt;"employee_id": "1234567"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;- This will be converted to XML&lt;/P&gt;&lt;P&gt;```XML&lt;BR /&gt;&amp;lt;root&amp;gt;&lt;BR /&gt;&amp;lt;employee_id&amp;gt;1234567&amp;lt;/employee_id&amp;gt;&lt;BR /&gt;&amp;lt;/root&amp;gt;&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Content modifier - case 2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;![Content modifier](/assets/images/blog/integration/Integration-23-B.png)&lt;/P&gt;&lt;P&gt;- In this case the content modifier gets "employee_id" from the message body&lt;BR /&gt;- And assigns it to a new variable&lt;BR /&gt;- XPath can be used to access the XML value&lt;BR /&gt;- "/root/employee_id"&lt;BR /&gt;- The variable name is set as employee_id&lt;BR /&gt;- The data type is set as a Java string.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Request Reply&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Request reply let's us send a request to a server.&lt;/P&gt;&lt;P&gt;- Click on the Set employee_id&lt;BR /&gt;- Click add flow step on the canvas&lt;BR /&gt;- Select 'Request Reply' under call &amp;gt; external call&lt;BR /&gt;- Click on 'Request Reply'&lt;BR /&gt;- Click on 'connector' and drag to the receiver&lt;BR /&gt;- Select adapter type 'HTTP'&lt;BR /&gt;- Under 'HTTP' in the connector properties, select 'Connection'&lt;BR /&gt;- Enter the address of the cloud connector:&lt;BR /&gt;- The path for a single business partner with address data involves updating:&lt;BR /&gt;- Address: "&lt;A href="http://s4-mock:3006/sap/opu/odata/sap/API_Business_Partner/A_BusinessPartner('${property.employee_id" target="_blank" rel="noopener nofollow noreferrer"&gt;http://s4-mock:3006/sap/opu/odata/sap/API_Business_Partner/A_BusinessPartner('${property.employee_id&lt;/A&gt;}')"&lt;BR /&gt;- Query: "$expand=to_BusinessPartnerAddress"&lt;BR /&gt;- Proxy Type: `On-premise`&lt;BR /&gt;- Method: `GET`&lt;BR /&gt;- Authentication: `None`&lt;BR /&gt;- Save&lt;BR /&gt;- Deploy&lt;/P&gt;&lt;P&gt;To check deployment status go to Monitor &amp;gt; Integration and APIs. On this page the endpoint to access the service is shown:&lt;/P&gt;&lt;P&gt;"https://{your trial}-cpitrial03-rt.cfapps.ap21.hana.ondemand.com/http/request-business-partners"&lt;/P&gt;&lt;H4 id="toc-hId--1844982598"&gt;Test Cloud Integration with API client&lt;/H4&gt;&lt;P&gt;At this point we can test consuming the API through SAP Integration Suite.&lt;/P&gt;&lt;P&gt;Unlike testing the local mock server, we need to deal with authentication and security. The way this works is:&lt;/P&gt;&lt;P&gt;- We pass a "client id" and "secret" to a "token URL"&lt;BR /&gt;- BTP passes back a "token" which is valid for a certain period of time&lt;BR /&gt;- This "token" has to be attached to any requests to the API in Intelligent Suite.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Accessing security details&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- Navigate to your BTP trial account&lt;BR /&gt;- Expand services and click on 'instances and subscriptions'&lt;BR /&gt;- Scroll down to instances and look for your integration flow instance&lt;BR /&gt;- Integration Suite uses Cloud Foundry so the runtime will be cloud foundry&lt;BR /&gt;- It will likely be named 'default_it-rt_integration-flow'&lt;BR /&gt;- Scroll down to service keys and click on the service key, note the values for:&lt;BR /&gt;- "clientid"&lt;BR /&gt;- "clientsecret"&lt;BR /&gt;- "url"&lt;BR /&gt;- "tokenurl"&lt;/P&gt;&lt;P&gt;For local testing we can hardcode these values in our test tools, but be careful not to upload or share these anywhere.&lt;/P&gt;&lt;P&gt;In production, never hardcode secrets or tokens. Use environment variables or a secure credential store.&lt;/P&gt;&lt;P&gt;**Request a token with Bruno**&lt;/P&gt;&lt;P&gt;In Bruno create a new request:&lt;/P&gt;&lt;P&gt;- Name: `TOKEN`&lt;BR /&gt;- Method: `POST`&lt;BR /&gt;- URL: enter the "tokenurl" from above&lt;BR /&gt;- Navigate to the Params tab:&lt;BR /&gt;- Select 'Add Param'&lt;BR /&gt;- Enter name: `grant_type` path: `client_credentials`&lt;BR /&gt;- Navigate to Auth&lt;BR /&gt;- Switch 'Inherit' to 'Basic Auth' and enter:&lt;BR /&gt;- Username: `client_id`&lt;BR /&gt;- Password: `client_secret`&lt;BR /&gt;- Save&lt;/P&gt;&lt;P&gt;Send the request. This should return a JSON document with a long value in "access_token". There should also be a expiry time e.g. 4199 seconds.&lt;/P&gt;&lt;P&gt;When sending a request, if the token is not valid Integration Suite will return a 401 error code. This means we need to request a new token.&lt;/P&gt;&lt;P&gt;Within Bruno we can save this token value to a variable. This saves us from copying and pasting it into other requests.&lt;/P&gt;&lt;P&gt;- Goto Environments &amp;gt; Configure &amp;gt; Create Environment&lt;BR /&gt;- Name: 'integration-flow'&lt;BR /&gt;- Click '+ Add Variable'&lt;BR /&gt;- Enter name: 'access_token'&lt;BR /&gt;- For value, leave it blank&lt;BR /&gt;- Save and close&lt;/P&gt;&lt;P&gt;Navigate to 'scripts' under the TOKEN request. Under Post Request enter:&lt;/P&gt;&lt;P&gt;```JS&lt;BR /&gt;if (res.status == 200) {&lt;BR /&gt;const token = res.body.access_token;&lt;BR /&gt;bru.setEnvVar("access_token",token);&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;- If the request receives a response (status 200)&lt;BR /&gt;- Get the access_token value from the response&lt;BR /&gt;- Assign to environment variable "access_token".&lt;/P&gt;&lt;P&gt;Save and run the TOKEN request.&lt;BR /&gt;Goto the environment and click 'configure'. You should see the access_token variable updated with the value from the response.&lt;/P&gt;&lt;P&gt;**Test the API with a request with for a single BP**&lt;/P&gt;&lt;P&gt;- In Bruno create a new request&lt;BR /&gt;- Name: "BP via integration suite"&lt;BR /&gt;- URL: "https://{your-trial}.it-cpitrial03-rt.cfapps.ap21.hana.ondemand.com/http/request-business-partners"&lt;BR /&gt;- Replace the above with your actual endpoint from Intelligent Suite.&lt;BR /&gt;- Navigate to the 'Auth' tab&lt;BR /&gt;- Click on 'Inherit' and change to 'Bearer Token'&lt;BR /&gt;- In Token enter: `{{access_token}}`&lt;BR /&gt;- This eferences an environment variable in Bruno&lt;BR /&gt;- Add the request body&lt;BR /&gt;- The JSON with our employee ID&lt;/P&gt;&lt;P&gt;```JSON&lt;BR /&gt;{&lt;BR /&gt;"employee_id": "1003764"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;H2 id="toc-hId--1454690089"&gt;Building and testing a frontend&lt;/H2&gt;&lt;P&gt;At this point a request to SAP Integration Suite should be successfully routed and transformed to the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;The next part would be building and testing the web app. However, there is too much to cover in building and testing the frontend to cover in this post. I may produce a video on this if anyone is interested.&lt;/P&gt;&lt;H2 id="toc-hId--1651203594"&gt;Final thoughts&lt;/H2&gt;&lt;P&gt;This technology stack is definitely a bit overkill for a simple 'search' portal, but it is fairly easy to put together as long as you are careful when specifying paths, hosts and port names.&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you'd like to discuss further please feel free to connect on &lt;A href="https://www.linkedin.com/in/alexanderroan/" target="_self" rel="nofollow noopener noreferrer"&gt;LinkedIn - Alexander Roan&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/build-a-web-app-and-connect-to-s-4hana-with-sap-integration-suite/ba-p/14179607"/>
    <published>2025-08-13T12:45:21.973000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-download-mag-simulation-result-as-edi-payload/ba-p/14177249</id>
    <title>Integration Advisor – Download MAG Simulation Result as EDI Payload</title>
    <updated>2025-08-13T15:24:58.061000+02:00</updated>
    <author>
      <name>Joerg_Ackermann</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/671194</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this blog post I would like to share with you a small new feature we have delivered: When downloading the result of a Mapping Guideline (MAG) simulation you have now the additional option to get the payload in EDI format.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1021363172" id="toc-hId-1737030537"&gt;Recap: Using Source EDI Payloads in Integration Advisor&lt;/H2&gt;&lt;P&gt;Last year we added direct support for EDI payloads in the Integration Advisor capability of SAP Integration Suite.&lt;/P&gt;&lt;P&gt;In Integration Advisor, there are multiple places where you can make use of your existing payload data:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create a Message Implementation Guideline (MIG) based on a payload&lt;/LI&gt;&lt;LI&gt;Simulate a Message Implementation Guideline (MIG)&lt;/LI&gt;&lt;LI&gt;Simulate a Mapping Guideline (MAG)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If your source payload is a text-based (flat-file) EDI message (from B2B Standards like ASC X12, UN/EDIFACT and its subsets, Odette or TRADACOMS), you can use the EDI payload directly as input for these features.&lt;/P&gt;&lt;P&gt;More details can be found in this previous blog post: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-direct-support-of-edi-payloads/ba-p/13779418" target="_self"&gt;Link&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1021363172" id="toc-hId-1540517032"&gt;Download MAG Simulation Result as EDI Payload&lt;/H2&gt;&lt;P&gt;So far, EDI support has been limited to source payloads. From the SAP Customer Influence program we have learned that a similar feature would also be interesting for the target payload (see here for more details: &lt;A href="https://influence.sap.com/sap/ino/#/idea/335331" target="_self" rel="noopener noreferrer"&gt;Link&lt;/A&gt;).&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="screenshot1.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299233i9A5F1C7F3C481AD1/image-size/large?v=v2&amp;amp;px=999" role="button" title="screenshot1.jpg" alt="screenshot1.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After executing a MAG Simulation, you have the option to download the target payload which was the result of the simulation. For this you can use the Download button - r&lt;/SPAN&gt;&lt;SPAN&gt;efer above screenshot for MAG Simulation. If your Target MIG represents an EDI message, then you have now the additional option to download the result in EDI format. See screenshot below for the downloaded file of our example.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="screenshot2.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299235i3C1201CEC4ADEA0C/image-size/large?v=v2&amp;amp;px=999" role="button" title="screenshot2.jpg" alt="screenshot2.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-431822657" id="toc-hId-1344003527"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;This blog post explains our new feature to download a MAG simulation result as an EDI payload. This will help you to work even more efficiently with Integration Advisor if you want to compare the simulation result with an existing expected target EDI payload.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(Note: This feature will become available with the August update of SAP Integration Suite which is currently rolled out to all data centers.)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-235309152" id="toc-hId-1147490022"&gt;Further reading&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-direct-support-of-edi-payloads/ba-p/13779418" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-direct-support-of-edi-payloads/ba-p/13779418&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/integration-advisor-overview-of-components-for-building-b2b-integration/ba-p/13512772" target="_blank"&gt;https://community.sap.com/t5/technology-blogs-by-sap/integration-advisor-overview-of-components-for-...&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/simulating-mapping-guideline" target="_self" rel="noopener noreferrer"&gt;https://help.sap.com/docs/cloud-integration/sap-cloud-integration/simulating-mapping-guideline&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-download-mag-simulation-result-as-edi-payload/ba-p/14177249"/>
    <published>2025-08-13T15:24:58.061000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-digital-procurement-transformation-innovations-in-july-2025/ba-p/14180983</id>
    <title>SAP Signavio digital procurement transformation innovations in July 2025</title>
    <updated>2025-08-14T16:21:10.742000+02:00</updated>
    <author>
      <name>themmert</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/43082</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Realising tangible value in procurement is more important than ever.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Digital enablers like SAP solutions can significantly contribute to this goal. However it's often challenging for procurement excellence leaders to focus on the most pressing areas of value leakage. SAP Signavio Value Accelerators for procurement help to identify these and effectively realise value. Over the next quarters we release the next generation of Value Accelerators, covering the Source to Pay process in SAP Ariba and ERP solutions.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In our July 2025 release we lay the foundation to this aspiration.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Let’s look into the different components we now release, one by one.&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Value Accelerator for Process Design and Standardisation in SAP Ariba&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: leading practice process content to accelerate transformation initiatives.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Ariba API Extractor for Signavio Process Intelligence&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: simplify and accelerate data ingestion and analysis&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Value Accelerator to identify improvement potential for Source to Pay in SAP Ariba&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp; identify automation potential in the Purchase Request to Goods Receipt process in SAP Ariba&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Improvement opportunity dashboard for Maverick Buying in SAP Signavio Process Insights:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp; get full visibility on potential value leakage through maverick buying, bypassing your procurement processes&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Value Accelerator for experience-centric process transformation for Source to Pay:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp; strengthen partnership-based value networks&amp;nbsp; with trading partners through a unified view on the suppliers Order to Cash &amp;nbsp;process, collaborating with the buyers Purchase to Pay process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1.&amp;nbsp;Value Accelerator for Process Design and Standardisation in SAP Ariba&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Challenge&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Transformation leaders, implementing SAP Ariba solutions face challenges in&amp;nbsp;ensuring adherence to standardized SAP processes, support&amp;nbsp;fit-to-standard assessments, and defining and documenting&amp;nbsp;To Be processes. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Without structured process documentation, teams risk&amp;nbsp;misalignment with SAP standards, inefficiencies in process adoption, and increased implementation complexity.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Solution&lt;/STRONG&gt;:&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This content package for SAP Signavio Process Manager enables transformation leaders and process consultants to help ensure alignment with best practices for SAP Ariba while effectively modeling “to be” processes. Best-practice business process models from SAP can accelerate fit-to-standard assessments, enhance process understanding and support a smooth transition to SAP Ariba.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Key capabilities comprise:&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Business process model and notation (BPMN) models to understand and align with SAP standards and have a baseline to model “to be” processes&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Dictionary entries&amp;nbsp;to capture information structurally&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="themmert_1-1755177504162.png" style="width: 667px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300979iAFC76989BB5457C7/image-dimensions/667x405?v=v2" width="667" height="405" role="button" title="themmert_1-1755177504162.png" alt="themmert_1-1755177504162.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Benefits&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Strengthen adherence to SAP standards by using the latest best-practice processes from SAP to help ensure compliance&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Accelerate fit-to-standard assessments by using structured process models to simplify “as is” and “to be” process comparisons&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Improve process modeling and understanding by leveraging process diagrams to define “to be” processes and drive informed decision-making&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Further information:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://sapsignavio.enable-now.cloud.sap/pub/releases/index.html?show=slide!SL_A4208D711FB0AAAE" target="_blank" rel="noopener nofollow noreferrer"&gt;EnableNow video&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;SAP Ari&lt;/STRONG&gt;ba API Extractor for Signavio Process Intelligence &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Challenge:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Up until now integration between SAP Signavio Process Intelligence and SAP Ariba can be cumbersome to configure and relies on customized BTP procedures as well as consulting services for modifications.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Solution:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Seamlessly connect to SAP Ariba using the native Cloud Integration capability within SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;Integration package available on SAP Business Accelerator Hub to integrate SAP Ariba into SAP Signavio Process Intelligence&lt;/LI&gt;&lt;LI&gt;Allow the smooth download and deployment of content in the SAP Cloud Integration for data services tenant&lt;/LI&gt;&lt;LI&gt;Push data into the ingestion API of SAP Signavio Process Intelligence in real time&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="themmert_2-1755179619673.png" style="width: 722px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301018iBF2482CB230388B8/image-dimensions/722x399?v=v2" width="722" height="399" role="button" title="themmert_2-1755179619673.png" alt="themmert_2-1755179619673.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Benefit:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Enable efficient data extraction from SAP Ariba into SAP Signavio Process Intelligence, unlocking powerful insights and process mining capabilities for procurement workflows&lt;/LI&gt;&lt;LI&gt;Reuse integration capabilities and preconfigured integration packages for SAP Ariba in SAP Cloud Integration data services&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Further information:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/extract-sap-ariba-data-into-sap-signavio-process-intelligence-using-sap/ba-p/14099400" target="_blank"&gt;Blog post &lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://sapsignavio.enable-now.cloud.sap/pub/releases/index.html?show=slide!SL_93B9019D807E38F" target="_blank" rel="noopener nofollow noreferrer"&gt;EnableNow video&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;3.&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Signavio Value Accelerator to identify improvement potential for Source to Pay in SAP Ariba&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Challenge:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The operational procurement process manages the acquisition of goods and services from placing requisitions to receiving products. &lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This process can provide multiple challenges to stakeholders, such as:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Requisitioners often complain about a lack of transparency regarding the status of their (slow) ordering process&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Procurement process owners worry about the high efforts of functional procurement personnel to handle free text purchase requisitions (PR) for repetitive low value items&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Delays in processing PRs and purchase orders (PO) may not only impact the entire procurement but the entire corporate value chain, ultimately resulting in lower employee and customer satisfaction and sales.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Solution:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A new generation of SAP Ariba value accelerators is now being released, delivered in two packages.&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The “Identify improvement potential for source to pay in SAP Ariba” package &amp;nbsp;contains the data pipeline as well as an overview dashboard. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;The “Improve procure to receipt process performance in SAP Ariba” package contains analytical dashboards for process efficiency analysis for the Procure to Receipt process.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;These packages serve as your starting point for exploring and optimizing the procurement process.&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Value Accelerator package “Identify improvement potential for source to pay with SAP Ariba”&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This package provides the data pipeline to extract transactional purchase to pay data from the SAP Ariba system, leveraging the before mentioned CI data extractor for SAP Ariba.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Use the supplemented overview dashboard &amp;nbsp;to get a comprehensive perspective of source to pay process KPIs.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;For deeper insights, specialized Value Accelerator packages as the one introduced below provide detailed dashboards and advanced analysis.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="themmert_3-1755179730570.png" style="width: 692px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301022i1070A757E6B36EE4/image-dimensions/692x433?v=v2" width="692" height="433" role="button" title="themmert_3-1755179730570.png" alt="themmert_3-1755179730570.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Value Accelerator package "Improved Procure to Receipt process performance in SAP Ariba&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This value accelerator package concentrates on the process performance value driver. In the first release now it will focus on procure to receipt processes, while in future also subsequent processes such as invoice to pay items may be added.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Key analysis capabilities comprise:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Volumes and Decision Making - &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Analyse long-running approvals and check the general Volume of Purchase Requisitions.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Value Segmentation &amp;amp; Approval Delays &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;– Identify improvement potential based on PRs with low monetary value and long approval cycle times. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Low Value PRs with Multi Approval Steps - &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Identify low monetary value PRs with excessive cycle time based on approval steps leading to process bottlenecks. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Pending Purchase Requisitions Approvals - &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Spot business areas that are prone to delayed approvals.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Benefit:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Enhance process clarity and make it easy for procurement analysts to quickly gain insights and improve transparency&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Reduce the time required to identify improvement potential in cycle times, document volumes, automation rates, and compliance&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Improve procurement FTE productivity, such as PR cycle time&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Identify inefficiencies, track trends, and uncover patterns within the procure to goods receipt process&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Provide enhanced user guidance through a streamlined template approach focusing on the most relevant KPIs&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Further Information:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://sapsignavio.enable-now.cloud.sap/pub/releases/index.html?show=slide!SL_58A49BC11705C38E" target="_blank" rel="noopener nofollow noreferrer"&gt;EnableNow video&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;4.&amp;nbsp; Improvement opportunity dashboard on Maverick Buying for SAP Signavio Process Insights&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Challenge:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Maverick buying is a common challenge to many procurement organizations. It relates to spend, not using the predefined purchasing channels, processes and contracts, and in consequence not only violating corporate policies, but limiting realized savings, increasing risks and challenging supplier relations.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;While maverick buying can come in many flavors, we’ll here focus on cases, involving POs, not aligned with contractual terms, or not using automatic purchasing proposals, or POs that may have been raised after the invoice was received. (Maverick buying, addressing Invoices without any PO may be addressed in a separate blog post.)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Solution:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The “reduce maverick buying behavior” improvement opportunity dashboard leverages purchase to pay transaction data from connected SAP ERP systems with very limited efforts.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The analytical dashboard provides insights on trends over time on&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Supplier invoices issued before PO&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A typical case, where the requester did not follow the leading practice way of raising a PO before the invoice, but after. This is often done, to “pretend” compliance and often as precondition to get properly refunded/paid.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;PO item without any Purchase Requisition reference&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A case where a purchase order item does not refer to a potentially existing contract, and accordingly also doesn’t apply to pre-negotiated contract terms.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;PO Items without agreement or Purchase Info Record:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A case where a purchase order item does not reference to a purchase info record, and accordingly also doesn’t apply to a predetermined source of supply and pre-negotiated contract terms.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;PO items with different prices for same outline agreements/purchase info records&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A case where deviating terms and conditions are detected between the Purchase order in corresponding Contract/outline agreement, indicating the potential of not applying contractual terms.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;For each case, an in-depth analysis is available, directly diving into internal/external benchmarks to identify root causes and improvement opportunities.&lt;/LI&gt;&lt;LI&gt;Finally, a dashboard provides at a glance an overview of relevant correction recommendations, providing guidance how to improve the identified issues.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="themmert_5-1755180051577.png" style="width: 735px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301024i7471F04389D107E4/image-dimensions/735x553?v=v2" width="735" height="553" role="button" title="themmert_5-1755180051577.png" alt="themmert_5-1755180051577.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Benefit&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Increased efficiency in identifying purchasing activities not aligned with existing purchasing policies, undermining the official procurement process &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Improved realization of contracted procurement benefits&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Increased spend compliance&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Further Information:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;A href="https://sapsignavio.enable-now.cloud.sap/pub/releases/index.html?show=slide!SL_BA08F6905B5DDF9E" target="_blank" rel="noopener nofollow noreferrer"&gt;EnableNow video&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5.&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;STRONG&gt;Value accelerator for experience-centric process transformation for source to pay&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Challenge:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Many companies, embarking on digital procurement transformations, focus on improving the user journey of their key stakeholders, but neglect the user experience of their suppliers.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It’s helpful to have a common understanding of suppliers’ experience in their marketing, sales and order to cash process, while interacting as selling organization with the&amp;nbsp;mirrored Source to Pay process of the buying organization.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Typical areas of pain for suppliers are broken or cumbersome processes, i.e. related to supplier onboarding, but also in sourcing as well as fulfilment, many process breaks can challenge trading partner relationships.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If the supplier experience is not smooth and value adding, the buying organization runs the risk of not being able to procure services and materials from the most competitive suppliers (who can choose customers by themselves), and in turn might erode their own competitiveness over time.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Solution:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The first step to address this challenge is getting a common understanding of the end to end supplier journey across the entire source to pay process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;To get there, this model starts from a supplier perspective and then maps it to the buyer's purchase to pay process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;For each process step, the model provides a perspective on supplier goals, activities, pain points, touch points and involved media&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Standard buyer KPIs, that Signavio can provide out of the box to effectively analyze and optimize this process are mapped for continuously monitoring the process performance and understanding potential choke points early.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The model is rounded off through information on Buyer organizational units and commonly involved SAP IT solutions. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;On this basis, it can be easier to detect potential frictions, identify root causes, and put corrective actions in place.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="themmert_6-1755180205855.png" style="width: 716px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301025iCDEFC147FD91D390/image-dimensions/716x290?v=v2" width="716" height="290" role="button" title="themmert_6-1755180205855.png" alt="themmert_6-1755180205855.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Benefit:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Accelerate journey modelling for key supplier experience scenarios across the entire source to pay process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Develop a common understanding of supplier/buyer interaction helps to strengthen empathies with suppliers’ perceived issues between procurement, finance, and supplier management teams to effectively address them.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;More Information:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://sapsignavio.enable-now.cloud.sap/pub/releases/index.html?show=slide!SL_D40297A0F686FD80" target="_blank" rel="noopener nofollow noreferrer"&gt;EnableNow video&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We hope you find this blog post useful and look forward to your questions and feedback.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Stay tuned for our next quarterly update, where we'll share further procurement related Value Accelerator innovations, we currently work on.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Please see here for more details on our portfolio of &lt;A href="https://d.dam.sap.com/a/TQGoQ8i/Use_Case_LoB_Spend_Management_SAP_Signavio_Value_Accelerators.pdf?rc=10&amp;amp;inline=true&amp;amp;doi=SAP1224904" target="_self" rel="noopener noreferrer"&gt;SAP Signavio Value Accelerators for Spend Management &lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;If you’re interested in learning more about our remaining SAP Signavio solution innovations from this quarter, check out the blog posts below:&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://www.signavio.com/post/july-2025-product-release-update/" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Signavio July 2025 Release Highlights&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-july-2025-release-sap-signavio-process-intelligence/ba-p/14148361" target="_blank"&gt;Process Analysis and Mining&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-process-and-journey-modeling-what-s-new-in-the-july-release/ba-p/14151991" target="_blank"&gt;Process and Journey Modeling&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-process-and-journey-modeling-what-s-new-in-the-july-release/ba-p/14151991" target="_blank"&gt;New AI capabilities and enhancements&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-july-2025-product-release-process-transformation-management/ba-p/14155389" target="_blank"&gt;Process Transformation Management and Collaboration&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-july-2025-product-release-process-governance/ba-p/14155393" target="_blank"&gt;Process Governance&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-digital-procurement-transformation-innovations-in-july-2025/ba-p/14180983"/>
    <published>2025-08-14T16:21:10.742000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-august-14th-2025/ba-p/14180990</id>
    <title>SAP Developer News August 14th, 2025</title>
    <updated>2025-08-14T21:10:00.135000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FmCFtPGSSNoU%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DmCFtPGSSNoU&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FmCFtPGSSNoU%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="LATAM Roadshow, SAPUI5, re≽cap25 recordings &amp;amp; Integration Suite learning | SAP Developer News" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1866835113"&gt;&lt;STRONG&gt;DESCRIPTION&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;New SAP Integration Suite learning journeys&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Administering SAP Integration Suite: &lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/administering-sap-integration-suite" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/administering-sap-integration-suite&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Accelerating Hybrid Integrations with SAP Integration Suite on SUSE Rancher: &lt;A href="https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-suse-rancher" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-suse-rancher&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Accelerating Hybrid Integrations with SAP Integration Suite on RedHat OpenShift: &lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-redhat-openshift" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-redhat-openshift&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;SAPUI5 Flexibility: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-key-users-create-consistent-text-changes-with-sapui5-flexibility/ba-p/14177155" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/how-key-users-create-consistent-text-changes-with-sapui5-flexibility/ba-p/14177155&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;re≽cap 25 recordings are available!: &lt;SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/resources/events#recap2025" target="_blank" rel="noopener nofollow noreferrer"&gt;https://cap.cloud.sap/docs/resources/events#recap2025&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1670321608"&gt;&lt;STRONG&gt;CHAPTER TITLES&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;0:00 Intro&lt;/P&gt;&lt;P&gt;0:10 &lt;SPAN&gt;LATAM Roadshow Promo from Mexico&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;1:56 SAPUI5 Flexibility&lt;/P&gt;&lt;P&gt;3:04 re≽cap 25 recordings are available!&lt;/P&gt;&lt;P&gt;3:40 New SAP Integration Suite learning journeys&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1473808103"&gt;&lt;STRONG&gt;TRANSCRIPTION&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Intro]&lt;/STRONG&gt; This is the SAP Developer News for August the 14th, 2025.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Tom,Rich,Antonio]&lt;/STRONG&gt; Hola, amigos. Hola. Hola. We're here in Mexico City. Rich Heilmann, Thomas Young, Antonio. I'm not going to say his last name. I'm just going to murder it anyway. Yeah, we're in Mexico City doing Codejam today. We were in Lima on Monday. Yes. Very good Codejam. Monday and Tuesday. Monday and Tuesday. We did a meetup on Monday night. It was very good. We had a nice German restaurant, beers, and food. It's very nice. And today, we're in Mexico City. Again, we just finished the Codejam. And then tonight, we're going to have another meetup. And I think we're going to have a record number at the meetup tonight, which is going to be great. Yeah. So, yeah. And then next week, Antonio and I will be off to Bogota, Colombia to do another two Codejams and another meetup. What topics have we been doing? We're doing... Why am I talking the whole time? and we're doing uh the top of this are on uh AI, AI core and um um RAP and we're taking a little bit of a slant on this trip we're going we're doing uh Joule for ABAP developers uh so putting the hands to keyboard uh using Joule and uh all the good things that come with that yep it's like the only place that people can get access to it to try it out right now that's right uh come to a code jam and uh use it for real yep and we had a good day today a lot of interactions um so many people just you know working together on the exercises chatting together uh it was really great i loved it it's great yeah so be on the lookout for Codejams coming to a city near you in the in the future hopefully and uh join us for one of these yep bye for now ciao&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Michelle] &lt;/STRONG&gt;howdy y'all have y'all ever been working on the frontend on a table with a filter bar maybe and needed to change the label on one of the values that's shown in both places but only happen to remember to do it in one place i mean i definitely haven't done that before but i know that someone out there must have so for those of us i mean those of y'all who have SAP has introduced new capability in SAPUI5 flexibility that may help solve this kind of problem. The blog post linked below highlights how non-developers and developers can easily customize and manage these kinds of text updates by focusing more on the data model itself. This will allow users to make consistent text changes in apps more efficiently. This feature will also help make it easier to prevent those silly little mistakes we've all made in the past. Check out the blog post for more info on the other ways that SAPUI5 flexibility can help improve your own workflow. I hope you all are having a wonderful bug -free day, and as always, happy coding!&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Kevin]&lt;/STRONG&gt; Hey everyone. As you know, Recap 25 was in July last month. And if you missed it, if you couldn't join, or if you missed some sessions or the keynote, I have good news for you. You can go over to the CapHire website, and there you will find all the recordings for the sessions and the keynote as of now. So head over to CapHire documentation website to get all the sessions and keynote from ReCap 2025. Hola, SAP Developers.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Antonio]&lt;/STRONG&gt; I'm here at the SAP office in Bogotá, Colombia, where we just did the last CodeGem as part of the LATAM Roadshow. An attendee today highlighted how much the learning offerings from SAP have changed in the past few years, how the learning content is easily accessible, the quality of the content, and how he has learned a lot thanks to SAP learning. I want to share with you three new learning offerings related to SAP Integration Suite that were recently published in learning.sap.com. First, the administering SAP Integration Suite learning journey. This learning journey offers everything you need to know regarding administering SAP Integration Suite, including essential tasks, setup, capability management, and role responsibilities. Also, for those of you migrating from PIPO to SAP Integration Suite, there are two new learning journeys, so you can get familiar with Edge Integration Cell, the hybrid integration runtime part of SAP Integration Suite. Edge Integration Cell allows you to manage APIs and run integration scenarios within your private landscape. One learning journey focuses on running Edge Integration Cell on SUSE Rancher Kubernetes Engine and the other one on Red Hat OpenShift. Both of these learning journeys start on the 19th of August, and if you complete them by the 30th of September, you can earn a record of achievement. Happy learning!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-august-14th-2025/ba-p/14180990"/>
    <published>2025-08-14T21:10:00.135000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol1-%E5%9F%BA%E6%9C%AC%E7%B7%A8/ba-p/14181932</id>
    <title>SAP Integration SuiteのAI Adapterの使い方 Vol1.基本編</title>
    <updated>2025-08-15T18:57:25.995000+02:00</updated>
    <author>
      <name>yasuyukiuno</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/557133</uri>
    </author>
    <content>&lt;P&gt;SAP IntegrationのAIアダプタがようやくリリースされたので試してみました。&lt;BR /&gt;この記事ではIntegration Suite AIアダプターの利用方法をステップバイステップで解説します。&lt;BR /&gt;AIアダプタの基本的な利用方法と、ChatGPTとの接続方法の解説、Content ModifierからテキストメッセージをAIアダプタに渡してレスポンスを取得します。&lt;/P&gt;&lt;H2 id="toc-hId-964073342" id="toc-hId-1737782001"&gt;AI Adapterについて&lt;/H2&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/ai-adapter" target="_blank" rel="noopener noreferrer"&gt;AI Adapter&lt;/A&gt;はその名の通り、対話型AIとやり取りをするために利用するアダプタです。&lt;BR /&gt;2025年2Qにリリースされたばかりの新アダプタとなります。&lt;/P&gt;&lt;P&gt;・AI アダプタでは、 SAP AI Coreを利用した&lt;STRONG&gt;AICore-GenAIHub&lt;/STRONG&gt;と、Chat GPT APIを利用した&lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt;の2 つのAI利用方法があります。&lt;/P&gt;&lt;P&gt;この記事では、後者の&lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt;を利用しAIアダプタを試してみます。&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Chat GPT APIの準備&lt;/LI&gt;&lt;LI&gt;Integration Flow(iFlow)の作成&lt;/LI&gt;&lt;LI&gt;動作確認&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-767559837" id="toc-hId-1541268496"&gt;1.Open AI API(Chat GPT API)の準備&lt;/H2&gt;&lt;P&gt;1. Open AI API管理画面へのログイン&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;下記URLにアクセスしログインします&lt;BR /&gt;&lt;A href="https://platform.openai.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://platform.openai.com/&lt;/A&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_0-1755271974766.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301462i967EFA0C5E3731E7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_0-1755271974766.png" alt="yasuyukiuno_0-1755271974766.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.ウィザードに従って組織(Organization)とプロジェクト(Project)を作成します&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;私の場合、組織:：MyDevTest、プロジェクト：SAPBTPと設定しました。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_1-1755272478438.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301472i2B8260B6EA1AB65F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_1-1755272478438.png" alt="yasuyukiuno_1-1755272478438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3.API Keyの作成&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;API Keyを作成します。後でBTPからAPIを呼び出すときにKeyを利用しますので、控えておいてください。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_2-1755272892790.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301477i767FDFD5BAF54F8F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_2-1755272892790.png" alt="yasuyukiuno_2-1755272892790.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_3-1755273064263.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301480i02C327D8C762B200/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_3-1755273064263.png" alt="yasuyukiuno_3-1755273064263.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_4-1755273195061.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301486i85CF02C8CA582697/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_4-1755273195061.png" alt="yasuyukiuno_4-1755273195061.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.Open AI APIへの課金&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Open AI APIをコールするには課金が必要です。課金しないと、APIをコールしても失敗してしまいます。&lt;BR /&gt;APIを1回コールするには大体0.01USDかかります。&lt;BR /&gt;クレジットカードを登録し、クレジットをチャージ(最低 5USD以上)します。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_5-1755273986203.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301495i9C1E20AB98D52AA3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_5-1755273986203.png" alt="yasuyukiuno_5-1755273986203.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;以上でOpen AI API側の準備は完了です。&lt;/P&gt;&lt;H2 id="toc-hId-767559837" id="toc-hId-1344754991"&gt;2.Integration Flowの作成&lt;/H2&gt;&lt;P&gt;1. API Keyの設定&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Monitor -&amp;gt; Security Materials -&amp;gt; Create Secure Parameter&lt;BR /&gt;より、APIキーをセキュアパラメータとして設定します。&lt;BR /&gt;Name：OpenAI_APIKey&lt;BR /&gt;Secure Parameter：Bearer +API Key&amp;nbsp; &amp;nbsp;例)Bearer sk-proj-MOuoJ8jxj.......&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_7-1755274542456.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301497i68161F90FA1894FD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_7-1755274542456.png" alt="yasuyukiuno_7-1755274542456.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.Integration Flowの作成&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Integration Suiteのアップデートにより、Request ReplayコンポーネントからReceiverに線を引いたときに、『AI』アダプタが選択できるようになっています。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_8-1755274932455.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301498iED048F0927E83E01/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_8-1755274932455.png" alt="yasuyukiuno_8-1755274932455.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;今回は下図のような簡単なiFlowを作成しました。それぞれのコンポーネントの設定値を解説していきます。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_9-1755275296005.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301533i72D75196C0C23276/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_9-1755275296005.png" alt="yasuyukiuno_9-1755275296005.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Start Timer：On Deploy (デプロイ時にトリガ)&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Content Modifier：下図のように固定の文字列(AIへの質問)を設定しています。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_10-1755275442676.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301534i1471B0C3AFD6B141/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_10-1755275442676.png" alt="yasuyukiuno_10-1755275442676.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;AI Adapter(Connection)：API Key Aliasに先ほど作成したSecurity Materialsの『OpenAI_APIKey』を設定しています。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_11-1755275605832.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301535i1B6497AB64930349/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_11-1755275605832.png" alt="yasuyukiuno_11-1755275605832.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;AI Adapter(Processing)：前のステップ(Content Modifier)で設定したメッセージボディをそのままAIに渡すため、プロンプトに${in.body}を設定します。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_12-1755275777601.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301536i6652E84945426157/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_12-1755275777601.png" alt="yasuyukiuno_12-1755275777601.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;以上でIntegration Flowの作成は完了です。デプロイし動作確認してみます。&lt;/P&gt;&lt;H2 id="toc-hId-767559837" id="toc-hId-1148241486"&gt;3.動作確認&lt;/H2&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;実行したところ、下図のような応答が返ってきました。日本語での質問には日本語で返してくれます。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_13-1755276086935.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301538i8245E1243AB3D37F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_13-1755276086935.png" alt="yasuyukiuno_13-1755276086935.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;AIアダプタの基本的な使い方は以上となります。&lt;BR /&gt;本記事のようにメッセージボディをAIに流し込むことによって、データの要約をさせたり、システム連携時のエラーレスポンスをAIに分析させたりと、色々な応用ができそうではないでしょうか。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol1-%E5%9F%BA%E6%9C%AC%E7%B7%A8/ba-p/14181932"/>
    <published>2025-08-15T18:57:25.995000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/predictive-stock-transfer-amp-automatic-purchase-re-order-plant-to-plant/ba-p/14170063</id>
    <title>Predictive Stock Transfer &amp; Automatic Purchase Re-Order: Plant-to-Plant A2A Orchestration</title>
    <updated>2025-08-16T14:04:54.954000+02:00</updated>
    <author>
      <name>Yogananda</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/75</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Use-case: Predictive Stock Transfer &amp;amp; Automatic Purchase Re-Order (Plant-to-Plant A2A scenario driven by real-time APIs)&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Yogananda_0-1755345825205.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301623i7ED9C4CC9FB704BB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Yogananda_0-1755345825205.png" alt="Yogananda_0-1755345825205.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A fast-moving material in Plant A is kept in stock by an end-to-end, automated flow that &lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;checks forecast demand, &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;looks for internal surplus in nearby plants, and &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;automatically creates stock transfers or purchase requisitions as needed. &lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisities and needed&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP S/4HANA Cloud (Inventory &amp;amp; MRP) – On-hand stock, stock in transit, MRP items&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Integrated Business Planning (IBP) – Demand forecast for FG-100 at Plant A&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;SAP Extended Warehouse Management (EWM) – Real-time on-hand stock incl. quarantine&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Ariba – Supplier catalog and pricing for external options&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;External supplier catalog (Ariba-like) – External pricing and lead times&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Integration Suite / SAP Event Mesh – Orchestrates the end-to-end flow and publishes events&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Sequence – how the APIs interact end-to-end&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 0 – Trigger&lt;/STRONG&gt;&lt;BR /&gt;A nightly iFlow in SAP Integration Suite (or SAP Event Mesh) starts the orchestration.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1 – Demand forecast&lt;/STRONG&gt;&lt;BR /&gt;GET /api/ibp/v1/demandplanning/forecast?material=FG-100&amp;amp;plant=A&amp;amp;weeks=4&lt;BR /&gt;→ Returns 1,200 pcs forecasted demand.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2 – Current &amp;amp; projected stock in Plant A&lt;/STRONG&gt;&lt;BR /&gt;GET /sap/opu/odata/sap/API_MATERIAL_STOCK_SRV/MaterialStock?material=FG-100&amp;amp;plant=A&lt;BR /&gt;→ 180 pcs unrestricted, 40 pcs blocked.&lt;BR /&gt;GET /sap/opu/odata/sap/API_MRP_COCKPIT_SRV/MrpItems?material=FG-100&amp;amp;plant=A&lt;BR /&gt;&lt;SPAN&gt;Result: confirmed receipts 600 pcs&lt;/SPAN&gt;&lt;BR /&gt;→ Confirmed receipts 600 pcs, so net shortage = 1,200 – 180 – 600 = 420 pcs.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3 – Locate surplus stock in the network&lt;/STRONG&gt;&lt;BR /&gt;Parallel calls (one per plant):&lt;BR /&gt;GET /sap/opu/odata/sap/API_MATERIAL_STOCK_SRV/MaterialStock?material=FG-100&amp;amp;plant=B&lt;BR /&gt;→ 300 pcs unrestricted.&lt;BR /&gt;GET /sap/opu/odata/sap/API_MATERIAL_STOCK_SRV/MaterialStock?material=FG-100&amp;amp;plant=C&lt;BR /&gt;→ 250 pcs unrestricted.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4 – Check ATP (available-to-transfer) incl. transit time&lt;/STRONG&gt;&lt;BR /&gt;POST /sap/opu/odata/sap/API_ATP_CHECK_SRV/CheckAvailability&lt;BR /&gt;Body:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
"material": "FG-100", 
"plant": "B", 
"demandQty": 300, 
"requiredDate": "2024-06-25" 
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;→ Confirms 300 pcs can be delivered by 2024-06-23.&lt;BR /&gt;Same for Plant C → 120 pcs available by 2024-06-24.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5 – Decide cheapest internal option&lt;/STRONG&gt;&lt;BR /&gt;Cost service (custom REST on S/4):&lt;BR /&gt;POST /internal/transferCost&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
"fromPlants": ["B","C"], 
"toPlant": "A", 
"qty": [300,120] 
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;→ Plant B has the lowest freight cost (€0.05/pc vs €0.07/pc).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6 – Create stock transport order (STO)&lt;/STRONG&gt;&lt;BR /&gt;POST /sap/opu/odata/sap/API_STOCK_TRANSPORT_ORDER_SRV/A_StockTransportOrder&lt;BR /&gt;Body:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
"SupplyingPlant": "B", 
"ReceivingPlant": "A", 
"Material": "FG-100", 
"OrderQuantity": 300, 
"DeliveryDate": "2024-06-23" 
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;→ STO 4500012345 created.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7 – Remaining uncovered quantity&lt;/STRONG&gt;&lt;BR /&gt;Shortage after internal transfer = 420 – 300 = 120 pcs.&lt;BR /&gt;Call Ariba to get best external price:&lt;BR /&gt;GET /v2/suppliers/catalog?material=FG-100&amp;amp;qty=120&amp;amp;currency=EUR&lt;BR /&gt;→ Supplier S-987 offers €2.30/pc, lead time 7 days.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8 – Create purchase requisition in S/4&lt;/STRONG&gt;&lt;BR /&gt;POST /sap/opu/odata/sap/API_PURCHASEREQ_PROCESS_SRV/A_PurchaseRequisitionHeader&lt;BR /&gt;Body:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
"Material": "FG-100", 
"Plant": "A", 
"Quantity": 120, 
"DeliveryDate": "2024-06-27", 
"SupplierHint": "S-987" 
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;→ PR 1000123456 created.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 9 – Notify planners&lt;/STRONG&gt;&lt;BR /&gt;Publish event to SAP Event Mesh topic /business/plantA/stockReplenished&lt;BR /&gt;Payload:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
"material": "FG-100", 
"sto": "4500012345", 
"pr": "1000123456", 
"status": "covered" 
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Outcome&lt;/STRONG&gt;&lt;BR /&gt;Plant A will receive 300 pcs from Plant B via an automatically created STO and 120 pcs via a purchase requisition with the cheapest external supplier—no manual intervention, no stock-out, and minimal freight cost.&lt;/P&gt;&lt;P&gt;complete code&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;#!/usr/bin/env python3
"""
End-to-end A2A flow:
1. Read demand forecast (IBP)
2. Check stock &amp;amp; MRP in Plant A
3. Search surplus stock in Plants B/C
4. Run ATP check
5. Create STO (cheapest internal)
6. Create PR for remaining qty (Ariba best price)
"""

import os, json, math
from datetime import datetime, timedelta
from dotenv import load_dotenv
from requests import Session
from requests_oauthlib import OAuth2Session
from oauthlib.oauth2 import BackendApplicationClient

load_dotenv()

# ---------- CONFIG ----------
MATERIAL = "FG-100"
PLANT_A  = "A"
PLANTS_SURPLUS = ["B", "C"]
DEMAND_WEEKS   = 4
TRANSPORT_DAYS = 2
# ----------------------------

s = Session()

# ---------- 0.  OAUTH TOKEN for S/4 ----------
def s4_token():
    url = f"{os.getenv('S4_HOST')}/oauth/token"
    r = s.post(url,
               auth=(os.getenv('S4_USER'), os.getenv('S4_PASSWORD')),
               data={'grant_type':'client_credentials'})
    r.raise_for_status()
    return r.json()['access_token']

s.headers.update({'Authorization': f"Bearer {s4_token()}"})

# ---------- 1.  IBP – demand forecast ----------
def ibp_forecast():
    url = (f"{os.getenv('S4_HOST')}/sap/opu/odata/sap/"
           f"API_DEMAND_PLANNING_SRV/DemandForecast")
    params = {
        "$filter": f"Material eq '{MATERIAL}' and Plant eq '{PLANT_A}'",
        "$select": "DemandQuantity",
        "$format": "json"
    }
    r = s.get(url, params=params)
    r.raise_for_status()
    total = sum(item['DemandQuantity'] for item in r.json()['d']['results'])
    return total

demand_qty = ibp_forecast()
print("Demand forecast:", demand_qty)

# ---------- 2.  Stock &amp;amp; MRP ----------
def plant_stock(plant):
    url = (f"{os.getenv('S4_HOST')}/sap/opu/odata/sap/"
           f"API_MATERIAL_STOCK_SRV/MaterialStock")
    params = {
        "$filter": f"Material eq '{MATERIAL}' and Plant eq '{plant}' and "
                   f"StorageLocation ne ''",
        "$format": "json"
    }
    r = s.get(url, params=params)
    r.raise_for_status()
    return sum(item['UnrestrictedStockQuantity']
               for item in r.json()['d']['results'])

def plant_receipts(plant):
    url = (f"{os.getenv('S4_HOST')}/sap/opu/odata/sap/"
           f"API_MRP_COCKPIT_SRV/MrpItems")
    params = {
        "$filter": f"Material eq '{MATERIAL}' and Plant eq '{plant}' and "
                   f"MrpElementCategory eq 'AR'",
        "$format": "json"
    }
    r = s.get(url, params=params)
    r.raise_for_status()
    return sum(item['Quantity'] for item in r.json()['d']['results'])

stock_A = plant_stock(PLANT_A)
receipts_A = plant_receipts(PLANT_A)
shortage = max(0, demand_qty - stock_A - receipts_A)
print("Shortage:", shortage)
if shortage == 0:
    print("No action needed.")
    exit()

# ---------- 3.  Surplus stock ----------
surplus = {}
for p in PLANTS_SURPLUS:
    surplus[p] = plant_stock(p)
print("Surplus:", surplus)

# ---------- 4.  ATP check ----------
def atp_ok(plant, qty, req_date):
    url = (f"{os.getenv('S4_HOST')}/sap/opu/odata/sap/"
           f"API_ATP_CHECK_SRV/CheckAvailability")
    body = {
        "Material": MATERIAL,
        "Plant": plant,
        "DemandQuantity": str(qty),
        "RequiredDate": req_date.isoformat()
    }
    r = s.post(url, json=body)
    r.raise_for_status()
    return r.json()['d']['ConfirmedQuantity'] == str(qty)

best_internal = None
needed = shortage
for plant, qty in surplus.items():
    take = min(qty, needed)
    req = datetime.utcnow().date() + timedelta(days=TRANSPORT_DAYS)
    if atp_ok(plant, take, req):
        best_internal = (plant, take)
        break
if best_internal:
    plant, qty = best_internal
    print(f"Best internal: {qty} from {plant}")

    # ---------- 5.  Create STO ----------
    url = (f"{os.getenv('S4_HOST')}/sap/opu/odata/sap/"
           f"API_STOCK_TRANSPORT_ORDER_SRV/A_StockTransportOrder")
    body = {
        "SupplyingPlant": plant,
        "ReceivingPlant": PLANT_A,
        "Material": MATERIAL,
        "OrderQuantity": str(qty),
        "DeliveryDate": req.isoformat()
    }
    r = s.post(url, json=body)
    r.raise_for_status()
    sto = r.json()['d']['StockTransportOrder']
    print("STO created:", sto)
    shortage -= qty

# ---------- 6.  Ariba – best external price ----------
if shortage &amp;gt; 0:
    client = BackendApplicationClient(client_id=os.getenv('ARIBA_CLIENT_ID'))
    oauth = OAuth2Session(client=client)
    token = oauth.fetch_token(
        token_url=os.getenv('ARIBA_TOKEN_URL'),
        client_id=os.getenv('ARIBA_CLIENT_ID'),
        client_secret=os.getenv('ARIBA_CLIENT_SECRET')
    )
    url = "https://api.ariba.com/v2/suppliers/catalog"
    params = {
        "material": MATERIAL,
        "qty": shortage,
        "currency": "EUR"
    }
    r = oauth.get(url, params=params)
    r.raise_for_status()
    best = min(r.json()['offers'], key=lambda x: float(x['price']))
    print("Best supplier:", best['supplier'], best['price'])

    # ---------- 7.  Create PR ----------
    url = (f"{os.getenv('S4_HOST')}/sap/opu/odata/sap/"
           f"API_PURCHASEREQ_PROCESS_SRV/A_PurchaseRequisitionHeader")
    body = {
        "Material": MATERIAL,
        "Plant": PLANT_A,
        "Quantity": str(shortage),
        "DeliveryDate": (datetime.utcnow().date()
                         + timedelta(days=int(best['leadtime']))).isoformat(),
        "SupplierHint": best['supplier']
    }
    r = s.post(url, json=body)
    r.raise_for_status()
    pr = r.json()['d']['PurchaseRequisition']
    print("PR created:", pr)

print("Flow finished.")&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/predictive-stock-transfer-amp-automatic-purchase-re-order-plant-to-plant/ba-p/14170063"/>
    <published>2025-08-16T14:04:54.954000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/demo-jam-sap-teched-on-tour-bangalore-nov-25-26-2025-biec/ba-p/14182616</id>
    <title>Demo Jam @ SAP TechEd On Tour Bangalore | Nov 25–26, 2025 | BIEC</title>
    <updated>2025-08-18T12:27:06.046000+02:00</updated>
    <author>
      <name>preethireddy_morsu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/202670</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Bring Your Ideas to Life&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The wait is over – Demo&lt;/SPAN&gt; &lt;SPAN&gt;Jam is back at SAP TechEd On Tour, happening on November 25–26 in Bangalore! This is your chance to wow customers and partners in the audience, showcase your most innovative SAP-powered solution, and prove your skills in a high-energy live showdown.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What’s SAP Demo &lt;STRONG&gt;&lt;SPAN&gt;Jam?&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Think of it as the ultimate live demo battle - no slides, no filler. Just six minutes of pure creativity and innovation, live on stage. The winner? Chosen by the audience using our applause-o-meter.&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;SPAN&gt;(Need ideas? &lt;A href="https://community.sap.com/t5/sap-teched-blog-posts/replay-sap-demojam-2023-the-full-live-show/ba-p/305845" target="_blank"&gt;&lt;SPAN&gt;Check out the 2023 SAP DemoJam Highlights&lt;SPAN&gt;.)&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Rules&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-lower-greek"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Time Limit&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;Exactly 6 minutes - go over and the buzzer cuts you off.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Live Demo Only&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;No PPTs, no screenshots, no videos, no AI-generated entertainment -only real, working solutions.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Tech Focus&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;Must show how you used SAP BTP (incl. SAP Build, APAB, SAP Integration Suite, HANA Cloud), SAP Business Data Cloud, and/or SAP Business AI to solve a real business problem.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Team Size&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;2 presenters on stage.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;How to Submit Your Proposal&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Email &lt;SPAN&gt;&lt;A href="mailto:TechEdonTourBangalore2025@sap.com" target="_self" rel="nofollow noopener noreferrer"&gt;TechEdonTourBangalore2025@sap.com&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN&gt;Subject : SAP Demo Jam - SAP TechEd On Tour Bangalore 2025&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN&gt;Details :&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Name of your demo&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Detailed description of your demo&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Business value you’re demonstrating (max 500 words)&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Technology used&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Presenter #1: Name, Email, Company, Job profile&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Presenter #2: Name, Email, Company, Job profile&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;(Optional) Link to a short demo video&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Deadline: September 15, 2025&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What Happens Next?&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Selection of Finalists:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt; Six teams will be chosen by an SAP expert panel and announced on September 25, 2025.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Complimentary Tickets&lt;/STRONG&gt;: Finalist presenters get complimentary SAP TechEd On Tour Bangalore tickets (travel &amp;amp; expenses not included).&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Live Demo&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;On November 26, finalists take the stage-two presenters per team-to battle it outlive.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Bring your ideas. Bring your energy. Bring your innovation.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Let’s Jam, Bangalore!&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;DIV class=""&gt;&amp;nbsp;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/demo-jam-sap-teched-on-tour-bangalore-nov-25-26-2025-biec/ba-p/14182616"/>
    <published>2025-08-18T12:27:06.046000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/govern-your-rise-project-using-calm-activate-for-integration-suite-edge/ba-p/14182272</id>
    <title>Govern Your RISE Project using CALM/ACTIVATE for Integration Suite, Edge Integration Cell</title>
    <updated>2025-08-18T13:38:41.009000+02:00</updated>
    <author>
      <name>FlorianOkos</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/5536</uri>
    </author>
    <content>&lt;P&gt;When implementing &lt;STRONG&gt;SAP Integration Suite, Edge Integration Cell&lt;/STRONG&gt; in a &lt;STRONG&gt;RISE with SAP&lt;/STRONG&gt; project, you’ll quickly realize there’s more to it than just following the installation steps.&lt;BR /&gt;Multiple teams are involved — Basis, Integration, Security — and the process spans several weeks with dependencies, approvals, and testing.&lt;/P&gt;&lt;P&gt;That’s where &lt;STRONG&gt;SAP Cloud ALM (CALM)&lt;/STRONG&gt; and the &lt;STRONG&gt;SAP Activate&lt;/STRONG&gt; methodology come in.&lt;BR /&gt;Instead of treating the setup guide as a static document, you can &lt;STRONG&gt;turn it into a living, governed project plan&lt;/STRONG&gt; in CALM — giving you visibility, accountability, and structure.&lt;/P&gt;&lt;P&gt;In this blog, I’ll walk you through how we built a &lt;STRONG&gt;CALM project plan&lt;/STRONG&gt; directly from the SAP Help guide:&lt;BR /&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/setting-up-and-managing-edge-integration-cell" target="_blank" rel="noopener noreferrer"&gt;Setting up and Managing Edge Integration Cell&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;… and aligned it with &lt;STRONG&gt;SAP Activate phases&lt;/STRONG&gt; to ensure nothing slipped through the cracks.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why Governance Matters for Edge Integration Cell&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The &lt;STRONG&gt;Edge Integration Cell&lt;/STRONG&gt; extends your Integration Suite into on-premise or private cloud environments, ideal for hybrid integration scenarios.&lt;BR /&gt;But without governance:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Prerequisite checks get missed.&lt;/LI&gt;&lt;LI&gt;Network and security tasks are delayed.&lt;/LI&gt;&lt;LI&gt;The “who does what” question slows progress.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Using &lt;STRONG&gt;CALM + Activate&lt;/STRONG&gt; solves these issues:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Phased approach&lt;/STRONG&gt; (Prepare → Explore → Realize → Deploy → Run)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Task ownership&lt;/STRONG&gt; and clear accountability&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Built-in dependencies and milestone tracking&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Building the CALM Project Plan from the SAP Help Guide&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The SAP Help guide breaks the setup into logical sections — installation prerequisites, network configuration, deployment, operations.&lt;BR /&gt;We mirrored this structure in CALM:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Each &lt;STRONG&gt;section&lt;/STRONG&gt; became a &lt;STRONG&gt;Work Package&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Each &lt;STRONG&gt;step&lt;/STRONG&gt; in the guide became a &lt;STRONG&gt;Task&lt;/STRONG&gt;, with an owner, due date, and link to the original help page.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="PROJECT.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301940i5944EB8186808DBB/image-size/large?v=v2&amp;amp;px=999" role="button" title="PROJECT.png" alt="PROJECT.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;EM&gt;The Edge Integration Cell setup as a governed CALM project — each work package represents a major setup step from SAP Help.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="TASKS.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301941iF0CCA563CC2810F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="TASKS.png" alt="TASKS.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;EM&gt;Detailed CALM task view — each task links directly to the relevant SAP Help step, ensuring consistent execution.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Work Package:&lt;/STRONG&gt; Install Edge Integration Cell&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Task: Prepare installation environment (linked to SAP Help section)&lt;/LI&gt;&lt;LI&gt;Task: Run installation script on target host&lt;/LI&gt;&lt;LI&gt;Task: Validate installation logs&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Using SAP Activate in CALM&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Once the work packages were in place, we assigned them to &lt;STRONG&gt;Activate phases&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Prepare:&lt;/STRONG&gt; Check system prerequisites, plan network connectivity&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Explore:&lt;/STRONG&gt; Review architecture, finalize sizing &amp;amp; connectivity models&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Realize:&lt;/STRONG&gt; Perform installation, apply configurations&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Deploy:&lt;/STRONG&gt; Prepare go-live, complete handover documentation&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Run:&lt;/STRONG&gt; Set up monitoring, operational processes&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="TASK Details.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301942i75D3918FFB4D016C/image-size/large?v=v2&amp;amp;px=999" role="button" title="TASK Details.png" alt="TASK Details.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;EM&gt;Phase view in CALM shows the progression of the Edge Integration Cell setup across Activate stages.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Practical Tips for Making It Work&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Through experience, these points made the biggest difference:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Assign clear task owners&lt;/STRONG&gt; — CALM Personas ensure accountability&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="TEAM.png" style="width: 894px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301943iC195187CD2BC7742/image-dimensions/894x287?v=v2" width="894" height="287" role="button" title="TEAM.png" alt="TEAM.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Use dependencies&lt;/STRONG&gt; — Ensure network setup tasks finish before installation begins.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Link every CALM task&lt;/STRONG&gt; to the exact SAP Help step — removes ambiguity.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Review progress at each Activate phase gate&lt;/STRONG&gt; — prevents issues from snowballing.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;By combining &lt;STRONG&gt;CALM project planning&lt;/STRONG&gt; with the &lt;STRONG&gt;SAP Activate methodology&lt;/STRONG&gt;, you can transform the Edge Integration Cell setup from a static instruction list into a &lt;STRONG&gt;clear, collaborative, and governable project&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Whether you’re in a RISE project or a hybrid integration scenario, this approach ensures:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Everyone knows their tasks.&lt;/LI&gt;&lt;LI&gt;Steps happen in the right order.&lt;/LI&gt;&lt;LI&gt;Stakeholders can track progress in real-time.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you need support on your SAP&amp;nbsp;Integration Suite, Edge Cell journey, feel free to reach out to us via: SAP Integration Modernization &amp;lt;integration.modernization@sap.com&amp;gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/govern-your-rise-project-using-calm-activate-for-integration-suite-edge/ba-p/14182272"/>
    <published>2025-08-18T13:38:41.009000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-operations-a-structured-blog-series/ba-p/14165436</id>
    <title>SAP Integration Suite - Operations – A Structured Blog Series</title>
    <updated>2025-08-18T14:51:22.540000+02:00</updated>
    <author>
      <name>_Nils_Lorenz_</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/43637</uri>
    </author>
    <content>&lt;P&gt;This blog series is designed to provide a structured overview of operational best practices within SAP&amp;nbsp;&lt;A href="https://www.sap.com/products/technology-platform/integration-suite.html" target="_self" rel="noopener noreferrer"&gt;Integration Suite&lt;/A&gt;. It aims to support in establishing transparency, stability, and modernization across integration landscapes. Each entry focuses on a specific operational domain, offering actionable guidance for sustainable Integration Suite management.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When it comes to operational best practices, several key areas are particularly relevant for ensuring a smooth, efficient, and scalable integration landscape.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;The following aspects have been identified as key priorities, and this series aims to provide targeted guidance for each, including best practices from daily consulting business.*&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2"&gt;*The current selection is based on our daily challenges and requests. We reserve the right to expand the scope with additional topics or adjust priorities as needed.&amp;nbsp;Miss something – say something.&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2"&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Area&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Summary and Intention&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Link&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="146px"&gt;Architecture and Setup&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="146px"&gt;&lt;UL&gt;&lt;LI&gt;Tenant Landscape (Account Setup according to BTP Guidance Framework)&lt;/LI&gt;&lt;LI&gt;tbd.&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="146px"&gt;tbd.&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="146px"&gt;Security and Compliance&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="146px"&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;User Role Management: Establish a clear authorization model, assigning roles such as Developer, AMS, and others.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Authentication &amp;amp; Authorization&lt;/LI&gt;&lt;LI&gt;Access Policies&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Security Monitoring (Leverage tools like SAP Enterprise Threat Detection to track audit and access logs, ensuring compliance and traceability)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="146px"&gt;&lt;OL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-user-management-integrating-sap-integration-suite-with-sap/bc-p/14072827" target="_self"&gt;Streamlining User Management&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;...&lt;/LI&gt;&lt;/OL&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="118px"&gt;&lt;P&gt;Lifecycle Management&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="118px"&gt;&lt;UL&gt;&lt;LI&gt;CI/CD for Integration Suite (&lt;SPAN&gt;Maintain version control for integration artifacts and automate deployments across environments (CI/CD))&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Version Control&lt;/LI&gt;&lt;LI&gt;Integration Suite API's&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="118px"&gt;tbd.&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="173px"&gt;&lt;P&gt;Change Management &amp;amp;&amp;nbsp;Quality Assurance&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="173px"&gt;&lt;UL&gt;&lt;LI&gt;SAP Cloud Transport Management (&lt;SPAN&gt;Establish a structured transport mechanism using SAP Cloud Transport Management Service (CTMS).)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;SAP Integration Suite - Naming Conventions&lt;/LI&gt;&lt;LI&gt;SAP Integration Suite Design Guidelines&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="173px"&gt;tbd.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="310px"&gt;&lt;P&gt;&lt;SPAN&gt;Monitoring and Troubleshooting&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="310px"&gt;&lt;UL&gt;&lt;LI&gt;Message monitoring (iFlows, APIs, adapters, SAP Application Interface Framework (AIF))&lt;/LI&gt;&lt;LI&gt;Alerting setup (email, webhook, SAP Alert Notification Service)&lt;/LI&gt;&lt;LI&gt;Integration with SAP Cloud ALM or external tools&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Implement detailed logging and trace capabilities for root cause analysis e.g. known Error Database&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="310px"&gt;tbd.&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="146px"&gt;Miscellaneous Topics&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="146px"&gt;&lt;UL&gt;&lt;LI&gt;Interface Repository (&lt;SPAN&gt;Setting up a centralized interface repository, e.g., with LeanIX or a tool of your choice)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;SAP Integration Suite Ai capabilities&lt;/LI&gt;&lt;LI&gt;SAP Integration Suite Expert Portal&lt;/LI&gt;&lt;LI&gt;...&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="146px"&gt;tbd.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Join the Conversation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;SAP Integration Suite is redefining enterprise integration by breaking down silos and connecting diverse systems across the business. Whether you're managing an SAP-centric landscape or a hybrid IT environment, its 360-degree Suite approach offers a comprehensive toolset for end-to-end integration and drives business innovation.&lt;/P&gt;&lt;P&gt;We’d love to hear your thoughts and experiences with SAP Integration Suite. What challenges are you facing? How can we help you unlock the full potential of your IT ecosystem?&amp;nbsp;&lt;/P&gt;&lt;P&gt;Feel free to use the comment section or reach out to us&lt;A href="mailto:IntegrationServicesBackoffice@global.corp.sap" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;via SAP Integration Services.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Modernize. Integrate. Innovate.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;H6 id="toc-hId--2042587098"&gt;&lt;STRONG&gt;History &amp;amp; What's New:&lt;/STRONG&gt;&lt;/H6&gt;&lt;TABLE border="1" width="44.4436985320444%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;STRONG&gt;Date&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;STRONG&gt;Update&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="2"&gt;2025.08.08&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;Initial Version &amp;amp; Kick-Off&amp;nbsp;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;Blogs: added User Management by&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/155880"&gt;@FrederickDimmer&lt;/a&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-operations-a-structured-blog-series/ba-p/14165436"/>
    <published>2025-08-18T14:51:22.540000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/sap-api-management-apikey-and-response-caching/ba-p/14184042</id>
    <title>SAP API Management - APIKey and Response Caching</title>
    <updated>2025-08-19T16:10:56.167000+02:00</updated>
    <author>
      <name>DenizZilyas</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/171723</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is Caching ?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In API Management, response caching allows us to deliver much faster responses to users by storing the results of repeated requests in the cache. This way, the backend doesn’t need to be invoked for every request, reducing unnecessary load on the system. As a result, performance increases, latency decreases, and backend resources are utilized more efficiently.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Scenario :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_0-1755608210130.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302425i28C9830A87701CD9/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_0-1755608210130.png" alt="DenizZilyas_0-1755608210130.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Caching doesn’t always mean storing the entire dataset. With query parameters, we can cache only the specific results that users request. In this scenario, the user makes an API call by defining certain conditions through query parameters, and the system responds faster by serving the cached result that matches those conditions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create API Proxy&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Configure --&amp;gt; APIs --&amp;gt; API Proxies --&amp;gt; Create&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_2-1755608672011.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302437i0D09AF7257E14FDD/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_2-1755608672011.png" alt="DenizZilyas_2-1755608672011.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Note :&amp;nbsp;The first step is usually to create an API provider; however, in my proxy I will not be using a provider. Instead, I will connect to the backend system directly via its URL.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Create Product&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Engage--&amp;gt; Products --&amp;gt; Create&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_3-1755608923591.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302439i3AEAC558321626B5/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_3-1755608923591.png" alt="DenizZilyas_3-1755608923591.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It’s not mandatory to create a product for every process; however, since we want the user to trigger our API with an API key, we need to create a product.&lt;/P&gt;&lt;P&gt;If we want, we can set quotas for our APIs. This is something we can define ourselves. For example, in this case I am adding a rule that allows up to 100 requests to this API within 10 months.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Create Application&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I am connecting to the Developer Hub from the Integration Suite screen. And I can see the products I created earlier.&lt;/P&gt;&lt;P&gt;Workspace --&amp;gt; Create&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_6-1755609276668.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302448iE5017E623C092E0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_6-1755609276668.png" alt="DenizZilyas_6-1755609276668.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_8-1755609490844.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302454i2294F26303C1C398/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_8-1755609490844.png" alt="DenizZilyas_8-1755609490844.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In this way, we have created an application key linked to this product.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: Policies&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We create API proxies to manage aspects such as security, performance, and routing. These controls are implemented through policies.&lt;/P&gt;&lt;P&gt;In this scenario, I implemented the user’s access to the API via an API key, as well as the caching process, through policies.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_10-1755609688263.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302458iE1472BD7CCC2F5B2/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_10-1755609688263.png" alt="DenizZilyas_10-1755609688263.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;VerifyAPIKey:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;DIV&gt;With this policy, we define the rule that allows access only if the user includes the API key created in the Developer Hub within the request header.&lt;/DIV&gt;&lt;DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_13-1755610108241.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302465iB856413CD0C65BAB/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_13-1755610108241.png" alt="DenizZilyas_13-1755610108241.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;lt;VerifyAPIKey async='true' continueOnError='false' enabled='true'&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;xmlns='&lt;A href="http://www.sap.com/apimgmt" target="_blank" rel="noopener noreferrer"&gt;http://www.sap.com/apimgmt&lt;/A&gt;'&amp;gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;&amp;lt;APIKey ref='request.header.x-api-key'/&amp;gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;lt;/VerifyAPIKey&amp;gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;Caching:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I don’t necessarily have to specify a query, but I used it here to make the scenario more specific. Users may not always send requests without queries, and this needs to be taken into account. Therefore, you can use any query parameters you wish to include.&lt;/P&gt;&lt;P&gt;I set the caching duration to 3600 seconds.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_12-1755610087799.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302463i1748ED6C88B64EF1/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_12-1755610087799.png" alt="DenizZilyas_12-1755610087799.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;lt;ResponseCache async="false" continueOnError="false" enabled="true" xmlns="&lt;A href="http://www.sap.com/apimgmt" target="_blank" rel="noopener noreferrer"&gt;http://www.sap.com/apimgmt&lt;/A&gt;"&amp;gt;&lt;BR /&gt;&amp;lt;CacheKey&amp;gt;&lt;BR /&gt;&amp;lt;KeyFragment ref="request.queryparam.$filter"/&amp;gt;&lt;BR /&gt;&amp;lt;KeyFragment ref="request.queryparam.$select"/&amp;gt;&lt;BR /&gt;&amp;lt;KeyFragment ref="request.queryparam.$top"/&amp;gt;&lt;BR /&gt;&amp;lt;KeyFragment ref="request.queryparam.$expand"/&amp;gt;&lt;BR /&gt;&amp;lt;KeyFragment ref="request.queryparam.$skip"/&amp;gt;&lt;BR /&gt;&amp;lt;KeyFragment ref="request.path"/&amp;gt;&lt;BR /&gt;&amp;lt;/CacheKey&amp;gt;&lt;BR /&gt;&amp;lt;Scope&amp;gt;Exclusive&amp;lt;/Scope&amp;gt;&lt;BR /&gt;&amp;lt;ExpirySettings&amp;gt;&lt;BR /&gt;&amp;lt;TimeoutInSec&amp;gt;3600&amp;lt;/TimeoutInSec&amp;gt;&lt;BR /&gt;&amp;lt;/ExpirySettings&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;lt;/ResponseCache&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;So how can I tell whether the data is coming from the cache or from the backend system? I previously mentioned that the purpose of caching is to return responses faster. When you trigger the API from Postman or any other system, you can check the response time. We will test this in the next step. Additionally, you can add a JavaScript code to your policy. If the timestamp does not change, you can conclude that the data was served from the cache.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_0-1755612448238.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302493i76FA3788FD4019BA/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_0-1755612448238.png" alt="DenizZilyas_0-1755612448238.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;var response = context.getVariable("response.content");&lt;/P&gt;&lt;P&gt;var serverTime = new Date().toISOString();&lt;/P&gt;&lt;P&gt;var updatedResponse = serverTime+response&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;context.setVariable("response.content", updatedResponse);&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Note: Since the other policies are related to the authentication of the service I want to access, I will not cover them here in order to stay on topic and avoid confusion. I will write a separate blog post about authentication policies in API Management.&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;For that reason, I will not go into the get token and set token steps.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5 : Testing&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As shown in the two test cases below, I can retrieve data from the API using the API key parameter sent in the request header. The first example is the initial call to the backend system, with a response time of 4.09 seconds. The second example returns the same query from the cache rather than the backend, with a response time of 431 ms.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_14-1755610853782.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302471i39712573B671B078/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_14-1755610853782.png" alt="DenizZilyas_14-1755610853782.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_0-1755612828761.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302495iCC29B784409629C8/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_0-1755612828761.png" alt="DenizZilyas_0-1755612828761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Summary :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Response caching delivers faster response times—improving user experience, especially for mobile users—while lowering backend load on SAP Graph or other backend systems. It also drives cost savings by avoiding redundant calls to pay-per-use services, increases API-quota efficiency by preventing rate-limit hits from repeated queries, and improves stability by allowing responses to continue even during backend outages.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_17-1755611137278.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302474i381E17641B1825EA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DenizZilyas_17-1755611137278.png" alt="DenizZilyas_17-1755611137278.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Thank you.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Deniz.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/sap-api-management-apikey-and-response-caching/ba-p/14184042"/>
    <published>2025-08-19T16:10:56.167000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/creating-an-ssi-wallet-for-an-issuer/ba-p/14184415</id>
    <title>Creating an SSI Wallet for an Issuer</title>
    <updated>2025-08-19T21:54:28.586000+02:00</updated>
    <author>
      <name>christianla</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1799258</uri>
    </author>
    <content>&lt;P&gt;SAP’s &lt;STRONG&gt;Decentralized Identity Verification&lt;/STRONG&gt; service enables organizations to manage and verify digital identities securely. While the &lt;STRONG&gt;Holder Wallet&lt;/STRONG&gt; is primarily used to receive and present verifiable credentials, it can be extended to &lt;STRONG&gt;issue&lt;/STRONG&gt; verifiable credentials as well. This extension allows organizations to act as &lt;STRONG&gt;credential issuers&lt;/STRONG&gt;, providing trusted digital proofs of identity, product attributes, and more.&lt;/P&gt;&lt;P&gt;This article explains how a &lt;STRONG&gt;wallet&lt;/STRONG&gt; can be created with the capability to issue &lt;STRONG&gt;Verifiable Credentials (VCs)&lt;/STRONG&gt; using SAP’s &lt;STRONG&gt;Administration Dashboard&lt;/STRONG&gt; or API.&lt;/P&gt;&lt;P&gt;An issuer wallet requires the following key components to function properly:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Signing Key:&lt;/STRONG&gt; The issuer wallet must include a specific signing key dedicated to signing Verifiable Credentials (VCs). This key is of the type `assertionMethod` and is referenced within the `didDocument` to enable secure and verifiable credential issuance.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Issuer Service Endpoint:&lt;/STRONG&gt; The `didDocument` must specify an issuer-specific service endpoint. This endpoint, of type `IssuerService`, enables interaction with the issuer's services, facilitating seamless communication between the issuer and credential holders (e.g. requesting verifiable credentials).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Metadata Endpoint:&lt;/STRONG&gt; A metadata endpoint must be provided. This service contains public issuer information, including a list of credential types the issuer is authorized and willing to issue for eligible holders.&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1737866510"&gt;Create an Identity with Issuer Functionality&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Create a new identity: Select the option to create a new pre-configured identity.&lt;/LI&gt;&lt;LI&gt;During the configuration process, ensure the protocols `dcp-holder` and `dcp-issuer` are selected. The `dcp-issuer` configuration will prepare the wallet for credential issuance:&lt;UL&gt;&lt;LI&gt;Generates the required &lt;EM&gt;signing key&lt;/EM&gt; of type `assertionMethod`, which is used for signing Verifiable Credentials.&lt;/LI&gt;&lt;LI&gt;Adds the issuer-specific &lt;EM&gt;service endpoint&lt;/EM&gt; (type: `IssuerService`) to the `didDocument`, facilitating issuer-related interactions.&lt;/LI&gt;&lt;LI&gt;Creates an empty &lt;EM&gt;metadata endpoint&lt;/EM&gt;, which can later be configured to host public metadata about the issuer, such as supported credential types and other issuer-related information.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="4_0 protocol.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302688iD21AB9CA5FEE060F/image-size/large?v=v2&amp;amp;px=999" role="button" title="4_0 protocol.png" alt="4_0 protocol.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;An issuer identity can be created via the API by specifying the dcp-holder and dcp-issuer protocols in the request payload.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;POST {div_srv}/api/v2.0.0/companyIdentities
Content-Type: application/json
Authorization: Bearer {token}
{
  "payload": {
    "bootstrap": {
      "description": "issuer",
      "name": "m-x issuer
     }
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-1541353005"&gt;Adding a Revocation List&lt;/H2&gt;&lt;P&gt;A revocation list is necessary to invalidate credentials when they become obsolete or compromised.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using the Administration Dashboard:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Navigate to &lt;STRONG&gt;Identity section&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Enable &lt;STRONG&gt;Revocation Support&lt;/STRONG&gt; and define the revocation mechanism.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="4_3 revoaction_list.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302689i3B5C04FB39EB8BD9/image-size/large?v=v2&amp;amp;px=999" role="button" title="4_3 revoaction_list.png" alt="4_3 revoaction_list.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using the API:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Create a revocation list with:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;POST {srv_url}/api/v2.0.0/companyIdentities/{Id}/revocationLists
Content-Type: application/json
Authorization: Bearer {token}
{
  "payload": {
    "create": {
      "type": "StatusList2021",
      "name": "List 1",
      "description": "Revocation list 1",
      "length": 2097152
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-1473922219"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1277408714"&gt;Adding the Issuer Configuration&lt;/H3&gt;&lt;P&gt;The credential types that the issuer is willing to issue need to be specified. Additionally, you can determine whether credential requests are processed automatically or manually. For automatic processing, you can specify whether all matching credentials or only the latest credential should be provided to the holder.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using the Administration Dashboard:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Navigate to &lt;STRONG&gt;Identity section&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Press the button &lt;STRONG&gt;Issuer Configuration&lt;/STRONG&gt; and maintain the credential types.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="4_4_Issuer-config-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302691i9D5E199B610EDE01/image-size/large?v=v2&amp;amp;px=999" role="button" title="4_4_Issuer-config-1.png" alt="4_4_Issuer-config-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the second step, you need to configure the issuer details. Access the issuer configuration by clicking the corresponding button on the company identity screen. To add a new issuer configuration for the selected company identity, select both the credential type and the approval mode. There are three ways an issuer can respond to credential requests when the requested credential has already been issued. With this configuration, you can determine whether credential requests are processed automatically or manually. For automatic processing, you also have the option to specify whether all matching credentials or only the latest credential should be issued to the holder. Additionally, you can add a schema to further define the credential structure. Make sure to save your changes to apply the new issuer configuration.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="4_4_Issuer-config-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302693i1F3A82DD61804161/image-size/large?v=v2&amp;amp;px=999" role="button" title="4_4_Issuer-config-2.png" alt="4_4_Issuer-config-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using the API:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Update the issuer configuration with:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;PATCH {div_ srv}/api/v2.0.0/companyIdentities/{id}/issuerConfigurations/{id}
Content-Type: application/json
Authorization: Bearer {token}

{
  "addCredentialTypes": [
  {
    "name": "CompanyCredential",
    "approvalMode": "all_vc",
    "schema": "{schema url}"
  }]
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-951812490"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-755298985"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;With these configurations in place, the &lt;STRONG&gt;wallet&lt;/STRONG&gt; is now fully equipped to act as a &lt;STRONG&gt;credential issuer&lt;/STRONG&gt;. Organizations leveraging SAP’s &lt;STRONG&gt;Decentralized Identity Verification&lt;/STRONG&gt; can now issue verifiable credentials, such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Manufacturing-X Credentials&lt;/STRONG&gt;, such as membership credentials for consortium participation.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Digital Product Passports (DPP)&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Product Carbon Footprint (PCF) Certificates&lt;/STRONG&gt; for sustainability verification.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This extension empowers organizations to participate in a trusted digital identity ecosystem.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Next step:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="http://community.sap.com/t5/technology-blog-posts-by-sap/configure-the-trust-list-in-a-decentralized-identity-verification-wallet/ba-p/14184434" target="_self"&gt;Configure the Trust List in a Decentralized Identity Verification Wallet&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Read more&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/self-sovereign-identity-ssi-a-usage-catalyst-for-dataspaces/ba-p/14054162" target="_blank"&gt;Self-Sovereign Identity (SSI): A Usage Catalyst for Dataspaces&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;SAP help: &lt;A href="https://help.sap.com/docs/DECENTRALIZED_IDENTITY_VERIFICATION/a1fc8fb2d89041b3849442692b2504b0/1de87842d394428f9ff729d1b27144f7.html?version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Company identity documentation&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://api.sap.com/api/DIV/resource/Wallet" target="_blank" rel="noopener noreferrer"&gt;API documentation in detail&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt; &lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/creating-an-ssi-wallet-for-an-issuer/ba-p/14184415"/>
    <published>2025-08-19T21:54:28.586000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/configure-the-trust-list-in-a-decentralized-identity-verification-wallet/ba-p/14184434</id>
    <title>Configure the Trust List in a Decentralized Identity Verification Wallet</title>
    <updated>2025-08-19T22:07:58.034000+02:00</updated>
    <author>
      <name>christianla</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1799258</uri>
    </author>
    <content>&lt;P&gt;SSI wallets have revolutionized the way users manage and present Verifiable Credentials (VCs) and Verifiable Presentations (VPs). However, these interactions often lack a formalized trust framework guiding which issuers are considered trustworthy.&lt;/P&gt;&lt;P&gt;A &lt;STRONG&gt;trust configuration&lt;/STRONG&gt; is a declarative policy, defining trusted entities (issuers). This configuration typically includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Trusted issuers' decentralized identifiers (DIDs)&lt;/LI&gt;&lt;LI&gt;(Optional) Accepted credential types&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If a trust configuration includes specific credential types, only those types from that issuer are trusted; if no types are specified, all credentials from the issuer are trusted. When a VC is presented for verification, DIV checks this list to determine whether the credential can be trusted based on the issuer and the credential type. This process ensures that only credentials from recognized and trusted issuers are accepted.&lt;/P&gt;&lt;P&gt;In the following figure, you can see that the verified verifiable credential is valid; however, the trusted issuer is not included in the trust list. &lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="6_0_Trust.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302696i55C5831865C8A963/image-size/large?v=v2&amp;amp;px=999" role="button" title="6_0_Trust.png" alt="6_0_Trust.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The trust list within the wallet serves a dual purpose. Apart from guiding verifiers during the validation of Verifiable Credentials and Presentations, it is also &lt;STRONG&gt;actively used by holders&lt;/STRONG&gt; to manage interactions with issuers - specifically when sending credential requests or accepting credential offers.&lt;/P&gt;&lt;P&gt;When a holder wants to send a credential request to an issuer, the trust list allows them to &lt;STRONG&gt;select from the credential types&lt;/STRONG&gt; supported by that issuer. This ensures that requests are aligned with what the issuer can provide, simplifying the credential issuance process.&lt;/P&gt;&lt;P&gt;For credential offers received from issuers, the trust list defines how these offers are handled:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Automatic Processing:&lt;/STRONG&gt; If the holder configures the trust list to process offers automatically, receiving a credential offer will immediately trigger an automatic credential request back to the issuer, streamlining the issuance without manual intervention.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Manual Processing:&lt;/STRONG&gt; Alternatively, if manual processing is selected, credential offers are stored, allowing the holder to review incoming offers at their convenience. The holder can then decide which offers to accept by explicitly sending credential requests, adding a layer of user control and consent before credential issuance.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This flexible approach empowers holders to customize their interaction flow with trusted issuers - balancing automation for convenience and manual oversight.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1737866571"&gt;How to Configure the Trust List in Decentralized Identity Verification&lt;/H2&gt;&lt;P&gt;To extend your Decentralized Identity Verification wallet with trust configuration for issuers, follow these steps:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Open the Trust Issuer Section&lt;/LI&gt;&lt;LI&gt;Add a Trusted Issuer: Click the &lt;STRONG&gt;Add&lt;/STRONG&gt; button to create a new trusted issuer entry.&lt;/LI&gt;&lt;LI&gt;Enter Issuer Details:&lt;OL&gt;&lt;LI&gt;Issuer DID: Input the decentralized identifier (DID) of the issuer you want to trust.&lt;/LI&gt;&lt;LI&gt;Select Application: Choose the relevant application for this trust relationship.&lt;/LI&gt;&lt;LI&gt;Choose Credential Types: Select from the list of credential types that the issuer supports. These types are fetched from the issuer’s metadata endpoint.&lt;/LI&gt;&lt;LI&gt;Set Processing Mode: Define how credential offers from this issuer should be handled - either automatically (immediate requests sent on receiving offers) or manually (review before requesting). &lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="6_1_Trust.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302697iDBD74D42EF7E3B46/image-size/large?v=v2&amp;amp;px=999" role="button" title="6_1_Trust.png" alt="6_1_Trust.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="6_2_Trust.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302698iA2D72008BE428D36/image-size/large?v=v2&amp;amp;px=999" role="button" title="6_2_Trust.png" alt="6_2_Trust.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using the API:&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;POST {div_srv}/api/v2.0.0/trustLists
Content-Type: application/json
Authorization: Bearer {token}

{
    "application": "catena-x-portal",
    "payload": {
      "name": "issuer",
      "did": "{issuerDID}",
      "ignoreMissingHashlist": false,
      "credentialTypeConfiguration": [
        {
        "credentialType": "MembershipCredential",
        "autoAcceptOffers": false
        },        {
        "credentialType": "CompanyCredential",
        "autoAcceptOffers": true
        }
      ] 
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;If no credential types appear in the selection list, it means that the issuer has not published supported credential types in the metadata endpoint of their issuer service. In this case, you may need to contact the issuer or wait for updated metadata.&lt;/P&gt;&lt;P&gt;Once configured, the wallet will use this trust information to both verify credentials from the issuer and to handle credential requests and offers according to your preferences.&lt;/P&gt;&lt;H2 id="toc-hId-1541353066"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;By extending your Decentralized Identity Verification wallet with a trust configuration, you empower verifiers to confidently validate credentials from trusted issuers while giving holders seamless control over requesting and managing verifiable credentials. This dual-function trust list enhances both security and user experience, supporting flexible workflows for automatic or manual processing of credential offers.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Next step:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Read more&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/self-sovereign-identity-ssi-a-usage-catalyst-for-dataspaces/ba-p/14054162" target="_blank"&gt;Self-Sovereign Identity (SSI): A Usage Catalyst for Dataspaces&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;SAP help: &lt;A href="https://help.sap.com/docs/DECENTRALIZED_IDENTITY_VERIFICATION/a1fc8fb2d89041b3849442692b2504b0/1de87842d394428f9ff729d1b27144f7.html?version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Company identity documentation&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://api.sap.com/api/DIV/resource/Wallet" target="_blank" rel="noopener noreferrer"&gt;API documentation in detail&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/configure-the-trust-list-in-a-decentralized-identity-verification-wallet/ba-p/14184434"/>
    <published>2025-08-19T22:07:58.034000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/custom-search-attributes-in-sap-b2b/ba-p/14185605</id>
    <title>Custom Search Attributes in SAP B2B</title>
    <updated>2025-08-20T20:21:52.573000+02:00</updated>
    <author>
      <name>vishakha_deshmukh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/839055</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Custom search attributes feature in SAP B2B scenarios can be used to enhance the search experience for users and help them find exactly what they are looking for. These attributes can be tailored to the specific needs of B2B buyers and sellers, such as industry-specific product features, technical specifications, pricing options, and more. By allowing users to filter search results based on these custom attributes, businesses can provide a more personalized and efficient search experience. Additionally, custom search attributes can also be used to gather valuable data on customer preferences and behavior, which can be leveraged to further optimize the B2B buying and selling process.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_0-1755711431845.png" style="width: 655px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303183i4B0C14ECFC71FDC6/image-dimensions/655x249/is-moderation-mode/true?v=v2" width="655" height="249" role="button" title="vishakha_deshmukh_0-1755711431845.png" alt="vishakha_deshmukh_0-1755711431845.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;High level Diagram for Custom Search in B2B Monitoring&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note that you can configure maximum of 10 custom search attributes for your B2B Messages per tenant&lt;/STRONG&gt;. &lt;STRONG&gt;Also, Custom Search Attributes with multiple values is supported now and the maximum length is 1000 characters.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s try to understand this with a use case for Outbound Transaction. Let’s say your Company sends IDOC Invoice D.01B message to Trading Partner. There are standard search attributes such as Sender Interchange Control Number, Sender Message Number, Receiver Interchange Control Number, Receiver Message Number etc. &amp;nbsp;With the configuration of Custom Search Attribute Invoice Number, you can easily find all the Invoice B2B Interchanges that you want by providing the Invoice Number in the filter in B2B Monitoring.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;How to configure?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Custom Search Attributes can be maintained for both Inbound as well as Outbound Transactions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Configure Custom Search Attributes in Configuration Manager in Trading Partner Management (TPM)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Login into the SAP Integration Suite and navigate to &lt;STRONG&gt;Design &amp;gt; B2B Scenarios.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2. Select the &lt;STRONG&gt;Configuration Manager&lt;/STRONG&gt; tab and choose &lt;STRONG&gt;Create &lt;/STRONG&gt;to create custom search attribute.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;STRONG&gt;Note&lt;/STRONG&gt;: &lt;STRONG&gt;Maximum of 10 custom search attributes can be created&lt;/STRONG&gt;)&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3. Enter a meaningful name in the &lt;STRONG&gt;Name&lt;/STRONG&gt; field and provide a description in the &lt;STRONG&gt;Description&lt;/STRONG&gt; field.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4. Choose &lt;STRONG&gt;Save&lt;/STRONG&gt;. The custom search attribute has been created successfully.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5. After creating custom search attributes, these attributes need to be assigned to the transactions for them to&amp;nbsp; reflect in B2B Monitor.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_1-1755711431856.png" style="width: 587px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303185i6A092F4F144DEC88/image-dimensions/587x317/is-moderation-mode/true?v=v2" width="587" height="317" role="button" title="vishakha_deshmukh_1-1755711431856.png" alt="vishakha_deshmukh_1-1755711431856.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Add Custom Search Attributes to Inbound/Outbound Transactions in Trading Partner Agreement (TPA)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Navigate to &lt;STRONG&gt;Design &amp;gt; B2B Scenarios.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2. Select&lt;STRONG&gt; Agreements &amp;gt; B2B Scenarios&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3. Select the transaction, navigate to &lt;STRONG&gt;Custom Search Attribute &lt;/STRONG&gt;tab and choose &lt;STRONG&gt;Add&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;In the resulting Dialog, maintain the following fields:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="148"&gt;&lt;P&gt;Field&lt;/P&gt;&lt;/TD&gt;&lt;TD width="330"&gt;&lt;P&gt;Description&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="148"&gt;&lt;P&gt;&lt;STRONG&gt;Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="330"&gt;&lt;P&gt;Select a value from the list of attributes that are created via Configuration Manager&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="148"&gt;&lt;P&gt;&lt;STRONG&gt;Source Type&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="330"&gt;&lt;P&gt;Select whether the source type is &lt;STRONG&gt;Parameter&lt;/STRONG&gt; or &lt;STRONG&gt;XPATH&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="148"&gt;&lt;P&gt;&lt;STRONG&gt;Source Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="330"&gt;&lt;P&gt;Enter the source value for the name. If &lt;STRONG&gt;Source type&lt;/STRONG&gt; is &lt;STRONG&gt;Parameter&lt;/STRONG&gt;, then enter the parameter here. If the &lt;STRONG&gt;Source type&lt;/STRONG&gt; is &lt;STRONG&gt;XPath&lt;/STRONG&gt;, then enter the XPath of the source value.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="148"&gt;&lt;P&gt;&lt;STRONG&gt;Data Source&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="330"&gt;&lt;P&gt;Select whether the data source should be &lt;STRONG&gt;Sender Interchange&lt;/STRONG&gt; or &lt;STRONG&gt;receiver Interchange&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_2-1755711431859.png" style="width: 720px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303184i24F92D2CB39B0BE6/image-dimensions/720x241/is-moderation-mode/true?v=v2" width="720" height="241" role="button" title="vishakha_deshmukh_2-1755711431859.png" alt="vishakha_deshmukh_2-1755711431859.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_3-1755711431867.png" style="width: 766px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303187i19210A95F375C11C/image-dimensions/766x310/is-moderation-mode/true?v=v2" width="766" height="310" role="button" title="vishakha_deshmukh_3-1755711431867.png" alt="vishakha_deshmukh_3-1755711431867.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In an IDOC message, the Custom Search Attribute &lt;STRONG&gt;Invoice Number&lt;/STRONG&gt; is taken from &lt;STRONG&gt;BELNR &lt;/STRONG&gt;segment which is&amp;nbsp;&lt;STRONG&gt;IDOC Document Number&lt;/STRONG&gt;. Custom Search Attribute for Invoice Number is taken from the XPath //E1EDK01/BELNR.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Just for reference, as depicted below in the highlighted area, you can see how the XPath is configured for fields with Qualifier.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_4-1755711431873.png" style="width: 670px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303188i248C9FB8906C2991/image-dimensions/670x295/is-moderation-mode/true?v=v2" width="670" height="295" role="button" title="vishakha_deshmukh_4-1755711431873.png" alt="vishakha_deshmukh_4-1755711431873.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If the &lt;STRONG&gt;Source Type&lt;/STRONG&gt; is &lt;STRONG&gt;Parameter&lt;/STRONG&gt;, the custom search attribute should be maintained in the Trading Partner Agreement (TPA) under &lt;STRONG&gt;Activity Parameters&lt;/STRONG&gt; tab in B2B Scenarios.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_5-1755711431875.png" style="width: 749px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303186iEE698C5AF512F4B5/image-dimensions/749x60/is-moderation-mode/true?v=v2" width="749" height="60" role="button" title="vishakha_deshmukh_5-1755711431875.png" alt="vishakha_deshmukh_5-1755711431875.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Header and properties would be resolved during runtime&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Once the Custom Search Attributes are created and defined, they should be used in the necessary B2B transactions in an agreement. These attributes are then pushed into Partner directory once the Trading Partner Agreement (TPA) is activated.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;B2B Monitor&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The incoming payload consists of the search values in XPath format and when the payload is parsed, the values are read and displayed in the B2B monitor.&lt;/P&gt;&lt;P&gt;In B2B Monitoring, navigate to &lt;STRONG&gt;Monitor &amp;gt; B2B Scenarios &amp;gt; Adapt Filters &lt;/STRONG&gt;and select your Custom Search Attribute e.g., Invoice Number.&lt;/P&gt;&lt;P&gt;Enter the Invoice Number for which you want to see the B2B Messages and you can see only those messages.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_6-1755711431884.png" style="width: 627px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303189iF4E20DF9E4ABEF56/image-dimensions/627x364/is-moderation-mode/true?v=v2" width="627" height="364" role="button" title="vishakha_deshmukh_6-1755711431884.png" alt="vishakha_deshmukh_6-1755711431884.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Custom Search Attributes is one of the important features in SAP B2B which allows you to search for interchanges based on the user-defined filters in the B2B Monitor section.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/custom-search-attributes-in-sap-b2b/ba-p/14185605"/>
    <published>2025-08-20T20:21:52.573000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/standard-integration-packages-plug-and-play-for-sap-sales-amp-service-cloud/ba-p/14185646</id>
    <title>Standard Integration Packages Plug-and-Play for SAP Sales &amp; Service Cloud v2 and ESM and Utlities</title>
    <updated>2025-08-20T21:41:47.227000+02:00</updated>
    <author>
      <name>Yogananda</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/75</uri>
    </author>
    <content>&lt;P&gt;In today's growing CRM demand faster, more agile implementations with minimal overhead. SAP understands this need and has responded with a new generation of &lt;STRONG&gt;standard integration packages&lt;/STRONG&gt; for &lt;STRONG&gt;SAP Sales &amp;amp; Service Cloud v2&lt;/STRONG&gt;, specially tailored for industries such as &lt;STRONG&gt;Utilities&lt;/STRONG&gt; and &lt;STRONG&gt;Enterprise Service Management (ESM)&lt;/STRONG&gt;. These pre-packaged solutions are designed for &lt;STRONG&gt;plug-and-play integration&lt;/STRONG&gt;, eliminating the need for extensive customization and ensuring rapid deployment and value realization.&lt;/P&gt;&lt;H2 id="toc-hId-1737898317"&gt;&lt;FONT color="#0000FF"&gt;Why Standard Integration Packages?&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;Traditionally, integration projects have required significant customization, consulting hours, and effort. This often led to increased costs, longer go-live timelines, and higher maintenance overhead. Standard integration packages reverse this model by offering:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Preconfigured scenarios&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Best practice processes&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Certified integration content&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Zero or minimal customization requirements&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These benefits help organizations streamline operations, reduce IT complexity, and accelerate time-to-value.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="e03e1f82a85eca206f3c59e58ad2ca1c.png" style="width: 800px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303204i3D6FD88259187E94/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="e03e1f82a85eca206f3c59e58ad2ca1c.png" alt="e03e1f82a85eca206f3c59e58ad2ca1c.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1541384812"&gt;&lt;FONT color="#FF6600"&gt;Key Features of the Standard Integration Packages&lt;/FONT&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-1473954026"&gt;1. &lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;Out-of-the-Box Integration&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;SAP provides prebuilt connectors and iFlows using &lt;STRONG&gt;SAP Integration Suite (formerly CPI)&lt;/STRONG&gt; to integrate SAP Sales &amp;amp; Service Cloud v2 with ESM solutions (e.g., SAP S/4HANA Service) and utility backends (e.g., IS-U, S/4HANA Utilities).&lt;/P&gt;&lt;H3 id="toc-hId-1277440521"&gt;2. &lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;Industry-Specific Scenarios&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;These packages cater specifically to industry needs:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Utilities&lt;/STRONG&gt;: Handle meter-to-cash processes, service request handling, complaint management, and field service coordination.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;ESM&lt;/STRONG&gt;: Manage enterprise-wide service requests, knowledge bases, approvals, and fulfillment workflows.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1080927016"&gt;3. &lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;Certified Integration Content&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;All integration content is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Published in the SAP API Business Hub&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Regularly updated and maintained by SAP&lt;/LI&gt;&lt;LI&gt;Based on &lt;STRONG&gt;SAP Best Practices&lt;/STRONG&gt; and aligned with &lt;STRONG&gt;standard APIs&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE border="1" width="95.99952730219414%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="25%" height="30px"&gt;&lt;FONT color="#FF00FF"&gt;&lt;STRONG&gt;Standard Integration Packages&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;&lt;FONT color="#FF00FF"&gt;&lt;STRONG&gt;Description of the Package contains&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%" height="57px"&gt;&lt;A href="https://api.sap.com/package/SAPSalesCloudVersion2IntegrationwithSAPCPQ/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Sales Cloud Version 2 Integration with SAP CPQ&lt;/SPAN&gt;&amp;nbsp;&lt;/A&gt;&lt;/TD&gt;&lt;TD width="25%" height="57px"&gt;&lt;SPAN&gt;Quote integration between SAP Sales Cloud Version 2 and SAP CPQ&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%" height="57px"&gt;&lt;A href="https://api.sap.com/package/SAPSalesCloudVersion2IntegrationforSalesProcesseswithSAPERP/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Sales Cloud Version 2 Integration for Sales Processes with SAP ERP&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD width="25%" height="57px"&gt;&lt;SPAN&gt;Integrate sales processes between SAP Sales Cloud Version 2 and SAP ERP.&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="57px"&gt;&lt;A href="https://api.sap.com/package/SAPSalesCloudVersion2IntegrationofSalesProcesseswithSAPS4HANAorSAPS4HANACloud/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Sales Cloud Version 2 Integration for Sales Processes with SAP S/4HANA&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD height="57px"&gt;&lt;SPAN&gt;Integrate sales processes between SAP Sales Cloud Version 2 and SAP S/4HANA&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="57px"&gt;&lt;A href="https://api.sap.com/package/SAPSalesCloudVersion2IntegrationforSalesProcesseswithSAPS4HANACloudPublicEdition/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Sales Cloud Version 2 Integration for Sales Processes with SAP S/4HANA Cloud Public Edition&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD height="57px"&gt;&lt;SPAN&gt;Integrate sales processes between SAP Sales Cloud Version 2 and SAP S/4HANA Cloud Public Edition&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="57px"&gt;&lt;A href="https://api.sap.com/package/CNSDevelopment/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Sales Cloud and SAP Service Cloud Version 2 Integration for Master Data with SAP S/4HANA&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD height="57px"&gt;&lt;SPAN&gt;Integrate master data between SAP Sales and SAP Service Cloud Version 2 and SAP S/4HANA&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%" height="80px"&gt;&lt;A href="https://api.sap.com/package/SAPSalesCloudandSAPServiceCloudVersion2IntegrationforMasterDatawithSAPS4HANACloud/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Sales Cloud and SAP Service Cloud Version 2 Integration for Master Data with SAP S/4HANA Cloud Public Edition&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD width="25%" height="80px"&gt;&lt;SPAN&gt;Integrate master data between SAP Sales and SAP Service Cloud Version 2 and SAP S/4HANA Cloud Public Edition&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="57px"&gt;&lt;A href="https://api.sap.com/package/QualtricsIntegrationwithSAPSalesCloudandServiceCloudVersion2/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;Qualtrics Integration with SAP Sales and Service Cloud Version 2&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD height="57px"&gt;&lt;SPAN&gt;Integration flow for integrating Qualtrics and SAP Sales and Service Cloud Version 2&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="57px"&gt;&lt;A href="https://api.sap.com/package/SAPServiceCloudVersion2IntegrationforMasterDatawithSAPERP/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Sales Cloud and SAP Service Cloud Version 2 Integration for Master Data with SAP ERP&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD height="57px"&gt;&lt;SPAN&gt;Integrate master data between SAP Sales and SAP Service Cloud Version 2 and SAP ERP&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="85px"&gt;&lt;A href="https://api.sap.com/package/cnsintegrationwithsfec/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Sales Cloud and SAP Service Cloud Version 2 Integration with SAP SuccessFactors Employee Central&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD height="85px"&gt;&lt;SPAN&gt;Employee replication from SAP SuccessFactors Employee Central to SAP Sales Cloud and SAP Service Cloud Version 2&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="85px"&gt;&lt;A href="https://api.sap.com/package/SalesCloudVersion2CustomerInsightsIntegrationwithSAPS4HANA/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;Sales Cloud Version 2 - Customer Insights Integration with SAP S/4HANA&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD height="85px"&gt;&lt;SPAN&gt;Integrated transactional data from SAP S/4HANA and SAP S/4HANA Cloud with Sales Cloud Version 2 - Customer Insights&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="85px"&gt;&lt;A href="https://api.sap.com/package/SAPServiceCloudIntegrationwithSAPS4HANAOnPremise/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Service Cloud Version 2 Integration with SAP S/4HANA&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD height="85px"&gt;&lt;SPAN&gt;Integration of service management processes between SAP Service Cloud Version 2 and SAP S/4HANA (Service Management)&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="85px"&gt;&lt;A href="https://api.sap.com/package/SAPServiceCloudV2forUtilitiesContractAccountIntegrationwithSAPS4HANA/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Service Cloud V2 for Utilities Contract Account Integration with SAP S/4HANA&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD height="85px"&gt;&lt;SPAN&gt;This package integrates Utilities Contract Account transactional data between SAP Service Cloud Version 2 and SAP S/4HANA&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="57px"&gt;&lt;A href="https://api.sap.com/package/SAPServiceCloudV2forUtilitiesMasterDataIntegrationwithSAPS4HANA/integrationflow" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Service Cloud V2 for Utilities Master Data Integration with SAP S/4HANA&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD height="57px"&gt;&lt;SPAN&gt;This package integrates Utilities master data between SAP Service Cloud Version 2 and SAP S/4HANA.&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;SPAN&gt;&lt;A href="https://api.sap.com/package/EnterpriseServiceIntegrationwithS4HanaCloud/integrationflow" target="_self" rel="noopener noreferrer"&gt;SAP Enterprise Service Management Integration with SAP S/4HANA Cloud&lt;/A&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;This integration package enables integration between SAP Enterprise Service Management and SAP S/4HANA Cloud.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-755330792"&gt;Resources Available to Customers&lt;/H2&gt;&lt;P&gt;Customers can access all relevant materials directly via:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":blue_book:"&gt;📘&lt;/span&gt; &lt;STRONG&gt;SAP API Business Hub&lt;/STRONG&gt;: Browse and explore integration packages, iFlows, and APIs&lt;/LI&gt;&lt;LI&gt;🧰 &lt;STRONG&gt;SAP Best Practices Explorer&amp;nbsp;&lt;/STRONG&gt;: Implementation guides, configuration wizards, and sample data&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":package:"&gt;📦&lt;/span&gt; &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;: Central platform to deploy and manage integrations&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-558817287"&gt;&lt;FONT color="#FF00FF"&gt;Conclusion&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;SAP’s standard integration packages for &lt;STRONG&gt;SAP Sales &amp;amp; Service Cloud v2&lt;/STRONG&gt; with &lt;STRONG&gt;ESM and Utilities&lt;/STRONG&gt; are a game-changer for businesses looking to simplify and speed up their digital transformation. With true plug-and-play functionality, these packages remove traditional barriers to integration and enable organizations to focus on delivering superior customer and service experiences — without the burden of custom development.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/standard-integration-packages-plug-and-play-for-sap-sales-amp-service-cloud/ba-p/14185646"/>
    <published>2025-08-20T21:41:47.227000+02:00</published>
  </entry>
</feed>
