<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Integration-Suite-blog-posts.xml</id>
  <title>SAP Community - SAP Integration Suite</title>
  <updated>2025-08-14T17:01:21.564138+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Integration Suite/pd-p/73554900100800003241" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Integration Suite blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-an-executive-introduction/ba-p/14171280</id>
    <title>SAP BTP - An Executive Introduction</title>
    <updated>2025-08-04T19:12:42.179000+02:00</updated>
    <author>
      <name>Terry_Penner</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/100672</uri>
    </author>
    <content>&lt;P&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1235"&gt;@timoelliott&lt;/a&gt;&amp;nbsp;is an innovation evangelist with SAP.&amp;nbsp; In this executive overview of&amp;nbsp;&lt;A href="https://www.sap.com/products/technology-platform.html" target="_blank" rel="noopener noreferrer"&gt;SAP Business Technology Platform,&lt;/A&gt;&amp;nbsp;&lt;SPAN&gt;Timo introduces the value of SAP BTP, its solutions, differentiators, key customer references and where to learn more.&amp;nbsp;&lt;/SPAN&gt;You can watch the &lt;A href="https://dam.sap.com/mac/embed/public/vp/a/fJaa1zM?rc=10&amp;amp;doi=SAP1224760&amp;amp;includeSapBrandedWraper=true" target="_blank" rel="noopener noreferrer"&gt;original video here&lt;/A&gt;&amp;nbsp;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-08-04 100202.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296196i65C6CC72B15F9B95/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-04 100202.png" alt="Screenshot 2025-08-04 100202.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You may have noticed there's a lot of chaos in the modern world. Change seems to be changing faster, from pandemics that turn the world upside down to big, unexpected tariff changes that disrupt the world's supply chains overnight. And since everything relies on technology these days, reacting quickly to market changes means changing your computer systems. And that's not always as easy as it should be.&lt;/P&gt;&lt;P&gt;I'm sure you've seen this quote before: "Since the dawn of time, the key to survival has always been the ability to change." And yet, more than 80% of companies responding to a recent survey from McKinsey said they did not feel well-prepared to deal with rising volatility.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Slide5.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296182i24363C9628CC4E55/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide5.JPG" alt="Slide5.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;What are organizations looking to achieve? Well, in order to deal with faster change, we need to transform transformation — accelerate our ability to innovate. In conversations with you, our customers, we find three key themes. First, companies are looking to better connect and coordinate their teams across internal silos so the company can act as one. Second, they're looking to take advantage of AI and automation to be able to adjust back-end systems faster than is possible when everything is done manually. Third, everyone wants to explore new business models: selling connected services rather than just products, or moving to subscription pricing, or developing more customized services, and so on.&lt;/P&gt;&lt;P&gt;So while it's difficult to create a formal ROI case for business agility, the reality is it makes the difference between surviving and thriving. The ability to change faster than the competition is one of THE biggest and most powerful differentiators you can have in your industry.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Slide6.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296183i729639E6B9E58903/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide6.JPG" alt="Slide6.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;But you don't need me to tell you that change is hard. You probably have lots of disparate, disconnected systems that have grown up over the years, and they all talk different languages. Maintenance probably takes up a big chunk of your time and resources. Making changes means wading into custom code and integrations and involves a lot of costs and above all, risk. These are, after all, the systems that keep your business running. And it can be difficult finding the people with the right skills to solve today's technology challenges. And the data backs this up.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;70% of CIOs say their current systems lack the agility to scale and integrate with modern technologies like AI. 80% of CIOs cite data quality and semantic challenges as their biggest obstacles to AI success. And 45% of businesses operating on legacy systems are less likely to adopt enterprise-wide AI due to technology limitations.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Slide8.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296184iD0897A88DFE05F06/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide8.JPG" alt="Slide8.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We all know that business transformation isn't about technology, but it certainly relies heavily on it. So the CIO has a critical role helping shepherd the competing demands from different areas of the business while maintaining a coherent technology strategy and governance. At SAP, our &lt;A href="https://www.sap.com/products/business-suite.html" target="_blank" rel="noopener noreferrer"&gt;Business Suite vision&lt;/A&gt; aims to enable CIOs as transformational chief innovation officers rather than just chief infrastructure officers. Where IT is a strategic partner for the organization, and goes beyond IT management to drive transformation: aligning technology with the business goals.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;SAP Business Technology Platform is what we use as the foundation for SAP's own innovations, and we have over 150 different applications running on the platform. But of course, we also make it available to you and our vast ecosystem of partners to help all areas of the business succeed, in partnership with the CIO. The platform is most often used by IT departments, but it's all about creating better business outcomes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Slide10.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296185i0E09B040A4693BB7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide10.JPG" alt="Slide10.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So what is &lt;A href="http://sap.com/btp" target="_blank" rel="noopener noreferrer"&gt;SAP BTP&lt;/A&gt;? Well, it's a multi-cloud platform-as-a-service to unlock the full potential of your business. Optimized to work with SAP solutions, it's a unified platform of best of breed technologies to extend and integrate business applications and to infuse artificial intelligence and context-aware business data into everything you do.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;We know that there are lots of different development environments out there, so when and why might SAP BTP be the right solution for your business needs? First, we've been in the business of business processes for decades. SAP BTP has out-of-the-box support to connect your processes and applications to just about any other system and application on the planet. Second, it's built for business. When you're designing something to extend your existing business applications and processes, there's no point reinventing the wheel. You can just quickly and easily leverage all the user object to security information that's already in your system. Third, we've been building AI into our applications for years, and while it's easy to do quick and powerful proof of concept projects with the latest gen AI technology, all the analyst research research shows that the vast majority of AI projects fail to go into production or add business value. We have deep expertise in helping our customers build mission-critical systems. We built robust assembly lines to integrate relevant, reliable and responsible business AI into all of our applications and we provide the same tested, production-ready tools to you. And finally, studies have proved that BTP adds value to other SAP Business Suite applications with a strong return on investment when BTP is deployed together with applications like SAP Cloud ERP, Successfactors, Ariba, and Finance.&lt;/P&gt;&lt;P&gt;SAP BTP is available globally with 42 data centers worldwide. It's helped over 33,000 customers achieve measurable impact across all industries and lines of business. Over 10,000 pre-built best practice artifacts speed up your time to value with pre-implemented workflows, and with a growing ecosystem of 3,200 partners that have built industry and line of business solutions on top of the platform, you're likely to find out-of-the-box solutions for your particular needs. And SAP BTP is recognized by leading analyst firms as a best in class vendor, leading in numerous technology categories.&lt;/P&gt;&lt;P&gt;Let's dive into the real content. SAP BTP covers five major solution areas: integration, application development and automation, artificial intelligence, data and analytics, and platform foundation. Let's look at each of these key areas in a bit more detail.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Slide17.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296186iF4D5EFE2F68480C6/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide17.JPG" alt="Slide17.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;First, integration. Integration is one of the most time consuming and painful parts of any innovation project today. Organizations typically juggle multiple integration solutions, creating complexity, which in turn leads to longer projects and disjointed systems that continue to jeopardize business resiliency. So how does Integration Suite help with these challenges? &lt;A href="https://www.sap.com/products/technology-platform/integration-suite.html" target="_blank" rel="noopener noreferrer"&gt;SAP Integration Suite&lt;/A&gt; is a modern, scalable, and secure integration platform-as-a-service, empowering businesses to integrate all applications, systems and data across all landscapes, with one solution offering comprehensive capabilities to accelerate productivity and ensure reliable connectivity. Thousands of pre-built content allow you to deploy faster and more easily, greatly increasing your time to value. There are over 3,900 built-in integrations, over 4,000 ready-to-use integration APIs for faster connectivity, and &lt;A href="https://www.sap.com/products/technology-platform/integration-suite.html?campaigncode=CRM-YJ25-BTP-3012044&amp;amp;url_id=gartner-magic-quadrant-for-intergration-suite&amp;amp;rc=https%3A%2F%2Fwww.gartner.com%2Freprints%2F%3Fid%3D1-2L1PIDWJ%26ct%3D250521%26st%3Dsb" target="_self" rel="noopener noreferrer"&gt;Gartner recently rated SAP Integration Suite a market leader&lt;/A&gt; for the fifth consecutive year running.&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/asset/dynamic/2024/02/aa091694-aa7e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;Harrods&lt;/A&gt;, the iconic luxury department store first opened its doors in Knightsbridge, London, in 1849. To support its digital transformation and strategic shift to a modern e-commerce platform, the company selected SAP Integration Suite to connect both cloud and on-premise technologies, internal and third-party systems across multiple protocols, all within a single platform. The result was a 40% reduction in total costs and 30% shorter process times, and with the standardization, Harrods can now more easily engage with partners and expand its global presence to meet increased customer demand in new markets, including China and the Middle East.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Slide22.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296187iFB80E1E44FE2DFB9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide22.JPG" alt="Slide22.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The second solution area for BTP is application development and automation. Building and extending enterprise applications with the wrong tools can be difficult and expensive, and deep collaboration between the business is always required for a successful outcome. Extensions need to be securely integrated with your core business systems. This is where &lt;A href="https://www.sap.com/products/technology-platform/build.html" target="_self" rel="noopener noreferrer"&gt;SAP Build&lt;/A&gt; comes in. It provides tools for all levels of expertise, from professional developers to power users who only want to drag and drop to create applications. Analyst studies show that &lt;A href="https://www.sap.com/documents/2025/02/5cf902d0-f37e-0010-bca6-c68f7e60039b.html" target="_self" rel="noopener noreferrer"&gt;SAP Build drives 3X developer productivity&lt;/A&gt; and you can start coding with natural language: AI now understands your business, technology, data, and context. Deep integration with SAP and non-SAP applications provides the fastest way to create an application, automated process, or business site in a clean-core way. There are already over 17,000 customers using SAP Build solutions.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;For example, in order to engage with the Gen Z audience, engineering multinational &lt;A href="https://www.sap.com/asset/dynamic/2024/06/225e0085-c67e-0010-bca6-c68f7e60039b.html" target="_self" rel="noopener noreferrer"&gt;ThyssenKrupp&lt;/A&gt; has launched a new social media recruiting channel. The core of this approach is an app built in-house using the low-code SAP Build Apps development environment, helping citizen developers create and manage workflows for different HR applications. The intuitive app empowers personnel in more than 100 different HR departments to quickly create application flows for different job types, without needing any coding skills. This helps ThyssenKrupp respond to changing recruitment requirements in an agile and efficient way.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Slide27.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296191iC7D064691547033E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide27.JPG" alt="Slide27.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The third solution area of BTP we’ll look at is artificial intelligence. We could obviously talk for hours about AI, but the key challenges are that there are not enough resources to adopt AI as quickly as everybody would like across the enterprise, that the business data required for scaling AI is typically very fragmented, and that large language models are not always accurate and trustworthy. The &lt;A href="https://www.sap.com/products/technology-platform/ai.html" target="_blank" rel="noopener noreferrer"&gt;AI in BTP&lt;/A&gt; is designed for trust. We have built a production-ready AI orchestration platform to allow you to embed AI into all of your business processes with confidence. We use that platform to provide over 230 individual use cases across the SAP Business Suite, and we're training specific AI models on high-quality, industry-specific tabular business data, and leveraging our deep process knowledge. In addition, AI is built into all of the BTP solutions such as Joule studio and Build for developers.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For example, when Germany was hit by a sharp rise in energy prices recently because of getting cut off from Russian gas, the &lt;A href="https://www.sap.com/assetdetail/2025/01/a2676ba3-ef7e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;City of Hamburg&lt;/A&gt; used SAP AI services and other solutions to efficiently process almost 100,000 applications relating to aid. The financial aid platform was launched in only two weeks, and allowed the city of Hamburg to start distributing €2.5 billion in special fund to public and private cultural institutions. It's an intuitive, self-service platform that leverages generative AI to support a digitalized application process for cultural events, including the initial request, the validity checks, objection handling and payment. BTP and AI greatly sped up the processing of the applications far quicker than would otherwise been possible.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Slide32.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296192iC0369B640FB01CAC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide32.JPG" alt="Slide32.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The fourth solution area of BTP is data and analytics provided by &lt;A href="https://www.sap.com/products/data-cloud.html" target="_blank" rel="noopener noreferrer"&gt;Business Data Cloud&lt;/A&gt;. Business users need data for all of their analytics planning needs in real time, with full business context. At SAP, we believe this requires integration between all data platforms and business applications with data products based on a one-domain model for consistency—and connecting insights and business decisions is now more important than ever in the new AI era. SAP Business Data Cloud accelerates the process of turning data into decisions with “insights-as-a-service”: pre-built, out-of-the-box analytic apps to help you make smart decisions faster. They leverage fully-managed, curated data products across all lines of business, providing advanced analytics and planning apps across core enterprise, analytics, finance, people, and much more. It unifies and governs all SAP data and seamlessly connects with third party data using Delta Sharing and Data Federation to connect all your data with zero copies. And you can easily create AI apps and AI models trained on your business data, using for example, SAP Databricks. That semantically-rich data helps ground your AI to ensure accurate outcomes with Joule Copilot to accelerate productivity and automate complex business processes. Data and AI governance is more important than ever. With SAP Business Data Cloud, business users get clean ownership with minimal engineering overhead.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Leading global airline group &lt;A href="https://www.sap.com/asset/dynamic/2023/08/6ed562f3-877e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;Lufthansa&lt;/A&gt; sought to harmonize critical data from siloed systems across its subsidiaries by integrating the SAP Datasphere solution, now part of Business Data Cloud, with a partner solution on SAP Business Technology platform. It federated SAP and third-party data while preserving key metadata, making it available for analytics and business intelligence. They took data from over 20 different cloud and on-premise systems scattered across various subsidiaries, and brought it all together for a consolidated 360 degree view of the organization's financial performance, with greater spend transparency across various source systems, helping deliver better margins and resilience.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Slide37.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296193i9C27830C3E1C7FAD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide37.JPG" alt="Slide37.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The fifth and final key solution area of BTP is the platform foundation. With threat vectors from many sources, companies are prioritizing security at the highest levels. At the same time, IT leaders need to streamline operations while providing the application scalability needed for the business to stay competitive. &lt;A href="https://discovery-center.cloud.sap/index.html" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP BTP Platform Foundation&lt;/A&gt; provides the secure, scalable and reliable foundation you need to innovate with confidence across your business suite. It provides all the critical functionality to deliver production-ready innovation environments. It provides efficient application lifecycle management; streamlined development with integrated access controls to ensure global identity security and compliance; a global platform abstraction layer for integration across all core hyperscalers provides flexibility for the future; secure connectivity is provided for all applications and data across hybrid environments; and there are automated management and performance tools to streamline administration and operations.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/asset/dynamic/2024/01/0c5d0561-a27e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;Mahindra Group&lt;/A&gt; has been an SAP customer for 25 years, enabling the conglomerate to grow and continuously innovate. And now they're leaping into a cloud-based digital future. With the RISE with SAP solution and SAP Business Technology Platform was a logical next step for the company. The BTP foundation capabilities allowed them to accelerate the development of their new mission-critical workloads, optimize IT costs with a scalable and on-demand cloud infrastructure, and meet sustainability goals by reducing carbon emissions from IT systems. They automated over 250 processes and gave business users more self-service functionality, saving over 1,000 workdays, giving them more time to work on more strategic tasks. And they were even able to decommission 194 different servers, leading to a much lower IT carbon footprint.&lt;/P&gt;&lt;P&gt;In summary, we've looked at the five key areas of BTP: integration, application development and automation artificial intelligence, data and analytics, and platform foundation. SAP BTP empowers you to integrate and extend business applications faster; connects systems and processes across the enterprise; and personalize applications for your business needs. Create business relevant apps with all your data: leverage SAP Business Data Cloud to build smarter applications and develop reliable AI solutions grounded in full business context. Innovate and accelerate with artificial intelligence: boost developer productivity with generative AI, securely infuse AI models into applications, and develop reliable AI solutions at scale.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Slide43.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296194iADC29B53B5E61213/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide43.JPG" alt="Slide43.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To close, I'd like to highlight &lt;/SPAN&gt;&lt;A href="https://www.sap.com/documents/2025/06/86cf4594-0a7f-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;a recent study from IDC&lt;/A&gt;&lt;SPAN&gt; that summarizes the value of BTP for SAP customers. Customers in the study, on average, found a three-year return on investment of over 500% and eight months to pay back their investment, with significantly higher productivity for their development teams.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;To find out more, please visit &lt;A href="http://sap.com/btp" target="_blank" rel="noopener noreferrer"&gt;sap.com/btp&lt;/A&gt; to learn everything you need about SAP’s technology platform for all applications. You can get started for free—&lt;A href="http://sap.com/trysapbtp" target="_blank" rel="noopener noreferrer"&gt;try before you buy&lt;/A&gt; to test drive the power of SAP BTP. And please join our growing community of SAP technology users to meet others facing the same business challenges and opportunities that you are, and get your SAP BTP questions asked and answered. I wish you the very best of luck with your projects. Thank you very much for your time and goodbye!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-an-executive-introduction/ba-p/14171280"/>
    <published>2025-08-04T19:12:42.179000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-ci-just-started-talking-to-ai-introducing-the-new-ai-adapter-for-sap/ba-p/14170748</id>
    <title>SAP CI Just Started Talking to AI : Introducing the new AI Adapter for SAP Integration Suite</title>
    <updated>2025-08-05T10:22:05.345000+02:00</updated>
    <author>
      <name>Punith_Oswal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/148179</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Ever wished your iFlow could talk to ChatGPT?&lt;/STRONG&gt;&lt;BR /&gt;Now it can! With SAP’s new &lt;STRONG&gt;AI Adapter&lt;/STRONG&gt;, your integrations can tap into the power of Large Language Models like OpenAI's GPT, making your processes smarter and more self-sufficient.&lt;/P&gt;&lt;P&gt;SAP has introduced a game-changing capability in its Integration Suite—the &lt;STRONG&gt;AI Adapter&lt;/STRONG&gt;. Whether you're connecting to &lt;STRONG&gt;SAP AI Core&lt;/STRONG&gt; via the GenAI Hub or tapping into &lt;STRONG&gt;OpenAI&lt;/STRONG&gt; through REST APIs, this adapter allows your integration flows to &lt;STRONG&gt;think&lt;/STRONG&gt;, &lt;STRONG&gt;respond&lt;/STRONG&gt;, and &lt;STRONG&gt;act&lt;/STRONG&gt; using the power of generative AI.&lt;/P&gt;&lt;P&gt;With the AI Adapter, integration is no longer just about connectivity—it’s about &lt;STRONG&gt;cognitive capability&lt;/STRONG&gt;. You’re not simply passing data; you’re enabling your iFlows to understand, reason, and generate intelligent output in real-time.&lt;/P&gt;&lt;DIV&gt;It unlocks a new era of integration where:&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;DIV&gt;Decisions are dynamic&lt;/DIV&gt;&lt;/LI&gt;&lt;LI&gt;&lt;DIV&gt;Responses are contextual&lt;/DIV&gt;&lt;/LI&gt;&lt;LI&gt;&lt;DIV&gt;Workflows are augmented with AI-driven intelligence&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Your iFlow is no longer silent. It can now &lt;STRONG&gt;ask, interpret, and respond&lt;/STRONG&gt;—like a real assistant embedded within your process.&lt;/P&gt;&lt;P&gt;From streamlining operations to enriching business workflows with human-like intelligence, the AI Adapter is a leap toward &lt;STRONG&gt;next-gen, AI-powered integration landscapes&lt;/STRONG&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1736826804"&gt;Key Features of the AI Adapter in SAP Integration Suite&lt;/H2&gt;&lt;P&gt;The &lt;STRONG&gt;AI Adapter&lt;/STRONG&gt; extends the power of SAP Integration Suite by enabling seamless integration with generative AI providers. It comes in two flexible variants and supports a wide range of intelligent capabilities:&lt;/P&gt;&lt;DIV&gt;&lt;STRONG&gt;Two Powerful Variants&lt;/STRONG&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;DIV&gt;&lt;U&gt;AICore-GenAIHub:&lt;/U&gt; Connects directly to SAP AI Core’s orchestration services to consume multiple GenAI models using a unified configuration and deployment setup.&lt;/DIV&gt;&lt;/LI&gt;&lt;LI&gt;&lt;DIV&gt;&lt;U&gt;Custom-OpenAI-REST&lt;/U&gt;: Connects to OpenAI’s public APIs, enabling integration with advanced LLMs (like ChatGPT) for tasks like text generation, classification, and more.&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;STRONG&gt;Secure Authentication Options&lt;/STRONG&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;DIV&gt;OAuth2 Client Credentials for the AICore-GenAIHub variant.&lt;/DIV&gt;&lt;/LI&gt;&lt;LI&gt;&lt;DIV&gt;API Key Alias (Secure Parameter) support for the Custom-OpenAI-REST variant.&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;STRONG&gt;Unified API Design&lt;/STRONG&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;DIV&gt;The AICore-GenAIHub variant uses a harmonized API, allowing you to switch between different foundational models without changing client code.&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;STRONG&gt;Custom-OpenAI-REST Capabilities&lt;/STRONG&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;DIV&gt;Full access to OpenAI’s powerful endpoints including Chat Completions, Platform metadata, Rich AI-generated responses and more&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;STRONG&gt;Dual Configuration Modes&lt;/STRONG&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;DIV&gt;Basic Mode: Simplified setup for common use cases and supported endpoints.&lt;/DIV&gt;&lt;/LI&gt;&lt;LI&gt;&lt;DIV&gt;Advanced Mode: Full control for experienced developers to call any API endpoint with custom headers, payloads, and processing logic.&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;There are countless possibilities when it comes to leveraging the AI Adapter in SAP Integration Suite—whether it’s intelligent document processing, language translation, content generation, or decision support. But in this blog, we’re focusing on a simple yet powerful scenario that highlights intelligent automation in action.&lt;/P&gt;&lt;H3 id="toc-hId-1669396018"&gt;Scenario: Generative AI-Augmented Error Handling&lt;/H3&gt;&lt;P&gt;In this walkthrough, we’ll use the &lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt; variant of the AI Adapter to build an iFlow that:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Detects a failed message&lt;/STRONG&gt; in your integration flow&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Sends the error details&lt;/STRONG&gt; to OpenAI’s GPT model via the AI Adapter&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Receives a context-aware resolution&lt;/STRONG&gt; from the AI model&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Creates a Jira ticket&lt;/STRONG&gt; automatically with the AI-suggested resolution&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;U&gt;Note&lt;/U&gt;: This is a foundational PoC that showcases how the capability can support exception handling. I hope it serves as a starting point for building more advanced and tailored solutions on top of it.&lt;/P&gt;&lt;H4 id="toc-hId-1601965232"&gt;Setting Up Your OpenAI Account and creation of API Key&lt;/H4&gt;&lt;P&gt;To integrate OpenAI with SAP Integration Suite using the &lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt; variant of the AI Adapter, you'll need an OpenAI account and an API key. Here's how to get started:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create/Open Your OpenAI Account&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;Go to &lt;A class="" href="https://platform.openai.com" target="_new" rel="noopener nofollow noreferrer"&gt;https://platform.openai.com&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Click Sign up / Log in&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AI 1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295905iBE33F006603D06A3/image-size/large?v=v2&amp;amp;px=999" role="button" title="AI 1.png" alt="AI 1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. Setup your account / Create Organization&lt;/P&gt;&lt;P&gt;4. Set a API key name and Project name&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_1-1754300477444.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295924i2883233822B53AE2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Punith_Oswal_1-1754300477444.png" alt="Punith_Oswal_1-1754300477444.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;5. Copy and securely store the API key (Caution:&lt;SPAN&gt;&amp;nbsp;This key is &lt;/SPAN&gt;shown only once&lt;SPAN&gt;—make sure to save it)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_3-1754300588455.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295926i5317FC94D57C3A9B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Punith_Oswal_3-1754300588455.png" alt="Punith_Oswal_3-1754300588455.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can check all the configurations by clicking on your profile at the Top right.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_4-1754300926975.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295928iF19084E007557996/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_4-1754300926975.png" alt="Punith_Oswal_4-1754300926975.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Activate Billing on Your OpenAI Account (Mandatory for API Access)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Having an OpenAI account and API key is not enough. You must have an active billing setup.&amp;nbsp; Earlier, OpenAI offered free trial credits ($5 to $18) to new accounts.&lt;BR /&gt;But as of 2024, trial credits are no longer guaranteed, especially for accounts from certain regions (like India).&lt;/P&gt;&lt;P&gt;So unless you’re explicitly granted trial usage, the default quota is $0 — and any API call will fail unless billing is enabled.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;How to Set Up Billing for OpenAI API Access&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Go to:&amp;nbsp;&lt;A href="https://platform.openai.com/account/billing/payment-methods" target="_blank" rel="noopener nofollow noreferrer"&gt;https://platform.openai.com/account/billing/payment-methods&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Click "Add payment method", and enter your debit/credit card details.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Once the card is added, you are automatically enrolled into a pay-as-you-go plan.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If your account has no active quota, you’ll see errors like:&lt;/P&gt;&lt;P&gt;Reason: Invoke api failed, urlPath:&lt;A href="https://api.openai.com/v1/chat/completions" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.openai.com/v1/chat/completions&lt;/A&gt; status:429 response: Too Many Requests&lt;BR /&gt;errorEntity:{&lt;BR /&gt;"error": {&lt;BR /&gt;"message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: &lt;A href="https://platform.openai.com/docs/guides/error-codes/api-errors" target="_blank" rel="noopener nofollow noreferrer"&gt;https://platform.openai.com/docs/guides/error-codes/api-errors&lt;/A&gt;.",&lt;BR /&gt;"type": "insufficient_quota",&lt;BR /&gt;"param": null,&lt;BR /&gt;"code": "insufficient_quota"&lt;BR /&gt;}&lt;BR /&gt;}&lt;/P&gt;&lt;P&gt;All set on OpenAI end, Now lets hop on to our very own SAP Cloud Integration.&lt;/P&gt;&lt;P&gt;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/P&gt;&lt;H3 id="toc-hId-1276369008"&gt;SAP Cloud Integration:&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;For this demonstration, I’ve created an iFlow that uses the &lt;/SPAN&gt;Google Pub/Sub Adapter&lt;SPAN&gt; with &lt;/SPAN&gt;intentionally incorrect KeyPair/Certificate&lt;SPAN&gt;, triggering a failure during message processing. This failure is caught by the &lt;/SPAN&gt;Exception Subprocess&lt;SPAN&gt;, where we harness the power of the &lt;/SPAN&gt;AI Adapter&lt;SPAN&gt; to analyze the error and fetch a resolution using AI.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The returned resolution is then added as an attachment to the MPL (Message Processing Log) for traceability. Additionally, based on an external parameter, we can optionally trigger the creation of a Jira ticket containing the AI-suggested fix.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_1-1754376173660.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296406i04DC89FDB991CF06/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_1-1754376173660.png" alt="Punith_Oswal_1-1754376173660.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This blog will cover only the Exception Sub Process, keeping the spotlight on error handling within integration flows.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;AI Adapter :&lt;/STRONG&gt; Use a Request-Reply and pick AI adapter of variant&amp;nbsp;Custom-OpenAI-REST from the dropdown.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_0-1754376083578.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296405iC1297752AAB9D390/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_0-1754376083578.png" alt="Punith_Oswal_0-1754376083578.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_2-1754314360359.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296091iEE27BFF1EED43075/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_2-1754314360359.png" alt="Punith_Oswal_2-1754314360359.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Connection Tab:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_3-1754314463739.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296102iB958233D9662ADB8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_3-1754314463739.png" alt="Punith_Oswal_3-1754314463739.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="57px"&gt;Address&lt;/TD&gt;&lt;TD width="50%" height="57px"&gt;Specify the OpenAI Address.&lt;BR /&gt;Example: &lt;A href="https://api.openai.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.openai.com&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;API Key Alias&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;P&gt;Specify the API Key alias. Create a Secure Parameter in the security artifact to store the API Key that we created in OpenAI Account.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Caution:&amp;nbsp;The value of API Key Alias must be a combination of&lt;BR /&gt;&amp;lt;Bearer &amp;gt; and {API Key provided by OpenAPI}.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Reuse Connection&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Enable to reuse the connection.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Connection Timeout (in&lt;BR /&gt;ms)&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Specify the maximum waiting time (in milliseconds) for the connection to be established.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Response Timeout (in ms)&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Specify the maximum waiting time (in milliseconds) for a response message.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;Processing Tab:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_4-1754314932195.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296120i7FE14358B3E36194/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_4-1754314932195.png" alt="Punith_Oswal_4-1754314932195.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Configuration Type&lt;/TD&gt;&lt;TD width="50%"&gt;Select the required configuration type:&lt;BR /&gt;• Basic to use the dropdowns and parameter text fields&lt;BR /&gt;• Advanced to specify the relative URL&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Category&lt;/TD&gt;&lt;TD width="50%"&gt;"Chat Completions" : The use case is about sending a prompt to the model and get the response&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Entity&lt;/TD&gt;&lt;TD width="50%"&gt;"Chat Completion"&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Operation&lt;/TD&gt;&lt;TD width="50%"&gt;"Create a model response for the given chat conversation"&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Request Payload&lt;BR /&gt;Source&lt;/TD&gt;&lt;TD width="50%"&gt;- "UI Configurable" provides user friendly fields to create the payload&lt;BR /&gt;automatically.&lt;BR /&gt;- "Exchange Body" allows you to specify required structure and&lt;BR /&gt;values&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Model&lt;/TD&gt;&lt;TD width="50%"&gt;You can select the model which is available to use for your openAI account. Make a GET call to this endpoint&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://api.openai.com/v1/models" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.openai.com/v1/models&lt;/A&gt;&amp;nbsp;to know the available models for your account&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Prompt&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Using&amp;nbsp;UI Configurable in this use case, this field gets visible where we need to enter the prompt that goes as a request to the AI model.&lt;/P&gt;&lt;P&gt;Prompt :&amp;nbsp;Suggest a possible solutions for the error : "${property.CamelExceptionCaught}" in 200 words plain text format. Do not include any special characters, double quotes and line breaks.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Request Headers&lt;/TD&gt;&lt;TD width="50%"&gt;Enter a list of custom headers, separated by a pipe (|), to be sent to the target system&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Response Headers&lt;/TD&gt;&lt;TD width="50%"&gt;Enter a list of headers, separated by a pipe (|), coming from the target system's response to be received in the message&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;JSON to XML Converter :&lt;/STRONG&gt; AI model returns the response in JSON format, it contains various fields, but our focus is on the "content" field which has the result. Its easier to extract the field from a XML file rather than a JSON. Hence there is a usage of&amp;nbsp;JSON to XML Converter.&lt;/P&gt;&lt;P&gt;Response from AI model:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AI 7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296167i4EF67D7BE8DEDD5C/image-size/large?v=v2&amp;amp;px=999" role="button" title="AI 7.png" alt="AI 7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_5-1754315940204.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296128iFF88ED63A636A773/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_5-1754315940204.png" alt="Punith_Oswal_5-1754315940204.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Content Modifier :&lt;/STRONG&gt; "Extract Resolution" is used to extract "content" field from the XML.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_6-1754315974729.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296129i50A39AD112037692/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_6-1754315974729.png" alt="Punith_Oswal_6-1754315974729.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Groovy Script&lt;/STRONG&gt; : LogAttachment We will log the resolution that we received from AI model as an attachment in the Message processing logs:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message;

def Message processData(Message message) 
{
    def body = message.getBody(String)
    def messageLog = messageLogFactory.getMessageLog(message);
    def resolution = message.getProperty("resolution") as String
    if(messageLog != null)
    {
    messageLog.addAttachmentAsString("Resolution", resolution, "text/plain");
    }
    return message;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Process Call :&lt;/STRONG&gt; "Call Jira", this process call executes the Call Jira local integration process. This is an optional configuration based on the External Parameter "CreateJiraCard", this is execute only when its value is "YES".&lt;/P&gt;&lt;P&gt;Jira Integration configuration is NOT covered in this blog, Check out the below blog for details related to Jira Integration.&lt;/P&gt;&lt;P&gt;&lt;A title="Jira Adapter for SAP Integration Suite" href="https://community.sap.com/t5/technology-blog-posts-by-members/jira-adapter-for-sap-integration-suite/ba-p/13930290" target="_self"&gt;Jira Adapter for SAP Integration Suite&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1079855503"&gt;Demo:&lt;/H3&gt;&lt;P&gt;Misconfiguration in GooglePubSub Adapter:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_7-1754316644348.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296133iFFB04E5EF5D39C8B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_7-1754316644348.png" alt="Punith_Oswal_7-1754316644348.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Keystore&lt;/STRONG&gt; : No keypair found for alias "googlekey123"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_8-1754316728207.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296134i2860C6F1A9B353F7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_8-1754316728207.png" alt="Punith_Oswal_8-1754316728207.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Deploying the flow:&lt;/STRONG&gt; Lets see how AI helps us with the resolution here.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_1-1754317588656.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296147i84DA42C8736F2F9F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_1-1754317588656.png" alt="Punith_Oswal_1-1754317588656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;MPL logs:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_10-1754317029904.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296140i41B862AC7776A01C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_10-1754317029904.png" alt="Punith_Oswal_10-1754317029904.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Attachment "Resolution": &lt;/STRONG&gt;Response from AI model can be seen in this attachment&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_12-1754317180686.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296142iCDE428ADCC5BECD8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_12-1754317180686.png" alt="Punith_Oswal_12-1754317180686.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Response from AI:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;One possible solution for the error "org.apache.camel.CamelException: No key pair found for Private Key Alias: googlekey123" is to ensure that the private key with the specified alias "googlekey123" is correctly added to the keystore or key repository being used by the application.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;First, you should confirm that the private key with the alias "googlekey123" exists in the keystore or key repository. If it does not exist, you may need to generate a new key pair with the correct alias and add it to the keystore.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Next, verify that the keystore or key repository configuration in the application matches the location and password of the keystore where the private key is stored. Make sure that the application has the necessary permissions to access the keystore.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;You may also need to restart the application to ensure that the changes in the keystore or key repository configuration take effect.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;If the issue persists, double-check the spelling of the alias "googlekey123" and verify that it is being referenced correctly in the application code.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;By following these steps, you should be able to resolve the error and successfully retrieve the private key with the alias "googlekey123" in your application.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The Integration also created a &lt;STRONG&gt;JIRA ticket&lt;/STRONG&gt; as shown below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AI 6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296143i185C56756F90ED50/image-size/large?v=v2&amp;amp;px=999" role="button" title="AI 6.png" alt="AI 6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_13-1754317344794.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296145iCCB6E10C2C65FAD9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_13-1754317344794.png" alt="Punith_Oswal_13-1754317344794.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Pretty cool, right? The AI instantly analyzed the error and answered with remarkably accurate resolution—&lt;/SPAN&gt;&lt;STRONG&gt;all within seconds&lt;/STRONG&gt;&lt;SPAN&gt;. No manual debugging, no digging through logs—just a smart, contextual answer delivered right when you need it.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This is where traditional error handling ends and &lt;STRONG&gt;intelligent integration&lt;/STRONG&gt; begins.&lt;/P&gt;&lt;P&gt;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/P&gt;&lt;H2 id="toc-hId-754259279"&gt;Conclusion: From Automation to Intelligence—This Is Just the Start&lt;/H2&gt;&lt;P&gt;With the &lt;STRONG&gt;AI Adapter&lt;/STRONG&gt;, your iFlows are no longer static pipelines—they become &lt;STRONG&gt;intelligent systems&lt;/STRONG&gt; that can analyze, respond, and act with precision. From generating real-time resolutions to automatically logging tickets in Jira, and even notifying teams via email or chat platforms like Microsoft Teams—the potential is endless.&lt;/P&gt;&lt;P&gt;It’s a a blueprint for building truly smart integration scenarios that adapt, learn, and evolve with your business needs.&lt;/P&gt;&lt;P&gt;We now stand at the edge of next-generation integration design, where AI is not a bolt-on, but a native capability within your flow logic.&lt;/P&gt;&lt;P&gt;The question is no longer &lt;EM&gt;what can you automate?&lt;/EM&gt;&lt;BR /&gt;It’s how far can you let your integrations think for you?&lt;/P&gt;&lt;P&gt;The future of integration is here—&lt;STRONG&gt;and it’s intelligent!!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;References&lt;/STRONG&gt;:&amp;nbsp;&lt;A title="AI Adapter for SAP Integration Suite" href="https://api.sap.com/package/AIAdapterforSAPIntegrationSuite/integrationadapter" target="_self" rel="noopener noreferrer"&gt;AI Adapter for SAP Integration Suite&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Up next&lt;/STRONG&gt; :&amp;nbsp;Curious about how the &lt;STRONG&gt;GenAI Hub variant of SAP AI Core&lt;/STRONG&gt; fits into enterprise scenarios? The next blog has you covered — with an exciting new use case!&lt;/P&gt;&lt;P&gt;Hope this helps!&lt;/P&gt;&lt;P&gt;Cheers,&lt;/P&gt;&lt;P&gt;Punith Oswal&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-ci-just-started-talking-to-ai-introducing-the-new-ai-adapter-for-sap/ba-p/14170748"/>
    <published>2025-08-05T10:22:05.345000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/using-self-sovereign-identity-and-questionnaire-vouchers-for-demand/ba-p/14172497</id>
    <title>Using Self-Sovereign Identity and Questionnaire Vouchers for Demand Collection</title>
    <updated>2025-08-05T16:44:51.144000+02:00</updated>
    <author>
      <name>christianla</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1799258</uri>
    </author>
    <content>&lt;P&gt;In the fast-evolving semiconductor industry, understanding market demand is both critical and challenging. Modern data spaces—secure, collaborative environments where multiple organizations share data—offer new opportunities for more targeted and privacy-preserving demand collection. One innovative approach combines Self-Sovereign Identity (SSI) and verifiable credential (VC) vouchers to streamline questionnaire management within these data spaces, balancing control, security, and participant autonomy.Scenario Overview&lt;/P&gt;&lt;P&gt;Imagine a data space consisting of several semiconductor manufacturers, suppliers, and customers who share and analyze market-relevant data. A central operator is responsible for orchestrating activities such as conducting demand questionnaires. When a new demand questionnaire is to be launched, the operator:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Creates the Questionnaire: The operator designs the survey and defines eligibility criteria.&lt;/LI&gt;&lt;LI&gt;Selects Participants: A selected set of companies are chosen to respond, based on criteria such as region, company type, or previous participation.&lt;/LI&gt;&lt;LI&gt;Issues Vouchers: For access control and tracking, the operator generates individual questionnaire vouchers, implemented as verifiable credentials (VCs).&lt;/LI&gt;&lt;LI&gt;Delivers Vouchers: Each selected participant receives their unique VC voucher in their SSI wallet.&lt;/LI&gt;&lt;LI&gt;Participant submits survey and uses voucher&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Participants wishing to respond must not only submit the completed questionnaire but also cryptographically prove their eligibility and participation using their questionnaire voucher.&lt;/P&gt;&lt;P&gt;Let's break down how this system works from a technical perspective.&lt;/P&gt;&lt;H2 id="toc-hId-1736883657"&gt;Implementing Questionnaire Vouchers with Self-Sovereign Identity&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Questionnaire Creation and Participant Selection&lt;/STRONG&gt;&lt;OL&gt;&lt;LI&gt;The central operator, with authority in the data space, defines the questionnaire’s structure and the set of questions to be asked.&lt;/LI&gt;&lt;LI&gt;The operator identifies a list of eligible participants (e.g., certain manufacturers or suppliers).&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Issuing Personalized Questionnaire Vouchers&lt;/STRONG&gt;&lt;OL&gt;&lt;LI&gt;For each selected participant, the operator creates a &lt;STRONG&gt;Questionnaire Voucher VC&lt;/STRONG&gt;. This digital VC attests that the holder is invited to respond to a specific questionnaire.&lt;/LI&gt;&lt;LI&gt;This voucher VC may include metadata such as: Questionnaire ID, Expiry date, Participant’s organizational identifier (may be pseudonymous), Operator’s signature and issuance timestamp. The voucher VC is cryptographically signed by the operator, serving as the issuer.&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Distributing Vouchers via SSI Wallets&lt;/STRONG&gt;&lt;OL&gt;&lt;LI&gt;Each participant has an SSI wallet—a secure application or service capable of receiving, storing, and presenting VCs.&lt;/LI&gt;&lt;LI&gt;The central operator pushes the individual voucher VC to each participant’s SSI wallet, typically via secure data space messaging protocols (like DCP).&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Participant Submission Process: &lt;/STRONG&gt;When a participant is ready to respond, the process is as follows: Identification &amp;amp; Eligibility Demonstration: The participant identifies with the questionnaire portal using a verifiable presentation (VP) including the &amp;nbsp;&lt;STRONG&gt;Questionnaire Voucher VC&lt;/STRONG&gt;. This proves to the operator that the submission is uniquely authorized for this questionnaire and prevents duplicate or unauthorized submissions.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Response Submission: &lt;/STRONG&gt;The participant fills in and submits the questionnaire through the portal, attaching the required VPs. The operator’s backend verifies the voucher, ensuring only authorized participants’ responses are accepted and counted. The operator revokes the voucher VC so that it can be used only once.&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1540370152"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1343856647"&gt;Example Setup Guide: SSI and Questionnaire Vouchers for Demand Collection&lt;/H2&gt;&lt;P&gt;The following guide outlines the steps for using SSI components for a demo of demand collection using Self-Sovereign Identity (SSI) and questionnaire voucher verifiable credentials (VCs) in a simulated semiconductor demand forecast environment.&lt;/P&gt;&lt;P&gt;The scenario involves an Operator—the trusted orchestrator—and a Participants—organization invited to respond to a new market demand questionnaire.&lt;/P&gt;&lt;H3 id="toc-hId-1276425861"&gt;Technical Stack&lt;/H3&gt;&lt;P&gt;This demo spotlights the core Self-Sovereign Identity (SSI) workflow for secure questionnaire access using SAP’s Decentralized Identity Verification (DIV). The example abstracts away the questionnaire application itself, focusing purely on the exchange and verification of Verifiable Credentials (VCs). The operator uses DIV to issue VCs (Membership and Questionnaire Voucher) and verify credential presentations. Each participant uses an DIV tenant to: Receive and store VCs and create verifiable presentations (VPs).&lt;/P&gt;&lt;H3 id="toc-hId-1079912356"&gt;Step 0: Prerequisites&lt;/H3&gt;&lt;P&gt;Before creating a DIV tenant, ensure that:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If you have not yet subscribed, go to the SAP Partner Portal and subscribe to the TDD license:&amp;nbsp;SAP Partner Portal - TDD License. Once subscribed, you get an DIV entitlement. In a second step the provisioning can be triggered from SAP for Me. Therefore you need a S-User with admin rights.&lt;/LI&gt;&lt;LI&gt;You have the necessary&amp;nbsp;administrative permissions&amp;nbsp;in SAP BTP to create tenants.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/provisioning-saps-self-sovereign-identity-wallet-decentralized-identity/ba-p/14054164" target="_blank"&gt;... more information&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-883398851"&gt;Step 1: Environment Preparation – Create DIV Tenants&lt;/H3&gt;&lt;H4 id="toc-hId-815968065"&gt;Operator Tenant Setup&lt;/H4&gt;&lt;P&gt;Set up a DIV tenant for the operator with both protocol roles: „dcp-holder“ and „dcp-issuer“.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;POST {provisioning_service}/api/v1.0.0/operations
Content-Type: application/json
Authorization: Bearer {token}

{
    "entity": "customer-wallet",
    "action": "provision",
    "payload":{
        "customerName": "operator",
        "customerId": "0",
        "divWalletServiceName": "main",
        "divWalletServiceParameters": {
            "applications":[{
                "application": "sc",
                "description": "sc",
                "companies": [
                    {
                        "name": "operator",
                        "protocols" : ["dcp-holder", "dcp-issuer"]
                    }
                ]
            }
            ]
        }
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-619454560"&gt;&amp;nbsp;&lt;/H4&gt;&lt;P&gt;&lt;EM&gt;Publish Credential Schema&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Define and publish the schemas for the required credential type (Voucher).&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;POST {div_srv}/api/v2.0.0/jsonSchemas
Content-Type: application/json
Authorization: Bearer {token}

{
  "application": "sc",
  "payload": {
    "schema": {
      "jsonSchema": {
        "$id": "https://example.com/schemas/voucher-credential-schema-V2.json",
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "SC Voucher",
        "description": "SC Voucher to submit a questionnaire",
        "type": "object",
        "properties": {
          "credentialSubject": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },              
              "voucherId": {
                "type": "string"
              },
              "questionnaire": {
                "type": "string"
              }            
            },
            "required": [
              "id",
              "voucherId"
            ]
          }
        }
      }
    },
    "name": "SC Voucher",
    "description": "SC Voucher"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;Configure Issuer Settings&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;In the operator tenant, configure the issuer to specify which credential types (voucher) it can issue, selecting the published schemas for each type.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// Get DID

GET {div_srv}/api/v2.0.0/companyIdentities
Content-Type: application/json
Authorization: Bearer {token}

// Get Issuer Configuration

GET {div_srv}/api/v2.0.0/companyIdentities/{id}/issuerConfigurations
Content-Type: application/json
Authorization: Bearer {token}

// Extend Issuer Configuration
PATCH {div_srv}/api/v2.0.0/companyIdentities/{id}/issuerConfigurations/{id}
Content-Type: application/json
Authorization: Bearer {token}

{
  "addCredentialTypes": [
  {
    "name": "voucher",
    "approvalMode": "last_vc",
    "schema": "{link to schema}"
  }]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Register Operators DID as a Trusted Issuer&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;To ensure the validity and trustworthiness of the issued Verifiable Credentials (VCs), it is necessary to register the issuer as a trusted issuer within the system. Only credentials issued by entities on the trusted issuer list will be recognized and accepted; this prevents the acceptance of credentials from unknown or unverified sources.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="trusted-issuer-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296792iFA6E0093A4A206BF/image-size/large?v=v2&amp;amp;px=999" role="button" title="trusted-issuer-1.png" alt="trusted-issuer-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="trusted-issuer-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296793i272A81032329E735/image-size/large?v=v2&amp;amp;px=999" role="button" title="trusted-issuer-2.png" alt="trusted-issuer-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// Add issuer to trust list
POST {{div_srv}/api/v2.0.0/trustLists
Content-Type: application/json
Authorization: Bearer {token}

{
    "application": "sc",
    "payload": {
      "name": "Operator",
      "did": "{operator DID}",
      "ignoreMissingHashlist": false,
      "credentialTypeConfiguration": [
        {
        "credentialType": "voucher",
        "autoAcceptOffers": true
        }
      ] 
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-422941055"&gt;Participant Tenant Setup&lt;/H4&gt;&lt;P&gt;For each participant, set up a DIV tenant with the protocol role: „dcp-holder“ (to receive and hold VCs and create presentations). Participants do not require issuer capabilities or schema configuration—only the ability to receive credentials and generate verifiable presentations.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// Provision DIV Wallet
POST {provisioning_srv}/api/v1.0.0/operations
Content-Type: application/json
Authorization: Bearer {token}
{
    "entity": "customer-wallet",
    "action": "provision",
    "payload":{
        "customerName": "Participant 1",
        "customerId": "1",
        "divWalletServiceName" : "main",
        "divWalletServiceParameters": {
            "applications":[{
                "application": "sc",
                "description": "sc",
                "companies": [
                    {
                        "name": "Participant 1",
                        "protocols" : ["dcp-holder"]
                    }
                ],
                "trustedIssuers": [{
                    "name" : "operator",
                    "did" : "{operator_did}",
                    "credentialTypeConfiguration": [
                        {
                        "credentialType": "voucher",
                        "autoAcceptOffers": true
                        }
                    ]
                }]
            }]
        }
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-97344831"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--174400043"&gt;Step 2: Issue and Offer Verifiable Credentials&lt;/H3&gt;&lt;P&gt;The operator is responsible for generating vouchers credentials for the participants. Once created, these credentials will be issued and offered directly to the participants. The process ensures that each participant receives a unique voucher credential, which can be later used to submit the demand questionnaire.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="issue-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296794i7ED52CE46DBDB320/image-size/large?v=v2&amp;amp;px=999" role="button" title="issue-1.png" alt="issue-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="issue-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296795i9BDE7783F6174FA4/image-size/large?v=v2&amp;amp;px=999" role="button" title="issue-2.png" alt="issue-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="issue-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296796iA00A0AA6BB7CA1BF/image-size/large?v=v2&amp;amp;px=999" role="button" title="issue-3.png" alt="issue-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// Create voucher VC
POST {div _srv}/api/v2.0.0/credentials
Content-Type: application/json
Authorization: Bearer {token}
{
    "application": "sc",
    "payload": {
        "issueWithSignature": {
            "content" : {
                "@context": [
                    "https://www.w3.org/2018/credentials/v1",
                    "https://www.w3.org/2018/credentials/examples/v1"
                ],
                "name": "Voucher for Participant 1",
                "description": "Demand submission voucher",
                "expirationDate": "2027-02-10T16:51:22.000Z",
                "type": [
                    "voucher"
                ],
                "issuer": "{Issuer DID}",
                "credentialSubject": {
                    "id": "{Holder DID}",
                    "name": "Participant 1",
                    "voucherId": "1234",
                    "questionnaire": "Demand 2026"
                },
                "credentialStatus": {
                    "id": "{revocation list}",
                    "type": "StatusList2021"
                },
                "credentialSchema": {
                    "id": "{schema link}",
                    "type": "JsonSchema"
                }
            },
            "signature" : {
                "proofMechanism" : "external", 
                "proofType" : "jwt"
            }
        }
    }
}

// Offer VC to Participant
POST {div_ srv}/api/v2.0.0/dcp/credentialOffers/send
Content-Type: application/json
Authorization: Bearer {token}
{
  "credentials": [
    "{vc id}"
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--370913548"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--567427053"&gt;Step 3: Participant Presents VCs for Questionnaire Submission&lt;/H3&gt;&lt;P&gt;Participant presents the required voucher VC as a verifiable presentation (VP). Therefore the participant has to create a verifiable presentation including the VC.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="presentation.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296797i5CD6EF9BDCC4BC07/image-size/large?v=v2&amp;amp;px=999" role="button" title="presentation.png" alt="presentation.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// Get Credentials
GET {div _srv}/api/v2.0.0/credentials
Content-Type: application/json
Authorization: Bearer {token}

// Create VP
POST {div _srv}/api/v2.0.0/presentations
Content-Type: application/json
Authorization: Bearer {token}
{
  "application": "sc",
  "payload": {
    "prove": {
      "@context": [
        "https://www.w3.org/2018/credentials/v1",
        "https://www.w3.org/2018/credentials/examples/v1"
      ],
      "type": [
        "QuestionnairePresentation"
      ],
      "holder": "{Participants DID}",
      "proofFormat": "jwt",
      "verifiableCredential": [
        {
          "jwt": "{Membership VC as JWT}"
        },
        {
          "jwt": "{Voucher VC as JWT}"
        }             
      ],
      "aud": "{Operator DID}"
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--763940558"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--960454063"&gt;Step 4: Operator Verifies the Verifiable Presentation&lt;/H3&gt;&lt;P&gt;The participant submits a Verifiable Presentation (VP) to the operator. The operator then validates the included Verifiable Credential (voucher) by performing the following checks: verifying that each VC has not been revoked, confirming that each VC was issued by a trusted issuer, ensuring that all VCs are still within their validity period (not expired), and validating the cryptographic signature on the presentation. Only if all these checks are successfully passed is the VP accepted.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="verify.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296808i1C10E4AE8FBD6925/image-size/large?v=v2&amp;amp;px=999" role="button" title="verify.png" alt="verify.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// Verify VP
POST {div_ srv}/api/v2.0.0/presentations/
Content-Type: application/json
Authorization: Bearer {token}

{
  "application" : "sc",
  "payload" : {
    "verify" : {
      "presentation" : "{presentation}"
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId--863564561"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1060078066"&gt;Step 5: Operator Revokes Used Voucher&lt;/H2&gt;&lt;P&gt;After a voucher is used, its associated verifiable credential is immediately revoked. This revocation ensures that the credential cannot be verified successfully a second time, thus preventing reuse or fraudulent redemption attempts.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;PATCH {{div_wallet_srv}}/api/v2.0.0/credentials/{{vc.response.body.data.0.id}}
Content-Type: application/json
Authorization: Bearer {{get_xsuaa_token.response.body.access_token}}

{
    "payload" : {
        "revoke" : true
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId--1256591571"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;By leveraging the power of Self-Sovereign Identity and verifiable credentials, questionnaire-driven demand collection in semiconductor data spaces becomes both secure and flexible. The voucher-based approach ensures invitations can’t be spoofed or misused, and that only intended participants contribute to strategic market analyses. As data sharing ecosystems mature, patterns like these will be crucial for trustworthy, privacy-preserving collaboration across industry boundaries.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1453105076"&gt;References&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/self-sovereign-identity-ssi-a-usage-catalyst-for-dataspaces/ba-p/14054162" target="_self"&gt;Self-Sovereign Identity (SSI): A Usage Catalyst for Dataspaces&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/DECENTRALIZED_IDENTITY_VERIFICATION/a1fc8fb2d89041b3849442692b2504b0/69d209bddb6e406088fb70b8e931c546.html?version=CLOUD" target="_self" rel="noopener noreferrer"&gt;SAP help: Documentation of the DIV Provisioning Service&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://api.sap.com/api/DIVProvisioning/resource/Operations" target="_self" rel="noopener noreferrer"&gt;API documentation&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-self-sovereign-identity-and-questionnaire-vouchers-for-demand/ba-p/14172497"/>
    <published>2025-08-05T16:44:51.144000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-cpi-dynamic-router-with-external-rule-set-using-camel-simple/ba-p/14172873</id>
    <title>SAP CPI Dynamic Router with External Rule Set using Camel Simple Expressions</title>
    <updated>2025-08-06T06:40:26.867000+02:00</updated>
    <author>
      <name>yeeloon-khoo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/184407</uri>
    </author>
    <content>&lt;H2 id="ember1061" id="toc-hId-1736887435"&gt;Intro&lt;/H2&gt;&lt;P class=""&gt;Routing in CPI can get messy. As more routing branches are added, maintaining them becomes a headache, especially when conditions get complex or frequently change.&lt;/P&gt;&lt;H2 id="toc-hId-1540373930"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="ember1063" id="toc-hId-1343860425"&gt;Background / Problem&lt;/H2&gt;&lt;P class=""&gt;I've explored a few ways to reduce this pain.&lt;/P&gt;&lt;P class=""&gt;One is &lt;STRONG&gt;convention-based processDirect routing&lt;/STRONG&gt;, e.g. building endpoint dynamically from headers like: /PD_${header.mestyp}_${header.rcvprn}. It’s simple and router-free, but can’t handle complex routing conditions.&lt;/P&gt;&lt;P class=""&gt;Another is using &lt;STRONG&gt;value mapping&lt;/STRONG&gt; for routing, lookup a field to get the processDirect path. See link at [Ref 1] &amp;amp; [Ref 2]. But VM has serious limits:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Only supports &lt;STRONG&gt;single &lt;/STRONG&gt;field matching&lt;/LI&gt;&lt;LI&gt;No clean way to do &lt;STRONG&gt;AND&lt;/STRONG&gt; logic without messy field concatenation&lt;/LI&gt;&lt;LI&gt;Can’t return &lt;STRONG&gt;multiple &lt;/STRONG&gt;matching rows&lt;/LI&gt;&lt;LI&gt;No support for &lt;STRONG&gt;rich conditions&lt;/STRONG&gt; like contains, startsWith, greaterThan, etc.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;If you try to simulate those rich conditions in VM, it gets hacky, need to embed pseudo-logic in values, then decode with Groovy. That’s fragile and hard to maintain.&lt;/P&gt;&lt;P class=""&gt;You could build your own rule engine, but that becomes a long-term maintenance trap. You’ll keep adding custom operators, fixing your own rule evaluation engine, and it won’t be standard. I wouldn’t go that route.&lt;/P&gt;&lt;H2 id="toc-hId-1147346920"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="ember1070" id="toc-hId-950833415"&gt;Inspiration&lt;/H2&gt;&lt;P class=""&gt;While revisiting the &lt;STRONG&gt;Dynamic Router pattern&lt;/STRONG&gt; from Gregor Hohpe’s EIP book and Apache Camel, I realized: CPI &lt;EM&gt;should&lt;/EM&gt; be able to support dynamic, flexible routing, if the conditions are externalized and evaluated at runtime.&lt;/P&gt;&lt;P class=""&gt;The core idea of a true Dynamic Router:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Rules are externally maintained&lt;/LI&gt;&lt;LI&gt;Easy to add/remove/update&lt;/LI&gt;&lt;LI&gt;Supports rich conditions (not just equals)&lt;/LI&gt;&lt;LI&gt;Still simple to implement&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Camel is the backbone of CPI, so I turned to &lt;STRONG&gt;Camel’s Simple Expression&lt;/STRONG&gt; language.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="ember1075" id="toc-hId-754319910"&gt;Research&lt;/H2&gt;&lt;P class=""&gt;After revisit a great blog [Ref 3] by Eng Swee, found out able to use evaluate() method to get value using Groovy, however, it doesn't return single true or false.&lt;/P&gt;&lt;P class=""&gt;Until at [Ref 4] Camel SimpleBuilder JavaDoc, found the method: matches()&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="ember1078" id="toc-hId-557806405"&gt;&lt;FONT size="5"&gt;Discovery&lt;/FONT&gt;&lt;/H2&gt;&lt;P class=""&gt;With SimpleBuilder.matches(), I can evaluate conditions like below with headers/properties in Groovy to Boolean true/false. Please note that for matches() method, Both ("and", "or") is not working, have to use actual operator (&amp;amp;&amp;amp;, II). Need double equal sign. Below 2 examples:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;${header.type} == 'SO' &amp;amp;&amp;amp; ${header.class} == 'A'
${header.partNumber.startsWith('FG')}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;This opened up new possibilities and a clean path: I can store rules as just two fields:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;endpoint (processDirect path)&lt;/LI&gt;&lt;LI&gt;condition (simple expression)&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Evaluate them in Groovy using matches(). If it returns true, route to that endpoint.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="ember1083" id="toc-hId-361292900"&gt;&lt;FONT size="5"&gt;How it work: Dynamic Simple Expression matches()&lt;/FONT&gt;&lt;/H2&gt;&lt;P class=""&gt;You can build "Simple Expression Tester" to test simple expression from Postman.&lt;/P&gt;&lt;P class=""&gt;Step 1: Build an iFlow like below. Allowed Header(s) must be *&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_1-1754452911299.png" style="width: 610px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296959iE1CC90D103F174B7/image-dimensions/610x314?v=v2" width="610" height="314" role="button" title="yeeloonkhoo_1-1754452911299.png" alt="yeeloonkhoo_1-1754452911299.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Step 2: Add the script testSimpleExpression.groovy that do evaluate() and matches() on some Simple Expression:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import org.apache.camel.Exchange
import org.apache.camel.builder.SimpleBuilder

def Message processData(Message message) {
    def headers = message.getHeaders()
  
    Exchange ex = message.exchange

    def evaluateSimple = { simpleExpression -&amp;gt;
        SimpleBuilder.simple(simpleExpression).evaluate(ex, String)
    }

    def matchSimple = { simpleExpression -&amp;gt;
        SimpleBuilder.simple(simpleExpression).matches(ex)
    }

    def condition = evaluateSimple('${header.condition}')
    def result = matchSimple(condition)

    def output = "condition: " + condition + "\r\n" + "result: " + result
    message.setBody(output)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Step 3: Positive Test Run. Header class &amp;amp; type matched the condition, result = true&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_19-1754453865709.png" style="width: 702px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296978i331C476B9A50F332/image-dimensions/702x545?v=v2" width="702" height="545" role="button" title="yeeloonkhoo_19-1754453865709.png" alt="yeeloonkhoo_19-1754453865709.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Step 4: Negative Test Run. Changed class from A to B, then result = false&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_20-1754453899438.png" style="width: 719px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296979i3FA323F0B16A1409/image-dimensions/719x598?v=v2" width="719" height="598" role="button" title="yeeloonkhoo_20-1754453899438.png" alt="yeeloonkhoo_20-1754453899438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Step 5: Tried with some other method like startsWith() still work. I not tried all possible method, however believe as long as the method work in Camel Simple Expression, will work in this iFlow too.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_21-1754453959882.png" style="width: 732px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296980i7CFDCD43BABBDEA7/image-dimensions/732x554?v=v2" width="732" height="554" role="button" title="yeeloonkhoo_21-1754453959882.png" alt="yeeloonkhoo_21-1754453959882.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Dynamic Router with External Rule Set (Simple Expression)&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;After testing and a few iterations, this worked well. So now ready to build a mini rule engine that is simple, dynamic, and avoids all the earlier pain points.&lt;/P&gt;&lt;P class=""&gt;Step 1: Below will be our rule set in JSON, telling the processDirect endpoint and condition. The name field is just as an identifier for the rule.&lt;/P&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;[
    {
        "name": "ReceiverA",
        "endpoint": "/PD_SO_A",
        "condition": "${header.type} == 'SO' &amp;amp;&amp;amp; ${header.class} == 'A'"
    },
    {
        "name": "ReceiverB",
        "endpoint": "/PD_PO_B",
        "condition": "${header.type} == 'PO' &amp;amp;&amp;amp; ${header.class} == 'B'"
    }
]&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Step 2: Build below 'Dynamic Router' iflow. For demo purpose, the sender is HTTP adapter. In actual you may change to processDirect. Allowed Header(s) must be *&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_5-1754453163834.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296963i149FF94F674A7990/image-size/large?v=v2&amp;amp;px=999" role="button" title="yeeloonkhoo_5-1754453163834.png" alt="yeeloonkhoo_5-1754453163834.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Step 3: That "getPDSimpleRule" script, for now you can just use content modifier set static JSON rule set to property "simpleRule". We going to change to Partner Directory later.&lt;/P&gt;&lt;P class=""&gt;Step 4: Script "doDynamicRouting". This script loop each rule, if condition matched, set the endpoint in property, also do logging in custom headers for traceability.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.json.JsonSlurper
import org.apache.camel.Exchange
import org.apache.camel.builder.SimpleBuilder

def Message processData(Message message) {
    def messageLog = messageLogFactory.getMessageLog(message)
    def properties = message.getProperties()

    Exchange ex = message.exchange
    def matchSimple = { simpleExpression -&amp;gt;
        SimpleBuilder.simple(simpleExpression).matches(ex)
    }
    def simpleRule = message.getProperty("simpleRule")
    def simpleRuleJSON = new JsonSlurper().parseText(simpleRule)

    properties.put("endpoint", "/not_found_from_rule")

    for(rule in simpleRuleJSON){
        def name = rule.name ?: ""
        def endpoint = rule.endpoint ?: ""
        def condition = rule.condition ?: ""

        def result = matchSimple(condition)

        if(result == true){
            messageLog.addCustomHeaderProperty("name", name)
            messageLog.addCustomHeaderProperty("condition", condition)
            messageLog.addCustomHeaderProperty("endpoint", endpoint)

            properties.put("endpoint", endpoint)
            break
        }
    }

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;Step 5: For demo, build 2 different receivers with processDirect. Each with sender address: /PD_SO_A and /PD_PO_B.&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_6-1754453294329.png" style="width: 722px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296964i7957BD1352DE11D6/image-dimensions/722x276?v=v2" width="722" height="276" role="button" title="yeeloonkhoo_6-1754453294329.png" alt="yeeloonkhoo_6-1754453294329.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_7-1754453301245.png" style="width: 711px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296965i43FDDC73DEA99C0B/image-dimensions/711x245?v=v2" width="711" height="245" role="button" title="yeeloonkhoo_7-1754453301245.png" alt="yeeloonkhoo_7-1754453301245.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Positive Test Run (Go to ReceiverA)&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_8-1754453332394.png" style="width: 722px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296966i6866E31217303DD0/image-dimensions/722x353?v=v2" width="722" height="353" role="button" title="yeeloonkhoo_8-1754453332394.png" alt="yeeloonkhoo_8-1754453332394.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_9-1754453339676.png" style="width: 721px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296967i8112BC8CDBF0E9C8/image-dimensions/721x226?v=v2" width="721" height="226" role="button" title="yeeloonkhoo_9-1754453339676.png" alt="yeeloonkhoo_9-1754453339676.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Positive Test Run (Go to ReceiverB)&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_10-1754453363443.png" style="width: 729px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296968i3A1E7D6F8D33D8ED/image-dimensions/729x382?v=v2" width="729" height="382" role="button" title="yeeloonkhoo_10-1754453363443.png" alt="yeeloonkhoo_10-1754453363443.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_11-1754453370341.png" style="width: 731px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296969i698259A4BF161D58/image-dimensions/731x230?v=v2" width="731" height="230" role="button" title="yeeloonkhoo_11-1754453370341.png" alt="yeeloonkhoo_11-1754453370341.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Negative Test Run (When no rule matches)&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_12-1754453411369.png" style="width: 723px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296970i8FF09AC86EE09D82/image-dimensions/723x350?v=v2" width="723" height="350" role="button" title="yeeloonkhoo_12-1754453411369.png" alt="yeeloonkhoo_12-1754453411369.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="6"&gt;&lt;STRONG&gt;Where To Store The Rule Set?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;One possible way is to store Json rule set in Partner Directory. SAP CPI do have UI to upload JSON to Partner Directory. Below are steps to upload JSON to Partner Directory:&lt;/P&gt;&lt;P&gt;Step 1: At CPI Monitor, go to 'Partner Directory'&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_13-1754453448667.png" style="width: 726px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296971i4FCA0935EEB344BF/image-dimensions/726x393?v=v2" width="726" height="393" role="button" title="yeeloonkhoo_13-1754453448667.png" alt="yeeloonkhoo_13-1754453448667.png" /&gt;&lt;/span&gt;&lt;P&gt;Step 2: Click '+' to add:&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_14-1754453473223.png" style="width: 727px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296972iEC35698C02872843/image-dimensions/727x250?v=v2" width="727" height="250" role="button" title="yeeloonkhoo_14-1754453473223.png" alt="yeeloonkhoo_14-1754453473223.png" /&gt;&lt;/span&gt;&lt;P&gt;Step 3: Maintain like below, browse to JSON rule set file, then 'Create'.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_15-1754453490322.png" style="width: 719px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296973iF6E60BA3CCB0190E/image-dimensions/719x408?v=v2" width="719" height="408" role="button" title="yeeloonkhoo_15-1754453490322.png" alt="yeeloonkhoo_15-1754453490322.png" /&gt;&lt;/span&gt;&lt;P class=""&gt;Step 4: After maintain, you should see like below:&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_16-1754453515700.png" style="width: 725px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296974iE72E49A562C64EEC/image-dimensions/725x281?v=v2" width="725" height="281" role="button" title="yeeloonkhoo_16-1754453515700.png" alt="yeeloonkhoo_16-1754453515700.png" /&gt;&lt;/span&gt;&lt;P&gt;Step 5: Replace the step 'getPDSimpleRule' with below script. This script get simpleRule JSON from Partner Directory.&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import com.sap.it.api.pd.PartnerDirectoryService
import com.sap.it.api.ITApiFactory
import com.sap.it.api.pd.BinaryData

def Message processData(Message message) {
    def service = ITApiFactory.getApi(PartnerDirectoryService.class, null);
    if(service == null){
        throw new IllegalStateException("Partner Directory Service not found");
    }

    def simpleRuleData = service.getParameter("SimpleRule", "DynamicRouter" , BinaryData.class)
    def simpleRule = new String(simpleRuleData.getData())

    message.setProperty("simpleRule", simpleRule)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Step 6: If future need to maintain the JSON rule set, come here, Edit..&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_17-1754453602659.png" style="width: 731px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296975i3E420371E824C31B/image-dimensions/731x463?v=v2" width="731" height="463" role="button" title="yeeloonkhoo_17-1754453602659.png" alt="yeeloonkhoo_17-1754453602659.png" /&gt;&lt;/span&gt;&lt;P&gt;then just Browse and upload updated JSON rule file. Filename doesn't matter, Partner Directory will auto rename.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_18-1754453622241.png" style="width: 714px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296976i102DE7669A18D00C/image-dimensions/714x369?v=v2" width="714" height="369" role="button" title="yeeloonkhoo_18-1754453622241.png" alt="yeeloonkhoo_18-1754453622241.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="6"&gt;&lt;STRONG&gt;Closing Summary&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;This approach doesn’t aim to replace complex rule engines, but for many real-world routing needs, it strikes the right balance: flexible, simple, and maintainable. If you’ve struggled with hardcoded routers or limited value mappings in CPI, this might be a cleaner path forward.&lt;/P&gt;&lt;P&gt;What do you think about this approach?&lt;/P&gt;&lt;P&gt;If you’ve tackled similar routing challenges in CPI, I’d be curious how you approached it. Feel free to share your thoughts, improvements, or alternative ideas.&lt;/P&gt;&lt;P&gt;Disclaimer: This is a pattern I sparked from EIP pattern(Dynamic Router) and made workable in CPI, but it hasn’t been used in real production environments yet. Use it at your own discretion.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="6"&gt;References&lt;/FONT&gt;:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;[Ref 1] &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/idoc-dispatching-use-case-for-the-processdirect-adapter/ba-p/13384618" target="_self"&gt;IDOC Dispatching - Use case for the ProcessDirect Adapter&lt;/A&gt;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/98357"&gt;@ArielBravo&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 2] &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-cloud-integration-idoc-receiver-handler/ba-p/13514402" target="_self"&gt;SAP Cloud Integration IDoc Receiver Handler&lt;/A&gt;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/218793"&gt;@aayushaggarwal&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 3] &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/using-camel-s-simple-in-cpi-groovy-scripts/ba-p/13367923" target="_self"&gt;Using Camel's Simple in CPI Groovy scripts&lt;/A&gt;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/166843"&gt;@engswee&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 4] &lt;A href="https://www.javadoc.io/doc/org.apache.camel/camel-core/2.15.0/org/apache/camel/builder/SimpleBuilder.html#matches(org.apache.camel.Exchange)" target="_self" rel="nofollow noopener noreferrer"&gt;Class SimpleBuilder JavaDoc&lt;/A&gt;&amp;nbsp;from Apache Camel&lt;/P&gt;&lt;P&gt;[Ref 5] &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/eipincpi-dynamic-router/ba-p/13437056" target="_self"&gt;EIPinCPI - Dynamic Router&lt;/A&gt;&amp;nbsp;&amp;amp; &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/eipincpi-message-dispatcher/ba-p/13460165" target="_self"&gt;EIPinCPI - Message Dispatcher&lt;/A&gt;&amp;nbsp;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/169903"&gt;@bhalchandraswcg&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 6] &lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/get-to-know-camel-s-simple-expression-language-in-sap-cloud-integration/ba-p/13292822" target="_self"&gt;Get to know Camel’s Simple expression language in SAP Cloud Integration&lt;/A&gt;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/40"&gt;@MortenWittrock&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 7]&amp;nbsp;&lt;A href="https://www.enterpriseintegrationpatterns.com/patterns/messaging/DynamicRouter.html" target="_self" rel="nofollow noopener noreferrer"&gt;DynamicRouter EIP&lt;/A&gt;&amp;nbsp;from Enterprise Integration Patterns (&lt;A href="https://www.enterpriseintegrationpatterns.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.enterpriseintegrationpatterns.com/&lt;/A&gt;)&lt;/P&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-cpi-dynamic-router-with-external-rule-set-using-camel-simple/ba-p/14172873"/>
    <published>2025-08-06T06:40:26.867000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/optimized-idoc-routing-in-sap-ci-with-value-mapping-and-groovy-based/ba-p/14164335</id>
    <title>Optimized IDoc Routing in SAP CI with Value Mapping and Groovy-Based Receiver Determination</title>
    <updated>2025-08-08T10:07:51.299000+02:00</updated>
    <author>
      <name>ShreyasShenoy07</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1510706</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736018569"&gt;&lt;STRONG&gt;Target Audience&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;This blog is primarily intended for the SAP Integration community seeking a strategy for &lt;STRONG&gt;routing outbound IDoc flows&lt;/STRONG&gt; from SAP ECC or S/4HANA systems—particularly for those migrating from &lt;STRONG&gt;SAP PI/PO to SAP Cloud Integration (Formerly known as SAP Cloud Platform Integration or SAP CPI)&lt;/STRONG&gt; and exploring effective alternatives to implement the same.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1539505064"&gt;Motivation&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In traditional SAP PI/PO-based landscapes, routing outbound IDocs from SAP ECC or S/4HANA systems is straightforward. A &lt;STRONG&gt;single t-RFC destination&lt;/STRONG&gt; and &lt;STRONG&gt;IDoc port&lt;/STRONG&gt; are typically configured in the sender system to forward all IDocs to SAP PI. Within SAP PI, routing is managed efficiently using the &lt;STRONG&gt;Integration Directory&lt;/STRONG&gt; and &lt;STRONG&gt;centralized runtime (AEX)&lt;/STRONG&gt;, enabling reuse of a &lt;STRONG&gt;single IDoc destination&lt;/STRONG&gt; across multiple interfaces and message types (MATMAS, INVOIC, DEBMAS, etc).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_1-1753943278457.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294339i9CFB79236AC288C6/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShreyasShenoy07_1-1753943278457.png" alt="ShreyasShenoy07_1-1753943278457.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;However, when migrating to &lt;STRONG&gt;SAP Cloud Integration&lt;/STRONG&gt;, this simplicity is disrupted. Cloud Integration does not provide an equivalent mechanism for managing IDoc traffic using a central gateway or common destination. Instead, each interface often requires its own &lt;STRONG&gt;unique&lt;/STRONG&gt; &lt;STRONG&gt;endpoint, destination, and port&lt;/STRONG&gt;, making the configuration effort &lt;STRONG&gt;redundant and makes IDoc Routing complex&amp;nbsp; and operationally challenging, as part of this blog&lt;FONT color="#FF0000"&gt; I wanted to tackle these challenges and simplify this. &lt;FONT size="2" color="#000000"&gt;(* I wont go into the specific challenges of the different approches and rather focus on the problems I am trying to solve in the current approach)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_3-1753944514940.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294349iE1B2982CA7BAD14F/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShreyasShenoy07_3-1753944514940.png" alt="ShreyasShenoy07_3-1753944514940.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1342991559"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1146478054"&gt;&lt;STRONG&gt;Solution Approach:&lt;BR /&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_4-1753944610345.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294350i031118EDBDC1D2FC/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShreyasShenoy07_4-1753944610345.png" alt="ShreyasShenoy07_4-1753944610345.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As described in the flow above, we will implement the design using &lt;STRONG&gt;two iFlows&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;IF_SAP_to_Generic_IDOCRouting&lt;/STRONG&gt;:&lt;BR /&gt;This iFlow receives IDoc XML messages from various SAP systems. It is responsible for &lt;STRONG&gt;receiver determination&lt;/STRONG&gt; and routes the message to the appropriate target iFlow based on routing logic.&lt;BR /&gt;In SAP PI/PO terminology, this iFlow handles the &lt;STRONG&gt;Inbound Processing&lt;/STRONG&gt; and &lt;STRONG&gt;Receiver Determination&lt;/STRONG&gt; steps of the integration pipeline.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;IF_SAP_to_&amp;lt;Receiver&amp;gt;_&amp;lt;Interface Description&amp;gt;&lt;/STRONG&gt;:&lt;BR /&gt;This iFlow is specific to the receiver system and handles &lt;STRONG&gt;transformation, mapping&lt;/STRONG&gt;, and other receiver-specific processing.&lt;BR /&gt;In SAP PI/PO terms, this iFlow corresponds to the &lt;STRONG&gt;Interface Determination&lt;/STRONG&gt; and &lt;STRONG&gt;Outbound Processing&lt;/STRONG&gt; steps of the integration pipeline.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1079047268"&gt;&lt;STRONG&gt;IF_SAP_to_Generic_IDOCRouting&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShreyasShenoy07_3-1753938581456.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294314iB2D9605AB6E12964/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShreyasShenoy07_3-1753938581456.png" alt="ShreyasShenoy07_3-1753938581456.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1011616482"&gt;&lt;U&gt;Step 1: Extract Details from&lt;STRONG&gt;&amp;nbsp;EDI_DC40&amp;nbsp;&lt;/STRONG&gt;of IDoc xml and create&lt;/U&gt;&lt;STRONG&gt;&lt;U&gt;&amp;nbsp;Exchange properties&lt;/U&gt;:&amp;nbsp;&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The IDoc routing in this flow primarily relies on &lt;STRONG&gt;Value Mappings&lt;/STRONG&gt; and &lt;STRONG&gt;Groovy scripts&lt;/STRONG&gt;. In this step, the necessary inputs and variables are initialized—these are later used in Groovy script execution to extract routing details from the configured Value Mappings.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753752660293.png" style="width: 565px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293039i38CD6DBBAEECEED4/image-dimensions/565x198?v=v2" width="565" height="198" role="button" title="ShreyasShenoy07_0-1753752660293.png" alt="ShreyasShenoy07_0-1753752660293.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;STRONG&gt;For example&lt;/STRONG&gt;, consider a sender system &lt;STRONG&gt;Q10&lt;/STRONG&gt; (the quality environment of the x10 SAP system with client number 001) sending an &lt;STRONG&gt;INVOIC IDoc with an extension type ZINVOIC01&lt;/STRONG&gt;. The properties are initialized as below.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShreyasShenoy07_0-1753855230088.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293675i3ED23E572A630EFB/image-size/small?v=v2&amp;amp;px=200" role="button" title="ShreyasShenoy07_0-1753855230088.png" alt="ShreyasShenoy07_0-1753855230088.png" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShreyasShenoy07_1-1753855452674.png" style="width: 527px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293680iFA66E3B149753CFB/image-dimensions/527x151?v=v2" width="527" height="151" role="button" title="ShreyasShenoy07_1-1753855452674.png" alt="ShreyasShenoy07_1-1753855452674.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The &lt;STRONG&gt;sentReceiverCount&lt;/STRONG&gt; variable is initialized to zero and is later used during processing when the same IDoc meets conditions for &lt;STRONG&gt;multiple receivers&lt;/STRONG&gt;, ensuring it is sent to each applicable receiver accordingly.&lt;/P&gt;&lt;H4 id="toc-hId-815102977"&gt;&lt;U&gt;Step 2: Fetch&amp;nbsp;&lt;STRONG&gt;Receiver List&amp;nbsp;&lt;/STRONG&gt;for the&amp;nbsp;&lt;STRONG&gt;IDOC&amp;nbsp;&lt;/STRONG&gt;from the Value Mapping tables using Exchange properties:&lt;BR /&gt;&lt;/U&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;SPAN&gt;For this we would need to maintain two value mappings&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H5 id="toc-hId-747672191"&gt;&lt;SPAN&gt;Value Mapping for&amp;nbsp;&lt;STRONG&gt;Sender Partner Number&lt;/STRONG&gt; to &lt;STRONG&gt;Sender Identifier Conversion&lt;/STRONG&gt;:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753857368060.png" style="width: 566px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293732i06106918904C2B47/image-dimensions/566x242?v=v2" width="566" height="242" role="button" title="ShreyasShenoy07_0-1753857368060.png" alt="ShreyasShenoy07_0-1753857368060.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-60px" style="text-align : justify; padding-left : 60px;"&gt;&lt;STRONG&gt;As an example&lt;/STRONG&gt;, I have maintained the details of SAP systems &lt;STRONG&gt;x10&lt;/STRONG&gt; and &lt;STRONG&gt;x20&lt;/STRONG&gt; across their &lt;STRONG&gt;Development&lt;/STRONG&gt;, &lt;STRONG&gt;Quality&lt;/STRONG&gt;, and &lt;STRONG&gt;Production&lt;/STRONG&gt; environments. You would similarly maintain all relevant SAP systems and their corresponding identifiers in the &lt;STRONG&gt;Value Mapping&lt;/STRONG&gt; used for IDoc routing. This mapping typically requires updates only when &lt;STRONG&gt;new SAP systems are added&lt;/STRONG&gt; or &lt;STRONG&gt;existing systems are migrated (when SIDs change)&lt;/STRONG&gt;, which are relatively infrequent events.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H5 id="toc-hId-551158686"&gt;&lt;SPAN&gt;Value Mapping for ReceiverList, Receiver Determination and Receiver Target IFlow URls:&lt;/SPAN&gt;&lt;/H5&gt;&lt;P class="lia-align-justify lia-indent-padding-left-60px" style="text-align : justify; padding-left : 60px;"&gt;The second &lt;STRONG&gt;Value Mapping&lt;/STRONG&gt; is maintained for each unique combination of &lt;STRONG&gt;SAP sender system&lt;/STRONG&gt; and &lt;STRONG&gt;IDoc type&lt;/STRONG&gt;.&lt;BR /&gt;For example, to define receiver determination conditions for the &lt;STRONG&gt;IDOC:&amp;nbsp;INVOIC.INVOIC01.ZINVOIC01&lt;/STRONG&gt; sent from the SAP system &lt;STRONG&gt;x10&lt;/STRONG&gt;, you would create a corresponding Value Mapping entry as shown below.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753869386606.png" style="width: 700px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293819iEB528661945AE51C/image-dimensions/700x290?v=v2" width="700" height="290" role="button" title="ShreyasShenoy07_0-1753869386606.png" alt="ShreyasShenoy07_0-1753869386606.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The ValueMapping will have 3 Mapping with agency as &lt;STRONG&gt;x10.INVOIC.INVOIC01.ZINVOIC01 (sender Identifier&lt;/STRONG&gt;.&lt;STRONG&gt;IDOC)&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;IDOCName to ReceiverList&lt;/STRONG&gt; : This mapping holds a list of all receivers applicable for a specific IDoc.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;ReceiverName to ReceiverCondition&lt;/STRONG&gt;: This defines the &lt;STRONG&gt;receiver determination condition&lt;/STRONG&gt; for each receiver. The conditions should be maintained using &lt;STRONG&gt;XPath expressions&lt;/STRONG&gt; to evaluate the IDoc content dynamically.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_1-1753869746094.png" style="width: 656px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293820i4EA51D75A75B461D/image-dimensions/656x155?v=v2" width="656" height="155" role="button" title="ShreyasShenoy07_1-1753869746094.png" alt="ShreyasShenoy07_1-1753869746094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;ReceiverName to ReceiverIFlowAddress:&lt;/STRONG&gt; This maps each receiver to the &lt;STRONG&gt;endpoint URL&lt;/STRONG&gt; of its corresponding integration flow (&lt;A href="#toc-hId-1146478054" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;IF_SAP_to_&amp;lt;Receiver&amp;gt;_&amp;lt;Interface Description&amp;gt;&lt;/STRONG&gt;&lt;/A&gt;) , as described earlier in the solution approach.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_2-1753869917703.png" style="width: 657px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293821i51E043843F980362/image-dimensions/657x315?v=v2" width="657" height="315" role="button" title="ShreyasShenoy07_2-1753869917703.png" alt="ShreyasShenoy07_2-1753869917703.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Now that we've covered how the &lt;STRONG&gt;Value Mappings&lt;/STRONG&gt; are maintained, let’s look at how the &lt;STRONG&gt;Groovy script&lt;/STRONG&gt;&amp;nbsp;fetches the appropriate values:&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;U&gt;1. Fetch senderIdentifier&lt;/U&gt;&lt;BR /&gt;&lt;/STRONG&gt;The &lt;STRONG&gt;senderIdentifier&lt;/STRONG&gt; is retrieved using the exchange property &lt;STRONG&gt;senderPartnerNumber&lt;/STRONG&gt; (set in &lt;A href="#toc-hId-1011616482" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;step 1&lt;/STRONG&gt;).&lt;/A&gt; This value is looked up from the&amp;nbsp;&lt;STRONG&gt;&lt;A href="#toc-hId-747672191" target="_self" rel="nofollow noopener noreferrer"&gt;first ValueMapping.&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Example&lt;/STRONG&gt;:&lt;BR /&gt;If a message is sent from system &lt;STRONG&gt;Q10&lt;/STRONG&gt; with sender partner number &lt;STRONG&gt;Q10_001&lt;/STRONG&gt;, the senderIdentifier fetched from the Value Mapping would be &lt;STRONG&gt;x10&lt;/STRONG&gt;.&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;&lt;U&gt;2. Construct Agency Key&lt;/U&gt;&lt;BR /&gt;&lt;/STRONG&gt;Using the &lt;STRONG&gt;senderIdentifier&lt;/STRONG&gt; and other exchange properties (set in &lt;STRONG&gt;&lt;A href="#toc-hId-1011616482" target="_self" rel="nofollow noopener noreferrer"&gt;step 1&lt;/A&gt;&lt;/STRONG&gt;), the &lt;STRONG&gt;agency key&lt;/STRONG&gt; is constructed. This key will be used to retrieve routing information from the &lt;STRONG&gt;&lt;A href="#toc-hId-551158686" target="_self" rel="nofollow noopener noreferrer"&gt;second ValueMapping.&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;U&gt;Agency Format:&lt;/U&gt;&lt;BR /&gt;&lt;FONT color="#FF0000"&gt;&amp;lt;senderIdentifier&amp;gt;.&amp;lt;messageType&amp;gt;.&amp;lt;IDocType&amp;gt;[.&amp;lt;extensionType&amp;gt;]&lt;/FONT&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;senderIdentifier&lt;/STRONG&gt; – from first Value Mapping&lt;STRONG&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;messageType &lt;/STRONG&gt;– from exchange property&lt;STRONG&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;IDocType &lt;/STRONG&gt;– from exchange property&lt;STRONG&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;extensionType&lt;/STRONG&gt; – from exchange property (optional)&lt;BR /&gt;&lt;STRONG&gt;Example:&lt;BR /&gt;For an INVOIC IDoc of type INVOIC01 with extension ZINVOIC01 sent from system x10, the agency would be: x10.INVOIC.INVOIC01.ZINVOIC01&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;&lt;U&gt;3. Fetch Receiver List&lt;/U&gt;&lt;BR /&gt;&lt;/STRONG&gt;Using the constructed agency key, the receiver list is retrieved from the &lt;STRONG&gt;&lt;A href="#toc-hId-551158686" target="_self" rel="nofollow noopener noreferrer"&gt;second ValueMapping.&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Example&lt;/STRONG&gt;:&lt;BR /&gt;For the agency &lt;STRONG&gt;x10.INVOIC.INVOIC01.ZINVOIC01&lt;/STRONG&gt;, the receiver list will be:&lt;BR /&gt;&lt;STRONG&gt;Receiver1&lt;/STRONG&gt;, &lt;STRONG&gt;Receiver2&lt;/STRONG&gt;, &lt;STRONG&gt;Receiver3&lt;BR /&gt;&lt;/STRONG&gt;Value Mapping sample call:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;valueMapApi.getMappedValue(
  'x10.INVOIC.INVOIC01.ZINVOIC01', 'IDOCName', 
  'INVOIC.INVOIC01.ZINVOIC01', 'x10.INVOIC.INVOIC01.ZINVOIC01', 
  'ReceiverList')&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-225562462"&gt;&lt;U&gt;&lt;FONT&gt;Step3: Execute&lt;STRONG&gt;&amp;nbsp;Receiver Determination Conditions&amp;nbsp;&lt;/STRONG&gt;(Groovy Script) from&amp;nbsp;&lt;/FONT&gt;&lt;FONT size="3"&gt;Value Mapping&lt;/FONT&gt;&lt;/U&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The Groovy script then iterates through the receiver list, fetching the corresponding receiver determination condition for each receiver and evaluating it against the IDoc content using XPath.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;// Fetch condition from Value Mapping
currentReceiverCondition = valueMapApi.getMappedValue(
  'x10.INVOIC.INVOIC01.ZINVOIC01',
  'ReceiverName',
  'Receiver1',
  'x10.INVOIC.INVOIC01.ZINVOIC01',
  'ReceiverCondition'
)
// Evaluate condition
def expr = xpath.compile(currentReceiverCondition as String)
def result = expr.evaluate(doc, XPathConstants.BOOLEAN)&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;If the condition evaluates to &lt;STRONG&gt;true&lt;/STRONG&gt;, the receiver is added to the exchange property &lt;STRONG&gt;determinedReceivers&lt;/STRONG&gt;. A counter variable &lt;STRONG&gt;determinedReceiverCount&lt;/STRONG&gt; is also maintained to track how many receivers matched successfully.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753885613367.png" style="width: 642px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294084i7BAA79E06D809669/image-dimensions/642x255?v=v2" width="642" height="255" role="button" title="ShreyasShenoy07_0-1753885613367.png" alt="ShreyasShenoy07_0-1753885613367.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;At the end of this step, three additional exchange properties will be available: &lt;STRONG&gt;determinedReceivers&lt;/STRONG&gt;, &lt;STRONG&gt;determinedReceiverCount&lt;/STRONG&gt;, and &lt;STRONG&gt;IDOCName&lt;/STRONG&gt; (which holds the constructed agency key).&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;In the example discussed, lets consider if the conditions are satisfied for &lt;STRONG&gt;Receiver2&lt;/STRONG&gt; and &lt;STRONG&gt;Receiver3&lt;/STRONG&gt;, then the &lt;STRONG&gt;determinedReceivers &lt;/STRONG&gt;list will contain both, and the &lt;STRONG&gt;determinedReceiverCount&lt;/STRONG&gt; will be set to &lt;STRONG&gt;2&lt;/STRONG&gt;.&lt;BR /&gt;The &lt;STRONG&gt;IDOCName &lt;/STRONG&gt;property (i.e., the &lt;STRONG&gt;agency key:&amp;nbsp;x10.INVOIC.INVOIC01.ZINVOIC01&lt;/STRONG&gt;) is also stored to be reused in subsequent steps of the flow.&lt;/P&gt;&lt;H4 id="toc-hId--468668138"&gt;&lt;U&gt;&lt;FONT&gt;Step 4:&amp;nbsp;&lt;/FONT&gt;Send Message to&amp;nbsp;&lt;STRONG&gt;Receiver Specific flow&lt;/STRONG&gt;&amp;nbsp;for the&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;Determined Receivers&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;In this step, a &lt;STRONG&gt;looping process call&lt;/STRONG&gt; is executed, which repeatedly invokes a &lt;STRONG&gt;local integration process&lt;/STRONG&gt; to send the message to each receiver identified in the previous step—&lt;STRONG&gt;one at a time&lt;/STRONG&gt;.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The property &lt;STRONG&gt;sentReceiverCount&lt;/STRONG&gt; is incremented after each message is successfully sent to a determined receiver. The loop continues until &lt;STRONG&gt;sentReceiverCount&lt;/STRONG&gt; equals &lt;STRONG&gt;determinedReceiverCount&lt;/STRONG&gt;, at which point the process terminates.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753890299180.png" style="width: 627px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294105i207D033209104225/image-dimensions/627x279?v=v2" width="627" height="279" role="button" title="ShreyasShenoy07_0-1753890299180.png" alt="ShreyasShenoy07_0-1753890299180.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;To send the message to a specific receiver, a &lt;STRONG&gt;Groovy script&lt;/STRONG&gt; is used to retrieve the &lt;STRONG&gt;receiver name&lt;/STRONG&gt; from the &lt;STRONG&gt;determinedReceivers &lt;/STRONG&gt;list. Using this name, the script fetches the &lt;STRONG&gt;endpoint URL&lt;/STRONG&gt; of the corresponding receiver-specific iFlow from the&amp;nbsp;&lt;STRONG&gt;&lt;A href="#toc-hId-551158686" target="_self" rel="nofollow noopener noreferrer"&gt;second ValueMapping&lt;/A&gt;.&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Value Mapping sample call:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;valueMapApi.getMappedValue(
  'x10.INVOIC.INVOIC01.ZINVOIC01', 
  'IDOCName', 
  'INVOIC.INVOIC01.ZINVOIC01', 
  'x10.INVOIC.INVOIC01.ZINVOIC01', 
  'ReceiverIFlowAddress'
)&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The fetched endpoint URL is then assigned to the header property &lt;STRONG&gt;receiverProcessDirectURL&lt;/STRONG&gt;, which is used by the ProcessDirect adapter to route the message to the appropriate receiver-specific iFlow.&amp;nbsp;&lt;STRONG&gt;IF_SAP_to_&amp;lt;Receiver&amp;gt;_&amp;lt;Interface Description&amp;gt; &lt;/STRONG&gt;which would&amp;nbsp;handle&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;transformation, mapping&lt;/STRONG&gt;, and other receiver-specific processing.&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShreyasShenoy07_0-1753893349763.png" style="width: 544px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294110i08D285AD63C466EF/image-dimensions/544x232?v=v2" width="544" height="232" role="button" title="ShreyasShenoy07_0-1753893349763.png" alt="ShreyasShenoy07_0-1753893349763.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-left lia-indent-padding-left-30px" style="text-align : left; padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--371778636"&gt;Advantages of the Proposed IDoc Routing Strategy in SAP Cloud Integration&lt;/H3&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;The strategy outlined in this blog offers a &lt;STRONG&gt;scalable, modular, and maintainable alternative&lt;/STRONG&gt;&amp;nbsp;that aligns closely with enterprise integration requirements. Below are the key advantages of this design:&lt;/P&gt;&lt;H4 id="toc-hId--861695148"&gt;1. Reusability of Integration Flows&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Instead of creating a separate iFlow for each IDoc-to-receiver combination, this approach separates:&lt;BR /&gt;Generic routing logic&amp;nbsp;(IF_SAP_to_Generic_IDOCRouting)&lt;BR /&gt;Receiver-specific logic(IF_SAP_to_&amp;lt;Receiver&amp;gt;_&amp;lt;Interface&amp;gt;)&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Reduces development effort and avoids duplication across iFlows, enabling a clean and modular architecture.&lt;/P&gt;&lt;H4 id="toc-hId--1058208653"&gt;2. Centralized Routing with Value Mappings&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Routing conditions and receiver lists are managed through &lt;STRONG&gt;Value Mapping artifacts.&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Updates to routing logic can be done without modifying or redeploying iFlows—just update the Value Mapping configuration.&lt;/P&gt;&lt;H4 id="toc-hId--1254722158"&gt;&lt;STRONG&gt;3. Scalable Across Systems and IDoc Variants&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Routing logic is built dynamically using:&lt;BR /&gt;- Sender system identifier&lt;BR /&gt;- Message type&lt;BR /&gt;- IDoc type&lt;BR /&gt;- (Optional) Extension type&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Supports complex multi-system, multi-IDoc scenarios without inflating the number of artifacts or flows.&lt;/P&gt;&lt;H4 id="toc-hId--1451235663"&gt;4. Native Support for Multi-Receiver Scenarios&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The use of Groovy logic and looping constructs enables routing to multiple receivers based on evaluated XPath conditions.&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Enables 1:n routing scenarios, ensuring the same IDoc can be routed to multiple receivers without message duplication logic.&lt;/P&gt;&lt;H4 id="toc-hId--1647749168"&gt;&lt;STRONG&gt;5. Low Maintenance and High Adaptability&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;This architecture requires &lt;STRONG&gt;Value Mapping updates&lt;/STRONG&gt; only when:&lt;BR /&gt;- New SAP systems are added&lt;BR /&gt;- Existing systems are migrated&lt;BR /&gt;- Additional receiver conditions are introduced&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Minimal maintenance effort over time; no need for frequent design or deployment changes.&lt;/P&gt;&lt;H4 id="toc-hId--1844262673"&gt;&lt;STRONG&gt;6. Aligned with SAP PI/PO Routing Model&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The flow structure mirrors familiar SAP PI/PO pipeline steps, such as:&lt;BR /&gt;- Receiver Determination&lt;BR /&gt;- Interface Determination&lt;BR /&gt;- Outbound Processing&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Simplifies migration for teams transitioning from SAP PI/PO to SAP CI, while preserving key routing concepts. Also there is a scope for automation where you could write a code to automate creation of Valuemapping. The existing&amp;nbsp; ports can be reused by updating the RFC destination pointing to the SAP CI&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;This approach attempts to addresses the Technical limitations of SAP CI’s IDoc handling, and also supports sustainable growth and &lt;STRONG&gt;cleaner&lt;/STRONG&gt; and &lt;STRONG&gt;maintainable&lt;/STRONG&gt; integration landscapes.&lt;/P&gt;&lt;H3 id="toc-hId--1747373171"&gt;Additional Considerations for Retry and Reprocessing&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Retry and error handling&lt;/STRONG&gt; should be implemented within each receiver-specific flow to manage failures independently for every receiver.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;It is advisable to &lt;STRONG&gt;avoid broadcasting IDocs directly from SAP Cloud Integration&lt;/STRONG&gt;, especially in high-volume scenarios like master data distribution across multiple systems. This is due to potential limitations in storing failed messages within the SAP Cloud Integration tenant. Additionally, in broadcast cases, the retry mechanism should support resending only to the receivers where failures occurred, not all recipients.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Exceptions can be returned to the sender system&lt;/STRONG&gt; (e.g., via SOAP fault) so that errors are reflected in the originating SAP system(&lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/define-error-configuration" target="_self" rel="noopener noreferrer"&gt;Return Exception to Sender&lt;/A&gt;&amp;nbsp;). This enables visibility in transaction logs like WE02/WE05, helping to identify and reprocess failed IDocs more effectively.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Batch jobs in the SAP backend&lt;/STRONG&gt; responsible for reprocessing IDocs should be adjusted based on the new failure status codes introduces by this setup&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1650483669"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This blog attempted to present a &lt;STRONG&gt;scalable&lt;/STRONG&gt;, &lt;STRONG&gt;maintainable&lt;/STRONG&gt;, &lt;STRONG&gt;modular&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;operationally efficient&lt;/STRONG&gt; strategy for receiver determination of outbound IDocs from SAP system by leveraging Groovy script and Value Mapping. Also by decoupling the routing and receiver-specific logic into two separate iFlows, the solution ensures better reusability, easier maintenance, and greater control over message processing.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/optimized-idoc-routing-in-sap-ci-with-value-mapping-and-groovy-based/ba-p/14164335"/>
    <published>2025-08-08T10:07:51.299000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/clean-core-by-design-using-sap-advanced-event-mesh-aem-as-the-first/ba-p/14171238</id>
    <title>Clean Core by Design: Using SAP Advanced Event Mesh (AEM) as the First Principle</title>
    <updated>2025-08-08T10:12:29.864000+02:00</updated>
    <author>
      <name>HammadSharif1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/154053</uri>
    </author>
    <content>&lt;P&gt;In the digital era of today where digital transformation is every organization’s need, SAP &lt;STRONG&gt;Clean Core Principle&lt;/STRONG&gt; is more than just a word, it's a among the foundational principle for enterprises looking to future-proof their SAP landscape. As per the SAP clean core approach, where technology is moving towards API first Approach, modular architectures, the organizations must decouple their custom logic instead of the application server to external API’s outside the application server layer to ensure agility, scalability, and reducing the upgrade complexity.&lt;/P&gt;&lt;P&gt;One of the most powerful enablers of this Clean Core approach is the event driven architecture through &lt;STRONG&gt;SAP Advanced Event Mesh (AEM)&lt;/STRONG&gt;, an enterprise-grade event brokering solution that supports real-time, event-driven architectures across hybrid landscapes.&lt;/P&gt;&lt;P&gt;In this blog, I’ll walk you through how to &lt;STRONG&gt;achieve Clean Core by adopting AEM as the first principle&lt;/STRONG&gt;, laying the groundwork for a decoupled, scalable, and intelligent enterprise.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;The Clean Core Strategy — What and Why?&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Avoid Extensions where not required&lt;/LI&gt;&lt;LI&gt;Upgrades should not interfere with the extensions and extensions should not interfere with the upgrades&lt;/LI&gt;&lt;LI&gt;Decouple the extensions from the Standard&lt;/LI&gt;&lt;LI&gt;Keep the custom code separate from the S4 Core&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;A Clean Code&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Clean Core strategy focuses on:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Keeping custom code, extensions, and integrations outside the SAP S/4HANA digital core.&lt;/LI&gt;&lt;LI&gt;Leveraging side-by-side extensibility using SAP BTP.&lt;/LI&gt;&lt;LI&gt;Using stable APIs and events to communicate between systems and layers.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This approach ensures that your core ERP remains &lt;STRONG&gt;clean, lean, and easily upgradeable&lt;/STRONG&gt;—an essential factor for reducing TCO and accelerating innovation cycles.&lt;/P&gt;&lt;P&gt;In short, minimize extensions, decouple them from the standard, build side-by-side extensions on the BTP layer without touching the S4 HANA Core.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&amp;nbsp;Why AEM as the First Principle?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To achieve the clean core strategy, event driven architecture plays an important role by decoupling the processes through individual events, following the loosely couple framework and avoiding tightly coupled integrations.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Advanced Event Mesh&lt;/STRONG&gt; enables &lt;STRONG&gt;event-driven architecture (EDA)&lt;/STRONG&gt; that decouples the source of truth (S/4HANA, SuccessFactors, C4C, etc.) from consumers (external apps, extensions, APIs). Here's why it's foundational to Clean Core:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Asynchronous Communication&lt;/STRONG&gt;: No tight coupling between systems.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Loose Integration&lt;/STRONG&gt;: Replace point-to-point interfaces with publish-subscribe models.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Extensibility&lt;/STRONG&gt;: Let consumers build side-by-side extensions without modifying the core.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Scalability&lt;/STRONG&gt;: Support multiple consumers with minimal configuration overhead.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;Clean Core in Action — Event-Driven Architecture with AEM&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s take a simple example: &lt;STRONG&gt;BP Onboarding in SAP S/4&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;Without Clean Core (Tightly Coupled):&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Custom ABAP enhancements in S/4HANA to trigger BP Creation/ Change Events.&lt;/LI&gt;&lt;LI&gt;Direct API calls or IDoc triggers to downstream applications like ARIBA/ C4C/ Hybris/ External Applications from S/4.&lt;/LI&gt;&lt;LI&gt;Every new consumer or change = new code or regression testing.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;With Clean Core (Using AEM):&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;S/4 HANA triggers the BP Creation Event via Event Enablement Cockpit.&lt;/LI&gt;&lt;LI&gt;AEM captures the events and routes it to all the subscribers.&lt;/LI&gt;&lt;LI&gt;Subscribers (CPI, CAP apps, external systems) performs the required logic without modifying the core system.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;No enhancement. No code in the core. Just events and clean extensions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Common Use Cases Where AEM Drives Clean Core&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Customer/Vendor Create in S/4HANA&lt;/STRONG&gt; → Event to AEM → Update CRM/External apps.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Purchase Order Created&lt;/STRONG&gt; → Event routed via AEM → Notify suppliers via external systems.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Material Master Update&lt;/STRONG&gt; → Trigger downstream analytics apps or warehouse systems.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;Building Blocks of a Clean Core Event Strategy&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;1. Enable Eventing in Source System&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;Use &lt;EM&gt;Event Enablement Cockpit&lt;/EM&gt; in S/4HANA (Cloud or Private Edition).&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;Within the SAP Application layer, where various types of event triggers are captured, these triggers can originate from the standard SAP mechanisms/ processes like Business Objects Repository(BOR) Event, Change Documents (CDHDR/ CDPOS), BTE(Business Transaction Event), IDOC Creation, Output Determination routines, and RAP based Event Triggers.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_0-1754319485057.png" style="width: 593px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296161i770BD6E2C3FACA2D/image-dimensions/593x292?v=v2" width="593" height="292" role="button" title="HammadSharif1_0-1754319485057.png" alt="HammadSharif1_0-1754319485057.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Route Event to AEM&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;Configure the required events in SAP S/4 to Publish Events to SAP Event Mesh/ AEM&lt;/LI&gt;&lt;LI&gt;Do the proper topic configurations and ensure secure connectivity.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;3. Integrate with AEM&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;Use &lt;EM&gt;AMQP 1.0&lt;/EM&gt; protocol or &lt;EM&gt;SAP Event Mesh/ Advance Event Mesh Adapter&lt;/EM&gt; in Integration Suite.&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Design Reusable Consumers&lt;BR /&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Keep business logic in SAP BTP (CAP, CPI, etc.).&lt;/LI&gt;&lt;LI&gt;Use topic naming standards (e.g., sap/s4/customer/created).&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Govern Events&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Maintain versioning, documentation, and routing rules in AEM.&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP EDA Ecosystem.png" style="width: 546px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296166iD88148FA21507AA6/image-dimensions/546x289?v=v2" width="546" height="289" role="button" title="SAP EDA Ecosystem.png" alt="SAP EDA Ecosystem.png" /&gt;&lt;/span&gt;&lt;P&gt; &lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;Combine AEM with SAP Integration Suite or APIM&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;AEM becomes even more powerful when used alongside &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Route events from AEM to CPI flows for orchestrations or APIM for Just Routing.&lt;/LI&gt;&lt;LI&gt;Use Process Integration for sync calls only where truly needed.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Practical Use Case:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Connect the S/4 or ERP to Advance Event Mesh (Either via Enterprise Event Enablement or ASAPIO Add-on) and setup the corresponding business events and topic hierarchies in AEM,&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Go to the Broker Manager of the of the AEM,&lt;BR /&gt;&lt;BR /&gt;Setup the Event Configuration via SAP Enterprise Event Enablement in the S/4&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Create Queue&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_1-1754319485061.png" style="width: 615px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296160i4F13CB604A683624/image-dimensions/615x152?v=v2" width="615" height="152" role="button" title="HammadSharif1_1-1754319485061.png" alt="HammadSharif1_1-1754319485061.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Subscribe to the Topic&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_0-1754384909223.png" style="width: 621px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296462i09A9836C5A2FAB2B/image-dimensions/621x206?v=v2" width="621" height="206" role="button" title="HammadSharif1_0-1754384909223.png" alt="HammadSharif1_0-1754384909223.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Advance Event Mesh Subscriber Configuration:&lt;BR /&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_3-1754319485065.jpeg" style="width: 457px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296162iBE1BE6D16AEBF72B/image-dimensions/457x258?v=v2" width="457" height="258" role="button" title="HammadSharif1_3-1754319485065.jpeg" alt="HammadSharif1_3-1754319485065.jpeg" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4. Depending on the Design, Processing Configuration Can be Altered&lt;BR /&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_4-1754319485067.png" style="width: 468px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296163i166F3317AEDA8DC5/image-dimensions/468x494?v=v2" width="468" height="494" role="button" title="HammadSharif1_4-1754319485067.png" alt="HammadSharif1_4-1754319485067.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;or&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_5-1754319485070.png" style="width: 473px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296164iD077A523C91B8856/image-dimensions/473x455?v=v2" width="473" height="455" role="button" title="HammadSharif1_5-1754319485070.png" alt="HammadSharif1_5-1754319485070.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;or&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HammadSharif1_6-1754319485073.png" style="width: 487px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296165iCC7208F17A81740D/image-dimensions/487x472?v=v2" width="487" height="472" role="button" title="HammadSharif1_6-1754319485073.png" alt="HammadSharif1_6-1754319485073.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In SAP S/4 HANA, achieving Clean Core is no longer an optional choice, it’s a foundational strategy for designing scalable, maintainable, and future ready enterprise landscapes. This blogs explored how the SAP AEM empowers the organizations to adopt event driven architecture(EDA) that supports the Clean Core Principle by:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Decoupling the Core&lt;/STRONG&gt;: Separating the custom logic, integrations, and extensions from the S/4HANA core using publish-subscribe event models.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Enabling Side-by-Side Extensibility&lt;/STRONG&gt;: Leveraging SAP BTP and AEM to develop external applications and microservices without modifying the digital core.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Ensuring Upgrade Agility&lt;/STRONG&gt;: Keeping the S/4 core untouched allows smooth upgrades with minimal regression testing.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Scaling Across Hybrid Landscapes&lt;/STRONG&gt;: Distributing business events asynchronously to multiple consumers (on-premises and cloud) with minimal configuration overhead.&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Embracing &lt;STRONG&gt;SAP Advanced Event Mesh as the foundation&lt;/STRONG&gt; of your integration and extension strategy ensures that you're not only building for the present, but also for the future. With AEM, you unlock a Clean Core architecture that is:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Upgradable&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Extensible&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Decoupled&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Scalable&lt;/P&gt;&lt;P&gt;The Clean Core is no longer a destination, it’s a design principle. And AEM is your first step on that journey.&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;Reference:&lt;BR /&gt;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE/810dfd34f2cc4f39aa8d946b5204fd9c/d12742f5f86244f1a8e4e8a3e78adecb.html?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer"&gt;Creating SM59 Destination for AEM Service Instance | SAP Help Portal&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.pubsub.em.services.cloud.sap/Get-Started/get-started-lp.htm" target="_blank" rel="noopener nofollow noreferrer"&gt;Get Started with SAP Integration Suite, Advanced Event Mesh&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/sap-integration-suite/event-add-on-for-erp-advanced-event-mesh/connect-advanced-event-mesh" target="_blank" rel="noopener noreferrer"&gt;Connect Advanced Event Mesh | SAP Help Portal&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/event-processing-in-an-sap-s-4hana-on-premise-system/ba-p/13562915" target="_blank"&gt;Event Processing in an SAP S/4HANA on-premise syst... - SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/configure-sap-event-mesh-for-sap-s-4hana-on-premise/ba-p/13528833" target="_blank"&gt;Configure SAP Event Mesh for SAP S/4HANA On-Premis... - SAP Community&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/the-e-in-event-driven-architecture-introducing-sap-s-new-event-add-for-erp/ba-p/14160285" target="_blank"&gt;The E in Event-Driven Architecture: Introducing SA... - SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/clean-core-by-design-using-sap-advanced-event-mesh-aem-as-the-first/ba-p/14171238"/>
    <published>2025-08-08T10:12:29.864000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/introducing-vortex-your-ui5-sftp-viewer-manager-in-sap-btp-cf/ba-p/14175619</id>
    <title>Introducing VORTEX - Your UI5 SFTP Viewer/Manager in SAP BTP CF</title>
    <updated>2025-08-08T12:15:20.520000+02:00</updated>
    <author>
      <name>vinaymittal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/187725</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736974706"&gt;Introduction:&lt;/H2&gt;&lt;P&gt;This is a SFTP Viewer/Editor built in UI5 - I named it,&amp;nbsp; VORTEX.&lt;/P&gt;&lt;P&gt;Why did I think that we need something like VORTEX?&amp;nbsp;&lt;/P&gt;&lt;P&gt;I have witnessed first hand how teams download open source tools like fileZilla and WINSCP ( which by the way despite all their open source goodness have been branded as unsafe by some organization for internal use.) to explore file servers, view or edit files.&lt;/P&gt;&lt;P&gt;These could be Integration developers who try to access the file servers for troubleshooting or these could be functionals who would like to view the files for auditing purpose or verification or for any other reason.&lt;/P&gt;&lt;P&gt;Now coming to the Why!&lt;/P&gt;&lt;P&gt;1) It's not okay to share credentials - sometimes common credentials with team members only for them to store it locally in the FileZilla or WinSCP repo. This introduces unacceptable risk!&lt;/P&gt;&lt;P&gt;2) There is no logging so as to who tried to access which file or edited what?&lt;/P&gt;&lt;P&gt;3) Sometimes people leave the organization but they still have your remote SFTP server cred right? Again a risk!&lt;/P&gt;&lt;P&gt;4) There is no trail of any kind to track unauthorized changes to a file.&lt;/P&gt;&lt;P&gt;5) If the team members access these SFTP servers for example from their own desktop what about the firewall? Do you request a specific firewall rule just so that a team member can access the file server from their local desktop?&lt;/P&gt;&lt;P&gt;6) Private Keys! Some sftp servers need a private key for authentication, like bank SFTP servers. How do you connect to them if you have to from your desktop? Do you ask for the private key from the security team? (Don't request that now, there is high chance they wont share it. They are private for a reason.)&lt;/P&gt;&lt;P&gt;7) Some third party SFTP servers are only accessible from whitelisted IP's, for example you may have multiple connections from SAP CI to such SFTP servers and SAP CI / CF IP's have been whitelisted by the third party.&lt;/P&gt;&lt;P&gt;If you have multiple SFTP servers to connect to , credential management is a nightmare and because of multiple reasons above it's sometimes not possible to have a holistic centralized and controlled access.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1540461201"&gt;&lt;STRONG&gt;Solution:&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This is where VORTEX comes in. I wanted to learn UI5 but couldn't find anything interesting that would drive me to learn it. Then I got this idea about VORTEX. I thought why not. And here we are 1 week later.&lt;/P&gt;&lt;P&gt;VORTEX is a tool build using SAP BAS, UI5, which connects with SAP CI using my state of the art custom API's&amp;nbsp; which leverage Connectivity service for accessing cloud connector, data stores, JSCH sessions, leveraging existing virtual host on your cloud connector.&lt;/P&gt;&lt;P&gt;The architecture is pretty neat, I will add a diagram later but the app in SAP BTP CF , connects to SAP CI via a destination and SAP CI custom code does the rest.&lt;/P&gt;&lt;P&gt;Here is how it looks...&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - Home.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298352i621117B9EE32CE63/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - Home.png" alt="VORTEX - Home.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;VORTEX will display all your SAP Integration Suite IFLOWS, and then allows you to pull SFTP connection details from these iflows, all at once , or selectively.&lt;/P&gt;&lt;P&gt;VORTEX then shows you the available connections with the relevant info&lt;/P&gt;&lt;P&gt;Connections blank at first&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298355iCF2D6B25A9087D59/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 2.png" alt="VORTEX - 2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Scanning&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298357i58B9B65D94B69671/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX-3.png" alt="VORTEX-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;After I do the "Scan All" We can see the pulled connections.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298358i9920D3BDBB092706/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX-4.png" alt="VORTEX-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Now you will see "Unique" connections here, I have a algorithm in place to determine the uniqueness of connections. If you have new iflows , you can just again come back to this tool and scan the new flows selectively or scan everything again. This wont edit / remove existing connections but will just add new connections in the list.&lt;/P&gt;&lt;P&gt;Now comes the interesting part!! Hmmm.. what If I need to connect to a SFTP server which doesn't have a filow in SAP CI??&lt;/P&gt;&lt;P&gt;Okay...You ask too much! Fine.... Just add a new connection manually!&lt;/P&gt;&lt;P&gt;VORTEX allows you to add new connections, Edit connections and Delete connections. (Delete button is on the extreme right)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298360i5D81ACE78FCDB3F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 5.png" alt="VORTEX - 5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Result!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298362i5583B9620191CAF3/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 6.png" alt="VORTEX - 6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;VORTEX will now allow you to make the connection to this SFTP server through SAP CI! But there is a condition, the credential or the private key should be already there in SAP CI Secure store / keystore for VORTEX to use. This guarantees that users DO NOT have access to any secure material.&lt;/P&gt;&lt;P&gt;Now comes the Fun part........Let's Connect!&lt;/P&gt;&lt;P&gt;Notice that connect column with a play button? That's what we use to connect to a particular connection!&lt;/P&gt;&lt;P&gt;And now we are connected! You can see all the files and folders and they have different icons depending on their type.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298370i4B8CA530DD45EDE2/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 7.png" alt="VORTEX - 7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;The navigation bar on top is fully functional, allows you to go back and forth between folders, delete folders and shows you the path too. since we are on root it shows "/"&lt;/P&gt;&lt;P&gt;Lets open a File? Okay&lt;/P&gt;&lt;P&gt;You can now see the file in a text editor that allows you to edit / save / view the file. You can also&amp;nbsp;download the file (select the file and click on download button, folders cannot be downloaded at the moment) and rename the files and see file permissions&lt;/P&gt;&lt;P&gt;If its a pdf file it opens in UI5 PDF Viewer.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298375i60F60EBA70245B22/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 8.png" alt="VORTEX - 8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298558i38D93898E1F852BE/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 9.png" alt="VORTEX - 9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;The salient Feature?&lt;/P&gt;&lt;P&gt;It connects to all 6 SFTP Connection types, Internet - Basic auth, Internet - Cert Auth, Cloud connector - Basic auth, Cloud connector - Cert auth, Internet - Dual and Internet - Cert auth&lt;/P&gt;&lt;P&gt;Everything is logged and tracked and logs can be seen in a log viewer utility. This logs each action from logging in , to reading a file content, to editing it, deleting it etc.&lt;/P&gt;&lt;P&gt;Admins can see logs for a particular connection, they can see who logged in, renamed which file, downloaded what, deleted which folder or file or who modified permissions last etc. This is easily searchable based on a date time range / free text or user id&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 551).png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301107iE82360E41A26866B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="VORTEX - 551).png" alt="VORTEX - 551).png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;You also have the option to set automatic purge of logs and download all logs for a connection in CSV format or just get rid of all logs.&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;Admins can also control Permissions to specific Directories for each connection in this format&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "root": {
        "records": [
           {
                "connectionId": "b96h6lhPJUvbQqoK",
                "accessType": "SELECTIVE",
                "globalRestrictions": {
                    "downloadRestrictedDirs": [
                        "Lw==",
                        "L1Jvb3Q="
                    ],
                    "readRestrictedDirs": [
                        "Lw==",
                        "L1Jvb3Q="
                    ],
                     "writeRestrictedDirs": [
                        "Lw==",
                        "L1Jvb3Q="
                    ]
                },
                "users": [
                    {
                        "userId": "#",
                        "unrestrictedAccess": false,
                        "permissions": {
                            "readAccess": {
                                "type": "ALL",
                                "directories": []
                            },
                            "writeAccess": {
                                "type": "NONE",
                                "directories": []
                            },
                            "downloadAccess": {
                                "type": "SELECTIVE",
                                
                                "directories": [
                                    "Lw==",
                                    "Lw=="
                                ]
                            }
                        }
                    }
                ]
            }
        ]
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298837i711C675B431C1B3B/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 11.png" alt="VORTEX - 11.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;There is no API to manage Admins though as Admins should have the required role in SAP and only admins can manage permissions.&lt;BR /&gt;&lt;BR /&gt;So..... Let me know what do you think. I am happy given this was my first UI5 product. Also The UI5 is just the tip of the iceberg. The real deal lies in the custom code I have built in SAP CI which enables this to work seamlessly and allows any I mean ANY thing even postman to read, edit files or do anything on the file servers.&amp;nbsp;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;Here is a Demo! - (there is a bit of lag because I used a test SFTP server from internet which was free , hence the slow connection)&lt;BR /&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F-X2_gTeOObE%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D-X2_gTeOObE&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F-X2_gTeOObE%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="112" scrolling="no" title="Vortex - SAP UI5 based SFTP Manager" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;BR /&gt;&lt;BR /&gt;This is a living blog, Will be updated when more features are added and when it is ready for a public release.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/introducing-vortex-your-ui5-sftp-viewer-manager-in-sap-btp-cf/ba-p/14175619"/>
    <published>2025-08-08T12:15:20.520000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/ai-adapter-for-sap-integration-suite/ba-p/14175843</id>
    <title>AI Adapter for SAP Integration Suite</title>
    <updated>2025-08-08T14:55:41.301000+02:00</updated>
    <author>
      <name>Shashank_K</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1555850</uri>
    </author>
    <content>&lt;P&gt;The AI Adapter for SAP Integration Suite is a Generative AI driven capability available exclusively on SAP Integration Suite. For the first time in SAP CI, leverage SAP AI Core’s GenAI Hub features that allow you to achieve smarter integration solutions for your business.&lt;/P&gt;&lt;P&gt;AICore-GenAIHub variant allows you to connect to orchestration services in SAP AI Core. This service enables the use of various generative AI models with a unified code, configuration, and deployment.&lt;/P&gt;&lt;P&gt;The Custom-OpenAI-REST variant of the AI adapter works with the APIs of OpenAI that allows developers to access and integrate with artificial intelligence models into their applications, enabling tasks like text generation, image creation, and more.&lt;/P&gt;&lt;H2 id="toc-hId-1736976715"&gt;AI Adapter Features&lt;/H2&gt;&lt;P&gt;The AI Adapter has the following features:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;AI Adapter has two variants available:&amp;nbsp;&lt;STRONG&gt;AICore-GenAIHub&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;AI Adapter supports&amp;nbsp;&lt;STRONG&gt;OAuth2 Client Credential&lt;/STRONG&gt;&amp;nbsp;(&lt;EM&gt;User Credentials)&lt;/EM&gt;&amp;nbsp;and&lt;STRONG&gt;&amp;nbsp;API Key alias (&lt;/STRONG&gt;&lt;EM&gt;Secure Parameter&lt;/EM&gt;&lt;STRONG&gt;)&lt;/STRONG&gt;&amp;nbsp;authentication methods for the AICore-GenAIHub and Custom-OpenAI-REST variant respectively.&lt;/LI&gt;&lt;LI&gt;AICore-GenAIHub employs harmonized API to allow you to use different foundation models without changing the client code.&lt;/LI&gt;&lt;LI&gt;You can configure orchestration to enable consumption of&amp;nbsp;&lt;STRONG&gt;multiple GenAI models&lt;/STRONG&gt;&amp;nbsp;within a single workflow.&lt;/LI&gt;&lt;LI&gt;Custom-OpenAI-REST allows you to access a range of features using APIs like&amp;nbsp;&lt;STRONG&gt;Chat Completions&lt;/STRONG&gt;,&amp;nbsp;&lt;STRONG&gt;Platform&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;Responses&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Custom-OpenAI-REST supports&amp;nbsp;&lt;STRONG&gt;Basic&lt;/STRONG&gt;&amp;nbsp;configuration type that provides a convenient processing capability for supported versions whereas&amp;nbsp;&lt;STRONG&gt;Advanced&lt;/STRONG&gt;&amp;nbsp;enables proficient users to perform calls with greater control while connecting to any API endpoint.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1540463210"&gt;&lt;STRONG&gt;Example Scenario : Sentiment Analysis on&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Customer Feedback&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In this blog post, we will demo a scenario to get you started with a basic AI Adapter operation. We query LLM to perform sentiment analysis on user feedback.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ashishkuvvarapu_0-1754423110247.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296900i4F81AE434ED561FB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ashishkuvvarapu_0-1754423110247.png" alt="ashishkuvvarapu_0-1754423110247.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The following prerequisites are handy while getting started with GenAI Hub&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;To get started with Gen AI Hub, see &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/generative-ai-hub-in-sap-ai-core?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Getting Started with GenAIHub&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;To consume GenAI models using Orchestration, see &lt;A href="https://developers.sap.com/tutorials/ai-core-orchestration-consumption.html" target="_blank" rel="noopener noreferrer"&gt;AI Core Orchestration Consumption&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1343949705"&gt;&lt;STRONG&gt;Prepare User feedback using Content Modifier&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;One of the first tasks we do after creating a new integration flow is to prepare contrasting user feedback to be analyzed. As you can notice, one of them speaks highly of the blog (we assume this to be a product) and other feedback is quite the opposite.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_2-1754423266585.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296902iC34F4417D64D4135/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashishkuvvarapu_2-1754423266585.png" alt="ashishkuvvarapu_2-1754423266585.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1147436200"&gt;&lt;STRONG&gt;Connect to GenAI Hub using the AI Adapter&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The &lt;STRONG&gt;Connection&lt;/STRONG&gt; tab contains connection and authentication parameters to connect to AICore-GenAIHub.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ashishkuvvarapu_3-1754423325248.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296903i98C9383F48955825/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ashishkuvvarapu_3-1754423325248.png" alt="ashishkuvvarapu_3-1754423325248.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="99.88814317673378%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Address&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Specify the GenAIHub address.&lt;/P&gt;&lt;P&gt;Example: &lt;A href="https://api.ai.{tenant_name}.{datacenter}.ml.hana.ondemand.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.ai.{tenant_name}.{datacenter}.ml.hana.ondemand.com&lt;/A&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;OAuth2 Client Credentials&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Specify the name of the OAuth2 Client Credentials security artifact.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Reuse Connection&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Enable to reuse the connection.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Connection Timeout(in ms)&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Specify the maximum waiting time (in milliseconds) for the connection to be established.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Response Timeout(in ms)&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Specify the maximum waiting time (in milliseconds) for a response message.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-950922695"&gt;&lt;STRONG&gt;Prompt an LLM using AI Adapter&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This example demonstrates how to prompt a large language model (LLM) to perform sentiment analysis on for user feedback text. The model is instructed to analyze the sentiment of the review and respond with just one word—either “positive” or “negative.” Triple backticks are used to clearly highlight the review text, ensuring there's no ambiguity about what should be analyzed. The structure is intended to produce straightforward and concise sentiment assessments.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_4-1754423578445.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296904i3D4899B5867B7801/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashishkuvvarapu_4-1754423578445.png" alt="ashishkuvvarapu_4-1754423578445.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;TABLE width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Operation&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Select the operation from the dropdown.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Orchestration Deployment ID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the Deployment ID for this Orchestration.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;AI Resource Group&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the AI Resource Group configured for the specific orchestration deployment.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Request Payload Source&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Select an option to specify the source for request payload:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Exchange Body&lt;/STRONG&gt; allows you to specify required structure and values.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;UI Configurable&lt;/STRONG&gt;&lt;SPAN&gt; provides user friendly fields to create the payload automatically.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Model&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Select the required AI model for your operation.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Role&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the role to be assumed:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;assistant&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;system&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;user&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Input&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the content containing the instruction to be carried out.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-754409190"&gt;Run and Verify Output&lt;/H2&gt;&lt;P&gt;After saving the above configuration, deploy the flow and verify that the sentiment has been correctly analyzed.&lt;/P&gt;&lt;P&gt;You should be able to see some of them as shown below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_5-1754423897849.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296906iEBFEDB3CD38A15F2/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashishkuvvarapu_5-1754423897849.png" alt="ashishkuvvarapu_5-1754423897849.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-555060832" id="toc-hId-557895685"&gt;&lt;SPAN&gt;Quick Links&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;For detailed information about AI configuration, see&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/ai-adapter" target="_blank" rel="noopener noreferrer"&gt;AI Adapter&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://api.sap.com/odata/1.0/catalog.svc/Files('6a7cc59b207e4eb384f3af502f8b503f')/$value" target="_blank" rel="noopener noreferrer"&gt;AI Adapter Guide&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;: The AI adapter is available as part of your SAP Integration Suite license.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/ai-adapter-for-sap-integration-suite/ba-p/14175843"/>
    <published>2025-08-08T14:55:41.301000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/smb-adapter-feature-on-premise-connectivity-via-sap-cloud-connector/ba-p/14175856</id>
    <title>SMB Adapter Feature: On-Premise Connectivity via SAP Cloud Connector</title>
    <updated>2025-08-08T15:01:18.273000+02:00</updated>
    <author>
      <name>Shashank_K</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1555850</uri>
    </author>
    <content>&lt;P&gt;The Microsoft SMB (Server Message Block) Adapter now supports on-premise connectivity via the SAP Cloud Connector. SAP Integration Suite supports this using the proxy type ‘&lt;STRONG&gt;On-Premise’&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;You can securely integrate your SAP cloud applications with your &lt;STRONG&gt;on-premise&lt;/STRONG&gt; SMB server. It offers reliable authentication and authorization mechanisms to ensure that only authorized users and systems can access on-premises resources.&lt;/P&gt;&lt;P&gt;Following the &lt;A href="https://help.sap.com/whats-new/5793247a5d5741beb0decc5b7dee1160?q=SMB+Adapter" target="_blank" rel="noopener noreferrer"&gt;July What's New release&lt;/A&gt; announcement, SMB Adapter for SAP Integration Suite ships with this Cloud Connector capability.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_0-1753966385459.png" style="width: 581px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294571i574063AC48B66D97/image-dimensions/581x215?v=v2" width="581" height="215" role="button" title="Divij_Balguri09_0-1753966385459.png" alt="Divij_Balguri09_0-1753966385459.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To achieve this setup, you need to perform the following steps:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Configure a new &lt;STRONG&gt;Cloud to On-Premise&lt;/STRONG&gt; system mapping in your Cloud Connector.&lt;/LI&gt;&lt;LI&gt;Configure the SMB Adapter to &lt;STRONG&gt;Create&lt;/STRONG&gt;, &lt;STRONG&gt;Read&lt;/STRONG&gt;, and &lt;STRONG&gt;Write&lt;/STRONG&gt; on your On-Premise File Server.&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1736976749"&gt;&lt;SPAN&gt;Configure Cloud to On-Premise system mapping in your Cloud Connector&lt;/SPAN&gt;&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;Navigate to your Cloud connector login page and enter your credentials.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_0-1753969403153.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294626i0E08D4CF43301621/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divij_Balguri09_0-1753969403153.png" alt="Divij_Balguri09_0-1753969403153.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Now, you must define a subaccount for&amp;nbsp;Cloud Connector. Select &lt;STRONG&gt;Define Subaccount&lt;/STRONG&gt;&lt;SPAN&gt;, enter the necessary details, and click &lt;/SPAN&gt;&lt;STRONG&gt;Save&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_12-1753966517372.png" style="width: 473px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294584i196436B4A2E1096A/image-dimensions/473x342?v=v2" width="473" height="342" role="button" title="Divij_Balguri09_12-1753966517372.png" alt="Divij_Balguri09_12-1753966517372.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Choose the &lt;STRONG&gt;Cloud To On-Premises&lt;/STRONG&gt; option from the menu and click&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_2-1754466763114.png" style="width: 675px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297061iBF98EA06040A49CA/image-dimensions/675x209?v=v2" width="675" height="209" role="button" title="Divij_Balguri09_2-1754466763114.png" alt="Divij_Balguri09_2-1754466763114.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Select Back-end Type as &lt;STRONG&gt;Non-SAP System&lt;/STRONG&gt; and click &lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_15-1753966839160.png" style="width: 540px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294588i2514502FAC67CB80/image-dimensions/540x243?v=v2" width="540" height="243" role="button" title="Divij_Balguri09_15-1753966839160.png" alt="Divij_Balguri09_15-1753966839160.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Select Protocol as &lt;STRONG&gt;TCP&lt;/STRONG&gt; and click&lt;STRONG&gt; Next&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_16-1753966872615.png" style="width: 535px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294589i196C9537A4636510/image-dimensions/535x241?v=v2" width="535" height="241" role="button" title="Divij_Balguri09_16-1753966872615.png" alt="Divij_Balguri09_16-1753966872615.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Here you can specify your On-Premise&amp;nbsp;SMB server &amp;amp; port that needs to be set up for connectivity. Populate &lt;STRONG&gt;Internal Host&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;Port or Port Range&lt;/STRONG&gt; to proceed.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_17-1753966953415.png" style="width: 538px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294590i477F7B74BE2C6E74/image-dimensions/538x242?v=v2" width="538" height="242" role="button" title="Divij_Balguri09_17-1753966953415.png" alt="Divij_Balguri09_17-1753966953415.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Specify the &lt;STRONG&gt;Virtual Host&lt;/STRONG&gt; and &lt;STRONG&gt;Virtual Port &lt;/STRONG&gt;that is exposed for connectivity with the SMB Adapter.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_18-1753967011756.png" style="width: 536px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294591i165C603BD07E85F9/image-dimensions/536x242?v=v2" width="536" height="242" role="button" title="Divij_Balguri09_18-1753967011756.png" alt="Divij_Balguri09_18-1753967011756.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Enter the &lt;STRONG&gt;Description&lt;/STRONG&gt; as required and click &lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_19-1753967036668.png" style="width: 537px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294592i5F0B451AB4B1428E/image-dimensions/537x243?v=v2" width="537" height="243" role="button" title="Divij_Balguri09_19-1753967036668.png" alt="Divij_Balguri09_19-1753967036668.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Verify the details and click &lt;STRONG&gt;Finish&lt;/STRONG&gt;.&lt;BR /&gt;(&lt;STRONG&gt;Note&lt;/STRONG&gt;: Ensure to enable the &lt;STRONG&gt;Check Internal Host&lt;/STRONG&gt;).&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_20-1753967069867.png" style="width: 538px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294593iB46FEFDB069CA627/image-dimensions/538x243?v=v2" width="538" height="243" role="button" title="Divij_Balguri09_20-1753967069867.png" alt="Divij_Balguri09_20-1753967069867.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Now, you can view your details in your &lt;STRONG&gt;Cloud To On-Premise.&lt;/STRONG&gt;&lt;BR /&gt;(&lt;STRONG&gt;Note&lt;/STRONG&gt;: Once deployed, &lt;STRONG&gt;Check Result&lt;/STRONG&gt; should be &lt;STRONG&gt;Reachable&lt;/STRONG&gt;).&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_0-1753969683819.png" style="width: 693px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294627iA69BC8305E368A72/image-dimensions/693x208?v=v2" width="693" height="208" role="button" title="Divij_Balguri09_0-1753969683819.png" alt="Divij_Balguri09_0-1753969683819.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1540463244"&gt;&lt;SPAN&gt;Configure SMB Adapter to connect to SMB File Share&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;SMB adapter simplifies integration with on-premise file systems, making it easier to read, write, and manage files across network shares. In our scenario, we will demo &lt;STRONG&gt;creation&lt;/STRONG&gt; of a directory and file, followed by subsequent &lt;STRONG&gt;read&lt;/STRONG&gt; and &lt;STRONG&gt;write&lt;/STRONG&gt; operations on the same file.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_27-1753967479849.png" style="width: 525px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294601i62B5721CDD633ED4/image-dimensions/525x227?v=v2" width="525" height="227" role="button" title="Divij_Balguri09_27-1753967479849.png" alt="Divij_Balguri09_27-1753967479849.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Configure Connection tab for SMB Adapter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The SMB receiver adapter supports basic authentication, enabling users to configure and use the adapter with ease.&lt;BR /&gt;&lt;BR /&gt;To connect to the SMB server, you need to specify the &lt;STRONG&gt;Host&lt;/STRONG&gt; and &lt;STRONG&gt;port&lt;/STRONG&gt; of SMB, select the Proxy type as &lt;STRONG&gt;On-Premise, &lt;/STRONG&gt;and specify the location ID to identify the&amp;nbsp;&lt;STRONG&gt;location&lt;/STRONG&gt;&amp;nbsp;of a Cloud Connector instance for a specific subaccount, which&amp;nbsp;&lt;STRONG&gt;is&lt;/STRONG&gt;&amp;nbsp;&lt;STRONG&gt;used&lt;/STRONG&gt;&amp;nbsp;as routing information.&lt;/P&gt;&lt;P&gt;Now, select the &lt;STRONG&gt;Version&lt;/STRONG&gt; and &lt;STRONG&gt;Drive&lt;/STRONG&gt; on which you need to perform the operation and specify the Credentials stored in the SAP Security materials. For more information, refer image below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_28-1753967503409.png" style="width: 871px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294602iAF5B62E692CB0392/image-dimensions/871x347?v=v2" width="871" height="347" role="button" title="Divij_Balguri09_28-1753967503409.png" alt="Divij_Balguri09_28-1753967503409.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1343949739"&gt;&lt;SPAN&gt;Create, Read and Write using SMB Server &lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;The SMB Adapter supports all CRUD operations. We will first create a directory and a file to read data from the file. Firstly, you need to perform the &lt;STRONG&gt;Create Directory&lt;/STRONG&gt; operation in the SMB local server using the SMB receiver adapter.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_35-1753967656120.png" style="width: 429px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294609i949FC310B7AF156F/image-dimensions/429x205?v=v2" width="429" height="205" role="button" title="Divij_Balguri09_35-1753967656120.png" alt="Divij_Balguri09_35-1753967656120.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;STRONG&gt;Response in Local SMB Drive&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_36-1753967691475.png" style="width: 674px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294610i96951B1D67F9D11C/image-dimensions/674x118?v=v2" width="674" height="118" role="button" title="Divij_Balguri09_36-1753967691475.png" alt="Divij_Balguri09_36-1753967691475.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the directory is successfully created, the next step is to create a file within that directory. This file will serve as the container for your data. You should then write or insert all the required records into this file using a &lt;STRONG&gt;content modifier&lt;/STRONG&gt;, ensuring the content is structured and stored correctly for further processing or retrieval.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_37-1753967710086.png" style="width: 354px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294611i739025EF02DFA756/image-dimensions/354x346?v=v2" width="354" height="346" role="button" title="Divij_Balguri09_37-1753967710086.png" alt="Divij_Balguri09_37-1753967710086.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Response in Local SMB Drive&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_38-1753967741810.png" style="width: 645px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294612iF6BCB9200915C417/image-dimensions/645x137?v=v2" width="645" height="137" role="button" title="Divij_Balguri09_38-1753967741810.png" alt="Divij_Balguri09_38-1753967741810.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After the file has been created, you can use the &lt;STRONG&gt;Read File&lt;/STRONG&gt; operation provided by the SMB adapter to access and retrieve the data from it in the future.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_39-1753967765975.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294613i82783E5E4254C206/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divij_Balguri09_39-1753967765975.png" alt="Divij_Balguri09_39-1753967765975.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Response&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_40-1753967859540.png" style="width: 617px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294614i04A995C2A6B9CEF1/image-dimensions/617x276?v=v2" width="617" height="276" role="button" title="Divij_Balguri09_40-1753967859540.png" alt="Divij_Balguri09_40-1753967859540.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;:&lt;/P&gt;&lt;P&gt;SMB adapter allows users to connect to an On-Premise server using SAP Cloud Connector.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/smb-adapter-feature-on-premise-connectivity-via-sap-cloud-connector/ba-p/14175856"/>
    <published>2025-08-08T15:01:18.273000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339</id>
    <title>New integration packages for the Pipeline for Cloud Integration</title>
    <updated>2025-08-08T15:08:45.923000+02:00</updated>
    <author>
      <name>alex_bundschuh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45178</uri>
    </author>
    <content>&lt;P&gt;I would like to share with you an important change for the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/pipeline-concept" target="_blank" rel="noopener noreferrer"&gt;Pipeline for Cloud Integration&lt;/A&gt; that we did based on feedback we received from customers running the Pipeline. As a result, &lt;STRONG&gt;new integration packages for supporting the Pipeline for Cloud Integration has been recently shipped&lt;/STRONG&gt; on the&amp;nbsp;&lt;A href="https://hub.sap.com/" target="_blank" rel="noopener noreferrer"&gt;SAP Business Accelerator Hub&lt;/A&gt;. Those packages replace the so far provided package&amp;nbsp;&lt;A href="https://hub.sap.com/package/PIPipelineGenericIntegrationFlows/overview" target="_blank" rel="noopener noreferrer"&gt;Process Integration Pipeline - Generic Integration Flows &amp;amp; Templates&lt;/A&gt; &lt;STRONG&gt;which will be deprecated soon&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;To be more flexible in setting up your different pipelines, different sender-specific IDoc and XI inbound flows, and receiver-specific outbound flows if required, we decided to split up the&amp;nbsp;Process Integration Pipeline - Generic Integration Flows &amp;amp; Templates into four packages. For the same reason, the script collection has been replaced by local scripts.&lt;/P&gt;&lt;P&gt;Customers like to run different pipelines, e.g., for distributing their critical and non-critical scenarios across different pipelines, or setting up different pipelines in a shared tenant environment. Also, it makes sense to define an own IDoc or XI inbound flow for each sender system to be able for instance to define a sender-specific user role or to stop incoming messages for a specific sender system. For those uses cases, so far you had to copy the package with the complete number of integration flows from the Discovery to the Design adding a suffix. This ensured that the copied packages were not cut off from future updates. However, downside was that this resulted in a large number of stale artifacts, so integration flows which were not used at all.&lt;/P&gt;&lt;P&gt;With the new package setup, we now better support those use cases without creating all those stale integration artifacts. The approach is still to copy a new package from the Discovery, but depending on the use case, you would only copy the integration flows which are required for the respective use case.&lt;/P&gt;&lt;P&gt;You can now find the generic integration flows and a set of templates for the scenario-specific integration flows and custom exits spread across the following integration packages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericInbound/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Inbound&lt;/A&gt;: Contains the generic IDoc and XI inbound flows.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericPipelines/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Pipelines&lt;/A&gt;: Contains the main generic pipeline steps.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericOutbound/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Outbound&lt;/A&gt;: Contains the generic outbound processing flow.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineTemplates/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Templates&lt;/A&gt;: Contains all templates for the scenario-specific flows and custom extensions.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;U&gt;Note&lt;/U&gt;: As said, &lt;STRONG&gt;the so far provided integration package will be deprecated soon&lt;/STRONG&gt;. All new feature increments will only be shipped with the new integration packages. So, If you have used the previously provided package, you need to switch to the new packages. To do so, &lt;STRONG&gt;proceed as follows&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Undeploy all generic flows from the soon to be deprecated package.&lt;/LI&gt;&lt;LI&gt;Configure and deploy the required generic flows provided by the new Cloud Integration Pipeline packages. You can either deploy all generic flows or just the ones that you need depending on which pipeline you use, see below.&lt;/LI&gt;&lt;LI&gt;If you have used scripts from the script collection in your scenario-specific flows, replace the scripts with local scripts. You find the local scripts in either the generic flows or the new templates. As long as you haven't replaced all scripts, recommendation is to still run the script collection. Once done, you can then also undeploy the script collection.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;U&gt;Note&lt;/U&gt;: In the newly shipped Cloud Integration packages, the name and IDs of the integration flows have version v2 added. It's important that the old integration flows and the new integration flows must not be deployed together because they compete on reading from the same JMS queues.&lt;/P&gt;&lt;P&gt;The templates package doesn't contain any artifact which needs to be deployed nor does it need to be transported to the production tenant. It only contains templates that you can copy to create your scenario-specific flows and custom flows. For this reason, we kept those integration flows in a separate package.&lt;/P&gt;&lt;P&gt;For setting up the integrated messaging runtime for asynchronous communication (recommended option for asynchronous communication), you need to deploy the following generic integration flows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally, if you like to use a single entry point for IDoc messages) Pipeline v2 Generic Step01 - Inbound Processing for Idoc&lt;/LI&gt;&lt;LI&gt;(Optionally, if you like to use a single entry point for XI messages) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Integrated Messaging Runtime Async&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step06 - Outbound Processing&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For setting up the integrated messaging runtime for synchronous content-based-router scenarios, you need to deploy the following generic integration flows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Integrated Messaging Runtime Sync&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For setting up the fully decoupled pipeline for asynchronous communication, you need to deploy the following integration flows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally) Pipeline v2 Generic Step01 - Inbound Processing for Idoc&lt;/LI&gt;&lt;LI&gt;(Optionally) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Inbound Processing&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step04 - Receiver Determination&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step05 - Interface Determination&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step06 - Outbound Processing&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All integration flows within the new Cloud Integration packages have been copied from the old package. Besides this, some new features have been added which I will soon describe in a bit more detail in a separate blog post. You also find this information in the change logs of the packages. Upfront, here some of the new features that we have shipped with the new packages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;For IDoc inbound scenarios where you exchange IDoc bulk messages, you have the option to keep the bulk, i.e., not to split the bulk message into individual messages.&lt;/LI&gt;&lt;LI&gt;You can now call a custom exit integration flow for custom pre-processing without the need to alter the standard generic flows of the pipeline. This can be configured globally or scenario-specific.&amp;nbsp;Potential use cases could be to implement additional external or internal logging capabilities or to stop certain messages from sending to the receiver systems based on some conditions, e.g. maintained in the Partner Directory.&lt;/LI&gt;&lt;LI&gt;A new template has been added that allows you to implement&amp;nbsp;custom receiver and interface determination by maintaining exchange properties. A similar approach is applied in the SAP Process Orchestration to Cloud Integration migration tool when selecting the standard migration approach for the Recipient List and Content-Based-Router patterns.&lt;/LI&gt;&lt;LI&gt;A new template has been added for an option to implement custom receiver determination based on a message mapping and by maintaining exchange properties for the interface determination. A similar approach is applied in the SAP Process Orchestration to Cloud Integration migration tool when selecting the Pipeline migration approach.&lt;/LI&gt;&lt;LI&gt;For the Outbound Processing templates, an option to call custom post-processing has been added.&lt;/LI&gt;&lt;LI&gt;We fixed an issue in the duplication check caused by a wrong usage of the escalation end event for the IDoc and XI inbound processing flow.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We are currently updating the standard documentation, so stay tuned.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339"/>
    <published>2025-08-08T15:08:45.923000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-rise-six-integration-patterns-you-ll-face/ba-p/14176610</id>
    <title>SAP RISE - Six Integration Patterns You’ll Face</title>
    <updated>2025-08-09T21:41:59.821000+02:00</updated>
    <author>
      <name>FlorianOkos</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/5536</uri>
    </author>
    <content>&lt;P&gt;In one of my previous blogs &lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/why-sap-isa-m-still-matters-a-strategic-foundation-for-modern-integration/ba-p/14162231" target="_blank"&gt;Why SAP ISA-M Still Matters – A Strategic Foundation for Modern Integration&lt;/A&gt;&lt;/STRONG&gt; I have given some insights in which projects &amp;amp; situations I am currently using ISA-M to define my Integration patterns.&amp;nbsp; What should be more strategic then RISE nowadays? &amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;🧭&lt;/STRONG&gt;&lt;STRONG&gt; The Integration Architect’s Dilemma in RISE Projects&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;It usually starts with excitement — &lt;EM&gt;“We’re moving to RISE!”&lt;/EM&gt;. But as the Integration Architect, you feel a shift in the room once you ask:&lt;/P&gt;&lt;P&gt;“How will your business-critical integrations survive the move?”&lt;/P&gt;&lt;P&gt;“How will our Integration Patterns change in a Private Cloud Environment?”&lt;/P&gt;&lt;P&gt;“Do we have to an option to be part of this modernization?”&lt;/P&gt;&lt;P&gt;In too many RISE conversations, &lt;STRONG&gt;integration is not part of initial phases&amp;nbsp;&lt;/STRONG&gt;, but everything depends on it. Whether you’re facing direct system-to-system integrations, legacy SAP PO platforms, or the modernization path toward Integration Suite and AEM: you need clarity.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Let’s talk about the &lt;STRONG&gt;6 most common integration scenarios&lt;/STRONG&gt; I encounter in RISE projects — and let’s do a deep dive into one of them.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Context: What Makes RISE Integration Different?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;ISA-M allows us to talk in Integration &lt;STRONG&gt;patterns&lt;/STRONG&gt; — proven, repeatable ways to connect cloud, on-prem, and hybrid landscapes.&lt;/P&gt;&lt;P&gt;Draw your Integration landscape abstract as below and repeat the same for all Integration Domains and Integration Patterns, maybe Integration Styles. We focus on the common Process Integration patterns which often are.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bild 09.08.25 um 9.37 PM.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298908iBCF14F5F4B523C7E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Bild 09.08.25 um 9.37 PM.jpeg" alt="Bild 09.08.25 um 9.37 PM.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 1: On-Premise to On-Premise (e.g., existing ECC system → S/4, within same on-prem datacenter)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Comment:&lt;/STRONG&gt;&lt;BR /&gt;This is often the existing baseline. When the customers still host their systems locally. No RISE adaption in this case&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 2: Private Cloud to Private Cloud (e.g., S/4 to S/4 Integration, within same RISE datacenter)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bild 11.08.25 um 1.03 PM.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299288i273E653C69BBFFAE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Bild 11.08.25 um 1.03 PM.jpeg" alt="Bild 11.08.25 um 1.03 PM.jpeg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Technology in use:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Integration Suite, Edge Cell on a Private Cloud hyperscaler, such as Azure or AWS&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;VPN or direct peering within same hyperscaler&lt;/LI&gt;&lt;LI&gt;Azure VNet Peering, AWS VPC Peering, or similar as secure tunnel&lt;/LI&gt;&lt;LI&gt;*SAP Integration Suite, Edge Cell on On-Premise landscape ( e.g. on SUSE or Red Hat) is also a valid option&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Differentiators&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Usage of Application Interface Framework for S/4HANA Monitoring&lt;/LI&gt;&lt;LI&gt;Usage of transactions and APIM Management operations&lt;/LI&gt;&lt;LI&gt;Usage of SAP CALM for overall central&amp;nbsp;Monitoring ( if applicable)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 3: Private Cloud to Public Cloud (RISE workload connects to SaaS like SuccessFactors)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Comment:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For hybrid Integration &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; could be used as natural entry point&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 4: Public Cloud to Public Cloud (e.g., SuccessFactors ↔ Ariba or Salesforce ↔ S/4 in RISE)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Comment:&lt;/STRONG&gt;&lt;BR /&gt;This is a modernization sweet spot. Cloud-native to cloud-native with no concrete RISE touchpoints.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Scenario 5: On-Premise to Public Cloud&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Comment:&lt;/STRONG&gt;&lt;BR /&gt;This is often the existing baseline. When the customers still host their backend systems locally but use SaaS applications for certain LoBs. No RISE adaption in this case&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 6: On-Premise to Private Cloud (e.g., ECC → RISE in Azure, hybrid operation)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Comment:&lt;/STRONG&gt;&lt;BR /&gt;This hybrid pattern is very common in &lt;STRONG&gt;staged RISE transitions&lt;/STRONG&gt;. Customers keep some systems on-prem while moving others (“early adaptors) into RISE.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Modernization Reality Check&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Most customers do one of three things:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Move PO Interfaces to SAP Integration Suite, Cloud Integration &amp;nbsp;and SAP Integration Suite, Edge Cell &amp;nbsp;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Modernize to SAP Advanced Event Mesh&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Use more featreus of the &lt;STRONG&gt;SAP Integration Suite, such as API Managmenet&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;So here’s what I recommend to every architect:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Audit&lt;/STRONG&gt; your interface and integration technologies before RISE.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Classify&lt;/STRONG&gt; interfaces using along the patterns in this blog.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Decide&lt;/STRONG&gt; per pattern: Keep, Modernize, or Sunset.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Actively design&lt;/STRONG&gt; your new integration landscape — don’t wait for someone else to.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":telephone_receiver:"&gt;📞&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Let’s Build Smarter RISE Integrations&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I’ve worked on numerous RISE integration journeys and built a reference architecture library covering each scenario. If you want to see the diagrams, dig into patterns, or compare your setup — &lt;STRONG&gt;I’m happy to help&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Ping us on SAP Integration Modernization &amp;lt;integration.modernization@sap.com&amp;gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-rise-six-integration-patterns-you-ll-face/ba-p/14176610"/>
    <published>2025-08-09T21:41:59.821000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cloud-integration-with-document-ai/ba-p/14176914</id>
    <title>Cloud Integration with Document AI</title>
    <updated>2025-08-10T19:19:42.064000+02:00</updated>
    <author>
      <name>PriyankaChak</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3763</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607924656"&gt;&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In this blog post, I will demonstrate how to connect Cloud Integration with Document AI. As a use case, let’s consider a scenario where a hospital registers a new patient, and the patient submits their previous prescription records. Using Document AI, we can extract relevant details such as past illnesses, allergies, and the patient’s blood group.&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1411411151"&gt;&lt;SPAN&gt;Document AI:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 1&lt;/STRONG&gt;. As a pre-requisite, run a booster to activate Document AI in a trial account.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Reference link: &lt;/SPAN&gt;&lt;A href="https://developers.sap.com/tutorials/cp-aibus-dox-booster-key.html" target="_blank" rel="noopener noreferrer"&gt;Use Trial to Set Up Account for SAP Document AI and Get Service Key&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 2&lt;/STRONG&gt;. Create a custom schema as shown below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299078i876DDC7000A272CB/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic1.png" alt="pic1.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 3&lt;/STRONG&gt;. Upload sample prescriptions. Here, I have uploaded two prescriptions of a&amp;nbsp;patient (merged into a single PDF). &lt;EM&gt;Please note that all the data is fictitious.&lt;/EM&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299079i67D96ABDEC86A48D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic2.png" alt="pic2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299080i9F613DA1CF5B38C0/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic3.png" alt="pic3.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 4&lt;/STRONG&gt;. Verify the extraction results, if required edit and then confirm.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299083iB54A73D12B3B235B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic4.png" alt="pic4.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For this example we get confidence percentage is 51%-80%. Please note, &lt;EM&gt;i&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;EM&gt;nstant learning&lt;/EM&gt; based on feedback is available on premium edition.&amp;nbsp;Reference link: &lt;A href="https://help.sap.com/docs/document-information-extraction/document-information-extraction/instant-learning-premium-edition?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Instant Learning (Premium Edition)&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1214897646"&gt;&lt;SPAN&gt;Cloud Integration:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;For the demo, I will send the PDF to Cloud Integration using an API testing tool. Cloud Integration will then forward it to Document AI, extract the results.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299114i70FE2EAC2873B982/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic8.png" alt="pic8.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The list of Document AI's APIs can be viewed using Swagger UI. The URL for swagger can be constructed from the Service key in the format:&amp;nbsp;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299085iCA62300FF3294F7F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic6.png" alt="pic6.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To call the Document AI API to post documents, use the below API.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299088iFF950F7BE5A548C1/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic9.png" alt="pic9.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The content modifier is used to set the options as below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299089iC8157A3A91CDBB18/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic10.png" alt="pic10.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The groovy script is used to create the multipart/form-data format.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;The endpoint for the 1st call is &lt;/SPAN&gt;&lt;SPAN&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;document/jobs&lt;/EM&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The response structure of the 1st call is shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299090i0142138ADE6AAD44/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic11.png" alt="pic11.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Retrieve the &lt;EM&gt;&lt;FONT color="#000000"&gt;id&lt;/FONT&gt;&lt;/EM&gt; and use the &lt;EM&gt;looping processing call&lt;/EM&gt; option to get the extraction result once the job is completed.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299092i6F16E82CDB06D189/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic12.png" alt="pic12.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Use the endpoint for 2nd call to get the extraction result:&lt;/SPAN&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;document/jobs/&amp;lt;id&amp;gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The groovy script is used to retrieve the field values where the confidence level is more than 60%, and format the response.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Test the iFlow endpoint using API testing tool (as shown below).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299093i9A20B029F3FB9E55/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic13.png" alt="pic13.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Please note that all the data are fictitious.&lt;/EM&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1018384141"&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;This blog post demonstrates a prototype that integrates Document AI for real life use cases along with Cloud Integration.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Reference Link: &lt;A href="https://help.sap.com/docs/document-ai/sap-document-ai/what-is-sap-document-ai?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SAP Document AI&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cloud-integration-with-document-ai/ba-p/14176914"/>
    <published>2025-08-10T19:19:42.064000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/invoking-llm-from-cloud-integration-responsibly-made-easy-with-generative/ba-p/14176222</id>
    <title>Invoking LLM from Cloud Integration Responsibly – Made Easy with Generative AI Hub in SAP AI Core</title>
    <updated>2025-08-11T09:53:30.525000+02:00</updated>
    <author>
      <name>Daniil_Bolobono</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/80755</uri>
    </author>
    <content>&lt;P&gt;In this blog post, I’ll walk you through how to seamlessly invoke large language models (LLMs) from Cloud Integration using the Generative AI Hub and the Orchestration Workflow API in SAP AI Core. We’ll focus on building a &lt;STRONG&gt;GDPR-compliant&lt;/STRONG&gt; automation flow that leverages &lt;STRONG&gt;data masking and pseudonymisation&lt;/STRONG&gt; to ensure privacy while still delivering value from generative AI.&lt;/P&gt;&lt;P&gt;The scenario we'll explore simulates a real-world use case: when a Business Partner record is updated in SAP S/4HANA Cloud, a personalized email notification is generated by an LLM and automatically sent out via Cloud Integration.&lt;/P&gt;&lt;P&gt;Thanks to prebuilt &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/orchestration-8d022355037643cebf775cd3bf662cc5?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;orchestration&lt;/A&gt; capabilities of Generative AI Hub in SAP AI Core, such as &lt;STRONG&gt;templating&lt;/STRONG&gt;, &lt;STRONG&gt;I/O filtering&lt;/STRONG&gt;, and &lt;STRONG&gt;data masking&lt;/STRONG&gt;, the process of generating compliant LLM responses can be achieved with just a single API call.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="email-generator.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298780i724952800A21D134/image-size/large?v=v2&amp;amp;px=999" role="button" title="email-generator.png" alt="email-generator.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;Before diving into the implementation steps, let’s take a closer look at the process flow behind this sample scenario.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Process Flow (Steps)&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Business Partner Update in SAP S/4HANA Cloud&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;A user creates or edits a Business Partner record in&amp;nbsp;SAP S/4HANA Cloud.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Event Triggered and Message Sent to SAP AEM&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The system triggers an event and sends a message to&amp;nbsp;SAP Advanced Event Mesh (AEM).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Cloud Integration iFlow Subscribes and Starts Processing&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The CPI iFlow&amp;nbsp;subscribes to the AEM queue and begins processing as soon as a new message is published.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Retrieve Old Payload from CAP Application&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The&amp;nbsp;iFlow&amp;nbsp;queries the&amp;nbsp;CAP application&amp;nbsp;to retrieve the&amp;nbsp;previous version (old payload)&amp;nbsp;of the Business Partner record from&amp;nbsp;SAP HANA Cloud.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Call the Orchestration Workflow API of SAP AI Core for AI-Based Email Generation&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;With both the old and new payloads in hand, the iFlow invokes the Generative AI Hub using the Orchestration Workflow API of SAP AI Core to generate a personalized email body in HTML format. Here, a predefined orchestration pipeline applies data masking, prompt templating, and foundation model invocation to generate a compliant, personalised email body – without exposing any sensitive data.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Send Email to Business Partner&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The&amp;nbsp;iFlow&amp;nbsp;sends the generated email to the Business Partner’s email address via a standard mail adapter in Cloud Integration, completing the end-to-end notification process.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;As part of this blog, I will not focus on connectivity between SAP S/4HANA Cloud and SAP Advanced Event Mesh (steps 1 and 2). For a live step-by-step demonstration of the setup, please review this video: &lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&amp;nbsp;&lt;A href="https://youtu.be/6hb9l0ss5ec?si=xubXNtx_7YXFm-11" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Tech Bytes: Configuring SAP S/4HANA Cloud and SAP Integration Suite, advanced event mesh&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1737000677"&gt;Configuring Orchestration Workflow in SAP AI Core&lt;/H2&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/orchestration-8d022355037643cebf775cd3bf662cc5?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Orchestration in SAP AI Core&lt;/A&gt; is a managed service that enables unified access, control, and execution of generative AI models through standardized APIs, templating, and configurable AI workflow components.&lt;/P&gt;&lt;P&gt;In our scenario, we will utilize it to chain together prebuilt steps, such as data masking and foundation model invocation, to generate a personalized email body in HTML format via a single API call.&lt;/P&gt;&lt;P&gt;To access the Orchestration service in SAP AI Core, you need to set up Generative AI Hub in &lt;A href="https://discovery-center.cloud.sap/serviceCatalog/1f756a52-8968-4ec4-92d0-f9bddf552ea3" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP AI Core&lt;/A&gt; and &lt;A href="https://discovery-center.cloud.sap/serviceCatalog/20fa1fda-1871-413d-becc-5a58884d8827" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP AI Launchpad&lt;/A&gt;. Please refer to either of the following resources for setup instructions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Discovery Mission: &lt;A href="https://discovery-center.cloud.sap/protected/index.html#/missiondetail/4403/4689/?tab=overview" target="_blank" rel="noopener nofollow noreferrer"&gt;Set Up SAP AI Core Generative AI Hub&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;SAP Developer Center Tutorial: &lt;A href="https://developers.sap.com/group.setup-ai-core.html" target="_blank" rel="noopener noreferrer"&gt;Generative AI with SAP AI Core - Setup&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="prereq1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298739i3731D66CDAD62166/image-size/large?v=v2&amp;amp;px=999" role="button" title="prereq1.png" alt="prereq1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Before moving to the next step, please ensure that your orchestration configuration is deployed and is in the &lt;EM&gt;&lt;STRONG&gt;RUNNING&lt;/STRONG&gt;&lt;/EM&gt; status.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="prereq2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298741iF81DAFEA5A834382/image-size/large?v=v2&amp;amp;px=999" role="button" title="prereq2.png" alt="prereq2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1669569891"&gt;Building the Orchestration Workflow&lt;/H3&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;In this example, we will build the orchestration workflow for the event of &lt;/SPAN&gt;&lt;STRONG&gt;Business Partner change&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;Within SAP AI Launchpad, navigate to Generative AI Hub -&amp;gt; Orchestration and click Edit Workflow to select the workflow steps you require.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore0.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298781i9AAF94C8C7612E6C/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore0.png" alt="aicore0.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For our scenario, deselect the Input Translation and Output Translation steps, as they are not needed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298752i38CE9D49203FDC22/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore1.png" alt="aicore1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the &lt;A href="https://community.sap.com/Templating" target="_blank" rel="noopener nofollow noreferrer"&gt;Templating&lt;/A&gt; step, we define prompts that guide LLM on how to perform its task.&lt;/P&gt;&lt;P&gt;We configure two types of messages for our scenario:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;System Prompt&lt;/LI&gt;&lt;LI&gt;User Prompt&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The system prompt defines the overall &lt;STRONG&gt;behavior, tone, and role&lt;/STRONG&gt; of the LLM. It sets global instructions that remain consistent across requests, ensuring predictable formatting and response style.&lt;/P&gt;&lt;P&gt;For our use case, the system prompt will instruct the LLM to act as a multilingual assistant that compares old and new Business Partner profiles and generates a compliant email.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;You are a multilingual assistant. Your task is to compare the old and new payloads of a Business Partner profile and generate a personalized, polite, and human-sounding email to inform the Business Partner about the changes made to their profile. If no changes are found, reply "NO_CHANGES".
Instructions:
- Detect all relevant changes (ignore changes in fields named change_time or change_date).
- Summarize the changes clearly and concisely.
- Keep it concise and clear.
- Format the response as HTML (do not use code blocks).
- Use paragraphs (&amp;lt;p&amp;gt;) for separate blocks of text.
- Use an unordered list (&amp;lt;ul&amp;gt;) with list items (&amp;lt;li&amp;gt;) to list the changes.
- Address the Business Partner by full name if available.
- End the email with the following closing, exactly as shown: Best regards,&amp;lt;br&amp;gt;SAP BTP Adoption &amp;amp; Consumption Center.
- Keep the tone friendly, clear, and professional.
- Do not generate the email subject line, only the body.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The user prompt provides the &lt;STRONG&gt;dynamic, task-specific input&lt;/STRONG&gt; for each request. Here, we pass actual data: the &lt;STRONG&gt;old profile payload&lt;/STRONG&gt;, &lt;STRONG&gt;new profile payload&lt;/STRONG&gt;, and &lt;STRONG&gt;target language&lt;/STRONG&gt;. These placeholders will be replaced at runtime to generate personalized content.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Write the email in the language: {{?language_name}}
Here is the OLD profile payload: {{?old_payload}}
Here is the NEW profile payload: {{?new_payload}}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298782i2DBF6A163EA56CA1/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore3.png" alt="aicore3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/data-masking-d9a54d9ca54b40beacbd24e1663ec3b4?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Data Masking&lt;/A&gt; step, we can anonymize or pseudonymize personally identifiable information from the input for selected entities. For our scenario, we will select the &lt;STRONG&gt;Pseudonymization&lt;/STRONG&gt; option. This will substitute personally identifiable information in selected categories with a MASKED_ENTITY_ID placeholder and allow us to unmask the LLM response before returning it to the Sender.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298746i05827E1812528552/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore4.png" alt="aicore4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/enhancing-model-consumption-with-input-filtering" target="_blank" rel="noopener noreferrer"&gt;Input Filtering&lt;/A&gt; step allows you to apply content safety filters to the incoming data before invoking the foundation model.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298753i18CF0C0B34DF85B0/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore5.png" alt="aicore5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the Model Configuration step, we can select the desired model (e.g., GPT-4.1) and configure relevant parameters such as temperature, token limits, etc.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298749iBBA647EDEB107980/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore6.png" alt="aicore6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Finally, the &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/enhancing-model-consumption-with-output-filtering" target="_blank" rel="noopener noreferrer"&gt;Output Filtering&lt;/A&gt; step enables content safety filtering on the LLM-generated response to ensure compliance and prevent undesired content.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298750i175484FBD4CDFD81/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore7.png" alt="aicore7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the orchestration workflow is configured, you can inspect its JSON definition and download it locally. This definition will be used later when invoking the orchestration workflow via API from Cloud Integration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298754iE2EFEB37A5D08970/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore8.png" alt="aicore8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Additionally, you can test the orchestration inference directly within SAP AI Launchpad by providing sample input variables. The testing tool allows you to view and trace the LLM response and fine-tune the workflow configuration as needed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298756i55B46CC7E693776E/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore9.png" alt="aicore9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When inspecting the output payload, you can clearly trace the results of each orchestration step – such as Input Masking, Output Unmasking, Input Filtering, and Output Filtering.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298758i53EBA0EAD81C5D10/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore10.png" alt="aicore10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To learn more about Orchestration in SAP AI Core, refer to the &lt;A href="https://developers.sap.com/group.sap-ai-core-generative.html" target="_blank" rel="noopener noreferrer"&gt;SAP Developer Center Tutorials: Generative AI with SAP AI Core - orchestration&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1343973667"&gt;Configure SAP Cloud Integration Business Partner Notification iFlow&lt;/H2&gt;&lt;P&gt;Now that we have our SAP S/4HANA Cloud, SAP Advanced Event Mesh, and the Orchestration Workflow in SAP AI Core configured, we can proceed with the Cloud Integration iFlow configuration.&lt;/P&gt;&lt;P&gt;This iFlow ensures that Business Partner changes trigger compliant AI-generated email notifications, while maintaining data consistency in HANA Cloud. It leverages SAP Advanced Event Mesh, CAP, and Generative AI Hub for an automated end-to-end process.&lt;/P&gt;&lt;H3 id="toc-hId-1276542881"&gt;High-Level iFlow Overview&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Triggered by AEM Queue&amp;nbsp;when a new event is published.&lt;/LI&gt;&lt;LI&gt;Retrieves BP details from S/4HANA Cloud.&lt;/LI&gt;&lt;LI&gt;(&lt;EM&gt;If event is BP update&lt;/EM&gt;)&amp;nbsp;Fetches old BP payload&amp;nbsp;from HANA Cloud (via CAP service).&lt;/LI&gt;&lt;LI&gt;Invokes the &lt;STRONG&gt;Orchestration Workflow API&lt;/STRONG&gt; to compare old vs. new payloads and generate an HTML email content while ensuring that no sensitive information is passed to LLM.&lt;/LI&gt;&lt;LI&gt;Upserts updated BP details into SAP HANA Cloud&amp;nbsp;via CAP service.&lt;/LI&gt;&lt;LI&gt;Sends an email to the Business Partner.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1080029376"&gt;Step-by-Step Process Breakdown&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Event Trigger&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The iFlow subscribes to the&amp;nbsp;AEM queue&amp;nbsp;and processes incoming events.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Retrieve Business Partner Details&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;An&amp;nbsp;OData request&amp;nbsp;is sent to&amp;nbsp;SAP S/4HANA Cloud&amp;nbsp;to fetch the latest BP details.&lt;/LI&gt;&lt;LI&gt;Key parameters (e.g., &lt;STRONG&gt;BP ID&lt;/STRONG&gt;&lt;STRONG&gt;, &lt;/STRONG&gt;&lt;STRONG&gt;BP email&lt;/STRONG&gt;) are extracted and saved into the properties for further processing.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Map to CAP Format&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;BP details are&amp;nbsp;transformed&amp;nbsp;into the &lt;STRONG&gt;CAP service&lt;/STRONG&gt; data model.&lt;/LI&gt;&lt;LI&gt;The&amp;nbsp;new payload is stored&amp;nbsp;in XML and JSON format for further use.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Conditional Logic&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;BP creation&lt;/STRONG&gt; → No old payload is retrieved.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BP update&lt;/STRONG&gt; → Old payload is retrieved for comparison.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Retrieve Old Payload from HANA Cloud (&lt;EM&gt;BP update only&lt;/EM&gt;)&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The iFlow calls&amp;nbsp;the &lt;STRONG&gt;CAP service &lt;/STRONG&gt;to fetch the previous BP record. Please refer to the GitHub repository &lt;A href="https://github.com/bolodania/businesspartner_srv" target="_blank" rel="noopener nofollow noreferrer"&gt;businesspartner_srv&lt;/A&gt; for more information on the CAP service. In our scenario, the CAP service acts as an intermediary that retrieves old Business Partner data from SAP HANA Cloud, provides an OData service for data access, and enables the upsert of updated details.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;AI-Based Email Generation&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;A subprocess calls the Orchestration Workflow API via the AI adapter to create a personalized HTML email body in a GDPR-compliant way.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Upsert BP Details in HANA Cloud&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The updated BP details are upserted into SAP HANA Cloud via the CAP service.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Send Email&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The iFlow sends an email using the&amp;nbsp;Mail Adapter.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298762i0CE2AE68A87967FB/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi1.png" alt="cpi1.png" /&gt;&lt;/span&gt;You can find this iFlow as a ZIP archive here: &lt;A href="https://github.com/bolodania/cpi_gen_ai_hub_blog/blob/main/AEM_GenAI_BPMailGenerator_blog.zip" target="_blank" rel="noopener nofollow noreferrer"&gt;AEM_GenAI_BPMailGenerator_blog.zip&lt;/A&gt;&lt;/P&gt;&lt;P&gt;For this blog, we’ll take a closer look at &lt;STRONG&gt;Step #6&lt;/STRONG&gt;, where the &lt;STRONG&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/ai-adapter" target="_blank" rel="noopener noreferrer"&gt;AI Receiver Adapter&lt;/A&gt; &lt;/STRONG&gt;is used to invoke the Orchestration Workflow API configured in the previous section.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298765i406A07F5364686D9/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi2.png" alt="cpi2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;1) In our case, the easiest way to prepare a payload for the AI Receiver Adapter is by using a small Groovy script.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.json.JsonOutput

Message processData(Message message) {
    def map = message.getProperties()

    def createBP = map.get("EventType").toString() == "sap.s4.beh.businesspartner.v1.BusinessPartner.Created.v1" ? true : false

    // Dynamic user template
    def userText = createBP
        ? "Write the email in the language: {{?language_name}}\nHere is the NEW profile payload: {{?new_payload}}"
        : "Write the email in the language: {{?language_name}}\nHere is the OLD profile payload: {{?old_payload}}\nHere is the NEW profile payload: {{?new_payload}}"

    def userTemplate = [
        role: "user",
        content: [
            [
                type : "text",
                text : userText
            ]
        ]
    ]

    def systemText = createBP
        ? """You are a multilingual assistant. Your task is to generate a warm, professional welcome email for a newly created Business Partner profile based on the provided NEW profile payload.

        Instructions:
        - Welcome the Business Partner.
        - Address the Business Partner by full name if available.
        - Mention that their profile has been successfully created.
        - Format the response as HTML (do not use code blocks).
        - Use paragraphs (&amp;lt;p&amp;gt;) for separate blocks of text.
        - Keep it concise and clear.
        - Keep the tone friendly, professional, and approachable.
        - End the email with the following closing, exactly as shown: Best regards,&amp;lt;br&amp;gt;SAP BTP Adoption &amp;amp; Consumption Center.
        - Do not generate the email subject line, only the body."""
        
        : """You are a multilingual assistant. Your task is to compare the old and new payloads of a Business Partner profile and generate a personalized, polite, and human-sounding email to inform the Business Partner about the changes made to their profile. If no changes are found, reply "NO_CHANGES".

        Instructions:
        - Detect all relevant changes (ignore changes in fields named change_time or change_date).
        - Summarize the changes clearly and concisely.
        - Keep it concise and clear.
        - Format the response as HTML (do not use code blocks).
        - Use paragraphs (&amp;lt;p&amp;gt;) for separate blocks of text.
        - Use an unordered list (&amp;lt;ul&amp;gt;) with list items (&amp;lt;li&amp;gt;) to list the changes.
        - Address the Business Partner by full name if available.
        - End the email with the following closing, exactly as shown: Best regards,&amp;lt;br&amp;gt;SAP BTP Adoption &amp;amp; Consumption Center.
        - Keep the tone friendly, clear, and professional.
        - Do not generate the email subject line, only the body."""

    def systemTemplate = [
        role: "system",
        content: [
            [
                type : "text",
                text : systemText
            ]
        ]
    ]
    
    def language = map.get("language")
    def newPayload = map.get("new_payload_json")
    
    def inputParams = [
        language_name: language,
        new_payload: newPayload instanceof String ? newPayload : JsonOutput.toJson(newPayload)
    ]
    
    if (!createBP) {
        def oldPayload = map.get("old_payload_json")
        inputParams.old_payload = oldPayload instanceof String ? oldPayload : JsonOutput.toJson(oldPayload)
    }


    // Build the JSON structure
    def payload = [
        orchestration_config: [
            module_configurations: [
                llm_module_config: [
                    model_name: "gpt-4.1",
                    model_params: [
                        frequency_penalty: 0,
                        presence_penalty: 0,
                        max_completion_tokens: 24576,
                        temperature: 1
                    ],
                    model_version: "2025-04-14"
                ],
                templating_module_config: [
                    template: [
                        userTemplate,
                        systemTemplate
                    ],
                    defaults: [:]
                ],
                filtering_module_config: [
                    input : [
                        filters: [
                            [
                                type: "azure_content_safety",
                                config: [
                                    Hate: 2,
                                    SelfHarm: 2,
                                    Sexual: 2,
                                    Violence: 2,
                                    PromptShield: true
                                ]
                            ]
                        ]
                    ],
                    output: [
                        filters: [
                            [
                                type  : "azure_content_safety",
                                config: [
                                    Hate: 2,
                                    SelfHarm: 2,
                                    Sexual: 2,
                                    Violence: 2
                                ]
                            ]
                        ]
                    ]
                ],
                masking_module_config: [
                    masking_providers: [
                        [
                            type: "sap_data_privacy_integration",
                            method: "pseudonymization",
                            entities: [
                                [type: "profile-credit-card-number"],
                                [type: "profile-driverlicense"],
                                [type: "profile-email"],
                                [type: "profile-sensitive-data"],
                                [type: "profile-ethnicity"],
                                [type: "profile-gender"],
                                [type: "profile-pronouns-gender"],
                                [type: "profile-iban"],
                                [type: "profile-location"],
                                [type: "profile-nationalid"],
                                [type: "profile-nationality"],
                                [type: "profile-org"],
                                [type: "profile-passport"],
                                [type: "profile-person"],
                                [type: "profile-phone"],
                                [type: "profile-political-group"],
                                [type: "profile-sapids-public"],
                                [type: "profile-religious-group"],
                                [type: "profile-sapids-internal"],
                                [type: "profile-ssn"],
                                [type: "profile-sexual-orientation"],
                                [type: "profile-trade-union"],
                                [type: "profile-address"],
                                [type: "profile-url"],
                                [type: "profile-university"],
                                [type: "profile-username-password"]
                            ],
                            mask_grounding_input: [enabled: false],
                            allowlist: []
                        ]
                    ]
                ]
            ]
        ],
        input_params: inputParams
    ]

    // Serialize to JSON string
    def jsonString = JsonOutput.toJson(payload)
    message.setBody(jsonString)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This script constructs the payload expected by the Orchestration API of SAP AI Core.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298764i8D609145087017D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi3.png" alt="cpi3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note that the settings within the &lt;EM&gt;module_configurations&lt;/EM&gt; block match the configuration that you downloaded from SAP AI Launchpad.&lt;/P&gt;&lt;P&gt;2) To set up a Connection to our AI Core Orchestration deployment, we first need to configure a Security Material.&lt;BR /&gt;In your SAP BTP Cockpit and access the service key of the SAP AI Core (extended plan) service instance created earlier.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298766i96E718E06DB8F818/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi4.png" alt="cpi4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create an &lt;STRONG&gt;OAuth2 Client Credentials&lt;/STRONG&gt; Security Material with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Token Service URL: &lt;STRONG&gt;url &lt;/STRONG&gt;from the service key + “/oauth/token”&lt;/LI&gt;&lt;LI&gt;Client ID: &lt;STRONG&gt;clientid&lt;/STRONG&gt; from the service key&lt;/LI&gt;&lt;LI&gt;Client Secret: &lt;STRONG&gt;clientsecret &lt;/STRONG&gt;from the service key&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi5.png" style="width: 364px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298767i7783529BF8B7EC89/image-size/medium?v=v2&amp;amp;px=400" role="button" title="cpi5.png" alt="cpi5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the &lt;STRONG&gt;Connection&lt;/STRONG&gt; tab of the AI Receiver Adapter:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Set the &lt;STRONG&gt;Address&lt;/STRONG&gt; to the AI_API_URL from the service key.&lt;/LI&gt;&lt;LI&gt;Reference the Security Material in the &lt;STRONG&gt;OAuth2 Client Credentials&lt;/STRONG&gt; field.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298768iD149FF2BEA8E8894/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi6.png" alt="cpi6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the &lt;STRONG&gt;Processing&lt;/STRONG&gt; tab:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Set &lt;STRONG&gt;Request Payload Source&lt;/STRONG&gt; to “Exchange Body”.&lt;/LI&gt;&lt;LI&gt;Provide the &lt;STRONG&gt;Orchestration Deployment ID&lt;/STRONG&gt; and &lt;STRONG&gt;AI Resource Group&lt;/STRONG&gt; from SAP AI Launchpad.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298771i84B4983238E49650/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi8.png" alt="cpi8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298769i66B867762AFDDF1A/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi7.png" alt="cpi7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3) JSON output is converted into XML for further processing.&lt;/P&gt;&lt;P&gt;4) Content Modifier step is used to extract the &lt;STRONG&gt;&lt;EM&gt;email_body&lt;/EM&gt;&lt;/STRONG&gt; from the Orchestration API response via the XPath expression: &lt;STRONG&gt;&lt;EM&gt;/root/orchestration_result/choices/message/content&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298772i757F3C22FD3B7557/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi9.png" alt="cpi9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-754433152"&gt;Testing the Scenario End-to-End&lt;/H2&gt;&lt;P&gt;With all components configured, it’s time to put the setup to the test.&lt;/P&gt;&lt;P&gt;&lt;A href="https://dam.sap.com/mac/u/a/jSB7LiM?rc=10&amp;amp;doi=SAP1229099 " target="_blank" rel="noopener noreferrer"&gt;&lt;span class="lia-unicode-emoji" title=":film_projector:"&gt;📽&lt;/span&gt;️ Watch Event-Driven Business Partner Email Notification Demo&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;The video walks through the entire process – showing the change in SAP S/4HANA Cloud, the processing inside Cloud Integration, and the final email received by the Business Partner.&lt;/EM&gt;&lt;/P&gt;&lt;H2 id="toc-hId-557919647"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;This scenario highlights how &lt;STRONG&gt;simple and seamless it is to invoke SAP AI Core from Cloud Integration&lt;/STRONG&gt; to generate compliant, human-sounding content.&lt;/P&gt;&lt;P&gt;With just a small Groovy script to prepare the payload, CPI can call an &lt;STRONG&gt;SAP AI Core Orchestration Workflow&lt;/STRONG&gt; directly via the AI Receiver Adapter – without complex custom coding or middleware. All compliance safeguards, such as data masking and filtering, are handled by the orchestration workflow, ensuring that &lt;STRONG&gt;no sensitive information is ever sent to the LLM&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;The result is an &lt;STRONG&gt;automated, end-to-end process&lt;/STRONG&gt; where a Business Partner update in SAP S/4HANA Cloud triggers an event, CPI processes it, SAP AI Core generates the compliant email body, and the recipient is informed – all with minimal configuration effort.&lt;/P&gt;&lt;P&gt;This pattern can be applied to other master data objects and backend systems, as well as to any scenario where Cloud Integration must securely generate AI-based content — making it &lt;STRONG&gt;a powerful blueprint for scaling compliant AI adoption across the enterprise.&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/invoking-llm-from-cloud-integration-responsibly-made-easy-with-generative/ba-p/14176222"/>
    <published>2025-08-11T09:53:30.525000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-debug-sap-cpi-groovy-scripts-locally-using-visual-studio-code/ba-p/14173680</id>
    <title>How to Debug SAP CPI Groovy Scripts Locally Using Visual Studio Code.</title>
    <updated>2025-08-11T11:49:35.097000+02:00</updated>
    <author>
      <name>JohanCalderon</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/69425</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736915332"&gt;Introduction&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Sometimes it's necessary to debug code to find a bug — it happened to me too. Back then, our only solution was to use tools like “groovyIDE”, where we could print output to the console, just like old-school PHP developers.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;A few months ago, I published a Visual Studio Code extension that provides similar functionality to “groovyIDE” but for a local environment. This local setup also supports external libraries, such as JWT libraries.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The new version of the VS Code extension now allows debugging Groovy scripts locally using JDI (Java Debug Interface). I developed a tool that enables this functionality. Currently, it does not support all Java or Groovy classes.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;What do you need?&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Visual studio Code&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://marketplace.visualstudio.com/items?itemName=JohanCalderon.sap-cpi-groovy-script" target="_self" rel="nofollow noopener noreferrer"&gt;SAP CPI Groovy Script&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Java 1.8&lt;/LI&gt;&lt;LI&gt;Groovy 2.4&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://chromewebstore.google.com/detail/sap-cpi-tools-extension/kkionagkfbgemaciikjfpndemmhaghpm?hl=en-US&amp;amp;utm_source=ext_sidebar" target="_self" rel="nofollow noopener noreferrer"&gt;SAP CPI Extension tools&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1540401827"&gt;&lt;STRONG&gt;Installing and Configuring the Extension in VS Code&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_0-1754479103648.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297139i4AF6BA15939B57AA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_0-1754479103648.png" alt="JohanCalderon_0-1754479103648.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Before using the extension, you need to configure it properly.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Find Your Java and Groovy Installation Paths&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;If you've installed Java and Groovy or manually added them to your system &lt;STRONG&gt;PATH&lt;/STRONG&gt;, you can find their locations by running the following command in &lt;STRONG&gt;Command Prompt&lt;/STRONG&gt;:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_1-1754479127023.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297142iAD069168C4D131A6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_1-1754479127023.png" alt="JohanCalderon_1-1754479127023.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_2-1754479127024.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297140i8E9D7BCEDE9280AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_2-1754479127024.png" alt="JohanCalderon_2-1754479127024.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This will show you the installation paths for Java and Groovy.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Configure the Extension in VS Code&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Open &lt;STRONG&gt;VS Code Settings&lt;/STRONG&gt; and search for &lt;STRONG&gt;"Groovy"&lt;/STRONG&gt; to configure the extension.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_3-1754479127025.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297143i1720A7813EDEDF3E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_3-1754479127025.png" alt="JohanCalderon_3-1754479127025.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_4-1754479127027.png" style="width: 434px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297145i920889FB93B6CF75/image-dimensions/434x705?v=v2" width="434" height="705" role="button" title="JohanCalderon_4-1754479127027.png" alt="JohanCalderon_4-1754479127027.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Set Java Path&lt;/STRONG&gt;:&lt;BR /&gt;Example:&lt;BR /&gt;C:\programs\jdk1.8.0_441&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Set Groovy Path&lt;/STRONG&gt;:&lt;BR /&gt;Example:&lt;BR /&gt;C:\programs\groovy-2.4.21&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_5-1754479127028.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297144i71AD7AC5F2468028/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_5-1754479127028.png" alt="JohanCalderon_5-1754479127028.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After completing these steps, the VS Code extension will be ready to use for local Groovy script debugging.&lt;/P&gt;&lt;H2 id="toc-hId-1343888322"&gt;&lt;STRONG&gt;Creating a Project&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;There are three ways to create a project:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using the wizard&lt;/STRONG&gt; – This method creates a folder and an example script.&lt;/P&gt;&lt;P&gt;In VS Code, open the Command Palette, type &amp;gt;cpi, and select &lt;STRONG&gt;SAP CPI: Create a SAP CPI Groovy Script Project&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_0-1754479359288.png" style="width: 486px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297147i589DD153D8840736/image-dimensions/486x136?v=v2" width="486" height="136" role="button" title="JohanCalderon_0-1754479359288.png" alt="JohanCalderon_0-1754479359288.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It will prompt you to select a folder and enter a name for the project.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_1-1754479384068.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297149iD69A3B72F8D4135D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_1-1754479384068.png" alt="JohanCalderon_1-1754479384068.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_2-1754479384068.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297148iAF23BA924695112F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_2-1754479384068.png" alt="JohanCalderon_2-1754479384068.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After providing the folder and project name, a new project is created automatically.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_0-1754497276787.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297280i500494D847A78CA9/image-dimensions/502x196?v=v2" width="502" height="196" role="button" title="JohanCalderon_0-1754497276787.png" alt="JohanCalderon_0-1754497276787.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using SAP CPI Tools Extension&lt;/STRONG&gt; – This method creates a project containing the Groovy script code from SAP CPI.&lt;/P&gt;&lt;P&gt;In VS Code, open the Command Palette, type &amp;gt;cpi, and select &lt;STRONG&gt;SAP CPI: Create a SAP CPI Groovy Script from CPI Extension&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;It will prompt you to select a folder and enter a name for the project.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_3-1754479898886.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297150iA5FD392080FABDA3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_3-1754479898886.png" alt="JohanCalderon_3-1754479898886.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_4-1754479910568.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297151iBC15AE26C63C63C0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_4-1754479910568.png" alt="JohanCalderon_4-1754479910568.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;VS Code is listening for a connection from the SAP CPI Extension.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_5-1754479957236.png" style="width: 501px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297152i9CB46891B2CE944C/image-dimensions/501x244?v=v2" width="501" height="244" role="button" title="JohanCalderon_5-1754479957236.png" alt="JohanCalderon_5-1754479957236.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It will create a project containing the script from SAP CPI.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_6-1754480055089.png" style="width: 501px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297153i85B49E2D4D4226D4/image-dimensions/501x272?v=v2" width="501" height="272" role="button" title="JohanCalderon_6-1754480055089.png" alt="JohanCalderon_6-1754480055089.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using SAP CPI Tools Extension with trace files (Header, properties and body) -&amp;nbsp;&lt;/STRONG&gt;This method is the same as &lt;STRONG&gt;Using SAP CPI Tools Extension&lt;/STRONG&gt;; the only difference is that the project is created from trace details in the Design iFlow section.&lt;/P&gt;&lt;P&gt;You need to activate the trace and run the iFlow.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_7-1754480281908.png" style="width: 501px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297159i7463268EB6C1E054/image-dimensions/501x262?v=v2" width="501" height="262" role="button" title="JohanCalderon_7-1754480281908.png" alt="JohanCalderon_7-1754480281908.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After running the iFlow, press the &lt;STRONG&gt;Message&lt;/STRONG&gt; button and then the &lt;STRONG&gt;Draw&lt;/STRONG&gt; button to display all executed steps.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_8-1754480499545.png" style="width: 418px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297161i061F17E654B95983/image-dimensions/418x210?v=v2" width="418" height="210" role="button" title="JohanCalderon_8-1754480499545.png" alt="JohanCalderon_8-1754480499545.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_10-1754480518187.png" style="width: 503px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297164iDB7E5E3664749115/image-dimensions/503x230?v=v2" width="503" height="230" role="button" title="JohanCalderon_10-1754480518187.png" alt="JohanCalderon_10-1754480518187.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Double-click the Groovy script step, then click the &lt;STRONG&gt;VSCode Debug&lt;/STRONG&gt; button. This will create a project containing the code from that step and add trace files for Headers, Properties, and Body.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_11-1754480601890.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297165i568E0920A375893A/image-dimensions/502x162?v=v2" width="502" height="162" role="button" title="JohanCalderon_11-1754480601890.png" alt="JohanCalderon_11-1754480601890.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_13-1754480621174.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297167i425D56FB01715FB7/image-dimensions/502x265?v=v2" width="502" height="265" role="button" title="JohanCalderon_13-1754480621174.png" alt="JohanCalderon_13-1754480621174.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_1-1754497493639.png" style="width: 503px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297281iA192FD057BC50E89/image-dimensions/503x196?v=v2" width="503" height="196" role="button" title="JohanCalderon_1-1754497493639.png" alt="JohanCalderon_1-1754497493639.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1147374817"&gt;Run or debug the script&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_2-1754497591297.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297284iA0227FC80E89D32D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_2-1754497591297.png" alt="JohanCalderon_2-1754497591297.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To run or debug the project for the first time, it asks if you want to create a config.json file. This file is necessary because it contains the debug information.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_3-1754497607360.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297286i90BB2CE75ABE2DFC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_3-1754497607360.png" alt="JohanCalderon_3-1754497607360.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It created a file.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_4-1754497642441.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297289i8C90375484D8CB02/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JohanCalderon_4-1754497642441.png" alt="JohanCalderon_4-1754497642441.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After that, you can run or debug the code.&lt;/P&gt;&lt;P&gt;A print statement was added to display output in the console."&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_5-1754497681532.png" style="width: 503px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297292i782B64AC202A3D37/image-dimensions/503x308?v=v2" width="503" height="308" role="button" title="JohanCalderon_5-1754497681532.png" alt="JohanCalderon_5-1754497681532.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create a properties file in the in folder.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_6-1754497736441.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297297iA140F80ABC38AAA8/image-dimensions/502x229?v=v2" width="502" height="229" role="button" title="JohanCalderon_6-1754497736441.png" alt="JohanCalderon_6-1754497736441.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;RUN&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_7-1754497756121.png" style="width: 500px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297298i3425B0C0B95FD63B/image-dimensions/500x348?v=v2" width="500" height="348" role="button" title="JohanCalderon_7-1754497756121.png" alt="JohanCalderon_7-1754497756121.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When the run is finished, the result is in the out folder&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_10-1754497851510.png" style="width: 500px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297302i4229F6CB14B644C3/image-dimensions/500x250?v=v2" width="500" height="250" role="button" title="JohanCalderon_10-1754497851510.png" alt="JohanCalderon_10-1754497851510.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;DEBUG&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add breakpoints on lines 7, 12, and 15&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_11-1754497900240.png" style="width: 501px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297304i2999D30213747832/image-dimensions/501x283?v=v2" width="501" height="283" role="button" title="JohanCalderon_11-1754497900240.png" alt="JohanCalderon_11-1754497900240.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The variables are shown on the left side&lt;/P&gt;&lt;P&gt;Line 7&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_12-1754497927125.png" style="width: 501px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297305iCF9B2A68CA763F1A/image-dimensions/501x212?v=v2" width="501" height="212" role="button" title="JohanCalderon_12-1754497927125.png" alt="JohanCalderon_12-1754497927125.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Line 12&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_13-1754497961336.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297307i62902B73D78AFB4C/image-dimensions/502x148?v=v2" width="502" height="148" role="button" title="JohanCalderon_13-1754497961336.png" alt="JohanCalderon_13-1754497961336.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Line 15&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JohanCalderon_14-1754497975669.png" style="width: 502px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297308i7640AEFC36E2198B/image-dimensions/502x192?v=v2" width="502" height="192" role="button" title="JohanCalderon_14-1754497975669.png" alt="JohanCalderon_14-1754497975669.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Ready to streamline your Groovy debugging process? Give the VS Code extension a try and see how it can simplify your development workflow. If you have questions or want to share your experience, feel free to leave a comment below! Happy coding!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-debug-sap-cpi-groovy-scripts-locally-using-visual-studio-code/ba-p/14173680"/>
    <published>2025-08-11T11:49:35.097000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/bridging-edi-and-sap-s-4hana-cloud-seamless-edi-to-soap-integration/ba-p/14144660</id>
    <title>Bridging EDI and SAP S/4HANA Cloud: Seamless EDI-to-SOAP Integration</title>
    <updated>2025-08-11T12:03:16.570000+02:00</updated>
    <author>
      <name>ManaswiniPuli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1940178</uri>
    </author>
    <content>&lt;P&gt;In the fast-paced world of business today, it's crucial to connect traditional EDI systems with modern cloud ERP systems for streamlined operations. This blog takes a closer look at an integration fllow that handles inbound EDI messages, transforms them into SOAP format and facilitate effortless communication with SAP S/4HANA Cloud. Let's explore how this approach changes data formats and guarantees a reliable,standards-complaint integration between legacy and cloud systems.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;For detailed steps on creating and exporting the required MIG and MAG files used in this integration, please refer to the blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-migs-and-mags-using-integration-advisor-in-sap-btp-cockpit/ba-p/14143413" target="_blank"&gt;Creating MIGs and MAGs Using Integration Advisor i... - SAP Community&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-by-Step Guide: EDI to SOAP Inbound Integration Flow&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here’s a detailed look at the entire integration flow (iFlow) for processing EDI to SOAP inbound messages. This iFlow covers all the essential steps and components needed to receive, validate, transform, and route EDI messages into SOAP format, ensuring a smooth connection to the SAP S/4HANA Cloud system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_7-1752053017520.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284453iE6513532D02A320B/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_7-1752053017520.png" alt="ManaswiniPuli_7-1752053017520.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Receive EDI Data via AS2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To initiate the integration, configure the AS2 adapter to receive inbound EDI messages. This configuration supports secure and reliable data transfer in B2B scenarios involving EDI communication.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; For detailed steps on setting up the AS2 adapter, refer to the blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/step-by-step-guide-secure-file-exchange-with-as2-adapter-in-sap-cloud/ba-p/14143695" target="_blank"&gt;Step-by-Step Guide: Secure File Exchange with AS2 Adapter in SAP Cloud Integration – SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Add Start Message&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add a Start Message event to initiate the integration flow when EDI data is received through AS2.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Add EDI Splitter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add an EDI Splitter for handling incoming EDI messages. It breaks them down into individual transactions, checks their structure for validity, and can also generate acknowledgments if necessary.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Important:&lt;/STRONG&gt;All the XSD and mapping files mentioned in this flow( ASC-X12 XSD, preproc.xsl, and others)—are created and exported during the MIG and MAG setup process in SAP Integration Advisor.&lt;BR /&gt;For a step-by-step guide on generating and exporting these files, please refer to the blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-migs-and-mags-using-integration-advisor-in-sap-btp-cockpit/ba-p/14143413" target="_blank"&gt;Creating MIGs and MAGs Using Integration Advisor i... - SAP Community&lt;/A&gt;.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload ASC-X12 XSD File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;To upload ASC-X12 XSD file, navigate to the X12 tab in the EDI Splitter configuration. You’ll find the file in the Source folder that was extracted during the MAG export.&lt;/LI&gt;&lt;LI&gt;This file outlines the structure of the incoming EDI message, allowing the splitter to accurately parse and process the X12 message.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_1-1752060193831.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284489iA95C1002B00BA32F/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_1-1752060193831.png" alt="ManaswiniPuli_1-1752060193831.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: Add Router&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;Now, let’s add a Router following the EDI Splitter. This step is crucial for separating EDI messages from acknowledgement messages, especially if you’ve enabled the generation of acknowledgements in the splitter.&lt;/P&gt;&lt;P&gt;Let's define two routing paths:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Acknowledgement Route&lt;/STRONG&gt;: This route deals with acknowledgement messages independently.&lt;/P&gt;&lt;P&gt;In the Processing tab, you’ll see:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Expression Type Options:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;XML: This is used when the message is formatted in XML.&lt;/LI&gt;&lt;LI&gt;NON_XML: This is for messages that aren’t in XML format, where routing is based on the message headers.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We opt for NON_XML since the acknowledgement message isn’t in XML, so the router checks the message headers instead of the XML content.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Condition&lt;/STRONG&gt;: ${header.EDI_ACKNOWLEDGEMENT} = 'true'&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_5-1752052893931.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284451i666327ED704A7D00/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_5-1752052893931.png" alt="ManaswiniPuli_5-1752052893931.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Default Route:&lt;/STRONG&gt; Responsible for processing standard EDI messages.&lt;/P&gt;&lt;P&gt;No condition needed (processes all other messages)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_2-1752060272463.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284490i648A4A92543BC05E/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_2-1752060272463.png" alt="ManaswiniPuli_2-1752060272463.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5: Integrate EDI to XML Converter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now, let’s add an EDI to XML Converter to convert the EDI message into XML format.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Upload ASC-X12 XSD File&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Navigate to the X12 tab and upload the ASC-X12.xsd file from the Source folder that you got from the MAG export.&lt;/LI&gt;&lt;LI&gt;The ASC-X12 XSD file defines the structure of the incoming EDI message, enabling the EDI to XML Converter to accurately interpret and transform the EDI data into XML format.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_8-1752053118395.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284454i89136E273FF328CA/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_8-1752053118395.png" alt="ManaswiniPuli_8-1752053118395.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6: Include&amp;nbsp;XSLT Mapping (Pre-processing)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Next up, we’ll add XSLT Mapping to handle data preprocessing and transformation.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload preproc.xsl File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Under the&amp;nbsp;&lt;STRONG&gt;Processing&lt;/STRONG&gt;&amp;nbsp;tab, upload the preproc.xsl File from the&amp;nbsp;&lt;STRONG&gt;Source&lt;/STRONG&gt;&amp;nbsp;folder extracted from the MAG export.&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;This step modifies the XML structure created from the EDI message, ensuring it aligns with the expected input format for message mapping.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_9-1752053218929.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284455iF1E52121053479B4/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_9-1752053218929.png" alt="ManaswiniPuli_9-1752053218929.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7: Add XML Validator (Post-processing)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add an XML Validator to validate the pre-processed XML.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload X12_850_PurchaseOrder_MIG_RD.xsd File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Navigate to the Validation tab and upload the X12_850_PurchaseOrder_MIG_RD.xsd file from the Source folder you extracted from the MAG export.&lt;/LI&gt;&lt;LI&gt;This step makes sure that the transformed XML adheres to the expected schema before you proceed to message mapping, helping you identify any structural issues early on.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_10-1752053254168.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284456i159845643F5EF3D0/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_10-1752053254168.png" alt="ManaswiniPuli_10-1752053254168.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8: Implement XSLT Mapping (Main Mapping)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s add an XSLT Mapping to transform the validated EDI XML into the target SOAP message structure.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Upload Mapping_X12_850_PurchaseOrder_MIG_to_SOAP_SalesOrder_MIG.xsl File&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Under the Processing tab, you’ll need to upload the Mapping_X12_850_PurchaseOrder_MIG_to_SOAP_SalesOrder_MIG.xsl file from the root folder of the exported MAG zip file.&lt;/LI&gt;&lt;LI&gt;This main mapping file, which was generated by SAP Integration Advisor (IA), is crucial for transforming the data into the right format for SAP S/4HANA Cloud.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_11-1752053302564.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284457iB3B5CA68F2D45C00/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_11-1752053302564.png" alt="ManaswiniPuli_11-1752053302564.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 9: Apply XSLT Mapping (Post-processing)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add an XSLT Mapping to adjust the mapped XML output to the final structure required by the target system.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload SOAP_SalesOrder_MIG_postproc.xsl File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Head over to the Processing tab and upload the SOAP_SalesOrder_MIG_postproc.xsl file from the Target MIG folder.&lt;/LI&gt;&lt;LI&gt;This ensures the transformed XML matches the exact format expected by the target system for successful processing.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_12-1752053341290.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284458i72CD3F449717F994/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_12-1752053341290.png" alt="ManaswiniPuli_12-1752053341290.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 10: Add SOAP Receiver Adapter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use the SOAP Receiver Adapter to connect to SAP S/4HANA and transmit the transformed XML payload over a SOAP-based web service. This adapter ensures that the data is encapsulated in a SOAP envelope and sent to the appropriate endpoint.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Address&lt;/STRONG&gt;:Enter the SOAP service endpoint URL provided by your target system.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;URL to WSDL&lt;/STRONG&gt;:Click on Browse and upload the .wsdl file that corresponds to your target SOAP service. CPI will automatically fill in the Service, Endpoint, and Operation Name fields based on the WSDL information.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt;&amp;nbsp;Basic&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Credential Name:&amp;nbsp;&lt;/STRONG&gt;Enter the Credential Name of the User Credentials you set up in Security Material.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_14-1752056043811.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284461i14CDBF398602D2F2/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_14-1752056043811.png" alt="ManaswiniPuli_14-1752056043811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This marks the end of the configuration for the EDI-to-SOAP inbound integration flow. With this iFlow in action, incoming EDI messages are handled efficiently and routed to the S/4HANA target system in the required SOAP format.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt;&lt;BR /&gt;All the views and opinions in this blog are my own and are made in my personal capacity. SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/bridging-edi-and-sap-s-4hana-cloud-seamless-edi-to-soap-integration/ba-p/14144660"/>
    <published>2025-08-11T12:03:16.570000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-celebrating-the-winners-and-innovation-in/ba-p/14172106</id>
    <title>SAP BTP Hackathon at SAPHILA 2025: Celebrating the Winners and Innovation in Action</title>
    <updated>2025-08-13T09:12:43.763000+02:00</updated>
    <author>
      <name>winklero</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/426853</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;From Ideation to Demo Jam: A Journey of Collaboration&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;As outlined in the previous blog, the hackathon was more than just a competition, it was a journey. Eighteen teams, representing a broad cross-section of AFSUG members, embarked on an eight-week sprint, supported by SAP BTP experts and coaches. The focus was on building real-world solutions using SAP BTP components like SAP Build, SAP HANA Cloud, SAP Integration Suite and ABAP Cloud amongst other SAP BTP based Services &amp;amp; Solutions.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;After intensive enablement and development sessions, three teams emerged as finalists and were invited to present their solutions live at SAPHILA 2025’s Demo Jam. The energy in the room was palpable as each team showcased how SAP BTP could be harnessed to solve pressing business challenges.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_9-1754393553994.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296559i65EFF3CD8612C2A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_9-1754393553994.png" alt="winklero_9-1754393553994.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;And the Winner Is… PwC South Africa!&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_0-1754393299694.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296543iCE5C674A6617840E/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_0-1754393299694.jpeg" alt="winklero_0-1754393299694.jpeg" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;In a closely contested finale, the SAPHILA audience voted PwC South Africa as the overall winner for their AI-driven legal services platform “Legal Ease”.&amp;nbsp;This solution stood out for its innovative use of AI to simplify legal document processing and understanding, a pain point for many businesses and consumers alike. “Legal Ease” enables users to scan and summarize complex contracts, ask questions in natural language, and receive clear, actionable insights. The platform even supports translation into local languages and integrates with knowledge bases for related services. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;What impressed both the jury and the audience was not just the technical sophistication, but the clear business value: “Legal Ease” addresses real frustrations around contract transparency, billing and accessibility, with the potential to transform how legal services are delivered in Africa and beyond.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Honouring the Finalists: Debswana Diamond Company and Bell Equipment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Let’s not forget the other two finalists, who also delivered outstanding solutions:&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Debswana Diamond Company&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;tackled overtime management with an AI-powered assistant that streamlines scheduling, reduces costs and supports employee well-being.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Bell Equipment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;automated shipment tracking and document processing, helping to prevent stock shortages and improve logistics efficiency.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Both teams demonstrated the breadth of innovation possible with SAP BTP and set a high bar for future Hackathons.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_2-1754393465394.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296552i4ABBA6DEF33DF299/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_2-1754393465394.png" alt="winklero_2-1754393465394.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Reflections and What’s Next&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The Hackathon’s main objective was to foster deep collaboration between SAP and its customers, giving local teams a hands-on opportunity to explore and build with SAP BTP.&amp;nbsp;The quality and diversity of solutions, especially the creative use of AI and automation, highlight the immense potential within the African SAP community.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Amanda Gibbs, CEO of AFSUG, summed it up perfectly:&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&lt;SPAN&gt;“It is inspiring to witness what can be achieved in just eight weeks using SAP BTP;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&lt;SPAN&gt;we’ve seen incredible progress and innovation.”&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Join the Conversation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Congratulations again to all teams who participated and especially to PwC South Africa for their winning solution! If you were inspired by the SAP BTP Hackathon or have thoughts on how SAP BTP can drive innovation in your organization, I’d love to hear from you in the comments.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;And if you missed out this year,&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;keep an eye out for future SAP BTP Hackathons - this is just the beginning!&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_3-1754393500871.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296553iB355DF2E2218111A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_3-1754393500871.png" alt="winklero_3-1754393500871.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_4-1754393507094.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296554i19D3E337CCE34F01/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_4-1754393507094.png" alt="winklero_4-1754393507094.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_5-1754393513173.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296555i1F8DCACD879B51EE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_5-1754393513173.png" alt="winklero_5-1754393513173.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_8-1754393531840.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296558iDD76EEFFC71232AF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_8-1754393531840.png" alt="winklero_8-1754393531840.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="winklero_7-1754393525555.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296557iBED54F1BAA1636EB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_7-1754393525555.png" alt="winklero_7-1754393525555.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-celebrating-the-winners-and-innovation-in/ba-p/14172106"/>
    <published>2025-08-13T09:12:43.763000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/ai-assisted-erp-transforming-sap-btp-integration-with-faster-smarter-iflow/ba-p/14164130</id>
    <title>AI-Assisted ERP: Transforming SAP BTP Integration with Faster, Smarter iFlow Development</title>
    <updated>2025-08-13T11:01:56.244000+02:00</updated>
    <author>
      <name>Dhruv01</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1997826</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736016642"&gt;&lt;STRONG&gt;The Rise of AI in ERP Development&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;SAP has been the most&lt;STRONG&gt; trusted ERP system&lt;/STRONG&gt; for decades in enterprise business, supporting organizations globally with both &lt;STRONG&gt;on-premise and cloud solutions&lt;/STRONG&gt;. As companies have grown and interconnected for business, seamless system integration has become essential to keep processes running smoothly.&lt;BR /&gt;&lt;BR /&gt;Artificial Intelligence (AI) is now transforming the ERP landscape by helping both functional and technical developers, as well as solution architects, work smarter and faster, automate repetitive tasks, and maintain consistency across projects. &lt;STRONG&gt;AI-assisted ERP&lt;/STRONG&gt; is now a reality—something that once seemed like a&lt;STRONG&gt; futuristic concept&lt;/STRONG&gt;. It is reshaping the way &lt;STRONG&gt;SAP solutions are designed, built, and delivered&lt;/STRONG&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1539503137"&gt;&lt;STRONG&gt;The Challenges I Face When Building Complex Integration&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;As an SAP Integration Suite/CPI consultant, I create complex iFlows and complete integrations between SAP and non-SAP systems. However, building &lt;STRONG&gt;complex iFlows&lt;/STRONG&gt; often takes weeks if I do it manually. When creating an iFlow, it’s always the major core components that make it more complicated. Examples include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Complex Structure&lt;/LI&gt;&lt;LI&gt;Message Mapping&lt;/LI&gt;&lt;LI&gt;Value Mapping&lt;/LI&gt;&lt;LI&gt;Groovy Script for intricate, custom logic&lt;/LI&gt;&lt;LI&gt;API Management and API Proxy (Open API Specification)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This process proves time-intensive and prone to inconsistencies, especially for large-scale projects where employees must repeat the same tasks multiple times.&lt;/P&gt;&lt;H2 id="toc-hId-1342989632"&gt;&lt;STRONG&gt;How AI-Assisted ERP Changed the Game for Me &lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;AI use is growing at a considerable speed in all economic sectors, and AI in ERP represents one of the fastest-growing among them. In regard to SAP, we now see &lt;STRONG&gt;SAP AI Core, SAP AI Launchpad, Generative AI Hub,&lt;/STRONG&gt; and SAP’s generative AI co-pilot, &lt;STRONG&gt;Joule&lt;/STRONG&gt;, in most of SAP’s products and services, including:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Build Apps&lt;/LI&gt;&lt;LI&gt;Build Process Automation&lt;/LI&gt;&lt;LI&gt;Build Code&lt;/LI&gt;&lt;LI&gt;Joule Studio&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;SAP Business Suite&lt;/LI&gt;&lt;LI&gt;etc.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;SAP AI is one of the biggest changes on the BTP infrastructure. It allows me to build my own AI pipelines and set my model configurations. The Prompt Manager in SAP Generative AI Hub helps build my custom AI solutions.&lt;/P&gt;&lt;P&gt;Recently, I started working on a product for SAP Integration Suite that accelerates CPI development and integration tasks by 40-50%. I found that if the development of your major core components are &lt;STRONG&gt;automated by AI, it makes&lt;/STRONG&gt; the process faster and more reliable. Instead of starting from scratch, &lt;STRONG&gt;AI analyzes Functional Design Specifications (FDS)&lt;/STRONG&gt; and generates ready-to-use iFlows complete with &lt;STRONG&gt;message mappings, value mappings, Groovy scripts, and OpenAPI specs&lt;/STRONG&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1146476127"&gt;&lt;STRONG&gt;Where Cerebro SASA Fits In&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Cerebro SASA integrates with SAP Integration Suite and shows you how its powerful AI engine generates&lt;STRONG&gt; iFlows directly from FDS&lt;/STRONG&gt;, including all core components and configuration properties. Cerebro SASA can:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Generate Message Mapping and Value Mapping&lt;/LI&gt;&lt;LI&gt;Produce an iFlow structure with configuration properties&lt;/LI&gt;&lt;LI&gt;Set OpenAPI Specifications&lt;/LI&gt;&lt;LI&gt;Reduce development effort and timelines&lt;/LI&gt;&lt;LI&gt;Maintain consistency and accuracy between projects&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With Cerebro SASA, you can start your development with a 40% head start, adding substantial value to your process.&lt;/P&gt;&lt;P&gt;Cerebro SASA is an SAP Certified Solution that also allows you to carry out a migration from MuleSoft to BTP . You can find &lt;A href="https://www.sap.com/products/technology-platform/partners/aifa-labs-llc-aipowered-mulesoft-migration-to-sap-integration-suite.html" target="_self" rel="noopener noreferrer"&gt;Cerebro SASA&lt;/A&gt; on SAP Store and Solution hub. It will migrate your MuleSoft APIs to SAP BTP with an AI-powered approach and help you build a faster, scalable, and complex iFlows.&lt;/P&gt;&lt;H2 id="toc-hId-949962622"&gt;&lt;STRONG&gt;Let’s Talk About What Cerebro SASA Can Do for You&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;AI-assisted ERP alters how we think about SAP development. By automating integration tasks that once took days or even weeks, AI solutions allow developers to perform faster, smarter, and more reliable integrations.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Cerebro SASA&lt;/STRONG&gt; represents one such solution that demonstrates the power of AI in ERP development by helping organizations save time, minimize manual effort, and improve consistency and uniformity between multiple integration projects.&lt;/P&gt;&lt;P&gt;As AI is growing faster then ever, its role in &lt;STRONG&gt;SAP ERP Solutions will only become more vital&lt;/STRONG&gt;, making it an essential part of the future of enterprise software development.&lt;/P&gt;&lt;H2 id="toc-hId-753449117"&gt;&lt;STRONG&gt;Key Benefits of Cerebro SASA&lt;/STRONG&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Seamless Integration with SAP BTP and Sap Integration Suite and helps integration experts by automating iFlows creation directly from FDS, reducing the manual work.&lt;/LI&gt;&lt;LI&gt;Delivers up to a 40-50% time savings, reducing an organization’s cost, promoting innovation, speeding up delivery, and adding value for the &lt;A href="http://customer.it" target="_blank" rel="noopener nofollow noreferrer"&gt;customer.&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Generates mappings files and complex Groovy scripts&lt;/LI&gt;&lt;LI&gt;Automates repetitive work and builds highly scalable architecture&lt;/LI&gt;&lt;LI&gt;Connect with cross functional and technical teams smoothly.&lt;/LI&gt;&lt;LI&gt;Secure you Data by deploying to your private Cloud.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-556935612"&gt;&lt;STRONG&gt;The Future of AI-Assisted ERP in SAP&lt;BR /&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The future of ERP will involve faster integrations and &lt;STRONG&gt;intelligent systems that build themselves while guiding developers to focus on innovation&lt;/STRONG&gt;. AI-assisted ERP represents a major step toward this vision, where technology handles the heavy lifting and experts add creativity and strategy.&lt;BR /&gt;Cerebro SASA embodies this shift by turning complex SAP BTP integrations into an AI-powered, automated process. Beyond saving time and costs, it creates &lt;STRONG&gt;a new standard for how companies design enterprise software: smarter, scalable, and future-ready&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;As AI, tools like Cerebro SASA will help enterprises &lt;STRONG&gt;move from building solutions to co-creating solutions with AI&lt;/STRONG&gt;, defining the next era of ERP development.&lt;/P&gt;&lt;P&gt;Discover the Cerebro SASA on the AIFA Labs and explore how it is revolutionizing AI-assisted SAP ERP. Learn how this innovative platform is evolving to simplify integrations, accelerate development, and empower enterprises to co-create smarter, future-ready solutions with AI.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Let’s connect and discuss &lt;STRONG&gt;AI in SAP ERP and enterprise integrations&lt;/STRONG&gt;&lt;/EM&gt; a little further&lt;EM&gt;. If you have thoughts, questions, or experiences to share, feel free to drop a comment. We’d love to hear your perspective!&lt;BR /&gt;&lt;SPAN&gt;"GenAI Assisted Content"&lt;/SPAN&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;BR /&gt;&lt;/EM&gt;Thankyou&lt;BR /&gt;Dhruv Kumar&lt;BR /&gt;Senior SAP BTP Consultant&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/ai-assisted-erp-transforming-sap-btp-integration-with-faster-smarter-iflow/ba-p/14164130"/>
    <published>2025-08-13T11:01:56.244000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/build-a-web-app-and-connect-to-s-4hana-with-sap-integration-suite/ba-p/14179607</id>
    <title>Build A Web App and Connect to S/4HANA with SAP Integration Suite</title>
    <updated>2025-08-13T12:45:21.973000+02:00</updated>
    <author>
      <name>alexanderroan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/561103</uri>
    </author>
    <content>&lt;P&gt;A big part of the magic behind AI, advanced analytics, and {insert tech buzzword here} is the humble API!&lt;/P&gt;&lt;P&gt;I remember the excitement about service-oriented architecture in the late 1990s and early 2000s. Back when most organisations had 'fat' ERPs with extensive customisation, the idea that we could split things up into different apps and connect in a standardised way was refreshing.&lt;/P&gt;&lt;P&gt;I recently noticed a &lt;A href="https://community.sap.com/t5/sap-codejam/sap-codejam-connecting-systems-and-services-using-sap-integration-suite/ec-p/14110686#M848" target="_self"&gt;SAP CodeJam&lt;/A&gt;&amp;nbsp;on the SAP community events calendar that involved connecting systems to S/4HANA using SAP Integration Suite.&lt;/P&gt;&lt;P&gt;I thought it might be fun to build a web app and see if I could successfully connect it to S/4HANA.&lt;/P&gt;&lt;P&gt;A basic understanding of frontend to enterprise backend via cloud architecture is useful for everyone; business experts, technology experts, and people experts&lt;/P&gt;&lt;P&gt;The article is broken into three parts: an introduction, a step-by-step explanation for generalists, and my build/test notes for anyone working on something similar. The third section includes details on all the test tools, and configuration settings.&lt;/P&gt;&lt;P&gt;A couple of quick disclaimers:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;I'm not an integration expert:&lt;UL&gt;&lt;LI&gt;I don't look at integration suite vs. other solutions&lt;/LI&gt;&lt;LI&gt;I don't cover best practices, typical challenges, good use cases&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;My solution here is likely not optimal:&lt;UL&gt;&lt;LI&gt;It's just a vanilla HTML, CSS, JS frontend&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;---&lt;/P&gt;&lt;H1 id="toc-hId-1608011118"&gt;Part 1: introduction&lt;/H1&gt;&lt;H2 id="toc-hId-1540580332"&gt;From web app to S/4HANA&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300221i6AE07F957A2E6A24/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-1.png" alt="integration-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The plan:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The frontend is a web page to search for data from within S/4HANA&lt;/LI&gt;&lt;LI&gt;The web server handles communication between the frontend and SAP Cloud&lt;/LI&gt;&lt;LI&gt;SAP Integration Suite will route and format the message for S/4HANA&lt;/LI&gt;&lt;LI&gt;S/4HANA is the source of data.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Tools/technology:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Utilise the free trial account for SAP BTP and Integration Suite&lt;/LI&gt;&lt;LI&gt;Build the frontend and web app ourselves&lt;/LI&gt;&lt;LI&gt;We can't access S/4HANA. However, the CodeJam provides a S/4HANA mock server that mimics the behaviour of an API within S/4HANA.&lt;/LI&gt;&lt;LI&gt;If we use a mock system, we will need to run it locally. So, adjusting the architecture.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300223iF83EF9D1F958295D/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-2.png" alt="integration-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This adds SAP Cloud Connector which allows an "on-premise" application to connect with SAP Cloud.&lt;/P&gt;&lt;H2 id="toc-hId-1344066827"&gt;The front end&lt;/H2&gt;&lt;P&gt;The completed app offers a summary view and a detailed view. Here's a short &lt;A href="https://youtu.be/wNgAwEfLyX0" target="_self" rel="nofollow noopener noreferrer"&gt;screen recording&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1276636041"&gt;Summary view&lt;/H3&gt;&lt;P&gt;This is a screenshot from the web browser (firefox).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-3.png" style="width: 986px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300227i15B2BBB969C15471/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-3.png" alt="integration-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The top part of the page has a search form that allows you to search for a business partner. The bottom part of the page shows the results with a selection of key fields in a card style layout.&lt;/P&gt;&lt;P&gt;The mock system we are using allows for four different search possibilities:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Search for a single business partner by number&lt;/LI&gt;&lt;LI&gt;Search for all business partners&lt;/LI&gt;&lt;LI&gt;Search for a single business partner by number, including address details&lt;/LI&gt;&lt;LI&gt;Search for all business partners, including address details.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1080122536"&gt;Detail view&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300230iFE51F5F8AD6D02A5/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-4.png" alt="integration-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The detail view shows the results in a table. This table has a horizontal scroll bar, which can be adjusted to view all the fields. The table includes 'raw' results, so there are some 'technical' entries like `[object Object]` and some blanks, which I think is fine for this mock up stage.&lt;/P&gt;&lt;H3 id="toc-hId-883609031"&gt;Responsive view&lt;/H3&gt;&lt;P&gt;For tablets and mobile, the card view resizes with the browser window.&lt;/P&gt;&lt;P&gt;![the front end - summary view on mobile](/assets/images/blog/integration/integration-5.png)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-5.png" style="width: 364px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300231i01B740227C1E13DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-5.png" alt="Integration-5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I'll come back to how this front end was built after running through the integration flow.&lt;/P&gt;&lt;H2 id="toc-hId-558012807"&gt;S/4HANA&lt;/H2&gt;&lt;P&gt;The value of this flow is being able to design and build a frontend to access real-time, trusted business data from S/4HANA in a standardised way. In a real-world example, our frontend could be an employee portal or supplier portal.&lt;/P&gt;&lt;P&gt;S/4HANA is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP's enterprise software for large organisations. It handles processes such as purchasing, manufacturing, sales, shipping, finance, etc.&lt;/LI&gt;&lt;LI&gt;An evolution from their earlier ERP products (R/1, R/2, R/3, ECC).&lt;/LI&gt;&lt;LI&gt;A complex platform comprising thousands of programs, tables, and customisations used by many large enterprises.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;S/4HANA already comes with a web frontend called Fiori, which includes thousands of apps. However, in this example imagine we are building something for a casual user that does not require the full capability of Fiori. Or, just consider it's for fun.&lt;/P&gt;&lt;P&gt;Further reading on S/4HANA:&lt;/P&gt;&lt;P&gt;[SAP help - S/4HANA](&lt;A href="https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE?locale=en-US&lt;/A&gt;)&lt;/P&gt;&lt;H2 id="toc-hId-361499302"&gt;Business partner&lt;/H2&gt;&lt;P&gt;The mock server simulates one of the business partner APIs for S/4HANA.&lt;/P&gt;&lt;P&gt;A business partner is a reference or master data record that represents a third party that an organisation works with. This includes customers, suppliers, and employees.&lt;/P&gt;&lt;P&gt;Business partner master data is organised by key fields such as "category" and "role".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300232iDF2DB3D934F8EECC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-6.png" alt="Integration-6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;All business partners have general data such as name, address, etc., then they have role-specific data, which may include, but are not limited to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Purchasing data&lt;/LI&gt;&lt;LI&gt;Sales data&lt;/LI&gt;&lt;LI&gt;Accounting data&lt;/LI&gt;&lt;LI&gt;And so on.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;To understand how business partner data is used, consider a typical ERP process like order-to-cash:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300233i882EADCDD4912385/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-7.png" alt="Integration-7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This is a summary of the order to cash process. During sales, deliveries, and billing, information from the business partner master record is utilised.&lt;/P&gt;&lt;P&gt;The business partner master stores long-term stable information about the customer. It's used for both reference and validation during transaction entry.&lt;/P&gt;&lt;P&gt;This ensures there is consistency across transactions over time in terms of how they reference business partners. This is critical for reporting. Consider comparability, aggregation, etc.&lt;/P&gt;&lt;P&gt;Further reading on business partners:&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE/74b0b157c81944ffaac6ebc07245b9dc/45653b5856de0846e10000000a441470.html?locale=en-US&amp;amp;version=LATEST" target="_self" rel="noopener noreferrer"&gt;Help - Business Partner&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-164985797"&gt;S/4HANA Architecture&lt;/H2&gt;&lt;P&gt;The mock server simulates an S/4HANA API. Let's look inside S/4HANA.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300236i8B0B2CC5994D164A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-8.png" alt="Integration-8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Starting from the top right, S/4HANA has two primary ways for users to interact. The traditional SAP graphical user interface (GUI) and the modern Fiori web-based user interface.&lt;/P&gt;&lt;P&gt;I've drawn APIs to the left of these. The APIs allow applications to interact with S/4HANA.&lt;/P&gt;&lt;P&gt;Consider the data model in S/4HANA in two separate parts. The first is the traditional HANA database. This is where master data and transactional data are stored. On top of this is the virtual data model. This consists of core data services views. This is a way to define different sets of data to meet the needs of APIs and Fiori Apps.&lt;/P&gt;&lt;P&gt;In this example, we are using a business partner data API. Behind the scenes, the API sources data from CDS views, which in turn connect to the HANA DB tables.&lt;/P&gt;&lt;P&gt;---&lt;/P&gt;&lt;H1 id="toc-hId--160610427"&gt;Part 2: step by step walkthrough (for everyone)&lt;/H1&gt;&lt;P&gt;In this section, I'll summarise the process and technology involved at each step.&lt;/P&gt;&lt;H2 id="toc-hId-119213144"&gt;Point 1: Web communication&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-map-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300239i27A3BC33FE94D8D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-map-1.png" alt="integration-map-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Building an integration flow between web connected applications relies on protocols and standards for web communication. Let's run through the main concepts.&lt;/P&gt;&lt;H3 id="toc-hId--370703368"&gt;Client/server&lt;/H3&gt;&lt;P&gt;The terms client and server are used to describe the requester and receiver. For example, the web browser on a computer is a client, and google search is a server.&lt;/P&gt;&lt;P&gt;Internet communications use the HTTP protocol.&lt;/P&gt;&lt;P&gt;![HTTP communication](/assets/images/blog/integration/integration-10.png)&lt;/P&gt;&lt;P&gt;Hypertext Transfer Protocol (HTTP) is a standard protocol for communication between clients and web servers. Web pages are written in Hypertext Markup Language (HTML).&lt;/P&gt;&lt;P&gt;The term Uniform Resource Locator (URL) is used to describe an address.&lt;/P&gt;&lt;H3 id="toc-hId--567216873"&gt;The structure of a URL&lt;/H3&gt;&lt;P&gt;URLs have five key parts:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Protocol: `http://`&lt;/LI&gt;&lt;LI&gt;Domain: `&lt;A href="http://www.example.com" target="_blank" rel="noopener nofollow noreferrer"&gt;www.example.com&lt;/A&gt;`&lt;/LI&gt;&lt;LI&gt;Path: `/pages/`&lt;/LI&gt;&lt;LI&gt;Query string: `?id=1&amp;amp;cat=test`&lt;/LI&gt;&lt;LI&gt;Fragment: `#article` (an internal page reference, often not present)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;When it comes to APIs, the query string provides the ability to specify parameters for search and filter. In this case, the query string could include a business partner number.&lt;/P&gt;&lt;H3 id="toc-hId--763730378"&gt;HTTPS&lt;/H3&gt;&lt;P&gt;HTTPS uses the HTTP protocol, but it adds a secure transport layer. HTTPS means the HTTP message is encrypted before transmission.&lt;/P&gt;&lt;P&gt;The only part that isn't encrypted is the domain name.&lt;/P&gt;&lt;H3 id="toc-hId--960243883"&gt;Internet protocol (IP) address&lt;/H3&gt;&lt;P&gt;While URLs are designed to be human-readable. An IP is a numerical label like "192.0.2.1" that identifies a computer or network.&lt;/P&gt;&lt;P&gt;URLs are used for navigation. IPs are used for routing and communication. They identify a specific device on a network (laptop, server, etc.).&lt;/P&gt;&lt;P&gt;An IP address can be used in place of a domain name with HTTP and HTTPS&lt;/P&gt;&lt;P&gt;"&lt;A href="http://192.0.2.1" target="_blank" rel="noopener nofollow noreferrer"&gt;http://192.0.2.1&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;While an IP address represents a computer. The term "port" is used to specific a specific input/output location.&lt;/P&gt;&lt;P&gt;Ports are identified using 4 digits.&lt;/P&gt;&lt;P&gt;"http://{server}:{port}"&lt;BR /&gt;"&lt;A href="http://192.0.2.1:1000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://192.0.2.1:1000&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;A server is often referred to by 'host'&lt;/P&gt;&lt;P&gt;"http://{host}:{port}"&lt;/P&gt;&lt;P&gt;You can access ports on your own computer by using its IP or "localhost"&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:1000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:1000&lt;/A&gt;"&lt;/P&gt;&lt;H3 id="toc-hId--1156757388"&gt;From domain to IP&lt;/H3&gt;&lt;P&gt;The web browser uses a domain lookup service to translate a URL into an IP address.&lt;/P&gt;&lt;P&gt;"&lt;A href="http://www.example.com" target="_blank" rel="noopener nofollow noreferrer"&gt;http://www.example.com&lt;/A&gt;" becomes "&lt;A href="http://192.0.2.1" target="_blank" rel="noopener nofollow noreferrer"&gt;http://192.0.2.1&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;This is called the Domain Name System (DNS). Popular look up services include: Cloudflare, Google DNS, and OpenDNS.&lt;/P&gt;&lt;H3 id="toc-hId--1353270893"&gt;Messages&lt;/H3&gt;&lt;P&gt;The communications themselves can be thought of as messages. They contain a header and a body.&lt;/P&gt;&lt;P&gt;The header includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The URL&lt;/LI&gt;&lt;LI&gt;The method, most commonly GET and POST&lt;/LI&gt;&lt;LI&gt;GET sends a request without a body&lt;/LI&gt;&lt;LI&gt;POST sends a request with a body&lt;/LI&gt;&lt;LI&gt;Additional information on the content type and authorisation&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The body includes detailed content. For example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If you fill in a form on a web page, it would include the form data&lt;/LI&gt;&lt;LI&gt;If a server returns a web page, it would include the web page.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1549784398"&gt;Server Responses&lt;/H3&gt;&lt;P&gt;When a server receives a request, it responds with a status code and a body. Status codes include '200' representing "ok" and '404' representing 'Not Found'.&lt;/P&gt;&lt;P&gt;(404 has definitely reached meme levels of fame!).&lt;/P&gt;&lt;P&gt;The body that's returned depends on the status and the server's purpose.&lt;/P&gt;&lt;H3 id="toc-hId--1746297903"&gt;Real life examples&lt;/H3&gt;&lt;P&gt;Consider visiting the BBC website from a web browser, a simple GET request would return the home page.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300240i98D1E11DB146673D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-1.png" alt="Integration-10-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the other hand, consider logging into the BBC website. In this case, the browser sends the login name and password. Therefore, a POST request is used, and the request includes a body.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300241i9C9D28EC27350605/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-2.png" alt="Integration-10-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1942811408"&gt;Web connectivity and SAP&lt;/H3&gt;&lt;P&gt;Most SAP applications can use HTTPS communication. This is possibly one of the simplest ways we could define "Cloud" strategy.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;S/4HANA Cloud Public and S/4HANA Cloud Private can both utilise HTTPS&lt;/LI&gt;&lt;LI&gt;SAP BTP which includes SAP Integration Suite can utilise HTTPS&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Outside the SAP Cloud, we have systems like S/4HANA On-Premise. This is usually at an SAP customer's data centre or their 3rd party hosting service provider's data centre. On premise systems are usually not directly connected to the public internet. This is where SAP provide Cloud Connector to create a secure tunnel between on-premise and SAP Cloud.&lt;/P&gt;&lt;H3 id="toc-hId--1971141222"&gt;HTTP data transfer standards&lt;/H3&gt;&lt;P&gt;There are further standards as to how data is transferred using HTTP.&lt;/P&gt;&lt;P&gt;There are multiple standards for data transfer with HTTP. One of the earlier and more common standards is REST (Representational State Transfer).&lt;/P&gt;&lt;P&gt;Many SAP APIs utilise OData (Open data transfer protocol).&lt;/P&gt;&lt;H2 id="toc-hId--1874251720"&gt;Point 2: S/4HANA business partner API mock server&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300244i0C0E251EDEC4B8A1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-2.png" alt="Integration-map-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt;&amp;nbsp;Mimic the business partner API of an S/4HANA system.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A simple JavaScript server that can be run locally.&lt;/P&gt;&lt;P&gt;The mock server provided by the SAP community provides a simple way to simulate the design and test of an S/4HANA API.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The mock server mimics the business partner (A2X) API&lt;/LI&gt;&lt;LI&gt;This is one of the S/4HANA APIs (programmed inside S/4HANA)&lt;/LI&gt;&lt;LI&gt;In the case of the mock server, it's a JavaScript server&lt;/LI&gt;&lt;LI&gt;The mock server has limited functionality, it supports:&lt;UL&gt;&lt;LI&gt;Sample data for a few business partners&lt;/LI&gt;&lt;LI&gt;Retrieve all business partners&lt;/LI&gt;&lt;LI&gt;Retrieve a single business partner&lt;/LI&gt;&lt;LI&gt;Include additional address data in the response.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Installing and running the mock server is simple. The instructions are in part 3. When we run it our computer a local address is returned.&lt;/P&gt;&lt;P&gt;On my computer, it runs on "&lt;A href="http://localhost:3005/" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;This is the address for the Business Partner API. Entering this address in the web browser gives the following response:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300247i85F8DBD3A3C0907C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-3.png" alt="Integration-10-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The first item refers to the business partner API. This is the first point in the exercise where we can see the path for the Business Partner API:&lt;/P&gt;&lt;P&gt;"/sap/opu/odata/sap/API_BUSINESS_PARTNER"&lt;/P&gt;&lt;P&gt;The API path is just appended to the host, so:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;Clicking on the link in the browser shows additional information about the API. Note that the only services listed are A_BusinessPartner and A_BusinessPartnerAddress.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300248iD5D9B28D88C78E83/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-4.png" alt="Integration-10-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When building an integration flow, the mix of host names, port names, and paths can quickly become confusing. It's useful to track these as we go.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300249i78F4EB26BF7E6792/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-5.png" alt="Integration-10-5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Further reading on the mock server:&lt;/P&gt;&lt;P&gt;- &lt;A href="https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam" target="_self" rel="nofollow noopener noreferrer"&gt;The CodeJam repo&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://github.com/SAP-archive/cloud-s4-sdk-book/tree/mock-server" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://learning.sap.com/learning-journeys/develop-advanced-extensions-with-sap-cloud-sdk/exercise-setting-up-the-mock-server_c734679d-9ce9-4905-82c3-ed13603a671d" target="_self" rel="noopener noreferrer"&gt;SAP Learning&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--2070765225"&gt;Point 3: Application programming interface (API&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300253i7FD22496BC81C5DF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-3.png" alt="Integration-map-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Provide a standard way to define and operate services for an application that can be consumed by other applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; SAP have a large catalogue of standard APIs that come with S/4HANA.&lt;/P&gt;&lt;H3 id="toc-hId-1734285559"&gt;The Business partner API&lt;/H3&gt;&lt;P&gt;The API that was introduced under the S/4HANA business partner mock server is called 'business partner (A2X)'. It is a SAP standard API that uses the OData V2 standard.&lt;/P&gt;&lt;P&gt;While HTTP is the communication protocol. OData is an open standard related to the data.&lt;/P&gt;&lt;P&gt;When viewing the API details in the web browser, the display was JSON. This is JavaScript Object Notation, which is used in Odata. Point 5. in the flow will show more detail on this API.&lt;/P&gt;&lt;P&gt;Further reading on APIs and Odata:&lt;/P&gt;&lt;P&gt;-&amp;nbsp;&lt;A href="https://spec.openapis.org/oas/latest.html" target="_self" rel="nofollow noopener noreferrer"&gt;Open API spec&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://www.odata.org/" target="_self" rel="nofollow noopener noreferrer"&gt;OData&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1831175061"&gt;Point 4: Business technology platform (BTP)&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300256iC627FB8F7F6F5B78/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-4.png" alt="Integration-map-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Skipping Cloud Connector for now, brings us to BTP. Details from BTP are needed to set up Cloud Connector.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Enable customers to manage and build on SAP applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A set of tools encompassing various capabilities and environments.&lt;/P&gt;&lt;P&gt;SAP offer a free trial for BTP, which can be used to build and test integration flows. Instructions on how to register and set up BTP are included in part 3.&lt;/P&gt;&lt;P&gt;The BTP cockpit is where we can search for and set up different services.&lt;/P&gt;&lt;P&gt;It supports multiple infrastructures and runtimes so you can manage/build various types of applications from traditional SAP ABAP to web apps.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Supports multiple infrastructures/runtimes &amp;amp; languages, including:&lt;UL&gt;&lt;LI&gt;Cloud Foundry: develop new apps/services, multiple languages, runtimes&lt;/LI&gt;&lt;LI&gt;ABAP: extend ABAP based products (S/4HANA)&lt;/LI&gt;&lt;LI&gt;Kyma: Kubernetes to develop/run cloud-native apps&lt;/LI&gt;&lt;LI&gt;Neo: HTML5, Java, and HANA extended apps&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;BTP has multiple regions and infrastructure providers&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Regional deployment&lt;UL&gt;&lt;LI&gt;Provided by SAP or Infrastructure-as-a-Provider (IaaS)&lt;/LI&gt;&lt;LI&gt;AWS, Azure, Google Cloud, Alibaba Cloud&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;The key features of BTP include managing and building:&lt;UL&gt;&lt;LI&gt;Compose business processes&lt;/LI&gt;&lt;LI&gt;Application development and automation&lt;/LI&gt;&lt;LI&gt;Build and extend SAP applications&lt;/LI&gt;&lt;LI&gt;Integrate data&lt;/LI&gt;&lt;LI&gt;Analytics&lt;/LI&gt;&lt;LI&gt;Intelligent technologies&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;SAP Integration Suite utilises the Cloud Foundry environment. After we set up Business Technology Suite and SAP Intelligent Suite, a Cloud Foundry API endpoint will be provided in BTP.&lt;/P&gt;&lt;P&gt;In my case, this is "&lt;A href="https://api.cf.ap21.hana.ondemand.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.cf.ap21.hana.ondemand.com&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300258i04DE1404995C9368/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-11.png" alt="integration-11.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1634661556"&gt;Point 5. Business Accelerator Hub&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300259iB0C161A99F8D04C2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-5.png" alt="Integration-map-5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Provides a central source of information on SAP's APIs&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A web page with API details. Highly integrated with BTP.&lt;/P&gt;&lt;P&gt;Business Accelerator hub is a web resource from SAP. I've drawn it inside BTP as it closely relates to BTP content. It's a central repository for APIs from SAP &amp;amp; selected partners.&lt;/P&gt;&lt;P&gt;&lt;A href="https://api.sap.com/" target="_self" rel="noopener noreferrer"&gt;api.sap.com&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Main features&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Discover, explore, and test APIs&lt;/LI&gt;&lt;LI&gt;Consume integration and workflow content&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The Business Partner (A2X) API that is tested here can be viewed on Business Accelerator Hub.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Login to business accelerator hub&lt;/LI&gt;&lt;LI&gt;Search 'business partner (A2X)'&lt;/LI&gt;&lt;LI&gt;Click on the entry in the results&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300265iA01898E1E22775A1/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-12.png" alt="integration-12.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Some features of business accelerator hub:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Try out the APIs (sandbox environment)&lt;UL&gt;&lt;LI&gt;Useful to view a sample of the response&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;View the API capabilities:&lt;UL&gt;&lt;LI&gt;'API Reference' tab, scroll down to 'Business Partner' and click on it&lt;/LI&gt;&lt;LI&gt;This shows the list of capabilities of the API&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;View the API specification&lt;UL&gt;&lt;LI&gt;'Overview' tab, scroll down to 'API Specification' and click on it&lt;/LI&gt;&lt;LI&gt;Download OpenAPI JSON&lt;/LI&gt;&lt;LI&gt;View in web browser, text editor to see extensive details&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The API hub is a useful resource in terms of discovering and designing potential API use.&lt;/P&gt;&lt;P&gt;From the mock server specification, we know it's limited to only a few capabilities. We can find the path names for each of these on API hub:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-12-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300267iB9991B6EA91D1FC9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-12-1.png" alt="Integration-12-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This confirms the mock server only has a small fraction of the full business partner (A2X) capabilities. This makes sense given how extensive business partner data is in SAP. It's noteworthy that the mock server only supports 'read' activities. We can't test creating or changing a business partner.&lt;/P&gt;&lt;P&gt;The details of each of these requests can be viewed by clicking into them.&lt;/P&gt;&lt;P&gt;While there are three request paths. The address path can be added to the "all business partners" or "single business partner", so there are four possibilities:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;All business partners&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;All business partners with address&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner/to_BusinessPartnerAddress"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Single business partner&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner('{BusinessPartner}')"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Single business partner with address&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerAddress"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These paths describe services of the API and are appended to the base URL.For example:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerAddress" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerAddress&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;The correct terminology for these URLs:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Base URL/host: &lt;A href="http://localhost:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Base path: /sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/LI&gt;&lt;LI&gt;Entity set: /A_BusinessPartner&lt;/LI&gt;&lt;LI&gt;Key Access: ('1234567')&lt;/LI&gt;&lt;LI&gt;Navigation property: /to_BusinessPartnerAddress&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;"('{business partner}')" in the example is a placeholder for a business partner number.&lt;/P&gt;&lt;P&gt;Updating the flow diagram with these details:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-12-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300270i7171352709F09CC3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-12-2.png" alt="Integration-12-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1438148051"&gt;Point 6: SAP Integration Suite&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300271i8FBBDE02F7A3CF64/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-6.png" alt="Integration-map-6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Design and manage communications between applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A service of SAP BTP.&lt;/P&gt;&lt;P&gt;SAP Integration Suite is one of the services available in Business Technology Platform. Therefore, a prerequisite is to register for the BTP free trial.&lt;/P&gt;&lt;P&gt;SAP Integration Suite can then be found under 'Services Marketplace'.&lt;/P&gt;&lt;P&gt;SAP Intelligent suite can be used for Cloud, on-premise, and hybrid scenarios. It includes pre-built, best-practice integration packs&lt;/P&gt;&lt;P&gt;Technically, it's a Java based app, and utilises the Apache Camel framework.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300274iC625747A413A6229/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-13.png" alt="Integration-13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The steps to install and set up are covered in part 3. After the initial set up you can navigate to the application.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-14.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300276i32A7F841634A21EB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-14.png" alt="Integration-14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For this demo/test, the two key menus within Integration Suite are:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Design &amp;gt; Integrations and APIs&lt;/LI&gt;&lt;LI&gt;Monitor &amp;gt; Integrations and APIs&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The design area allows us to create an integration flow which involves:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Specifying source or 'sender' system&lt;/LI&gt;&lt;LI&gt;Specifying target or 'receiver' system&lt;/LI&gt;&lt;LI&gt;Adding flow steps&lt;/LI&gt;&lt;LI&gt;Modify message header&lt;/LI&gt;&lt;LI&gt;Modify message contents&lt;/LI&gt;&lt;LI&gt;Route steps between sender and receiver.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Within design, there is a graphical editor to build the integration flow.&lt;/P&gt;&lt;H3 id="toc-hId-948231539"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300279iBAFE6B3B4B1AE952/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15.png" alt="Integration-15.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-751718034"&gt;Business Partner Integration Flow&lt;/H3&gt;&lt;P&gt;Creating the integration flow involves setting the sender details and designing the required transformations to meet the receiver (API) requirements.&lt;/P&gt;&lt;P&gt;As we work through this keep in mind the API expects one of four paths depending on the search scenario:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-A.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300281i7F82A0BD6569F827/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-A.png" alt="Integration-15-A.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-555204529"&gt;The sender&lt;/H3&gt;&lt;P&gt;The sender represents the address that SAP Integration Suite will listen on. This is the address we send a message to from our upstream app. In this case a web app.&lt;/P&gt;&lt;P&gt;This address is built up in three parts:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;A base which is provided when we deploy the integration flow&lt;/LI&gt;&lt;LI&gt;An 'Address' that we specify in the integration flow&lt;/LI&gt;&lt;LI&gt;Further path details from the web app.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The base of the endpoint is something along the lines of:&lt;/P&gt;&lt;P&gt;https://{trial-account-specific-details}-rt.cfapps.ap21.hana.ondemand.com/http/&lt;/P&gt;&lt;P&gt;For the address name, this demo/test uses the path `/request-business-partners/*` The "`*`" at the end allow us to send requests with additional details that can be utilised in the flow logic.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-2.png" style="width: 813px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300287iEFB652F16F584247/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-2.png" alt="Integration-15-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The web app will send four different types of message to match the four API scenarios, for the demo/test I will use:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;"/api/bp/single"&lt;/LI&gt;&lt;LI&gt;"/api/bp/all"&lt;/LI&gt;&lt;LI&gt;"/api/bp/single/add"&lt;/LI&gt;&lt;LI&gt;"/api/bp/single/all"&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The web app will also include the BP number in the message body.&lt;/P&gt;&lt;P&gt;We don't need to specify these in the Integration Flow as the `*` will allow them all to pass as long as they are preceded by "request-business-partners/"&lt;/P&gt;&lt;P&gt;Adding this information to the mapping table.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-B.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300290i5293141B171F7138/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-B.png" alt="Integration-15-B.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-526874715"&gt;Routing and Transformations&lt;/H3&gt;&lt;P&gt;The integration flow routes and transforms the received messages to meet the API requirements at the receiver. This involves:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Routing of messages from receiver to sender based on their content&lt;/LI&gt;&lt;LI&gt;1:1 relationship for each of the four scenarios&lt;/LI&gt;&lt;LI&gt;Transform the URLs&lt;/LI&gt;&lt;LI&gt;A part of the transformation is extraction of the business partner number from the received message and the placement of it into the API format URL.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-330361210"&gt;The receiver&lt;/H3&gt;&lt;P&gt;The receiver is set up to match the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300292i4EB268C6A7AECB21/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-3.png" alt="Integration-15-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;More detail on the settings of each step are in part 3.&lt;/P&gt;&lt;P&gt;At this point, the integration flow is:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300293i3A47FABC1963733D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-4.png" alt="Integration-15-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;As an alternative, the web app could have been programmed to send messages that already fit the API requirements. However, in some scenarios sender systems may be inflexible or difficult to develop on, making these transformation capabilities in Integration Suite important.&lt;/P&gt;&lt;P&gt;Further reading on SAP Integration Suite:&lt;/P&gt;&lt;P&gt;- &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/what-is-sap-integration-suite?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Help - What is integration suite&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://camel.apache.org/" target="_self" rel="nofollow noopener noreferrer"&gt;Apache Camel&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-427250712"&gt;Point 7. Cloud Connector&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300294iE46B3CEEA68DFE85/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-7.png" alt="Integration-map-7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Allow SAP BTP to communicate to On-Premise SAP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; An application that can provide a secure connection between SAP Cloud and On-Premise applications.&lt;/P&gt;&lt;P&gt;In the previous part, we defined the address details of the S/4HANA business partner mock server as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Base URL/host: &lt;A href="http://localhost:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Base path: /sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/LI&gt;&lt;LI&gt;Entity set: /A_BusinessPartner&lt;/LI&gt;&lt;LI&gt;Key Access: ('1234567')&lt;/LI&gt;&lt;LI&gt;Navigation property: /to_BusinessPartnerAddress&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you paid attention to the screenshot of the receiver configuration in Intelligent Suite, you will note that it was set to&lt;/P&gt;&lt;P&gt;`&lt;A href="http://s4-mock:3006/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('${property.employee_id" target="_blank" rel="noopener nofollow noreferrer"&gt;http://s4-mock:3006/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('${property.employee_id&lt;/A&gt;}')`&lt;/P&gt;&lt;P&gt;The domain was "s4-mock:3006" not "localhost:3005".&lt;/P&gt;&lt;P&gt;This is because we can't connect SAP Cloud directly to an on-premise system. The S/4HANA business partner mock server is a JavaScript server that runs locally on desktop/laptop and is hence considered 'on-premise' or outside the SAP Cloud.&lt;/P&gt;&lt;P&gt;SAP provides "SAP Cloud Connector" to connect on-premise applications to the SAP Cloud.&lt;/P&gt;&lt;P&gt;It's a JavaScript application that can be installed and run locally. Part of the set-up involves entering authentication details from BTP.&lt;/P&gt;&lt;P&gt;After it's set-up, Cloud Connector will accept messages from Integration Suite and forward them to the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;The detailed set-up is covered in part 3.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-16.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300295i06526E809FBCA319/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-16.png" alt="Integration-16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The screenshot above shows the "Cloud to On-Premise" mapping. A virtual host "s4-mock:3006" is mapped to the S4/HANA business partner mock server running locally on "localhost:3005".&lt;/P&gt;&lt;P&gt;Updating the integration flow:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-16-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300296i574EC1489A20E013/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-16-2.png" alt="Integration-16-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-230737207"&gt;Point 8: Web app&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300297i052F2A545DBA8042/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-8.png" alt="Integration-map-8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The web app is an application that uses JavaScript as a programming language. Web browsers have JavaScript engines and can run JavaScript code.&lt;/P&gt;&lt;P&gt;There are two parts to the web app. The frontend and the backend.&lt;/P&gt;&lt;P&gt;Think of JavaScript in two categories. frontend JavaScript and server (backend) JavaScript.&lt;/P&gt;&lt;H3 id="toc-hId--259179305"&gt;Frontend JavaScript&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Runs in the web browser, utilising the browsers JavaScript engine&lt;/LI&gt;&lt;LI&gt;Is oriented towards manipulating web documents (HTML documents), for example:&lt;/LI&gt;&lt;LI&gt;Retrieve fields from HTML (e.g. sign up form)&lt;/LI&gt;&lt;LI&gt;Update HTML (e.g. show results, dynamically add a new page)&lt;/LI&gt;&lt;LI&gt;The JavaScript engine in the browser has limitations.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--455692810"&gt;Server JavaScript&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Installed on a server (can also be run on a desktop/laptop)&lt;/LI&gt;&lt;LI&gt;A popular engine is Node.js&lt;/LI&gt;&lt;LI&gt;Is oriented towards messaging, connectivity, security, authentication&lt;/LI&gt;&lt;LI&gt;Has a lot less limitations than the web browser.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We could try to send a request from the frontend to SAP Integration Suite, but because it comes from a browser, it will likely result in errors.&lt;/P&gt;&lt;P&gt;I did try sending a message to Integration Suite from the browser, but received various CORS errors. CORS, or Cross-Origin Resource Sharing, is a browser security feature that controls whether a web page on one domain can access resources from a different domain.&lt;/P&gt;&lt;P&gt;Therefore, the frontend will send a request to the backend, which will then prepare the message and send it as a request to SAP Integration Suite.&lt;/P&gt;&lt;P&gt;Let's look at the frontend first, then the backend.&lt;/P&gt;&lt;H2 id="toc-hId--358803308"&gt;Point 8.1 Web app: frontend&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Search for and display business partner details on a web page.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A simple web app based on HTML, CSS and JavaScript.&lt;/P&gt;&lt;P&gt;The frontend can be built with plain HTML, CSS and JavaScript.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;HTML: Used to define the content of the web page&lt;/LI&gt;&lt;LI&gt;CSS: Used to apply styles to the web page (layout, colours, font, etc.)&lt;/LI&gt;&lt;LI&gt;Javascript&amp;amp;colon; Use for programming logic, for example:&lt;UL&gt;&lt;LI&gt;Get input field values from HTML&lt;/LI&gt;&lt;LI&gt;Fetch data from the server&lt;/LI&gt;&lt;LI&gt;Restructure data for display&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;HTML, CSS, and JavaScript are written in their own files. They are typically in the same folder.&lt;/P&gt;&lt;P&gt;```&lt;BR /&gt;frontend/&lt;BR /&gt;├── index.html&lt;BR /&gt;├── styles.css&lt;BR /&gt;└── script.js&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;The HTML file includes references to the 'styles.css' and 'script.js' documents. These can all be written in simple text editors, but applications like 'visual studio code' help with syntax highlighting and formatting.&lt;/P&gt;&lt;P&gt;For demo/test these files can simply be kept on a computers hard drive. Or they could be hosted on a static web server like Netlify or GitHub pages.&lt;/P&gt;&lt;H2 id="toc-hId--555316813"&gt;Point 8.2: Web app - HTML&lt;/H2&gt;&lt;P&gt;Web pages are written with HTML, they are hierarchically structured documents where 'tags' are used to denote different types of element which contain content.&lt;/P&gt;&lt;P&gt;As a simple illustration, the following would create a web page with a title, a text input field, a submit button and a space for results.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;header&amp;gt;
&amp;lt;p&amp;gt;This is the page title&amp;lt;/p&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;article&amp;gt;
  &amp;lt;form&amp;gt;
    &amp;lt;label&amp;gt;Enter business partner number
      &amp;lt;input type="text" /&amp;gt;
    &amp;lt;/label&amp;gt;
    &amp;lt;button type="submit"&amp;gt;Submit&amp;lt;/button&amp;gt;
  &amp;lt;/form&amp;gt;
  &amp;lt;div id="js-results"&amp;gt;
    // Results go here
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This would display:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-17.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300300i9BF0AF4B0E0552B9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-17.png" alt="Integration-17.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A simple element such as paragraph is denoted by&lt;UL&gt;&lt;LI&gt;`&amp;lt;p&amp;gt;enter paragraph&amp;lt;/p&amp;gt;`&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;A more complex element, an input field is denoted by&lt;UL&gt;&lt;LI&gt;`&amp;lt;input type="text" /&amp;gt;`&lt;/LI&gt;&lt;LI&gt;In this case, `type` is an attribute set to `text` for text field&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1045233325"&gt;Getting HTML to talk to CSS and JavaScript**&lt;/H3&gt;&lt;P&gt;There are two attributes that allow them to work together:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;"id": for example id="bp-input" (where bp-input is a variable name)&lt;/LI&gt;&lt;LI&gt;"class": for example class="bp-input" (where bp-input is a variable name)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These attributes can be added to HTML elements to allow us to access those elements with CSS and JavaScript. The difference between the two is a single "id" value is unique and should only be used once in an HTML document, while a class can be applied to multiple HTML elements.&lt;/P&gt;&lt;P&gt;The body of the web app frontend is:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;header class="header"&amp;gt;
&amp;lt;div class="header-title"&amp;gt;
&amp;lt;img class="logo" src="assets/team.png"&amp;gt;
&amp;lt;p class="title"&amp;gt;Employee portal: business partner search&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;nav class="nav"&amp;gt;
&amp;lt;a href="/index.html"&amp;gt;Home&amp;lt;/a&amp;gt;
&amp;lt;/nav&amp;gt;
&amp;lt;/header&amp;gt;
&amp;lt;article class="bp-article flow"&amp;gt;
&amp;lt;h2&amp;gt;Search&amp;lt;/h2&amp;gt;
&amp;lt;div class="divider"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;form id="bp-form" class="bp-search"&amp;gt;
&amp;lt;label for="bp-inp-number"&amp;gt;Business partner number:&amp;lt;/label&amp;gt;
&amp;lt;p class="text-small"&amp;gt;(Enter 7 digit number or leave blank to return all)&amp;lt;/p&amp;gt;
&amp;lt;input id="bp-inp-number" class="bp-inp-number" name="bp" type="text" /&amp;gt;
&amp;lt;p id="bp-error" class="bp-error"&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p class="options"&amp;gt;Options:&amp;lt;/p&amp;gt;
&amp;lt;div&amp;gt;
&amp;lt;input id="bp-inp-address" value="add" type="checkbox" /&amp;gt;
&amp;lt;label class="text-small" for="bp-inp-address" name="bp-input-address"&amp;gt;Include address details&amp;lt;/label&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
&amp;lt;input id="bp-inp-tab" value="tab" type="checkbox" /&amp;gt;
&amp;lt;label class="text-small" for="bp-inp-tabulate" name="bp-inp-tabulate"&amp;gt;Show results in table&amp;lt;/label&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;button id="js-inp-sub" type="submit"&amp;gt;Submit&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;h2&amp;gt;Results&amp;lt;/h2&amp;gt;
&amp;lt;div class="divider"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div id="js-bp-results" class="bp-results"&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/article&amp;gt;
&amp;lt;/body&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;It's not very complex. Most of the complexity is in the CSS styling and the JavaScript programming to return the results.&lt;/P&gt;&lt;P&gt;This segregation of content (HTML), styles (CSS), and programming logic (JS) makes working with frontend well structured.&lt;/P&gt;&lt;P&gt;The web app initial HTML includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A header bar with the logo, page name and home link&lt;/LI&gt;&lt;LI&gt;A search section with search field options&lt;UL&gt;&lt;LI&gt;BP number&lt;/LI&gt;&lt;LI&gt;Checkbox to get address&lt;/LI&gt;&lt;LI&gt;Checkbox to show results in detail view&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This is how this looks without styling.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-18.png" style="width: 824px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300306i6242F0F51B915194/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-18.png" alt="integration-18.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The version with styling was shown at the start of the article.&lt;/P&gt;&lt;P&gt;Here is the &lt;A href="https://alexroan.com/assets/documents/integration/frontend-html" target="_self" rel="nofollow noopener noreferrer"&gt;HTML file&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--948343823"&gt;Point 8.3: Web app - CSS&lt;/H2&gt;&lt;P&gt;Cascading style sheets (CSS) are used to apply styles to HTML documents. Consider an HTML document with three lines of text:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;p id="line-one"&amp;gt;This is text line one&amp;lt;/p&amp;gt;
&amp;lt;p class="other-lines"&amp;gt;This is text line two&amp;lt;/p&amp;gt;
&amp;lt;p class="other-lines"&amp;gt;This is text line three&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;These can be styled with CSS as follows:&lt;/P&gt;&lt;pre class="lia-code-sample language-css"&gt;&lt;code&gt;#line-one {
color: red;
font-size: 1.2rem;
}

.other-lines {
color: blue;
text-decoration: underline;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This would show:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-19.png" style="width: 472px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300316iF0420D2F7368485B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-19.png" alt="Integration-19.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The complete CSS for the demo/test web app is lengthy. Around 200 lines. Here is a snippet to get an idea of what it looks like:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-20.png" style="width: 822px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300317i8B8CC471FF9421E6/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-20.png" alt="integration-20.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;CSS is easy to pick up, but challenging to master!&lt;/P&gt;&lt;P&gt;Looking at the class "bp-search". This applies to the area of the HTML document where the search fields are collected. The CSS here does things like orient those search fields in a column "flex-direction:column" and apply a border and a shadow.&lt;/P&gt;&lt;P&gt;This is how our page looks with styling.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300318i0AF0854FE34C5F34/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-21.png" alt="Integration-21.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Here is the full &lt;A href="https://alexroan.com/asssets/documents/integration/frontend-css.css" target="_self" rel="nofollow noopener noreferrer"&gt;CSS file&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--976673637"&gt;Point 8.4: Web app - JavaScript&lt;/H2&gt;&lt;P&gt;Frontend JavaScript is able to retrieve, edit and add elements to the HTML document. Writing the JavaScript is possibly the most challenging part of this demo/test, so I'll just summarise what the code does:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Listen for a click of the 'submit' button&lt;/LI&gt;&lt;LI&gt;Get the value of the form input elements&lt;UL&gt;&lt;LI&gt;The Business partner number&lt;/LI&gt;&lt;LI&gt;The status of the 'include address details' checkbox&lt;/LI&gt;&lt;LI&gt;The status of the 'show results in table' checkbox&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Check the business partner value is valid&lt;UL&gt;&lt;LI&gt;It has to be blank or a 7-digit number&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Create a variable object called 'request' to track the request type&lt;/LI&gt;&lt;LI&gt;The variable includes:&lt;UL&gt;&lt;LI&gt;request URL&lt;/LI&gt;&lt;LI&gt;request method&lt;/LI&gt;&lt;LI&gt;request body&lt;/LI&gt;&lt;LI&gt;(The ability to track multiple values in an Object is a key JS feature)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Based on the input fields, identify the request type &amp;amp; update the 'request' object.&lt;UL&gt;&lt;LI&gt;The combinations are:&lt;UL&gt;&lt;LI&gt;If bp number is blank and get address isn't checked&lt;/LI&gt;&lt;LI&gt;If bp number is blank and get address is checked&lt;/LI&gt;&lt;LI&gt;If bp number is entered and get address isn't checked&lt;/LI&gt;&lt;LI&gt;If bp number is entered and get address is checked.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;At this point, the request object will store a set of values based on the input selections. The values will be one of the four options listed in the earlier tables.&lt;/P&gt;&lt;P&gt;The JavaScript now has what it needs to send a request to SAP Integration Suite. The rest of the JavaScript handles various things:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Use the JavaScript method 'fetch()' to send requests to the server&lt;/LI&gt;&lt;LI&gt;Handle security and authorisation&lt;/LI&gt;&lt;LI&gt;Getting a token if needed&lt;/LI&gt;&lt;LI&gt;Sending a token with requests&lt;/LI&gt;&lt;LI&gt;Handling errors&lt;/LI&gt;&lt;LI&gt;If successful, capturing the returned data&lt;/LI&gt;&lt;LI&gt;Working through the returned data and updating the HTML&lt;/LI&gt;&lt;LI&gt;Creating cards for the summary view&lt;/LI&gt;&lt;LI&gt;Creating a table for the detailed view&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Here is the &lt;A href="https://alexroan.com/assets/documents/integration/frontend-javascript.js" target="_self" rel="nofollow noopener noreferrer"&gt;JavaScript.&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1173187142"&gt;Point 9. Web app: backend server&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300319i957338C0D7C637CE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-9.png" alt="Integration-map-9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Allow a web frontend to communicate with SAP BTP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt;&amp;nbsp;A JavaScript web backend server for message formatting and routing.&lt;/P&gt;&lt;P&gt;The backend server is locally hosted on our computer for this test/demo, but in reality would be on a web server somewhere.&lt;/P&gt;&lt;P&gt;It's written in express, which is a framework on Node.js. It's quite different from frontend JavaScript.&lt;/P&gt;&lt;P&gt;The logic of the backend is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Listen for communication from the frontend&lt;/LI&gt;&lt;LI&gt;If a message is received:&lt;UL&gt;&lt;LI&gt;Do some manipulation of the message related to authorisations&lt;/LI&gt;&lt;LI&gt;Using fetch() try sending a request to SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;More authorisation/security handling&lt;/LI&gt;&lt;LI&gt;If successful, return the response back to the browser&lt;/LI&gt;&lt;LI&gt;If unsuccessful, log and return the error.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Here is the backend &lt;A href="https://alexroan.com/assets/documents/integration/backend-javascript.js" target="_self" rel="nofollow noopener noreferrer"&gt;JavaScript code&lt;/A&gt;. This needs to be set up as part of a Node.js server.&lt;/P&gt;&lt;P&gt;The JavaScript server is a bit more complex than the frontend. The server folder contains:&lt;/P&gt;&lt;P&gt;```&lt;BR /&gt;web-app-server/&lt;BR /&gt;├── node_modules/ # created by npm install&lt;BR /&gt;├── package-lock.json # created/updated by npm install&lt;BR /&gt;├── package.json # you write this (or generate with `npm init`)&lt;BR /&gt;└── server.js # your server code&lt;BR /&gt;```&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;server.js contains the actual JavaScript code for the server.&lt;/LI&gt;&lt;LI&gt;package.json defines project settings, dependencies, and scripts.&lt;/LI&gt;&lt;LI&gt;node_modules/ and package-lock.json are automatically generated when dependencies are installed using npm install.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The port can be specified in 'server.js'. I choose port 5000.&lt;/P&gt;&lt;P&gt;This means the server will run on '&lt;A href="http://localhost:5000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:5000&lt;/A&gt;'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-24.png" style="width: 650px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300322i6AC5E5AE7259389E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-24.png" alt="Integration-24.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After writing package.json and server.js, the following steps are required in terminal to initialise the server, install express, and then start the server.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;cd web-app-server&lt;/LI&gt;&lt;LI&gt;npm init -y&lt;/LI&gt;&lt;LI&gt;npm install express&lt;/LI&gt;&lt;LI&gt;node server.js&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We can now update the flow diagram with the details for the frontend.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-25.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300323iD986EC04D7C226DD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-25.png" alt="Integration-25.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1369700647"&gt;One flow, many messages&lt;/H2&gt;&lt;P&gt;Looking at the diagram, a click on the search button triggers a message that passes through four stages:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;From the frontend (browser) to the backend web server&lt;/LI&gt;&lt;LI&gt;From the web server to SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;From Integration Suite to Cloud Connector&lt;/LI&gt;&lt;LI&gt;From Cloud Connector to the S/4HANA system&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;JavaScript doesn’t normally “wait” for things to happen — it’s designed to keep running while other operations (like network requests) complete in the background.&lt;/P&gt;&lt;P&gt;However, the fetch() function is asynchronous, which means it starts a request and immediately returns a kind of “promise” — a placeholder that will eventually be resolved when the response comes back (or if it fails).&lt;/P&gt;&lt;P&gt;When testing this flow, there are multiple layers where errors can occur:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The browser console (frontend logs)&lt;/LI&gt;&lt;LI&gt;The backend server console (Node.js logs)&lt;/LI&gt;&lt;LI&gt;Integration Suite’s monitoring tools&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The message can fail at any step, and it sometimes takes a bit of detective work to figure out where it failed and why.&lt;/P&gt;&lt;P&gt;If everything works, and S/4HANA returns a successful response (status code 200), that response flows automatically back through the same chain — each layer staying in a “waiting” state until the result is passed back to the frontend and displayed to the user.&lt;/P&gt;&lt;P&gt;Don't worry if it's not 100% clear, it took me a while to figure this out.&lt;/P&gt;&lt;H2 id="toc-hId--1566214152"&gt;Conclusions to the walkthrough&lt;/H2&gt;&lt;P&gt;It's really fun to build your own frontend and connect it to a real enterprise grade system.&lt;/P&gt;&lt;P&gt;A few important considerations:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Precision is needed with the integration configuration:&lt;UL&gt;&lt;LI&gt;Host names, types, routing, transformation are all sensitive to mistakes&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;The JavaScript is a little complex, but it is all well established&lt;/LI&gt;&lt;LI&gt;A JavaScript and Node.js course and some googling could enable anyone to create this.&lt;/LI&gt;&lt;LI&gt;Using the S/4HANA business partner mock server is a quick and fun way to test out a potential integration with S/4HANA. However, it is just a mock server with limited features and a build and test with a real S/4HANA system would be required.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;However, it's easily achievable with a little study and practice and it opens the possibility to develop a wide range of things.&lt;/P&gt;&lt;P&gt;The APIs brings together:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Real-time fast access to a wide range of business data thanks to S/4HANA.&lt;BR /&gt;Extreme flexibility on the frontend side thanks to modern HTML, CSS and JS.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This integration could have been much simpler by just having the frontend deliver a URL in the format required for the API. We don't really need the complexity of Integration Suite for this.&lt;/P&gt;&lt;P&gt;---&lt;/P&gt;&lt;H1 id="toc-hId--1469324650"&gt;Part 3: building the integration flow (for IT people)&lt;/H1&gt;&lt;P&gt;In this section I'll share my rough notes from the process of building this front end and integration flow. This is a copy and paste of my original notes in markdown so I apologise for the lack of formatting. I do list all the required tools which may be helpful for people trying this out.&lt;/P&gt;&lt;P&gt;Before starting, I'd recommend working through the CodeJam:&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/sap-codejam/sap-codejam-connecting-systems-and-services-using-sap-integration-suite/ec-p/14110686#M848" target="_self"&gt;SAP CodeJam&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;The instructions are on a &lt;A href="https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub repository.&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--1959241162"&gt;Information sources &amp;amp; tools&lt;/H2&gt;&lt;H3 id="toc-hId-1845809622"&gt;SAP Accounts: BTP and Integration Suite&lt;/H3&gt;&lt;P&gt;A trial account for business technology platform is required.&lt;/P&gt;&lt;P&gt;[BTP trial](&lt;A href="https://developers.sap.com/tutorials/hcp-create-trial-account.html" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/tutorials/hcp-create-trial-account.html&lt;/A&gt;)&lt;/P&gt;&lt;P&gt;And a a trial for Integration Suite&lt;/P&gt;&lt;P&gt;[Integration Suite trial](&lt;A href="https://developers.sap.com/tutorials/cp-starter-isuite-onboard-subscribe.html#f55ec71c-2853-4b83-8092-4e3031f8d6e6" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/tutorials/cp-starter-isuite-onboard-subscribe.html#f55ec71c-2853-4b83-8092-4e3031f8d6e6&lt;/A&gt;)&lt;/P&gt;&lt;P&gt;See the pre-requisites [pre-requisites](&lt;A href="https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam/blob/main/prerequisites.md" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam/blob/main/prerequisites.md&lt;/A&gt;) document in the CodeJam repository.&lt;/P&gt;&lt;H3 id="toc-hId-1649296117"&gt;Containerisation &amp;amp; Docker&lt;/H3&gt;&lt;P&gt;When running the S/4HANA business partner mock server locally, one option is to install the necessary JavaScript runtime environment and run it manually. Another option is to run it inside a container.&lt;/P&gt;&lt;P&gt;Containers are a key concept in Cloud architecture.&lt;/P&gt;&lt;P&gt;A container packages an app and all it's dependencies together so that it can run independently of the underlying computer (server, laptop, etc.).&lt;/P&gt;&lt;P&gt;This is a key concept for Cloud as it allows applications to run on different hardware and operating systems with minimal set up effort.&lt;/P&gt;&lt;P&gt;Docker is a platform to build and manage containers.&lt;/P&gt;&lt;P&gt;Docker and container features:&lt;/P&gt;&lt;P&gt;- Package an app and all it's dependencies&lt;BR /&gt;- A container is like a lightweight virtual machine&lt;BR /&gt;- Key terms&lt;BR /&gt;- image: blueprint (.zip) containing app, dependencies, and OS&lt;BR /&gt;- container: running instance of an image&lt;BR /&gt;- dockerfile: instructions to build image&lt;BR /&gt;- volume: how to persist data outside the container&lt;BR /&gt;- port mapping: expose internal port to machine (e.g. 8080 to 3001).&lt;/P&gt;&lt;P&gt;I'll come back to this in the section on running the BP mock server.&lt;/P&gt;&lt;H3 id="toc-hId-1452782612"&gt;Data basics&lt;/H3&gt;&lt;P&gt;The following data standards/formats are used in this exercise:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;JSON (JavaScript Object Notation)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- A lightweight, human-readable format for storing and sharing structured data&lt;BR /&gt;- Looks like nested key-value pairs (like a shopping list with categories)&lt;BR /&gt;- Commonly used in web apps and APIs for sending data between systems.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;P&gt;```JSON&lt;BR /&gt;{&lt;BR /&gt;"employee_id": "1234567",&lt;BR /&gt;"employee_name": "Alexander"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;XPATH&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- A query language used to navigate and extract data from XML or HTML documents&lt;BR /&gt;- Lets you point to specific elements using a path-like syntax&lt;BR /&gt;- Example: find the third paragraph inside a section&lt;BR /&gt;- Used in tools like web scrapers and automation scripts.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;P&gt;```XPATH&lt;BR /&gt;//title[contains(text(), 'Programming')]&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;XML (eXtensible Markup Language)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- A flexible, tag-based format for representing structured data&lt;BR /&gt;- Similar to HTML in appearance&lt;BR /&gt;- But used for data storage and exchange, not page display.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;P&gt;```XML&lt;BR /&gt;&amp;lt;book id="bk01"&amp;gt;&lt;BR /&gt;&amp;lt;author&amp;gt;Roan, Alexander&amp;lt;/author&amp;gt;&lt;BR /&gt;&amp;lt;title&amp;gt;Front end to S/4HANA&amp;lt;/title&amp;gt;&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;HTML (HyperText Markup Language)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- The standard language for building web pages and displaying content in browsers&lt;BR /&gt;- Uses tags to define elements like headings, paragraphs, links, and images&lt;BR /&gt;- Focused on structure and layout, not data exchange.&lt;/P&gt;&lt;H3 id="toc-hId-1256269107"&gt;Terminal&lt;/H3&gt;&lt;P&gt;I worked through this demo/test on Mac so I used Terminal, which is the Mac default command line interface (CLI).&lt;/P&gt;&lt;P&gt;The CLI is necessary for activities such as setting up and starting servers or working with docker containers.&lt;/P&gt;&lt;P&gt;Terminal basics&lt;/P&gt;&lt;P&gt;- Open a folder `cd &amp;lt;folder name&amp;gt;` (change directory)&lt;BR /&gt;- `cd` on it's own will go to the home directory&lt;BR /&gt;- (Note that `~` represents home directory in terminal)&lt;BR /&gt;- `cd ..` will go up a folder&lt;BR /&gt;- List folders `ls` (list files in the current directory)&lt;BR /&gt;- Open a file `open &amp;lt;file name&amp;gt;` (open a file)&lt;BR /&gt;- Quit sub-screen and return to terminal `q`&lt;BR /&gt;- Stop a running process hold control and c&lt;BR /&gt;- Clear terminal `clear`&lt;/P&gt;&lt;P&gt;To run JavaScript servers, JavaScript runtime is required. It's easier to install and manage things like this using a package manager in Terminal. Homebrew is a popular package manager for Mac.&lt;/P&gt;&lt;P&gt;Homebrew&lt;/P&gt;&lt;P&gt;- A package manager for Mac&lt;BR /&gt;- To install homebrew homebrew:&lt;BR /&gt;- Launch terminal (launchpad &amp;gt; other &amp;gt; terminal)&lt;BR /&gt;- Visit [Homebrew](&lt;A href="https://brew.sh/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://brew.sh/&lt;/A&gt;) in your web browser&lt;BR /&gt;- Copy the installation command&lt;BR /&gt;- Paste it into terminal press enter.&lt;/P&gt;&lt;H3 id="toc-hId-1227939293"&gt;Java/JavaScript&lt;/H3&gt;&lt;P&gt;To complete the demo/test a few different JavaScript things are needed.&lt;/P&gt;&lt;P&gt;Node.js&lt;/P&gt;&lt;P&gt;- This is a JavaScript that can be installed locally to create and run web-servers and web applications&lt;BR /&gt;- Install using Homebrew&lt;BR /&gt;- In terminal, enter: `brew install node`&lt;BR /&gt;- Test the installation of Node.js&lt;BR /&gt;- In terminal, enter: `node -v`, it should return the node version number.&lt;/P&gt;&lt;P&gt;NPM&lt;/P&gt;&lt;P&gt;- NPM is the node package manager&lt;BR /&gt;- It's installed with Node.js&lt;BR /&gt;- It's used to run a server&lt;BR /&gt;- Install it in any directory a Node.js server sits in&lt;BR /&gt;- To check the installation of NPM&lt;BR /&gt;- In terminal, enter: `npm -v`, it should return the npm version number&lt;/P&gt;&lt;P&gt;Java development kit (JDK)&lt;/P&gt;&lt;P&gt;- Cloud Connector is a more complex application and requires JDK&lt;BR /&gt;- More notes in the Cloud Connector section.&lt;/P&gt;&lt;H3 id="toc-hId-1031425788"&gt;API client (Bruno/Postman)&lt;/H3&gt;&lt;P&gt;The CodeJam utilised [Bruno](&lt;A href="https://www.usebruno.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.usebruno.com/&lt;/A&gt;) for API testing.&lt;/P&gt;&lt;P&gt;For the CodeJam a folder of pre-configured settings for Bruno is provided. However I'd suggest to start experimenting without the pre-configuration to build a solid understanding of the basics.&lt;/P&gt;&lt;P&gt;I'll include more notes in later sections.&lt;/P&gt;&lt;H2 id="toc-hId-1128315290"&gt;Building and testing an integration flow&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-638398778"&gt;Set up the S/4HANA business partner mock server&lt;/H3&gt;&lt;P&gt;Start by setting up the S/4HANA business partner mock server&lt;/P&gt;&lt;P&gt;- Download the mock server from [GitHub](&lt;A href="https://github.com/SAP-archive/cloud-s4-sdk-book/tree/mock-server" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-archive/cloud-s4-sdk-book/tree/mock-server&lt;/A&gt;)&lt;BR /&gt;- Scroll down to the readme&lt;BR /&gt;- Either download the archive linked under 'How to run this server'&lt;BR /&gt;- Or if using GitHub clone the repository and checked the branch 'mock-server'&lt;BR /&gt;- Move it to a convenient folder of your choice&lt;BR /&gt;- I set it a `users/&amp;lt;username&amp;gt;/projects/integration/cloud-s4-sdk-book`&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-441885273"&gt;Run the server: option 1: use NPM&lt;/H3&gt;&lt;P&gt;Node.js and the node package manager (NPM) can be used to run the server directly on a computer.&lt;/P&gt;&lt;P&gt;- Open terminal&lt;BR /&gt;- Navigate to `users/&amp;lt;username&amp;gt;/projects/integration/cloud-s4-sdk-book`&lt;BR /&gt;- (or wherever you saved the folder)&lt;BR /&gt;- Enter: `npm install` (install node package manager in the folder)&lt;BR /&gt;- Enter: `npm start` (start the server)&lt;BR /&gt;- This should return something like:&lt;/P&gt;&lt;P&gt;```shell&lt;BR /&gt;&amp;gt; bupa-mock-odata@1.0.0 start&lt;BR /&gt;&amp;gt; node server.js&lt;BR /&gt;Mock server started on port 3000 after 1 ms, running - stop with CTRL+C (or CMD+C)...&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;Terminal tells us which port the server is running on. Port "3000" is accesible in the browser or an API client via "&lt;A href="http://localhost:3000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3000&lt;/A&gt;".&lt;/P&gt;&lt;P&gt;To stop the server in terminal use `ctrl+c`.&lt;/P&gt;&lt;P&gt;For the curious, you can look at the files that make up the mock server in the above folder. Check out:&lt;/P&gt;&lt;P&gt;- server.js&lt;BR /&gt;- This includes the JavaScript code for the server&lt;BR /&gt;- The code references other files such as app.js&lt;BR /&gt;- package.json&lt;BR /&gt;- This is like a configuration file for a node.js server&lt;BR /&gt;- business partner &amp;gt; business-partner-data.json&lt;BR /&gt;- This contains the demo test business partner data.&lt;/P&gt;&lt;P&gt;Theoretically you could use this Node.js server as a template to simulate other SAP Odata APIs with some adjustments to these files.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-245371768"&gt;Run the server: option 2: use Docker&lt;/H3&gt;&lt;P&gt;The mock server can also be run as a Docker container. This is a little more convenient as after the first run we can stop and start it from the Docker desktop app.&lt;/P&gt;&lt;P&gt;Note the server already has a Dockerfile, so it's already set up to run as a container.&lt;/P&gt;&lt;P&gt;If we run something inside a docker container we need to interact with it via ports on the container. The application is really running contained inside a container. When we run a docker container we provide a mapping between a local port on the computer and the container port. We can then access the docker application via this mapping.&lt;/P&gt;&lt;P&gt;To run as a Docker container:&lt;/P&gt;&lt;P&gt;- Launch the docker app&lt;BR /&gt;- Open terminal&lt;BR /&gt;- Enter `docker run -p 3005:8080 bp-mock-server`&lt;BR /&gt;- 3005 is the local port&lt;BR /&gt;- 8080 is the docker container port&lt;BR /&gt;- Local port can be any free port on your computer. I choose 3005&lt;BR /&gt;- The container port is 8080&lt;BR /&gt;- View the status of the container in the Docker app&lt;BR /&gt;- Use the browser to check `http//localhost:3005`&lt;/P&gt;&lt;P&gt;Note if there wasn't already a dockerfile we would need to create one and build the app before running it.&lt;/P&gt;&lt;P&gt;**A simple docker demo**&lt;/P&gt;&lt;P&gt;This was my first time using docker, so I experimented by creating a simple "Hello, World!" style server from scratch. Here it is if you want to try:&lt;/P&gt;&lt;P&gt;- Create a JS file "index.js"&lt;BR /&gt;- Add `console.log("hello from docker");`&lt;BR /&gt;- This just prints text to the console (Terminal)&lt;BR /&gt;- Create a package file "package.json"&lt;BR /&gt;- Add the following JSON to "package.json"&lt;/P&gt;&lt;P&gt;```json&lt;BR /&gt;{&lt;BR /&gt;"name": "hello-docker",&lt;BR /&gt;"version": "1.0.0",&lt;BR /&gt;"main": "index.js",&lt;BR /&gt;"scripts": {&lt;BR /&gt;"start": "node index.js"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;- Create a dockerfile "dockerfile"&lt;BR /&gt;- Add the following to "dockerfile"&lt;/P&gt;&lt;P&gt;```Dockerfile&lt;BR /&gt;FROM node:18&lt;/P&gt;&lt;P&gt;WORKDIR /usr/src/app&lt;/P&gt;&lt;P&gt;COPY package*.json ./&lt;BR /&gt;RUN npm install&lt;/P&gt;&lt;P&gt;COPY . .&lt;/P&gt;&lt;P&gt;CMD ["npm", "start"]&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;You can see Docker uses NPM, in the same way we would with a manual run, but it's installing and running NPM inside the container, not on the computer.&lt;/P&gt;&lt;P&gt;To build and run:&lt;/P&gt;&lt;P&gt;- Build docker container `docker build -t hello-docker .`&lt;BR /&gt;- Run docker container `docker run hello-docker`&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-342261270"&gt;Testing with the web browser&lt;/H2&gt;&lt;P&gt;The simplest way to test the API is running locally is to put the local address in the web browser.&lt;/P&gt;&lt;P&gt;- For NPM it was "http//localhost:3000"&lt;BR /&gt;- For docker image it was "http//localhost:3005"&lt;/P&gt;&lt;P&gt;The main domain should return the API details including the links such as:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3000/sap/opu/odata/sap/API_BUSINESS_PARTNER" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3000/sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/A&gt;"&lt;BR /&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;To access the service to return the general data of all business partners we add A_BusinessPartner&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;In the browser, this should return a JSON document containing the list of business partners.&lt;/P&gt;&lt;P&gt;We can pick a business partner number from the list and use it with the path to select a specific business partner:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('1003764" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('1003764&lt;/A&gt;')"&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-145747765"&gt;Testing with an API client (Bruno)&lt;/H2&gt;&lt;P&gt;Rather than just using the web browser to check the API an API client can be used, this has a few benefits:&lt;/P&gt;&lt;P&gt;- We can build the URLs through a selection of 'input fields'&lt;BR /&gt;- We can save different requests for easy and quick re-testing&lt;BR /&gt;- We can pass data in the request body&lt;/P&gt;&lt;P&gt;To test with Bruno:&lt;/P&gt;&lt;P&gt;- Launch Bruno&lt;BR /&gt;- Use the '...' menu to create a collection&lt;BR /&gt;- Name it 'bp-mock'&lt;BR /&gt;- Specify a location. I used "users/{username}/projects/integration"&lt;/P&gt;&lt;P&gt;Create a request for all business partners&lt;/P&gt;&lt;P&gt;- Use the '...' menu next to bp-mock and select 'new request'&lt;BR /&gt;- Enter request name 'All business partners'&lt;BR /&gt;- Under URL select 'GET' and enter the URL that returns all business partners&lt;BR /&gt;- `&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner&lt;/A&gt;`&lt;/P&gt;&lt;P&gt;Run a request&lt;/P&gt;&lt;P&gt;- Look to the right of the 'GET' line on the main page and click the '-&amp;gt;' to run&lt;BR /&gt;- The right panel will show the JSON response&lt;BR /&gt;- The same response as shown earlier in the web browser.&lt;/P&gt;&lt;P&gt;Create a request for a single business partner (1003765)&lt;/P&gt;&lt;P&gt;- Use the '...' menu next to bp-mock and select 'new request'&lt;BR /&gt;- Enter request name 'Specific business partners'&lt;BR /&gt;- Enter the same URL details as above.&lt;BR /&gt;- In the 'params' tab click '+ param' and enter&lt;BR /&gt;- Name: `&amp;amp;filter`&lt;BR /&gt;- Path: 'BusinessPartner eq '1003766'&lt;BR /&gt;- Run the request. A single business partner should be returned.&lt;/P&gt;&lt;P&gt;Note as the params are entered the URL dynamically updates.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Basics on OData API URLs&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- The base for the API is "/API_Business_Partner"&lt;BR /&gt;- A service of the API is then appended "/A_BusinessPartner"&lt;BR /&gt;- Queries can then by added, OData queries include:&lt;BR /&gt;- Filtering: `/A_BusinessPartner?$filter=Name eq 'Max'`&lt;BR /&gt;- Selecting fields: `/A_BusinessPartner?$select=Name,City`&lt;BR /&gt;- Pagination: `/A_BusinessPartner?$top=5&amp;amp;$skip=10`&lt;BR /&gt;- Accessing nested data: `/A_BusinessPartner?$expand=Address`&lt;BR /&gt;- When working with OData:&lt;BR /&gt;- Field names are case sensitive&lt;BR /&gt;- String values in single quotes&lt;/P&gt;&lt;P&gt;Keep in mind the S/4HANA mock business partner server only includes limited functionality. The above filters and selects won't work.&lt;/P&gt;&lt;H3 id="toc-hId--344168747"&gt;Java SDK for SAP Cloud Connector&lt;/H3&gt;&lt;P&gt;The next step is to set up SAP Cloud Connector&lt;/P&gt;&lt;P&gt;Recall Cloud Connector will provide a secure tunnel allowing SAP Cloud to talk to the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;Cloud Connector requires a full Java Development Kit (JDK).&lt;/P&gt;&lt;P&gt;- You can use "javac -version" in terminal to check if you already have JDK&lt;BR /&gt;- There is a SAP Help page for [Cloud Connector](&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector?locale=en-US&lt;/A&gt;)&lt;BR /&gt;- Check the [prerequisites](&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/prerequisites?locale=en-US#jdks" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/prerequisites?locale=en-US#jdks&lt;/A&gt;) section, it lists the JDK options&lt;BR /&gt;- I choose SAP machine 21 JDK&lt;BR /&gt;- You can download this from [GitHub](&lt;A href="https://sap.github.io/SapMachine/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sap.github.io/SapMachine/&lt;/A&gt;)&lt;BR /&gt;- I have a dev folder for items like this in my home folder&lt;BR /&gt;- "Users/{username}/dev"&lt;BR /&gt;- Use Homebrew to install&lt;BR /&gt;- Open terminal and enter "brew install openjdk@21"&lt;/P&gt;&lt;P&gt;It's likely you may run into version, compatibility, authorisation issues. These are all very common and a web search should help.&lt;/P&gt;&lt;H3 id="toc-hId--540682252"&gt;Install Cloud Connect&lt;/H3&gt;&lt;P&gt;Next install Cloud Connector.&lt;/P&gt;&lt;P&gt;Cloud connector is listed under the SAP development tools page under [Cloud](&lt;A href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="noopener nofollow noreferrer"&gt;https://tools.hana.ondemand.com/#cloud&lt;/A&gt;).&lt;/P&gt;&lt;P&gt;- Download the cloud connector file for your OS&lt;BR /&gt;- My Mac is Apple Silicon so I chose 'sapcc-2.18.1.2-macosx-aarch64.tar.gz'&lt;BR /&gt;- Unzip and move it to a folder of your choice&lt;BR /&gt;- Navigate inside the downloaded folder in terminal&lt;BR /&gt;- Check contents with 'ls', you should see a 'go.sh' file&lt;BR /&gt;- Enter: './go.sh' this will run Cloud Connector&lt;BR /&gt;- Cloud connector should now be running, note the address in the terminal log&lt;BR /&gt;- Login with default account: 'Administrator' and password: 'manage'&lt;BR /&gt;- Change password&lt;BR /&gt;- Keep a note of the account and password.&lt;/P&gt;&lt;P&gt;I received authorisation issues on the first attempt to run it:&lt;/P&gt;&lt;P&gt;- Click through them, then goto apple &amp;gt; settings &amp;gt; privacy&amp;amp;security&lt;BR /&gt;- Scroll down to security and click 'allow anyway'&lt;BR /&gt;- Try: './go.sh' again.&lt;/P&gt;&lt;H3 id="toc-hId--569012066"&gt;Install and set up SAP Integration Suite&lt;/H3&gt;&lt;P&gt;To continue from here SAP Integration has to be installed and active as per the earlier instructions.&lt;/P&gt;&lt;H3 id="toc-hId--765525571"&gt;Connect SAP Cloud Connector to SAP Integration Suite&lt;/H3&gt;&lt;P&gt;As Cloud Connector bridges between SAP Cloud and the S/4HANA business partner mock server we need to set it up to connect to SAP Cloud. We get the security/authentication data to do this from our SAP BTP trial account.&lt;/P&gt;&lt;P&gt;- After logging into Cloud Connector click '+Add Subaccount'&lt;BR /&gt;- Hit 'next' to skip the HTTPS settings&lt;BR /&gt;- Select 'Configure using authentication data'&lt;BR /&gt;- Select 'Add subaccount authentication data from file '&lt;BR /&gt;- In your browser got to your SAP BTP trial homepage&lt;BR /&gt;- Click on your subaccount&lt;BR /&gt;- On the left menu expand Connectivity and select Cloud Connectors&lt;BR /&gt;- Click on 'download authentication data'&lt;BR /&gt;- Return to Cloud Connector&lt;BR /&gt;- Click browse and select the downloaded file 'authentication.data'&lt;BR /&gt;- Click next&lt;BR /&gt;- Leave location ID blank&lt;BR /&gt;- (This would be relevant if there were multiple Cloud Connectors)&lt;BR /&gt;- Click finish.&lt;/P&gt;&lt;P&gt;Double check the settings in the subaccount overview:&lt;/P&gt;&lt;P&gt;- BTP trial region = Cloud Connector region&lt;BR /&gt;- BTP Subaccount ID = Cloud Connector Subaccount&lt;BR /&gt;- The region host in Cloud Connector = Cloud Foundry API Endpoint in BTP.&lt;/P&gt;&lt;H3 id="toc-hId--962039076"&gt;Cloud Connector to Mock BP Server&lt;/H3&gt;&lt;P&gt;There's no security on S/4HANA business partner mock server so it is simply a matter of adding the address.&lt;/P&gt;&lt;P&gt;- In Cloud Connector, on the left sidebar click 'Cloud to On-Premise'&lt;BR /&gt;- To the right of 'Mapping Virtual to Internal Systems' click `+`&lt;BR /&gt;- Select back-end, enter: "Non-SAP system", click 'next'&lt;BR /&gt;- Select protocol: "HTTP", click 'next'&lt;BR /&gt;- For internal host enter "localhost"&lt;BR /&gt;- For internal port enter: "3005"&lt;BR /&gt;- For virtual host: "s4-mock"&lt;BR /&gt;- For virtual Port: "3006"&lt;BR /&gt;- Uncheck allow principal propagation&lt;BR /&gt;- Click through to finish.&lt;/P&gt;&lt;P&gt;Replace the internal port name with the one your mock server is running on locally. You are free to choose the virtual host and port.&lt;/P&gt;&lt;P&gt;It's critical to select "Non-SAP system" and HTTP, not HTTPS.&lt;/P&gt;&lt;P&gt;A new entry will appear under 'Mapping Virtual to Internal Systems'&lt;/P&gt;&lt;P&gt;- Make sure your mock bp server is still running on the host and IP you entered&lt;BR /&gt;- From the icons on the right, click on 'check availability..'&lt;BR /&gt;- You should see status 'reachable'&lt;/P&gt;&lt;P&gt;At this stage `&lt;A href="https://localhost:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;https://localhost:3005&lt;/A&gt;` is now mapped to `&lt;A href="https://s4-mock:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;https://s4-mock:3005&lt;/A&gt;` in the SAP Cloud.&lt;/P&gt;&lt;P&gt;You can also check in integration suite to see if Cloud Connector is connected.&lt;/P&gt;&lt;P&gt;- In the left hand menu select connectivity &amp;gt; cloud connectors.&lt;/P&gt;&lt;P&gt;Errors at this stage are likely related to&lt;/P&gt;&lt;P&gt;- Mistakes in the host name, port name, or system type&lt;BR /&gt;- The mock server or cloud connector is not running.&lt;/P&gt;&lt;H3 id="toc-hId--1158552581"&gt;Design integration flow&lt;/H3&gt;&lt;H4 id="toc-hId--1648469093"&gt;Create an integration flow&lt;/H4&gt;&lt;P&gt;- Login to BTP trial home&lt;BR /&gt;- From the left hand menu expand Services and select Instances and subscriptions&lt;BR /&gt;- Under 'Subscriptions' click on 'Integration Suite'&lt;BR /&gt;- On the left menu select expand 'Design' and select 'Integrations and APIs'&lt;BR /&gt;- Choose 'Create' on the top right to create a new package.&lt;BR /&gt;- Give it a name&lt;BR /&gt;- Shift to the 'Artifacts' tab&lt;BR /&gt;- Select 'Add' and choose 'Integration Flow' from the list&lt;BR /&gt;- Give it a name&lt;BR /&gt;- Click add&lt;BR /&gt;- Click on the newly created integration flow&lt;/P&gt;&lt;P&gt;The integration flow screen is read-only by default, click edit.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Set up the sender&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Define an 'address' for the SAP Integration Suite endpoint.&lt;/P&gt;&lt;P&gt;- Click on sender&lt;BR /&gt;- Click connector arrow&lt;BR /&gt;- Drag to start event&lt;BR /&gt;- In adapter type pop-up select HTTPS&lt;BR /&gt;- To configure the adapter click on the drawn line (if not selected)&lt;BR /&gt;- The settings are in the bottom panel, drag it up to expand it&lt;BR /&gt;- Navigate to 'connection' tab, enter the following:&lt;BR /&gt;- Address: `/request-business-partners`&lt;BR /&gt;- Authorisation: `User Role`&lt;BR /&gt;- User Role: `ESBMessaging.send`&lt;BR /&gt;- CSRF Protected: `Unchecked` (Cross-site request forgery).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Add flow elements&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The CodeJam has excellent instructions for walking through different flow steps as per their exercises.&lt;/P&gt;&lt;P&gt;I will summarise a few elements I used in my design.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Router&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;![Router](/assets/images/blog/integration/Integration-23-A.png)&lt;/P&gt;&lt;P&gt;- The router allows you to split the flow based on a condition.&lt;BR /&gt;- This example splits the flow into 4 based on the incoming URL&lt;BR /&gt;- For example where the incoming URL ends in "single/add"&lt;BR /&gt;- Re-call our integration flow address was "request-business-partners"&lt;BR /&gt;- In this case a message arrives to "request-business-partners/single/add"&lt;BR /&gt;- Intelligent Suite assigns the last part to the variable CamelHttpPath&lt;BR /&gt;- Which is part of the message header hence: header.CamelHttpPath.&lt;/P&gt;&lt;P&gt;The route path we are looking at in this example is the one that returns a single business partner with address data.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Content modifier - case 1&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Case 1:&lt;/P&gt;&lt;P&gt;- The content modifier allows us to modify the message header or body.&lt;BR /&gt;- In the above screenshot a content modifier is added directly after the routing.&lt;BR /&gt;- This deletes the CamelHttpPath, in this case "single/add"&lt;BR /&gt;- After routing we no longer need this part of the URL in the message header.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;JSON to XML converter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- This converts the JSON in the message body to XML.&lt;BR /&gt;- In the case of searching for a single BP the message body includes JSON:&lt;/P&gt;&lt;P&gt;```JSON&lt;BR /&gt;{&lt;BR /&gt;"employee_id": "1234567"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;- This will be converted to XML&lt;/P&gt;&lt;P&gt;```XML&lt;BR /&gt;&amp;lt;root&amp;gt;&lt;BR /&gt;&amp;lt;employee_id&amp;gt;1234567&amp;lt;/employee_id&amp;gt;&lt;BR /&gt;&amp;lt;/root&amp;gt;&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Content modifier - case 2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;![Content modifier](/assets/images/blog/integration/Integration-23-B.png)&lt;/P&gt;&lt;P&gt;- In this case the content modifier gets "employee_id" from the message body&lt;BR /&gt;- And assigns it to a new variable&lt;BR /&gt;- XPath can be used to access the XML value&lt;BR /&gt;- "/root/employee_id"&lt;BR /&gt;- The variable name is set as employee_id&lt;BR /&gt;- The data type is set as a Java string.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Request Reply&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Request reply let's us send a request to a server.&lt;/P&gt;&lt;P&gt;- Click on the Set employee_id&lt;BR /&gt;- Click add flow step on the canvas&lt;BR /&gt;- Select 'Request Reply' under call &amp;gt; external call&lt;BR /&gt;- Click on 'Request Reply'&lt;BR /&gt;- Click on 'connector' and drag to the receiver&lt;BR /&gt;- Select adapter type 'HTTP'&lt;BR /&gt;- Under 'HTTP' in the connector properties, select 'Connection'&lt;BR /&gt;- Enter the address of the cloud connector:&lt;BR /&gt;- The path for a single business partner with address data involves updating:&lt;BR /&gt;- Address: "&lt;A href="http://s4-mock:3006/sap/opu/odata/sap/API_Business_Partner/A_BusinessPartner('${property.employee_id" target="_blank" rel="noopener nofollow noreferrer"&gt;http://s4-mock:3006/sap/opu/odata/sap/API_Business_Partner/A_BusinessPartner('${property.employee_id&lt;/A&gt;}')"&lt;BR /&gt;- Query: "$expand=to_BusinessPartnerAddress"&lt;BR /&gt;- Proxy Type: `On-premise`&lt;BR /&gt;- Method: `GET`&lt;BR /&gt;- Authentication: `None`&lt;BR /&gt;- Save&lt;BR /&gt;- Deploy&lt;/P&gt;&lt;P&gt;To check deployment status go to Monitor &amp;gt; Integration and APIs. On this page the endpoint to access the service is shown:&lt;/P&gt;&lt;P&gt;"https://{your trial}-cpitrial03-rt.cfapps.ap21.hana.ondemand.com/http/request-business-partners"&lt;/P&gt;&lt;H4 id="toc-hId--1844982598"&gt;Test Cloud Integration with API client&lt;/H4&gt;&lt;P&gt;At this point we can test consuming the API through SAP Integration Suite.&lt;/P&gt;&lt;P&gt;Unlike testing the local mock server, we need to deal with authentication and security. The way this works is:&lt;/P&gt;&lt;P&gt;- We pass a "client id" and "secret" to a "token URL"&lt;BR /&gt;- BTP passes back a "token" which is valid for a certain period of time&lt;BR /&gt;- This "token" has to be attached to any requests to the API in Intelligent Suite.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Accessing security details&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- Navigate to your BTP trial account&lt;BR /&gt;- Expand services and click on 'instances and subscriptions'&lt;BR /&gt;- Scroll down to instances and look for your integration flow instance&lt;BR /&gt;- Integration Suite uses Cloud Foundry so the runtime will be cloud foundry&lt;BR /&gt;- It will likely be named 'default_it-rt_integration-flow'&lt;BR /&gt;- Scroll down to service keys and click on the service key, note the values for:&lt;BR /&gt;- "clientid"&lt;BR /&gt;- "clientsecret"&lt;BR /&gt;- "url"&lt;BR /&gt;- "tokenurl"&lt;/P&gt;&lt;P&gt;For local testing we can hardcode these values in our test tools, but be careful not to upload or share these anywhere.&lt;/P&gt;&lt;P&gt;In production, never hardcode secrets or tokens. Use environment variables or a secure credential store.&lt;/P&gt;&lt;P&gt;**Request a token with Bruno**&lt;/P&gt;&lt;P&gt;In Bruno create a new request:&lt;/P&gt;&lt;P&gt;- Name: `TOKEN`&lt;BR /&gt;- Method: `POST`&lt;BR /&gt;- URL: enter the "tokenurl" from above&lt;BR /&gt;- Navigate to the Params tab:&lt;BR /&gt;- Select 'Add Param'&lt;BR /&gt;- Enter name: `grant_type` path: `client_credentials`&lt;BR /&gt;- Navigate to Auth&lt;BR /&gt;- Switch 'Inherit' to 'Basic Auth' and enter:&lt;BR /&gt;- Username: `client_id`&lt;BR /&gt;- Password: `client_secret`&lt;BR /&gt;- Save&lt;/P&gt;&lt;P&gt;Send the request. This should return a JSON document with a long value in "access_token". There should also be a expiry time e.g. 4199 seconds.&lt;/P&gt;&lt;P&gt;When sending a request, if the token is not valid Integration Suite will return a 401 error code. This means we need to request a new token.&lt;/P&gt;&lt;P&gt;Within Bruno we can save this token value to a variable. This saves us from copying and pasting it into other requests.&lt;/P&gt;&lt;P&gt;- Goto Environments &amp;gt; Configure &amp;gt; Create Environment&lt;BR /&gt;- Name: 'integration-flow'&lt;BR /&gt;- Click '+ Add Variable'&lt;BR /&gt;- Enter name: 'access_token'&lt;BR /&gt;- For value, leave it blank&lt;BR /&gt;- Save and close&lt;/P&gt;&lt;P&gt;Navigate to 'scripts' under the TOKEN request. Under Post Request enter:&lt;/P&gt;&lt;P&gt;```JS&lt;BR /&gt;if (res.status == 200) {&lt;BR /&gt;const token = res.body.access_token;&lt;BR /&gt;bru.setEnvVar("access_token",token);&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;- If the request receives a response (status 200)&lt;BR /&gt;- Get the access_token value from the response&lt;BR /&gt;- Assign to environment variable "access_token".&lt;/P&gt;&lt;P&gt;Save and run the TOKEN request.&lt;BR /&gt;Goto the environment and click 'configure'. You should see the access_token variable updated with the value from the response.&lt;/P&gt;&lt;P&gt;**Test the API with a request with for a single BP**&lt;/P&gt;&lt;P&gt;- In Bruno create a new request&lt;BR /&gt;- Name: "BP via integration suite"&lt;BR /&gt;- URL: "https://{your-trial}.it-cpitrial03-rt.cfapps.ap21.hana.ondemand.com/http/request-business-partners"&lt;BR /&gt;- Replace the above with your actual endpoint from Intelligent Suite.&lt;BR /&gt;- Navigate to the 'Auth' tab&lt;BR /&gt;- Click on 'Inherit' and change to 'Bearer Token'&lt;BR /&gt;- In Token enter: `{{access_token}}`&lt;BR /&gt;- This eferences an environment variable in Bruno&lt;BR /&gt;- Add the request body&lt;BR /&gt;- The JSON with our employee ID&lt;/P&gt;&lt;P&gt;```JSON&lt;BR /&gt;{&lt;BR /&gt;"employee_id": "1003764"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;H2 id="toc-hId--1454690089"&gt;Building and testing a frontend&lt;/H2&gt;&lt;P&gt;At this point a request to SAP Integration Suite should be successfully routed and transformed to the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;The next part would be building and testing the web app. However, there is too much to cover in building and testing the frontend to cover in this post. I may produce a video on this if anyone is interested.&lt;/P&gt;&lt;H2 id="toc-hId--1651203594"&gt;Final thoughts&lt;/H2&gt;&lt;P&gt;This technology stack is definitely a bit overkill for a simple 'search' portal, but it is fairly easy to put together as long as you are careful when specifying paths, hosts and port names.&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you'd like to discuss further please feel free to connect on &lt;A href="https://www.linkedin.com/in/alexanderroan/" target="_self" rel="nofollow noopener noreferrer"&gt;LinkedIn - Alexander Roan&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/build-a-web-app-and-connect-to-s-4hana-with-sap-integration-suite/ba-p/14179607"/>
    <published>2025-08-13T12:45:21.973000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-download-mag-simulation-result-as-edi-payload/ba-p/14177249</id>
    <title>Integration Advisor – Download MAG Simulation Result as EDI Payload</title>
    <updated>2025-08-13T15:24:58.061000+02:00</updated>
    <author>
      <name>Joerg_Ackermann</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/671194</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this blog post I would like to share with you a small new feature we have delivered: When downloading the result of a Mapping Guideline (MAG) simulation you have now the additional option to get the payload in EDI format.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1021363172" id="toc-hId-1737030537"&gt;Recap: Using Source EDI Payloads in Integration Advisor&lt;/H2&gt;&lt;P&gt;Last year we added direct support for EDI payloads in the Integration Advisor capability of SAP Integration Suite.&lt;/P&gt;&lt;P&gt;In Integration Advisor, there are multiple places where you can make use of your existing payload data:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create a Message Implementation Guideline (MIG) based on a payload&lt;/LI&gt;&lt;LI&gt;Simulate a Message Implementation Guideline (MIG)&lt;/LI&gt;&lt;LI&gt;Simulate a Mapping Guideline (MAG)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If your source payload is a text-based (flat-file) EDI message (from B2B Standards like ASC X12, UN/EDIFACT and its subsets, Odette or TRADACOMS), you can use the EDI payload directly as input for these features.&lt;/P&gt;&lt;P&gt;More details can be found in this previous blog post: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-direct-support-of-edi-payloads/ba-p/13779418" target="_self"&gt;Link&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1021363172" id="toc-hId-1540517032"&gt;Download MAG Simulation Result as EDI Payload&lt;/H2&gt;&lt;P&gt;So far, EDI support has been limited to source payloads. From the SAP Customer Influence program we have learned that a similar feature would also be interesting for the target payload (see here for more details: &lt;A href="https://influence.sap.com/sap/ino/#/idea/335331" target="_self" rel="noopener noreferrer"&gt;Link&lt;/A&gt;).&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="screenshot1.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299233i9A5F1C7F3C481AD1/image-size/large?v=v2&amp;amp;px=999" role="button" title="screenshot1.jpg" alt="screenshot1.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After executing a MAG Simulation, you have the option to download the target payload which was the result of the simulation. For this you can use the Download button - r&lt;/SPAN&gt;&lt;SPAN&gt;efer above screenshot for MAG Simulation. If your Target MIG represents an EDI message, then you have now the additional option to download the result in EDI format. See screenshot below for the downloaded file of our example.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="screenshot2.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299235i3C1201CEC4ADEA0C/image-size/large?v=v2&amp;amp;px=999" role="button" title="screenshot2.jpg" alt="screenshot2.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-431822657" id="toc-hId-1344003527"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;This blog post explains our new feature to download a MAG simulation result as an EDI payload. This will help you to work even more efficiently with Integration Advisor if you want to compare the simulation result with an existing expected target EDI payload.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(Note: This feature will become available with the August update of SAP Integration Suite which is currently rolled out to all data centers.)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-235309152" id="toc-hId-1147490022"&gt;Further reading&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-direct-support-of-edi-payloads/ba-p/13779418" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-direct-support-of-edi-payloads/ba-p/13779418&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/integration-advisor-overview-of-components-for-building-b2b-integration/ba-p/13512772" target="_blank"&gt;https://community.sap.com/t5/technology-blogs-by-sap/integration-advisor-overview-of-components-for-...&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/simulating-mapping-guideline" target="_self" rel="noopener noreferrer"&gt;https://help.sap.com/docs/cloud-integration/sap-cloud-integration/simulating-mapping-guideline&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-download-mag-simulation-result-as-edi-payload/ba-p/14177249"/>
    <published>2025-08-13T15:24:58.061000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-digital-procurement-transformation-innovations-in-july-2025/ba-p/14180983</id>
    <title>SAP Signavio digital procurement transformation innovations in July 2025</title>
    <updated>2025-08-14T16:21:10.742000+02:00</updated>
    <author>
      <name>themmert</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/43082</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Realising tangible value in procurement is more important than ever.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;That’s why in our July 2025 release of SAP Signavio Procurement Value Accelerators we provide strong solutions, designed to help&amp;nbsp; organizations faster realizing value from their procurement strategies.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Let’s look into the different components we now release, one by one.&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Value Accelerator for Process Design and Standardisation in SAP Ariba&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: leading practice process content to accelerate transformation initiatives.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Ariba API Extractor for Signavio Process Intelligence&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: simplify and accelerate data ingestion and analysis&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Value Accelerator to identify improvement potential for source to pay in SAP Ariba&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp; identify automation potential in the Purchase Request to Goods Receipt process in SAP Ariba&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Improvement opportunity dashboard for Maverick Buying in SAP Signavio Process Insights:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp; get full visibility on potential value leakage through maverick buying, bypassing your procurement processes&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Value accelerator for experience-centric process transformation for source to pay:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp; strengthen &amp;nbsp;partnership based value network&amp;nbsp; with trading partners through a unified view on the suppliers Order to Cash &amp;nbsp;process, collaborating with the buyers Purchase to Pay process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1.&amp;nbsp;Value Accelerator for Process Design and Standardisation in SAP Ariba&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Challenge&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Transformation leaders, implementing SAP Ariba solutions face challenges in&amp;nbsp;ensuring adherence to standardized SAP processes, support&amp;nbsp;fit-to-standard assessments, and defining and documenting&amp;nbsp;To Be processes. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Without structured process documentation, teams risk&amp;nbsp;misalignment with SAP standards, inefficiencies in process adoption, and increased implementation complexity.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Solution&lt;/STRONG&gt;:&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This content package for SAP Signavio Process Manager enables transformation leaders and process consultants to help ensure alignment with best practices for SAP Ariba while effectively modeling “to be” processes. Best-practice business process models from SAP can accelerate fit-to-standard assessments, enhance process understanding, and support a smooth transition to SAP Ariba.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&amp;nbsp;Capabilities:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Business process model and notation (BPMN) models to understand and align with SAP standards and have a baseline to model “to be” processes&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Dictionary entries&amp;nbsp;to capture information structurally&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="themmert_1-1755177504162.png" style="width: 667px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300979iAFC76989BB5457C7/image-dimensions/667x405/is-moderation-mode/true?v=v2" width="667" height="405" role="button" title="themmert_1-1755177504162.png" alt="themmert_1-1755177504162.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Benefits&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Strengthen adherence to SAP standards by using the latest best-practice processes from SAP to help ensure compliance&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Accelerate fit-to-standard assessments by using structured process models to simplify “as is” and “to be” process comparisons&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Improve process modeling and understanding by leveraging process diagrams to define “to be” processes and drive informed decision-making&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Further information:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://sapsignavio.enable-now.cloud.sap/wa/releases/index.html?show=slide!SL_A4208D711FB0AAAE" target="_blank" rel="noopener nofollow noreferrer"&gt;EnableNow video&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;SAP Ari&lt;/STRONG&gt;ba API Extractor for Signavio Process Intelligence &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Challenge:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Currently available integration between SAP Signavio Process Intelligence and SAP Ariba can be cumbersome to configure and relies customized BTP procedures as well as consulting services for modifications.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Solution:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Enable efficient data extraction from SAP Ariba into SAP Signavio Process Intelligence, unlocking powerful insights and process mining capabilities for procurement workflows&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="themmert_2-1755179619673.png" style="width: 722px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301018iBF2482CB230388B8/image-dimensions/722x399/is-moderation-mode/true?v=v2" width="722" height="399" role="button" title="themmert_2-1755179619673.png" alt="themmert_2-1755179619673.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Benefit:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Reuse integration capabilities and preconfigured integration packages for SAP Ariba in SAP Cloud Integration data services to quickly gain visibility into process inefficiencies, drive data-based decisions, and support continuous improvement.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Further information:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/extract-sap-ariba-data-into-sap-signavio-process-intelligence-using-sap/ba-p/14099400" target="_blank"&gt;Blog post &lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://sapsignavio.enable-now.cloud.sap/wa/releases/index.html?show=slide!SL_93B9019D807E38F" target="_blank" rel="noopener nofollow noreferrer"&gt;EnableNow video&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;3.&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Signavio Value Accelerator to identify improvement potential for source to pay in SAP Ariba&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Challenge:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The operational procurement process manages the acquisition of goods and services from placing requisitions to receiving products. &lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This process can cause multiple challenges to stakeholders:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Requisitioners often complain about a lack of transparency regarding the status of their ordering process&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Procurement process owners worry about the high efforts of functional procurement personnel to handle free text purchase requisitions (PR) for repetitive low value items&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Delays in processing PRs and purchase orders (PO)s may only impact the entire procurement but the entire corporate value chain, ultimately resulting in lower employee and customer satisfaction and sales.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Solution:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A new generation of SAP Ariba value accelerators is now being released, delivered in two packages.&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The “Identify improvement potential for source to pay in SAP Ariba” package &amp;nbsp;contains the data pipeline as well as an overview dashboard. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;The “Improve procure to receipt process performance in SAP Ariba” package contains analytical dashboards for process efficiency analysis for the Procure to Receipt process.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;These packages serve as your starting point for exploring and optimizing the procurement process.&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Value Accelerator package “Identify improvement potential for source to pay with SAP Ariba”&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This package provides the data pipeline to extract transactional p2p data from the SAP Ariba system, leveraging the before mentioned CI data extractor for SAP Ariba.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Use the supplemented overview dashboard &amp;nbsp;to get a comprehensive perspective of the source to pay process. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;For deeper insights, specialized Value Accelerator packages as the one introduced below provide detailed dashboards and advanced analysis.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="themmert_3-1755179730570.png" style="width: 692px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301022i1070A757E6B36EE4/image-dimensions/692x433/is-moderation-mode/true?v=v2" width="692" height="433" role="button" title="themmert_3-1755179730570.png" alt="themmert_3-1755179730570.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Value Accelerator package "Improved Procure to Receipt process performance in SAP Ariba&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This value accelerator package concentrates on the process performance value driver. In the first release now it will focus on procure to receipt processes, while future also subsequent processes like invoice to pay may be added.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Key analysis capabilities comprise:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Volumes and Decision Making - &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Analyse long-running approvals and check the general Volume of Purchase Requisitions.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Value Segmentation &amp;amp; Approval Delays &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;– Identify improvement potential based on PRs with low monetary value and long approval cycle times. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Low Value PRs with Multi Approval Steps - &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Identify low monetary value PRs with excessive cycle time based on approval steps leading to process bottlenecks. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Pending Purchase Requisitions Approvals - &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Spot business areas that are prone to delayed approvals.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Benefit:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Enhance process clarity and make it easy for procurement analysts to quickly gain insights and improve transparency&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Reduce the time required to identify improvement potential in cycle times, document volumes, automation rates, and compliance&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Improve procurement FTE productivity&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Identify inefficiencies, track trends, and uncover patterns within the procure to goods receipt process&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Provide enhanced user guidance through a streamlined template approach focusing on the most relevant KPIs&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Further Information:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://sapsignavio.enable-now.cloud.sap/wa/releases/index.html?show=slide!SL_58A49BC11705C38E" target="_blank" rel="noopener nofollow noreferrer"&gt;EnableNow video&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;4.&amp;nbsp; Improvement opportunity dashboard on Maverick Buying for SAP Signavio Process Insights&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Challenge:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Maverick Buying is a common challenge to many procurement organizations. It relates to spend, not using the predefined purchasing channels, processes and contracts, and in consequence not only violating corporate policies, but limiting realized savings, increasing risks and challenging supplier relations.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;While Maverick buying can come in many flavors, we’ll here focus on cases, involving POs, not aligned with contractual terms, or not using automatic purchasing proposals, or POs that may have been raised after the invoice was received. (Maverick buying, addressing Invoices without any PO will be addressed in a separate blog post.)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Solution:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The “Reduce maverick buying behavior” improvement opportunity dashboard leverages P2P transaction data from connected SAP ERP systems with very limited efforts.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The analytical dashboard provides insights on trends over time on&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Supplier invoices issued before PO&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A typical case, where the requester did not follow the leading practice way of raising an PO before the invoice, but after. This is often done, to “pretend” compliance and often as precondition to get properly refunded/paid.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;PO item without any Purchase Requisition reference&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A case where a purchase order item does not refer to a potentially existing contract, and accordingly also doesn’t apply to pre-negotiated contract terms.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;PO Items without agreement or Purchase Info Record:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A case where a purchase order item does not reference to a purchase info record, and accordingly also doesn’t apply to a predetermined source of supply and pre-negotiated contract terms.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;PO items with different prices for same outline agreements/purchase info records&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A case where deviating terms and conditions are detected between the Purchase order in corresponding Contract/outline agreement, indicating the potential of not applying contractual terms.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;For each case, an in-depth analysis is available, directly diving into internal/external benchmarks to identify root causes and improvement opportunities.&lt;/LI&gt;&lt;LI&gt;Finally, the dashboard provides at a glance an overview of relevant correction recommendations, providing guidance how to improve the identified issues.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="themmert_5-1755180051577.png" style="width: 735px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301024i7471F04389D107E4/image-dimensions/735x553/is-moderation-mode/true?v=v2" width="735" height="553" role="button" title="themmert_5-1755180051577.png" alt="themmert_5-1755180051577.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Benefit&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Increased efficiency in identifying purchasing activities not aligned with existing supplier contracts, undermining the official procurement process &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Improved realization of contracted procurement benefits&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Increased spend compliance&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Further Information:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;A href="https://sapsignavio.enable-now.cloud.sap/wa/releases/index.html?show=slide!SL_BA08F6905B5DDF9E" target="_blank" rel="noopener nofollow noreferrer"&gt;EnableNow video&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5.&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;STRONG&gt;Value accelerator for experience-centric process transformation for source to pay&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Challenge:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Many companies, embarking on digital procurement transformations, focus on improving the user journey of their key stakeholders, often neglect the user experience of their suppliers.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It’s helpful to have a clear understanding of suppliers’ experience in their marketing, sales and order to cash process, while interacting as selling organization, while interacting with the&amp;nbsp;mirrored Source to Pay process of the buying organization.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Typical areas of pain for suppliers are broken or cumbersome processes, i.e. related to supplier onboarding, but also in sourcing as well as fulfilment, many process breaks can make efficient and effective trading partner relationships difficult.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If the supplier experience is not streamlined and value adding, the buying organization runs the risk of not being able to procure services and materials from the most competitive suppliers (who can choose customers by themselves), and in turn might degrade their own competitiveness over time.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Solution:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The first step to address this challenge is getting a common understanding of the end to end supplier journey across the entire source to pay process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;To get there, this model starts from a supplier perspective and then maps it to the buyers p2p process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;For each process step, the model provides a perspective on supplier goals, activities, pain points, touch points and involved media&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Standard buyer KPIs, that Signavio can provide out of the box to effectively analyze and optimize this process are available for continuously monitoring the process performance and understanding potential choke points early.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The model is rounded off through Buyer organizational units and commonly involved SAP IT solutions. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;On this basis, it can be easier to detect potential frictions, identify root causes, and put corrective actions in place.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="themmert_6-1755180205855.png" style="width: 716px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301025iCDEFC147FD91D390/image-dimensions/716x290/is-moderation-mode/true?v=v2" width="716" height="290" role="button" title="themmert_6-1755180205855.png" alt="themmert_6-1755180205855.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Benefit:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Accelerate journey modelling for key supplier experience scenarios across the entire source to pay process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Develop a common understanding of supplier/buyer interaction helps to strengthen empathies with suppliers’ perceived issues between procurement, finance, and supplier management teams.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;More Information:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://sapsignavio.enable-now.cloud.sap/wa/releases/index.html?show=slide!SL_D40297A0F686FD80" target="_blank" rel="noopener nofollow noreferrer"&gt;EnableNow video&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We hope you find this blog post useful and look forward to your questions and feedback.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Stay tuned for our next quarterly update.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;If you’re interested in learning more about the remaining SAP Signavio solution innovations from this quarter, check out the blog posts below:&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://www.signavio.com/post/july-2025-product-release-update/" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Signavio July 2025 Release Highlights&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-july-2025-release-sap-signavio-process-intelligence/ba-p/14148361" target="_blank"&gt;Process Analysis and Mining&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-process-and-journey-modeling-what-s-new-in-the-july-release/ba-p/14151991" target="_blank"&gt;Process and Journey Modeling&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-process-and-journey-modeling-what-s-new-in-the-july-release/ba-p/14151991" target="_blank"&gt;New AI capabilities and enhancements&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-july-2025-product-release-process-transformation-management/ba-p/14155389" target="_blank"&gt;Process Transformation Management and Collaboration&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-july-2025-product-release-process-governance/ba-p/14155393" target="_blank"&gt;Process Governance&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-signavio-digital-procurement-transformation-innovations-in-july-2025/ba-p/14180983"/>
    <published>2025-08-14T16:21:10.742000+02:00</published>
  </entry>
</feed>
