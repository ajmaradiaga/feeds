<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Integration-Suite-blog-posts.xml</id>
  <title>SAP Community - SAP Integration Suite</title>
  <updated>2025-07-24T02:01:26.304013+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Integration Suite/pd-p/73554900100800003241" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Integration Suite blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/setup-event-mesh-integration-suite-emis-to-trigger-events-from-s4h-cloud-to/ba-p/14151999</id>
    <title>Setup Event Mesh – Integration Suite (EMIS) to Trigger Events from S4H Cloud to CPI via Webhooks</title>
    <updated>2025-07-15T13:35:17.503000+02:00</updated>
    <author>
      <name>KarthikBangeraM</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/97936</uri>
    </author>
    <content>&lt;P&gt;In this blog, we’ll walk through a &lt;STRONG&gt;step-by-step guide&lt;/STRONG&gt; to setting up &lt;STRONG&gt;SAP Event Mesh – Integration Suite (EMIS)&lt;/STRONG&gt; to enable real-time event-driven communication between &lt;STRONG&gt;SAP S/4HANA Public Cloud&lt;/STRONG&gt; &lt;STRONG&gt;(S4HC)&lt;/STRONG&gt; and &lt;STRONG&gt;Cloud Integration&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;This tutorial covers the flow from configuring &lt;STRONG&gt;Event Mesh - Integration Suite&lt;/STRONG&gt; to receive events from &lt;STRONG&gt;S/4HANA Public Cloud&lt;/STRONG&gt; and briefly touches upon a sample &lt;STRONG&gt;HTTP&lt;/STRONG&gt; based endpoint exposed by a &lt;STRONG&gt;SAP Cloud Integration (CPI)&lt;/STRONG&gt; iFlow to which the events are pushed via &lt;STRONG&gt;Webhooks&lt;/STRONG&gt;. Below Solution Diagram depicts the message flow. Please note that &lt;STRONG&gt;Queue 2&lt;/STRONG&gt; is presented solely for illustrative purposes and is not discussed within the scope of this article.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Solution Diagram-&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="KarthikBangeraM_2-1752501334629.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286320i8192CE3293AD7557/image-size/large?v=v2&amp;amp;px=999" role="button" title="KarthikBangeraM_2-1752501334629.png" alt="KarthikBangeraM_2-1752501334629.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Whether you're new to &lt;STRONG&gt;SAP’s&lt;/STRONG&gt; &lt;STRONG&gt;Event-Driven Architecture&lt;/STRONG&gt; or looking to integrate cloud systems in a more responsive and scalable way, this guide will provide you with a clear and practical implementation path.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites-&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Available only for &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; &lt;STRONG&gt;standard&lt;/STRONG&gt; and &lt;STRONG&gt;premium&lt;/STRONG&gt; editions&lt;/LI&gt;&lt;LI&gt;If present, remove the instance of &lt;STRONG&gt;Standalone Event Mesh (Default Plan)&lt;/STRONG&gt; from your &lt;STRONG&gt;Subaccount&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Integration Suite &lt;/STRONG&gt;service is already subscribed to in the subaccount&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Integration Suite Event Mesh&lt;/STRONG&gt; is added as an &lt;STRONG&gt;entitlement&lt;/STRONG&gt; in the &lt;STRONG&gt;Global account&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Refer &lt;STRONG&gt;SAP Note &lt;/STRONG&gt;&lt;A href="https://me.sap.com/notes/3461547" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;3461547&lt;/STRONG&gt;&lt;/A&gt; for more details like &lt;STRONG&gt;Region Availability&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Detailed Steps-&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to BTP Tenant’s &lt;STRONG&gt;Integration Suite&lt;/STRONG&gt; instance.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i1.jpg" style="width: 0px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286318iA50CF36E48598326/image-size/large?v=v2&amp;amp;px=999" width="0" height="0" role="button" title="i1.jpg" alt="i1.jpg" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i1.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286683i60B6E5F5CF3CB2B5/image-size/large?v=v2&amp;amp;px=999" role="button" title="i1.jpg" alt="i1.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2. Click on &lt;STRONG&gt;Manage Capabilities&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i2.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286686i75329AD55E2929D8/image-size/large?v=v2&amp;amp;px=999" role="button" title="i2.jpg" alt="i2.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3. Click on &lt;STRONG&gt;Add Capabilities&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i3_3.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286687i40D375F2B6769B69/image-size/large?v=v2&amp;amp;px=999" role="button" title="i3_3.jpg" alt="i3_3.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4. Click on &lt;STRONG&gt;Manage Business Events&lt;/STRONG&gt; and then click on &lt;STRONG&gt;Next&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i4.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286688iFE24C91E1D37120D/image-size/large?v=v2&amp;amp;px=999" role="button" title="i4.jpg" alt="i4.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5.&amp;nbsp;Click &lt;STRONG&gt;Activate&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i5_1.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286689i0243668268485277/image-size/large?v=v2&amp;amp;px=999" role="button" title="i5_1.jpg" alt="i5_1.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i6.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286690iB51CA9D9AB6B1BBB/image-size/large?v=v2&amp;amp;px=999" role="button" title="i6.jpg" alt="i6.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;It’s now &lt;STRONG&gt;Active&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i7.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286691iD8D0F2ABE1F3FA44/image-size/large?v=v2&amp;amp;px=999" role="button" title="i7.jpg" alt="i7.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 6. Click on &lt;STRONG&gt;OK&lt;/STRONG&gt; and proceed&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i8.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286692i84EA583E61B4FE8B/image-size/large?v=v2&amp;amp;px=999" role="button" title="i8.jpg" alt="i8.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;We can now see the &lt;STRONG&gt;Manage Business Events&lt;/STRONG&gt; tile. But none of the hyperlinks are yet active. This is because the necessary &lt;STRONG&gt;roles&lt;/STRONG&gt; are still to be added to your user.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i9.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286693i712E3704FBCCA3FC/image-size/large?v=v2&amp;amp;px=999" role="button" title="i9.jpg" alt="i9.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 7. Go back to your BTP Subaccount and go to &lt;STRONG&gt;Security -&amp;gt; Users&lt;/STRONG&gt; option&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i10.jpg" style="width: 376px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286694iAC8069AF28C08F4E/image-size/large?v=v2&amp;amp;px=999" role="button" title="i10.jpg" alt="i10.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 8.&amp;nbsp;Search for your &lt;STRONG&gt;user&lt;/STRONG&gt; and click on it&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i11_New.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286695i6B964A8F394FEACA/image-size/large?v=v2&amp;amp;px=999" role="button" title="i11_New.jpg" alt="i11_New.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 9.&amp;nbsp;Click on &lt;STRONG&gt;Assign Role Collection.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i12.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286696i743897AD29647515/image-size/large?v=v2&amp;amp;px=999" role="button" title="i12.jpg" alt="i12.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 10.&amp;nbsp;Search for &lt;STRONG&gt;Event&lt;/STRONG&gt; in the search bar. This will display 2 Integration Suite Event Mesh specific roles. Select both these roles and click on &lt;STRONG&gt;Assign Role Collection&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i13.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286697i126B3AEC4CFC2046/image-size/large?v=v2&amp;amp;px=999" role="button" title="i13.jpg" alt="i13.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Both these roles are now assigned to your user.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 11. Refresh the Integration Suite screen. We can now see the hyperlinks for &lt;STRONG&gt;Configure Events&lt;/STRONG&gt; and &lt;STRONG&gt;Monitor Events&lt;/STRONG&gt; in the&amp;nbsp;&lt;STRONG&gt;Manage Business Events&lt;/STRONG&gt; tile as shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i14.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286698iD02CFC2EB0B37B30/image-size/large?v=v2&amp;amp;px=999" role="button" title="i14.jpg" alt="i14.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 12.&amp;nbsp;Click on &lt;STRONG&gt;Configure Events&lt;/STRONG&gt; link.&lt;/P&gt;&lt;P&gt;This will open the below screen. Click on &lt;STRONG&gt;Activate&lt;/STRONG&gt; to enable Event Mesh capability&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i15.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286699i9A6D23C680CFF964/image-size/large?v=v2&amp;amp;px=999" role="button" title="i15.jpg" alt="i15.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;A notification will appear confirming that event mesh is successfully activated.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i16.jpg" style="width: 733px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286701i6D9133E005BB0A99/image-size/large?v=v2&amp;amp;px=999" role="button" title="i16.jpg" alt="i16.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i17.jpg" style="width: 423px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286700iF40E9A64816737D0/image-size/large?v=v2&amp;amp;px=999" role="button" title="i17.jpg" alt="i17.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Wait for some time, event mesh will now show as active-&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i18.jpg" style="width: 536px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286702i654C39253E3C7A6A/image-size/large?v=v2&amp;amp;px=999" role="button" title="i18.jpg" alt="i18.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If it shows as failed here, you might want to check the 2nd point under &lt;STRONG&gt;Prerequisites, &lt;/STRONG&gt;where it has been suggested to remove the instance of &lt;STRONG&gt;Standalone Event Mesh (Default Plan)&lt;/STRONG&gt; from your &lt;STRONG&gt;Subaccount, &lt;/STRONG&gt;if applicable in your case&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;13. Click on &lt;STRONG&gt;Queues&lt;/STRONG&gt; tab to create a new queue. Click on &lt;STRONG&gt;Create&lt;/STRONG&gt; button.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i19_New.jpg" style="width: 899px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286704i79539E447493BF5C/image-size/large?v=v2&amp;amp;px=999" role="button" title="i19_New.jpg" alt="i19_New.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;14. Give a name to the queue and click on Create-&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i20.jpg" style="width: 964px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286705i51705F9D199A23DB/image-size/large?v=v2&amp;amp;px=999" role="button" title="i20.jpg" alt="i20.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;15. Go to &lt;STRONG&gt;SAP BTP Subaccount&lt;/STRONG&gt; and create a &lt;STRONG&gt;Messaging Client&lt;/STRONG&gt; to receive messages from &lt;STRONG&gt;Topics&lt;/STRONG&gt; in &lt;STRONG&gt;S4H Public Cloud&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;16. Create a space named “&lt;STRONG&gt;INTEGRATION_TOOLS&lt;/STRONG&gt;”, or any other name of your choice. Use an existing space, if already available.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i21_New.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286707i799BEDD6D54F0D70/image-size/large?v=v2&amp;amp;px=999" role="button" title="i21_New.png" alt="i21_New.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Note that this step needs the “&lt;STRONG&gt;Integration Suite Event Mesh&lt;/STRONG&gt;” entitlement to be added in &lt;STRONG&gt;Global&lt;/STRONG&gt; &lt;STRONG&gt;account&lt;/STRONG&gt; as mentioned in the Prerequisites section.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i21_2.jpg" style="width: 584px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286708i46C27B6E2DC589EE/image-size/large?v=v2&amp;amp;px=999" role="button" title="i21_2.jpg" alt="i21_2.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;17. Click on &lt;STRONG&gt;Create &lt;/STRONG&gt;to create an Instance of &lt;STRONG&gt;Event Mesh&lt;/STRONG&gt;-&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i22_1.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286709iE4F793098E81B18D/image-size/large?v=v2&amp;amp;px=999" role="button" title="i22_1.jpg" alt="i22_1.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select Service as “&lt;STRONG&gt;SAP Integration Suite, Event Mesh&lt;/STRONG&gt;” and other parameters as shown below. Take note of the &lt;STRONG&gt;Instance Name&lt;/STRONG&gt; you provide, since this would be needed later during &lt;STRONG&gt;S4HANA Public Cloud&lt;/STRONG&gt; configurations.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i24.jpg" style="width: 752px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286710i1550249807CA5F47/image-size/large?v=v2&amp;amp;px=999" role="button" title="i24.jpg" alt="i24.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Instance creation will show as &lt;STRONG&gt;In progress&lt;/STRONG&gt; initially-&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i25.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286711i14336129851D2B49/image-size/large?v=v2&amp;amp;px=999" role="button" title="i25.jpg" alt="i25.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on the &lt;STRONG&gt;Message Client&lt;/STRONG&gt; “&lt;STRONG&gt;em-client-s4h&lt;/STRONG&gt;” when it’s created-&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i26.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286712i2D6C908213851BC8/image-size/large?v=v2&amp;amp;px=999" role="button" title="i26.jpg" alt="i26.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Click on &lt;STRONG&gt;Create&lt;/STRONG&gt; under &lt;STRONG&gt;Service Keys&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i27.jpg" style="width: 945px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286713i9F29E3F5B858AE3A/image-size/large?v=v2&amp;amp;px=999" role="button" title="i27.jpg" alt="i27.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Give it an appropriate name and click on &lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i28.jpg" style="width: 688px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286714i236A77710CF4DF8B/image-size/large?v=v2&amp;amp;px=999" role="button" title="i28.jpg" alt="i28.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i29.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286715i6BCE287C3A65AD0D/image-size/large?v=v2&amp;amp;px=999" role="button" title="i29.jpg" alt="i29.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Copy this &lt;STRONG&gt;JSON&lt;/STRONG&gt; content for use later in &lt;STRONG&gt;S4HC&lt;/STRONG&gt; while creating the communication arrangement.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i30.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286716i5A65DC61CEEFDC12/image-size/large?v=v2&amp;amp;px=999" role="button" title="i30.jpg" alt="i30.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;19. Move over to &lt;STRONG&gt;S4HCloud &lt;/STRONG&gt;system and open &lt;STRONG&gt;Communication Arrangements&lt;/STRONG&gt; app. Click on New.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i31.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286718i0E0836A6D92DD45C/image-size/large?v=v2&amp;amp;px=999" role="button" title="i31.jpg" alt="i31.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Search for &lt;STRONG&gt;Scenario 0092, &lt;/STRONG&gt;which is meant for &lt;STRONG&gt;Enterprise Eventing Integration&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i32.jpg" style="width: 756px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286720i2B012092FF0849E0/image-size/large?v=v2&amp;amp;px=999" role="button" title="i32.jpg" alt="i32.jpg" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i33.jpg" style="width: 780px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286719iC622C1C479A1125F/image-size/large?v=v2&amp;amp;px=999" role="button" title="i33.jpg" alt="i33.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Give an appropriate name to the &lt;STRONG&gt;arrangement&lt;/STRONG&gt;, assign user “&lt;STRONG&gt;CPI&lt;/STRONG&gt;” (or any other comm user as suitable in your case) and paste the &lt;STRONG&gt;Service Key&lt;/STRONG&gt; we created earlier and click on create.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i34.jpg" style="width: 849px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286721i2AF950BEF7D0FE86/image-size/large?v=v2&amp;amp;px=999" role="button" title="i34.jpg" alt="i34.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This will throw the below error message, which is expected. This error is thrown because we haven’t given any &lt;STRONG&gt;Topic namespace&lt;/STRONG&gt; which will help &lt;STRONG&gt;S4HCloud&lt;/STRONG&gt; to post this correctly to the &lt;STRONG&gt;Message Client&lt;/STRONG&gt; we created in BTP when it is subscribed to a &lt;STRONG&gt;Topic&lt;/STRONG&gt; in &lt;STRONG&gt;S4HCloud&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Click on close.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i35.jpg" style="width: 593px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286723i6454E4F56EBEAD57/image-size/large?v=v2&amp;amp;px=999" role="button" title="i35.jpg" alt="i35.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Add a namespace field with a value as &lt;STRONG&gt;em/client/s4h&lt;/STRONG&gt;. This name is similar to the &lt;STRONG&gt;Message Client&lt;/STRONG&gt; name. Just replace the &lt;STRONG&gt;“-”&lt;/STRONG&gt; with &lt;STRONG&gt;“/”&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i36_Partial.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286724i0F98018F20CD5D38/image-size/large?v=v2&amp;amp;px=999" role="button" title="i36_Partial.jpg" alt="i36_Partial.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add it back to the &lt;STRONG&gt;Service Key&lt;/STRONG&gt; and click on &lt;STRONG&gt;Create&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;This is now displaying the new &lt;STRONG&gt;Communication Arrangement&lt;/STRONG&gt; that has been created. You can now see the topic space added.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i37.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286725i4817EE067EB0D41E/image-size/large?v=v2&amp;amp;px=999" role="button" title="i37.jpg" alt="i37.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;20. Add these 2 apps – &lt;STRONG&gt;Enterprise Event Enablement (Event Monitor)&lt;/STRONG&gt; and &lt;STRONG&gt;Enterprise Event Enablement (Configure Channel Binding)&lt;/STRONG&gt; to your home screen in &lt;STRONG&gt;S4HC&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i38.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286726i103F3F37BEAD8F42/image-size/large?v=v2&amp;amp;px=999" role="button" title="i38.jpg" alt="i38.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;21.&amp;nbsp;&lt;/STRONG&gt;Go to &lt;STRONG&gt;Enterprise Event Enablement (Configure Channel Bindings)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i39.jpg" style="width: 301px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286727i1FCFCB018F8093CC/image-size/large?v=v2&amp;amp;px=999" role="button" title="i39.jpg" alt="i39.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;22.&amp;nbsp;Click on Channel “&lt;STRONG&gt;EMIS_0092&lt;/STRONG&gt;” which was generated in the previous step&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i40.jpg" style="width: 719px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286728iB2BF71F4C9590A5F/image-size/large?v=v2&amp;amp;px=999" role="button" title="i40.jpg" alt="i40.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;23. Click on &lt;STRONG&gt;Create&lt;/STRONG&gt; under &lt;STRONG&gt;Outbound Topic Bindings&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i41.jpg" style="width: 994px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286730iE7881FE67F35D6AD/image-size/large?v=v2&amp;amp;px=999" role="button" title="i41.jpg" alt="i41.jpg" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i42.jpg" style="width: 674px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286729iFEBC68D1E9CFFBAA/image-size/large?v=v2&amp;amp;px=999" role="button" title="i42.jpg" alt="i42.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;24. Search for &lt;STRONG&gt;Events&lt;/STRONG&gt;-&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;/sap/s4/beh/businesspartner/v1/BusinessPartner/Changed/v1&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;/sap/s4/beh/businesspartner/v1/BusinessPartner/Created/v1&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i43_1.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286732i4428D085F265627A/image-size/large?v=v2&amp;amp;px=999" role="button" title="i43_1.jpg" alt="i43_1.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Click these one by one and click on &lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i44.jpg" style="width: 630px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286733iB69A8D4506D6F9AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="i44.jpg" alt="i44.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i45.jpg" style="width: 833px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286734i9D0AEF29D7B09599/image-size/large?v=v2&amp;amp;px=999" role="button" title="i45.jpg" alt="i45.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i46.jpg" style="width: 436px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286735iFD1AD176FD233C68/image-size/large?v=v2&amp;amp;px=999" role="button" title="i46.jpg" alt="i46.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i47.jpg" style="width: 830px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286736i9CA6637639A2E152/image-size/large?v=v2&amp;amp;px=999" role="button" title="i47.jpg" alt="i47.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You can now see both the &lt;STRONG&gt;Topics&lt;/STRONG&gt; are added to the outbound channel “&lt;STRONG&gt;EMIS_0092&lt;/STRONG&gt;”.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i48.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286737iA9D7531CCF63C7DF/image-size/large?v=v2&amp;amp;px=999" role="button" title="i48.jpg" alt="i48.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;S4HC&lt;/STRONG&gt; is now ready to send &lt;STRONG&gt;Business Partner - Create&lt;/STRONG&gt; and &lt;STRONG&gt;Change&lt;/STRONG&gt; events.&lt;/P&gt;&lt;P&gt;25. Go back to the &lt;STRONG&gt;Queue&lt;/STRONG&gt; in &lt;STRONG&gt;BTP&lt;/STRONG&gt; to subscribe to these 2 &lt;STRONG&gt;Topics&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Click on the queue Tab&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i49.jpg" style="width: 902px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286738i2578746E5B00367E/image-size/large?v=v2&amp;amp;px=999" role="button" title="i49.jpg" alt="i49.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;26. Go to &lt;STRONG&gt;Subscriptions&lt;/STRONG&gt; tab and click on &lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i50.jpg" style="width: 648px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286740iB7BA3D2DC6B90D45/image-size/large?v=v2&amp;amp;px=999" role="button" title="i50.jpg" alt="i50.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;27. Paste the &lt;STRONG&gt;Topic names &lt;/STRONG&gt;here one by one.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i51.jpg" style="width: 704px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286741i5B477221D2C914F6/image-size/large?v=v2&amp;amp;px=999" role="button" title="i51.jpg" alt="i51.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note that the topic subscription should have the format - &lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;namespace&lt;/STRONG&gt; &lt;/FONT&gt;+ &lt;FONT color="#800000"&gt;&lt;STRONG&gt;/ce &lt;/STRONG&gt;&lt;/FONT&gt;+ &lt;FONT color="#0000FF"&gt;/&lt;STRONG&gt;topic name&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example in our case-&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;em/client/s4h&lt;/FONT&gt; + &lt;FONT color="#993366"&gt;/ce&lt;/FONT&gt; + &lt;FONT color="#0000FF"&gt;/sap/s4/beh/businesspartner/v1/BusinessPartner/Created/v1&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;You need to manually paste these &lt;STRONG&gt;2&lt;/STRONG&gt; &lt;STRONG&gt;Topics&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;em/client/s4h/ce/sap/s4/beh/businesspartner/v1/BusinessPartner/Changed/v1&lt;/P&gt;&lt;P&gt;em/client/s4h/ce/sap/s4/beh/businesspartner/v1/BusinessPartner/Created/v1&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i52.jpg" style="width: 679px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286742iB5251E20546EE0CE/image-size/large?v=v2&amp;amp;px=999" role="button" title="i52.jpg" alt="i52.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Do it for each of the &lt;STRONG&gt;Topics&lt;/STRONG&gt; and click on &lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i53.jpg" style="width: 854px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286743i251B11F10031F09D/image-size/large?v=v2&amp;amp;px=999" role="button" title="i53.jpg" alt="i53.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You can now see the 2 &lt;STRONG&gt;Topics&lt;/STRONG&gt; being subscribed to.&lt;/P&gt;&lt;P&gt;28. Go to &lt;STRONG&gt;Overview&lt;/STRONG&gt; tab of &lt;STRONG&gt;Event Mesh&lt;/STRONG&gt; and click on the &lt;STRONG&gt;Message Client&lt;/STRONG&gt; “&lt;STRONG&gt;em-client-s4h&lt;/STRONG&gt;”&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i54.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286744iD3E0699A94E23A42/image-size/large?v=v2&amp;amp;px=999" role="button" title="i54.jpg" alt="i54.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This will open the &lt;STRONG&gt;Webhooks&lt;/STRONG&gt; configuration screen. Click on &lt;STRONG&gt;Create&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i55.jpg" style="width: 861px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286745i22BC5CAB7AB4B462/image-size/large?v=v2&amp;amp;px=999" role="button" title="i55.jpg" alt="i55.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Use the below &lt;STRONG&gt;HTTP CPI iFlow Endpoint&lt;/STRONG&gt; as the &lt;STRONG&gt;Webhooks URL&lt;/STRONG&gt;-&lt;/P&gt;&lt;P&gt;https://&amp;lt;TenantURL&amp;gt;/http/BPReplicationToSalesforce&lt;/P&gt;&lt;P&gt;You need to create a &lt;STRONG&gt;CPI iFlow &lt;/STRONG&gt;with a &lt;STRONG&gt;HTTP Sender Channel&lt;/STRONG&gt;, whose endpoint will then act as a &lt;STRONG&gt;Webhooks URL&lt;/STRONG&gt; as shown above.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i56_WebhookEndpoint - Copy.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286746i0AB982E2DDD7D177/image-size/large?v=v2&amp;amp;px=999" role="button" title="i56_WebhookEndpoint - Copy.jpg" alt="i56_WebhookEndpoint - Copy.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on &lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="i57_1.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286748i1A6925EBB1E2011F/image-size/large?v=v2&amp;amp;px=999" role="button" title="i57_1.jpg" alt="i57_1.jpg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The &lt;STRONG&gt;webhooks&lt;/STRONG&gt; should now forward any messages that appear in this queue to the iFlow meant for SAP to Salesforce BP sync.&lt;/P&gt;&lt;P&gt;Below is a sample &lt;STRONG&gt;CPI iFlow&lt;/STRONG&gt; that was used for this Demo. You can implement as per your requirement.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="CPIFlow_labels.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286749i45F1C0377845A08F/image-size/large?v=v2&amp;amp;px=999" role="button" title="CPIFlow_labels.JPG" alt="CPIFlow_labels.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Brief details of the &lt;STRONG&gt;CPI iFlow&lt;/STRONG&gt; Steps-&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Business Events Message&lt;/STRONG&gt; is received via a &lt;STRONG&gt;HTTP Sender Adapter&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HTTPAdapterEndpoint - Copy.jpg" style="width: 511px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286751i3624AC06D96132CF/image-size/large?v=v2&amp;amp;px=999" role="button" title="HTTPAdapterEndpoint - Copy.jpg" alt="HTTPAdapterEndpoint - Copy.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The payload format of the incoming event notification payload is as given in the below &lt;STRONG&gt;SAP API Business Accelerator &lt;/STRONG&gt;link.&lt;/P&gt;&lt;P&gt;&lt;A href="https://api.sap.com/event/CE_BUSINESSPARTNEREVENTS/resource" target="_blank" rel="noopener noreferrer"&gt;https://api.sap.com/event/CE_BUSINESSPARTNEREVENTS/resource&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2. The &lt;STRONG&gt;BP number&lt;/STRONG&gt; needs to be extracted from this payload.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3. A call needs to be made to &lt;STRONG&gt;S4HC Business Partner OData API&lt;/STRONG&gt; to fetch additional details for the &lt;STRONG&gt;Created&lt;/STRONG&gt; or &lt;STRONG&gt;Changed&lt;/STRONG&gt; &lt;STRONG&gt;Business Partner&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4. Map to the corresponding structure of &lt;STRONG&gt;Accounts&lt;/STRONG&gt; &lt;STRONG&gt;object&lt;/STRONG&gt; of Salesforce&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5. Finally, send the payload to Salesforce API.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This completes the configuration setup, enabling the integration to capture and forward any Business Partner updates to the downstream systems.&lt;/P&gt;&lt;P&gt;As shown in the &lt;STRONG&gt;Solution Diagram&lt;/STRONG&gt; earlier, you can create additional queues for other subscribers who are interested in receiving the same or other events and subscribe them to the required Topics of interest.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Scaling Up with Advanced Event Mesh (AEM)-&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As your message size requirements grow, you can seamlessly transition to the more robust &lt;STRONG&gt;Advanced Event Mesh (AEM),&lt;/STRONG&gt; which offers enhanced scalability and performance as compared to &lt;STRONG&gt;Integration Suite - Event Mesh&lt;/STRONG&gt; (&lt;STRONG&gt;EMIS)&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Refer below materials-&lt;/P&gt;&lt;P&gt;&lt;A href="https://learning.sap.com/learning-journeys/discovering-event-driven-integration-with-sap-integration-suite-advanced-event-mesh/examining-sap-integration-suite-advanced-event-mesh_ce4073de-a466-4ac3-a2bc-4324b8b08b26?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/discovering-event-driven-integration-with-sap-integration-suite-advanced-event-mesh/examining-sap-integration-suite-advanced-event-mesh_ce4073de-a466-4ac3-a2bc-4324b8b08b26&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/sap-integration-suite/advanced-event-mesh/what-is-sap-integration-suite-advanced-event-mesh" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/sap-integration-suite/advanced-event-mesh/what-is-sap-integration-suite-advanced-event-mesh&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;We have now reached the end of this blog post. I hope you found the content useful and that it helped clarify the setup and capabilities of &lt;STRONG&gt;SAP Integration Suite’s Event Mesh&lt;/STRONG&gt;. Whether you're just starting with &lt;STRONG&gt;event-driven architecture&lt;/STRONG&gt; or exploring advanced options like &lt;STRONG&gt;Advanced Event Mesh (AEM)&lt;/STRONG&gt;, I’d love to hear your thoughts.&lt;/P&gt;&lt;P&gt;If you have any questions, face issues during your setup or simply want to share your experiences, feel free to drop a comment below. Your feedback is always welcome and can also help others in the community facing similar challenges.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;References-&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Community-&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/meet-your-new-friend-emis-event-mesh-in-sap-integration-suite/ba-p/13731129" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/meet-your-new-friend-emis-event-mesh-in-sap-integration-suite/ba-p/13731129&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Youtube-&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.youtube.com/watch?v=tUIG34xT3oo&amp;amp;t=3587s" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.youtube.com/watch?v=tUIG34xT3oo&amp;amp;t=3587s&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/setup-event-mesh-integration-suite-emis-to-trigger-events-from-s4h-cloud-to/ba-p/14151999"/>
    <published>2025-07-15T13:35:17.503000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-community-leaders-finder/gagan-mohan-singh/ba-p/14152377</id>
    <title>Gagan Mohan Singh</title>
    <updated>2025-07-15T13:45:02.432000+02:00</updated>
    <author>
      <name>StephanieMarley</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/109</uri>
    </author>
    <content>&lt;P class=""&gt;&lt;FONT face="tahoma, arial, helvetica, sans-serif"&gt;Gagan&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;New Delhi, India&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;SAP Mentor since 2025&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Follow Gagan on &lt;A href="https://www.linkedin.com/in/gaganmohansingh/" target="_self" rel="nofollow noopener noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Gagan Mohan Singh.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286870i3DEBC1EDD68AE625/image-size/small?v=v2&amp;amp;px=200" role="button" title="Gagan Mohan Singh.png" alt="Gagan Mohan Singh.png" /&gt;&lt;/span&gt;Gagan &lt;/STRONG&gt;is a seasoned SAP ERP Cloud architect, business relationship manager, presales strategist and an SAP storyteller with 18+ years of hands-on delivery and quota-carrying sales experience.&lt;/P&gt;&lt;P&gt;Gagan started his career at IBM where he cut his SAP teeth inside the Global Business Services unit, rolling out ECC for CPG and pharma clients across India. He also rolled out several Continuous Improvement and Key Control Initiatives for PepsiCo, modernised omnichannel retail at Page Industries (Jockey &amp;amp; Speedo), bootstrapped an online FMCG retail start-up, worked on Presales and Program Management at NEC Corporation India and is now responsible for SAP S/4HANA (RISE and GROW)sales and Program Management at Deloitte India. He loves talking about RISE/GROW programmes in SAP and translates deep technical detail into vivid business narratives for his 65,000+ SAP related LinkedIn followers.&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Topics of interest:&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;S/4HANA │ RISE with SAP │ GROW WITH SAP │ SAP BTP Extension &amp;amp; Integration │ SAP Signavio │Omnichannel Retail &amp;amp; CPG │ Presales Craft &amp;amp; Storytelling │ IOT │ AI&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Gagan, what inspired you to become an SAP Mentor?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="handshake .png" style="width: 68px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/52491i8E9D2FFB3C7BC293/image-dimensions/68x68?v=v2" width="68" height="68" role="button" title="handshake .png" alt="handshake .png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/FONT&gt;I’ve always loved sharing what I learn, and giving constructive feedback, so the SAP Mentor program felt like the perfect way to scale that habit. It offers a direct, two-way channel with SAP product managers and leadership—meaning the lessons I pick up in real projects can tangibly shape future releases—and it surrounds me with a community that’s just as passionate about raising the bar.&lt;/P&gt;&lt;P&gt;As someone who geeks out over the whole SAP portfolio—especially &lt;STRONG&gt;S/4HANA, RISE with SAP, and Signavio&lt;/STRONG&gt;—I’m thrilled by the prospect of getting an early window into the new products and changes SAP is bringing to market. That behind-the-scenes insight, coupled with the chance to funnel field feedback right back to the engineers, is the part I love most.&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;What advice would like to share with other SAP community members?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="298874_collaborate_blue (1).png" style="width: 65px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/52495i64D82195EFF8CCB9/image-dimensions/65x65?v=v2" width="65" height="65" role="button" title="298874_collaborate_blue (1).png" alt="298874_collaborate_blue (1).png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Give back—consistently and generously. &lt;/STRONG&gt;Whether it's by participating in events, answering questions, or sharing your own learnings, every contribution strengthens the SAP ecosystem. It’s not just a way to show appreciation for what the community has given you—it’s a way to multiply value for everyone.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Make contribution a habit. &lt;/STRONG&gt;Whether you're posting on SAP Blogs, writing on LinkedIn, or speaking at an Inside Track, regular engagement helps you enjoy your own work more, navigate challenges better, and build meaningful connections across the globe&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;And always remember:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Amplify others. &lt;/STRONG&gt;Celebrate their wins, share their work—it grows your network and theirs. Ultimately we win together.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Share the full story. &lt;/STRONG&gt;Don’t just post highlights; detail it out, your lessons from failures are often what help others most.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Stay curious. &lt;/STRONG&gt;Make time to explore new SAP tools and innovations—this industry rewards those who keep learning.&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/sap-community-leaders-finder/gagan-mohan-singh/ba-p/14152377"/>
    <published>2025-07-15T13:45:02.432000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/designing-an-event-driven-integration-architecture-with-solace-architecture/ba-p/14139458</id>
    <title>Designing an Event-Driven Integration Architecture with Solace : Architecture and Design : part-3</title>
    <updated>2025-07-17T07:14:43.460000+02:00</updated>
    <author>
      <name>pavanKolla</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2108029</uri>
    </author>
    <content>&lt;P&gt;Hello SAP Community!&lt;/P&gt;&lt;P&gt;This architecture follows a &lt;STRONG&gt;3-layer design pattern&lt;/STRONG&gt;&amp;nbsp;that the first layer is &lt;STRONG&gt;Routing layer&lt;/STRONG&gt;, second layer is &lt;STRONG&gt;Transformation layer&lt;/STRONG&gt;, and third layer is the &lt;STRONG&gt;Subscriber layer.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here is the detail architecture of the end to end scenario :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ed_sol.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280119iB65D767E3376223C/image-size/large?v=v2&amp;amp;px=999" role="button" title="ed_sol.png" alt="ed_sol.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1733397987"&gt;&lt;STRONG&gt;Architecture Layers&lt;/STRONG&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-1665967201"&gt;&lt;STRONG&gt;Layer 1 – Routing Layer&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Overview:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Receives incoming HTTPS requests (e.g., product data sent via Postman or an external system) like i will send the data from the postman.&lt;/LI&gt;&lt;LI&gt;Determines what kind of payload has arrived (products or suppliers) with the help of Groovy Script that i declared in the first layer.&lt;/LI&gt;&lt;LI&gt;Routes it to the appropriate processing flow by using the process direct adapter but the target second layer name would comes from the groovy script.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;How it works:&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Setup&amp;nbsp; as an HTTPS endpoint in SAP CPI.&lt;/LI&gt;&lt;LI&gt;Uses a &lt;STRONG&gt;Content-Based Router&lt;/STRONG&gt; to inspect the payload by using groovy script.&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;For example:(here there are 2 separate iflows for my layer-2 that i mentioned in the architecture)&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;If payload type = &lt;EM&gt;Product then request&amp;nbsp;&amp;nbsp;&lt;/EM&gt;forward to &lt;STRONG&gt;Products Layer 2 iFlow&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;If payload type = &lt;EM&gt;Supplier then request&amp;nbsp;&lt;/EM&gt;&amp;nbsp;forward to &lt;STRONG&gt;Suppliers Layer 2 iFlow&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Routing happens with the help of&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;ProcessDirect adapter&lt;/STRONG&gt; (Within the same tenant)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Layer 2 – Transformation Layer&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;This layer is split into &lt;STRONG&gt;two dedicated iFlows&lt;/STRONG&gt;&amp;nbsp;for my scenario if you want scale it you can scale upto to many publishers&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;1.Products -Layer 2 iFlow :&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Here the incoming data would be type of products data&lt;/LI&gt;&lt;LI&gt;Connects to &lt;STRONG&gt;Solace Event Broker&lt;/STRONG&gt; using the &lt;STRONG&gt;SAP Event Mesh Adapter &lt;/STRONG&gt;(The all setup i mentioned in detail in the part 2).&lt;/LI&gt;&lt;LI&gt;Publishes the event to the &lt;STRONG&gt;Products Queue&lt;/STRONG&gt; in Solace.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;2.Suppliers - Layer 2 iFlow:&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;(In this scenario, not triggered since the we are hitting products payload from the postman.)&lt;/LI&gt;&lt;LI&gt;Would do similar transformations for supplier data and publish to a separate queue(Suppliers queue).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Layer 3 – Subscriber Layer :&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;In this layer we can pick the data the from the solace queue and send the final data to the sftp or s/4 Hana cloud&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;How it works:&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;An iFlow is configured with an &lt;STRONG&gt;Event Mesh Receiver Adapter&lt;/STRONG&gt; (or Solace JMS Adapter) connected to the &lt;STRONG&gt;Products Queue&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;As soon as a new message arrives, CPI picks it up automatically.&lt;/LI&gt;&lt;LI&gt;It then maps the payload to the target format and posts it further via HTTP, OData, or other adapters to the target.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;The entire architecture and the adapters are&amp;nbsp; used as shown in the architectural&amp;nbsp; diagram above and this architecture would helps to use both error handling and event driven architecture in the sap cpi.&lt;/LI&gt;&lt;LI&gt;In the next blogs, I’ll share step-by-step setup and testing guides to help you implement this in your own projects. Stay tuned!&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/designing-an-event-driven-integration-architecture-with-solace-architecture/ba-p/14139458"/>
    <published>2025-07-17T07:14:43.460000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-connect-everything-featuring-cofinity-x-part-1/ba-p/14154974</id>
    <title>SAP Integration Suite – Connect Everything FEATURING Cofinity-X - PART 1</title>
    <updated>2025-07-17T16:45:36.839000+02:00</updated>
    <author>
      <name>tamaki_ogura</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/151215</uri>
    </author>
    <content>&lt;P&gt;Welcome to the next installment of our “&lt;A href="https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-connect-everything/ba-p/13982527" target="_self"&gt;SAP Integration Suite – Connect Everything&lt;/A&gt;” series.&lt;/P&gt;&lt;P&gt;In this post, we’ll explore how SAP’s new &lt;STRONG&gt;Data Space Integration&lt;/STRONG&gt; capability empowers secure, sovereign, and semantically rich data exchange across organizational boundaries — enabling users to share data in a data space / business network, like Catena-X for automotive customers.&lt;/P&gt;&lt;P&gt;We’ll demonstrate this through a real-world scenario running in a Catena-X test landscape operated by &lt;STRONG&gt;Cofinity-X&lt;/STRONG&gt;, the operating company of the Catena-X data space.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1606018218"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":heavy_check_mark:"&gt;✔️&lt;/span&gt;what is Data Space Integration?&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Data Space Integration (DSI) is a cutting-edge capability within the SAP Integration Suite that enables secure, sovereign, and peer-to-peer data exchange between participants of a shared data ecosystem.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Built on standards aligned with Gaia&lt;/SPAN&gt;‑&lt;SPAN&gt;X and leveraging open-source technologies like Eclipse&lt;/SPAN&gt; &lt;SPAN&gt;Tractus&lt;/SPAN&gt;‑&lt;SPAN&gt;X, DSI empowers organizations to offer, consume, and govern data assets through standardized policies and contracts.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With DSI, you can:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Register assets with defined policies to control access and usage&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Monitor agreements and data flows with full transparency&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Explore and consume offered assets from your business partners&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;This harmonized approach brings data sovereignty, interoperability, and compliance to next-generation integration scenarios—ideal for strategic use cases like Catena&lt;/SPAN&gt;‑&lt;SPAN&gt;X, where trusted collaboration across decentralized partners is essential.&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Here is the link for SAP’s official documentation: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/what-is-data-space-integration" target="_blank" rel="noopener noreferrer"&gt;What is Data Space Integration?&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;For the regions where Data Space Integration is currently available, refer to SAP Note &lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/3518230" target="_blank" rel="noopener noreferrer"&gt;3518230&lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":heavy_check_mark:"&gt;✔️&lt;/span&gt;High-Level Architecture&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s dive in to see how Data Space Integration is reshaping the way we connect and collaborate in the digital age — while also exploring its high-level architecture.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_0-1752742142766.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287755i322BCCDBF881798B/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_0-1752742142766.png" alt="otamabon_0-1752742142766.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The diagram illustrates how &lt;STRONG&gt;SAP’s Data Space Integration (DSI)&lt;/STRONG&gt; capability fits into a broader data space ecosystem, enabling secure, sovereign, and policy-driven data sharing between SAP and non-SAP participants.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;At a high level, the architecture is divided into three key areas:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Data Space Participant (SAP Customer)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;This includes:&lt;/SPAN&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Data Space Business Applications such as SAP Sustainability Data Exchange and&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;SAP Datasphere, which leverage shared data assets.&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Data Space Enablement Services, including:&lt;/SPAN&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Integration Suite&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (with &lt;STRONG&gt;Data Space Integration&lt;/STRONG&gt; as a new capability),&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Cloud Identity Services and Decentralized Identity Verification for identity and access control,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Digital Twin Administration for managing shared digital representations of assets.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP On-Premise and Cloud Solutions, along with 3rd party APIs, are connected via Cloud Connector to the SAP Business Technology Platform (BTP).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Network Layer – Interoperable Data Sharing&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;At the heart of the architecture lies &lt;STRONG&gt;Data Space Integration&lt;/STRONG&gt;, which:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Uses the &lt;STRONG&gt;Dataspace Protocol (DSP)&lt;/STRONG&gt; for secure, standardized communication,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Acts as the Connector for enabling peer-to-peer data sharing with any external participant of the network.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Ensures interoperability with any data space connector and vendor-agnostic infrastructure in line with Gaia-X and Catena-X principles.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Data Space Operating Company&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;This provides the Core Services Platform, such as &lt;STRONG&gt;Cofinity-X&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1409504713"&gt;Integration Scenario:&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In this blog post, we will focus on the practical setup within SAP Integration Suite. Specifically, we’ll demonstrate how to:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Activate and configure Data Space Integration as a capability in the SAP Integration Suite&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create assets, policies, and contract definitions to expose data assets to business partners (next blog post)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Request a catalog from a business partner (provider) to explore available data offerings as a consumer (next blog post)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;This hands-on walkthrough will help you understand how to connect securely, publish data responsibly, and consume shared data assets using the DSI capability in a real-world, multi-participant ecosystem scenario.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1342073927"&gt;&lt;STRONG&gt;Overview&lt;/STRONG&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Pre-requisites&lt;/LI&gt;&lt;LI&gt;Step 1: How to set up Data Space Integration in SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;Step 2: How to start consuming or providing assets within a Data Space&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1145560422"&gt;&lt;STRONG&gt;Pre-Requisites:&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;You must perform a few preparatory steps before you can get started with Data Space Integration. The following steps need to be performed. See &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/initial-setup-dsi?version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Initial Setup&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Assign an entitlement with &lt;STRONG&gt;service&lt;/STRONG&gt; di-api and &lt;STRONG&gt;plan&lt;/STRONG&gt; api to your subaccount in SAP BTP cockpit. See &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/preparatory-steps?version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Preparatory Steps&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_1-1752742772774.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287771iC5E4C411A4C541B4/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_1-1752742772774.png" alt="otamabon_1-1752742772774.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Data Space Integration capability&lt;/STRONG&gt; should be activated. See &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/activating-capability?version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Activating the Capability&lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_0-1752744285546.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287780i0E0E31DD5679EE3D/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_0-1752744285546.png" alt="otamabon_0-1752744285546.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;After you have activated the Data Space Integration capability, you require the role &lt;STRONG&gt;DataspaceTechnicalAdmin&lt;/STRONG&gt;. See &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/configuring-user-access-6ae0ff74bcbe4758b7c9d6c844bad454?version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Configuring User Access&lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_1-1752744305781.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287781iFFB1821091D39422/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_1-1752744305781.png" alt="otamabon_1-1752744305781.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Navigate from the SAP BTP cockpit to SAP Integration Suite, and go to &lt;STRONG&gt;Monitor &amp;gt; Integrations and APIs &amp;gt; User Roles&lt;/STRONG&gt;. Create a role called &lt;STRONG&gt;DataspaceIntegration_Runtime&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_2-1752744338374.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287782iC35DA97FC46F2E30/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_2-1752744338374.png" alt="otamabon_2-1752744338374.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create &lt;STRONG&gt;two Cloud Integration service keys&lt;/STRONG&gt; in the SAP BTP cockpit by following the steps in &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/preparing-cloud-integration?version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Preparing Cloud Integration&lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_3-1752744359570.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287783iDD7A6A8B3DAD2F04/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_3-1752744359570.png" alt="otamabon_3-1752744359570.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A technical user should have been created in the landscape portal of either &lt;STRONG&gt;Catena-X&lt;/STRONG&gt; or &lt;STRONG&gt;Cofinity-X&lt;/STRONG&gt;. See: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/create-technical-users-in-landscape-portal?version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Creating Technical Users in Landscape Portal&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-949046917"&gt;&lt;STRONG&gt;Step 1: How to set up Data Space Integration in SAP Integration Suite&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;Caution:&lt;/STRONG&gt; Before you proceed, make sure that you have completed all the steps described in the Pre-Requisites section.&lt;/P&gt;&lt;P&gt;To onboard with Cofinity-X and get started in Data Space Integration, you need to enter your data space identifiers and Cloud Integration parameters in the settings of Data Space Integration by following the steps (Also see &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/configuring-connector-setup-using-ui-recommended-approach?version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Configuring Connector Setup Using the UI&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;)&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;First, navigate to &lt;STRONG&gt;Settings &amp;gt; Data Spaces &amp;gt; Connect to a Data Space&lt;/STRONG&gt; and register the connector in Data Space Integration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_2-1752743172104.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287772iE2E5C956E3582EAC/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_2-1752743172104.png" alt="otamabon_2-1752743172104.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Select the landscape in which you’ve created the Identity Wallet Management and Offer Management role in &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/create-technical-users-in-landscape-portal" target="_blank" rel="noopener noreferrer"&gt;Creating Technical Users in Landscape Portal&lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;LI&gt;Enter the Business Partner Number of the company account&lt;/LI&gt;&lt;LI&gt;Choose a Connector Name under which you want the connector to be registered in the portal.&lt;/LI&gt;&lt;LI&gt;Fill in the Offer Management User information that you created in the landscape portal&lt;/LI&gt;&lt;LI&gt;Fill in the IATP STS OAuth Token URL. You can retrieve the client details (Client ID and Client Secret) from the Identity Wallet Management user you created in the landscape portal.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Second, navigate to the tab&lt;STRONG&gt; Prepare Connection to Cloud Integration&lt;/STRONG&gt; and enter the details from the two service keys created in step 0 pre-requisites to ensure the connection to Cloud Integration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_3-1752743227225.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287773i20494528D8C066C1/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_3-1752743227225.png" alt="otamabon_3-1752743227225.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Enter the Cloud Integration service key Process Integration Runtime, plan api&lt;/LI&gt;&lt;LI&gt;Enter the Cloud Integration service key Process Integration Runtime, plan integration-flow&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Finally, navigate to the tab&lt;STRONG&gt; Onboard the Data Plane&lt;/STRONG&gt; to onboard the Data Plane.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_4-1752743270945.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287774iA69A55CEC1FBD383/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_4-1752743270945.png" alt="otamabon_4-1752743270945.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;simply choose Onboard. Data Space Integration then starts (copying and) deploying &lt;SPAN&gt;&lt;A href="https://api.sap.com/package/com.sap.integration.dsi/overview" target="_blank" rel="noopener noreferrer"&gt;the integration package&lt;/A&gt;&lt;/SPAN&gt; in Cloud Integration using the parameters that you provided in the previous steps.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The onboarding of Data Space Integration can take up to 20 minutes. When the onboarding is completed, the status will be shown as successful.&lt;/P&gt;&lt;P&gt;If you want to do the configuration (step 1) using the API, see Configuring Connector Setup Using the API (&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/configuring-connector-setup-using-api-alternative-approach?version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Alternative Approach&lt;/A&gt;&lt;/SPAN&gt;).&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-752533412"&gt;&lt;STRONG&gt;Step 2: How to start consuming or providing assets within Data Space&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Now you are ready to consume or provide data within the data space in this case &lt;STRONG&gt;Cofinity-X&lt;/STRONG&gt; configured in the previous step.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;Note:&lt;/STRONG&gt; For consumer or provider roles, assign either&lt;STRONG&gt; DataspaceConsumer&lt;/STRONG&gt; or &lt;STRONG&gt;DataspaceProvider&lt;/STRONG&gt;, or both, depending on your needs. For more information about the role collections available for Data Space Integration, see &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/identity-and-access-management-dsi?version=CLOUD#loio211c66a2f65e4bf0ad0e93e68cfff984__section_cxz_vsk_pcc" target="_blank" rel="noopener noreferrer"&gt;Personas and Roles&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-426937188"&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;In this blog post, we explored the concept of Data Space Integration (DSI) and its role in enabling secure, policy-driven, and sovereign data exchange across organizational boundaries.&lt;/P&gt;&lt;P&gt;We demonstrated how to activate and configure DSI within the SAP Integration Suite. In the next blog post, we will walk through the steps to create and expose data assets, define access policies and contracts, and consume a catalog from another participant.&lt;/P&gt;&lt;P&gt;With DSI, SAP Integration Suite becomes a powerful enabler of next-generation data ecosystems, helping organizations like yours participate in initiatives such as Cofinity-X and Catena-X with confidence and compliance.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":heavy_check_mark:"&gt;✔️&lt;/span&gt;In the next blog post, we will demonstrate how to&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;provide your assets to other members of the data space.&lt;UL&gt;&lt;LI&gt;work with assets, policies, and contact agreements &amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;consume data assets provided by other members of the data space.&lt;UL&gt;&lt;LI&gt;discover offers through a catalog&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;monitor existing agreements both as a provider and consumer within your Date Space&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-connect-everything-featuring-cofinity-x-part-1/ba-p/14154974"/>
    <published>2025-07-17T16:45:36.839000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-connect-everything-featuring-cofinity-x-part-2/ba-p/14155073</id>
    <title>SAP Integration Suite – Connect Everything FEATURING Cofinity-X - PART 2</title>
    <updated>2025-07-17T16:46:29.982000+02:00</updated>
    <author>
      <name>tamaki_ogura</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/151215</uri>
    </author>
    <content>&lt;P&gt;Welcome to the blog post of our “&lt;A href="https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-connect-everything/ba-p/13982527" target="_self"&gt;SAP Integration Suite – Connect Everything&lt;/A&gt;” series. In this blog post, we’ll be exploring the integration scenario with Cofinity-X by leveraging the state-of-the-art Data Space Integration capability of SAP Integration Suite.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1606039359"&gt;Introduction&lt;/H1&gt;&lt;P&gt;In the previous blog post,&amp;nbsp; we explored the concept of Data Space Integration (DSI) and its role in enabling secure, policy-driven, and sovereign data exchange across organizational boundaries.&lt;/P&gt;&lt;P&gt;Also, we demonstrated how to activate and configure DSI within the SAP Integration Suite. In this blog post, we will walk through the steps to create and expose data assets, define access policies and contracts, and consume a catalog from another participant.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1409525854"&gt;Integration Scenario&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In this blog post, we will focus on the practical setup within SAP Integration Suite. Specifically, we’ll demonstrate how to:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Activate and configure Data Space Integration as a capability in the SAP Integration Suite (previous blog post)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create assets, policies, and contract definitions required by a provider to expose data assets (this blog post)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Request a catalog from another participant (provider) to explore available data offerings as a consumer (this blog post)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;This hands-on walkthrough will help you understand how to connect securely, publish data responsibly, and consume shared data assets using the DSI capability in a real-world, multi-participant ecosystem scenario.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1342095068"&gt;&lt;SPAN&gt;Overview&lt;/SPAN&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Pre-requisites&lt;/LI&gt;&lt;LI&gt;Scenario 1 - Provider scenario: How to provide your assets to another data space participant&lt;UL&gt;&lt;LI&gt;Step 1: Create Assets&lt;/LI&gt;&lt;LI&gt;Step 2: Create Policies&lt;/LI&gt;&lt;LI&gt;Step 3: Create Contract Definitions&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Scenario 2 - Consumer scenario: How to consume another data space participant’s assets&lt;UL&gt;&lt;LI&gt;Pre-Requisites&lt;/LI&gt;&lt;LI&gt;Step 1: Explore the API for Data Space Integration&lt;/LI&gt;&lt;LI&gt;Step 2: Request the catalog provided by another data space participant&lt;/LI&gt;&lt;LI&gt;Step 3: Consume assets&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1145581563"&gt;Pre&lt;STRONG&gt;-Requisites:&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;You must have performed the preparatory steps described in my previous blogpost.&lt;/P&gt;&lt;P&gt;For consumer or provider roles, assign either&lt;STRONG&gt; DataspaceConsumer&lt;/STRONG&gt; or &lt;STRONG&gt;DataspaceProvider&lt;/STRONG&gt;, or both, depending on your needs. For more information about the role collections available for Data Space Integration, see &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/identity-and-access-management-dsi?version=CLOUD#loio211c66a2f65e4bf0ad0e93e68cfff984__section_cxz_vsk_pcc" target="_blank" rel="noopener noreferrer"&gt;Personas and Roles&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-949068058"&gt;&lt;STRONG&gt;Scenario 1 - Provider scenario: How to provide your assets to another data space participant&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;As a provider, you need to create assets and policies and bundle them into contract definitions to facilitate data exchange between different network members.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-881637272"&gt;&lt;STRONG&gt;Step 1: Create Assets&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;First, navigate to &lt;STRONG&gt;Design &amp;gt; Data Spaces &amp;gt; Assets &lt;/STRONG&gt;and define assets that you would like to offer to other members within a data space (Also see &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/creating-assets" target="_blank" rel="noopener noreferrer"&gt;Creating Assets&lt;/A&gt;&lt;/SPAN&gt;).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_0-1752749210717.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287816i31F656743E6E24AE/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_0-1752749210717.png" alt="otamabon_0-1752749210717.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Next, you need to specify the following information:&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Name of the asset&lt;/LI&gt;&lt;LI&gt;Address of the data source. In this demo, we are using Amazon S3 bucket as data source, but HTTP can be used as well.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_1-1752749268825.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287819i8BADF4A49D0693F6/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_1-1752749268825.png" alt="otamabon_1-1752749268825.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-685123767"&gt;&lt;STRONG&gt;Step 2: Create Policies&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;As a provider, you create policies to define the way in which consumers can use your assets. Specifically, to define&amp;nbsp;&lt;SPAN class=""&gt;a) who will see your offer and b) what a consumer can do with the asset.&lt;/SPAN&gt;&lt;!--     EndFragment      --&gt;&lt;/P&gt;&lt;P&gt;Navigate to &lt;STRONG&gt;Design &amp;gt; Data Spaces &amp;gt; Policies&lt;/STRONG&gt; to create a new policy.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Enter name of the policy&lt;/LI&gt;&lt;LI&gt;Select one of the attributes to define your rule.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;Note:&lt;/STRONG&gt; In a contract definition, policies can function either as &lt;STRONG&gt;access policy&lt;/STRONG&gt; or &lt;STRONG&gt;usage policy&lt;/STRONG&gt;, which means they either define who can use an asset (access) or its business relevant purposes (usage). You must have defined at least two policies to use them in a contract definition.&lt;/P&gt;&lt;P&gt;Note: In a contract definition, policies can function either as &lt;STRONG&gt;access policy&lt;/STRONG&gt; or &lt;STRONG&gt;usage policy&lt;/STRONG&gt;, which means they either define who can use an asset (access) or for how long (usage). You must have defined at least two policies to use them in a contract definition.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_0-1752750996896.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287888i90E3014BF05C9FAC/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_0-1752750996896.png" alt="otamabon_0-1752750996896.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-488610262"&gt;&lt;STRONG&gt;Step 3: Create Contract Definitions&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;After you have defined &lt;STRONG&gt;assets&lt;/STRONG&gt; and at least one &lt;STRONG&gt;access policy&lt;/STRONG&gt; and &lt;STRONG&gt;usage policy&lt;/STRONG&gt;, you can combine them into contract definitions, which can then be offered to consumers.&lt;/P&gt;&lt;P&gt;Navigate to &lt;STRONG&gt;Design &amp;gt; Data Spaces &amp;gt; Contract Definitions&lt;/STRONG&gt; to create a new contract definition.&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Enter name of the contract definition&lt;/LI&gt;&lt;LI&gt;Select access policy and usage policy created in the previous step&lt;/LI&gt;&lt;LI&gt;Select assets to provide to other members within the data space&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_1-1752751047508.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287890iCDF25E6C43203032/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_1-1752751047508.png" alt="otamabon_1-1752751047508.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now, your assets are ready to be accessed by other members of the data space for consumption.&lt;/P&gt;&lt;P&gt;As an admin, you can also create Company Policies and Contract References to&lt;SPAN&gt; define the regulations for requesting and accepting an offer&lt;/SPAN&gt;, and to restrict who can work with you. For more information, please refer to &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/configure-in-data-spaces" target="_blank" rel="noopener noreferrer"&gt;Configure in Data Spaces&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-163014038"&gt;&lt;STRONG&gt;Scenario 2 - Consumer scenario: How to consume another data space participant’s assets&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;As a consumer, you can access and consume data assets provided by other members of the data space. But before data assets can be consumed, a provider and consumer of the assets need to define the data exchange via contract agreements (See &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/consuming-data-space-assets" target="_blank" rel="noopener noreferrer"&gt;Consuming Data Space Assets&lt;/A&gt;&lt;/SPAN&gt;).&lt;/P&gt;&lt;P&gt;Also, note that depending on the asset that you want to consume or provide, there are two different approaches to consuming assets:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The &lt;STRONG&gt;provider pushes&lt;/STRONG&gt; the asset to a location that the consumer specifies. This approach applies to S3 assets and Azure assets.&lt;/LI&gt;&lt;LI&gt;The &lt;STRONG&gt;consumer pulls&lt;/STRONG&gt; the asset from a location that the provider discloses to them. This approach applies to HTTP assets.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Before you can start the contract negotiations with providers, you must discover their catalog and decide on an offer. In the consumer scenario, we only focus on how to discover their offers through a catalog (See &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/discovering-offers-through-catalog" target="_blank" rel="noopener noreferrer"&gt;Discovering Offers Through a Catalog&lt;/A&gt;&lt;/SPAN&gt;).&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-95583252"&gt;&lt;STRONG&gt;Pre-Requisites:&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;You have the &lt;STRONG&gt;provider URL&lt;/STRONG&gt;, which is the external connector address of the other data space participants from whom you want to consume the asset. It is accessible via Cofinity-X.&lt;/LI&gt;&lt;LI&gt;You have a &lt;STRONG&gt;valid OAuth2 access token of your Data Space Integration connector&lt;/STRONG&gt;. You can retrieve the necessary details from the service key in your BTP subaccount.&lt;/LI&gt;&lt;LI&gt;When communicating with your connector, you require a &lt;STRONG&gt;managementURL&lt;/STRONG&gt;, which you can retrieve from the Data Space Integration API Access service key.&lt;/LI&gt;&lt;LI&gt;You have the following consumer-related roles/role collection. With the DataspaceConsumer role collection, all consumer operations can be performed.&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="155.688px"&gt;&lt;P&gt;&lt;STRONG&gt;Operation&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="193.312px"&gt;&lt;P&gt;&lt;STRONG&gt;Role&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="155.688px"&gt;&lt;P&gt;Query Catalog&lt;/P&gt;&lt;/TD&gt;&lt;TD width="193.312px"&gt;&lt;P&gt;Catalog.Read&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="155.688px"&gt;&lt;P&gt;Contract Negotiation&lt;/P&gt;&lt;/TD&gt;&lt;TD width="193.312px"&gt;&lt;P&gt;ContractNegotiation.Read&lt;/P&gt;&lt;P&gt;ContractNegotiation.Write&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="155.688px"&gt;&lt;P&gt;Contract Agreement&lt;/P&gt;&lt;/TD&gt;&lt;TD width="193.312px"&gt;&lt;P&gt;ContractAgreement.Read&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="155.688px"&gt;&lt;P&gt;Transfer Process&lt;/P&gt;&lt;/TD&gt;&lt;TD width="193.312px"&gt;&lt;P&gt;TransferProcess.Read&lt;/P&gt;&lt;P&gt;TransferProcess.Write&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--176161622"&gt;&lt;STRONG&gt;Step 1: Explore the API of Data Space Integration&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;You can use the API provided in the &lt;SPAN&gt;&lt;A href="https://api.sap.com/package/dataspaceintegration/rest" target="_blank" rel="noopener noreferrer"&gt;SAP Business Accelerator Hub&lt;/A&gt;&lt;/SPAN&gt;. To find the specification, navigate to &lt;STRONG&gt;API Reference &amp;gt; Catalog.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_2-1752751316020.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287892i061AAF38BC960946/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_2-1752751316020.png" alt="otamabon_2-1752751316020.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--372675127"&gt;&lt;STRONG&gt;Step 2: Request the catalog provided by another data space participant &lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;You can request the catalog containing a list of all offers available with the following POST call.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_3-1752751356915.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287893i56541A1C2DFB1A41/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_3-1752751356915.png" alt="otamabon_3-1752751356915.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Replace {{managementURL}} with your specific URL which can be retrieved from the service key.&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;{{managementURL}}/api/management/v3/catalog/request&lt;/code&gt;&lt;/pre&gt;&lt;OL&gt;&lt;LI&gt;Provide the following request body. Replace the placeholder values.&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;{
  "@context": {
    "edc": "https://w3id.org/edc/v0.0.1/ns/",
    "@vocab": "https://w3id.org/edc/v0.0.1/ns/"
  },
  "@type": "CatalogRequest",
  "edc:protocol": "dataspace-protocol-http",
  "edc:counterPartyAddress": "&amp;lt;providerURL of your business partner’s connector&amp;gt;",
  "edc:counterPartyId": "&amp;lt;BPN of your business partner&amp;gt;",
  "edc:querySpec": {
    "@type":"QuerySpec",
    "edc:sortOrder": "ASC",    
    "edc:offset": 0,
    "edc:limit": 100       
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="otamabon_4-1752751495893.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287894i000700F50C7E4818/image-size/large?v=v2&amp;amp;px=999" role="button" title="otamabon_4-1752751495893.png" alt="otamabon_4-1752751495893.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As a result, you receive the catalog of the specific connector that you asked for.&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Under &lt;STRONG&gt;dcat:dataset&lt;/STRONG&gt; in the response, you can find all the offers registered on this connector.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--569188632"&gt;&lt;STRONG&gt;Step 3:&amp;nbsp;Consume assets&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Once you have found the assets that you want to consume, you need to initiate a contract negotiation. To do so, you can use the same Data Space Integration API. Once the contract negotiation was successful the consumer will initiate a transferProcess which will initiate the data exchange for S3/Azure assets or which will retrieve the access credentials to the requested asset.&lt;/P&gt;&lt;P&gt;Also, you can monitor existing agreements both as a provider and consumer. To get an overview of active contract agreements with your providers or consumers, simply navigate to &lt;STRONG&gt;Monitor &amp;gt; Data Spaces&lt;/STRONG&gt; (See &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/monitoring-agreements" target="_blank" rel="noopener noreferrer"&gt;Monitoring Agreements&lt;/A&gt;&lt;/SPAN&gt;).&lt;/P&gt;&lt;P&gt;For information about troubleshooting for Data Space Integration, please refer to the following link: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/troubleshooting-dsi?locale=en-US&amp;amp;q=data+space+integration" target="_blank" rel="noopener noreferrer"&gt;Troubleshooting for Data Space Integration&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--765702137"&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;In this blog post, we explored the concept of Data Space Integration (DSI) and its role in enabling secure, policy-driven, and sovereign data exchange across organizational boundaries.&lt;/P&gt;&lt;P&gt;We demonstrated the steps to create and expose data assets, define access policies and contracts, and consume a catalog from another participant.&lt;/P&gt;&lt;P&gt;With DSI, SAP Integration Suite becomes a powerful enabler of next-generation data ecosystems, helping organizations like yours participate in initiatives such as Cofinity-X and Catena-X with confidence and compliance.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-connect-everything-featuring-cofinity-x-part-2/ba-p/14155073"/>
    <published>2025-07-17T16:46:29.982000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/new-partner-content-on-sap-business-accelerator-hub-q2-25/ba-p/14154988</id>
    <title>New Partner Content on SAP Business Accelerator Hub (Q2 ’25)</title>
    <updated>2025-07-17T16:47:20.649000+02:00</updated>
    <author>
      <name>AnanthNatarajan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/79594</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In continuation of our previous&amp;nbsp;&lt;A href="https://community.sap.com/t5/integration-blog-posts/new-partner-content-on-sap-business-accelerator-hub-q1-25/ba-p/14090098" target="_blank"&gt;blog&lt;/A&gt;, we are excited to bring &lt;FONT face="arial,helvetica,sans-serif"&gt;you&lt;/FONT&gt; the latest updates and maintain the momentum of delivering valuable insights to our community.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In this edition of our blog series, explore the newest content packages released on the &lt;SPAN&gt;&lt;A href="https://hub.sap.com/" target="_blank" rel="noopener noreferrer"&gt;SAP Business Accelerator Hub&lt;/A&gt;&lt;/SPAN&gt; by our partners in Q2 2025, along with a high-level overview of the year’s progress so far.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For complete details on each partner's content, refer to the&amp;nbsp;&lt;A href="https://hub.sap.com/allpartners" target="_blank" rel="noopener noreferrer"&gt;partners listing&lt;/A&gt;&amp;nbsp;which is available on the home page of SAP Business Accelerator Hub.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;------------------------------------------------------------------------------------------------------------------------------------------------&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1207588960" id="toc-hId-1864183691"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Incture Technologies Private Limited&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId--431949866" id="toc-hId-1796752905"&gt;&lt;EM&gt;Integration package&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/EM&gt;&lt;EM&gt;published:&lt;/EM&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;A href="https://hub.sap.com/package/OracleInventoryManagementSystemIntegrationwithSAPS4HANA/integrationflow" target="_blank" rel="noopener noreferrer"&gt;Oracle Inventory Management System Integration with SAP S/4HANA &lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;The Oracle Inventory Management System Integration with SAP S/4HANA package in SAP Cloud Integration facilitates seamless data exchange between Oracle Inventory Management System and SAP S/4HANA.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;------------------------------------------------------------------------------------------------------------------------------------------------&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1207588960" id="toc-hId-1471156681"&gt;&lt;STRONG&gt;&lt;SPAN&gt;SirionLabs Pte Ltd&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId--431949866" id="toc-hId-1403725895"&gt;&lt;EM&gt;Integration package&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/EM&gt;&lt;EM&gt;published:&lt;/EM&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;A href="https://hub.sap.com/package/SirionContractLifecycleManagementCLMIntegrationwithSAPAribaProcurement/integrationflow" target="_blank" rel="noopener noreferrer"&gt;Sirion Contract Lifecycle Management (CLM) Integration with SAP Ariba Procurement&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;The Sirion Contract Lifecycle Management (CLM) Buy-side adapter for SAP Ariba seamlessly integrates the contracting flow into the buy-side process. New Contract Draft Requests (CDR) created on Sirion CLM are automatically transitioned into a Purchase Requisition (PR) on SAP Ariba enabling a sync between two systems for the entire Buy-side and contracting flow.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;A href="https://hub.sap.com/package/SirionContractLifecycleManagementCLMIntegrationwithSAPAribaSourcingAwards2/integrationflow" target="_blank" rel="noopener noreferrer"&gt;&lt;EM&gt;Sirion Contract Lifecycle Management with SAP Ariba Sourcing Awards&lt;/EM&gt;&lt;/A&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The&amp;nbsp;&lt;STRONG&gt;Sirion Contract Lifecycle Management (CLM) Sourcing Adapter&lt;/STRONG&gt;&amp;nbsp;for SAP Ariba seamlessly integrates the contracting flow into the sourcing process. Sourcing Projects and Events initiated in SAP Ariba are automatically transitioned into Contract Requests (CDRs) and Contract Line Items (CLIs) in Sirion CLM, enabling synchronization between the two systems throughout the sourcing and contracting flow.​&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;SPAN&gt;&lt;A href="https://hub.sap.com/package/SirionContractLifecycleManagementCLMIntegrationwithSAPAribaSourcingBids/integrationflow" target="_blank" rel="noopener noreferrer"&gt;Sirion Contract Lifecycle Management with SAP Ariba Sourcing Bids&lt;/A&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The&amp;nbsp;&lt;STRONG&gt;Sirion Contract Lifecycle Management (CLM) Sourcing Adapter&lt;/STRONG&gt;&amp;nbsp;for SAP Ariba seamlessly integrates the contracting flow into the sourcing process. Sourcing Projects and Events initiated in SAP Ariba are automatically transitioned into Contract Draft Requests (CDRs) and Contract Line Items (CLIs) in Sirion CLM, enabling synchronization between the two systems throughout the sourcing and contracting flow.​&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;------------------------------------------------------------------------------------------------------------------------------------------------&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1207588960" id="toc-hId-1078129671"&gt;&lt;STRONG&gt;&lt;SPAN&gt;LTIMindtree Limited&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId--431949866" id="toc-hId-1010698885"&gt;&lt;EM&gt;Validated Partner Use Case package&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/EM&gt;&lt;EM&gt;published:&lt;/EM&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;A href="https://hub.sap.com/package/Intelligent_Master_Data_Curator/overview" target="_blank" rel="noopener noreferrer"&gt;Intelligent Master Data Curator&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;Intelligent Master Data Curator transforms SAP Master Data Governance by harnessing the power of advanced Gen AI and Narrow AI technologies. By automating the validation of global attributes and accurately proposing local attributes, this solution ensures unparalleled data quality and integrity.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;A href="https://hub.sap.com/package/Elevating_Supply_Chain_Performance_with_SmartATP/overview" target="_blank" rel="noopener noreferrer"&gt;Elevating Supply Chain Performance with SmartATP &lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;The implementation of Gen AI empowers organizations to anticipate potential delays from suppliers or vendors well in advance. This foresight enables the revision of production and sales plans, allowing for timely action to minimize disruptions. Gen AI can also trigger advanced notifications to planners and sales teams, ensuring proactive measures are taken to mitigate delays effectively.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;------------------------------------------------------------------------------------------------------------------------------------------------&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1207588960" id="toc-hId-685102661"&gt;&lt;STRONG&gt;&lt;SPAN&gt;ATOS INTERNATIONAL SAS&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId--431949866" id="toc-hId-617671875"&gt;&lt;EM&gt;Validated Partner Use Case package&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/EM&gt;&lt;EM&gt;published:&lt;/EM&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;A href="https://hub.sap.com/package/QE_Assist_for_Digital_Assurance/overview" target="_blank" rel="noopener noreferrer"&gt;QE Assist for Digital Assurance&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;AI powered QE Assist - where Quality Assurance meets the power of intelligence, is the game changing solution that combines predictive AI and natural language capability driven by trained large language models (LLM) to offer a seamless, efficient, and impactful experience.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;A href="https://hub.sap.com/package/AI_based_Maintenance_Assistant_in_SAP_EAM/overview" target="_blank" rel="noopener noreferrer"&gt;AI based Maintenance Assistant in SAP EAM&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;GenAI based knowledge assistant for maintenance and service technicians using large language Model via SAP BTP on SAP PM Objects.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;&lt;EM&gt;&lt;A href="https://hub.sap.com/package/Knowledge_Pilot_powered_by_GenAI/overview" target="_blank" rel="noopener noreferrer"&gt;Knowledge Pilot powered by GenAI&lt;/A&gt;&lt;/EM&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;When the information is stored in multiple systems, multiple documents and multiple locations, search cost gets higher and efficiency reduces. Knowledge Pilot is an AI-powered knowledge search tool that provides precise, accurate, grounded information you need quickly and easily. The solution can be utilized for any situation and scenario which require high volume of documentation or huge knowledge repositories, but needs faster search capability.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;------------------------------------------------------------------------------------------------------------------------------------------------&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1207588960" id="toc-hId-292075651"&gt;&lt;STRONG&gt;&lt;SPAN&gt;BIGCube GmbH&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId--431949866" id="toc-hId-224644865"&gt;&lt;EM&gt;Validated Partner Use Case package&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/EM&gt;&lt;EM&gt;published:&lt;/EM&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;A href="https://hub.sap.com/package/Streamlined_custom_table_maintenance/overview" target="_blank" rel="noopener noreferrer"&gt;Streamlined Custom Table Maintenance&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;The application is based on an ABAP back end deployed in an SAP BW/4HANA system and offers odata services to connect to the front end. The app is a kind of framework that makes it possible to manage data in tables as desired. With granular privilege control (SAP Standard Authorization objects), users can only modify data they're authorized to, ensuring security and compliance.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;------------------------------------------------------------------------------------------------------------------------------------------------&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1207588960" id="toc-hId--176182728"&gt;&lt;STRONG&gt;KaTe GmbH&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId--431949866" id="toc-hId--666099240"&gt;&lt;EM&gt;Integration package&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/EM&gt;&lt;EM&gt;published:&lt;/EM&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;A href="https://hub.sap.com/package/KaTeKafkaAdapter/overview" target="_blank" rel="noopener noreferrer"&gt;KaTe Kafka Adapter&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;KaTe Kafka Adapter provides connectivity as publisher or subscriber of a Apache Kafka cluster with SAP Integration Suite or SAP Process Orchestration.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;------------------------------------------------------------------------------------------------------------------------------------------------&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1207588960" id="toc-hId--569209738"&gt;&lt;STRONG&gt;Corevist Inc&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId--431949866" id="toc-hId--1059126250"&gt;&lt;EM&gt;Integration package&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/EM&gt;&lt;EM&gt;published:&lt;/EM&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;A href="https://hub.sap.com/package/CorevistCloudCommerceIntegrationwithSAPS4HANA/integrationflow" target="_blank" rel="noopener noreferrer"&gt;Corevist Cloud Commerce Integration with SAP S/4HANA&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;Enable your customers to track orders and shipments; access invoices, quotes, and payment history; check account balance and available credit; and download business documents —directly from SAP ERP. Our customer portal streamlines operations, scales with your business, and fully aligns with the SAP Business Suite roadmap through direct SAP BTP integration.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;------------------------------------------------------------------------------------------------------------------------------------------------&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId--962236748"&gt;&lt;SPAN&gt;Prezien Solutions Ltd&lt;/SPAN&gt;&lt;/H3&gt;&lt;H4 id="toc-hId--431949866" id="toc-hId--1452153260"&gt;&lt;EM&gt;Validated Partner Use Case package&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/EM&gt;&lt;EM&gt;published:&lt;/EM&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;A href="https://hub.sap.com/package/Editable_AI_Assisted_Document_Generation_in_Sales_and_Service/overview" target="_blank" rel="noopener noreferrer"&gt;Editable, AI Assisted Document Generation in Sales and Service&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;Seamlessly generate, manage, and customise Word documents with AI assisted content for every sales, service, or HR interaction.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;------------------------------------------------------------------------------------------------------------------------------------------------&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you are interested in&amp;nbsp;&lt;STRONG&gt;Partnering with SAP Business Accelerator Hub,&amp;nbsp;&lt;/STRONG&gt;please refer to this&amp;nbsp;&lt;A href="https://hub.sap.com/partnerwithus" target="_blank" rel="noopener noreferrer"&gt;section&lt;/A&gt;&amp;nbsp;for more details.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Stay tuned for further updates and information by the end of the next quarter!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/new-partner-content-on-sap-business-accelerator-hub-q2-25/ba-p/14154988"/>
    <published>2025-07-17T16:47:20.649000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-looking-good-this-summer-with-smart-new-g2-badges/ba-p/14156526</id>
    <title>SAP BTP: Looking good this Summer with smart new G2 badges</title>
    <updated>2025-07-18T14:24:53.482000+02:00</updated>
    <author>
      <name>ChrisGrundy</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/171629</uri>
    </author>
    <content>&lt;P&gt;A little over six months have passed since my &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/santa-s-early-gift-for-sap-btp/ba-p/13967047" target="_blank"&gt;last blog&lt;/A&gt; on the topic of &lt;A href="https://www.g2.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;G2&lt;/A&gt; badges, but with summer now here for many of us, it seems appropriate that G2 have awarded &lt;A href="http://www.sap.com/btp" target="_blank" rel="noopener noreferrer"&gt;SAP BTP&lt;/A&gt; some shiny new and very smart looking badges, and don’t they look great?&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="G2 Summer 2025 Badges.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288635i1378B0048DA2A452/image-size/large?v=v2&amp;amp;px=999" role="button" title="G2 Summer 2025 Badges.png" alt="G2 Summer 2025 Badges.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now great looking badges are one thing, but what do they actually mean? G2 of course associates badges directly with the type and quality of feedback that they obtain through customers reviews, and for the types of badges awarded to SAP BTP the meanings are clearly defined:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Momentum Leader: Products in the Leader tier in the Momentum Grid® rank in the top 25% of their category's products by their users&lt;/LI&gt;&lt;LI&gt;Grid Leader: Products in the Leader quadrant in the Grid® Report are rated highly by G2 users and have substantial Satisfaction and Market Presence scores&lt;/LI&gt;&lt;LI&gt;Users Love Us badge: Earned after collecting 20 reviews with an average rating of 4.0 stars&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The SAP BTP team is of course delighted to continue to receive these badges of recognition from G2, and thankful for the feedback left by many customers which has led to these being awarded.&lt;/P&gt;&lt;H3 id="toc-hId-1864239241"&gt;&lt;STRONG&gt;What do customers say about SAP BTP?&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Recent feedback from SAP customers reveals a range of different ways in which they are using SAP BTP to help solve business or process issues, from automation and AI to application development and clean core initiatives, all of which help to deliver value to their organizations. A full list of customer reviews can be found at the &lt;A href="https://www.g2.com/products/sap-business-technology-platform/reviews" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP BTP landing page&lt;/A&gt; on the G2 website. But here’s a snapshot of what some of these reviews say when asked what their favourite thing is about SAP BTP:&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&lt;STRONG&gt;&lt;EM&gt;“The best I like is we can build the apps side by side, automate various business process and integrate seamlessly with SAP and non SAP applications without disturbing the core system, which makes core system not only making clean core but also to make the upgrades easy!”&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;(&lt;A href="https://www.g2.com/products/sap-business-technology-platform/reviews/sap-business-technology-platform-review-11229295" target="_blank" rel="noopener nofollow noreferrer"&gt;User review by an enterprise customer&lt;/A&gt;, May 2025)&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;“&lt;STRONG&gt;&lt;EM&gt;We can create custom applications (in a supply chain use case) with robust UI and design frame works for meeting unsolved business use cases…Built Goods receipt and Quality process automation tool for our warehouse / distribution center…building tool to manage supply chain flows - Logistics flows, Physical flows and Financial flows.&lt;/EM&gt;&lt;/STRONG&gt;”&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;(&lt;A href="https://www.g2.com/products/sap-business-technology-platform/reviews/sap-business-technology-platform-review-11189567" target="_blank" rel="noopener nofollow noreferrer"&gt;User review by a small business customer&lt;/A&gt;, May 2025)&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;“&lt;STRONG&gt;&lt;EM&gt;Pretty easy! It’s a comprehensive cloud platform that offers a variety of services and capabilities. Some key aspects that users may find appealing include its ability to accelerate digital transformation.&lt;/EM&gt;&lt;/STRONG&gt;”&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;(&lt;A href="https://www.g2.com/products/sap-business-technology-platform/reviews/sap-business-technology-platform-review-11189042" target="_blank" rel="noopener nofollow noreferrer"&gt;User review by enterprise customer&lt;/A&gt;, May 2025)&lt;/P&gt;&lt;P&gt;As ever, my thanks to the many SAP BTP customers who choose to leave reviews on the G2 platform, and for making it possible for us to be recognized through the G2 badges.&lt;/P&gt;&lt;P&gt;Wishing you all a super summer ahead, and I hope to be back later in the year to share more news about G2 customer review of SAP BTP with you.&lt;/P&gt;&lt;P&gt;Chris Grundy, Product Marketing, SAP BTP&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-looking-good-this-summer-with-smart-new-g2-badges/ba-p/14156526"/>
    <published>2025-07-18T14:24:53.482000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/automating-iflow-documentation-with-sap-integration-suite-and-gemini-ai/ba-p/14153802</id>
    <title>Automating iFlow Documentation with SAP Integration Suite and Gemini AI</title>
    <updated>2025-07-18T14:27:58.950000+02:00</updated>
    <author>
      <name>Andrew-Fawzy</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1691795</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735069966"&gt;&lt;STRONG&gt;🧭 Introduction&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Documenting integration flows in &lt;STRONG&gt;SAP Cloud Platform Integration (CPI)&lt;/STRONG&gt; is a critical but often tedious task. Manual documentation is time-consuming, error-prone, and difficult to maintain—especially in dynamic environments where iFlows evolve frequently.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;To address this, an automated documentation generator was developed, that utilizes the OData APIs from SAP Integration Suite in combination with Gemini AI. This solution dynamically extracts iFlow metadata and resources, processes them into a structured format, and sends them to Gemini AI to generate a comprehensive technical specification document. The result is a scalable, secure, and intelligent system that can document any iFlow in a subaccount on-demand or on a schedule.&lt;/P&gt;&lt;H2 id="toc-hId-1538556461"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":building_construction:"&gt;🏗&lt;/span&gt;️ Architectural Overview&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The architecture orchestrates several components of the SAP Integration Suite and Gemini AI to automate the documentation process. Below is a visual representation of the architecture:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_0-1752743318104.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287775iB0732AD96CF5304B/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_0-1752743318104.png" alt="AndrewFawzy_0-1752743318104.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1471125675"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":repeat_button:"&gt;🔁&lt;/span&gt;CPI Integration Flow (iFlow)&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;At the heart of the solution is a &lt;STRONG&gt;CPI Integration Flow&lt;/STRONG&gt; that orchestrates the entire automation. This iFlow can be triggered:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Periodically&lt;/STRONG&gt; (e.g., every Week)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;On-demand&lt;/STRONG&gt; (via manual or external trigger)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The iFlow performs the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Retrieves iFlow metadata and resources&lt;/LI&gt;&lt;LI&gt;Prepares and formats the data&lt;/LI&gt;&lt;LI&gt;Sends it to Gemini AI&lt;/LI&gt;&lt;LI&gt;Stores the generated documentation in a Datastore&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1274612170"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;Accessing SAP Integration Suite OData APIs&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;The iFlow uses &lt;STRONG&gt;OData APIs&lt;/STRONG&gt; exposed by the SAP Integration Suite to access:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;iFlow Metadata&lt;/STRONG&gt; (design-time artifacts)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Resources&lt;/STRONG&gt; such as:&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Groovy scripts&lt;/LI&gt;&lt;LI&gt;XSLT mappings&lt;/LI&gt;&lt;LI&gt;EDMX schemas&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;You could try out those endpoints here: &lt;/STRONG&gt;&lt;A href="https://api.sap.com/api/IntegrationContent/tryout" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Business Accelerator Hub&lt;/STRONG&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1207181384"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":locked_with_key:"&gt;🔐&lt;/span&gt;Authentication&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;The iFlow uses &lt;STRONG&gt;OAuth2 client credentials&lt;/STRONG&gt; to authenticate against the &lt;STRONG&gt;SAP BTP XSUAA service&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;A &lt;STRONG&gt;Process Integration Runtime (PIR)&lt;/STRONG&gt; service instance is bound to the subaccount.&lt;/LI&gt;&lt;LI&gt;Oauth Client Credential is created in the Security Materials.&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1010667879"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;SAP CPI Odata Interfaces&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;iFlow Metadata&lt;/STRONG&gt;: {{CPI_Tenant_URL}}/IntegrationDesigntimeArtifacts(Id='{Id}',Version='{Version}')/$value&lt;UL&gt;&lt;LI&gt;Returns a Zip folder containing the flow's configuration file, ".iflw" file.&lt;/LI&gt;&lt;LI&gt;The retrieved data includes:&amp;nbsp;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Flow Steps&lt;/STRONG&gt;: Activities like Router, Content Modifier, Join, Splitter, Gather, etc.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Sequence Flows&lt;/STRONG&gt;: Logical connections between steps&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Metadata&lt;/STRONG&gt;: Flow name, version, and other properties&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Resource List&lt;/STRONG&gt;: {{CPI_Tenant_URL}}/IntegrationDesigntimeArtifacts(Id='{Id}',Version='{Version}')/Resources&lt;UL&gt;&lt;LI&gt;This endpoint returns a list including all resources utilized within the IFlow&lt;/LI&gt;&lt;LI&gt;The retrieved data includes resources such as Groovy scripts, XSLT mappings, EDMX files.&lt;/LI&gt;&lt;LI&gt;Sample Request:&amp;nbsp;&amp;nbsp;&lt;A href="https://sandbox.api.sap.com/cpi/api/v1/IntegrationDesigntimeArtifacts(Id=IntegrationFlowWithConfiguration,Version=active)/Resources" target="_blank" rel="noopener noreferrer"&gt;https://sandbox.api.sap.com/cpi/api/v1/IntegrationDesigntimeArtifacts(Id=IntegrationFlowWithConfiguration,Version=active)/Resources&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;Sample Response:&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt; &amp;lt;?xml version='1.0' encoding='utf-8'?&amp;gt;
&amp;lt;feed xmlns="http://www.w3.org/2005/Atom" xmlns:m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata" xmlns:d="http://schemas.microsoft.com/ado/2007/08/dataservices" xml:base="https://sandbox.api.sap.com:9006/cpi/api/v1/"&amp;gt;
    &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources&amp;lt;/id&amp;gt;
    &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
    &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
    &amp;lt;author&amp;gt;
        &amp;lt;name/&amp;gt;
    &amp;lt;/author&amp;gt;
    &amp;lt;link href="Resources" rel="self" title="Resources"/&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='eDocPeruInvoiceTransmissionSimplified.wsdl',ResourceType='wsdl')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='eDocPeruInvoiceTransmissionSimplified.wsdl',ResourceType='wsdl')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='eDocPeruInvoiceTransmissionSimplified.wsdl',ResourceType='wsdl')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='eDocPeruInvoiceTransmissionSimplified.wsdl',ResourceType='wsdl')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;eDocPeruInvoiceTransmissionSimplified.wsdl&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;wsdl&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType&amp;gt;wsdl&amp;lt;/d:ReferencedResourceType&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;3307&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='billServiceFlat.wsdl',ResourceType='wsdl')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='billServiceFlat.wsdl',ResourceType='wsdl')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='billServiceFlat.wsdl',ResourceType='wsdl')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='billServiceFlat.wsdl',ResourceType='wsdl')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;billServiceFlat.wsdl&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;wsdl&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType&amp;gt;wsdl&amp;lt;/d:ReferencedResourceType&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;4992&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='PipelineNominationModify.xsd',ResourceType='xsd')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='PipelineNominationModify.xsd',ResourceType='xsd')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='PipelineNominationModify.xsd',ResourceType='xsd')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='PipelineNominationModify.xsd',ResourceType='xsd')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;PipelineNominationModify.xsd&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;xsd&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType&amp;gt;wsdl&amp;lt;/d:ReferencedResourceType&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;4235&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='AddExtensionContent.xsl',ResourceType='xslt')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='AddExtensionContent.xsl',ResourceType='xslt')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='AddExtensionContent.xsl',ResourceType='xslt')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='AddExtensionContent.xsl',ResourceType='xslt')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;AddExtensionContent.xsl&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;xslt&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;1850&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='AddSignatureInfo.xsl',ResourceType='xslt')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='AddSignatureInfo.xsl',ResourceType='xslt')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='AddSignatureInfo.xsl',ResourceType='xslt')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='AddSignatureInfo.xsl',ResourceType='xslt')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;AddSignatureInfo.xsl&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;xslt&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;2006&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='ApplicationResponseAccepted.xml',ResourceType='edmx')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='ApplicationResponseAccepted.xml',ResourceType='edmx')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='ApplicationResponseAccepted.xml',ResourceType='edmx')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='ApplicationResponseAccepted.xml',ResourceType='edmx')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;ApplicationResponseAccepted.xml&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;edmx&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;4428&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='Boleta.xml',ResourceType='edmx')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='Boleta.xml',ResourceType='edmx')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='Boleta.xml',ResourceType='edmx')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='Boleta.xml',ResourceType='edmx')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;Boleta.xml&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;edmx&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;11088&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='ApplicationResponseRejected.xml',ResourceType='edmx')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='ApplicationResponseRejected.xml',ResourceType='edmx')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='ApplicationResponseRejected.xml',ResourceType='edmx')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='ApplicationResponseRejected.xml',ResourceType='edmx')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;ApplicationResponseRejected.xml&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;edmx&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;4350&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='Invoice.xml',ResourceType='edmx')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='Invoice.xml',ResourceType='edmx')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='Invoice.xml',ResourceType='edmx')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='Invoice.xml',ResourceType='edmx')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;Invoice.xml&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;edmx&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;13667&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='unzip.gsh',ResourceType='groovy')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='unzip.gsh',ResourceType='groovy')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='unzip.gsh',ResourceType='groovy')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='unzip.gsh',ResourceType='groovy')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;unzip.gsh&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;groovy&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;825&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
&amp;lt;/feed&amp;gt;​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Individual Resource Content&lt;/STRONG&gt;: /IntegrationDesigntimeArtifacts(Id='{Id}',Version='active')/Resources(Name='{Name}',ResourceType='{Type}')/$value&lt;UL&gt;&lt;LI&gt;This endpoint returns the value of the resource specified in the URL.&lt;/LI&gt;&lt;LI&gt;Sample Request:&amp;nbsp;&lt;A href="https://sandbox.api.sap.com/cpi/api/v1/IntegrationDesigntimeArtifacts(Id=IntegrationFlowWithConfiguration,Version=active)/Resources(Name=unzip.gsh,ResourceType=groovy)/$value" target="_blank" rel="noopener noreferrer"&gt;https://sandbox.api.sap.com/cpi/api/v1/IntegrationDesigntimeArtifacts(Id=IntegrationFlowWithConfiguration,Version=active)/Resources(Name=unzip.gsh,ResourceType=groovy)/$value"&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Sample Response:&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message;
import java.util.HashMap;
import java.util.zip.ZipEntry;

def Message processData(Message message) {
	
	def body = message.getBody(InputStream.class);
	def zipStream = new java.util.zip.ZipInputStream(body);
	def stringBuffer = new StringBuffer();

	ZipEntry entry=zipStream.getNextEntry();
    byte[] buf=new byte[1024];
    while (entry != null) {
      if (entry.getName().endsWith(".xml")) {
        ByteArrayOutputStream out=new ByteArrayOutputStream();
        int n;
        while ((n=zipStream.read(buf,0,1024)) &amp;gt; -1) {
          out.write(buf,0,n);
        }
       	message.setBody(new String(out.toByteArray()));
      	break;
      }
      zipStream.closeEntry();
      entry=zipStream.getNextEntry();
    }

	return message;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;🧹 Pre-processing for Gemini AI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Before sending the data to Gemini AI, the iFlow performs several pre-processing steps:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;🧩 Structuring the Input&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The metadata and resources are wrapped in XML under &amp;lt;Resources&amp;gt; and &amp;lt;FlowSteps&amp;gt; tags.&lt;/LI&gt;&lt;LI&gt;The entire structure is &lt;STRONG&gt;Base64 encoded&lt;/STRONG&gt; to ensure safe transmission.&lt;/LI&gt;&lt;LI&gt;The encoded data is embedded in a &lt;STRONG&gt;JSON payload&lt;/STRONG&gt; with system instructions.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;🧠 Instruction Format&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "system_instruction": {
    "parts": [
      {
        "text": "You are an SAP CPI Developer... create a technical specification document."
      }
    ]
  },
  "contents": [
    {
      "parts": [
        {
          "inline_data": {
            "mime_type": "text/plain",
            "data": "${property.Base64Body}"
          }
        },
        {
          "text": "Here is the configuration... provide a detailed explanation..."
        }
      ]
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":robot_face:"&gt;🤖&lt;/span&gt;Sending to Gemini AI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The structured payload is sent to &lt;STRONG&gt;Gemini AI&lt;/STRONG&gt; using its REST API:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;API Call&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Endpoint&lt;/STRONG&gt;: &lt;A href="https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent" target="_blank" rel="noopener nofollow noreferrer"&gt;https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Method&lt;/STRONG&gt;: POST&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authorization:&amp;nbsp;x-goog-api-key added to request's headers&amp;nbsp;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Headers&lt;/STRONG&gt;:&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Content-Type: application/json&lt;/LI&gt;&lt;LI&gt;x-goog-api-key: {{Gemini_API_Key}}&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;For more information regarding Gemini APIs check &lt;A href="https://ai.google.dev/gemini-api/docs" target="_blank" rel="noopener nofollow noreferrer"&gt;Gemini Api Documentation.&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Sample Request Body:&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "contents": [
      {
        "parts": [
          {
            "text": "How does AI work?"
          }
        ]
      }
    ]
  }&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Sample Response:&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "AI, or Artificial Intelligence, is a broad field of computer science that aims to create machines that can perform tasks that typically require human intelligence. This includes things like learning, problem-solving, decision-making, understanding language, recognizing patterns, and even creativity.\n\nWhile \"AI\" can encompass many approaches, the dominant paradigm today is **Machine Learning (ML)**, and more specifically, **Deep Learning (DL)**. Here's a simplified breakdown of how it generally works:\n\n### The Core Ingredients of AI (especially Machine Learning)\n\n1.  **Data:** This is the \"fuel\" for AI. AI systems learn from vast amounts of data, much like humans learn from experience. This data can be anything:\n    *   **Labeled Data:** Images with descriptions (\"cat,\" \"dog\"), text with sentiment (\"positive,\" \"negative\"), or numerical tables with outcomes. This is used for **supervised learning**.\n    *   **Unlabeled Data:** Just raw images, text, or numbers without specific tags. This is used for **unsupervised learning** (finding patterns) or **reinforcement learning** (trial and error).\n\n2.  **Algorithms:** These are the \"recipes\" or \"instructions\" that the AI uses to learn from the data and make decisions. They are mathematical models and computational procedures. Examples include:\n    *   **Neural Networks:** Inspired by the human brain, these are layers of interconnected \"neurons\" that process information. Deep Learning uses *many* layers.\n    *   **Decision Trees:** Flowchart-like structures for making decisions.\n    *   **Regression Models:** Used for predicting continuous values (e.g., house prices).\n    *   **Clustering Algorithms:** Grouping similar data points together.\n\n3.  **Computing Power:** Training complex AI models, especially deep learning ones, requires immense computational resources.\n    *   **GPUs (Graphics Processing Units):** These are particularly good at parallel processing, making them ideal for the heavy mathematical computations involved in training neural networks.\n    *   **Cloud Computing:** Services like AWS, Google Cloud, and Azure provide scalable computing power for AI development.\n\n### How AI Learns (The Process)\n\nLet's use a common example: training an AI to recognize cats in photos.\n\n1.  **Data Collection &amp;amp; Preparation:**\n    *   You gather thousands, even millions, of images.\n    *   For supervised learning, you label each image: \"This is a cat,\" \"This is a dog,\" \"This is a car.\" This creates the dataset.\n\n2.  **Model Training (The Learning Phase):**\n    *   You feed this labeled dataset into a chosen algorithm (e.g., a deep neural network).\n    *   The algorithm starts by making random \"guesses\" about what constitutes a cat.\n    *   It then compares its guesses to the actual labels. If it misidentifies a cat as a dog, it incurs an \"error\" or \"loss.\"\n    *   Through a process called **backpropagation** (in neural networks), the algorithm adjusts its internal parameters (like the \"weights\" and \"biases\" of the connections between neurons) slightly to reduce that error.\n    *   This process is repeated thousands or millions of times, with the algorithm continuously refining its internal understanding of what patterns correlate to \"cat-ness.\"\n    *   Essentially, it learns to identify specific features (e.g., pointed ears, whiskers, specific fur patterns) and combine them to accurately classify an image as a \"cat.\"\n\n3.  **Model Evaluation:**\n    *   After training, the model is tested on a *separate* set of data it has never seen before (the \"test set\"). This ensures it has truly learned and isn't just memorizing the training data.\n    *   Its performance is measured by metrics like accuracy, precision, and recall.\n\n4.  **Inference (Prediction/Deployment):**\n    *   Once the model is trained and evaluated, it's ready for use.\n    *   When you feed a *new, unseen* image to the trained AI model, it applies the patterns it learned during training to predict whether the image contains a cat, dog, or something else. This prediction is usually very fast.\n\n### Key Branches and Concepts in AI\n\n*   **Machine Learning (ML):** The core idea is that computers learn from data without being explicitly programmed for every possible scenario.\n    *   **Supervised Learning:** Learning from labeled examples (e.g., predicting house prices based on features and past sales data).\n    *   **Unsupervised Learning:** Finding hidden patterns or structures in unlabeled data (e.g., segmenting customers into groups based on their purchasing behavior).\n    *   **Reinforcement Learning:** An agent learns by interacting with an environment, receiving rewards for good actions and penalties for bad ones (e.g., training an AI to play chess or control a robot).\n\n*   **Deep Learning (DL):** A *subset* of Machine Learning that uses Artificial Neural Networks with many layers (\"deep\" networks). This has been particularly successful in tasks like image recognition, natural language processing, and speech recognition due to its ability to learn complex patterns directly from raw data.\n\n*   **Natural Language Processing (NLP):** Enables computers to understand, interpret, generate, and manipulate human language (e.g., chatbots, translation services, spam filters).\n\n*   **Computer Vision (CV):** Allows computers to \"see\" and interpret visual information from images and videos (e.g., facial recognition, self-driving cars, medical image analysis).\n\n*   **Robotics:** Involves the design, construction, operation, and use of robots. AI often powers the \"brain\" of robots, enabling them to perceive their environment, navigate, and make decisions.\n\n### In Summary:\n\nAI, especially through Machine Learning and Deep Learning, works by providing algorithms with massive amounts of data. These algorithms then learn complex patterns and relationships within that data. Once trained, they can apply this learned \"knowledge\" to new, unseen data to make predictions, classify information, generate content, or make decisions, effectively mimicking aspects of human intelligence."
          }
        ],
        "role": "model"
      },
      "finishReason": "STOP",
      "index": 0
    }
  ],
  "usageMetadata": {
    "promptTokenCount": 5,
    "candidatesTokenCount": 1294,
    "totalTokenCount": 2777,
    "promptTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 5
      }
    ],
    "thoughtsTokenCount": 1478
  },
  "modelVersion": "gemini-2.5-flash",
  "responseId": "w1234"
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":inbox_tray:"&gt;📥&lt;/span&gt;Handling the Response&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The response contains a &lt;STRONG&gt;text block&lt;/STRONG&gt; with the generated documentation.&lt;/LI&gt;&lt;LI&gt;The iFlow uses &lt;STRONG&gt;XPath&lt;/STRONG&gt; and &lt;STRONG&gt;Content Modifier&lt;/STRONG&gt; steps to extract the relevant content.&lt;/LI&gt;&lt;LI&gt;The final output is stored for future access.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":floppy_disk:"&gt;💾&lt;/span&gt;Output Storage&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The AI-generated documentation is stored in a &lt;STRONG&gt;data store&lt;/STRONG&gt;, which can be:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;CPI’s internal datastore&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;External database&lt;/STRONG&gt; (e.g., SAP HANA, PostgreSQL)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This allows teams to retrieve and review documentation at any time.&lt;/P&gt;&lt;H2 id="toc-hId-555988936"&gt;&lt;STRONG&gt;Step-by-Step guide on how to Implement&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;STRONG&gt;N.B: Please Externalize all Parameters, URLs, and Keys when possible to avoid exposing them to AI model.&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;The Integration flow is divided into 4 processes:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-14 130552.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287231i357C30DBC6651B85/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-14 130552.png" alt="Screenshot 2025-07-14 130552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-488558150"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-292044645"&gt;1. Main Integration Process:&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_3-1752658031249.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287187i4FBB14A042CCBD2E/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_3-1752658031249.png" alt="AndrewFawzy_3-1752658031249.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Steps:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;1. Timer Start:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The flow runs once deployed&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndrewFawzy_4-1752658031250.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287186iE1DACAA15E3AFF47/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_4-1752658031250.png" alt="AndrewFawzy_4-1752658031250.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;2. Set Parameters:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Both Flow name &lt;FONT color="#FF0000"&gt;represented by its ID&lt;/FONT&gt; and flow version of the flow that we want to create a TSD for are specified, additionally ExceptionLogging property is set to yes if we want to log error details.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_5-1752658031259.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287188iCB2D99329E744FCD/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_5-1752658031259.png" alt="AndrewFawzy_5-1752658031259.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="25%"&gt;Property Name&lt;/TD&gt;&lt;TD width="25%"&gt;Source Type&lt;/TD&gt;&lt;TD width="25%"&gt;Value&lt;/TD&gt;&lt;TD width="25%"&gt;Description&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;FlowName&lt;/TD&gt;&lt;TD width="25%"&gt;Constant&lt;/TD&gt;&lt;TD width="25%"&gt;{{Flow_ID}}&lt;/TD&gt;&lt;TD width="25%"&gt;Specify Flow ID&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;FlowVersion&lt;/TD&gt;&lt;TD width="25%"&gt;Constant&lt;/TD&gt;&lt;TD width="25%"&gt;{{Flow_Version}}&lt;/TD&gt;&lt;TD width="25%"&gt;Specify Flow Version&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;ExceptionLogging&lt;/TD&gt;&lt;TD width="25%"&gt;Constant&lt;/TD&gt;&lt;TD width="25%"&gt;{{logException}}&lt;/TD&gt;&lt;TD width="25%"&gt;use Yes if you want to log exceptions&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;3. Parallel multicast:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A parallel multicast is used to execute the local integration processes "Get Flow Resources" and "Get Flow Steps" at the same time.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_6-1752658031262.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287189i08A41E1C6E205717/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_6-1752658031262.png" alt="AndrewFawzy_6-1752658031262.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;4. Process Calls and Gather&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Each of the parallel branches includes a Process Call component to Call the local Integration Processes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_7-1752658031267.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287191i2820B964135D8694/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_7-1752658031267.png" alt="AndrewFawzy_7-1752658031267.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_8-1752658031274.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287190i5ACE37CADD382BAD/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_8-1752658031274.png" alt="AndrewFawzy_8-1752658031274.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;5. Join and Gather&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A join component is used to bring the messages from different routes into a single one, and the gather aggregates the different payloads into a single payload.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_9-1752658031280.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287192iBE8282596EC1B585/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_9-1752658031280.png" alt="AndrewFawzy_9-1752658031280.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;6. Gemini AI process Call:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The returned response from the previous Process Calls is sent to the Gemini AI Process call for further processing and sending to Gemini AI.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_10-1752658031285.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287193i53E96F9204F06A18/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_10-1752658031285.png" alt="AndrewFawzy_10-1752658031285.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;7. Save response:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A Datastore is used to saves the response returned by the Gemini Process Call, it sets the ID of the message to the name of the IFlow.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_11-1752658031293.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287194i49F29CEFD1539432/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_11-1752658031293.png" alt="AndrewFawzy_11-1752658031293.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;8. Exception Handling:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;An exception subprocess is added to all Local Integration processes to handle exceptions.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_12-1752658031294.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287195i7D205EDF4C5E57A3/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_12-1752658031294.png" alt="AndrewFawzy_12-1752658031294.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Code:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message;
def Message processData(Message message) {
  // get a map of properties
  def map = message.getProperties();
  def body = message.getBody(java.lang.String) as String;
  // get an exception java class instance
  def ex = map.get("CamelExceptionCaught");
  def exceptionLogging = map.get("ExceptionLogging");
  if (exceptionLogging != null &amp;amp;&amp;amp; exceptionLogging == "Yes" &amp;amp;&amp;amp; ex != null) {
    def messageLog = messageLogFactory.getMessageLog(message);
    messageLog.addAttachmentAsString("Exception Body ", body, "text/plain");
    // an http adapter throws an instance of
    // org.apache.camel.component.ahc.AhcOperationFailedException
    if (ex.getClass().getCanonicalName().equals(
            "org.apache.camel.component.ahc.AhcOperationFailedException")) {
      // save the http error response as a message attachment
      messageLog.addAttachmentAsString(
          "http.ResponseBody", ex.getResponseBody(), "text/plain");
      // copy the http error response to an exchange property
      message.setProperty("http.ResponseBody", ex.getResponseBody());
      // copy the http error response to the message body
      message.setBody(ex.getResponseBody());
      // copy the value of http error code (i.e. 500) to a property
      message.setProperty("http.StatusCode", ex.getStatusCode());
      // copy the value of http error text (i.e. "Internal Server Error") to a
      // property
      message.setProperty("http.StatusText", ex.getStatusText());
    }
  }
  return message;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-95531140"&gt;2. Get Flow Steps&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_13-1752658031297.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287196iD36B21CB0E99AE90/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_13-1752658031297.png" alt="AndrewFawzy_13-1752658031297.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;1. Get Flow Configuration File:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Method:&amp;nbsp; &lt;/STRONG&gt;GET&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Address:&amp;nbsp;&lt;/STRONG&gt;{{CPI_Tenant_URL}}/IntegrationDesigntimeArtifacts(Id='${property.FlowName}',Version='${property.FlowVersion}')/$value&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt; Client Secret Credential&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For creating the Oauth 2.0 client secret credential please follow this &lt;A href="https://www.abusinesstech.com/post/understanding-oauth2-client-credentials-in-sap-cpi" target="_blank" rel="noopener nofollow noreferrer"&gt;Post&lt;/A&gt;.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_14-1752658031303.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287197i1C1B402E73F37CE4/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_14-1752658031303.png" alt="AndrewFawzy_14-1752658031303.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;2. Zip Splitter:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Zip splitter is used to iterate on the files within the zip file returned by the previous step and selects only the Flow Configuration File based on the file name pattern “.iflw”&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_15-1752658031308.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287198i2B92D0ED0FC6CFDD/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_15-1752658031308.png" alt="AndrewFawzy_15-1752658031308.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;3. Remove Namespace XSLT&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;This step is used to remove unwanted namespaces from the IFlow's configuration file using xslt mapping file&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_16-1752658031314.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287200i7AAB520CC8C36111/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_16-1752658031314.png" alt="AndrewFawzy_16-1752658031314.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Code:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&amp;gt;&amp;lt;xsl:output method="xml" version="1.0" encoding="UTF-8" /&amp;gt;

        &amp;lt;xsl:template match="*"&amp;gt;

                &amp;lt;xsl:element name="{local-name()}" &amp;gt;

                        &amp;lt;xsl:apply-templates select="@* | node()"/&amp;gt;

                &amp;lt;/xsl:element&amp;gt;

        &amp;lt;/xsl:template&amp;gt;

&amp;lt;/xsl:stylesheet&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;4. XML Modifier&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Remove xml declaration and external DTDs&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_17-1752658031318.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287199i20F540AA7DE77221/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_17-1752658031318.png" alt="AndrewFawzy_17-1752658031318.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;5. Zip Splitter Gather:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A gather is used to aggregate the payloads from the zip splitter into a single payload.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_18-1752658031321.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287201i7B7AC3B53B6D07A4/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_18-1752658031321.png" alt="AndrewFawzy_18-1752658031321.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--176213734"&gt;3. Get Flow Resources&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_19-1752658031324.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287202i8CF46D06728768CB/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_19-1752658031324.png" alt="AndrewFawzy_19-1752658031324.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;1.Get Resources List:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Method:&amp;nbsp; &lt;/STRONG&gt;GET&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Address:&amp;nbsp;&lt;/STRONG&gt;{{CPI_Tenant_URL}}/IntegrationDesigntimeArtifacts(Id='${property.FlowName}',Version='${property.FlowVersion}')/Resources&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt; Client Secret Credential&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For creating the Oauth 2.0 client secret credential please follow this &lt;A href="https://www.abusinesstech.com/post/understanding-oauth2-client-credentials-in-sap-cpi" target="_blank" rel="noopener nofollow noreferrer"&gt;Post&lt;/A&gt;.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_20-1752658031333.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287203i84CB38555C7DDB7A/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_20-1752658031333.png" alt="AndrewFawzy_20-1752658031333.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;2. Remove Namespaces&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;This step is used to remove unwanted namespaces from the IFlow's configuration file using xslt mapping file&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_21-1752658031337.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287204iCEBBFBF255098C87/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_21-1752658031337.png" alt="AndrewFawzy_21-1752658031337.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;XSLT :&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&amp;gt;&amp;lt;xsl:output method="xml" version="1.0" encoding="UTF-8" /&amp;gt;

        &amp;lt;xsl:template match="*"&amp;gt;

                &amp;lt;xsl:element name="{local-name()}" &amp;gt;

                        &amp;lt;xsl:apply-templates select="@* | node()"/&amp;gt;

                &amp;lt;/xsl:element&amp;gt;

        &amp;lt;/xsl:template&amp;gt;

&amp;lt;/xsl:stylesheet&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;3. Iterate over Returned Resource List&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;General splitter is used to iterate over resources using xpath '//entry' as each resource is enclosed with "entry" XML tag as shown in the sample request mentioned in the "Endpoints Section".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_22-1752658031342.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287205iE1992D7C51232DC0/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_22-1752658031342.png" alt="AndrewFawzy_22-1752658031342.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;4. Extract Resource name and&amp;nbsp; Resource type&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Those values are extracted to be used in retrieving the resource in subsequent step using Xpaths.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_23-1752658031348.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287206i96D937DDF4D3301B/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_23-1752658031348.png" alt="AndrewFawzy_23-1752658031348.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Exchange Properties:&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Name&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Source Value&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Data Type&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Name&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;//Name&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;java.lang.String&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;ResourceType&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;//ResourceType&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;java.lang.String&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Url&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;//entryId&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;java.lang.String&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;5. Get single resource value&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Method:&amp;nbsp; &lt;/STRONG&gt;GET&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Address:&amp;nbsp;&lt;/STRONG&gt;{{CPI_Tenant_URL}}/IntegrationDesigntimeArtifacts(Id='${property.FlowName}',Version='${property.FlowVersion}')/Resources(Name='${property.Name}',ResourceType='${property.ResourceType}')/$value&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt; Client Secret Credential&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For creating the Oauth 2.0 client secret credential please follow this &lt;A href="https://www.abusinesstech.com/post/understanding-oauth2-client-credentials-in-sap-cpi" target="_blank" rel="noopener nofollow noreferrer"&gt;Post&lt;/A&gt;.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_24-1752658031356.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287208i7FE1CA60DF35C987/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_24-1752658031356.png" alt="AndrewFawzy_24-1752658031356.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;6. Set Resource body by enclosing the resource value by its name&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_25-1752658031363.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287207i4DDF6E142EE11C6F/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_25-1752658031363.png" alt="AndrewFawzy_25-1752658031363.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;${property.Name}&amp;gt;
    ${in.body}
&amp;lt;/${property.Name}&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;7. Gather Resources:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A gather step is used to aggregate all retrieved resources into a single payload.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_26-1752658031369.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287209iFDF961ED8C258226/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_26-1752658031369.png" alt="AndrewFawzy_26-1752658031369.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;8. Content Modifier:&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A content modifier is used to add XML tags for Gemini to identify the resources.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_27-1752658031377.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287210iD9D9B8AE86771B32/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_27-1752658031377.png" alt="AndrewFawzy_27-1752658031377.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Sample:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Resources&amp;gt;
    ${in.body}
&amp;lt;/Resources&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--372727239"&gt;&amp;nbsp;4. Gemini AI utilization&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_28-1752658031382.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287211i0336D1ACBF34E113/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_28-1752658031382.png" alt="AndrewFawzy_28-1752658031382.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;1. Base-64 Encoding Step:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The XML message constructed at the previous step is encoded using 64-Base to be sent to the AI model as plain text.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_29-1752658031389.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287212i32862DA1C62E50E0/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_29-1752658031389.png" alt="AndrewFawzy_29-1752658031389.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;2. Formatting Body&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Remove unwanted characters Remove new lines, and carriage return&lt;/P&gt;&lt;P&gt;Code:&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message;
 def Message processData(Message message) {
     def body = message.getBody(String);
     String backspace = '\n' as char;
     String enter = '\r' as char;
     body = body.replace(backspace, "");
     body = body.trim();
     body = body.replace(enter, "");
     body = body.trim();
     message.setBody(body);
    return message;
 }&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;3. Add headers and Create body&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Creates the JSON structure payload that is send to the Gemini AI API to generate the documentation and adds a Message Header "Content-Type" with value "application/json".&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;For more information regarding Gemini APIs check &lt;A href="https://ai.google.dev/gemini-api/docs" target="_blank" rel="noopener nofollow noreferrer"&gt;Gemini Api Documentation.&lt;/A&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_32-1752658031419.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287215i69A1A98D8EF323AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_32-1752658031419.png" alt="AndrewFawzy_32-1752658031419.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Body set to &lt;STRONG&gt;Expression&lt;/STRONG&gt;:&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "system_instruction": {
      "parts": [
        {
          "text": "You are an SAP CPI Developer, your main role is to get SAP CPI Iflows configuration and form them create a technical specification document."
        }
      ]
    },
    "contents": [
      {
        "parts": [
          {"inline_data": {"mime_type": "text/plain", "data": "${property.Base64Body}" } },
          {"text": "Here is the configurations create a Tsd providing a detailed explanation on what this iflow does and steps involved and documentation of scripts and mappings, you will find in the text the following an xml tag definition this includes the flow steps and another tag Resources which includes all scripts, mappings used are attached"}
        ]
      }
    ]
  }&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;4. POST&amp;nbsp; request to Gemini API&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Method:&amp;nbsp; &lt;/STRONG&gt;POST&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Address:&amp;nbsp;&lt;SPAN&gt;&lt;A class="" title="https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generatecontent" href="https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent" target="_blank" rel="noreferrer noopener nofollow"&gt;https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent&lt;/A&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt;&amp;nbsp;added as a request header "x-goog-api-key"&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Headers:&amp;nbsp;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Content-Type: &lt;/STRONG&gt;application/json&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;x-goog-api-key:&amp;nbsp;&lt;/STRONG&gt;{{Gemini_API_Key}}&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For creating your api key follow this &lt;A href="https://ai.google.dev/gemini-api/docs/api-key#rest" target="_blank" rel="noopener nofollow noreferrer"&gt;Gemini API Key.&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_0-1752742358554.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287757iD277BA304E767DAB/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_0-1752742358554.png" alt="AndrewFawzy_0-1752742358554.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;5. JSON to XML Converter&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;This step is used to convert the JSON body to XML to be able to extract response using Xpath.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_34-1752658031435.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287217i94B5BA86159EB427/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_34-1752658031435.png" alt="AndrewFawzy_34-1752658031435.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;6. Extract documentation from Payload:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Xpath is used to extract the response from the payload and stored in an Exchange Property "response" and within the same content modifier the body is set to ${property.response}&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_35-1752658031448.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287218i7AD708E7728D22BA/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_35-1752658031448.png" alt="AndrewFawzy_35-1752658031448.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_36-1752658031455.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287219iFE52EE4FD6916893/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_36-1752658031455.png" alt="AndrewFawzy_36-1752658031455.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--569240744"&gt;Deployment and Document Generation&lt;/H3&gt;&lt;P&gt;The Flow was deployed setting the Parameters to flow name and version of this IFlow.&lt;/P&gt;&lt;P&gt;Here was the response saved to the DataStore:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;Technical Specification Document: CPI Iflow - Gemini AI Integration for Technical Documentation
1. Introduction

This document outlines the technical specifications for a CPI (Cloud Platform Integration) iflow designed to automatically generate technical specification documents (TSD) from CPI iflow configurations. This iflow leverages the Gemini AI model for natural language processing and document generation.

2. Iflow Overview

The iflow automates the process of extracting iflow configuration and resources, sending them to the Gemini AI model, and receiving a generated TSD as output. The process comprises the following steps:

Triggering: A timer-based start event initiates the process at regular intervals.
Configuration Retrieval: Configuration details of the Iflow including FlowSteps and Resources like scripts and mappings are retrieved.
Data Transformation: The configurations are extracted and unwanted namespace are removed.
AI Processing: The configuration data is sent to Gemini AI model to generate the TSD based on the configurations
TSD Storage: The generated TSD is stored in a datastore.
3. Flow Steps

The iflow is structured into several interconnected integration processes and flow steps.

3.1 Main Integration Process (Process_1Integration Process)

StartEvent_4 (Start Timer):
Type: Timer Start Event
Description: Initiates the iflow execution based on a defined schedule.
Schedule: The process is scheduled to run every 5 minutes
CallActivity_30439543 (Set Parameters):
Type: Content Enricher
Description: Sets the properties ExceptionLogging, FlowVersion, and FlowName for the iflow. These properties are used in the subsequent steps for retrieving the iflow configuration and resources.
Properties:
ExceptionLogging: Set to {{ExceptionLogging}} (presumably a value defined in an externalized parameter). It controls the exception handling of Iflow.
FlowVersion: Set to {{FlowVersion}} (presumably a value defined in an externalized parameter). The version of the Iflow to retrieve.
FlowName: Set to {{FlowName}} (presumably a value defined in an externalized parameter). The name of the Iflow to retrieve.
ParallelGateway_30439597 (Parallel Multicast):
Type: Parallel Multicast
Description: Splits the process into two parallel branches to retrieve flow steps and flow resources concurrently.
Branch 1: Get Flow Steps
CallActivity_30439599 (Get Flow Steps):
Type: Process Call (Non-Looping Process)
Description: Calls the Process_30439551 local integration process to retrieve the flow steps configuration.
Branch 2: Get Flow Resources
CallActivity_30439601 (Get Flow Resources):
Type: Process Call (Non-Looping Process)
Description: Calls the Process_30439570 local integration process to retrieve the iflow's resources (scripts, mappings).
ParallelGateway_30439539 (Join):
Type: Join
Description: Waits for both parallel branches (Get Flow Steps and Get Flow Resources) to complete before merging the results.
CallActivity_30439533 (Gather flow and resources):
Type: Gather
Description: Combines the results from the two parallel branches (flow steps configuration and resources).
CallActivity_30439650 (Gemini AI):
Type: Process Call (Non-Looping Process)
Description: calls Process_30439625 Gemini AI processing to create the TSD based on the gathered Iflow definitions and Iflow Resource configurations
CallActivity_30439545 (Save Response to DataStore):
Type: Data Store Operations (Put)
Description: Saves the Gemini AI processing output (TSD) to a datastore named IflowDocumentation.
Configuration:
StorageName: IflowDocumentation
messageId: ${property.FlowName}Doc (Unique identifier for the datastore entry)
expire: 30 (Retention period in days)
visibility: local(available only to the current iflow)
EndEvent_2 (End):
Type: Message End Event
Description: Ends the iflow execution.
3.2 Get Flow Steps (Process_30439551)

StartEvent_30439552 (Start):
Type: Start Event
Description: The process is triggered from Main Integration process by calling the Process ID
ServiceTask_30439555 (GetFlow):
Type: External Call (HTTP)
Description: Retrieves Iflow Definitions, version, and ID from CPI OData API (IntegrationDesigntimeArtifacts).
Address: {{CPI_Tenant_URL}}IntegrationDesigntimeArtifacts(Id='${property.FlowName}',Version='${property.FlowVersion}')/$value
Authentication: Client Secret Authentication using {{CPI_OAuth_Cred}} credential.
CallActivity_30439556 (Zip Splitter):
Type: Splitter (Zip Splitter)
Description: Splits the retrieved .iflw file content into individual entries, assuming the content comes as a zipped file.
CallActivity_30439557 (Remove Namespaces):
Type: Mapping
Description: Removes unnecessary XML namespaces from the XML structure using XSLTMapping1.xsl.
CallActivity_30439558 (XML Modifier):
Type: XML Modifier
Description: Further modifies the XML by removing external DTDs and XML declarations to clean the XML structure.
CallActivity_30439560 (Zip Splitter Gather):
Type: Gather
Description: Concatenates the split files into a single message body.
EndEvent_30439553 (End):
Type: End Event
Description: Completes the local integration process
3.3 Get Flow Resources (Process_30439570)

StartEvent_30439571 (Start):
Type: Start Event
Description: The process is triggered from Main Integration process by calling the Process ID
ServiceTask_30439574 (Get Resources):
Type: External Call (HTTP)
Description: Retrieves a list of Resources for the specified Iflow from CPI OData API.
Address: {{CPI_Tenant_URL}}IntegrationDesigntimeArtifacts(Id='${property.FlowName}',Version='${property.FlowVersion}')/Resources
Authentication: Client Secret Authentication using {{CPI_OAuth_Cred}} credential.
CallActivity_30439575 (Remove Namespaces):
Type: Mapping
Description: Removes unnecessary XML namespaces from the retrieved resource data using XSLTMapping1.xsl.
CallActivity_30439576 (iterate over resources):
Type: Splitter (General Splitter)
Description: Splits the list of resources into individual resource entries to process each separately. It splits the resource from //entry xpath
CallActivity_30439577 (Extract Parameters):
Type: Content Enricher
Description: Extracts parameters such as Name, ResourceType, and URL from each resource entry. The parameters are extracted using xpath. The resources have been splitted from //entry therefore this is used as a xpath
**Properties**:
Name: //Name
ResourceType: //ResourceType
Url: //entry/id
ServiceTask_30439578 (Get Single Resource):
Type: External Call (HTTP)
Description: Retrieves the content of each resource based on extracted URL.
Address: {{CPI_Tenant_URL}}IntegrationDesigntimeArtifacts(Id='${property.FlowName}',Version='${property.FlowVersion}')/Resources(Name='${property.Name}',ResourceType='${property.ResourceType}')/$value
Authentication: Client Secret Authentication using {{CPIOAuthCred}} credential.
CallActivity_30439580 (Set Resource Body):
Type: Content Enricher
Description: Creates body for each extracted resources.
Configuration
wrapContent: "&amp;lt;${property.Name}&amp;gt; ${in.body} &amp;lt;/${property.Name}&amp;gt;"
CallActivity_30439581 (Gather Resources):
Type: Gather
Description: Concatenates all extracted resource content into a single XML structure.
CallActivity_30439582 (Add Resource Tag):
Type: Content Enricher
Description: Wraps the concatenated resource content within &amp;lt;Resources&amp;gt; tags.
Configuration
wrapContent: "&amp;lt;Resources&amp;gt;${in.body}&amp;lt;/Resources&amp;gt;"
EndEvent_30439572 (End):
Type: End Event
Description: Completes the local integration process
3.4 Gemini AI (Process_30439625)

StartEvent_30439626 (Start):
Type: Start Event
Description: The process is triggered from Main Integration process by calling the Process ID
CallActivity_30439629 (Base64 Encoder):
Type: Encoder (Base64 Encode)
Description: Encodes the body, which contains Iflow definitions and Resources, to base64
CallActivity_30439630 (Format Body):
Type: Script
Description: Removes special characters, trims the body and replaces enter and backspace characters
CallActivity_30439631 (Save and Create Body):
Type: Content Enricher
Description: Create HTTP body to be sent to Gemini API
Properties:
content-type: application/json
wrapContent:
{
    "system_instruction": {
      "parts": [
        {
          "text": "You are an SAP CPI Developer, your main role is to get SAP CPI Iflows configuration and form them create a technical specification document."
        }
      ]
    },
    "contents": [
      {
        "parts": [
          {"inline_data": {"mime_type": "text/plain", "data": "${property.Base64Body}" } },
          {"text": "Here are the configurations, create a Tsd providing a detailed explanation of what this iflow does and steps involved and documentation of scripts and mappings, you will find in the document attached the following an xml tag definitions this includes the flow steps and another tag Resources which includes all scripts, mappings used are attached"}
        ]
      }
    ]
  }
ServiceTask_30439632 (Send to Gemini):
Type: External Call (HTTP)
Description: Sends the formatted request to the Gemini AI endpoint.
Address: {{Gemini_API_Endpoint}}
HTTP Method: POST
HTTP Headers: 
Content-Type: application/json
x-goog-api-key: {{Gemini_API_Key}}
CallActivity_30439633 (JSON to XML Converter):
Type: JSON to XML Converter
Description: Converts the JSON response from Gemini AI into an XML structure.
addXMLRootElement: true
additionalRootElementName: root
CallActivity_30439634 (Extract Response):
Type: Content Enricher
Description: Extracts the generated TSD content from the XML response.
Properties
response: //text The response property is extracted using xpath from Gemini API
EndEvent_30439627 (End):
Type: End Event
Description: Completes the local integration process
4. Resources

This section describes the resources used in the iflow, including scripts, mappings, and credentials.

Scripts
script5.groovy:
Description: This script is used to format the XML body before it is passed to Gemini.
It removes special characters, trims the body and replaces enter and backspace characters
script6.groovy:
Description: Exception Handling script to log exception message along with Iflow payload in case of error.
Mappings
XSLTMapping1.xsl:
Description: Removes namespaces from a give xml
Credentials
{{CPIBasicCred}}: Client Secret authentication credential used to access the CPI OData API.
{{Gemini_API_Key}}: The Gemini API key.
5. Parameters

The following externalized parameters are used in the iflow:

{{FlowName}}: Name of the iflow to document.
{{FlowVersion}}: Version of the iflow to document.
{{CPI_Tenant_URL}}: Base URL of the CPI tenant.
{{Gemini_API_Endpoint}}: The Gemini API endpoint.
{{Client_Secret_Auth}}: Authentication method to be used
6. Error Handling

The iflow uses a local exception subprocess (SubProcess_30439605, SubProcess_30439612, SubProcess_30439619, SubProcess_30439642) to catch and handle potential errors:

StartEvent_30439606, StartEvent_30439613, StartEvent_30439620, StartEvent_30439643 (Error Start): Start events of the exception subprocesses, triggered when an error occurs.
CallActivity_30439609, CallActivity_30439616, CallActivity_30439623, CallActivity_30439646 (Print Exception): Script call activities that logs exception details into MPL.
EndEvent_30439607, EndEvent_30439614, EndEvent_30439621, EndEvent_30439644 (End): End event of the exception subprocesses.
7. Security Considerations

Sensitive information like CPI credentials and the Gemini API key must be stored securely using CPI's secure parameter store.
Access to the iflow and its configuration should be restricted to authorized personnel only.
8. Deployment

The iflow can be deployed through the SAP CPI web UI or using the Cloud Management API.
Ensure all externalized parameters are configured appropriately.
9. Monitoring

Monitor the iflow execution logs in CPI for any errors or performance bottlenecks.
Track datastore entries in IflowDocumentation datastore for completed TSD generation runs.
10. Notes

The quality of the generated TSD depends on the Gemini AI model.
The accuracy of the generated documentation relies on the configurations of the flowsteps.
This document serves as a guide for developers to support and enhance the integration.&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId--472351242"&gt;&lt;STRONG&gt;Benefits and Use Cases&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Here’s how the solution delivers &lt;STRONG&gt;real business value&lt;/STRONG&gt; across several dimensions:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Benefits of Automated iFlow Documentation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":stopwatch:"&gt;⏱&lt;/span&gt;️ Time Saved&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Manual documentation&lt;/STRONG&gt; of iFlows typically involves opening each flow, inspecting steps, copying scripts, and writing descriptions—this can take &lt;STRONG&gt;hours per flow&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Your automated approach reduces this to &lt;STRONG&gt;minutes&lt;/STRONG&gt;, or even &lt;STRONG&gt;seconds&lt;/STRONG&gt;, by:&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Programmatically retrieving metadata and resources&lt;/LI&gt;&lt;LI&gt;Using Gemini AI to generate structured documentation instantly&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;This is especially impactful in environments with &lt;STRONG&gt;dozens or hundreds of iFlows&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":clipboard:"&gt;📋&lt;/span&gt;Consistency in Documentation&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Manual documentation often varies in &lt;STRONG&gt;structure&lt;/STRONG&gt;, &lt;STRONG&gt;terminology&lt;/STRONG&gt;, and &lt;STRONG&gt;depth&lt;/STRONG&gt;, depending on who writes it.&lt;/LI&gt;&lt;LI&gt;Gemini AI ensures:&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Standardized format&lt;/STRONG&gt; across all iFlows&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Consistent terminology&lt;/STRONG&gt; and technical descriptions&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Repeatable output&lt;/STRONG&gt;, regardless of who triggers the flow&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;This improves &lt;STRONG&gt;readability&lt;/STRONG&gt;, &lt;STRONG&gt;maintainability&lt;/STRONG&gt;, and &lt;STRONG&gt;collaboration&lt;/STRONG&gt; across teams.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;🧾 Use in Audits, Onboarding, and Handovers&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Audits&lt;/STRONG&gt;: Automatically generated documentation provides a clear, traceable record of integration logic and configurations, helping meet compliance requirements.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Onboarding&lt;/STRONG&gt;: New developers or integration consultants can quickly understand existing flows without needing to reverse-engineer them.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Handovers&lt;/STRONG&gt;: When projects transition between teams or vendors, having up-to-date technical specs ensures smooth knowledge transfer and reduces risk.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--668864747"&gt;&lt;STRONG&gt;Conclusion and Next Steps&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In this project, we built an automated solution that leverages the&amp;nbsp;&lt;STRONG&gt;SAP Integration Suite OData APIs&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;Gemini AI&lt;/STRONG&gt;&amp;nbsp;to generate technical documentation for any iFlow within a subaccount. The solution:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Dynamically retrieves iFlow metadata and resources (Groovy scripts, XSLT, EDMX)&lt;/LI&gt;&lt;LI&gt;Prepares and formats the data into a structured context&lt;/LI&gt;&lt;LI&gt;Sends it to Gemini AI to generate a detailed technical specification&lt;/LI&gt;&lt;LI&gt;Stores the output in a persistent data store for future reference&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This approach significantly reduces manual effort, ensures consistency, and supports better documentation practices across integration landscapes&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId--865378252"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":raising_hands:"&gt;🙌&lt;/span&gt;Try It, Share It, Connect!&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;If you found this solution helpful or inspiring, here’s how you can take the next step:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&amp;nbsp;Try It Out&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Clone or replicate the approach in your own SAP Integration Suite tenant.&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Customize it to fit your documentation standards or integration landscape.&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Experiment with different AI prompts or formats to tailor the output.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&amp;nbsp;Share Your Feedback&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;I’d love to hear how this worked for you!&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Did it save time? Improve clarity? Spark new ideas?&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Drop your thoughts in the comments or reach out directly.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Your feedback and collaboration can help evolve this into an even more powerful tool for the SAP Integration community.&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/automating-iflow-documentation-with-sap-integration-suite-and-gemini-ai/ba-p/14153802"/>
    <published>2025-07-18T14:27:58.950000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/using-sap-managed-iflows-for-time-series-data-integration-in-sap-ibp-part-1/ba-p/14156722</id>
    <title>Using SAP managed iFlows for Time series data Integration in SAP IBP – Part 1 - Reading data</title>
    <updated>2025-07-18T18:49:08.639000+02:00</updated>
    <author>
      <name>Domnic</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/269794</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735158440"&gt;Introduction&lt;/H2&gt;&lt;P&gt;You can use SAP Cloud Integration as a middleware to read and write Timeseries as well as Master data between SAP IBP and any other application. The IBP team provides an SAP managed package which you can reuse in your custom integration to extract as well as insert or update time series data in IBP. This blog explains the steps needed to enable this package in your SAP Cloud Integration Instance. It mainly focuses on reading data from SAP IBP and explains the different payloads you have to build to reuse this package in your own custom iFlows.&lt;/P&gt;&lt;H2 id="toc-hId-1538644935"&gt;Reusable iFlows&lt;/H2&gt;&lt;P&gt;In the &lt;A href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/using-sap-managed-iflows-for-time-series-data-integration-in-sap-ibp-part-2/ba-p/14156739" target="_blank"&gt;next blog&lt;/A&gt;, I explained how one can write data to SAP IBP.&amp;nbsp; Here we focus on reading data. SAP IBP comes with a communication scenario SAP_COM_0931. This exposes a set of RFC function modules which can be consumed in SAP Cloud Integration via a communication user.&amp;nbsp; A set of iFlows are delivered by SAP IBP which consumes these RFC calls to read and write data bi-directionally. These are called the reusable iFlows and they can be imported into your SAP CI instance via the Discovery mechanism in Cloud Integration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Discover.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288701iDC11455B7DC11D66/image-size/large?v=v2&amp;amp;px=999" role="button" title="Discover.jpg" alt="Discover.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig.1 Discovering the SAP IBP Content in Integration Suite&lt;/P&gt;&lt;P&gt;On the landing page of the SAP Integration Suite open the Discover menu on the left hand side and click on Integrations. In the right hand side you would see the search option. Filter your search for the key word IBP. You would see the &lt;STRONG&gt;SAP IBP – Reusable Integration Flows&lt;/STRONG&gt;. You can import them to your instance. You can build you own wrapper iFlows around these reusable iFlows to focus on your IBP content. The rest of this blog describes how to build these wrappers.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Reusable iFlows - Reading data.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288702i8BB346B728B19D70/image-size/large?v=v2&amp;amp;px=999" role="button" title="Reusable iFlows - Reading data.png" alt="Reusable iFlows - Reading data.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig.2. High level view of using custom content to read data from SAP IBP using the reusable iFlows&lt;/P&gt;&lt;P&gt;This blog would help you when you are creating your Custom Integration package. An example iFlow package – &lt;STRONG&gt;SAP IBP – Reusable Integration Flows Example&lt;/STRONG&gt;, is also available which can be imported inside your instance.&lt;/P&gt;&lt;H2 id="toc-hId-1342131430"&gt;Prerequisite&lt;/H2&gt;&lt;P&gt;This integration pattern would work for you only when you are using SAP IBP ver 2411 and above. Make sure you have a valid SAP Cloud Integration license. The following steps are mandatory.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;In SAP IBP, Create a communication arrangement for &lt;STRONG&gt;SAP_COM_0931&lt;/STRONG&gt;. Also create a communication system and a user. The credentials are needed for the BTP destination in your sub account.&lt;/LI&gt;&lt;LI&gt;In your SAP Integration Suite instance, discover the &lt;STRONG&gt;SAP IBP – Reusable Integration Flows&lt;/STRONG&gt; and copy them to your instance.&lt;/LI&gt;&lt;LI&gt;In your BTP Sub account, create a new destination with the following configuration:&lt;OL&gt;&lt;LI&gt;Name: e.g. SAP_IBP_Instance&lt;/LI&gt;&lt;LI&gt;Type:&amp;nbsp; RFC&lt;/LI&gt;&lt;LI&gt;Proxy Type: Internet&lt;/LI&gt;&lt;LI&gt;Alias User: IBP Communication user&lt;/LI&gt;&lt;LI&gt;Password:&amp;nbsp; IBP Communication user password&lt;/LI&gt;&lt;LI&gt;Additional Properties:&lt;OL&gt;&lt;LI&gt;&amp;nbsp;jco.client.serialization_format&amp;nbsp; : columnBased&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;jco.clients.tls:trust&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 1&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;jco.client.wshost&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : &amp;lt; SAP IBP -api Domain name&amp;gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;jco.client.wsport&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; :443&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Save the Destination Configuration and check the connection.&lt;/P&gt;&lt;P&gt;Create a Package in the SAP Cloud Integration under Integration -&amp;gt; Design.&lt;/P&gt;&lt;H2 id="toc-hId-1145617925"&gt;Reading data from SAP IBP&lt;/H2&gt;&lt;P&gt;Create your own package which would contain all your iFlows to read and write data between SAP IBP and your external application. Let’s start by creating an iFlow that would read data from SAP IBP. This iFlow would use the Process Direct interfaces defined in the SAP IBP – reusable Integration Flows. Let’s assume that you would be calling this iFlow from your external application or a tool like Postman or Bruno.&lt;/P&gt;&lt;P&gt;The end-to-end main flow would look like this below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Main_Flow_Read.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288703i03ACE25876CB38DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Main_Flow_Read.jpg" alt="Main_Flow_Read.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig.3. An example main iFlow&amp;nbsp;&lt;/P&gt;&lt;P&gt;The main flow is exposed with an HTTP Adapter. One can set the end point and later invoke this iFlow with a JSON payload. Hence the first atom is an Analyse Payload Groovy Script. Here we can analyse and store the properties such as IBP Destination, Job name, field list we want to read, the payloads we want to send to IBP as well as the master data prefix and type or key figure data along with the planning area. One can also add a flag to state the data consistency at this point and check with a router if all input properties are available and valid or not. The Groovy script below would help prepare to analyse the properties,&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// Analyse the inbound payload to read master data from SAP IBP 
def Message handlePayloadForRead_MDs(Message message) {
    def body = message.getBody(java.io.Reader);
    def input = new JsonSlurper().parse(body);    
   
    message.setProperty("payloadIsOk", "yes")
      
    if(!input?.IBPDestination || input.IBPDestination.toString().trim().isEmpty() ){
        message.setProperty("payloadIsOk", "no")
    } else {
         message.setProperty("IBPDestination",  input.IBPDestination); 
    }   
    
    if(!input.IBPMasterDataPrefix || input.IBPMasterDataPrefix.toString().trim().isEmpty() ){
        message.setProperty("payloadIsOk", "no")
    } else {
         message.setProperty("IBPMasterDataPrefix",  input.IBPMasterDataPrefix); 
    } 
    
    if(!input.IBPMasterDataType || input.IBPMasterDataType.toString().trim().isEmpty() ){
        message.setProperty("payloadIsOk", "no")
    } else {
         message.setProperty("IBPMasterDataType",  input.IBPMasterDataType); 
    } 
    
    if(!input.IBPQuerySelect || input.IBPQuerySelect.toString().trim().isEmpty() ){
        message.setProperty("payloadIsOk", "no")
    } else {
         message.setProperty("IBPQuerySelect",  input.IBPQuerySelect); 
    }   
    
    message.setProperty("IBPKey", input.IBPMasterDataType)
    message.setProperty("IBPJobName", "ReadMasterData") 
    message.setProperty("IBPDetailedTrace", true)
    return message;
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-949104420"&gt;Initialize a read query&lt;/H2&gt;&lt;P&gt;As an example, in the above code snippet, we are checking for values we need for an XML payload to initialize the following read query &amp;nbsp;in the body of a Content Modifier atom.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Master data:&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&amp;gt;
&amp;lt;IBPReads&amp;gt;
  &amp;lt;IBPRead Key="${property.IBPKey}"
    TypeOfData="MASTERDATA"
    MasterDataPrefix="${property.IBPMasterDataPrefix}"
    MasterDataCoreType="${property.IBPMasterDataType}"
    Destination="${property.IBPDestination}"
    Select="${property.IBPQuerySelect}"/&amp;gt;
&amp;lt;/IBPReads&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Key-figure Data:&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&amp;gt;
&amp;lt;IBPReads&amp;gt;
  &amp;lt;IBPRead 
    Key="${header.IBPReadKey}"
    TypeOfData="KeyFigures"
    PlanningArea="SAPIBP1"
    Destination="${header.IBPReadDestination}"
    TimeAggregationLevel="2"
    Select="PRDID,LOCID,CUSTID,TSTFR,PERIOD_LEVEL_2,FINALDEMANDPLANNINGQTY"
    PackageSizeInMB = "50"/&amp;gt;
&amp;lt;/IBPReads&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;It is also possible to set a filter. An example would be: &lt;SPAN&gt;Filter="&lt;/SPAN&gt; PRDID &lt;SPAN&gt;eq '1010'"&lt;/SPAN&gt; . Here the Filter is an attribute. The response for this call would be something like below,&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;IBPRead xmlns:multimap="http://sap.com/xi/XI/SplitAndMerge"
         Destination="As defined in the BTP Destinations for RFC"
         Filter="PRDID eq '1010'"
         Index=""
         Key="Read MD"
         Limit="2147483647"
         MasterDataCoreType="PRODUCT"
         MasterDataPrefix="DB1"
         MaximumThreads="4"
         OrderBy=""
         PackageSizeInRows="49"
         Rows="49"
         SQLStatement="SELECT PRDID, BRAND, PRDDESCR, UOMDESCR FROM (SELECT PRDID, BRAND, PRDDESCR, UOMDESCR FROM SAPSOPG100.SOPMD_DB1PRODUCT WHERE PRDID = ‘1010’ LIMIT 2147483647)"
         Select="PRDID,BRAND,PRDDESCR,UOMDESCR"
         Status="FETCH_DATA"
         TypeOfData="MasterData"
         UUID="*******07084B77E190051FAB9E*****"/&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;You will know the number of records based on your selection criteria from this response payload. The XML element Rows would give the total number of rows based on the selection criteria in the select and filter attributes. &amp;nbsp;The UUID in the above payload is important. It can be stored in as message property and later used to read the data. It acts as a transaction ID for reading. To initialize a read query, I created a local integration process which looks like this,&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="INIT_READ.jpg" style="width: 632px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288711i713F9A5B8F06F78B/image-size/large?v=v2&amp;amp;px=999" role="button" title="INIT_READ.jpg" alt="INIT_READ.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig.4. Local integration process for initializing a query&amp;nbsp;&lt;/P&gt;&lt;P&gt;The process direct would call the SAP IBP reusable iFlow at the address: &lt;STRONG&gt;SAP_IBP_Read_-_Initialize&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId-752590915"&gt;READ data&lt;/H2&gt;&lt;P&gt;When we read key figure or master data in IBP, we do this asynchronously in packages. If you have less number of records, you can read data in one single package (for example, the above payload does that). But if you have large volumes of data to be written, then multiple packages are created in the backend. You can define a package size.&lt;/P&gt;&lt;P&gt;The following XML payload is sent to the Read process direct at the address &lt;STRONG&gt;SAP_IBP_Read_-_Fetch_Data&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt; 
&amp;lt;IBPRead xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    UUID="="*******07084B77E190051FAB9E*****" 
    Key="Read MD" 
    PackageSizeInRows="49"
    ParallelThread="" 
    Offset=""/&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The XML has the following attributes :&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="150.344px"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="259px"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200px"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="150.344px"&gt;&lt;P&gt;UUID&lt;/P&gt;&lt;/TD&gt;&lt;TD width="259px"&gt;&lt;P&gt;A unique key valid in all the steps of the asynchronous reading process&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200px"&gt;&lt;P&gt;This value is generated in the backend&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="150.344px"&gt;&lt;P&gt;Key&lt;/P&gt;&lt;/TD&gt;&lt;TD width="259px"&gt;&lt;P&gt;A Job name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200px"&gt;&lt;P&gt;“Read MD”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="150.344px"&gt;&lt;P&gt;&lt;SPAN&gt;PackageSizeInRows&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="259px"&gt;&lt;P&gt;The number of records you want to read in one package&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200px"&gt;&lt;P&gt;5000&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="150.344px"&gt;&lt;P&gt;Offset&lt;/P&gt;&lt;/TD&gt;&lt;TD width="259px"&gt;&lt;P&gt;To support the top-skip mechanism&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200px"&gt;&lt;P&gt;0 – do not hard code it. Use a variable to skip the records you read.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;The PackageSizeInRows attribute would define the number or rows read in one batch or package. The Rows element from the response would give the total number of records found based on the selection criteria. Based on these two properties, one can loop the reading process. A top skip mechanism can be implemented. The reading loop can be exited once all the records were read from the row count. An offset XML attribute can be updated to skip the number of records currently read. The following XSLT snippet helps to implement the moving offset to enable the skip and the localIBPReadPackageSizeInrows attribute would help in implementing the $top function.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;xsl:template match="/"&amp;gt;
        &amp;lt;!-- Ensure all values are numbers --&amp;gt;
        &amp;lt;xsl:variable name="numberOfRows"
           select="if (normalize-space($IBPReadRows) = '') then 0 else number($IBPReadRows)"/&amp;gt;
        &amp;lt;xsl:variable name="localIBPReadPackageSizeInRows"
            select="if (normalize-space($IBPReadPackageSizeInRows) = '')
                    then $numberOfRows
                    else number($IBPReadPackageSizeInRows)"/&amp;gt;

        &amp;lt;xsl:variable name="offset"
            select="if (normalize-space($IBPReadOffset) = '') then 0 else number($IBPReadOffset)"/&amp;gt;

        &amp;lt;xsl:variable name="newOffset"
            select="round($offset + $localIBPReadPackageSizeInRows)"/&amp;gt;
            
&amp;lt;xsl:value-of select="cpi:setProperty($exchange, 'IBPReadOffset', format-number($newOffset, '#'))"/&amp;gt;   

        &amp;lt;xsl:variable name="fetchFinished" select="if ($newOffset lt $numberOfRows) then 'false' else 'true'"/&amp;gt;  

&amp;lt;xsl:value-of select="cpi:setProperty($exchange, 'IBPReadFetchFinished', $fetchFinished)"/&amp;gt;         

        &amp;lt;xsl:copy-of select="."/&amp;gt;

    &amp;lt;/xsl:template&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The above XSLT is implemented in the Process Fetch atom which is an XSLT mapping step in the below local integration process.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="READ_FETCH.jpg" style="width: 512px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288712i9D95224007874560/image-size/large?v=v2&amp;amp;px=999" role="button" title="READ_FETCH.jpg" alt="READ_FETCH.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig.5. Local integration process to read data. Should be called in a loop.&lt;/P&gt;&lt;P&gt;Once you call this process direct, an RFC function module is internally called by the reusable iFlows. It would return a XML payload with additional attributes like below&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version='1.0' encoding='UTF-8'?&amp;gt;
&amp;lt;IBPReadMasterDataPRODUCT&amp;gt;
  &amp;lt;item&amp;gt;
    &amp;lt;PRDID&amp;gt;1010&amp;lt;/PRDID&amp;gt;
    &amp;lt;BRAND&amp;gt;DEMO2&amp;lt;/BRAND&amp;gt;
    &amp;lt;PRDDESCR&amp;gt;DEMO2 product&amp;lt;/PRDDESCR&amp;gt;
        ...........
  &amp;lt;/item&amp;gt;
&amp;lt;/IBPReadMasterDataPRODUCT&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Response from IBP using this approach would be in XML. If you like to convert it to a JSON payload, you can use an atom – convert XML to JSON. &amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-556077410"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;In this blog, I tried to give a step by step explanation on how to build your own custom iFlow which can be used to consume the Reusable iFlows from SAP IBP to read data.&lt;A href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/using-sap-managed-iflows-for-time-series-data-integration-in-sap-ibp-part-2/ba-p/14156739" target="_self"&gt; In another blog&lt;/A&gt;, explain with similar steps - how to write data to SAP IBP.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/using-sap-managed-iflows-for-time-series-data-integration-in-sap-ibp-part-1/ba-p/14156722"/>
    <published>2025-07-18T18:49:08.639000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/using-sap-managed-iflows-for-time-series-data-integration-in-sap-ibp-part-2/ba-p/14156739</id>
    <title>Using SAP managed iFlows for Time series data Integration in SAP IBP – Part 2 - Writing data</title>
    <updated>2025-07-18T19:30:36.532000+02:00</updated>
    <author>
      <name>Domnic</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/269794</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735158478"&gt;Introduction&lt;/H2&gt;&lt;P&gt;You can use SAP Cloud Integration as a middleware to read and write Timeseries as well as Master data between SAP IBP and any other application. The IBP team provides a SAP managed package which you can reuse in your custom integration to extract as well as insert or update time series data in IBP. This blog explains the steps needed to enable this package in your SAP Cloud Integration Instance. It also explains the different payloads you have to build to reuse this content in your own custom iFlows.&lt;/P&gt;&lt;H2 id="toc-hId-1538644973"&gt;Reusable iFlows&lt;/H2&gt;&lt;P&gt;SAP IBP comes with a communication scenario &lt;STRONG&gt;SAP_COM_0931&lt;/STRONG&gt;. This exposes a set of RFC function modules which can be consumed in SAP Cloud Integration via a communication user.&amp;nbsp; A set of iFlows are delivered by SAP IBP which consumes these RFC calls to read and write data bi-directionally. These are called the reusable iFlows and they can be imported into your SAP CI instance via the Discovery mechanism in Cloud Integration. On the landing page of the SAP Integration Suite open the Discover menu on the left hand side and click on Integrations. In the right hand side you would see the search option. Filter your search for the key word IBP. You would see the &lt;STRONG&gt;SAP IBP – Reusable Integration Flows&lt;/STRONG&gt;. You can import them to your instance. You can build you own wrapper iFlows around these reusable iFlows to focus on your IBP content. The rest of this blog describes how to build these wrappers.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Reusable iFlows.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288715i0EB5E36518961E6C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Reusable iFlows.png" alt="Reusable iFlows.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig.1. High level overview of writing data to SAP IBP from an external application.&lt;/P&gt;&lt;P&gt;This blog would help you when you are creating your Custom Integration package. An example iFlow package – &lt;STRONG&gt;SAP IBP – Reusable Integration Flows Example&lt;/STRONG&gt;, is also available which can be imported inside your instance.&lt;/P&gt;&lt;H2 id="toc-hId-1342131468"&gt;Prerequisite&lt;/H2&gt;&lt;P&gt;This integration pattern would work for you only when you are using SAP IBP ver 2411 and above. Make sure you have a valid SAP Cloud Integration license. The following steps are mandatory.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;In SAP IBP, Create a communication arrangemen for SAP_COM_0931. Also create a communication system and a user. The credentials are needed for the BTP destination in your sub account.&lt;/LI&gt;&lt;LI&gt;In your SAP Integration Suite instance, discover the &lt;STRONG&gt;SAP IBP – Reusable Integration Flows&lt;/STRONG&gt; and copy them to your instance.&lt;/LI&gt;&lt;LI&gt;In your BTP Sub account, create a new destination with the following configuration:&lt;OL&gt;&lt;LI&gt;Name: e.g. SAP_IBP_Instance&lt;/LI&gt;&lt;LI&gt;Type:&amp;nbsp; RFC&lt;/LI&gt;&lt;LI&gt;Proxy Type: Internet&lt;/LI&gt;&lt;LI&gt;Alias User: IBP Communication user&lt;/LI&gt;&lt;LI&gt;Password:&amp;nbsp; IBP Communication user password&lt;/LI&gt;&lt;LI&gt;Additional Properties:&lt;OL&gt;&lt;LI&gt;&amp;nbsp;jco.client.serialization_format : columnBased&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;jco.clients.tls:trust&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: 1&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;jco.client.wshost&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : &amp;lt; SAP IBP -api Domain name&amp;gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;jco.client.wsport&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 443&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Save the Destination Configuration and check the connection.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create a Package in the SAP Cloud Integration under Integration -&amp;gt; Design.&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1145617963"&gt;Writing data to SAP IBP&lt;/H2&gt;&lt;P&gt;Create your own package which would contain all your iFlows to read and write data between SAP IBP and your external application. Lets start by creating an iFlow that would write data into SAP IBP. This iFlow would use the Process Direct interfaces defined in the SAP IBP – reusable Integration Flows. Lets assume that you would be calling this iFlow from your external application or a tool like Postman or Bruno.&lt;/P&gt;&lt;P&gt;The end to end main flow would look like this below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Main_Flow_Write.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288716iBD76C7A990DFDF8C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Main_Flow_Write.jpg" alt="Main_Flow_Write.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig.2 Example main flow for writing data to SAP IBP&lt;/P&gt;&lt;P&gt;The main flow is exposed with an HTTP Adapter. One can set the end point and later invoke this iFlow with a JSON payload. Hence the first atom is an Analyse Payload Groovy Script. Here we can analyse and store the parameters such as IBP Destination, Job name, field list we want to write, the payload we want to send to IBP as well as the master data prefix and type or key figure data along with the planning area. One can also add a flag to check the payload consistency at this point and check with a router if the payload is valid or not. For example, we need the IBP Destination name which is configured in the BTP destination. We can check for this by using a simple if statement like this,&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;message.setProperty("payloadIsOk", "yes")
if(!input?.IBPDestination || input.IBPDestination.toString().trim().isEmpty() ){
        message.setProperty("payloadIsOk", "no")
   } else {
         message.setProperty("IBPDestination",  input.IBPDestination);
    } &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In the above code snippet, we are checking for the IBP Destination in the inbound payload using the key IBPDestination. If the value is empty or not available, a property called payloadisOk is set to “no” condition. Such a check can be repeated for all mandatory key value pairs or JSON arrays such as the payload you want to send to IBP. Later the flag payloadIsOk can be checked in the router atom using the following Non-XML condition: ${header.payloadIsOk} != 'no'.&lt;/P&gt;&lt;P&gt;The JSON payload can also be converted to a XML structure using the following snippet:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;def writer = new StringWriter()
def xml = new MarkupBuilder(writer)
        xml.IBPPayload {
            input.IBPPayload.each { item -&amp;gt;
                IBPItem {
                    item.each { key, value -&amp;gt;
                        "${key}"(value)
                    }
                }
            }
        }

        def xmlString = XmlUtil.serialize(writer.toString())
        message.setProperty("IBPPayload", xmlString)&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-949104458"&gt;Create Batches&lt;/H2&gt;&lt;P&gt;When we write key figure or master data in IBP, we do this asynchronously in batches. If you have less number of records, you can write data in one single batch. But if you have large volumes of data to be written, then multiple packages are created in one batch or the flow is called multiple times creating multiple batches. The following steps are reommended while working with these reusable iFlows,&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Specify a planning area. Do not use multiple planning areas – it is currently not supported.&lt;/LI&gt;&lt;LI&gt;Planning area field is mandatory for writing Key figure values.&lt;/LI&gt;&lt;LI&gt;Only one version of the planning area is currently supported. If you do not specify the planning area version, data would be written to the Baseline version of the planning area.&lt;/LI&gt;&lt;LI&gt;Prepare the Write batch payload and the call the process direct from the reusable iflow.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The following XML Attributes are mandatory while creating a &lt;STRONG&gt;batch&lt;/STRONG&gt; for &lt;STRONG&gt;writing master data&lt;/STRONG&gt;.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;Key&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;A batch key valid in all the steps of the asynchronous process&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“MyKey”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;Name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;A Job name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“Write Master data”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;Destination&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;IBP destination as defined in the BTP sub account&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“IBP_Production_Instance”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;Command&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;RFC operation with the data&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“INSERT_UPDATE”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Other commands you can use are REPLACE, DELETE in the above attribute. The following XML Attributes are optional while creating a batch for writing master data.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;DetailedTrace&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;For debugging&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;true or false&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;ProcessUnchangedData&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;For post processing&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;true or false&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;The detailed trace attribute would generate logs that can be used while debugging an integration flow. The Boolean value toggles this setting. The ProcessUnchangedData would instruct the post processing job to process unchanged data – irrespective of the global configuration setting. The Boolean value toggles this setting. If not provided, the global parameter setting is considered. A Sample XML payload for creating batches to write master data would look like this,&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&amp;gt;
&amp;lt;IBPWriteBatches&amp;gt;
    &amp;lt;IBPWriteBatch 
        Key="${header.IBPKey}"
        Name="${header.IBPJobName}"
        Destination="${property.IBPDestination}"
        Command="${header.IBPCommand}"
        DetailedTrace="${header.IBPDetailedTrace}"
        ProcessUnchangedData="${header.IBPProcessUnchangedData}"/&amp;gt;
&amp;lt;/IBPWriteBatches&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The following XML Attributes are mandatory while creating a batch for &lt;STRONG&gt;writing key figure data&lt;/STRONG&gt;.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Key&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;A batch key valid in all the steps of the asynchronous process&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“MyKeyfigureKey”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;A Job name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“Write Keyfigure data”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Destination&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;IBP destination as defined in the BTP sub account&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“IBP_Production_Instance”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Command&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;RFC operation with the data&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“INSERT_UPDATE”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;PlanningArea&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;Name of the IBP Planning area&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“SAPIBP1”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;The following XML Attributes are optional while creating a batch for writing master data.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;PlanningAreaVersion&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;Version of the above planning area&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;Default is the Baseline version if left empty&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;DetailedTrace&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;For debugging&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;true or false&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;ProcessUnchangedData&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;For post processing&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;true or false&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;A Sample XML payload for creating batches to write master data would look like this,&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&amp;gt;
&amp;lt;IBPWriteBatches&amp;gt;
    &amp;lt;IBPWriteBatch 
        Key="${header.IBPKey}"
        Name="${header.IBPJobName}"
        Destination="${property.IBPDestination}"
        Command="${header.IBPCommand}"
        PlanningArea="${property.IBPPlanningArea}"
        DetailedTrace="${header.IBPDetailedTrace}"
        ProcessUnchangedData="${header.IBPProcessUnchangedData}"/&amp;gt;
&amp;lt;/IBPWriteBatches&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In the above example payloads, I am sending a JSON payload to the iFlow and validating it on the first groovy script atom. Here the mandatory fields are checked and stored in the message properties and header. Later I can use them to create the corresponding payloads in a content modifier, Groovy Script or a XSLT transformation atom. Such a combination can be self-contained in a local integration process and called from the main integration process. An example of such a local integration process can look like,&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Create_Batches.jpg" style="width: 566px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288717iF7FE858855AF56B3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Create_Batches.jpg" alt="Create_Batches.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig. 3 Local integration flow to create batches.&lt;/P&gt;&lt;P&gt;Once the payload is prepared to create a batch, a request-reply atom should be used with a Process Direct adapter. This adapter should be configured to call the address &lt;STRONG&gt;SAP_IBP_Write_-_Create_Batches&lt;/STRONG&gt;. This address is defined in the Reusable integration flow from SAP IBP to create a batch in IBP.&lt;/P&gt;&lt;P&gt;Once you call this process direct, an RFC function module is internally called by the reusable iFlows. It would return a XML payload with additional attributes in the IBPWriteBatch element. You can store these values using a xpath in a content modifier or an XSLT or a Groovy script. The XML structure would look like,&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
  &amp;lt;multimap:Messages xmlns:multimap="http://sap.com/xi/XI/SplitAndMerge"&amp;gt;
    &amp;lt;multimap:Message1&amp;gt;
      &amp;lt;IBPWriteBatch
        CallerId="AstalaVistaCaller_can_be_any"
        Command="INSERT_UPDATE"
        Destination="IBP_Production_Instan"
        Id="6440"
        Index="1"
        Key="MyKeyfigureKey"
        Name="Write Keyfigure data"
        PlanningArea="SAPIBP1"/&amp;gt;
    &amp;lt;/multimap:Message1&amp;gt;
&amp;lt;/multimap:Messages&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If you open the Data Integration Jobs application in SAP IBP, you can cross check for the Job ID 6440. This is a sequential number that is generated in SAP IBP.&lt;/P&gt;&lt;H2 id="toc-hId-752590953"&gt;POST data to IBP&lt;/H2&gt;&lt;P&gt;Using the batch id that was generated in the previous step, one can write data in packages. One can also instruct the package size and create a logic to loop over till all the data is written to IBP.&lt;/P&gt;&lt;P&gt;STEPS: Prepare the XML Payload and then call the Process Direct from the reusable iFlow&lt;/P&gt;&lt;P&gt;The following XML Attributes are mandatory while preparing the XML payload for &lt;STRONG&gt;posting master data&lt;/STRONG&gt; to IBP.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;Id&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;The Batch ID that was generated in the previous step from IBP&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“6440”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;BatchKey&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;A batch key valid in all the steps of the asynchronous process&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“MyKey”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;FileName&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;A Job name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“Write Master data”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;Destination&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;IBP destination as defined in the BTP sub account&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“IBP_Production_Instance”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;MasterDataPrefix&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;Prefix of the master data&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“AB1”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;MasterDataType&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;Master data type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“&lt;SPAN&gt;PRODTYPE&lt;/SPAN&gt;”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;FieldList&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;List of elements that belong to the master data type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;“PRODTYPEID,PRODUCTDIM,PRODTYPEDESC”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="132"&gt;&lt;P&gt;Item&lt;/P&gt;&lt;/TD&gt;&lt;TD width="208"&gt;&lt;P&gt;Each record that you want to write to IBP must be enclosed in this item element&lt;/P&gt;&lt;/TD&gt;&lt;TD width="261"&gt;&lt;P&gt;&amp;lt;item&amp;gt; &amp;lt;PRODTYPEID&amp;gt;885522&amp;lt;/PRODTYPEID&amp;gt; &amp;lt;PRODUCTDIM&amp;gt;Cat1&amp;lt;/PRODUCTDIM&amp;gt;&amp;lt;PRODTYPEDESC&amp;gt;Category 1 product&amp;lt;/PRODTYPEDESC&amp;gt;&amp;nbsp;&amp;lt;/item&amp;gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;The important thing to observe in the above table is the Field list and the Item elements. The field list contains the root attributes in a comma separated string. The item element contains the value of the root elements enclosed in the root attribute as element name. The following XML Attributes are optional while creating a batch for writing master data.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;DetailedTrace&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;For debugging&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;true or false&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="200"&gt;&lt;P&gt;ProcessUnchangedData&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;For post processing&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;true or false&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;The following XSLT snippet contains a simple construct for creating a XML payload for writing master data.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;IBPWriteMasterData
  Id="{$batchId}"
  MasterDataType="{$IBPMasterDataType}"
  MasterDataPrefix="{$IBPMasterDataPrefix}"
  Destination="{$IBPDestination}"
  FileName="{$IBPJobName}"
  FieldList="{$IBPFieldList}"
  BatchKey="{$IBPJobName}"&amp;gt;                               

  &amp;lt;xsl:for-each select="$IBPPayloadXML/*/IBPData"&amp;gt; 
    &amp;lt;item&amp;gt;
      &amp;lt;xsl:copy-of select="*"/&amp;gt;
    &amp;lt;/item&amp;gt;
  &amp;lt;/xsl:for-each&amp;gt;
&amp;lt;/IBPWriteMasterData&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;A Sample XML payload with 1 record would look as below,&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;IBPWriteMasterData
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  Id="6440"
  MasterDataType="PRODTYPE"
  MasterDataPrefix="AB1"
  Destination="IBP_Production_Instance"
  FileName=" Write Master data "
  FieldList=" PRODTYPEID,PRODUCTDIM,PRODTYPEDESC "
  BatchKey="MyKey "&amp;gt;
  &amp;lt;item&amp;gt;
    &amp;lt;PRODTYPEID&amp;gt;885522&amp;lt;/PRODTYPEID&amp;gt;
    &amp;lt;PRODUCTDIM&amp;gt;Cat1&amp;lt;/PRODUCTDIM&amp;gt;
    &amp;lt;PRODTYPEDESC&amp;gt;Category 1 product&amp;lt;/PRODTYPEDESC&amp;gt;
  &amp;lt;/item&amp;gt;
&amp;lt;/IBPWriteMasterData&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The following XML Attributes are mandatory while &lt;STRONG&gt;posting keyfigure data&lt;/STRONG&gt; to IBP.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;Id&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;The Batch ID that was generated in the previous step from IBP&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;“6441”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;BatchKey&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;A batch key valid in all the steps of the asynchronous process&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;“MyKeyfigureKey”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;FileName&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;A Job name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;“Write Keyfigure data”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;Destination&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;IBP destination as defined in the BTP sub account&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;“IBP_Production_Instance”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;TimeDisaggregationLevel&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;Time level of the key figure data&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;1&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;FieldList&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;List of elements that belong to the master data type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;“PRDID,LOCID,CUSTID,PROMQTY,KEYFIGUREDATE”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="189"&gt;&lt;P&gt;Item&lt;/P&gt;&lt;/TD&gt;&lt;TD width="198"&gt;&lt;P&gt;Each record that you want to write to IBP must be enclosed in this item element&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;&amp;lt;item&amp;gt;&amp;lt;PRODID&amp;gt;885522&amp;lt;/PRODID&amp;gt;&amp;lt;LOCID&amp;gt;FP1&amp;lt;/LOCID&amp;gt;&amp;lt;CUSTID&amp;gt;1010&amp;lt;/CUSTID&amp;gt;&amp;lt;PROMQTY&amp;gt;100&amp;lt;/PROMQTY&amp;gt;&amp;lt;KEYFIGUREDATE&amp;gt;2025-07-15&amp;lt;/KEYFIGUREDATE&amp;gt;&amp;lt;/item&amp;gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;A Sample XML payload for writing key figures with 1 record would look as below,&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;IBPWriteKeyfigures xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  Id="6441"
  Destination="IBP_Production_Instance"
  FileName="Write Keyfigure data"
  FieldList="PRDID,LOCID,CUSTID,PROMQTY,KEYFIGUREDATE"
  TimeDisaggregationLevel="1"
  BatchKey="MyKeyfigureKey"&amp;gt;
  &amp;lt;item&amp;gt;
    &amp;lt;PRODID&amp;gt;885522&amp;lt;/PRODID&amp;gt;
    &amp;lt;LOCID&amp;gt;FP1&amp;lt;/LOCID&amp;gt;
    &amp;lt;CUSTID&amp;gt;1010&amp;lt;/CUSTID&amp;gt;
    &amp;lt;PROMQTY&amp;gt;100&amp;lt;/PROMQTY&amp;gt;
    &amp;lt;KEYFIGUREDATE&amp;gt;2025-07-15&amp;lt;/KEYFIGUREDATE&amp;gt;
  &amp;lt;/item&amp;gt;
&amp;lt;/IBPWriteKeyfigures&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The actual IBP payload can also be combined with a JSON structure if needed. One can use a XSLT transformation to create this payload for pure XML. Groovy can be used to create both XML as well as a combination of XML and JSON payloads. The steps can be created in side a local integration process and called from the main process. It can look like below,&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Write_to_IBP.jpg" style="width: 536px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288718i410EB592320A0800/image-size/large?v=v2&amp;amp;px=999" role="button" title="Write_to_IBP.jpg" alt="Write_to_IBP.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig.4 Local integration flow to write data. Can be called in a loop.&lt;/P&gt;&lt;P&gt;Once the payload is prepared to write data, a request-reply atom should be used with a Process Direct adapter. This adapter should be configured to call the address &lt;STRONG&gt;SAP_IBP_Write_-_Post_Data&lt;/STRONG&gt;. This address is defined in the Reusable integration flow from SAP IBP to create a batch in IBP. Once the RFC request is made, the response from the reusable iflow would contain the original request as well as the following response while writing key figure data.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;IBPWriteKeyfigures xmlns:multimap="http://sap.com/xi/XI/SplitAndMerge" Status="OK"&amp;gt;
  &amp;lt;Request&amp;gt;… original payload …&amp;lt;/Request&amp;gt;
  &amp;lt;Response&amp;gt;
    &amp;lt;Status&amp;gt;OK&amp;lt;/Status&amp;gt;
    &amp;lt;Messages&amp;gt;
      &amp;lt;Message Type="Information"&amp;gt;Initialization of file &amp;lt;&amp;lt;filename&amp;gt;&amp;gt; is completed.&amp;lt;/Message&amp;gt;
    &amp;lt;/Messages&amp;gt;
  &amp;lt;/Response&amp;gt;
&amp;lt;/IBPWriteKeyfigures&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-556077448"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Post processing&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Once the data is posted to IBP, a post processing job is triggered which would validate the master data as well as the consistency of the key figure value as defined in the planning area. One can initiate a post processing check using the following XML mandatory XML elements for Master data&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;&lt;STRONG&gt;XML Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;&lt;STRONG&gt;Example Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Key&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;A batch key valid in all the steps of the asynchronous process&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“MyKey”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;A Job name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“Write Master data”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Destination&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;IBP destination as defined in the BTP sub account&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“IBP_Production_Instance”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Command&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;RFC operation with the data&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“INSERT_UPDATE”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="179"&gt;&lt;P&gt;Id&lt;/P&gt;&lt;/TD&gt;&lt;TD width="221"&gt;&lt;P&gt;Batch ID generated while creating batches&lt;/P&gt;&lt;/TD&gt;&lt;TD width="200"&gt;&lt;P&gt;“6440”&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;A Sample payload would look like this,&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;IBPWriteBatches&amp;gt;
  &amp;lt;IBPWriteBatch
    Command="INSERT_UPDATE"
    Destination=" IBP_Production_Instance"
    Id="6440"
    Key=" MyKey "
    Name=" Write Master data "
    DetailedTrace="true"
    ProcessUnchangedData="false"/&amp;gt;
&amp;lt;/IBPWriteBatches&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Sample payload for Post processing key figure batch&amp;nbsp; would look like below&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;IBPWriteBatches&amp;gt;
  &amp;lt;IBPWriteBatch
    Command="INSERT_UPDATE"
    Destination=" IBP_Production_Instance "
    Id="6441"
    Index="1"
    Key=" MyKeyfigureKey "
    Name="My Keyfigure data"
    PlanningArea=" SAPIBP1"
    DetailedTrace="true"
    ProcessUnchangedData="false"/&amp;gt;
&amp;lt;/IBPWriteBatches&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;These XML payloads can be generated using a Content Modifier Atom. Once the payload is generated in the body, a request-reply atom can be used with a Process Direct adapter. The address in the adapter would be:&lt;STRONG&gt; SAP_IBP_Write_-_Process_Posted_Data&lt;/STRONG&gt;. This would close the data integration for writing data into IBP. These steps can be built in a local integration process. Such a process can look like,&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="PostProcessing.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288719i76BFDBF7B56BA013/image-size/large?v=v2&amp;amp;px=999" role="button" title="PostProcessing.jpg" alt="PostProcessing.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;Fig. 5 Local integration flow for Post processing&lt;/P&gt;&lt;P&gt;The above process can be called from the main integration flow.&lt;/P&gt;&lt;H2 id="toc-hId-359563943"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;In this blog I explained how you can leverage the SAP managed reusable iFlows from IBP to write data. &lt;A title="Reading data from SAP IBP" href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/using-sap-managed-iflows-for-time-series-data-integration-in-sap-ibp-part-1/ba-p/14156722" target="_blank"&gt;In another blog&lt;/A&gt;, I explained how to read data using the same reusable package from SAP. Hope these blogs come handy for any developer to build your own custom iFlows for reading or writing data from SAP IBP to external systems.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/using-sap-managed-iflows-for-time-series-data-integration-in-sap-ibp-part-2/ba-p/14156739"/>
    <published>2025-07-18T19:30:36.532000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-postman-to-solace-event-publishing-using-sap-cpi/ba-p/14151036</id>
    <title>Event driven architecture Postman to Solace: Event Publishing Using SAP CPI  : part-4</title>
    <updated>2025-07-20T14:40:42.941000+02:00</updated>
    <author>
      <name>pavanKolla</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2108029</uri>
    </author>
    <content>&lt;P&gt;Hello SAP Community!&lt;/P&gt;&lt;P&gt;In this blog i would like to share the implementation of publisher part of my use case Event driven architecture using solace Event broker.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-1 : Setup a postman :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use the method POST and use the SAP cpi endpoint in the url section&amp;nbsp; and hit with the target payload that i am given below&lt;/P&gt;&lt;P&gt;Payload:&lt;/P&gt;&lt;P&gt;If its product's:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Products&amp;gt;
    &amp;lt;Product&amp;gt;
        &amp;lt;ProductID&amp;gt;P1001&amp;lt;/ProductID&amp;gt;
        &amp;lt;ProductName&amp;gt;Wireless Mouse&amp;lt;/ProductName&amp;gt;
        &amp;lt;Category&amp;gt;Electronics&amp;lt;/Category&amp;gt;
        &amp;lt;Price&amp;gt;25.99&amp;lt;/Price&amp;gt;
        &amp;lt;Currency&amp;gt;USD&amp;lt;/Currency&amp;gt;
        &amp;lt;StockQuantity&amp;gt;150&amp;lt;/StockQuantity&amp;gt;
        &amp;lt;UnitOfMeasure&amp;gt;EA&amp;lt;/UnitOfMeasure&amp;gt;
        &amp;lt;Supplier&amp;gt;LogiTech Inc.&amp;lt;/Supplier&amp;gt;
    &amp;lt;/Product&amp;gt;
 &amp;lt;/Products&amp;gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If it's suppliers :&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Suppliers&amp;gt;
    &amp;lt;Supplier&amp;gt;
        &amp;lt;ID&amp;gt;P1001&amp;lt;/ID&amp;gt;
        &amp;lt;Name&amp;gt;Wireless Mouse&amp;lt;/Name&amp;gt;
        &amp;lt;Category&amp;gt;Electronics&amp;lt;/Category&amp;gt;
        &amp;lt;Price&amp;gt;27.99&amp;lt;/Price&amp;gt;
        &amp;lt;Currency&amp;gt;USD&amp;lt;/Currency&amp;gt;
        &amp;lt;StockQuantity&amp;gt;200&amp;lt;/StockQuantity&amp;gt;
        &amp;lt;UnitOfMeasure&amp;gt;EA&amp;lt;/UnitOfMeasure&amp;gt;
        &amp;lt;Supplier&amp;gt;LogiTech Inc.&amp;lt;/Supplier&amp;gt;
    &amp;lt;/Supplier&amp;gt;
&amp;lt;/Suppliers&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step-2: Implementing layer-1-Routing layer:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1.start with HTTPS sender adapter&lt;/P&gt;&lt;P&gt;2.Add the Groovy Script to separate the target 2nd layer&lt;/P&gt;&lt;P&gt;Here is the groovy code :&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.util.XmlSlurper

Message processData(Message message) {
    def body = message.getBody(String) // Get XML as a string
    def xml = new XmlSlurper().parseText(body) // Parse XML

    def targetRoute = ""

    // Check the root element or a specific tag (adjust as needed)
    if (xml.name() == "Products") {
        targetRoute = "publisher_solace_inbound_products_layer-2"
    } else if (xml.name() == "Suppliers") {
        targetRoute = "publisher_solace_inbound_suppliers_layer_2"
    } else {
        targetRoute = "publisher_solace_inbound_books_layer_2"
    }

    message.setProperty("routeTo", targetRoute) // Store the route in a property
    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Implementation: This is the Routing layer paste the groovy code that i given above .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="layer1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285791iF48C381B451E6CC3/image-size/large?v=v2&amp;amp;px=999" role="button" title="layer1.png" alt="layer1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the Exception Handling like the below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1ex.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285793i034C0EBC623E6091/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1ex.png" alt="l1ex.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Declare the content modifier like below add Exchange properties like below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1cm1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285792i7E82A8BC3E4CC29C/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1cm1.png" alt="l1cm1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Add the routing condition to separate whether it is recoverable/non-recoverable errors&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1r1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285798i2BEB5132CC69BB50/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1r1.png" alt="l1r1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1r2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285799i63C98E8D05D6DDCB/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1r2.png" alt="l1r2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Based the routing condition above implement the Local Integration Process separately this is the&amp;nbsp;Local Integration Process for the retry purpose called by using process call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip1.png" style="width: 713px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285794iC71111671BFF36F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip1.png" alt="l1lip1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the content modifier as like the below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lipcm1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285800i9F49724C5DD8D6B7/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lipcm1.png" alt="l1lipcm1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Through process direct adapter call the another layers that are global retry layers and jms retry for retry purpose&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip1processdir.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285803i580F57A13C5E319E/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip1processdir.png" alt="l1lip1processdir.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Based the routing condition above implement the Local Integration Process separately this is the&amp;nbsp;Local Integration Process for the Mail triggering if any Business logic/non-recoverable error occurs called by using process call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip2.png" style="width: 697px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285795i85B14D3622E34C66/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip2.png" alt="l1lip2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the content modifier like the below for mail triggering&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip2cm1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285801i88F68C1F014C0191/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip2cm1.png" alt="l1lip2cm1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Through process direct adapter call the mail triggering iflow&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip2processdir.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285804iCBB81ECE35FC195B/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip2processdir.png" alt="l1lip2processdir.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-3 : Implementing layer -2: publishing layer :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here in this layer the data which is coming from the layer 1 is published to the solace queues and in this layer there are multiple layer-2's like products layer2 ,suppliers layer2,books layer2 bases on the first layer the target 2nd layer been hitted.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Implementation:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Configure the Process direct sender adapter that is coming from the layer-1&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="layer2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285806i754DFB221444871C/image-size/large?v=v2&amp;amp;px=999" role="button" title="layer2.png" alt="layer2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2processdirect.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285813iC9BC2FB6DB5A2FF1/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2processdirect.png" alt="l2processdirect.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure the Advance Event Mesh adapter to publish the data into the solace queues, before configuring it make sure you had setup the solace credentials in the Security material that i had given in the part-2 of my blog series&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2aemq.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285807i085F908775E53A57/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2aemq.png" alt="l2aemq.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2aemq2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285808iF7E9F37A30C0DE50/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2aemq2.png" alt="l2aemq2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Setup the Exception handling for retry purpose&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2ex.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285809iC2E0965EFC5D7620/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2ex.png" alt="l2ex.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the Local Integration process for retry purpose&amp;nbsp; as same as the layer-1 above&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2lip1.png" style="width: 732px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285810i1F04D0EE85B899F7/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2lip1.png" alt="l2lip1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the Local Integration process for mail triggering as same like the layer -1 above&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2lip2.png" style="width: 702px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285811i2E9A319F0145CB4E/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2lip2.png" alt="l2lip2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you want to know how to implement Error handling using jms please refer my blog .&lt;/P&gt;&lt;P&gt;Link - [ &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/handling-connectivity-and-recoverable-errors-in-sap-cpi-with-jms-queues/ba-p/14137974" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/handling-connectivity-and-recoverable-errors-in-sap-cpi-with-jms-queues/ba-p/14137974&lt;/A&gt;&amp;nbsp;]&lt;/P&gt;&lt;P&gt;I would continue the Subscriber part in the part-5 Stay tuned!!!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-postman-to-solace-event-publishing-using-sap-cpi/ba-p/14151036"/>
    <published>2025-07-20T14:40:42.941000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-codejam-blog-posts/sap-integration-suite-codejam-roadshow-in-india-recap/ba-p/14157220</id>
    <title>SAP Integration Suite CodeJam roadshow in India - recap</title>
    <updated>2025-07-20T14:41:41.263000+02:00</updated>
    <author>
      <name>ajmaradiaga</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/107</uri>
    </author>
    <content>&lt;P&gt;What an eventful week it was! (No pun intended)..... Together with &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/149819"&gt;@ajay_soreng&lt;/a&gt;, we did one SAP CodeJam per day - 3 different cities (Mumbai, Hyderabad, and Bengaluru), 5 different locations, 3 different topics (SAP Integration Suite, SAP Build Process Automation, and SAP Integration Suite, advanced event mesh).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="roadshow-india-2025.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288924iA21D5296DD08DE86/image-size/medium?v=v2&amp;amp;px=400" role="button" title="roadshow-india-2025.jpg" alt="roadshow-india-2025.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Everything was planned to perfection but I had a mental misstep. I mistakenly thought that there was a visa on arrival when traveling to India when in reality it requires applying for an e-visa. Unfortunately, I only found this when I was doing my check-in - Saturday, exactly 12 hours before my flight, a bit late right? I immediately applied for an e-visa but given that it was a Saturday I had to wait till Monday for a resolution. Don't get me wrong, the e-visa process is really good and fast but you can't expect much when you end up applying for it too late.&lt;/P&gt;&lt;P&gt;The adventure only starts here...I joined the first event remotely, from Madrid. Once I receive the e-visa approval, I had 4.5 hours to catch the next plane leaving Madrid heading to India. The second event, I also joined it remotely, but this time from Abu Dhabi. The plane touched ground at 06:35, after going through security, I immediate started searching for a quiet place to join the 2nd CodeJam of the week. Fortunately, I found one :-). Straight after the event, I boarded a plane to Hyderabad - not kidding, I was walking to the gate as we were wrapping up the event. I closed my laptop a minute before boarding. Finally, I made it to Hyderabad Tuesday night and I was able to join the last three events in-person. I sincerely want to apologise to the attendees of the first two events as I wasn't able to be there in-person but it was great meeting you virtually; also, doing the event remotely would have not been possible if it wasn't for the great help and support from &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/149819"&gt;@ajay_soreng&lt;/a&gt;&amp;nbsp;and &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/141830"&gt;@Shilpa_Shankar&lt;/a&gt;&amp;nbsp;- Thanks to you both!&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;Apart from the physical badges (stickers) that many of the attendees got. All attendees of the different SAP CodeJams will get a special SAP Community badge for attending the events 🪪.&lt;/EM&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ajmaradiaga_0-1753258051332.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290168i3223E0E71ABE9A86/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="ajmaradiaga_0-1753258051332.png" alt="ajmaradiaga_0-1753258051332.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="badges.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288949iDCAE9AA760B637AA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="badges.jpg" alt="badges.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1864266143"&gt;Mumbai&lt;/H3&gt;&lt;P&gt;In Mumbai we did the Connecting systems and services using SAP Integration Suite CodeJam at Colgate office. Thanks Colgate for hosting!&lt;/P&gt;&lt;P&gt;We recently introduced a new exercise where we interact with Slack and send notifications from Cloud Integration to Slack. It was exciting to see many attendees posting their notifications even after the event finished.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Mumbai-1.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288929i384BD5F8C8E7B777/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mumbai-1.jpg" alt="Mumbai-1.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Mumbai-2.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288928i04D509A64CB2DAC2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mumbai-2.jpg" alt="Mumbai-2.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Mumbai3.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288927iA5B11035ADD14E96/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mumbai3.jpg" alt="Mumbai3.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-1667752638"&gt;Hyderabad&lt;/H3&gt;&lt;P&gt;In Hyderabad it was all about SAP Integration Suite, advanced event mesh. We ran the Event-driven integrations CodeJam at two different locations. Thanks Mindset and Infosys for hosting the events. I joined the first one remotely from Abu Dhabi and finally in-person for the second event.&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;H3 id="toc-hId-1471239133"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hyderabad-1-1.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288933i5B24B27EA761BB8A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hyderabad-1-1.jpg" alt="Hyderabad-1-1.jpg" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;H3 id="toc-hId-1274725628"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hyderabad-1-2.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288931iD9F8E12E1DAC89F1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hyderabad-1-2.jpg" alt="Hyderabad-1-2.jpg" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;H3 id="toc-hId-1078212123"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hyderabad-1-group.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288935i2B83F397436377F3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hyderabad-1-group.jpg" alt="Hyderabad-1-group.jpg" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;H3 id="toc-hId-881698618"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hyderabad-2-1.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288932i88B59183CE57810B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hyderabad-2-1.jpg" alt="Hyderabad-2-1.jpg" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;H3 id="toc-hId-685185113"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hyderabad-2-2.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288930iB6EC1E5C3CF9926E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hyderabad-2-2.jpg" alt="Hyderabad-2-2.jpg" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;H3 id="toc-hId-488671608"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hyderabad-2-3.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288934i4E9D25F58892EA3C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hyderabad-2-3.jpg" alt="Hyderabad-2-3.jpg" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-292158103"&gt;Bengaluru&lt;/H3&gt;&lt;P&gt;Last city part of the SAP Integration Suite CodeJam roadshow. At Bengaluru, we ran the new SAP Build: Event-based processes and also the Connecting systems and services with SAP Integration Suite CodeJams at SAP Labs Bengaluru and Mindset Consulting, thanks for hosting. We were fortunate enough to be joined by the entire SAP Developer Advocates team based in India (&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/142394"&gt;@sheenamk&lt;/a&gt;,&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/148298"&gt;@eshrinivasan&lt;/a&gt;,&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/156020"&gt;@Rekha_DR&lt;/a&gt;,&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/141830"&gt;@Shilpa_Shankar&lt;/a&gt;), as well as by &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/151637"&gt;@acharyaw&lt;/a&gt;&amp;nbsp;- PM for SAP Build Process Automation.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Bengaluru-1-1.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288937i424C8DEBEEC52FD0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bengaluru-1-1.jpg" alt="Bengaluru-1-1.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Bengaluru-1-2.jpg" style="width: 300px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288938i7163122E62A141B7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bengaluru-1-2.jpg" alt="Bengaluru-1-2.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="IMG_0665.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288943iDBAB2659C9AFBA8B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="IMG_0665.jpg" alt="IMG_0665.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Bengaluru-1-3.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288939i0B8E3AD187D5501F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bengaluru-1-3.jpg" alt="Bengaluru-1-3.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Bengaluru-2-2.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288940i06A58CFFDEEDDED5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bengaluru-2-2.jpg" alt="Bengaluru-2-2.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="IMG_5130.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288944iD682876580371C97/image-size/medium?v=v2&amp;amp;px=400" role="button" title="IMG_5130.jpg" alt="IMG_5130.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-95644598"&gt;Food&lt;/H3&gt;&lt;P&gt;Last but certainly not least... all the lovely food that we enjoyed as part of the roadshow. Thanks to all the hosts.... the food was amazing everywhere haha.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="food-1.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288948iB60C38BE728F12C8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="food-1.jpg" alt="food-1.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="food-2.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288946i30C1E6F5B2F6EFA8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="food-2.jpg" alt="food-2.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="food-3.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288950i56AF8720B3BD719A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="food-3.jpg" alt="food-3.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="food-4.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288951i6FA1BFE65EC8F9A5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="food-4.jpg" alt="food-4.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="food-5.jpg" style="width: 300px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288953i0A4E2306D32D693B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="food-5.jpg" alt="food-5.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="food-6.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288947iF92C4541653EFBFE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="food-6.jpg" alt="food-6.jpg" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Lots of lessons learned from the mental misstep and there might be cool things and opportunities coming up thanks to it. Also, this wouldn't have been possible without &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/149819"&gt;@ajay_soreng&lt;/a&gt;'s help organising the events and supporting me while I was remotely - Thanks!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/sap-codejam-blog-posts/sap-integration-suite-codejam-roadshow-in-india-recap/ba-p/14157220"/>
    <published>2025-07-20T14:41:41.263000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/improving-exception-handling-using-generative-ai-in-sap-cloud-integration/ba-p/14157298</id>
    <title>Improving Exception Handling using Generative AI in SAP Cloud Integration (SAP CI/CPI)</title>
    <updated>2025-07-20T22:13:28.565000+02:00</updated>
    <author>
      <name>adarshrao_rao</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/882299</uri>
    </author>
    <content>&lt;P&gt;When it comes to integrating different systems within a business, SAP Cloud Integration (SAP CI/CPI) capability in Integration Suite Service of SAP BTP is a go-to tool. However, as these integrations become more complex, handling exceptions - errors and issues, efficiently becomes increasingly important. Generative AI can help businesses tackle these challenges by automating error detection and providing useful insights. Here’s what you can gain from using AI:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;User - Friendly Error Messages&lt;/STRONG&gt;: Sender systems can receive clear, simple error messages that anyone can understand, not just tech experts.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Better Monitoring&lt;/STRONG&gt;: You can see these user-friendly error message logs in SAP CI/CPI dashboards, making it easier to track and fix issues.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Identify Error Causes&lt;/STRONG&gt;: AI can help identify why an error occurred, offering a better understanding of the issue.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Suggest Solutions&lt;/STRONG&gt;: It can also suggest ways to address and fix the error.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Simplify Troubleshooting&lt;/STRONG&gt;: Both tech and non-tech staff can troubleshoot errors more easily.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Reduce Resolution Time&lt;/STRONG&gt;: Speed up the process of solving errors.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Prepare for the Future&lt;/STRONG&gt;: The insights gained can improve how errors are classified and handled in the future by agentic AIs in SAP BTP.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1735183649"&gt;1. Exception Handling&lt;/H2&gt;&lt;P&gt;There are two main ways to integrate AI into your error handling processes in SAP CI/CPI:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Exception Subprocess&lt;/STRONG&gt;: Incorporate Generative AI into an existing integration flow’s exception subprocess for smooth operation. &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/handle-exceptions-guidelines-basics?locale=en-US&amp;amp;q=handling+error" target="_self" rel="noopener noreferrer"&gt;Read More&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Common Exception Handling iFlow&lt;/STRONG&gt;: Set up a separate flow dedicated to handling exceptions, where you pass error information from the main flow for centralized handling. &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/outsource-exception-handling-into-separate-integration-flow?locale=en-US&amp;amp;q=common+error+handling" target="_self" rel="noopener noreferrer"&gt;Read More&lt;/A&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;In this example, I have used &amp;nbsp;exception subprocess approach within a simple integration flow and Google Gemini AI model.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_0-1753038949536.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288966iBC2882D3D965BC0A/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_0-1753038949536.png" alt="adarshrao_rao_0-1753038949536.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1538670144"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1342156639"&gt;2. Understanding Gen-AI Prompt Format and get API Key&lt;/H2&gt;&lt;P&gt;For Google Gemini, go to &lt;A href="https://aistudio.google.com/prompts/new_chat" target="_blank" rel="noopener nofollow noreferrer"&gt;https://aistudio.google.com/prompts/new_chat&lt;/A&gt; and click on Get API Key, Create API Key.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_1-1753038949539.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288967iBF9B7A104E0D596F/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_1-1753038949539.png" alt="adarshrao_rao_1-1753038949539.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_2-1753038949545.png" style="width: 631px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288968i9889286D348144CD/image-dimensions/631x470?v=v2" width="631" height="470" role="button" title="adarshrao_rao_2-1753038949545.png" alt="adarshrao_rao_2-1753038949545.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here, you can see the format of the request which is expected by Google Gemini API.&lt;/P&gt;&lt;H2 id="toc-hId-1145643134"&gt;3. Implementation Steps&lt;/H2&gt;&lt;P&gt;Following are the steps which I have implemented in Exception Subprocess&lt;/P&gt;&lt;P&gt;1. Content Modifer - Set APIKey &amp;amp; Gen-AI Prompt&lt;BR /&gt;To set the API key and content type as requested by Google Gemini&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_3-1753038949546.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288969i4D1FA3BC99C83904/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_3-1753038949546.png" alt="adarshrao_rao_3-1753038949546.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To set the required prompt format, I have created the below exchange properties and externalized it&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_4-1753038949548.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288970iB2A656592833DC0D/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_4-1753038949548.png" alt="adarshrao_rao_4-1753038949548.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Value stored in Gen AI prompt is&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{     "contents": [       {         "parts": [           {             "text": " You are an SAP Integration consultant skilled in troubleshooting in SAP Cloud Integration (CPI). Above error is persisting while sending the message from sender to receiver system. For this error, Please respond using the following format, with each section clearly separated by a single line break in a direct and professional tone: 1. User-Friendly Error Message: A one sentence error that can be easily understood by non-technical stakeholders 2. Possible Reasons for the Error: List common causes for encountering this error in SAP CPI integration scenarios. 3. Possible Steps to Resolve the Error: Provide possible troubleshooting steps to address the issue and potentially resolve it. 4. HTTP Response: Provide appropriate HTTP error code (numerical value only) to be sent to sender system. "            }         ]       }     ]   }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;&lt;U&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt;&lt;/U&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;All the values are externalized so that, different models like Microsoft Co-pilot or GTP 4 can be used.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;2. Groovy script – setGenAIPrompt&lt;/P&gt;&lt;P&gt;This script is used to get the error which is caught from the main integration process by the CamelExceptionCaught property, add this error in the prompt to get the tailored response from Gemini and set the prompt structure required by Gemini AI model.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message



def Message processData(Message message) {

    // Retrieve properties from the message

    def camelExceptionCaught = message.getProperty("CamelExceptionCaught")

    def genAIPrompt = message.getProperty("GenAIPrompt")

    def startPrompt = message.getProperty("StartPrompt")



    // Initialize updatedGenAIPrompt as null or empty, it'll be used to set message body eventually

    def updatedGenAIPrompt = null

   

    if (genAIPrompt &amp;amp;&amp;amp; startPrompt &amp;amp;&amp;amp; camelExceptionCaught) {

        // Find the position of startPrompt in genAIPrompt

        def startIndex = genAIPrompt.indexOf(startPrompt)



        if (startIndex != -1) {

            // Insert space and CamelExceptionCaught after StartPrompt

            updatedGenAIPrompt = genAIPrompt.substring(0, startIndex + startPrompt.length()) +

                                 " " +

                                 camelExceptionCaught +

                                 genAIPrompt.substring(startIndex + startPrompt.length())

                                

            // Set the updatedGenAIPrompt back to a message property

            message.setProperty("UpdatedGenAIPrompt", updatedGenAIPrompt)

        }

    }

   

    if (updatedGenAIPrompt != null) {

        // Set the modified prompt as the message body

        message.setBody(updatedGenAIPrompt)

    }

   

    return message

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Request Reply - Call Google Gemini&lt;/P&gt;&lt;P&gt;I have use HTTP adapter to call Google Gemini&lt;BR /&gt;URL: &lt;A href="https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent" target="_blank" rel="noopener nofollow noreferrer"&gt;https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_5-1753038949550.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288971i460BFCF5B4A5CCA3/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_5-1753038949550.png" alt="adarshrao_rao_5-1753038949550.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4. Groovy script – captureGenAIResponse&lt;/P&gt;&lt;P&gt;This groovy script is used to capture Custom Error, Possible reason and Possible solution for the error from Gen AI response. Also, handle the errors caused if generative AI is not reachable&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message

import groovy.json.JsonSlurper



def Message processData(Message message) {

    // Retrieve properties

    def captureCustomErrorKey = message.getProperty("CaptureCustomError")

    def capturePossibleReasonKey = message.getProperty("CapturePossibleReason")

    def capturePossibleSolutionKey = message.getProperty("CapturePossibleSolution")

    def captureHTTPCodeKey = message.getProperty("CaptureHTTPCode")  // This should be "HTTP Response:"



    // Get the message body and parse it as JSON

    def payload = message.getBody(String)

    def jsonSlurper = new JsonSlurper()



    // Initialize extracted values

    def extractedCustomErrorMessage = null

    def extractedPossibleReason = null

    def extractedPossibleSolution = null

    def extractedPHTTPCode = null



    try {

        // Try parsing the JSON

        def parsedJson = jsonSlurper.parseText(payload)

       

        // Extract the text section from the JSON

        def textContent = parsedJson.candidates[0]?.content?.parts[0]?.text



        if (textContent) {

            // Log the text content to verify structure

            messageLogFactory.getMessageLog(message)?.addAttachmentAsString("Text Content", textContent, "text/plain")



            // Extract values based on keys

            extractedCustomErrorMessage = extractValueFollowingKey(textContent, captureCustomErrorKey)

            extractedPossibleReason = extractValueFollowingKey(textContent, capturePossibleReasonKey)

            extractedPossibleSolution = extractValueFollowingKey(textContent, capturePossibleSolutionKey)



            // Specifically extract the HTTP response code after "HTTP Response:"

            extractedPHTTPCode = extractHTTPResponseCode(textContent, captureHTTPCodeKey)

        }

    } catch (Exception e) {

        // Log exception and proceed with null outputs

        messageLogFactory.getMessageLog(message)?.addAttachmentAsString("Exception", e.toString(), "text/plain")

    }



    // Handle extraction results

    message.setProperty("ExtractedCustomErrorMessage", extractedCustomErrorMessage)

    message.setProperty("ExtractedPossibleReason", extractedPossibleReason)

    message.setProperty("ExtractedPossibleSolution", extractedPossibleSolution)

    message.setProperty("ExtractedPHTTPCode", extractedPHTTPCode)

   

    // Set HTTP Code as the message body for demonstration; it will be null if extraction fails

    message.setBody(extractedPHTTPCode)



    return message

}



// Function to extract value that follows a given key in the text content

def extractValueFollowingKey(String textContent, String key) {

    if (key) {

        def keyIndex = textContent.indexOf(key)

        if (keyIndex != -1) {

            def startIndex = keyIndex + key.length()

            if (startIndex != -1) {

                def endIndex = textContent.indexOf("\n\n", startIndex)

                endIndex = endIndex != -1 ? endIndex : textContent.length()



                def extractedText = textContent.substring(startIndex, endIndex).trim()

                extractedText = extractedText.replaceAll('\\*', '')  // Clean up undesired characters

                return extractedText

            }

        }

    }

    return null

}



// Specific extraction utility for HTTP Code.

def extractHTTPResponseCode(String textContent, String key) {

    if (key) {

        def keyIndex = textContent.indexOf(key)

        if (keyIndex != -1) {

            def startIndex = keyIndex + key.length()

            if (startIndex != -1) {

                // Find the end, which is the next newline after the code and description

                def endIndex = textContent.indexOf("\n", startIndex)

                endIndex = endIndex != -1 ? endIndex : textContent.length()



                return textContent.substring(startIndex, endIndex).trim()

            }

        }

    }

    return null

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;5. Content Modifier - Set Content Type for Error Response&lt;/P&gt;&lt;P&gt;In this content modifier the header Content-Type is explicitly set if the error response needs to be sent to the sender system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_6-1753038949551.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288972i59DE40D618C2F062/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_6-1753038949551.png" alt="adarshrao_rao_6-1753038949551.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6. Groovy Script – generateErrorResponse&lt;/P&gt;&lt;P&gt;This script is used to log the custom error in the error log, create custom headers and generate an error response if the sender system needs it. I have implemented all the three in this script to show that it is possible.&lt;/P&gt;&lt;P&gt;Based on your requirement, custom error log or custom header or error response can be set.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message



def Message processData(Message message) {

    // Retrieve properties

    def camelExceptionCaught = message.getProperty("CamelExceptionCaught")

    def extractedCustomErrorMessage = message.getProperty("ExtractedCustomErrorMessage")

    def extractedPossibleReason = message.getProperty("ExtractedPossibleReason")

    def extractedPossibleSolution = message.getProperty("ExtractedPossibleSolution")

    def extractedPHTTPCode = message.getProperty("ExtractedPHTTPCode")



    // Set the CamelHttpResponseCode header

    if (extractedPHTTPCode) {

        message.setHeader("CamelHttpResponseCode", extractedPHTTPCode)

    }



    // Create custom headers

    def messageLog = messageLogFactory.getMessageLog(message)

    if (messageLog != null) {

        messageLog.addCustomHeaderProperty("CustomError", extractedCustomErrorMessage ?: "No custom error message available.")

        messageLog.addCustomHeaderProperty("PossibleReason", extractedPossibleReason ?: "No possible reason available.")

        messageLog.addCustomHeaderProperty("PossibleSolution", extractedPossibleSolution ?: "No possible solution available.")

    }



    // Attach extracted values as message attachments

    def possibleReasonAttachment = extractedPossibleReason ?: "No possible reason available."

    def possibleSolutionAttachment = extractedPossibleSolution ?: "No possible solution available."

   

    if (messageLog != null) {

        messageLog.addAttachmentAsString("PossibleReason", possibleReasonAttachment, "text/plain")

        messageLog.addAttachmentAsString("PossibleSolution", possibleSolutionAttachment, "text/plain")

    }



    // Create dynamic response in XML format

    def responseXml = """&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;

&amp;lt;Error_Response&amp;gt;

    &amp;lt;SystemError&amp;gt;${camelExceptionCaught}&amp;lt;/SystemError&amp;gt;

    &amp;lt;CustomError&amp;gt;${extractedCustomErrorMessage ?: "No custom error message available."}&amp;lt;/CustomError&amp;gt;

    &amp;lt;PossibleReason&amp;gt;${extractedPossibleReason ?: "No possible reason available."}&amp;lt;/PossibleReason&amp;gt;

    &amp;lt;PossibleSolution&amp;gt;${extractedPossibleSolution ?: "No possible solution available."}&amp;lt;/PossibleSolution&amp;gt;

&amp;lt;/Error_Response&amp;gt;"""



    // Set XML response as the message body

    message.setBody(responseXml)





if (camelExceptionCaught) {

        throw new Exception("\nSystem Error: ${camelExceptionCaught}\nCustom Error from GenAI: ${extractedCustomErrorMessage ?: 'No custom error message available.'}")

    }



    return message

}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-949129629"&gt;5. Testing&lt;/H2&gt;&lt;P&gt;To test, I am using an API client Bruno, which will mimic the sender system. I have maintained the receiver system URL as &lt;A href="http://sample.com" target="_blank" rel="noopener nofollow noreferrer"&gt;http://sample.com&lt;/A&gt;. So, the message will fail because it is not a valid URL.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_0-1753041124487.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288990i37656FA3E35862AC/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_0-1753041124487.png" alt="adarshrao_rao_0-1753041124487.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;1. Triggering the iflow from Bruno as shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_7-1753038949552.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288974iBDFDD5C97258E7F1/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_7-1753038949552.png" alt="adarshrao_rao_7-1753038949552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.&amp;nbsp; Without Exception Handling using Gen AI, I get the response as below in Bruno as shown below&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_8-1753038949552.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288973i97EAFCB3DDA4BF77/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_8-1753038949552.png" alt="adarshrao_rao_8-1753038949552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. In the iFlow, I have checked Return Exception to Sender under Error Configuration&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_9-1753038949553.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288975i4AEAA92853922641/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_9-1753038949553.png" alt="adarshrao_rao_9-1753038949553.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4. Now, with Exception Handling using Gen AI, I get the response in Bruno as shown below&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_10-1753038949554.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288977i7669DA012F9293C0/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_10-1753038949554.png" alt="adarshrao_rao_10-1753038949554.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. In Cloud Integration Message Monitoring we see that the message is in error&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_11-1753038949555.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288976i237CAC7C65B49FCB/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_11-1753038949555.png" alt="adarshrao_rao_11-1753038949555.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;6. Error log is as shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_12-1753038949557.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288978i90CBBCDD64DD9B4F/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_12-1753038949557.png" alt="adarshrao_rao_12-1753038949557.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;7. Custom Headers are successful set with Custom Error, Possible Reason and Possible Solution as shown below&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_13-1753038949559.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288980iBA66864E371C0162/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_13-1753038949559.png" alt="adarshrao_rao_13-1753038949559.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;8. Attachments are also set with Possible Reason and Possible Solution as shown below&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_14-1753038949561.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288979i0BBACD85C72B0099/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_14-1753038949561.png" alt="adarshrao_rao_14-1753038949561.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_15-1753038949563.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288981iD95F690D8E4F6E07/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_15-1753038949563.png" alt="adarshrao_rao_15-1753038949563.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_16-1753038949566.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288982i6175A8EA7C72658D/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_16-1753038949566.png" alt="adarshrao_rao_16-1753038949566.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9. If you have a requirement to send the error response with not just custom error from Gen AI but sending possible reason and solution then set the event in the Exception Subprocess as End Message. The only downside is the message in Cloud Integration will be end with status Completed rather than Error.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_17-1753038949567.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288983i970E4AB7AE6FEACB/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_17-1753038949567.png" alt="adarshrao_rao_17-1753038949567.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Go to Groovy Script - generateErrorResponse and comment the lines 46, 47 and 48 which was done to throw custom exception as shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_18-1753038949567.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288985i5C433E02AD507DF2/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_18-1753038949567.png" alt="adarshrao_rao_18-1753038949567.png" /&gt;&lt;/span&gt;In the script, I am setting the appropriate HTTP code for CamelHttpResponseCode from Google Gemini response.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_19-1753038949568.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288984i4FB20C444BA295A8/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_19-1753038949568.png" alt="adarshrao_rao_19-1753038949568.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;10. When the message is triggered, we can see that the error response is received in Bruno with correct HTTP response code as shown below.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_20-1753038949574.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288986i2F379F13D938CB7D/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_20-1753038949574.png" alt="adarshrao_rao_20-1753038949574.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;11. If the correct response code is not set from Google Gemini, then HTTP 200 is received in sender system which will be incorrect, and we can’t identify if the message failed or not without opening the response message&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_21-1753038949576.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288987i5EB710143ECB1B9A/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_21-1753038949576.png" alt="adarshrao_rao_21-1753038949576.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_22-1753038949580.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288989i5F1B3810894EA049/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_22-1753038949580.png" alt="adarshrao_rao_22-1753038949580.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;12. Now, if there is an issue with reaching Generative AI then it is handled in Groovy Scripts. For testing, I will use incorrect URL&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_23-1753038949583.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288988iB33A6C87CF1C1C78/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_23-1753038949583.png" alt="adarshrao_rao_23-1753038949583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-752616124"&gt;6. Conclusion&lt;/H2&gt;&lt;P&gt;In this blog, I have tried to provide an overview of how we can make use of Generative AI for Exception Handling in SAP Cloud Integration. Of course, the exception subprocess can be improved and tailored as per the requirement in your integration landscape.&lt;/P&gt;&lt;P&gt;Generative AI offers a new way to handle errors in SAP CI/CPI by automating processes that would typically take much longer. By enhancing error handling, businesses can reduce downtime and improve overall efficiency. With the technology constantly advancing, using AI in exception handling can help businesses stay ahead of the curve, making their operations more reliable. Through simple implementation steps, regular testing, and adapting based on feedback, businesses can fully leverage AI for a smarter, more resilient future.&lt;/P&gt;&lt;H2 id="toc-hId-556102619"&gt;7. Additional Read&lt;/H2&gt;&lt;P&gt;Exception Handling in SAP CPI : &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/handle-errors-gracefully?locale=en-US&amp;amp;q=handling+error" target="_self" rel="noopener noreferrer"&gt;SAP Help&lt;/A&gt;&lt;/P&gt;&lt;P&gt;I invite you to share your thoughts in the comments below. Whether you have questions about using generative AI for exception handling, experiences to share, or suggestions for improvement, your feedback is invaluable. It helps others who are navigating similar journeys and contributes to a community of shared knowledge. I look forward to hearing from you!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/improving-exception-handling-using-generative-ai-in-sap-cloud-integration/ba-p/14157298"/>
    <published>2025-07-20T22:13:28.565000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/demo-accessing-sap-with-generative-ai-in-microsoft-teams/ba-p/14150831</id>
    <title>Demo: Accessing SAP with Generative AI in Microsoft Teams</title>
    <updated>2025-07-21T03:13:01.221000+02:00</updated>
    <author>
      <name>prakashsaurav</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/12784</uri>
    </author>
    <content>&lt;P&gt;In this demo, we showcase how to bring SAP data closer to your teams by combining the power of Generative AI, Microsoft Copilot Studio, and Teams. Using SAP OData services exposed via SAP BTP Integration Suite, we build an intelligent Copilot agent that lets users retrieve sales orders, products, customers, and suppliers — all through simple natural language conversations. Whether it’s in Teams or Microsoft 365 Copilot, see how you can seamlessly access and interact with your SAP backend data, improving efficiency and transforming user experience.&lt;/P&gt;&lt;P&gt;&lt;A href="https://aditheos.com/2025/06/26/simplifying-sap-access-with-gen-ai-built-on-copilot-studio-integrated-via-sap-btp-azure-apim-delivered-in-teams-copilot/" target="_blank" rel="noopener nofollow noreferrer"&gt;Step by Step Implementation&lt;/A&gt;&amp;nbsp; &amp;nbsp;&lt;BR /&gt;Access complete source code @&amp;nbsp;&lt;A href="https://github.com/aditheos/SalesAI" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FgdxKP7GCMn8%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DgdxKP7GCMn8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FgdxKP7GCMn8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="486" height="273" scrolling="no" title="Simplifying SAP Access with Gen AI | SAP BTP + Microsoft Copilot Studio Demo" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/demo-accessing-sap-with-generative-ai-in-microsoft-teams/ba-p/14150831"/>
    <published>2025-07-21T03:13:01.221000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/integration-advisor-multi-payload-support-for-mig-creation/ba-p/14151474</id>
    <title>Integration Advisor – multi-payload support for MIG creation</title>
    <updated>2025-07-21T09:34:44.613000+02:00</updated>
    <author>
      <name>Joerg_Ackermann</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/671194</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Today I would like to share with you another new feature: When creating a Message Implementation Guideline (MIG) based on payload, you can now supply multiple payloads and all payloads are considered together by the application. &lt;/SPAN&gt;&lt;SPAN&gt;In this blog post I will provide a short description of this new feature.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Joerg_Ackermann_0-1752477512988.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286051i1E2974BD02D1CE55/image-size/large?v=v2&amp;amp;px=999" role="button" title="Joerg_Ackermann_0-1752477512988.jpeg" alt="Joerg_Ackermann_0-1752477512988.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The picture before depicts the overall building blocks of Integration Advisor (of SAP Integration Suite). This blog post mainly relates to the Message Implementation Guideline area.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1080201607" id="toc-hId-1735006759"&gt;Short recap: Payload-based creation of MIGs&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Earlier this year I had shared with you a larger extension of our payload-based MIG Creation feature. With the extended feature you were able to provide a single payload and choose the MIG nodes that shall get automatically qualified. As a result,&amp;nbsp;&lt;/SPAN&gt;each qualifier value&amp;nbsp; present in the payload will create its own qualification variant in your MIG. Moreover, all nodes present in your payload will get automatically selected and example values are created based on the payload. For more details, please see my earlier blog post:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-payload-based-qualification-at-time-of-mig-creation/ba-p/13990599" target="_self"&gt;Link&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;By the way, this blog post also discussed in detail when you should qualify a MIG node in your MIG structure and when it is better not to qualify.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-883688102" id="toc-hId-1538493254"&gt;MIG Creation with multiple payloads&lt;/H2&gt;&lt;P&gt;It quite frequently occurs that not all nodes or all qualification variants are present in only one payload. In order to use our payload-based MIG creation in the past, you needed to choose the best fitting payload for automatic consideration and afterwards add missing pieces manually.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now we have extended our payload-based MIG generation to also support multiple payloads. In the step&amp;nbsp;&lt;EM&gt;Sample Payload&lt;/EM&gt;&amp;nbsp; of the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;Create Message Implementation Guideline&lt;/EM&gt;&amp;nbsp;wizard you can provide a ZIP file containing multiple payloads.&amp;nbsp;&lt;SPAN&gt;Refer next screenshot for an illustration.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="screenshot1.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286126i949D48FE4D7D4182/image-size/large?v=v2&amp;amp;px=999" role="button" title="screenshot1.jpg" alt="screenshot1.jpg" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Keep in mind the following technical details:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The ZIP file can have a maximum size of 10MB and up-to 25 payloads will be considered.&lt;/LI&gt;&lt;LI&gt;The options &lt;EM&gt;SAP Cloud Integration&lt;/EM&gt; and &lt;EM&gt;SAP Process Integration&lt;/EM&gt; expect XML files as input.&lt;/LI&gt;&lt;LI&gt;The third option &lt;EM&gt;EDI Flat File&lt;/EM&gt; is only available for EDI Type Systems (like ASC X12 or UN/EDIFACT) and requires TXT files.&lt;/LI&gt;&lt;LI&gt;Your ZIP archive might contain other files types (like PDF,&amp;nbsp; XSD etc.) - these are simply ignored.&lt;/LI&gt;&lt;LI&gt;Your ZIP archive might come with subfolders and all suitable files are extracted from the complete archive.&lt;/LI&gt;&lt;LI&gt;Additionally, the extracted payload files (XML or TXT files depending on your choice) must fit to the Message Type for which you want to create your new MIG. Otherwise these payload files can't be considered.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="screenshot2.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286127i2A527E1AF0E2D57B/image-size/large?v=v2&amp;amp;px=999" role="button" title="screenshot2.jpg" alt="screenshot2.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The MIG Creation wizard now finishes with a pop-up window that summarizes which payloads were successfully applied and which payload files in the ZIP archive were not suitable. For an example refer the screenshot above.&lt;/P&gt;&lt;H2 id="toc-hId-687174597" id="toc-hId-1341979749"&gt;Result of the MIG Creation&lt;/H2&gt;&lt;P&gt;All the (successfully processed) payloads will contribute to the automatic customization of your new MIG. More specifically:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Qualified nodes: If you have chosen the automatic qualification for a node (in step &lt;EM&gt;Select Nodes&lt;/EM&gt; of the MIG creation wizard), each qualifier value&amp;nbsp; present in at least one of the payloads will create its own qualification variant.&lt;/LI&gt;&lt;LI&gt;Selection of nodes: A&amp;nbsp;node will automatically get selected in your MIG if the node is used in at least one of your payloads.&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Please note that the option to add Example Values is not available in case of multiple payloads because input from several payloads can't be combined to auto-generate the MIG Example Payload in a meaningful way.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-490661092" id="toc-hId-1145466244"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;With this feature extension you can benefit from the payload-based MIG creation even more as it allows you to build your Message Implementation Guidelines (MIGs) faster and with less manual effort.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-294147587" id="toc-hId-948952739"&gt;&lt;STRONG&gt;Further reading&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/integration-advisor-overview-of-components-for-building-b2b-integration/ba-p/13512772" target="_blank"&gt;https://community.sap.com/t5/technology-blogs-by-sap/integration-advisor-overview-of-components-for-...&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/integration-content-advisor-create-a-customized-interface-using-mig-editor/ba-p/13354699" target="_blank"&gt;https://community.sap.com/t5/technology-blogs-by-sap/integration-content-advisor-create-a-customized...&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-payload-based-qualification-at-time-of-mig-creation/ba-p/13990599" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-payload-based-qualification-at-time-of-mig-creation/ba-p/13990599&lt;/A&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/integration-advisor-multi-payload-support-for-mig-creation/ba-p/14151474"/>
    <published>2025-07-21T09:34:44.613000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/comparison-between-sap-cpi-and-mulesoft/ba-p/14157376</id>
    <title>Comparison between SAP CPI and Mulesoft</title>
    <updated>2025-07-21T13:19:29.990000+02:00</updated>
    <author>
      <name>stephen_xue</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/214851</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1606101827"&gt;Introduction&lt;/H1&gt;&lt;P&gt;Mulesoft Anypoint Platform is a middleware platfom acquired by Salesforce. It has been widely used in many industries. On the other hand, SAP has its Integration Suite Platform based on the BTP and it's purely on premise middleware product SAP PI/PO. What are the advantages and disadvantages of SAP middleware products? How do these characteristics impact the project implementation? Which middleware should we choose for a certain project solution? I'd like to make a comparison between them from the following aspects as a developer. The content can be a reference to the architects, or presales. and If you have any other opionions or coents, happy to leave behind. These are the aspects to be compared:&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Middleware Product Architecture, on cloud or on premise&lt;/LI&gt;&lt;LI&gt;Centra ERP System&lt;/LI&gt;&lt;LI&gt;Suitable Implementation Methodology&lt;/LI&gt;&lt;LI&gt;API Management Coupling&lt;/LI&gt;&lt;LI&gt;Design and Development&lt;/LI&gt;&lt;LI&gt;Debug tool for Development&lt;/LI&gt;&lt;LI&gt;Logging and Alert&lt;/LI&gt;&lt;LI&gt;Unit Test Tool&lt;/LI&gt;&lt;LI&gt;Mapping technique Complexity&lt;/LI&gt;&lt;LI&gt;Connector Diversity&lt;/LI&gt;&lt;LI&gt;DevOps Supporting Tool&lt;/LI&gt;&lt;LI&gt;Authentication and Authorization&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1409588322"&gt;Comparison&lt;/H1&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-1342157536"&gt;Middleware Product Architecture, on cloud or on premise&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The middleware Mulesoft consists of The Mulesoft Anypoint Studio and Mulesoft Anypoint Platform.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_1-1753074889983.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289024iDA62E7AD88B8C4DE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_1-1753074889983.png" alt="stephen_xue_1-1753074889983.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The Mulewoft Anypoint Studio is a local app installed on the local machine. It is the main development tool of Mulesoft.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_2-1753075185987.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289025iB8DB142C08D3A626/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_2-1753075185987.png" alt="stephen_xue_2-1753075185987.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The Mulesoft Anypoint Platform is a cloud based product on the internet. It is the main design tool and runtime tool of Mulesoft.&amp;nbsp; The development UI is purely browser based.&amp;nbsp;&lt;/P&gt;&lt;P&gt;SAP Integration Suite is a service within the BTP which is purely on the cloud and web browser based. SAP CPI is the main development tool and SAP API Management is the main design tool. They are different subcomponents inside the integration suite. SAP Integration Suite is on the internet.&lt;/P&gt;&lt;P&gt;SAP PI/PO is a on premise product, which is now, after version 7.31(if my memory is correct) a purely java-based software. It is a server installed locally in the client's intronet. According to current SAP office&amp;nbsp;announcements, it will stop provide support to SAP PI/PO by the end of year 2027. If you are still using the product in your landscape, it is time to look for its substitution now.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-1145644031"&gt;Centra ERP System&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Mulesoft is a product of Salesforce and it has&amp;nbsp;sophisticated connectors for Salesforce operations. Therefore, if your centra ERP system is salesforce, Mulesoft should be the best option of the middleware. While SAP CPI is a SAP product of course, if your centra ERP system is S4HANA or its previous versin ECC, SAP CPI should be the most convenient middleware to be chosen.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Since Salesforce is a cloud product on the internet, I would say that, SAP CPI still provide a good support to Salesforce as well as long as the relevant service or interface can be easily exposed by means of restful API or SOAP based API. On the other hand, it should be the same convenient for the Mulesoft to integrate with S4HANA on cloud. Whereas if it is S4HANA on premise or on RISE, things become another story. Without the SAP Cloud Connector, all of the interfaces( proxy, idoc, odata) of S4HANA on premise can only be connected once the firewall has been opened up. You probably needs to setup a DMZ(Demilitarized zone) in your network. Anyway it will largely increase the effort of cyber team or basis. This is normally used if the middleware if SAP PI/PO however. Good thing is , it will become a history soon.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_3-1753076639148.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289027iA8F379BAA0B05E21/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_3-1753076639148.png" alt="stephen_xue_3-1753076639148.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;SAP Cloud Connector is a very powerful tool for any SAP on-premise product integration. It is a big advantage to the SAP integration Suite or SAP CPI.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;What if the centra ERP system is something other than a SAP product or Salesforce? Please go though the following comparison.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-949130526"&gt;Suitable Implementation Methodology&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;According to Mulesoft API lifecycle, we can see that the Mule implementation is highly compatible with the Agile Development Process.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_1-1753077226677.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289028i0D9849A62EC50CAD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_1-1753077226677.png" alt="stephen_xue_1-1753077226677.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Both SAP Integration Suite and SAP PI/PO is more suitable for waterflow development process, according to my experience. In some of projects I participated, they used Agile mode for SAP CPI or SAP PI/PO development as well. It has a scrum master, a product owner, a tester and an integration developer in a group and has daily morning standup etc. Whereas I cannot see any benifits of this approach to be honest.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-752617021"&gt;API Management Coupling&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In the modern age, a middleware product should provide a platform for API Management, including authentication, quota controlling, XML/JSON threat protection etc. This is a limitation of SAP PI/PO, which has no such function.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Mulesoft Anypoint Platform has a component called API Manager, which provides policy based API management mechnism.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_2-1753078331714.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289030i87C48BE0B672B696/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_2-1753078331714.png" alt="stephen_xue_2-1753078331714.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;However the process to expose an interface as an API is not very straightforward, it needs some extra configurations in the global configuration of anypoint studio.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_3-1753078451288.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289031iD446736F01E0F77C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_3-1753078451288.png" alt="stephen_xue_3-1753078451288.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For SAP Integration suite, it has an component called API Management.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_4-1753078577179.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289033iE120CB9032D0F65C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_4-1753078577179.png" alt="stephen_xue_4-1753078577179.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It doesn't need any extra steps in the SAP CPI to connect the API proxy. On the other hand, the SAP API Management can retrieve OData v2 metadata from S4 backend directly via the catelog service. The SAP API management is based on APIGee and it is policy based as well. It provides OAuth v2 token generating service which is better than Mulesoft API Management from my feeling.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-556103516"&gt;Design and Development&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;In Mulesoft development, you can design the API by using YAML in the 'design center' of the Anypoint Platform.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_5-1753078912698.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289035i9A35362481ECD197/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_5-1753078912698.png" alt="stephen_xue_5-1753078912698.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The API document is generated automatically. More intesting is, once the designed content has been uploaded to 'Exchange', the Anypoint Platform can generate the process flow automatically for the Anypoint Studio. The means the development in Mulesoft is closely linked to its design content.&lt;/P&gt;&lt;P&gt;In SAP Integration Suite, the design tool inside the API Management provides a sort of swagger view by using OpenAPI script as below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_0-1753087280569.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289128i776E0510623535E6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_0-1753087280569.png" alt="stephen_xue_0-1753087280569.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once configured with relevant target URL and proxy URL, it can be connected with any services including any SAP CPI services exposed, or even the OData services from S4 HANA on premise. However the designed API proxy has no direct connection to the CPI iflows developed. In other words, the development of SAP CPI and design of API in the SAP API Management are two separated steps.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-359590011"&gt;Debug tool for Development&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In the Mulesoft Anypoint Studio, you can setup breakpoint inside any steps of a flow. The flow will stop at breakpoint once the endpoint has been triggered. Almost all veriables, message body, headers can be viewed in the debug mode just like debugging a program.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_1-1753087892553.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289135i2CDE592E9FE33087/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_1-1753087892553.png" alt="stephen_xue_1-1753087892553.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In SAP CPI,&amp;nbsp; you can set an iflow into 'Trace' mode.&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_5-1753088131409.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289139i8871498F0ECB9DE6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_5-1753088131409.png" alt="stephen_xue_5-1753088131409.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once done and the iflow has been triggered, the framework stored all message header/body information of each step.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_6-1753088333882.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289143i1B4998315010B7D9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_6-1753088333882.png" alt="stephen_xue_6-1753088333882.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;At the same time, SAP CPI provides a simulation tool by which you can test maximum 10 steps of an iflow, excluding any external calls.&amp;nbsp;&lt;/P&gt;&lt;P&gt;However, you cannot stop the process in form of breakpoint in the SAP CPI.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-163076506"&gt;Logging and Alert&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Mulesoft provides standard 'Logger' Step for writing any logs to the console. The statement inside Logger is DataWeave-compatible. DataWeave is the Mulesoft embeded script language.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_0-1753090554684.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289188i22E351B2B830F0FD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_0-1753090554684.png" alt="stephen_xue_0-1753090554684.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the Runtime Manager of the Mulesoft Anypoint Platform, it has the alert repository tool in which the alert can be configured.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_1-1753090816257.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289192i763BBC8162F6BACB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_1-1753090816257.png" alt="stephen_xue_1-1753090816257.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once configured, it can be linked to any application inside the Exchange.&lt;/P&gt;&lt;P&gt;For SAP CPI, there is no native alert step. People normally use the combination of the exception handling process and SMTP receiver adapter to imitate the alert notification. Meanwhile, the SAP BTP provides an alert notification service, which is not straightforward and a bit hard to use in the SAP CPI so far as I know.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_2-1753091107970.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289195i80AA7B4C77BDB9B1/image-size/small?v=v2&amp;amp;px=200" role="button" title="stephen_xue_2-1753091107970.png" alt="stephen_xue_2-1753091107970.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;BTP alert notification service is not quite convenient to be used for SAP CPI iFlows.&lt;/P&gt;&lt;P&gt;My feeling is the the alert of SAP PI/PO is even better than SAP CPI with regard to the configuration.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId--33436999"&gt;Unit Test Tool&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The Mulesoft Anypoint Studio provides MUnit and Munit Tools on the flow level. The component can be used to setup different unit test cases which is suitable for the Agile Development Standard.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_3-1753091523937.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289200iB274E1D1BF77C98C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_3-1753091523937.png" alt="stephen_xue_3-1753091523937.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;SAP CPI has no native unit test tool. The embeded simulation tool can be used to test steps inside and external API test tools like POSTMAN can be used to conduct system integration test. Whereas this is different from the concept of Unit Test and there is no step to check if the outcome is correct or not.&lt;/P&gt;&lt;P&gt;SAP CPI does provide a connectivity test tool which is very handy. It provides a tool to check connection over HTTPS, SMTP, SFTP etc.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_4-1753091937495.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289211i86193D8ED61DBE86/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_4-1753091937495.png" alt="stephen_xue_4-1753091937495.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId-117303853"&gt;Mapping Technique Complexity&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The Mulesoft Anypoint Studio has two main mapping methods:&lt;/P&gt;&lt;H3 id="toc-hId--372612659"&gt;Graphic Mapping&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_5-1753092160629.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289221i4CC1C3B467545CC0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_5-1753092160629.png" alt="stephen_xue_5-1753092160629.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--569126164"&gt;DataWeave&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_6-1753092245659.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289222iE9D10CEE6E327BE1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_6-1753092245659.png" alt="stephen_xue_6-1753092245659.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It has a specific 'Transform Message' step which is for mapping and almost all of the native steps do contain a mapping step inside as well. All of these embedded mapping steps are compatible with DataWeave script. Since DataWeave is the Mulesoft build-in script, it has a relative good performance and provides a powerful functionalily for any different message format including XML, JSON, CSV etc. and the script is similar to the natual language which is not hard to master.&lt;/P&gt;&lt;P&gt;For SAP CPI, it normally supports three different types of Mapping:&lt;/P&gt;&lt;H3 id="toc-hId--765639669"&gt;Graphical Mapping&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_7-1753092505226.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289223iE7C9E92DAB3E6E54/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_7-1753092505226.png" alt="stephen_xue_7-1753092505226.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--962153174"&gt;XSLT Mapping&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_8-1753092588618.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289224iD912DF17800EDE9C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_8-1753092588618.png" alt="stephen_xue_8-1753092588618.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1158666679"&gt;Groovy Script Mapping&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_9-1753092648826.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289226iF9BE9DEA557E53AA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_9-1753092648826.png" alt="stephen_xue_9-1753092648826.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;SAP CPI iflow supports javascript as well. whereas i just do not know that very few cases are using the Javascript as the mapping script.&amp;nbsp;&lt;/P&gt;&lt;P&gt;For SAP PI/PO, it supports graphical mapping, xslt mapping and java mapping.&amp;nbsp;&lt;/P&gt;&lt;P&gt;The graphical mapping is normally to beginner which is easy to understand and suitable for relative simple mapping logic. However it is a bit hard to deal with context change. One of the limitation is that it only supports XML message.&lt;/P&gt;&lt;P&gt;The XSLT mapping is the industry standard for XML transformation. For sophisticated developer, it can be used to transform messages into JSON or CSV. However since it is a sort of recursion and&amp;nbsp;&lt;SPAN&gt;declarative language, bad programming skill may impact the overall performance.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The groovy script is the recommended mapping method in SAP CPI. However since it is a open standard programming language, which is lack of any system native performance tuning, any bad programming habit may impact the process performance as well.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId--1061777177"&gt;Connector Diversity&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;For Mulesoft Anypoint Studio, there are hundreds of connectors available, including ones for popular SaaS applications like SAP and Salesforce, cloud services in AWS and Azure, and databases using open protocols like ODBC and JDBC. Furthermore, MuleSoft Exchange offers over 250 out-of-the-box connectors.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_10-1753093755619.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289255i88450F80ADE3EF2A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_10-1753093755619.png" alt="stephen_xue_10-1753093755619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Please be aware that , Mulesoft connector for third party systems, like SAP, still needs dll or jar library. like for SAP, it needs jco library. unless the SAP service can be exposed in form of API or SOAP web service.&amp;nbsp;&lt;/P&gt;&lt;P&gt;For SAP CPI, it is said that there are over 60 pre-built adapters for systems based on different protocols, including SFTP, AMQP, HTTPS, SMTP etc. The integration suite provides a service called Open Connector, which is more flexible for connectivity. However, this service is not free of charge.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_11-1753094121626.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289262i5DB53A646EE27972/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_11-1753094121626.png" alt="stephen_xue_11-1753094121626.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId--1258290682"&gt;DevOps Supporting Tool&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The Mulesoft Anypoint Platform supports Maven for library updates. It supports GITHUB for content backup and versioning. It can be integrated with Jenkins for CICD.&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_1-1753094508343.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289268iE309E80AF9C72470/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_1-1753094508343.png" alt="stephen_xue_1-1753094508343.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For SAP CPI, it has its native versioning control mechnism for iflow and API proxies. Almost all contents are transportable by using a separated BTP service called Cloud Transportation Management. Since it is purely a cloud based development enviroment, the server maintanance is done by SAP and&amp;nbsp; is nothing to do with the integration developer. It is said that the CICD can be managed by Jenkins in some tutorials, whereas I have never seen it in any real cases.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H2 id="toc-hId--1454804187"&gt;Authentication and Authorization&lt;/H2&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In the Mulesoft Anypoint Platform, you can define your own business group and its sub group for different landscapes like dev, test, UAT, Production. You provide access to different group by using the roles, which is clear and does make sense.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_2-1753095089615.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289280i9443CDF2C2799CE0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_2-1753095089615.png" alt="stephen_xue_2-1753095089615.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For SAP Integration Suite, the user access consists of nature user access and system user access.&lt;/P&gt;&lt;P&gt;For nature user access, it is controlled by means of role collections. The role connection is a combination of roles in the level of BTP sub account. The BTP sub account is the collection of services or applications, like SAP Integration Suite.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_3-1753095329727.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289285iD778AE9FB91A17CD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_3-1753095329727.png" alt="stephen_xue_3-1753095329727.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It means, the nature user access control of SAP Integration Suite is NOT inside the service SAP Integration Suite, but the entity one level above.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For system user access, it is controlled by means of Service Key configuration, which is in the BTP subaccount as well. Different from the nature user access, it is not using the role collection mechanism.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stephen_xue_4-1753095809385.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289295i3EC9A21E48D6C576/image-size/medium?v=v2&amp;amp;px=400" role="button" title="stephen_xue_4-1753095809385.png" alt="stephen_xue_4-1753095809385.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The SAP Integration Suite access control is a bit complex and tedious. Good thing is, normally this piece of work is not the task of the integration team, but the security team or basis team.&amp;nbsp;&lt;/P&gt;&lt;P&gt;For SAP PI/PO, both the system user and nature user are maintained by using the same tool, called SAP Netweaver Admin. At least for me, it is easier to understand compared with SAP CPI.&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1357914685"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;SAP PI/PO is out of date product. Though its last version call SAP Process Orchestration, it is not convenient for the integration orchestration, since it is on premise within the corprorate network, which is a bit hard to connect with any services on the internet. and SAP will stop support it in year 2027. So it is time to plan to get rid of it now if you are still using.&lt;/P&gt;&lt;P&gt;SAP CPI is suitable for most of integration requirement and it is purely cloud based. If any SAP system is your centra ERP system, please do not hasitate to choose it, though it is still suitable for any non-system integration, orchestration or work as Enterprise Servie Bus.&lt;/P&gt;&lt;P&gt;Mulesoft is generically suitable for any system integration, especially the project is using the Agile Standard Development Process. It can also be used as the middleware if the centra ERP is a SAP product. However without the BTP Cloud Connector, you might need extra work on firewall configuration.&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you have&amp;nbsp;experience in either platforms, you are most welcome to leave the comment below for the benifit of readers.&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/comparison-between-sap-cpi-and-mulesoft/ba-p/14157376"/>
    <published>2025-07-21T13:19:29.990000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-update-version-of-an-integration-flow-component/ba-p/14158284</id>
    <title>SAP Integration Suite – Update Version of an Integration Flow Component</title>
    <updated>2025-07-21T21:37:08.175000+02:00</updated>
    <author>
      <name>kamlesh_zanje</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/320175</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1606130686"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&amp;nbsp;&lt;/H1&gt;&lt;P data-unlink="true"&gt;SAP Cloud Integration version 5.75/7.40, 6.67/ (8.x→ 8.31), one of the capabilities of SAP Integration Suite, comes with a feature which will allow you to update the version of an integration flow component. &amp;nbsp;To know more, you can refer the help&amp;nbsp;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/migrate-integration-flow-component-to-new-version?locale=en-US" target="_self" rel="noopener noreferrer"&gt;documentation.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;In this blog, I will cover the detailed aspects of this feature, which pain, problem it will address and how to leverage this feature to improve the developer productivity and efficiency.&amp;nbsp;&lt;/P&gt;&lt;P&gt;But before that lets try to understand the need for the versioning of the components.&lt;/P&gt;&lt;P&gt;In SAP Cloud Integration, new version is created when a component,&amp;nbsp;which is already shipped and is being used by the customers undergoes some changes, enhancements, improvements. New features are offered in this component via the minor version updates and small fixes like label changes or UI alignments are offered via micro version updates. To know the versioning of the components in detail, refer the “Versioning of Components” section from this blog &lt;A href="https://community.sap.com/t5/integration-blog-posts/versioning-migration-of-components-of-an-integration-flow-in-sap-cloud/ba-p/13351719" target="_self"&gt;post&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1538699900"&gt;Problem&amp;nbsp;&lt;/H2&gt;&lt;P&gt;Manual update of component version is inefficient. Integration Developers face significant challenges when updating the version of the components manually.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kamlesh_zanje_0-1753114676303.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289465i810E1BEFBC2ECD8B/image-size/small?v=v2&amp;amp;px=200" role="button" title="kamlesh_zanje_0-1753114676303.png" alt="kamlesh_zanje_0-1753114676303.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Integration Developer​&lt;/P&gt;&lt;P&gt;Manual update of the component is a multi-step process as described below:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Manual component deletion​ - &lt;/STRONG&gt;Manual update involves deleting&amp;nbsp;component (Flow steps, Adapters etc.).&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Recreation of component - &lt;/STRONG&gt;After deletion,&amp;nbsp;integration developer&amp;nbsp;must&amp;nbsp;recreate component&amp;nbsp;manually, and maintain their configurations, including properties and externalized parameters.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;These manual steps are &lt;STRONG&gt;Effort-Intensive,&lt;/STRONG&gt; and the process is&amp;nbsp;&lt;STRONG&gt;time-consuming, cumbersome and error prone.&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1342186395"&gt;&lt;STRONG&gt;Solution&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Enabled&amp;nbsp;one-click update version feature to update the component which is backward compatible to the latest available version without any loss of the existing properties, configurations, externalized parameters etc. In past we had enabled this feature for the Integration flow configuration, process pool elements, however in this release, the framework is extended to enable the feature to update the flow steps, adapters which are the widely used components in the modeling of integration flow artifact.&lt;/P&gt;&lt;P&gt;This feature is available across all the environments of the Cloud Integration such as NEO, CF and Edge Integration Cell. Feature applicability - Flow steps and Adapters.&lt;/P&gt;&lt;P&gt;To know more about Runtime Profile, refer this help documentation and&amp;nbsp;blog &lt;A href="https://community.sap.com/t5/integration-blog-posts/versioning-migration-of-components-of-an-integration-flow-in-sap-cloud/ba-p/13351719" target="_self"&gt;post&lt;/A&gt;.&lt;/P&gt;&lt;H3 id="toc-hId-1274755609"&gt;How it works?&lt;/H3&gt;&lt;P&gt;A dedicated “Update Version” will be available if the component version is older than the latest available version corresponding to the runtime profile (e.g. SAP Cloud Integration, Edge Integration Cell etc.). &lt;STRONG&gt;Backward-compatible components&lt;/STRONG&gt;&amp;nbsp;will be migrated to the latest version seamlessly. When you update the version, existing fields will be retained with the same values, and new fields will be populated with default values. If a default value is not present for a mandatory field, you must add the value,&amp;nbsp;and new fields will be populated with default values. If a default value is not present for a mandatory field, you must add the value.&lt;/P&gt;&lt;P&gt;Flow step - Content modifier version 1.5 is selected for the update.&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="page1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289473i93803056017F8F53/image-size/large?v=v2&amp;amp;px=999" role="button" title="page1.png" alt="page1.png" /&gt;&lt;/span&gt;&lt;EM&gt;Image: 1&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Update Version feature updates the Content Modifier from 1.5 to 1.6 (latest version) as it contains the backward compatible changes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="page2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289474iD8F93DC0EAC2A7C5/image-size/large?v=v2&amp;amp;px=999" role="button" title="page2.png" alt="page2.png" /&gt;&lt;/span&gt;&lt;EM&gt;Image: 2&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Content Modifier flow step is updated to the latest version and now the Update Version feature is not available&amp;nbsp;as the component is on the latest version.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="page3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289475i51BEA863B5272082/image-size/large?v=v2&amp;amp;px=999" role="button" title="page3.png" alt="page3.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;EM&gt;Image: 3&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;If the components are not backward compatible, they will not be updated rather the feature will educate Integration Developer to delete and recreate the components by maintaining the configurations manually. See the below example.&lt;/P&gt;&lt;P&gt;Generate Splitter flow step cannot be updated from 1.5 to 1.6 as it contains incompatible changes.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="page4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289477i2151F50165678652/image-size/large?v=v2&amp;amp;px=999" role="button" title="page4.png" alt="page4.png" /&gt;&lt;/span&gt;&lt;EM&gt;Image: 4&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Integration Developer will be asked to delete and recreate the component manually.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="page5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289478iA4F6519AD6914CFB/image-size/large?v=v2&amp;amp;px=999" role="button" title="page5.png" alt="page5.png" /&gt;&lt;/span&gt;&lt;EM&gt;Image: 5&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;: You can update one only component (Flow step, Adapter, Process) at a time. Selecting an integration process focuses the update exclusively on that process.&lt;/P&gt;&lt;H3 id="toc-hId-1078242104"&gt;&lt;STRONG&gt;Benefits &lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Eliminates manual recreation of flow steps&amp;nbsp;​.&lt;/LI&gt;&lt;LI&gt;Saves time &amp;amp; reduces effort​.&lt;/LI&gt;&lt;LI&gt;Minimize errors​.&lt;/LI&gt;&lt;LI&gt;Keep components latest.&lt;/LI&gt;&lt;LI&gt;Improve developer efficiency and productivity​.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This enhancement is designed to make integration process development easier by enabling the integration developers to access the latest features through seamless updates of integration flow adapters and flow steps.&lt;/P&gt;&lt;H3 id="toc-hId-881728599"&gt;&lt;STRONG&gt;Next steps &lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Show “Change” summary in the Update Version UI.​&lt;/LI&gt;&lt;LI&gt;Update “Process” component and its child elements.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Hope you will be benefited with this feature. Please experience the Update Version and provide your valuable feedback.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-update-version-of-an-integration-flow-component/ba-p/14158284"/>
    <published>2025-07-21T21:37:08.175000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/the-e-in-event-driven-architecture-introducing-sap-s-new-event-add-for-erp/ba-p/14160285</id>
    <title>The E in Event-Driven Architecture: Introducing SAP’s new Event-Add for ERP</title>
    <updated>2025-07-23T15:16:03.567000+02:00</updated>
    <author>
      <name>KStrothmann</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/7039</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1864981318"&gt;Introducing SAP’s new Event-Add for ERP&lt;/H3&gt;&lt;P&gt;The smallest building blocks of an Event-Driven Architecture are events. You could even argue that they are the most important building block of an EDA as well. Without suitable events – no surprise – no event-driven architecture.&lt;/P&gt;&lt;P&gt;Now it has gotten a lot easier and straightforward to create suitable events for your event-driven use case: &lt;STRONG&gt;SAP has just released the Event Add-On for ERP&lt;/STRONG&gt;.&amp;nbsp;This add-on is geared at exposing and consuming events to and from&lt;STRONG&gt; SAP Integration Suite, advanced event mesh&lt;/STRONG&gt;, therefore works with SAP's flagship event broker.&lt;/P&gt;&lt;H3 id="toc-hId-1668467813"&gt;&lt;STRONG&gt;Back in Time: The Early Days of Business EDA&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;I still remember the days when I had started working on EDA, years and years ago. Often, we had identified event-driven use cases with customers and had then not been able to start executing on these because the required event had not been available in SAP S/4HANA. In those days, SAP S/4HANA had only offered a two-digit number of standard events. Quite often, the event you wanted and needed was not there in SAP S/4HANA. Or it did not contain the right payload. And back then, the events were not extensible. You had no chance to create custom events. Often customers were not able to start their projects due to a lack of suitable events.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="TechEd Las Vegas.jpg" style="width: 604px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290351iD39621B89AE50BE6/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="TechEd Las Vegas.jpg" alt="TechEd Las Vegas.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Luckily, event-driven architectures still kicked off with the events that were available. And both customers and SAP were quite innovative in respect to how to use and how to show the power of event-driven architectures.&lt;/P&gt;&lt;P&gt;The picture above shows a scene from TechEd 2016 Las Vegas, where former SAP CTO Bjoern Goerke managed to charge the flux compensator of his DeLorean with the required 1.21 gigawatts, based on events generated by the audience by shaking their smartphones.&lt;/P&gt;&lt;H3 id="toc-hId-1471954308"&gt;&lt;STRONG&gt;The E in EDA today&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Nowadays, things have changed some. There are plenty of standard events in SAP S/4HANA and you can build your own custom events based on RAP. Quite a number of standard events are already extensible - based on S/4HANA’s derived events concept. Plus, there are a lot of new features that allow backend-based filtering of events, and soon it is planned to provide AEM’s end-to-end distributed tracing to already start from SAP S/4HANA. So, yes, we’ve made major steps forward and we still make progress every month.&lt;/P&gt;&lt;P&gt;What is important to note is that a lot of the improvements come with newer SAP backends only. S/4HANA versions 2022 and newer or SAP S/4HANA, public cloud edition come with a lot of EDA features. They primarily build on the RAP approach to create events.&lt;/P&gt;&lt;P&gt;Now, if you have an older backend (older S/4HANA or SAP ECC) or are not a big fan of RAP, we had introduced a second approach to expose events: SAP Application Interface Framework (AIF). It works with SAP S/4HANA and/or SAP ECC in combination with SAP Integration Suite, advanced event mesh. Exposing events via AIF is a good option if you are already using SAP AIF extensively, have the required skillset, and are not shy to code.&lt;/P&gt;&lt;P&gt;Now, what about customers that do not want to code? What about customers who require a large number of custom events? What about customers that have mixed landscapes with both SAP S/4HANA and SAP ECC?&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP EDA Ecosystem.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290353i26C385E804B0821C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="SAP EDA Ecosystem.png" alt="SAP EDA Ecosystem.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1275440803"&gt;&lt;STRONG&gt;Enlarging the E in EDA&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;You might have already noticed it when looking at the diagram above - as of lately, there is a third option to event-enable SAP on-premise backends: the &lt;STRONG&gt;SAP Integration Suite, advanced event mesh, event add-on for ERP&lt;/STRONG&gt; (in short Event Add-On for ERP).&lt;/P&gt;&lt;P&gt;SAP has decided to introduce the Event Add-On for ERP to further improve event exposure options for our event-driven ecosystem. Consider the Event-Add-On for ERP as a premium and convenience option that comes with a low-code/no-code approach to create sophisticated, clean-core compliant custom events in just a few minutes.&lt;/P&gt;&lt;P&gt;The Event Add-On complements SAP’s other options and, very important, &lt;STRONG&gt;SAP’s goal is to make the different options work well together in future&lt;/STRONG&gt; to allow to use them in combination as easily as possible.&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1078927298"&gt;&lt;STRONG&gt;A First Look at the Event Add-On for ERP&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Event Add-On for ERP Overview.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290354i5D04BB53B96A701E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Event Add-On for ERP Overview.png" alt="Event Add-On for ERP Overview.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let me try to describe what the Event-Add On is in a few sentences:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The Event Add-On enables real-time, event-driven, bi-directional communication and batch loads &lt;STRONG&gt;from both SAP S/4HANA and SAP ERP Central Component (SAP ECC) to SAP Integration Suite, advanced event mesh&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;The Add-On is already available via SAP through various &lt;STRONG&gt;commercial models&lt;/STRONG&gt; (BTPEA, CPEA, PAYG, Subscription via SAP Store).&lt;/LI&gt;&lt;LI&gt;It supports &lt;STRONG&gt;different deployment options&lt;/STRONG&gt; of SAP S/4HANA and SAP ECC (including on-premises and SAP S/4HANA, private cloud edition)&lt;/LI&gt;&lt;LI&gt;It allows to create custom events in a code-less or alternatively pro-code way and offers extensible payloads&lt;/LI&gt;&lt;LI&gt;CDS views, classic tables, IDocs can be used for event payload creation&lt;/LI&gt;&lt;LI&gt;Comes with templates for selected custom events&lt;/LI&gt;&lt;LI&gt;Major parts of the technology have already been in successful use for several years and is now available in an SAP offering specifically tailored for SAP Integration Suite, advanced event mesh&lt;/LI&gt;&lt;LI&gt;Scales to enterprise grade numbers of events exposed&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Now let’s have a closer look at event triggers. The Add-On offers a number of standard triggers and many custom trigger options.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Standard triggers&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Business Object events&lt;/LI&gt;&lt;LI&gt;SAP Business Transaction Events (BTE)&lt;/LI&gt;&lt;LI&gt;RAP BOs&lt;/LI&gt;&lt;LI&gt;SAP Change Documents (CDHDR/CDPOS)&lt;/LI&gt;&lt;LI&gt;IDocs&lt;/LI&gt;&lt;LI&gt;SAP Output Determination&lt;/LI&gt;&lt;LI&gt;Replications from SAP CAR, EWM, SLT&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Selected custom trigger options&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Custom business object events&lt;/LI&gt;&lt;LI&gt;Calling Event Add-On framework via ABAP-code&lt;/LI&gt;&lt;LI&gt;Scheduling an Event Add-On job&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Important: the Event Add-On for ERP is both resilient and highly reliable. It provides a monitoring application, offers failover &amp;amp; reprocessing, and allows for alerting.&lt;/P&gt;&lt;H3 id="toc-hId-882413793"&gt;&lt;STRONG&gt;New Blog Series: A Second, Third, and Fourth Look at the Add-On&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Event Add-On for ERP.png" style="width: 673px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290355i2A85FE6F6778B711/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Event Add-On for ERP.png" alt="Event Add-On for ERP.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To provide you with a chance to dive deeper into using the Event Add-On for ERP we would like to use this blog start off a blog series on the Event Add-on.&lt;/P&gt;&lt;P&gt;Expect more blogs on the add-on in the coming weeks, starting with an overview blog and then with blogs going deeper and deeper into selected topics.&lt;/P&gt;&lt;P&gt;We will link the available blogs here once they are available. Please stay tuned!&lt;/P&gt;&lt;H3 id="toc-hId-685900288"&gt;&lt;STRONG&gt;Links&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;In case that you don’t want to wait any longer, here are some links that provide you with additional information on the Event Add-On for ERP:&lt;/P&gt;&lt;P&gt;&lt;A href="https://discovery-center.cloud.sap/missiondetail/4575/4863/" target="_self" rel="nofollow noopener noreferrer"&gt;Discovery Center Mission on Event Add-On for ERP and Advanced Event Mesh&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://asapio.com/sap-aem/#overview" target="_self" rel="nofollow noopener noreferrer"&gt;ASAPIO Partner Page on the Event Add-On for ERP&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog/advanced-event-mesh?tab=service_plan&amp;amp;region=all" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Discovery Center for AEM and Event Add-On&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/sap-integration-suite/event-add-on-for-erp-advanced-event-mesh/connect-advanced-event-mesh?locale=en-US" target="_self" rel="noopener noreferrer"&gt;SAP Help: Connecting the Add-On to AEM&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/products/technology-platform/integration-suite/advanced-event-mesh.html#pricing" target="_self" rel="noopener noreferrer"&gt;SAP Store for AEM&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/the-e-in-event-driven-architecture-introducing-sap-s-new-event-add-for-erp/ba-p/14160285"/>
    <published>2025-07-23T15:16:03.567000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/google-bigquery-adapter-for-sap-integration-suite/ba-p/14160511</id>
    <title>Google BigQuery Adapter for SAP Integration Suite</title>
    <updated>2025-07-23T16:43:28.043000+02:00</updated>
    <author>
      <name>Swati_Singh1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/312844</uri>
    </author>
    <content>&lt;P&gt;Many of our day-to-day business activities require storage, processing and insights - Google BigQuery is a data warehousing offering from Google that provides all of the above and much more. It can store massive volumes of data and provide quick processing and efficient analysis.&lt;/P&gt;&lt;P&gt;To harness the ability of Google BigQuery in your SAP Integrations, SAP has released Google BigQuery for SAP Integration Suite that facilitates management and access to data residing on Google BigQuery. Now you can maximize your productivity with data related integrations using Google BigQuery Adapter.&lt;/P&gt;&lt;H2 id="toc-hId-1735901261"&gt;Google BigQuery Adapter Features&lt;/H2&gt;&lt;P&gt;Google BigQuery Adapter has the following features:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Supports &lt;STRONG&gt;OAuth2 Service Account&lt;/STRONG&gt; and &lt;STRONG&gt;Workload Identity Federation&lt;/STRONG&gt; authentication methods.&lt;/LI&gt;&lt;LI&gt;Enables accessing and managing Big Query resources like datasets, jobs, tables, table data, routines, projects, row access policies, and models.&lt;/LI&gt;&lt;LI&gt;Supports convenient metadata retrieval using &lt;STRONG&gt;List&lt;/STRONG&gt; operation data that used the &lt;STRONG&gt;Page Token&lt;/STRONG&gt; field.&lt;/LI&gt;&lt;LI&gt;Supports &lt;STRONG&gt;Basic&lt;/STRONG&gt; configuration for convenient processing capability whereas &lt;STRONG&gt;Advanced&lt;/STRONG&gt; enables proficient users to perform calls with greater control while connecting to any API endpoint.&lt;/LI&gt;&lt;LI&gt;Supports&lt;STRONG&gt; DML operations&lt;/STRONG&gt; like insert, update, patch for Google BigQuery resources.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1539387756"&gt;Update a Dataset&lt;/H2&gt;&lt;P&gt;In this blog post, we will demo a scenario to get you started with a basic Google BigQuery Adapter feature. We will see how to update details for an existing dataset residing in Google BigQuery.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashish_Kuvvarapu_0-1753278988951.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290441iE6CD54DB19C62132/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Ashish_Kuvvarapu_0-1753278988951.png" alt="Ashish_Kuvvarapu_0-1753278988951.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The following prerequisites are required to be completed on the application side of Google BigQuery.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create a dataset or have access to an existing one. For more information, see &lt;A href="https://cloud.google.com/bigquery/docs/datasets" target="_self" rel="nofollow noopener noreferrer"&gt;Create Datasets&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;You must also ensure the correct permissions are available to the service user to update a dataset. For more information, see &lt;A href="https://cloud.google.com/bigquery/docs/updating-datasets" target="_self" rel="nofollow noopener noreferrer"&gt;Dataset Permissions&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1342874251"&gt;Create a Payload using Content Modifier&lt;/H2&gt;&lt;P&gt;One of the first tasks we do after creating a new integration flow, is to prepare the payload that contains information to be updated in the target dataset in Google BigQuery.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "kind": "bigquery#dataset",
  "etag": "etag_value",
  "id": "gbq_docs.org_primary_dataset",
  "selfLink": "https://bigquery.googleapis.com/bigquery/v2/projects/gbq_docs/datasets/org_primary_dataset",
  "datasetReference": {
    "projectId": "gbq_docs",
    "datasetId": "org_primary_dataset"
  },
  "friendlyName": "EmployeeDataset",
  "description": "This dataset stores analytical data.",
  "defaultTableExpirationMs": "3600000",
  "defaultPartitionExpirationMs": "86400000",
  "labels": {
    "env": "dev",
    "team": "analytics"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;As you can see above, we intend to add metadata details like description, tags, labels etc.&lt;/P&gt;&lt;H2 id="toc-hId-1146360746"&gt;Connect to Google BigQuery using the Google BigQuery Adapter&lt;/H2&gt;&lt;P&gt;The Connection tab contains connection and authentication parameters for Google BigQuery.&lt;/P&gt;&lt;P&gt;Before you set the connection details, see Creating a Keystore in the Adapter Guide.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashish_Kuvvarapu_1-1753279066188.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290442iD67722B41328FFB4/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Ashish_Kuvvarapu_1-1753279066188.png" alt="Ashish_Kuvvarapu_1-1753279066188.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;Description/Values&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Address&lt;/TD&gt;&lt;TD width="50%"&gt;Specify the name for the Google BigQuery service. Default:&amp;nbsp;&lt;A href="https://bigquery.googleapis.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://bigquery.googleapis.com/&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Authentication Type&lt;/TD&gt;&lt;TD width="50%"&gt;Select as &lt;STRONG&gt;OAuth2 Service Account&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;OAuth2 Token URL&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the OAuth2 Token URL which identifies as the authorization server for producing a JWT token internally.&lt;/P&gt;&lt;P data-unlink="true"&gt;Default: https://www.googleapis.com/oauth2/v4/token&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Client Email&lt;/TD&gt;&lt;TD width="50%"&gt;Specify the Google Service Account Client Email.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Private Key Alias&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the security artifact storing the Google Service Account Private Key.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Scope&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the scope of the connection to Google BigQuery service.&lt;/P&gt;&lt;P&gt;Default: &lt;A href="https://www.googleapis.com/auth/bigquery" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.googleapis.com/auth/bigquery&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-949847241"&gt;Update Dataset Operation&lt;/H2&gt;&lt;P&gt;Now you can run the Update Dataset operation on your target dataset under your project.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashish_Kuvvarapu_2-1753279100792.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290449i3B9B14301EE1DC2A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Ashish_Kuvvarapu_2-1753279100792.png" alt="Ashish_Kuvvarapu_2-1753279100792.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;P&gt;&lt;STRONG&gt;Description/Values&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Configuration Type&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Select the required configuration type as &lt;STRONG&gt;Basic&lt;/STRONG&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Entity&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;Select &lt;STRONG&gt;Datasets&lt;/STRONG&gt; as the entity&amp;nbsp;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Project ID&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Specify the Google BigQuery project ID.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Dataset ID&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Specify the Dataset ID to be used.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;You can achieve the same using Advanced configuration type as well.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Description/Values&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Configuration Type&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Select the required configuration type as &lt;STRONG&gt;Advanced&lt;/STRONG&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="50px"&gt;&lt;P&gt;HTTP Method&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="50px"&gt;Select as &lt;STRONG&gt;POST&lt;/STRONG&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Relative URL&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;/bigquery/v2/projects/{projectId}/datasets/{datasetid}&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-753333736"&gt;Run and Verify Output&lt;/H2&gt;&lt;P&gt;After saving the above configuration, deploy the flow and verify that the changes are reflected on the dataset. You should be able to see some of them as shown below&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Labels&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;env : dev team : analytics&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Description&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;This dataset stores analytical data.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-556820231"&gt;Quick Links&lt;/H2&gt;&lt;P&gt;For detailed information about Google BigQuery configuration, see &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/google-bigquery-adapter" target="_self" rel="noopener noreferrer"&gt;Google BigQuery&lt;/A&gt; and &lt;A href="https://api.sap.com/odata/1.0/catalog.svc/Files('a646792466e04c8c8b50042867ea13db')/$value" target="_self" rel="noopener noreferrer"&gt;Google BigQuery Adapter Guide&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Note: The Google BigQuery adapter is available as part of your SAP Integration Suite license.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/google-bigquery-adapter-for-sap-integration-suite/ba-p/14160511"/>
    <published>2025-07-23T16:43:28.043000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/process-integration-pipeline-extension-restart-via-data-store/ba-p/14153116</id>
    <title>Process Integration Pipeline Extension - Restart via Data Store</title>
    <updated>2025-07-23T17:38:26.286000+02:00</updated>
    <author>
      <name>mate_moricz</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/191315</uri>
    </author>
    <content>&lt;P&gt;If you use the &lt;A href="https://hub.sap.com/package/PIPipelineGenericIntegrationFlows/overview" target="_self" rel="noopener noreferrer"&gt;Process Integration Pipeline concept&lt;/A&gt; on your SAP Cloud Integration tenant, then you'll be familiar with the error handling process. In case of a message processing error, the message will be retried from the JMS processing queues and upon reaching the maximum number of retries, the message is sent to a Dead Letter Queue (DLQ) to stop further processing. The message then has to be &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/monitoring-and-error-handling-pipeline-concept#dead-letter-queue-handling" target="_self" rel="noopener noreferrer"&gt;moved&lt;/A&gt; from the DLQ back to the processing queues of the pipeline.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="move_jms.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286931iB391DAA7CA2855E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="move_jms.png" alt="move_jms.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The move feature in the queue monitor only enables you to move all messages within a queue. Currently, you can't move a single message from one queue to another. Selective message move is a &lt;A href="https://roadmaps.sap.com/board?PRODUCT=000D3A47875C1EDB98A8A910864AC24B&amp;amp;q=move&amp;amp;range=CURRENT-LAST#;INNO=CB93051A54FD1EDFBDB6AEC234D1AC40" target="_self" rel="noopener noreferrer"&gt;planned roadmap item for Q3 2025.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;There are multiple restrictions imposed by this retry handling process:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;It is not possible to figure out to which scenarios the messages belong in the DLQ&lt;/LI&gt;&lt;LI&gt;It is not possible to schedule a restart job with periodic retries of erroneous messages.&lt;/LI&gt;&lt;LI&gt;It is not possible to execute selective move of messages from JMS queue (to be solved by Q3 2025 as mentioned).&lt;/LI&gt;&lt;LI&gt;There is no API to move messages from DLQ to normal processing queues.&lt;/LI&gt;&lt;LI&gt;There is no API to read JMS queue content and select required messages based on query conditions (JMS Message ID cannot be set from an Integration Flow and there is not any configurable tag for JMS message).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;An additional aspect is the resource limit of the JMS broker:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;There is a hard size limit of JMS broker and JMS queues (default 95% of broker). In case of an unplanned outage of a receiver system, messages might be flooding generic pipeline queues like Outbound (Q4) JMS queue.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;To solve these issues, we have created a package called the&amp;nbsp;&lt;A href="https://hub.sap.com/package/processintegrationpipelineextensionrestartviadatastore/overview" target="_self" rel="noopener noreferrer"&gt;Process Integration Pipeline Extension - Restart via Data Store&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;which is now available in SAP Business Accelerator Hub. This package helps to automate message retries via scheduled jobs and APIs by utilizing Data Stores instead of DLQs on the JMS broker. There is no change required to the standard&amp;nbsp;Process Integration Pipeline package due to the available &lt;A href="https://community.sap.com/t5/integration-blog-posts/latest-pipeline-concept-enhancements-custom-error-handling-and-others/ba-p/13757664" target="_self"&gt;custom error handling extension&lt;/A&gt;&amp;nbsp;from version&amp;nbsp;1.0.5 on.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This blog describes the concept of the extension, but not the detailed configuration of each Integration Flow.. A detailed configuration guide is attached to the Integration Package.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1735063274"&gt;Integration Package contents&lt;/H2&gt;&lt;P&gt;The package consists of multiple Integration Flows and a Script Collection. Below schema describes the logical connection between the Integration Flows.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_1-1753260008506.png" style="width: 911px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290178i5594727031643E89/image-dimensions/911x435/is-moderation-mode/true?v=v2" width="911" height="435" role="button" title="mate_moricz_1-1753260008506.png" alt="mate_moricz_1-1753260008506.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&lt;/STRONG&gt;&lt;SPAN&gt;. This Integration Flow implements Custom Error Handling for exceptions occurring in the generic steps of the Process Integration Pipeline. It leverages the public Pipeline extension exit, as described in the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/monitoring-and-error-handling-pipeline-concept#loioed9b82cb928049e6990a4d784aa6aac7__section_pm1_ggs_5bc" target="_blank" rel="noopener noreferrer"&gt;Custom Exception Handling documentation&lt;/A&gt;. Its primary function is to determine whether retries should continue through the JMS persistence layer or, if all configured JMS retries are exhausted, to move the message out of the queue into the Data Store while capturing all necessary restart attributes and forming the Data Store entry body.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline DS Retry - Restart Executor from Data Store to JMS&lt;/STRONG&gt;&lt;SPAN&gt;. This Integration Flow handles message reprocessing by moving messages from the Data Store back to the source JMS processing queue, allowing the JMS layer to manage the actual retry process. It is triggered via Process Direct and requires XML input specifying the source Data Store, maximum retry count, and the retry subject – either a list of Data Store entry names or an Interface PID for dynamically retrying all associated Data Store entries.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline DS Retry - Template - Restart Job&lt;/STRONG&gt;&lt;SPAN&gt;. This Integration Flow represents a Restart Job that automatically reprocesses messages from the Data Store based on assigned restart configuration profiles. Execution is scheduled using a Start Timer event. Provided as a template, this Integration Flow allows for the creation of multiple customized copies in a custom package, with different Job Profiles maintained in the Partner Directory.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline API - Data Store Manage Retries &lt;/STRONG&gt;&lt;SPAN&gt;(Optional). This Integration Flow enables on-demand restart operations via API clients like Postman. It exposes an HTTP endpoint to trigger restarts for specified Data Store entries or based on selection criteria. Additional operations allow users to retrieve a list of Data Stores in the tenant, fetch entries from a specific Data Store, and move entries between Data Stores (e.g., transferring entries from the “Retry” Data Store to the “NoRetry” Data Store to prevent automatic retriggering).&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline API - Data Store Manage Entries &lt;/STRONG&gt;&lt;SPAN&gt;(Optional). This Integration Flow provides API-based management of Data Store entries, separate from the "Manage Retries" API, to enforce role-based access. It allows users to read messages from a selected Data Store, delete messages (individually or based on query conditions), and add messages to the Data Store (this capability can be disabled at the Integration Flow level).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1538549769"&gt;Data Store Entry Format&lt;/H2&gt;&lt;P&gt;The&amp;nbsp;&lt;EM&gt;Pipeline DS Retry - Custom Error Handling with Data Stores &lt;/EM&gt;Integration Flow will write the messages into Data Stores in a specific pattern which can be used to easily identify the corresponding scenario, message restart by filter criteria.&amp;nbsp; The following pattern is used:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;PartnerId&lt;SPAN&gt;~PipelineStage(~Receiver )~MplId~UTC-Timestamp(~RetryCount )&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;PartnerId (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – A unique identifier in the Process Integration Pipeline that defines the configuration scenario. It is derived from the sender system name and sender interface name. More details can be found in the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/using-partner-directory-in-pipeline-concept#partner-id" target="_blank" rel="noopener noreferrer"&gt;Partner ID documentation&lt;/A&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;PipelineStage (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – Identifies the stage in the Process Integration Pipeline where the exception occurred. &lt;/SPAN&gt;It uses predefined two-letter identifiers enclosed in parentheses (e.g., (IB)), resulting in a four-character code&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;(IB)&lt;/STRONG&gt;&lt;SPAN&gt; – Inbound Stage: The message was received by an inbound Integration Flow, stored in the first JMS queue, and encountered an exception during the next processing step.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(RD)&lt;/STRONG&gt;&lt;SPAN&gt; – Receiver Determination Stage: The inbound conversion was successful, but an error occurred while identifying the receiver system.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(ID)&lt;/STRONG&gt;&lt;SPAN&gt; – Interface Determination Stage: The receiver system was identified, but an error occurred while determining the target inbound interface for that receiver (i.e., the Process Direct endpoint of the outbound Integration Flow).&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(OB)&lt;/STRONG&gt;&lt;SPAN&gt; – Outbound Stage: The message was successfully routed, but an error occurred during message conversion to the outbound format or while transmitting data to the receiver. This is the most common error-handling stage.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(NA)&lt;/STRONG&gt;&lt;SPAN&gt; – The error originated from an unknown or custom Integration Flow (e.g., a copy of the generic flow or an interface-specific flow connected to the retry extension).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Receiver (Optional)&lt;/STRONG&gt;&lt;SPAN&gt; – The receiver business system or alias to which the message is to be delivered. This field is optional because in the |IB| and |RD| stages, the receiver is still unknown. It is assigned only starting from the |ID| stage.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;MplId (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – The Message Processing Log ID (Message GUID) of the erroneous message, a 28-character unique identifier assigned to each message in Cloud Integration. Even though the Message Processing Log ID is directly visible in the Data Store UI, this identifier is required to guarantee uniqueness in terms of Data Store entry ID as a timestamp will not guarantee uniqueness.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;UTC-Timestamp (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – A timestamp marking when the message first entered the Custom Error Handling Integration Flow. It follows the ISO 8601 format:&amp;nbsp;&lt;/SPAN&gt;yyyy-MM-dd'T'HH:mm:ss.SSS'Z' (Example: 2025-04-20T06:51:11.123Z)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;RetryCount (Optional)&lt;/STRONG&gt;&lt;SPAN&gt; – A counter tracking Data Store restart attempts. For a new erroneous message using Data Store-based restarts, this counter starts at 0 and increments with each retry attempt. This prevents exceeding the maximum allowed retries (MaxDataStoreRetries).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The entry written to the Data Store contains the message payload and the potential attachments in a Base64-encoded format. Additionally a message header is included which contains metadata required for further processing such as:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The source JMS queue where the message will be placed for reprocessing&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The entry name of the Data Store record&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The Data Store name used for reprocessing&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The maximum retry count assigned to the interface in the Partner Directory (or a default of 3 retries from the Data Store)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The exception message, also stored in Base64-encoded format&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The structure looks as follows:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;Message&amp;gt;
	&amp;lt;MsgHeader&amp;gt;
		&amp;lt;RestartQueue&amp;gt;${property.SourceJMSQueue}&amp;lt;/RestartQueue&amp;gt;
		&amp;lt;EntryID&amp;gt;${property.EntryID}&amp;lt;/EntryID&amp;gt;
		&amp;lt;RetryDataStore&amp;gt;${property.RetryDataStore}&amp;lt;/RetryDataStore&amp;gt;
		&amp;lt;MaxRetryCount&amp;gt;${property.MaxDataStoreRetries}&amp;lt;/MaxRetryCount&amp;gt;
		&amp;lt;Error&amp;gt;exception.message.Base64encoded&amp;lt;/Error&amp;gt;
	&amp;lt;/MsgHeader&amp;gt;
	&amp;lt;Payload&amp;gt;Payload.Base64encoded&amp;lt;/Payload&amp;gt;
	&amp;lt;Attachments&amp;gt; (minOccurs="0")
		&amp;lt;Attachment&amp;gt; (maxOccurs="unbounded")
			&amp;lt;AttachmentName&amp;gt;attachmentName&amp;lt;/AttachmentName&amp;gt;
			&amp;lt;AttachmentContentType&amp;gt;contType&amp;lt;/AttachmentContentType&amp;gt;
			&amp;lt;AttachmentContent&amp;gt;content.Base64&amp;lt;/AttachmentContent&amp;gt;
		&amp;lt;/Attachment&amp;gt;
	&amp;lt;/Attachments&amp;gt;
&amp;lt;/Message&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1342036264"&gt;Data Store Options&lt;/H2&gt;&lt;P&gt;The extension package utilizes two data store options: RetryStore and NoRetryStore. The Integration Flow &lt;EM&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&lt;/EM&gt;&amp;nbsp;determines – based on the number of JMS retries, PartnerId configuration in Partner Directory and the pipeline Stage where the error occurred – into which kind of Data Store the message is placed.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;RetryStore&lt;/STRONG&gt;&lt;SPAN&gt; – If a message should be automatically restarted in case of an error in inbound or outbound processing or in the integrated runtime, it will be put into this store. The messages in this store option can be restarted via the Restart Job Template Integration Flow. If the maximum number of retries is not reached for restarted messages, they will be put back into this store with an increased retry counter.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;NoRetryStore&lt;/STRONG&gt;&lt;SPAN&gt; – If a message should not be restarted automatically in case of failing receiver or interface determination or when the maximum number of retries have been reached by an already restarted message, it will be put into this store. The messages in this store option can be restarted explicitly &lt;/SPAN&gt;&lt;SPAN&gt;via the Integration Flow &lt;EM&gt;Pipeline API - Data Store Manage Retries&amp;nbsp;&lt;/EM&gt;or via even by the Restart Job if needed.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1145522759"&gt;Restart configuration settings for scenarios&lt;/H2&gt;&lt;P&gt;The Integration Flow &lt;EM&gt;&lt;I&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&lt;/I&gt;&lt;/EM&gt;&amp;nbsp;will put the failed messages into Data Stores based on &lt;EM&gt;&lt;I&gt;PartnerId&lt;/I&gt;&lt;/EM&gt; configuration defined in the Partner Directory via String Parameters. If the configuration is missing in the Partner Directory for a given &lt;EM&gt;&lt;I&gt;PartnerId&lt;/I&gt;&lt;/EM&gt;, default values will be applied.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;RetryDataStore&lt;/STRONG&gt;&lt;SPAN&gt; – Defines the name of the Data Store where the erroneous message should be stored in case of exceeding maximum number of retry attempts at JMS layer.&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Note that even when set to a specific value, messages destined for the &lt;EM&gt;&lt;I&gt;NoRetryStore&lt;/I&gt;&lt;/EM&gt; will have the “&lt;EM&gt;&lt;I&gt;_NoRetry”&lt;/I&gt;&lt;/EM&gt; postfix appended to the Data Store name and they require no explicit configuration.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If &lt;EM&gt;&lt;I&gt;RetryDataStore&lt;/I&gt;&lt;/EM&gt; String parameter is not set for the &lt;EM&gt;&lt;I&gt;PartnerId&lt;/I&gt;&lt;/EM&gt;, then the data store names used will be &lt;EM&gt;&lt;I&gt;&amp;lt;PartnerId&amp;gt;_Retry&lt;/I&gt;&lt;/EM&gt; and &lt;EM&gt;&lt;I&gt;&amp;lt;PartnerId&amp;gt;_NoRetry&lt;/I&gt;&lt;/EM&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;restartMode&lt;/STRONG&gt;&lt;SPAN&gt; – Can be set to either &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;DS&lt;/I&gt;&lt;/EM&gt; &lt;/STRONG&gt;(Data Store) or &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;JMS&lt;/I&gt;&lt;/EM&gt; &lt;/STRONG&gt;(JMS queue) to define how the messages should be restarted. Default option is &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;DS&lt;/I&gt;&lt;/EM&gt;&lt;/STRONG&gt; if not set.&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;DS:&lt;/STRONG&gt;&lt;SPAN&gt; putting a message back to the JMS queue, but in case of an error immediately taking it to a Data Store (preferred and default)&lt;/SPAN&gt;&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;JMS:&lt;/STRONG&gt;&lt;SPAN&gt; putting a message back to the JMS queue and in case of an error executing retries in this JMS queue according to the maximum number of JMS retries&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;MaxDataStoreRetries&lt;/STRONG&gt;&lt;SPAN&gt; – Defines the number of retries after a restart of a message. If the limit is reached, the messaged is moved into the “&lt;EM&gt;&lt;I&gt;_NoRetry”&lt;/I&gt;&lt;/EM&gt; Data Store. &lt;/SPAN&gt;Default number is 5.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_2-1753260232208.png" style="width: 679px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290183iB0248737819ED8F1/image-dimensions/679x404/is-moderation-mode/true?v=v2" width="679" height="404" role="button" title="mate_moricz_2-1753260232208.png" alt="mate_moricz_2-1753260232208.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-949009254"&gt;Restart job configuration&amp;nbsp;&lt;/H2&gt;&lt;P&gt;The Integration Flow “&lt;EM&gt;&lt;I&gt;Pipeline DS Retry - Template - Restart Job&lt;/I&gt;&lt;/EM&gt;” relies on the configuration of different Restart Job Profiles. Multiple variants can be configured to have different scheduled versions of the Restart Job for specific interfaces.&lt;/P&gt;&lt;P&gt;Note that interfaces must be explicitly specified, no regex pattern is applicable in the profiles. Also, there is no default Job Profile applicable for all integration scenarios, i.e. if there is no defined job profile for the interface – the messages won’t be restarted&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Status&lt;/STRONG&gt;&lt;SPAN&gt; – Can be set to “&lt;EM&gt;&lt;I&gt;active”&lt;/I&gt;&lt;/EM&gt; or “&lt;EM&gt;&lt;I&gt;inactive”&lt;/I&gt;&lt;/EM&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;InterfacePidList&lt;/STRONG&gt;&lt;SPAN&gt; – Defines the list of the interfaces (or integration scenarios) for which the message restarts should be triggered. Multiple scenarios can be set by using the character semicolon &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;“;”&lt;/I&gt;&lt;/EM&gt;&lt;/STRONG&gt; as a delimiter. The Restart Job will consider the scenario-specific configuration defined in the Partner Directory (assigned Data Store, number of retries and restart mode).&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Store&lt;/STRONG&gt;&lt;SPAN&gt; – (&lt;/SPAN&gt;&lt;SPAN&gt; If not set, &lt;EM&gt;&lt;I&gt;Retry&lt;/I&gt;&lt;/EM&gt; stores will be always&amp;nbsp;used (with value &lt;EM&gt;&lt;I&gt;Retry&lt;/I&gt;&lt;/EM&gt;). In case of emergencies or if the API based restart can’t be used, restart from the &lt;EM&gt;&lt;I&gt;NoRetryStore&lt;/I&gt;&lt;/EM&gt; can be set for scheduled Restart Jobs. &lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Filters within the Restart Job Profile. If not set, all entries from the given Data Store will be restarted.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Receiver&lt;/STRONG&gt;&lt;SPAN&gt; – (&lt;/SPAN&gt; &lt;SPAN&gt;Receiver name to select all the entries from the Data Store that belong to the specified receiver (for the stages when receiver is unknown (e.g. Inbound), the value “&lt;EM&gt;&lt;I&gt;null&lt;/I&gt;&lt;/EM&gt;” can be sent and then all entries without receiver will be selected). Example of value: &lt;EM&gt;&lt;I&gt;“S4HCLNT100”. &lt;/I&gt;&lt;/EM&gt;Note that the parameter setting is global for all interfaces maintained in the &lt;EM&gt;&lt;I&gt;InterfacePidList&lt;/I&gt;&lt;/EM&gt; parameter, it can’t be set for each interface separately.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;TimeFrom&lt;/STRONG&gt;&lt;SPAN&gt; – (Optional parameter): Interval start timestamp in UTC format to select all the entries from the Data Store that have timestamp in DS Entry name later than specified timestamp. Example of value: “&lt;EM&gt;&lt;I&gt;2025-06-01T09:00:00.000Z&lt;/I&gt;&lt;/EM&gt;”.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;TimeTo&lt;/STRONG&gt;&lt;SPAN&gt; – (Optional parameter): Interval end timestamp in UTC format to select all the entries from the Data Store that have timestamp in DS Entry name earlier than specified timestamp. Example of value: “&lt;EM&gt;&lt;I&gt;2025-06-02T09:00:00.000Z&lt;/I&gt;&lt;/EM&gt;”.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_1-1753261119683.png" style="width: 601px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290215i9B8F1F9C2D096BAA/image-dimensions/601x275/is-moderation-mode/true?v=v2" width="601" height="275" role="button" title="mate_moricz_1-1753261119683.png" alt="mate_moricz_1-1753261119683.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Below screenshot shows a Restart Job profile with the optional parameters.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_2-1753261204824.png" style="width: 599px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290216iC66249024E4F1415/image-dimensions/599x384/is-moderation-mode/true?v=v2" width="599" height="384" role="button" title="mate_moricz_2-1753261204824.png" alt="mate_moricz_2-1753261204824.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The Restart Job from the template Integration Flow &lt;EM&gt;&lt;I&gt;Pipeline DS Retry - Template - Restart Job&lt;/I&gt;&lt;/EM&gt;&amp;nbsp;can be configured to use a schedule-based trigger (start Timer event). Default configuration is to run &lt;EM&gt;&lt;I&gt;On Deployment.&lt;/I&gt;&lt;/EM&gt;&lt;/P&gt;&lt;DIV&gt;&lt;H2 id="toc-hId-752495749"&gt;&lt;SPAN&gt;On-Demand Restarts or Data Store management via HTTP API&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;There are 2 optional Integration Flows in the package which can be used for on-demand operations. They expose 2 HTTP endpoints to manage Retry related operations and to manage Data Store entries. The functionality is divided into 2 Integration Flows for more granular control on authorization level who is allowed to call Restart operations only and who is allowed to Cancel messages (manipulate Data Store entries).&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_0-1753261055289.png" style="width: 947px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290213i2EE2FC23FCB080E3/image-dimensions/947x424/is-moderation-mode/true?v=v2" width="947" height="424" role="button" title="mate_moricz_0-1753261055289.png" alt="mate_moricz_0-1753261055289.png" /&gt;&lt;/span&gt;&lt;DIV&gt;&lt;P&gt;These 2 additional Integration Flows are acting as APIs for more granular control of messages in the Data Stores than the Restart Job. On the other hand, these must be handled with caution as it requires deep understanding of the extension package on how to restart a corresponding package.&lt;/P&gt;&lt;H2 id="toc-hId-555982244"&gt;Configuration steps to use the package&lt;/H2&gt;&lt;DIV&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Configure and Deploy mandatory Integration Artefacts of DS Restart Extension package.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Assign Data Store Restart Configuration for Configuration Scenarios in Partner Directory.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Enable Custom Exception Handling in generic Integration Flows of Process Integration Pipeline package.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create Restart Job Profiles in Partner Directory.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create a Restart Job Integration Flow from Template, Configure Parameters and Deploy.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;(Optional) Configure and Deploy Integration Flows for On-Demand Restarts or Data Store management via HTTP API.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-359468739"&gt;Further improvements&lt;/H2&gt;&lt;P&gt;We are planning to add further improvements to the package such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Configurable no restart stages&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Add default Restart Job Profile if scenarios are not maintained explicitly&lt;/LI&gt;&lt;LI&gt;Catch mapping errors in the outbound stages and move these messages into the NoRetry store (as there is no option to edit a message like in SAP PO)&lt;/LI&gt;&lt;LI&gt;Catch routing errors for the Integrated Messaging Runtime&lt;/LI&gt;&lt;LI&gt;Current Receiver filter in the Restart Job Profile setting is global, needs to be changed to scenario-specific filter&lt;/LI&gt;&lt;LI&gt;Add extension point in the&amp;nbsp;&lt;EM&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&amp;nbsp;&lt;/EM&gt;Integration Flow for potential custom alerting requirement&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you have any further ideas to enhance the package, let us know in the comments.&lt;/P&gt;&lt;H2 id="toc-hId-162955234"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;The &lt;EM&gt;Process Integration Pipeline Extension - Restart via Data Store&lt;/EM&gt; package offers a viable solution to the challenges faced when utilizing the Process Integration Pipeline concept. By automating message retries through scheduled jobs and APIs, and shifting reliance from Dead Letter Queues to Data Stores,&amp;nbsp;&lt;SPAN&gt;users can effectively manage message restarts as an alternative to the standard error handling of the Pipeline concept. By leveraging the Pipeline’s custom exit for error handling, this can be achieved without requiring changes to the standard Process Integration Pipeline package.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/process-integration-pipeline-extension-restart-via-data-store/ba-p/14153116"/>
    <published>2025-07-23T17:38:26.286000+02:00</published>
  </entry>
</feed>
