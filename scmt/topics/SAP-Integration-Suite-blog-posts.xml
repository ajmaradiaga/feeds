<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Integration-Suite-blog-posts.xml</id>
  <title>SAP Community - SAP Integration Suite</title>
  <updated>2025-09-08T14:01:20.897956+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Integration Suite/pd-p/73554900100800003241" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Integration Suite blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/applying-techncial-user-propagation-to-api-management/ba-p/14191788</id>
    <title>Applying 'Techncial User Propagation' to API Management</title>
    <updated>2025-08-29T07:03:22.437000+02:00</updated>
    <author>
      <name>vinayak_adkoli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/216068</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1738703761"&gt;1. Introduction:&lt;/H2&gt;&lt;P&gt;In the previous &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/unravelling-the-technical-user-propagation-scenarios-in-sap-integration/ba-p/14182016" target="_self"&gt;blog&lt;/A&gt;, we explored how technical user propagation works in &lt;STRONG&gt;SAP Integration Suite / Cloud Integration&lt;/STRONG&gt; using the OData V2, SOAP, and HTTP receiver adapters. In this installment, we turn our attention to &lt;STRONG&gt;API Management&lt;/STRONG&gt;, where the &lt;A href="https://help.sap.com/docs/sap-api-management/sap-api-management/on-premise-connectivity-plan" target="_self" rel="noopener noreferrer"&gt;on-premise proxy component&lt;/A&gt;&amp;nbsp;plays a crucial role in securely bridging cloud-hosted APIs with on-premise systems. Much like Cloud Integration, the question of propagating a &lt;EM&gt;fixed technical identity&lt;/EM&gt; comes up frequently here — but the mechanisms and configuration steps differ.&lt;/P&gt;&lt;H2 id="toc-hId-1542190256"&gt;&lt;STRONG&gt;2. Quick recap on on-premise connectivity in API Management:&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Before diving deeper, let’s briefly review how &lt;STRONG&gt;API Management&lt;/STRONG&gt; handles connectivity to on-premise systems. Within the &lt;STRONG&gt;API Provider settings&lt;/STRONG&gt;, API Management supports the concept of &lt;EM&gt;Principal Propagation&lt;/EM&gt;. This means that when a request is forwarded to an on-premise system, the expectation is that a valid user session (or &lt;STRONG&gt;principal&lt;/STRONG&gt;) already exists — typically established via mechanisms such as SSO / token exchange.&lt;/P&gt;&lt;P&gt;Under the hood, the &lt;STRONG&gt;On-premise proxy component&lt;/STRONG&gt; in API Management uses the&amp;nbsp;&lt;STRONG&gt;BTP Destination&lt;/STRONG&gt;&amp;nbsp;as the connectivity anchor. The authenticated user session is propagated to this destination, which in turn leverages the &lt;STRONG&gt;Cloud Connector&lt;/STRONG&gt; to securely tunnel the call into the corporate network. Finally, at the backend system level, the &lt;STRONG&gt;X.509 certificate &lt;/STRONG&gt;mechanism comes into play, mapping the propagated principal to the appropriate backend user. We described this process in our previous blog.&lt;/P&gt;&lt;H2 id="toc-hId-1345676751"&gt;&lt;STRONG&gt;3. Concrete example – Entra ID &amp;amp; token exchange:&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In practice, many customers authenticate users against Identity Provider systems such as Entra ID (formerly Azure AD). In this flow, Entra ID issues a JWT token where the &lt;U&gt;&lt;EM&gt;user subject&lt;/EM&gt;&lt;/U&gt; (often the user’s email ID) is included as a claim. This JWT is then presented to API Management, which, after an optional verification step, in turn exchanges it with XSUAA using the OAuth2 SAML Assertion flow. The result is an XSUAA-issued token that the on-premise proxy component in API Management can securely propagate downstream. This pattern is widely adopted and serves as the backbone of many user-centric API Management scenarios.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; There are many excellent SAP Community blogs that go into great detail about this token handshake and its variants. To keep our focus sharp, we won’t recap those here — instead, we’ll stay aligned with the specific objective of this blog: exploring how technical user propagation scenarios can be addressed in &lt;STRONG&gt;API Management’s On-Premise proxy component&lt;/STRONG&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1149163246"&gt;&lt;STRONG&gt;4. From user sessions to technical credentials:&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;While the model described above works seamlessly for user-centric flows, many integration patterns require a fixed technical credential instead. This is where customers start looking for approaches similar to the one we highlighted in Cloud Integration, where technical user propagation can be achieved by leveraging the '&lt;STRONG&gt;SAP-Connectivity-Technical-Authentication&lt;/STRONG&gt;' header. With API Management’s on-premise proxy component, patterns are available to achieve secure technical identity propagation, which differ slightly from the one we highlighted for Cloud Integration.&lt;/P&gt;&lt;H2 id="toc-hId-952649741"&gt;5. Usage scenarios with API Management:&lt;/H2&gt;&lt;P&gt;To make this blog post engaging, we would like to introduce multiple patterns of usage, since there is no single &lt;EM&gt;“gold standard”&lt;/EM&gt;&amp;nbsp; for implementing authentication in API Management. The right choice depends on the system landscape, security requirements, and integration goals. Below, we outline a few practical scenarios that illustrate different approaches. You are free to adjust the scenario based on your security needs:&lt;/P&gt;&lt;H4 id="toc-hId-1014301674"&gt;1. JWT Bearer Token injection (Client credentials authentication):&lt;/H4&gt;&lt;P&gt;In this scenario, the client is responsible for obtaining an access token itself. This typically involves the client exchanging its client credentials of API Management's on-premise proxy component for a&amp;nbsp;JWT access token and presenting it as part of the API call. API Management then processes this token and propagates the corresponding identity further downstream through the destination, Cloud Connector, and finally to the backend.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; While this approach is relatively straightforward, it places the responsibility of managing OAuth credentials and tokens directly on the client. Therefore, it should not be relied upon as the sole security mechanism. It is strongly recommended to validate the JWT on the API Management layer (or downstream) and ensure that it contains the expected claims (such as issuer, audience, scope, or custom claims like the target client_id) before granting access. This ensures that the token has not only been issued by BTP's XSUAA&amp;nbsp; but also carries the correct authorization context for your APIs.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pre-requisite(s):&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Make sure that you have created a service instance of the '&lt;U&gt;API Management, API portal&lt;/U&gt;'&amp;nbsp; service with the '&lt;U&gt;on-premise-connectivity&lt;/U&gt;' service plan.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-25 at 6.31.33 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304873iCA3CB132EEBCB1AC/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-25 at 6.31.33 PM.png" alt="Screenshot 2025-08-25 at 6.31.33 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-817788169"&gt;&lt;STRONG&gt;2. API Key injection (Credential abstraction for clients):&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;In this setup, the client application supplies an &lt;STRONG&gt;API Key&lt;/STRONG&gt; when calling API Management in addition to any other security mechanism. Behind the scenes, the API Proxy is configured to exchange fixed technical credentials with the Identity Provider (BTP XSUAA) to obtain an access token. This approach helps ensure that the sensitive technical credentials — the ones that need to be propagated — remain hidden from the client, thereby strengthening security.&lt;/P&gt;&lt;P&gt;To make matters more interesting, in our walkthrough, we will not rely on a basic &lt;EM&gt;client credentials &lt;/EM&gt;grant type. Instead, we will demonstrate a &lt;STRONG&gt;certificate-based token exchange&lt;/STRONG&gt;, where API Management presents a client certificate to XSUAA (via OAuth2 with mutual TLS) to obtain the token. This pattern is increasingly popular in enterprise landscapes because it provides stronger binding between client identity and issued tokens (&lt;A href="https://datatracker.ietf.org/doc/html/rfc8705" target="_self" rel="nofollow noopener noreferrer"&gt;RFC 8705&lt;/A&gt;), without ever exposing the client secret, while still abstracting the complexity from the consuming client.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pre-requisite(s):&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;a) Ensure that the &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/activating-developer-hub" target="_self" rel="noopener noreferrer"&gt;Developer Hub&lt;/A&gt; is enabled and that you can create product subscriptions.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;b) Ensure you have a service key enabled for &lt;U&gt;X.509&lt;/U&gt; certificate authentication. Copy the generated client_id. You can follow &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/on-premise-connectivity-plan" target="_self" rel="noopener noreferrer"&gt;this&lt;/A&gt; guide to set it up, and then refer to step 3.3 in our previous article to create a PFX/P12 file that bundles the certificate and key together.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-27 at 4.43.24 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305676i60BF448692BBB8E1/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-27 at 4.43.24 PM.png" alt="Screenshot 2025-08-27 at 4.43.24 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;c) Ensure that the PFX file is uploaded to a keystore from the 'Certificates' section.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-27 at 6.22.53 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306064i07D1A5304BE26380/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-27 at 6.22.53 PM.png" alt="Screenshot 2025-08-27 at 6.22.53 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-621274664"&gt;&lt;STRONG&gt;3. Client Certificate-based Authentication:&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;In this scenario, the consuming client application presents an &lt;STRONG&gt;external client certificate&lt;/STRONG&gt; directly to the API Management runtime when invoking an API. The API Management host validates the certificate against its trust store and, based on pre-configured certificate-to-credential mapping, resolves the call to a &lt;STRONG&gt;fixed technical credential&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;This design is particularly useful in system-to-system integrations where client identities are represented by certificates instead of (/in addition to) tokens or API Keys, as the certificate itself acts as the authentication factor. Internally, the mapped technical user is then propagated through to the BTP Destination, Cloud Connector, and ultimately to the backend system using the same mechanisms as in the earlier scenarios.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; This approach is especially appealing when clients cannot (or should not) handle OAuth flows, but are capable of securely storing and presenting a client certificate. However, it requires careful lifecycle management of certificates (renewal, rotation, and trust configuration) to ensure uninterrupted connectivity.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pre-requisite(s):&lt;/STRONG&gt;&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Make sure you are configured for &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/request-for-two-way-ssl-certificate" target="_self" rel="noopener noreferrer"&gt;certificate-based&lt;/A&gt; authentication. You can then manage your clients’ certificate chains in the Trust Store as a convenient self-service feature.&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;Ensure you can read the '&lt;SPAN&gt;ConnectionProperties&lt;/SPAN&gt;' and '&lt;SPAN&gt;ClientProperties&lt;/SPAN&gt;' property variables. You will need to create an operations &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/tls-ssl-connection-information-variables" target="_self" rel="noopener noreferrer"&gt;ticket&lt;/A&gt; to do so.&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Let’s examine each of these scenarios in detail. Please note that this is not a &lt;EM&gt;step-by-step&lt;/EM&gt; guide; rather, we will focus on highlighting only the key steps.&lt;/P&gt;&lt;H2 id="toc-hId-166595721"&gt;6. Scenario#1 (Client credentials Authentication) - API Provider and Proxy configurations:&lt;/H2&gt;&lt;P&gt;Let’s review the essential API Provider and Proxy configurations required to enable propagation of the 'SAP-Connectivity-Technical-Authentication' header.&lt;/P&gt;&lt;P&gt;1. Create an &lt;U&gt;Extract Variable&lt;/U&gt; policy like so (typically on the 'PreFlow' step) to extract the JWT token from the Authorization request and store it in a variable to be referenced later.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- Extract content from the request or response messages, including headers, URI paths, JSON/XML payloads, form parameters, and query parameters --&amp;gt;
&amp;lt;ExtractVariables async="true" continueOnError="false" enabled="false" xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;Header name="Authorization"&amp;gt;
        &amp;lt;Pattern ignoreCase="true"&amp;gt;Bearer {sapapim.jwt}&amp;lt;/Pattern&amp;gt;
    &amp;lt;/Header&amp;gt;
    &amp;lt;IgnoreUnresolvedVariables&amp;gt;true&amp;lt;/IgnoreUnresolvedVariables&amp;gt;
	&amp;lt;Source&amp;gt;request&amp;lt;/Source&amp;gt;
&amp;lt;/ExtractVariables&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2. After this step, use a &lt;U&gt;Verify JWT&lt;/U&gt; policy to verify the signatures on the JWT as well as any standard and custom claims. Follow &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/blog-series-json-web-tokens-jwt-verification-using-sap-cloud-platform-api/ba-p/13419698" target="_self"&gt;this&lt;/A&gt; blog series to learn more about JWT verification capabilities.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- Verify JWT TOken --&amp;gt;
&amp;lt;VerifyJWT async="false" continueOnError="false" enabled="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;
    &amp;lt;Algorithm&amp;gt;RS256&amp;lt;/Algorithm&amp;gt;
    &amp;lt;Source&amp;gt;sapapim.jwt&amp;lt;/Source&amp;gt;
    &amp;lt;PublicKey&amp;gt;
            &amp;lt;Value ref="jwt.publickey"/&amp;gt;
    &amp;lt;/PublicKey&amp;gt;
    &amp;lt;Subject ref="apim.subject"/&amp;gt;
    &amp;lt;Issuer ref="apim.issuer"/&amp;gt;
    &amp;lt;Audience ref="apim.issuer"/&amp;gt;
    &amp;lt;AdditionalClaims&amp;gt;
    &amp;lt;/AdditionalClaims&amp;gt;
&amp;lt;/VerifyJWT&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Next, create an &lt;U&gt;AssignMessage&lt;/U&gt; policy like so to inject the '&lt;EM&gt;SAP-Connectivity-Technical-Authentication&lt;/EM&gt;' header with the variable captured from the previous step, and make sure to remove the '&lt;EM&gt;Authorization&lt;/EM&gt;' header.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- This policy can be used to create or modify the standard HTTP request and response messages --&amp;gt;
&amp;lt;AssignMessage async="false" continueOnError="false" enabled="true" xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;Remove&amp;gt;
		&amp;lt;Headers&amp;gt;
		     &amp;lt;Header name="Authorization"&amp;gt;&amp;lt;/Header&amp;gt;
		&amp;lt;/Headers&amp;gt;
	&amp;lt;/Remove&amp;gt;
	&amp;lt;Set&amp;gt;
		&amp;lt;Headers&amp;gt;
		     &amp;lt;Header name="SAP-Connectivity-Technical-Authentication"&amp;gt;Bearer {sapapim.accessToken}&amp;lt;/Header&amp;gt;
		&amp;lt;/Headers&amp;gt;
	&amp;lt;/Set&amp;gt; 
	&amp;lt;IgnoreUnresolvedVariables&amp;gt;false&amp;lt;/IgnoreUnresolvedVariables&amp;gt;
	&amp;lt;AssignTo createNew="false" type="request"&amp;gt;request&amp;lt;/AssignTo&amp;gt;
&amp;lt;/AssignMessage&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;4. Finally, ensure that the API Provider’s &lt;EM&gt;authentication&lt;/EM&gt; setting is configured as &lt;U&gt;&lt;EM&gt;None&lt;/EM&gt;&lt;/U&gt; rather than &lt;EM&gt;Principal Propagation&lt;/EM&gt;. This is the very configuration we applied for the SOAP Adapter scenario discussed in the previous blog post.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-26 at 3.05.38 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305303i5753771BD1BFE32E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-26 at 3.05.38 PM.png" alt="Screenshot 2025-08-26 at 3.05.38 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. Let's get down to testing now. The first step would be to get an access token from the authorization server's (XSUAA) token endpoint.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl --location --request POST 'https://&amp;lt;subdomain&amp;gt;.authentication.&amp;lt;region&amp;gt;.hana.ondemand.com/oauth/token' \
  --header 'Content-Type: application/x-www-form-urlencoded' \
  --user '&amp;lt;client_id&amp;gt;:&amp;lt;client_secret&amp;gt;' \
  --data-urlencode 'grant_type=client_credentials'&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6. Copy the access token from the result of the call above and invoke the API Proxy by presenting the Bearer token in the Authorization header.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;curl --location --request GET 'https://&amp;lt;apim_base_url&amp;gt;/&amp;lt;your_api_path&amp;gt;' \
  --header "Authorization: Bearer &amp;lt;access_token&amp;gt;"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&amp;nbsp;Assuming that the rest of your configurations are intact, the call should complete successfully and return the expected backend records.&lt;/P&gt;&lt;P&gt;7. To validate the token handshake and X.509 certificate generation, refer to the verification steps detailed in Step 4.1 in our &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/unravelling-the-technical-user-propagation-scenarios-in-sap-integration/ba-p/14182016" target="_self"&gt;linked&lt;/A&gt; blog post.&lt;/P&gt;&lt;H2 id="toc-hId--29917784"&gt;7. Scenario#2 (APIKey injection) - Proxy configuration:&lt;/H2&gt;&lt;P&gt;In this scenario, the client credentials will not be exposed directly to the client. Instead, we inject the required client_id as a custom attribute within the Product Subscription. During runtime, this identifier is dynamically retrieved via a policy and used to obtain an access token from the authorization server&lt;/P&gt;&lt;P&gt;1. Log in to your Developer Hub, create a product subscription for your target API. Navigate to the Custom Attribute tab and create an attribute called&lt;U&gt; 'x_client_id'&lt;/U&gt; and place the client_id copied from step 2.b. as the Value.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-27 at 6.57.16 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305681i492F9116AB62D50F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-27 at 6.57.16 PM.png" alt="Screenshot 2025-08-27 at 6.57.16 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. You may choose to follow the same workflow demonstrated in Scenario 1. In addition, an important step is to configure the &lt;U&gt;Verify API Key&lt;/U&gt; policy, for example, in the PreFlow segment.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt; &amp;lt;!--Specify in the APIKey element where to look for the variable containing the api key--&amp;gt; 
&amp;lt;VerifyAPIKey async='true' continueOnError='false' enabled='true' 
xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;APIKey ref='request.header.apikey'/&amp;gt;
&amp;lt;/VerifyAPIKey&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Next, add an &lt;U&gt;AccessEntity&lt;/U&gt; policy to get hold of a reference to the 'application's' attributes.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- this policy can be used to retrieve all details of an entity(application, API Product, company, company developer, consumer key and developer) --&amp;gt;
&amp;lt;AccessEntity async="true" continueOnError="false" enabled="true" xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;!-- the name of the type of entity to be retrieved --&amp;gt;
	&amp;lt;EntityType value="app"/&amp;gt;
	&amp;lt;!-- The value that identifies the specific entity whose profile should be retrieved. The ref attribute identifies the variable that provides the source of the identifier. 
	The type identifies the EntityType populated by the referenced variable --&amp;gt;
	&amp;lt;EntityIdentifier ref="request.header.apikey" type="consumerkey"/&amp;gt;
&amp;lt;/AccessEntity&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4. Then add an &lt;U&gt;ExtractVariable&lt;/U&gt; policy to parse and extract the value of the custom attribute defined in the previous step.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- Extract content from the request or response messages, including headers, URI paths, JSON/XML payloads, form parameters, and query parameters --&amp;gt;
&amp;lt;ExtractVariables async="true" continueOnError="false" enabled="true" xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;!-- the source variable which should be parsed --&amp;gt;
	&amp;lt;Source&amp;gt;AccessEntity.name-of-the-AccessEntity-policy-here&amp;lt;/Source&amp;gt;
	&amp;lt;!-- Specifies the XML-formatted message from which the value of the variable will be extracted --&amp;gt;
	&amp;lt;XMLPayload&amp;gt;
    	&amp;lt;!-- Specifies variable to which the extracted value will be assigned --&amp;gt;
    	&amp;lt;Variable name="x-client-id" type="string"&amp;gt;
    		&amp;lt;!-- Specifies the XPath defined for the variable --&amp;gt;
    		&amp;lt;XPath&amp;gt;/App/Attributes/Attribute[Name='x_client_id']/Value/text()&amp;lt;/XPath&amp;gt;
   	    &amp;lt;/Variable&amp;gt;
	&amp;lt;/XMLPayload&amp;gt;
&amp;lt;/ExtractVariables&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5. After this step, we add a small script to construct the URL-encoded form payload in preparation for the token retrieval step. Notice that we &lt;U&gt;have not&lt;/U&gt; used the client secret attribute at all.&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;function getFormElement(name,value){
    return name + "=" + encodeURIComponent(value);
}

function createOAuthRequest(){
    return getFormElement("grant_type","client_credentials")
                + "&amp;amp;" + getFormElement("client_id", context.getVariable("x-client-id")) ;
}

context.setVariable("sapapim.tokenRequest", createOAuthRequest());&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6. We will follow this up with a &lt;U&gt;ServiceCallout&lt;/U&gt; policy to make a POST request to the '.&lt;EM&gt;cert...&lt;/EM&gt;' token endpoint. Notice that we are attaching the certificate of the service key retrieved in step 2.c. by referencing it from the keystore.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;ServiceCallout async="false" continueOnError="false" enabled="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;
    &amp;lt;Request clearPayload="true"&amp;gt;
        &amp;lt;Set&amp;gt;
            &amp;lt;Payload contentType="application/x-www-form-urlencoded"&amp;gt;{sapapim.tokenRequest}&amp;lt;/Payload&amp;gt;
            &amp;lt;Verb&amp;gt;POST&amp;lt;/Verb&amp;gt;
        &amp;lt;/Set&amp;gt;
        &amp;lt;IgnoreUnresolvedVariables&amp;gt;false&amp;lt;/IgnoreUnresolvedVariables&amp;gt;
    &amp;lt;/Request&amp;gt;
    &amp;lt;Response&amp;gt;sapapim.tokenResponse&amp;lt;/Response&amp;gt;
    &amp;lt;Timeout&amp;gt;30000&amp;lt;/Timeout&amp;gt;
    &amp;lt;HTTPTargetConnection&amp;gt;
        &amp;lt;URL&amp;gt;https://&amp;lt;tenant-dentifier&amp;gt;.authentication.cert.&amp;lt;region&amp;gt;.hana.ondemand.com/oauth/token&amp;lt;/URL&amp;gt;
        &amp;lt;SSLInfo&amp;gt; 
                 &amp;lt;Enabled&amp;gt;true&amp;lt;/Enabled&amp;gt; 
                &amp;lt;ClientAuthEnabled&amp;gt;true&amp;lt;/ClientAuthEnabled&amp;gt; 
                &amp;lt;KeyStore&amp;gt;KEYSTORE-NAME-GOES-HERE&amp;lt;/KeyStore&amp;gt; 
                &amp;lt;KeyAlias&amp;gt;CERTIFICATE-NAME-GOES-HERE&amp;lt;/KeyAlias&amp;gt; 
        &amp;lt;/SSLInfo&amp;gt;
    &amp;lt;/HTTPTargetConnection&amp;gt;
&amp;lt;/ServiceCallout&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7. Finally, retrieve the access token and attach it to the&amp;nbsp;&lt;EM&gt;SAP-Connectivity-Technical-Authentication&lt;/EM&gt; header, as demonstrated in step 3 of scenario 1.&lt;/P&gt;&lt;P&gt;8. To test this setup, modify the curl command from scenario 1 to add the APIKey header attribute, like so:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl --location --request GET 'https://&amp;lt;apim_base_url&amp;gt;/&amp;lt;your_api_path&amp;gt;' \ 
--header "APIKey: &amp;lt;your_api_key&amp;gt;"&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-120823068"&gt;8. Scenario#3 (Client certificate-based authentication) - Proxy configuration:&lt;/H2&gt;&lt;P&gt;The critical security step in this scenario is that the client presents its certificate, which API Management validates against the trusted certificates stored in its Trust Store. This validation ensures that only clients with a recognized and trusted certificate can establish communication, thereby guaranteeing both authenticity and trust in the interaction.&lt;/P&gt;&lt;P&gt;When the 'ConnectionProperties' and 'ClientProperties' attributes are enabled, as described in the prerequisites section, you can also access key certificate details such as the Issuer DN and Client CN. For this scenario, we assume that the API Administrator maintains an access control list mapping a predefined set of certificate Common Names to unique client_ids. This ensures that the technical identifier is propagated only when a matching client certificate is presented.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Let's set this up.&lt;/P&gt;&lt;P&gt;1. Create a &lt;U&gt;Key Value Map&lt;/U&gt; and maintain a table mapping the common name of the client to the designated client_id.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-28 at 3.20.27 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306107i8771F75CD2D9D143/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-28 at 3.20.27 PM.png" alt="Screenshot 2025-08-28 at 3.20.27 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. Construct a &lt;U&gt;KeyValueMapOperations&lt;/U&gt; policy that dynamically retrieves the 'tls.client.s.dn' property from the presented certificate, looks up the Key Value Map created in the above step, and assigns the value of the client_id to a variable called 'x_client_id'.&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&amp;gt;
&amp;lt;KeyValueMapOperations mapIdentifier="TechnicalAuthenticationMap" async="false" continueOnError="false" enabled="false" xmlns="http://www.sap.com/apimgmt"&amp;gt;
    &amp;lt;Get assignTo="x_client_id" index="1"&amp;gt;
        &amp;lt;Key&amp;gt;
            &amp;lt;Parameter ref ="tls.client.s.dn"/&amp;gt;
        &amp;lt;/Key&amp;gt;
    &amp;lt;/Get&amp;gt;
    &amp;lt;Scope&amp;gt;environment&amp;lt;/Scope&amp;gt;
&amp;lt;/KeyValueMapOperations&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Repeat steps 5, 6, and 7 from Scenario 2 to generate an access token and assign it to the target header.&lt;/P&gt;&lt;P&gt;4. To test the invocation, adjust the curl command to pass the client certificate&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl --location --request GET 'https://&amp;lt;apim_base_url&amp;gt;/&amp;lt;your_api_path&amp;gt;' \
  --header "Authorization: Bearer &amp;lt;access_token&amp;gt;" \
  --header "APIKey: &amp;lt;your_api_key&amp;gt;" \
  --cert &amp;lt;path_to_certificate&amp;gt;.pfx --cert-type P12 --pass &amp;lt;pfx_password&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":clapping_hands:"&gt;👏&lt;/span&gt;Congratulations on getting this far!&lt;/P&gt;&lt;H2 id="toc-hId--75690437"&gt;9. Summary:&lt;/H2&gt;&lt;P&gt;The three API Management scenarios illustrate different approaches for &lt;STRONG&gt;technical user propagation &lt;/STRONG&gt;using the&lt;STRONG&gt; SAP-Connectivity-Technical-Authentication header&lt;/STRONG&gt;. In the first approach, the client directly provides credentials to obtain an access token, exposing sensitive information. The second approach leverages API Management to propagate technical credentials internally, keeping them hidden from the client and simplifying integration. The third approach uses mutual TLS and X.509 certificates to securely propagate the technical user identity from API Management through the API Provider to the backend system, ensuring end-to-end authentication without exposing internal credentials.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/applying-techncial-user-propagation-to-api-management/ba-p/14191788"/>
    <published>2025-08-29T07:03:22.437000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/realizing-ai-s-potential-in-and-through-sap-integration-suite/ba-p/14193578</id>
    <title>Realizing AI’s Potential in and Through SAP Integration Suite</title>
    <updated>2025-08-29T12:23:42.890000+02:00</updated>
    <author>
      <name>Elaine_w</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1779375</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1609678671"&gt;&lt;FONT size="6" color="#000000"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Real&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;izing AI’s Potential in and Through SAP Integration Suite&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H1&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN&gt;AI is reshaping how enterprises approach integration, simplifying complex processes, reducing manual effort, and unlocking new levels of agility. In SAP Integration Suite, AI is more than just a trend: it&lt;/SPAN&gt; &lt;SPAN&gt;is both a set of powerful capabilities enhancing in&lt;/SPAN&gt;&lt;SPAN&gt;tegration today, and a key enabler for intelligent, connected systems in the future.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI in Integration Suite&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – Intelligence is embedded directly into the product to enhance developer productivity, improve operational efficiency, and accelerate time to cloud through features like flow generation and optimization, anomaly detection, and &lt;/SPAN&gt;&lt;SPAN&gt;intelligent troubleshooting and monitoring.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration Suite for AI&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – SAP Integration Suite also plays a vital role in enabling next-generation AI scenarios. It acts as the integration foundation for orchestrating autonomous, context-aware agents and supporting seamless interaction between AI systems and enterprise landscapes, backed by the governance and scalability that modern businesses need.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;This blog offers a practical overview of SAP Integration Suite’s evolving AI capabilities, highlighting how AI is embedded in SAP Integration Suite today, how it maps to key integration needs, and how it enables customers to build toward an AI-augmented future.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1542247885"&gt;&lt;FONT size="5" color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI in Integration Suite: Embedded Intelligence in Action&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;AI is not an isolated feature in SAP Integration Suite, instead, it’s woven into the platform to enhance how integrations are designed, built, and operated. Our embedded AI capabilities focus on delivering real, day-to-day value across two core dimensions:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Improve developer productivity&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Enhance operational excellence&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Here’s how embedded intelligence is making an impact in these areas:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1474817099"&gt;&lt;FONT size="4" color="#000000"&gt;&lt;U&gt;&lt;STRONG&gt;Improve Developer Productivity&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Designing integrations can be &lt;FONT size="3"&gt;time-consuming,&lt;/FONT&gt; es&lt;FONT size="3"&gt;pecially when d&lt;/FONT&gt;ealing with complex mappings, unfamiliar systems, &lt;/SPAN&gt;&lt;SPAN&gt;or writing custom scripts to handle specific logic&lt;/SPAN&gt;&lt;SPAN&gt;. SAP Integration Suite embeds AI to streamline this process and help developers move faster with greater confidence.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/creating-integration-flow" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;iFlow Creation&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;Developers can now generate integration flows simply by describing the scenario in natural language. This generative AI capability interprets the intent, assembles a draft iFlow with relevant flow steps, and gives developers a strong starting point, and significantly accelerating the design phase. Future enhancements are expected to include automatic generation of mappings, scripts, and other artifacts to further streamline the process. Check&lt;/FONT&gt; &lt;A href="https://roadmaps.sap.com/board?range=2025Q1-2026Q3&amp;amp;PRODUCT=000D3A47875C1EDB98A8A910864AC24B&amp;amp;FT=AI&amp;amp;FT=GEN_AI&amp;amp;FT=INTEGRATION" target="_self" rel="noopener noreferrer"&gt;the roadmap&lt;/A&gt; &lt;FONT color="#000000"&gt;for new updates.&lt;/FONT&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Elaine_w_0-1756159016396.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304854i72C2DF8534B030E4/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Elaine_w_0-1756159016396.png" alt="Elaine_w_0-1756159016396.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;U&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/generative-ai-based-script-optimization/ba-p/13970403" target="_blank"&gt;Script Optimization&lt;/A&gt;&lt;/U&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;Generative AI in SAP Integration Suite can help developers refine Groovy and JavaScript scripts by analyzing code in real time and suggesting best-practice optimizations. These recommendations reduce the need for manual tuning, streamline the coding process and help maintain high performance and quality from the outset.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/integration-advisor" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Integration Advisor&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;Integration Suite is one of the first iPaaS to embed AI into capabilities for supporting B2B scenarios. Integration Advisor uses a machine learning-based, global knowledge pool to propose mappings between source and target structures. By learning from industry standards and past implementations, it dramatically reduces the time and effort required to configure B2B and A2A integrations, especially in complex message transformation scenarios.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-integration-flow-step-recommendations/ba-p/13474550" target="_blank"&gt;&lt;STRONG&gt;Flow Step Recommendations&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;When developers build integration flows, AI recommends the next logical flow step, such as a Groovy script or End Message, based on usage patterns. This intelligent guidance accelerates the flow creation process, minimizes trial-and-error, and supports consistent design quality across teams.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Together, these capabilities significantly reduce repetitive tasks, speed up development, and help teams deliver high-quality integrations more efficiently, regardless of their experience level.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1278303594"&gt;&lt;FONT size="4" color="#000000"&gt;&lt;U&gt;&lt;STRONG&gt;Enhance Operational Excellence&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Operational reliability is critical for scalable, enterprise-grade integration. SAP Integration Suite embeds AI to help teams proactively monitor, maintain, and optimize their integration landscapes, reducing manual troubleshooting and improving long-term performance.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/integration-blog-posts/api-anomaly-detection-in-sap-integration-suite/ba-p/13726636" target="_blank"&gt;&lt;STRONG&gt;&lt;SPAN&gt;API Anomaly Detection&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Leveraging machine learning, the platform continuously monitors integration flows and APIs to detect unusual patterns, such as latency spikes, increased error rates, or unexpected traffic surges. This helps teams identify and address issues before they impact business processes, improving response time and reducing downtime.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="anomalydetection.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304139i2D08AB462C650953/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="anomalydetection.png" alt="anomalydetection.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/integration-blog-posts/leveraging-api-traffic-predictions-in-sap-integration-suite/ba-p/14012084" target="_blank"&gt;&lt;STRONG&gt;API Volume Prediction&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;AI models analyze historical usage patterns to forecast, providing two distinct insights: one on historical usage trends and the other on predicted future volumes. The dual view helps developers and operations teams stay ahead of peak loads and avoid capacity-related disruptions, ensuring both long-term planning and real-time operational awareness.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/generative-ai-based-script-optimization/ba-p/13970403" target="_blank"&gt;&lt;STRONG&gt;Script Optimization&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;Generative AI analyzes custom Groovy or JavaScript scripts used in integration flows, identifying potential performance bottlenecks or inefficiencies. It then recommends optimized versions of the code, enabling developers to improve execution quality without deep manual debugging or rewriting.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;By embedding these intelligent capabilities, SAP Integration Suite supports a more proactive, data-driven approach to integration operations, allowing teams to deliver higher reliability with less overhead.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-952707370"&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration Suite for AI: Enabling the Next Generation of Intelligent Automation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;As the enterprise landscape evolves, agentic AI is emerging as a new class of autonomous systems that can reason, interact, and execute tasks on behalf of users. This shift is driving demand for more adaptable and intelligent integration backbones. To function effectively, these AI agents must be able to connect with enterprise systems, orchestrate business logic, access data, and execute workflows securely and reliably. This is where SAP Integration Suite becomes essential. It not only embeds AI to optimize development and operations, but also plays a foundational role in enabling agentic AI by providing the connective fabric that links intelligent agents with business applications and services.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Across the industry, we’re seeing a growing push toward agent-centric automation, from AI copilots to autonomous digital workers, and integration is the linchpin that determines whether these agents can truly act in context. SAP Integration Suite helps enterprises bridge this gap with built-in capabilities that simplify how AI agents discover, consume, and govern enterprise integrations.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Here are two ways it already supports this shift:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/ai-adapter-for-sap-integration-suite/ba-p/14175843" target="_blank"&gt;&lt;STRONG&gt;AI Adapter&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;The AI Adapter enables seamless communication between SAP Integration Suite and &lt;/SPAN&gt;&lt;SPAN&gt;generative AI services, provided by &lt;/SPAN&gt;&lt;SPAN&gt;SAP’s AI Core or third-party providers like OpenAI. With minimal configuration, developers can embed AI capabilities, such as text generation, summarization, or classification, directly into integration flows.&amp;nbsp;&lt;/SPAN&gt;This makes it easier to enrich payloads with contextual insights, automate decision logic, and integrate AI-driven functionality within a governed framework. By removing the need for custom scripting or API handling, the AI Adapter boosts developer efficiency and expands the scope for advanced AI-powered use cases&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://api.sap.com/integrations/discoverintegrations" target="_blank" rel="noopener noreferrer"&gt;AI-Powered Content Recommendations in Business Accelerator Hub&lt;/A&gt; &lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;To help agents and developers access the right integration assets quickly, the SAP Business Accelerator Hub &lt;/SPAN&gt;features Joule &lt;SPAN&gt;for natural language search. Instead of browsing manually, users (or agents in the future) can ask questions like “How do I connect SAP S/4HANA to Salesforce?” and receive tailored recommendations across integration flows, APIs, and templates.&amp;nbsp;&lt;/SPAN&gt;This AI-driven discovery process reduces time to integration and enhances reusability, which is the key requirement for agent-based automation where responsiveness and adaptability are critical.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Elaine_w_2-1755899230088.png" style="width: 928px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304138iE28D775208063670/image-dimensions/928x568/is-moderation-mode/true?v=v2" width="928" height="568" role="button" title="Elaine_w_2-1755899230088.png" alt="Elaine_w_2-1755899230088.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-756193865"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-559680360"&gt;&lt;FONT size="5" color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Where We’re Heading&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;The evolution of AI in SAP Integration Suite is accelerating, expanding beyond foundational productivity and monitoring features into more adaptive, intelligent, and autonomous integration experiences.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;On the embedded AI front, we’re advancing how integrations are designed, optimized, and managed. Expect more powerful capabilities for automating integration development and API operations, along with intelligent migration from legacy systems like SAP Process Orchestration. These innovations are designed to further boost developer efficiency, reduce operational overhead, and &lt;/SPAN&gt;&lt;SPAN&gt;reduce time to cloud&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;At the same time, SAP Integration Suite is evolving to support agent-driven automation. As&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;part of this direction, we plan to enhance the API Management to allow AI systems to interact with enterprise tools and data. This will enable more dynamic, context-aware automation, built on a foundation of governance, scalability and future readiness.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;In the upcoming blogs, we’ll explore each of the two directions in depth, highlighting real-world use cases, customer stories, and innovations that are redefining integration in the era of AI.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/realizing-ai-s-potential-in-and-through-sap-integration-suite/ba-p/14193578"/>
    <published>2025-08-29T12:23:42.890000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/release-navigator-for-sap-btp-what-s-new-in-q3-2025/ba-p/14199379</id>
    <title>Release Navigator for SAP BTP - What's New in Q3 2025</title>
    <updated>2025-08-29T13:29:29.609000+02:00</updated>
    <author>
      <name>chriskollhed</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/6181</uri>
    </author>
    <content>&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Blog Header.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306539i8232E2E073389790/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Blog Header.png" alt="Blog Header.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The Release Navigator for SAP BTP continues to evolve and expand, offering our customers improved resources and streamlined access to product updates. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With the Q3 2025 update, we ensured all content is up-to-date and we are excited to announce the addition of a new product page for SAP Customer Data Solutions as well as some cosmetic UI updates. Read more about the details in this blog post.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A title="Check out the release navigator for SAP BTP" href="https://readiness-at-scale.enable-now.cloud.sap/pub/20230621_ras/index.html?show=book!BO_EC8330B09B97CDBE#slide!SL_120BDFE08096029D" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="What is the RN.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265537i23AA8349B1EA28DE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="What is the RN.png" alt="What is the RN.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="01_New Products.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265540iD87D0E02D3327B78/image-size/large?v=v2&amp;amp;px=999" role="button" title="01_New Products.png" alt="01_New Products.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Collaborating closely with SAP BTP experts, we've expanded the release coverage by introducing 11 new product pages. These pages compile links to all available release information, such as schedules, pre- and post-release communications, blogs, and more:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Customer Data Solutions, including&lt;UL&gt;&lt;LI&gt;SAP Customer Data Cloud / SAP Customer Identity and Access Management&lt;/LI&gt;&lt;LI&gt;SAP Customer Data Platform&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Read on to see what you can find on this new page.&lt;/P&gt;&lt;H3 id="toc-hId-1868020934"&gt;&lt;STRONG&gt;SAP Customer Data Solutions&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;This page contains specific resources for SAP Customer Identity and Access Management, SAP Customer Data Platform, as well as release resources relevant across different SAP Customer Data Solutions. Here’s a list of all you can find on this page:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Customer Identity and Access Management (CDC)&lt;UL&gt;&lt;LI&gt;Roadmap Explorer: Upcoming Innovations&lt;/LI&gt;&lt;LI&gt;What’s New Viewer: Release Notes&lt;/LI&gt;&lt;LI&gt;Customer Influence Campaign&lt;/LI&gt;&lt;LI&gt;SAP Community Tag&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;SAP Customer Data Platform&lt;UL&gt;&lt;LI&gt;Roadmap Explorer: Upcoming Innovations&lt;/LI&gt;&lt;LI&gt;What’s New Viewer: Release Notes&lt;/LI&gt;&lt;LI&gt;Customer Influence Campaign&lt;/LI&gt;&lt;LI&gt;SAP Community Tag&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;General Customer Data Solutions Resources&lt;UL&gt;&lt;LI&gt;SAP BTP Newsletter&lt;/LI&gt;&lt;LI&gt;Enablement Webcasts&lt;/LI&gt;&lt;LI&gt;Subscription link to Cloud Availability Center&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Please Note&lt;/STRONG&gt;: This page has previously been available via the &lt;A href="https://readiness-at-scale.enable-now.cloud.sap/pub/20230621_ras/index.html?show=book!BO_B3B4A4BF7E057D99#slide!SL_B62D843C1DD43A9A" target="_blank" rel="noopener nofollow noreferrer"&gt;Release Navigator for Customer Experience&lt;/A&gt;. Adding this page to the Release Navigator for SAP BTP reflects the move of SAP Customer Data Solutions from the Customer Experience area to SAP BTP. The page in the Release Navigator for Customer Experience will stay online until the beginning of Q4 2025 for everyone to take note and switch out their potential bookmarks or saved links. After that, only the page within the Release Navigator for SAP BTP will remain available.&lt;/P&gt;&lt;P&gt;&lt;A title="Check out the new page for SAP Customer Data Solutions" href="https://readiness-at-scale.enable-now.cloud.sap/pub/20230621_ras/index.html?show=book!BO_EC8330B09B97CDBE#SL_CAAC3ED5C2293A81" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="chriskollhed_0-1756462658463.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306540iF2536BB5FBCAFAB9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chriskollhed_0-1756462658463.png" alt="chriskollhed_0-1756462658463.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://readiness-at-scale.enable-now.cloud.sap/pub/20230621_ras/index.html?show=book!BO_EC8330B09B97CDBE#SL_CAAC3ED5C2293A81" target="_blank" rel="noopener nofollow noreferrer"&gt;Check it out.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="03_New UX Features.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/163275i474DE9BAA1B6321B/image-size/large?v=v2&amp;amp;px=999" role="button" title="03_New UX Features.png" alt="03_New UX Features.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;With this last round of updates, we added new visual elements to all release navigators. The UI updates in the Release Navigator for SAP BTP do not affect functionality or performance and are strictly cosmetical.&lt;/P&gt;&lt;P&gt;On the home page also known as the Product Specific page, you will notice that our &lt;STRONG&gt;Welcome&lt;/STRONG&gt; and &lt;STRONG&gt;Release Calendar&lt;/STRONG&gt; cards have received a facelift for a fresher look and feel.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A title="Check out the changes in the Release Navigator for SAP BTP" href="https://readiness-at-scale.enable-now.cloud.sap/pub/20230621_ras/index.html?show=book!BO_EC8330B09B97CDBE#SL_120BDFE08096029D" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="chriskollhed_1-1756463442291.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306544i434F3B481F5CC574/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chriskollhed_1-1756463442291.png" alt="chriskollhed_1-1756463442291.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="20240827_06_UI Elements_Lightbulb.png" style="width: 28px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/163285i9270D26ED228EC1F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="20240827_06_UI Elements_Lightbulb.png" alt="20240827_06_UI Elements_Lightbulb.png" /&gt;&lt;/span&gt;On all pages where you can open informational text boxes by hovering over the lightbulb icon, you will see a slight update to the design of these boxes. Content and functionality remain the same.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="graphic UX changes bubbles.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306564i043B23259402D475/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="graphic UX changes bubbles.png" alt="graphic UX changes bubbles.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;As a reminder&lt;/STRONG&gt;: These pop-up boxes show up on every page with a lightbulb icon at the top and may be moved around on the page or closed once you are done reading them.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="02_Update Plan.png" style="width: 906px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266396i7419E65D422332B0/image-size/large?v=v2&amp;amp;px=999" role="button" title="02_Update Plan.png" alt="02_Update Plan.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For centralized information regarding the release of new features for SAP BTP products and services, consult the &lt;A href="https://me.sap.com/notes/3430170" target="_blank" rel="noopener noreferrer"&gt;Consolidated Release Schedule for SAP BTP&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Regarding the Release Navigator updates, refer to this update plan:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Content Plan.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306561iD6767BBF155595CC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Content Plan.png" alt="Content Plan.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;&lt;FONT size="2"&gt;*Disclaimer: The schedule is subject to alterations without notice, including potential delays or the integration of changes in subsequent update windows. It doesn't establish a commitment, promise, or legal duty to deliver any material, code, or functionality. Looking into the remaining quarters of 2025, updates will focus on quarterly content maintenance and a steady extension of product coverage. No substantial UI updates are planned for the time being.&lt;/FONT&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="03_Connect.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266399i2FA2535DDFAC6F87/image-size/large?v=v2&amp;amp;px=999" role="button" title="03_Connect.png" alt="03_Connect.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The Readiness@Scale team within SAP Enterprise Support is driven to ensure release readiness across the SAP Enterprise Support portfolio. Our mission is to empower SAP customers to effectively adopt and utilize innovations.&lt;/P&gt;&lt;P&gt;If you have feedback or specific requests for content within the release navigator, feel free to contact us.&lt;/P&gt;&lt;P&gt;&lt;A href="https://sapinsights.eu.qualtrics.com/jfe/form/SV_egtCPhgGOuO4Iwm?SolutionArea=SAPBTP" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="button provide feedback.png" style="width: 271px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266400i8AA2658279669BCB/image-size/large?v=v2&amp;amp;px=999" role="button" title="button provide feedback.png" alt="button provide feedback.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Don't forget to explore our team’s blogs tagged under &lt;A href="mailto:Readiness@Scale." target="_blank" rel="noopener nofollow noreferrer"&gt;Readiness@Scale. &lt;/A&gt;&lt;/P&gt;&lt;P&gt;Happy navigating!&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;EM&gt;Readiness@Scale &amp;nbsp;&lt;BR /&gt;SAP Enterprise Support&lt;/EM&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/release-navigator-for-sap-btp-what-s-new-in-q3-2025/ba-p/14199379"/>
    <published>2025-08-29T13:29:29.609000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/new-feature-for-the-pipeline-for-cloud-integration-custom-preprocessing/ba-p/14199571</id>
    <title>New feature for the Pipeline for Cloud Integration: custom preprocessing exit</title>
    <updated>2025-08-29T16:07:46.101000+02:00</updated>
    <author>
      <name>alex_bundschuh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45178</uri>
    </author>
    <content>&lt;P&gt;As mentioned in my last blog post &lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339" target="_blank"&gt;New integration packages for the Pipeline for Cloud Integration&lt;/A&gt;, we have deprecated the previous package&amp;nbsp;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://hub.sap.com/package/PIPipelineGenericIntegrationFlows/overview" target="_blank" rel="noopener noreferrer"&gt;Process Integration Pipeline - Generic Integration Flows &amp;amp; Templates&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and have shipped four new packages replacing the deprecated package for supporting the Pipeline for Cloud Integration. You will notice that the previous package has the label [DEPRECATED] in its name now. No worries, you can still run the old package in a transition phase, if you run the latest update you will notice that just the name has been changed. But we encourage you to switch to the new packages, see &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/pipelines" target="_blank" rel="noopener noreferrer"&gt;Pipelines&lt;/A&gt;&amp;nbsp;about how to proceed.&lt;/P&gt;&lt;P&gt;One more reason for switching to the new packages, besides the higher flexibility for setting up different pipelines, is that from now on we ship new features in the new packages only. One of the new features that we have lately shipped is the &lt;STRONG&gt;support for custom preprocessing&lt;/STRONG&gt;. You have the option to&amp;nbsp;&lt;SPAN&gt;call a custom exit integration flow without having to edit the provided generic flows. To do so, you must implement a separate integration flow that can be called at the very beginning of each generic integration flow. See &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/customizing-pipeline-concept#custom-preprocessing-exit" target="_blank" rel="noopener noreferrer"&gt;Custom Preprocessing Exit&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Let me show you how to configure the custom preprocessing. You have two options, either configure it globally, which means that the custom exit integration flow is called for all of your integration scenarios, or configure it scenario-specific. You can even combine both options, having one global custom exit which is applied across all scenarios and in addition calling scenario-specific exit flows for particular scenarios only.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1738940129"&gt;&lt;SPAN&gt;Global setting&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;To enable custom preprocessing globally, you need to configure each generic integration flow that should call the custom preprocessing flow as follows:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the configuration, change the value of the parameter &lt;STRONG&gt;CustomXPreGlobal_Enabled&lt;/STRONG&gt; from &lt;EM&gt;false&lt;/EM&gt; (which is the default) to &lt;EM&gt;true&lt;/EM&gt;. Furthermore, maintain the ProcessDirect endpoint of your custom exit integration flow in the parameter &lt;STRONG&gt;CustomXPreGlobal_Endpoint&lt;/STRONG&gt;, by default the value is&amp;nbsp;&lt;EM&gt;/pip/custom/preProcessing/global&lt;/EM&gt;. You can keep it or change it to your preference. You may then create one custom integration flow for each generic integration flow of the pipeline or use one single&amp;nbsp;custom integration flow across all pipeline steps depending on your requirements. See also below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Exit Global Setting.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306607i0772911C94656545/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Exit Global Setting.png" alt="Exit Global Setting.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1542426624"&gt;&lt;SPAN&gt;Scenario-specific setting&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;For scenario-specific configuration, you can define for which pipeline steps the custom exit integration flow should be called. For this, you need to add the corresponding string parameters to the scenario in the Partner Directory&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;for which the custom preprocessing should be enabled.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Create a string parameter&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;CustomXPreEnabled&lt;/STRONG&gt;&amp;nbsp;where &lt;/SPAN&gt;&lt;SPAN&gt;you define the list of pipeline steps which should call the exit flow separated by pipe.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In our example in the screenshot below, we enable custom preprocessing for all pipeline steps:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;01 stands for&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;either the generic XI inbound processing or the generic IDoc inbound processing&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;02 corresponds to either the generic inbound processing flow or the generic integrated messaging runtime&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;04 corresponds to the generic receiver determination flow&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;05 corresponds to the generic interface determination flow&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;06 corresponds to the generic outbound processing flow&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;If you run through the integrated messaging runtime, which is our recommended pipeline anyway, only step numbers 01, 02, and 06 are relevant. If you only like to run the custom exit flow for the&amp;nbsp;integrated messaging runtime and the&amp;nbsp;generic outbound processing flow for instance, then set the value to 02|06. I think you get the point.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Furthermore, create a string parameter&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;CustomXPreEndpoint&lt;/SPAN&gt;&lt;/STRONG&gt;, which points to the ProcessDirect endpoint of your custom exit integration flow. Other than for the global setting, here we only support one custom integration flow across all pipeline steps to minimize the configuration effort, but you can have a separate&amp;nbsp;custom integration flow for each scenario. See how we are able to implement pipeline step specific logic below.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Exit Scenario-specific Setting.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306610i10FD7B30905DC99C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Exit Scenario-specific Setting.png" alt="Exit Scenario-specific Setting.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Because we only have one&amp;nbsp;custom integration flow for each scenario, we pass the header &lt;STRONG&gt;customXPipelineStep&lt;/STRONG&gt; from the generic flows to the custom flow. With this, you have the option to implement pipeline step specific logic based on this very header. You can use a copy of the template &lt;A href="https://hub.sap.com/integrationflow/com.sap.integration.cloud.pipeline.v2.template.custom.exit" target="_blank" rel="noopener noreferrer"&gt;Pipeline v2 Template - Custom Exit&lt;/A&gt; to model your custom flow. It contains a router with routes for all pipeline steps including corresponding router conditions. To ensure that the header value is present in the custom flow, the header is part of the allowed headers settings. Furthermore, the template adds the pipeline step number to the custom header properties so that you have full transparency in the message monitor about which pipeline step called the exit flow.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Exit Scenario-specific flow.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306611iCDCD9D819B47CD55/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Exit Scenario-specific flow.png" alt="Exit Scenario-specific flow.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;From what we heard from customers, potential use cases could be to implement additional external or internal logging capabilities or to stop certain messages from sending to the receiver systems based on some conditions, e.g. maintained in the Partner Directory. So, regardless of your use case, I think with this we have increased the flexibility of the pipeline for Cloud Integration.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/new-feature-for-the-pipeline-for-cloud-integration-custom-preprocessing/ba-p/14199571"/>
    <published>2025-08-29T16:07:46.101000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/new-templates-for-the-pipeline-for-cloud-integration-enhancing-the-custom/ba-p/14199651</id>
    <title>New templates for the Pipeline for Cloud Integration: enhancing the custom receiver determination</title>
    <updated>2025-08-29T17:49:35.867000+02:00</updated>
    <author>
      <name>alex_bundschuh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45178</uri>
    </author>
    <content>&lt;P&gt;As mentioned in one of my last blog post &lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339" target="_blank"&gt;New integration packages for the Pipeline for Cloud Integration&lt;/A&gt;, we have added two new templates in one of our new integration packages, so actually the &lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineTemplates/integrationflow" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Templates&lt;/A&gt; package where we ship templates for the scenario-specific integration flows and custom exits to support the Pipeline for Cloud Integration.&lt;/P&gt;&lt;P&gt;Both &lt;STRONG&gt;new templates&lt;/STRONG&gt; can be used to implement an alternative approach for &lt;STRONG&gt;custom receiver and receiver interface determination&lt;/STRONG&gt;. Depending on your specific requirements or boundary conditions, you can call a custom integration flow to determine the list of receivers and interfaces instead of&amp;nbsp;&lt;SPAN&gt;the default of running an XSLT mapping stored in the Partner Directory.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Custom receiver and receiver interface determination has been supported before with the more generic template&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://hub.sap.com/integrationflow/com.sap.integration.cloud.pipeline.v2.template.step04.custom.receiver.determination" target="_blank" rel="noopener noreferrer"&gt;Pipeline v2 Template Step04 - Custom Receiver Determination&lt;/A&gt;. Now, we have added the following two templates, namely:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The template &lt;SPAN&gt;&lt;A href="https://hub.sap.com/integrationflow/com.sap.integration.cloud.pipeline.v2.template.step04.custom.receiver.determination.xrd" target="_blank" rel="noopener noreferrer"&gt;Pipeline v2 Template Step04 - Custom Receiver and Interface Determination via Extended Receiver Determination&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;has been added for an option to implement custom receiver determination based on a message mapping and by maintaining exchange properties for the interface determination. A similar approach is applied in the SAP Process Orchestration to Cloud Integration migration tool when selecting the &lt;STRONG&gt;Pipeline migration approach&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;The template&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://hub.sap.com/integrationflow/com.sap.integration.cloud.pipeline.v2.template.step04.custom.receiver.determination.scripts" target="_blank" rel="noopener noreferrer"&gt;Pipeline v2 Template Step04 - Custom Receiver and Interface Determination via Exchange Properties&lt;/A&gt;&lt;/SPAN&gt;&amp;nbsp;allows you to implement&amp;nbsp;custom receiver and interface determination by maintaining exchange properties. A similar approach is applied in the SAP Process Orchestration to Cloud Integration migration tool when selecting the &lt;STRONG&gt;standard migration approach&lt;/STRONG&gt; for the Recipient List and Content-Based-Router patterns.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;In the following, I will show you how the two new approaches can be exemplarily configured.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1738941028"&gt;Option using Mapping and Exchange Properties&lt;/H2&gt;&lt;P class=""&gt;In this option, the custom receiver determination is based on a message mapping resulting in an XML message containing the list of receivers. By maintaining corresponding exchange properties and running a Groovy script, the interfaces are added to the beforehand created XML message.&lt;/P&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt; that this option can be used as alternative to the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A class="" href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/special-cases?locale=en-US&amp;amp;state=PRODUCTION&amp;amp;version=SHIP#loio1606af9b55bf4391bea01d2f7ee112af__section_kjy_1jf_j1c" target="_blank" rel="noopener noreferrer"&gt;Reuse Extended Receiver Determination&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in case you want to migrate an integration scenario on SAP Process Orchestration that already uses the extended receiver determination. Other than the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;Reuse Extended Receiver Determination&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;option, this option results into a combined receiver and interface XML message and hence is also supported in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A class="" title="The asynchronous integrated messaging runtime combines inbound conversion, receiver determination, and interface determination in one single pipeline step." href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/integrated-messaging-runtime-asynchronous?locale=en-US&amp;amp;state=PRODUCTION&amp;amp;version=SHIP" target="_blank" rel="noopener noreferrer"&gt;integrated messaging runtime&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;The custom integration flow looks as follows: In a content modifier step, you have to configure the parameters and XPaths for the interface determination. Then you run your message mapping to determine the list of receivers. This results into an XML message with all receivers that the message should sent to. By the way, you need to define the configuration before you run the message mapping because the message mapping will overwrite your payload which is needed in the content modifier. Finally, you run a script to add the receiver interfaces to the receiver nodes based on your configuration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="XRD Option - Integration Flow.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306714iA1AB3F351D06CACC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="XRD Option - Integration Flow.png" alt="XRD Option - Integration Flow.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;P class=""&gt;In the content modifier, for each potential receiver &amp;lt;Receiver name&amp;gt; from the Receivers XML and for each condition for the interface determination with index &amp;lt;Index number&amp;gt; starting from 1 on, you need to maintain the following exchange parameters adhering to the naming convention:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;SAP-IFDET-&amp;lt;Receiver name&amp;gt;~IFIndex&amp;lt;Index number&amp;gt;&lt;/STRONG&gt; where you specify the XPath condition for the interface condition&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP-IFENDPT-&amp;lt;Receiver name&amp;gt;~IFIndex&amp;lt;Index number&amp;gt;&lt;/STRONG&gt; where you specify the ProcessDirect endpoint of the corresponding scenario-specific outbound flow&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP-IFNAME-&amp;lt;Receiver name&amp;gt;~IFIndex&amp;lt;Index number&amp;gt;&lt;/STRONG&gt;&amp;nbsp;where you specify the receiver interface name (this is an optional parameter)&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;SPAN&gt;To specify the behavior for the case that the receivers XML message doesn't contain any node and no receiver could be determined, create the following parameters:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;SAP-NOREC&lt;/STRONG&gt;: could be either&amp;nbsp;&lt;SPAN class=""&gt;Ignore&lt;/SPAN&gt;,&amp;nbsp;&lt;SPAN class=""&gt;Error&lt;/SPAN&gt;, or&amp;nbsp;&lt;SPAN class=""&gt;Default&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;SAP-NOREC-Default&lt;/STRONG&gt;: in case of Default, specify default receiver name&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;SPAN&gt;If the default receiver is not in the list of already specified receivers, you need to create the corresponding parameters&amp;nbsp;&lt;STRONG&gt;SAP-IFDET-Default~IFIndex&amp;lt;Index number&amp;gt;&lt;/STRONG&gt;,&amp;nbsp;&lt;STRONG&gt;SAP-IFENDPT-Default~IFIndex&amp;lt;Index number&amp;gt;&lt;/STRONG&gt;, and&amp;nbsp;&lt;STRONG&gt;SAP-IFNAME-Default~IFIndex&amp;lt;Index number&amp;gt;&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;Here, an example of the configuration that the script uses to add the interfaces to the Receivers XML.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;In our example, we have 3 receivers, each receiver has one interface only with actual no condition so we specify the XPath true(). The default type is Default and the default receiver is already configured, so no need to create the default receiver specific parameters.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="XRD Option - Content Modifier.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306722i18A5CA476316D7F3/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="XRD Option - Content Modifier.png" alt="XRD Option - Content Modifier.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Here, an example of a message mapping which builds the Receivers XML message with the list of potential receivers.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="XRD Option - Mapping.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306720i5F08475D63507E8F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="XRD Option - Mapping.png" alt="XRD Option - Mapping.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;The Groovy script&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;customInterfaceDeterminationViaXProperties&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;then adds the interfaces to the beforehand created XML message.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1542427523"&gt;Option using Exchange Properties&lt;/H2&gt;&lt;P class=""&gt;In this option, you can implement a combined custom receiver and interface determination by maintaining exchange properties and running two Groovy scripts.&amp;nbsp;The first Groovy script&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;customReceiverDeterminationViaXProperties&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;creates an XML message containing the list of receivers based on the corresponding configuration parameters. The second Groovy script&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;customInterfaceDeterminationViaXProperties&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;adds the interfaces to the previously created XML message based on the corresponding configuration parameters.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Config Option - Integration Flow.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306738i1560A3BF581EE170/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Config Option - Integration Flow.png" alt="Config Option - Integration Flow.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;For the receiver and interface determination, you need to maintain the corresponding exchange properties in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;content modifier following the naming convention:&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;For each receiver &amp;lt;Receiver name&amp;gt;, create the following exchange property:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP-DYNREC-&amp;lt;Receiver name&amp;gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&amp;nbsp;where you specify the XPath condition for the receiver determination&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;SPAN&gt;The parameters for the interface determination are the same like above.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;Here, an example of the configuration that the scripts use to create the combined receivers and interfaces XML. It's the same example like above, in addition to above we have added the XPaths for the receiver determinations.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Config Option - Content Modifier.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306741iEC1BF9A42B24CA4A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Config Option - Content Modifier.png" alt="Config Option - Content Modifier.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For more details, see &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/customizing-pipeline-concept#custom-receiver-determination" target="_blank" rel="noopener noreferrer"&gt;Custom Receiver Determination&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/new-templates-for-the-pipeline-for-cloud-integration-enhancing-the-custom/ba-p/14199651"/>
    <published>2025-08-29T17:49:35.867000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/taming-the-x12-856-message-in-sap-integration-advisor-a-step-by-step-guide/ba-p/14115410</id>
    <title>Taming the X12 856 message in SAP Integration Advisor: A Step-by-Step Guide</title>
    <updated>2025-09-01T09:37:29.204000+02:00</updated>
    <author>
      <name>stefan_boller</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/196798</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1602348930"&gt;Introduction&lt;/H1&gt;&lt;P&gt;In customer support we often get requests how to handle X12 856&amp;nbsp;&lt;SPAN&gt;(Ship Notice/Manifest) &lt;/SPAN&gt;messages. In a &lt;A title="Blog post about pre-transformation" href="https://community.sap.com/t5/technology-blog-posts-by-sap/restoring-the-hierarchical-order-of-a-flattened-source-message-via-the-pre/ba-p/13553678" target="_blank"&gt;previous blog post&lt;/A&gt; we explained how we can handle X12 856 messages as source messages with the help of &lt;A title="Link to SAP Help about Pre-transformations in Integration Advisor" href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/pre-transformation-of-message-implementation-guideline?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;pre-transformations&lt;/A&gt;. In this article we show the reverse scenario where the X12 856 message is the target message. The biggest challenge there is the correct ordering of the HL segments according to the packaging hierarchy and the determination of their hierarchical ID numbers. Currently, this can only done with a custom post-processing XSLT script which is explained in details.&lt;/P&gt;&lt;H1 id="toc-hId-1405835425"&gt;Scenario&lt;/H1&gt;&lt;P&gt;We use the reverse scenario of &lt;A title="Pretransformation Blog Post" href="https://community.sap.com/t5/technology-blog-posts-by-sap/restoring-the-hierarchical-order-of-a-flattened-source-message-via-the-pre/ba-p/13553678" target="_blank"&gt;our earlier blog post&lt;/A&gt;: Assume you have a source MIG based on a cXML ShipNoticeRequest which shall be mapped to an X12 856 based target MIG. Let's start with the source MIG:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Structure of source MIG (cXML ShipNoticeRequest)" style="width: 870px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283998i65A4961FE900D18D/image-dimensions/870x1393?v=v2" width="870" height="1393" role="button" title="stefan_boller_0-1751975095537.png" alt="Structure of source MIG (cXML ShipNoticeRequest)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Structure of source MIG (cXML ShipNoticeRequest)&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;There is not so much to mention. The important parts for our scenario are the ShipNoticePortion group, which corresponds to the orders, the ShipNoticeItem group, which contains the line items of the shipment, and the Packaging group, which describes the packing for each item. These are the parts which needs to be mapped to the different hierarchy levels of the HL segments in the target X12 856 message, which looks like the following:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Structure of target MIG (cXML ShipNoticeRequest)" style="width: 743px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284003i94D6AA9C873A42B0/image-dimensions/743x2028?v=v2" width="743" height="2028" role="button" title="stefan_boller_1-1751975951782.png" alt="Structure of target MIG (cXML ShipNoticeRequest)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Structure of target MIG (cXML ShipNoticeRequest)&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note that we used here Integration Advisor's qualification feature to distinguish the different hierarchy levels: We have in total four duplications of the HL segment, each is qualified by a different value of element 735 (Hierarchical Level Code): S for shipment (corresponds to the root of the source cXML message), O for order (corresponds to the ShipNoticePortion of the source), P for pack (corresponds to Package), and I for item (corresponds to ShipNoticeItem). But if we exactly do these mappings:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;ShipNoticeRequest -&amp;gt; HL[S]&lt;/LI&gt;&lt;LI&gt;ShipNoticePortion -&amp;gt; HL[O]&lt;/LI&gt;&lt;LI&gt;Package -&amp;gt; HL[P]&lt;/LI&gt;&lt;LI&gt;ShipNoticeItem -&amp;gt; HL[I],&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="First naive mapping attempt" style="width: 1215px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284027iC1B29D793371C638/image-dimensions/1215x486?v=v2" width="1215" height="486" role="button" title="stefan_boller_0-1751979499025.png" alt="First naive mapping attempt" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;First naive mapping attempt&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;and simulate it with the attached payload, we&amp;nbsp;see the following issues in the resulting payload:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;The hierarchical ID number (field 628) is missing.&lt;/LI&gt;&lt;LI&gt;the parent hierarchical ID number (field 734) is missing.&lt;/LI&gt;&lt;LI&gt;The HL groups are sorted according to their type and not according to their hierarchical order.&lt;/LI&gt;&lt;LI&gt;The packages are duplicated, we see four instances of them, although the source cXML message contains only three of them:&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Actual payload after naive mapping" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285063iB359659D3B3C3F53/image-size/large?v=v2&amp;amp;px=999" role="button" title="stefan_boller_0-1752146173716.png" alt="Actual payload after naive mapping" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Actual payload after naive mapping&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The expected payload should look something like this:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Expected target payload" style="width: 973px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285066iBC2A64761B521BD9/image-dimensions/973x604?v=v2" width="973" height="604" role="button" title="stefan_boller_1-1752146243962.png" alt="Expected target payload" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Expected target payload&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here each child element is below its corresponding parent element, has a unique continuous number, and a reference to its parent.&lt;/P&gt;&lt;H1 id="toc-hId-1209321920"&gt;Solution&lt;/H1&gt;&lt;P&gt;This mapping challenge unfortunately can't solved with Integration Advisor's core capabilities, however, it's still possible to use Integration Advisor for the main mapping and use an additional XSLT script to generate the expected output. But before we explain the XSLT script, we need to add some additional mappings to the naive mapping explained above so that the XSLT script can do its work:&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Create a group-to-leaf mapping (see also&amp;nbsp;&lt;A title="Group to Leaf Mapping" href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/mapping-source-and-target-nodes#mapping-cardinality" target="_blank" rel="noopener noreferrer"&gt;Group to Leaf Mapping&lt;/A&gt;)&amp;nbsp; from ShipNoticePortion to HL[735=O]/HL/628 with the following XSLT function:&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;xsl:sequence select="$nodes_in/ShipNoticePortion/@position"/&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-90px" style="padding-left : 90px;"&gt;Note: This is not the final content of the 628 field, but serves as a temporary ID to distinguish the different orders (ShipNoticePortions) in the intermediate result. You could also use other unique IDs of the order like the orderID. Here the ID is just the position of the order in the list of all ShipNoticePortions.&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Create another group-to-leaf mapping from ShipNoticePortion to&amp;nbsp;HL[735=P]/HL/734 with the same XSLT function:&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;xsl:sequence select="$nodes_in/ShipNoticePortion/@position"/&amp;gt;​&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-90px" style="padding-left : 90px;"&gt;If you used another ID in step 1 you have to use the same here as well. Please note that this mapping line goes to one level deeper than the first one (to HL[735=P] instead to HL[735=O]. And the target node is 734 instead of 628.&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Create a mapping from ShipNoticePortion/ShipNoticeItem/Packaging/ShippingContainerSerialCode to&amp;nbsp;HL[735=P]/HL/628. Like in step 1 this is needed to uniquely identify the packages and is only a temporary ID, which later will be replaced by the final value.&lt;/LI&gt;&lt;LI&gt;Map the same field (ShipNoticePortion/ShipNoticeItem/Packaging/ShippingContainerSerialCode) also to&amp;nbsp;HL[735=I]/HL/734 (again one level deeper and a different target field).&lt;/LI&gt;&lt;LI&gt;And finally map the nodes ShipNoticePortion/OrderReference/orderID and ShipNoticePortion/ShipNoticeItem/lineNumber to&amp;nbsp;HL[735=I]/HL/628. Again we need a unique ID for each item, which is the concatenation of orderID and lineNumber in this case. Again also other alternatives are possible.&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;These mapping lines are only those relevant for the construction of the right target structure. Obviously you need to add the mapping lines for the right content, which is omitted here to reduce the complexity.&lt;/P&gt;&lt;P&gt;With these mappings we get a target payload like the previous one, but with the small difference that each hierarchy item now has an identifier, which could be used in a post-processing XSLT script to sort them according to their hierarchy as well as to eliminate duplicates, and a reference to its parent item:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Target payload after IA mapping" style="width: 611px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305529i478EF4DA8FE9C422/image-dimensions/611x2468/is-moderation-mode/true?v=v2" width="611" height="2468" role="button" title="stefan_boller_2-1756297299130.png" alt="Target payload after IA mapping" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Target payload after IA mapping&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here we show the XML version of the target payload, because that is what is created by the XSLT mapping generated by the Integration Advisor. Although it's possible to download the flat file version in Integration Advisor, the final conversion from XSLT to flat file is done by the corresponding &lt;A title="EDI to XML converter in SAP Help" href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/define-xml-to-edi-converter?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;EDI flowstep&lt;/A&gt; of Cloud Integration. And that's why we can use an additional XSLT step in our Cloud Integration pipeline (or in the custom post-processing Integration Flow, if you use TPM) to transform it to the right structure.&amp;nbsp;&lt;/P&gt;&lt;P&gt;This can be done with the &lt;A title="Post-processing XSLT" href="https://community.sap.com/khhcw49343/attachments/khhcw49343/integrationblog-board/1871.13/2/PostProcessingX12_856.xml" target="_self"&gt;attached XSLT&lt;/A&gt; (note, that you have to change the namespace prefix of the root node to xsl to make it work, due to some security restrictions, I couldn't upload the correct file). If you apply it to the previous result you get this XML:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="stefan_boller_0-1756303609706.png" style="width: 579px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305584i57690BB433C7CF36/image-dimensions/579x2641/is-moderation-mode/true?v=v2" width="579" height="2641" role="button" title="stefan_boller_0-1756303609706.png" alt="stefan_boller_0-1756303609706.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As you can see the different hierarchy levels are in the right order, each children is under its corresponding parent and has a continuous number, and also the duplicate is eliminated. Furthermore, each element has the right reference to its parent in the D_734 field. If you convert it to an EDI flat file, you will get exactly the payload shown at the beginning of this article.&lt;/P&gt;&lt;P&gt;Note also that the script can be applied to the IA version of the payload as well as to the Cloud Integration version. If you use an Integration Flow like &lt;A title="Link to SOAP to X12 Integration Flow Template" href="https://api.sap.com/integrationflow/SAP_SOAP_to_X12_-_Outbound" target="_blank" rel="noopener noreferrer"&gt;this,&amp;nbsp;&lt;/A&gt;this means that you can add it before or after the "X12 Post-processing" step. It will work in the same way in both cases. If you use TPM, the optional post-processing in the interchange step (see point 37 in &lt;A title="Link to SAP Help for Trading Partner Agreement" href="https://help.sap.com/docs/integration-suite/sap-integration-suite/creating-agreement-latest-format?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Trading Partner Agreement&amp;nbsp;&lt;/A&gt;and &lt;A title="Link to SAP Help about ProcessDirect Adapter in context of TPM" href="https://help.sap.com/docs/integration-suite/sap-integration-suite/understanding-processdirect-adapter?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Understanding the ProcessDirect Adapter&lt;/A&gt;) always works on the Cloud Integration version of the payload. But also there the XSLT script is usable. You need to build an Integration Flow with a ProcessDirect Adapter as inbound channel. This Integration Flow needs only one XSLT mapping step which uses the XSLT script.&lt;/P&gt;&lt;H1 id="toc-hId-1012808415"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;With the attached XSLT script you can now create a correct X12 856 message with Integration Advisor. It should work for most of the cases independent of the required hierarchy levels (and also some similar ones with small modifications). It neither depends on the exact source message, therefore it should be usable also for scenarios with other source messages. The only condition which needs to be fulfilled is that to each hierarchy item a unique identifier can be assigned which is mapped to the D_628 and D_734 fields as in our example. If you have similar scenarios for which this script does not work, let me know, maybe we can find a solution together. I would be happy to hear from you.&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/taming-the-x12-856-message-in-sap-integration-advisor-a-step-by-step-guide/ba-p/14115410"/>
    <published>2025-09-01T09:37:29.204000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol2-%E5%9F%BA%E6%9C%AC%E7%B7%A8/ba-p/14203431</id>
    <title>SAP Integration SuiteのAI Adapterの使い方 Vol2.基本編</title>
    <updated>2025-09-01T19:41:18.652000+02:00</updated>
    <author>
      <name>yasuyukiuno</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/557133</uri>
    </author>
    <content>&lt;P&gt;SAP Integration SuiteのAIアダプタがようやくリリースされたので試してみました。&lt;BR /&gt;この記事ではIntegration Suite AIアダプターの利用方法をステップバイステップで解説します。&lt;BR /&gt;最も基本的なAIアダプタ利用方法は、&lt;A title="SAP Integration SuiteのAI Adapterの使い方 Vol1.基本編" href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol1-%E5%9F%BA%E6%9C%AC%E7%B7%A8/ba-p/14181932" target="_blank"&gt;前回の記事&lt;/A&gt;を参考にして下さい。&lt;/P&gt;&lt;P&gt;第2回のテーマは、『リクエストペイロードソースをExchange Bodyで指定してみよう』です。&lt;BR /&gt;"Exchange Body"では、生成AIのプロンプトをJSON生データで指定します。&lt;BR /&gt;第1回の記事では、"UI Configurable"で指定していました。"Exchange Body"で指定することによってどのような違いが出てくるのでしょうか？&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_13-1756744691078.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307515i6F47CDABCD508A5E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_13-1756744691078.png" alt="yasuyukiuno_13-1756744691078.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-964073342" id="toc-hId-1759077760"&gt;AI Adapterについて&lt;/H2&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/ai-adapter" target="_blank" rel="noopener noreferrer"&gt;AI Adapter&lt;/A&gt;はその名の通り、対話型AIとやり取りをするために利用するアダプタです。&lt;BR /&gt;2025年2Qにリリースされたばかりの新アダプタとなります。&lt;/P&gt;&lt;P&gt;・AI アダプタでは、 SAP AI Coreを利用した&lt;STRONG&gt;AICore-GenAIHub&lt;/STRONG&gt;と、Chat GPT APIを利用した&lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt;の2 つのAI利用方法があります。&lt;/P&gt;&lt;P&gt;この記事では第1回の記事に引き続き、後者の&lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt;を利用しAIアダプタを試してみます。&lt;/P&gt;&lt;H2 id="toc-hId-964073342" id="toc-hId-1562564255"&gt;Request Payload Sourceについて&lt;/H2&gt;&lt;P&gt;Open AI APIへのリクエストの渡し方を指定するオプションとなります。&lt;/P&gt;&lt;P&gt;UI Configurableを利用した場合：生成AI言語モデルが gpt-4-turbo 固定。・・・というわけでもありません。ドロップダウンに表示されるのはgpt-4-turboのみですが、gpt-5などの別の言語モデルを手打ちで設定し実行することが可能です。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_14-1756745256964.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307517i402F5ADE079054AC/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_14-1756745256964.png" alt="yasuyukiuno_14-1756745256964.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Exchange Bodyを利用した場合：UI Configurableとの違いは下記2点であると考えます。&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;対話の背景、AIの振る舞いを指示できる。&lt;/LI&gt;&lt;LI&gt;連続したやり取りの応答をさせることができる。&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Open AI APIは、ステートレス(状態を持っていない)なAPIであるため、繰り返しAPIを実行してもそれまでの会話内容を踏まえた応答をしてくれるわけではありません。&lt;BR /&gt;JSONに背景情報や、それまでのやり取りの内容を詰めて送ることにより、より文脈に沿った応答を得られるようになります。&lt;BR /&gt;指定するJSONについては、&lt;A title="OpenAIのChat Completions APIの基本的な利用方法解説" href="https://acro-engineer.hatenablog.com/entry/2023/07/18/120000" target="_blank" rel="noopener nofollow noreferrer"&gt;この記事&lt;/A&gt;がわかりやすかったため一読すると良いでしょう。&lt;/P&gt;&lt;H2 id="toc-hId-767559837" id="toc-hId-1366050750"&gt;1.Open AI API(Chat GPT API)の準備&lt;/H2&gt;&lt;P&gt;&lt;A title="SAP Integration SuiteのAI Adapterの使い方 Vol1.基本編" href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol1-%E5%9F%BA%E6%9C%AC%E7%B7%A8/ba-p/14181932" target="_blank"&gt;前回の記事&lt;/A&gt;を参照。&lt;/P&gt;&lt;H2 id="toc-hId-767559837" id="toc-hId-1169537245"&gt;2.Integration Flowの作成&lt;/H2&gt;&lt;P&gt;今回は下図のような簡単なiFlowを作成しました。それぞれのコンポーネントの設定値を解説していきます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_16-1756747238053.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307519iEB25ED1A504C8E08/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_16-1756747238053.png" alt="yasuyukiuno_16-1756747238053.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Start Timer：On Deploy (デプロイ時にトリガ)&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;AI Adapter(Connection)：API Key AliasにSecurity Materialsの『OpenAI_APIKey』を設定しています。(第1回記事参照)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_10-1756744378509.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307511i81C81FBD3837E60B/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_10-1756744378509.png" alt="yasuyukiuno_10-1756744378509.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;AI Adapter(Processing)：Request Payload SourceにExchange Bodyを指定します。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_15-1756747100583.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307518iCB569FE3365E9B60/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_15-1756747100583.png" alt="yasuyukiuno_15-1756747100583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Content Modifier：下図のようにJSON文字列を設定しています。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_17-1756747396626.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307520i7F5607B507BBA76D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_17-1756747396626.png" alt="yasuyukiuno_17-1756747396626.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "model": "gpt-5",
    "messages": [
        {"role": "system", "content": "運用担当者は、AWSの上級レベルであるがSAP BTPは一切利用したことがありません。運用担当者にわかるように返答してください。"}, 
        {"role": "user", "content": "SAP Event Meshとは何ですか？"}
    ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;messages.systemに問いかけの背景やどのように応答してほしいのかを指定しています。&lt;BR /&gt;それまでのステップのペイロードデータを送りたい場合にはTypeをExpressionにしたうえで、messages.userに${in.body}を指定しましょう。(&lt;A title="SAP Integration SuiteのAI Adapterの使い方 Vol1.基本編" href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol1-%E5%9F%BA%E6%9C%AC%E7%B7%A8/ba-p/14181932" target="_blank"&gt;前回の記事&lt;/A&gt;参照)&lt;/P&gt;&lt;H2 id="toc-hId-767559837" id="toc-hId-973023740"&gt;3.動作確認&lt;/H2&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;実行したところ、下図のような応答が返ってきました。AWSの知見は持っているという前提で、AWSに例えながらEvent Meshのことを説明してくれました。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_18-1756747654107.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307521i988A688C03F31B6E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_18-1756747654107.png" alt="yasuyukiuno_18-1756747654107.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Exchange Bodyの基本的な使い方は以上となります。&lt;BR /&gt;応答の背景や前提条件を指定することにより、より有用な応答を得られるようになるのではないでしょうか。&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol2-%E5%9F%BA%E6%9C%AC%E7%B7%A8/ba-p/14203431"/>
    <published>2025-09-01T19:41:18.652000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/migration-sap-pi-po-to-sap-cloud-integration-using-pipeline-concepts/ba-p/14189135</id>
    <title>Migration SAP PI/PO to SAP Cloud Integration using Pipeline concepts</title>
    <updated>2025-09-02T07:15:42.965000+02:00</updated>
    <author>
      <name>Sathish_Kumar_BP</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1644462</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Dear SAP consultants:&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;I have been working on migrating from SAP PI/PO to SAP Cloud Integration, and I would like to share my experience with the Pipeline concept introduced by SAP for migration projects. Since there are not many blogs or discussions on this topic, I thought it would be helpful to share&amp;nbsp;my experience.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Let’s quickly recap SAP PI/PO. In PI/PO, we usually create common IDOC and proxy channels to connect SAP ERP with the PI/PO system for both outbound and inbound communication. A single IDOC &amp;amp; Proxy channel can be reused across multiple flows/scenarios. If needed, we can also create multiple IDOC channels using the same destination in SM59. However, this approach doesn’t work the same way in SAP Cloud Integration. One HTTP destination can’t be used for multiple flow.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;EM&gt;&lt;STRONG&gt;Example&lt;/STRONG&gt;: i&lt;/EM&gt;&lt;EM&gt;f there are 100 IDOC flows from SAP ERP to SAP Cloud Integration, we need to create 100 separate HTTP destinations - each one mapped to its corresponding iFlow endpoint. Unlike PI/PO, where a single destination could be reused, SAP CI requires a unique destination per flow.&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;I believe this was the initial perspective of most SAP PI/PO consultants, but with SAP’s continuous support, better approaches are being discovered day by day.&lt;/SPAN&gt;&lt;BR /&gt;Since we all started the migration journey some time ago, there are many ways to handle the IDOC and proxy scenarios.&lt;BR /&gt;However, one of the best ways to use the &lt;STRONG&gt;Pipeline concept&lt;/STRONG&gt; for &lt;STRONG&gt;Asynchronous Pattern&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;I will try to explain in simple terms.&lt;/P&gt;&lt;OL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;P&gt;We require to use the Standard Pipeline Template provided by SAP.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;JMS queues&amp;nbsp; for retry mechanism.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Partner Directory setup&amp;nbsp; for each IDOC/proxy flow.&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Let’s discuss end to end &lt;STRONG&gt;Outbound IDOC scenario&lt;/STRONG&gt; to understand more.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;U&gt;&lt;STRONG&gt;1.&amp;nbsp;&lt;U&gt;We r&lt;/U&gt;equire to use the Standard Pipeline Template provided by SAP:&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-30px" style="text-align : justify; padding-left : 30px;"&gt;Copy the Standard Package&amp;nbsp; “&lt;SPAN&gt;&lt;STRONG&gt;Process Integration Pipeline - Generic Integration Flows &amp;amp; Templates&lt;/STRONG&gt;“&lt;/SPAN&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_1-1755979016278.png" style="width: 536px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304305iB75EC1CC92FBAE62/image-dimensions/536x189/is-moderation-mode/true?v=v2" width="536" height="189" role="button" title="Sathish_Kumar_BP_1-1755979016278.png" alt="Sathish_Kumar_BP_1-1755979016278.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Deploy the below highlighted iFlows.&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_0-1755981522204.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304307i6B456A959696851F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Sathish_Kumar_BP_0-1755981522204.png" alt="Sathish_Kumar_BP_0-1755981522204.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Pipeline Generic - Script Collection: &lt;/SPAN&gt;&lt;/STRONG&gt;Deploy the common scripts collection package will be used across the pipeline steps.&lt;BR /&gt;&lt;BR /&gt;&lt;U&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Step 01&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/U&gt;: &lt;STRONG&gt;&lt;SPAN&gt;Pipeline Generic Step01 - Inbound Processing for Idoc&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;Deploy and use end point of this iFlow in HTTP destination created in SAP system.&lt;BR /&gt;So, the connection established and when IDOC triggered – it will point to this flow.&lt;BR /&gt;Basically, this flow will receive the IDOC from SAPERP and send to JMS Queue &lt;STRONG&gt;PIPQ01.&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;U&gt;Step 02&lt;/U&gt;:&lt;/STRONG&gt;&lt;STRONG&gt; &lt;SPAN&gt;Pipeline Generic Step02 - Inbound Processing&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;The flow will pick the messages from first JMS queue &lt;STRONG&gt;PIPQ01&lt;/STRONG&gt; and run through flow by determining the partner ID which is created in Partner directory. (will discuss this part below) then will drop to JMS queue &lt;STRONG&gt;PIPQ02&lt;/STRONG&gt;.&lt;BR /&gt;If any issue occurs during this flow, it will be go back to PIPQ01_DLQ(first flow dead letter queue) after max retries.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px lia-align-left" style="padding-left : 30px; text-align : left;"&gt;&lt;STRONG&gt;&lt;U&gt;Step 03&lt;/U&gt;:&lt;/STRONG&gt;&lt;STRONG&gt; &lt;SPAN&gt;Pipeline Generic Step04 - Receiver Determination&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;This step to find the receiver using XSLT mapping maintained in Partner directory. We will have to prepare the XSLT mapping and define the condition, upload it partner directory.&lt;BR /&gt;The flow will pick the messages from second JMS queue &lt;STRONG&gt;PIPQ02&lt;/STRONG&gt; and run through the iFlow to check the receiver --&amp;gt; then drop the message to JMS queue &lt;STRONG&gt;PIPQ03&lt;/STRONG&gt;.&lt;BR /&gt;If any issue occurs, receiver determination step failed them it will be moved to last step dead letter queue after retries i.e PIPQ02_DLQ.&lt;BR /&gt;&lt;BR /&gt;&lt;U&gt;&lt;STRONG&gt;Step 04&lt;/STRONG&gt;&lt;/U&gt;: &lt;STRONG&gt;Pipeline Generic Step05 - Interface Determination&lt;/STRONG&gt;&lt;BR /&gt;Again in the same way, the Integration flow will pick the messages from third JMS queue &lt;STRONG&gt;PIPQ03&lt;/STRONG&gt; and find interface mapping path and drop the messages to last fourth queue &lt;STRONG&gt;PIPQ04&lt;/STRONG&gt;.&lt;BR /&gt;If this iFlow fails with issue then message moved back to last step Dead letter queue i.e PIPQ03_DLQ&lt;BR /&gt;&lt;BR /&gt;&lt;U&gt;&lt;STRONG&gt;Step 05&lt;/STRONG&gt;&lt;/U&gt;: &lt;STRONG&gt;Pipeline Generic Step06 - Outbound Processing&lt;/STRONG&gt;&lt;BR /&gt;Outbound processing step will pick the message from JMS queue &lt;STRONG&gt;PIPQ04&lt;/STRONG&gt; and identify the next iFlow. (based on process direct adapter path) and send messages to corresponding iFlow.&lt;BR /&gt;If this iFlow fails with issue then message moved back to last step Dead letter queue i.e PIPQ04_DLQ&lt;BR /&gt;&lt;BR /&gt;&lt;U&gt;&lt;STRONG&gt;Step 06&lt;/STRONG&gt;&lt;/U&gt;:&lt;STRONG&gt; (scenario specific flow- you can use custom names)&lt;/STRONG&gt;&lt;BR /&gt;In this flow Mapping conversion and connection to receiver. We have SAP provided templates as well for this step, however I haven’t used them. Created own custom Integration flow to handle the mapping and connection to receiver.&lt;BR /&gt;If any issue occurs the message will be failed status and &lt;SPAN&gt;message processing is then retried from the last integration flow.&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;We can migrate/import mapping from SAP PO ESR to custom last step iFlow.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;The process direct adapter channel path should match the one defined in the interface determination mapping.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Below table&amp;nbsp;summarizes&lt;SPAN&gt;&amp;nbsp; a&lt;/SPAN&gt;ll pipeline steps and how the integration flow works:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_0-1756363851052.png" style="width: 605px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305740i4A2AE75B041C857C/image-dimensions/605x521/is-moderation-mode/true?v=v2" width="605" height="521" role="button" title="Sathish_Kumar_BP_0-1756363851052.png" alt="Sathish_Kumar_BP_0-1756363851052.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;U&gt;&lt;STRONG&gt;2.&amp;nbsp;JMS queues required for retry mechanism:&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-30px" style="text-align : justify; padding-left : 30px;"&gt;Required total 8 JMS queues. 4 normal queues and 4 dead letter queues to handle the retry mechanism&lt;EM&gt;. &lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-30px" style="text-align : justify; padding-left : 30px;"&gt;&lt;EM&gt;(PIPQ01, PIPQ01_DLQ, PIPQ02, PIPQ02_DLQ, PIPQ03, PIPQ03_DLQ, PIPQ04, PIPQ04_DLQ)&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-30px" style="text-align : justify; padding-left : 30px;"&gt;Once we deploy the above standard SAP iFlows - the below JMS queues will automatically created.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_8-1755985391450.png" style="width: 666px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304315iBA169E992EAA3526/image-dimensions/666x343/is-moderation-mode/true?v=v2" width="666" height="343" role="button" title="Sathish_Kumar_BP_8-1755985391450.png" alt="Sathish_Kumar_BP_8-1755985391450.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;U&gt;&lt;STRONG&gt;3. Partner Directory:&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-30px" style="text-align : justify; padding-left : 30px;"&gt;Create the PID for each interface.&lt;BR /&gt;&lt;STRONG&gt;PID&lt;/STRONG&gt; is combination of sender system and sender interface name&lt;BR /&gt;Example: &lt;STRONG&gt;SAPCLNT100~ORDERS.ORDERS05&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/STRONG&gt;&lt;EM&gt;&amp;lt;sendersystem&amp;gt;~&amp;lt;senderInterfacename&amp;gt;&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_3-1755979016288.png" style="width: 453px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304304i7B0D3541B9753B3F/image-dimensions/453x205/is-moderation-mode/true?v=v2" width="453" height="205" role="button" title="Sathish_Kumar_BP_3-1755979016288.png" alt="Sathish_Kumar_BP_3-1755979016288.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;Entity Type:&amp;nbsp;&lt;STRONG&gt;String Parameter&lt;/STRONG&gt;: we use this parameter to maintain the JMS retries count.&lt;BR /&gt;ID: MaxJMSRetries&lt;BR /&gt;Value: 3 or 4, If message fails in any pipeline step based on this value, it retries count intervals.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_5-1755984334996.png" style="width: 636px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304312i3BED30A733D5356C/image-dimensions/636x166/is-moderation-mode/true?v=v2" width="636" height="166" role="button" title="Sathish_Kumar_BP_5-1755984334996.png" alt="Sathish_Kumar_BP_5-1755984334996.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;Binary Parameter&lt;/STRONG&gt;: we use this parameter to upload the xsl mapping code for receiver and interface determination.&lt;BR /&gt;ID = &lt;STRONG&gt;receiverDetermination&lt;/STRONG&gt;&lt;BR /&gt;ID = &lt;STRONG&gt;interfaceDetermination_&amp;lt;ReceiverName&amp;gt;&lt;/STRONG&gt;&lt;BR /&gt;Create the XSLT mapping for both receiver determination and interface determination and upload.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_4-1755984200533.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304311iA554FB050030A037/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Sathish_Kumar_BP_4-1755984200533.png" alt="Sathish_Kumar_BP_4-1755984200533.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Whatever the receivername you maintained in the receiver determination, will be automatically taken that name in interfaceDetermination_"Receivername" – so use the same name in ID. Else it will be failed with error.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Sample XSLT code for receiver determination:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;xsl:stylesheet version="3.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&amp;gt;
    &amp;lt;xsl:template match="/"&amp;gt;
        &amp;lt;ns0:Receivers xmlns:ns0="http://sap.com/xi/XI/System"&amp;gt;
            &amp;lt;xsl:choose&amp;gt;
                &amp;lt;xsl:when test="/ORDERS05/IDOC/EDI_DC40/RCVPRN = 'Germany'"&amp;gt;
                    &amp;lt;Receiver&amp;gt;
                        &amp;lt;Service&amp;gt;GermanyBMW&amp;lt;/Service&amp;gt;
                    &amp;lt;/Receiver&amp;gt;
                &amp;lt;/xsl:when&amp;gt;
                &amp;lt;xsl:otherwise&amp;gt;
                    &amp;lt;Receiver&amp;gt;
                        &amp;lt;Service&amp;gt;NotDefined&amp;lt;/Service&amp;gt;
                    &amp;lt;/Receiver&amp;gt;
                &amp;lt;/xsl:otherwise&amp;gt;
            &amp;lt;/xsl:choose&amp;gt;
        &amp;lt;/ns0:Receivers&amp;gt;
    &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;sample XSLT code for interface determination:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;xsl:stylesheet version="3.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&amp;gt;
  &amp;lt;xsl:template match="/"&amp;gt;
    &amp;lt;ns0:Interfaces xmlns:ns0="http://sap.com/xi/XI/System"&amp;gt;
      &amp;lt;Interface&amp;gt;
        &amp;lt;Index&amp;gt;1&amp;lt;/Index&amp;gt;
        &amp;lt;Service&amp;gt;Integration_Mapping_Step_and_Connection_to_Receiver_Step07&amp;lt;/Service&amp;gt;
      &amp;lt;/Interface&amp;gt;
    &amp;lt;/ns0:Interfaces&amp;gt;
  &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;BR /&gt;&lt;STRONG&gt;Alternative Partners&lt;/STRONG&gt;&lt;BR /&gt;Agency: SenderSystem Name (SAPERP)&lt;BR /&gt;Scheme: &lt;SPAN&gt;SenderInterface&lt;/SPAN&gt;&lt;BR /&gt;ID: SenderInterfaceName&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_6-1755984464983.png" style="width: 636px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304313iBDDA121EB1E9417F/image-dimensions/636x158/is-moderation-mode/true?v=v2" width="636" height="158" role="button" title="Sathish_Kumar_BP_6-1755984464983.png" alt="Sathish_Kumar_BP_6-1755984464983.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;FONT size="4"&gt;The same way we can add more entries in partner directory for different interfaces.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;FONT size="4"&gt;ex:&lt;FONT size="3"&gt;&amp;nbsp;SAPCLNT100~SHPMNT.SHPMNT06&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="3"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SAPCLNT100~CustomerData_Out&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="3"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;etc...&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Testing:&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;We are ready to test now. Let's do it.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;I have triggered test IDOC from ERP and below is the message flow of all pipeline steps handled.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sathish_Kumar_BP_0-1755987913322.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304317i0966424573CCBAC4/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Sathish_Kumar_BP_0-1755987913322.png" alt="Sathish_Kumar_BP_0-1755987913322.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I hope this provides useful insights into migration from SAP PI/PO to Cloud Integration for handling IDOC asynchronous scenarios.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Advantages&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Design&lt;/STRONG&gt;: Pipeline steps break down integration flow into&amp;nbsp;&lt;STRONG&gt;clear, manageable steps&lt;/STRONG&gt;&amp;nbsp;(ex: sender, processing, receiver). This makes it easier to&amp;nbsp;&lt;STRONG&gt;design, debug, and maintain&lt;/STRONG&gt;&amp;nbsp;integration scenarios.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Re-try mechanisms&lt;/STRONG&gt;. Since all pipeline steps decoupled, JMS queues handle the automatic retry to process if the messages fail.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Monitoring&lt;/STRONG&gt;: &lt;SPAN&gt;Each pipeline step can be monitored individually, helping identify&amp;nbsp;&lt;STRONG&gt;bottlenecks or failures&lt;/STRONG&gt;&amp;nbsp;quickly.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Easy Migration&lt;/STRONG&gt;: &lt;SPAN&gt;We &amp;nbsp;just needed to import the mapping from SAP PO - everything else is already available in the pipeline template to complete the integration.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Reference:&amp;nbsp;&lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/pipeline-steps?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Fully Decoupled Pipeline&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Regards,&lt;BR /&gt;Sathish Kumar B P&amp;nbsp;&lt;BR /&gt;SAP Integration Developer&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/migration-sap-pi-po-to-sap-cloud-integration-using-pipeline-concepts/ba-p/14189135"/>
    <published>2025-09-02T07:15:42.965000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/insert-and-list-data-via-google-bigquery-adapter-for-sap-integration-suite/ba-p/14174627</id>
    <title>Insert and List Data via Google BigQuery Adapter for SAP Integration Suite</title>
    <updated>2025-09-02T08:51:58.770000+02:00</updated>
    <author>
      <name>ashishkuvvarapu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451570</uri>
    </author>
    <content>&lt;P&gt;For Big Data enthusiasts, Google BigQuery is one of the most powerful and easy to access data warehouse offerings available on cloud. &amp;nbsp;It's scalability and analytical capabilities also make it the preferred choice for businesses who want to use store historical data and use it to derive insights.&lt;/P&gt;&lt;P&gt;A great product for leveraging these features in your integration scenarios is Google BigQuery Adapter for SAP Integration Suite. This blog explores a scenario for data insertion and listing for a table.&lt;/P&gt;&lt;H1 id="toc-hId-1607862225"&gt;&lt;SPAN&gt;How to Insert and List data Google BigQuery Tables&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;BigQuery uses columnar data storage, it is cloud based and serverless, meaning you don’t need to install any software before you can use it. Let us see how to insert and list data for tables in Google BigQuery Adapter.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_1-1754575803020.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298047iFBF9CE191484C107/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashishkuvvarapu_1-1754575803020.png" alt="ashishkuvvarapu_1-1754575803020.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1411348720"&gt;&lt;SPAN&gt;Create Table via Postman &lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;You can utilize the below code snippet to create the table in Google BigQuery.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tableReference": {
    "tableId": "data"
  },
  "schema": {
    "fields": [
      {
        "name": "Name",
        "type": "STRING",
        "mode": "NULLABLE"
      },
      {
        "name": "ID",
        "type": "INTEGER",
        "mode": "NULLABLE"
      },
      {
        "name": "Variable",
        "type": "FLOAT",
        "mode": "NULLABLE"
      },
      {
        "name": "Secret_Code",
        "type": "BYTES",
        "mode": "NULLABLE"
      },
      {
        "name": "Is_Permanent",
        "type": "BOOLEAN",
        "mode": "NULLABLE"
      },
      {
        "name": "joining_date",
        "type": "DATE",
        "mode": "NULLABLE"
      },
      {
        "name": "latest_timestamp",
        "type": "DATETIME",
        "mode": "NULLABLE"
      },
      {
        "name": "timestamp",
        "type": "INTEGER",
        "mode": "NULLABLE"
      },
      {
        "name": "time",
        "type": "TIME",
        "mode": "NULLABLE"
      },
      {
        "name": "location",
        "type": "GEOGRAPHY",
        "mode": "NULLABLE"
      },
      {
        "name": "Variable1",
        "type": "NUMERIC",
        "mode": "NULLABLE"
      },
      {
        "name": "Variable2",
        "type": "BIGNUMERIC",
        "mode": "NULLABLE"
      },
      {
        "name": "additional",
        "type": "RECORD",
        "mode": "NULLABLE",
        "fields": [
          {
            "name": "sub_field1",
            "type": "STRING",
            "mode": "NULLABLE"
          },
          {
            "name": "sub_field2",
            "type": "STRING",
            "mode": "NULLABLE"
          }
        ]
      },
      {
        "name": "misc",
        "type": "RECORD",
        "mode": "NULLABLE",
        "fields": [
          {
            "name": "sub_field1",
            "type": "STRING",
            "mode": "NULLABLE"
          },
          {
            "name": "sub_field2",
            "type": "STRING",
            "mode": "NULLABLE"
          }
        ]
      }
    ]
  }
}
 
 &lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-1343917934"&gt;&lt;SPAN&gt;Prepare the Insert Payload&amp;nbsp;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Let us assume you need to insert data for two employees: data consisting of various data types and multiple values in a single record. &amp;nbsp;Go through the below payload to explore the different fields.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "rows": [
    {
      "json": {
        "Name": "John Doe",
        "ID": 123,
        "Variable": 45.67,
        "Secret_Code": "U29tZSBieXRlcyBkYXRh", 
        "Is_Permanent": true,
        "joining_date": "2024-03-11",
        "latest_timestamp": "2024-03-11T14:30:00",
        "timestamp": "1709802600",
        "time": "14:30:00",
        "location": "POINT(-73.935242 40.730610)",
        "Variable1": "12345.678901234",
        "Variable2": "98765432101234567890.123456789012345678901234567890",
        "additional": {
          "sub_field1": "Blood",
          "sub_field2": "A+"
        },
        "misc": {
          "sub_field1": "Code",
          "sub_field2": "CRE"
        }
      }
    },
    {
      "json": {
        "Name": "Barry Allen",
        "ID": 456,
        "Variable": 98.76,
        "Secret_Code": "QW5vdGhlciBieXRlcyBkYXRh",
        "Is_Permanent": false,
        "joining date": "2024-03-12",
        "latest_timestamp": "2024-03-12T16:45:00",
        "timestamp": "1709889000",
        "time": "16:45:00",
        "location": "POLYGON((-73.935242 40.730610, -73.935242 40.731610, -73.934242 40.731610, -73.934242 40.730610, -73.935242 40.730610))",
        "Variable1": "98765.432109876",
        "Variable2": "12345678901234567890.987654321098765432109876543210",
        "additional": {
          "sub_field1": "Blood",
          "sub_field2": "A+"
        },
        "misc": {
          "sub_field1": "Code",
          "sub_field2": "CRE"
        }
      }
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;H1 id="toc-hId-1018321710"&gt;&lt;SPAN&gt;Connect to Google BigQuery&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;The &lt;STRONG&gt;Connection&lt;/STRONG&gt; tab contains connection and authentication parameters that need to be populated to establish connection with Google BigQuery.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_0-1754574106266.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298021iFD0EE189ACB77FE6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ashishkuvvarapu_0-1754574106266.png" alt="ashishkuvvarapu_0-1754574106266.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-821808205"&gt;&lt;SPAN&gt;Configuration for Insert and List&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;This is a very straightforward configuration which requires you to select &lt;STRONG&gt;Table Data&lt;/STRONG&gt;&amp;nbsp;as entity and &lt;STRONG&gt;InsertAll&lt;/STRONG&gt; operation.&lt;/P&gt;&lt;P&gt;Now you must specify your Google &lt;STRONG&gt;Project ID&lt;/STRONG&gt;, followed by &lt;STRONG&gt;Dataset ID&lt;/STRONG&gt; and &lt;STRONG&gt;Table ID&lt;/STRONG&gt; for your target table.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_5-1754574451921.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298027iAAA838D775DBB235/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ashishkuvvarapu_5-1754574451921.png" alt="ashishkuvvarapu_5-1754574451921.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For &lt;STRONG&gt;List&lt;/STRONG&gt; operation, the configuration requires the same parameters as before in Dataset ID and Table ID. However, to customize our response and save costs we use &lt;STRONG&gt;Query Parameters&lt;/STRONG&gt; and &lt;STRONG&gt;Max Results&lt;/STRONG&gt; to limit our search results.&lt;/P&gt;&lt;P&gt;For more information on how to use this operation using query parameters&amp;nbsp; see&amp;nbsp;&lt;A href="https://cloud.google.com/bigquery/docs/reference/rest/v2/tabledata/list" target="_blank" rel="noopener nofollow noreferrer"&gt;https://cloud.google.com/bigquery/docs/reference/rest/v2/tabledata/list&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_7-1754574505910.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298029iBCADE52762A23B00/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ashishkuvvarapu_7-1754574505910.png" alt="ashishkuvvarapu_7-1754574505910.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-625294700"&gt;&lt;SPAN&gt;Verify Data and Search Results&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;Finally, you can log in to Google console to view the table with data.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_8-1754574575287.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298030iFB146F327027DD15/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashishkuvvarapu_8-1754574575287.png" alt="ashishkuvvarapu_8-1754574575287.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can also validate the &lt;STRONG&gt;List&lt;/STRONG&gt; operation results via CPI.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_0-1754575117452.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298036i98CD7B0E17A6054C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ashishkuvvarapu_0-1754575117452.png" alt="ashishkuvvarapu_0-1754575117452.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you’re interested in learning more about the Google Big Query Adapter, do check out the announcement blog by SAP for &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/google-bigquery-adapter-for-sap-integration-suite/ba-p/14115411" target="_blank"&gt;Google BigQuery Adapter for SAP Integration Suite&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Happy Learning !&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/insert-and-list-data-via-google-bigquery-adapter-for-sap-integration-suite/ba-p/14174627"/>
    <published>2025-09-02T08:51:58.770000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/vda-automotive-flat-file-processing-with-b2b-integration-factory/ba-p/14203524</id>
    <title>VDA Automotive Flat File Processing with B2B Integration Factory</title>
    <updated>2025-09-02T12:50:01.164000+02:00</updated>
    <author>
      <name>mert_oezkan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/142311</uri>
    </author>
    <content>&lt;H4 id="toc-hId-1336785177" id="toc-hId-2017244131"&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;Hello dear B2B Integration Community,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In many automotive supply chain scenarios, the ability to process &lt;STRONG&gt;VDA flat files&lt;/STRONG&gt;, as specified by the German Automotive Industry Association, remains a critical requirement for seamless EDI communication.&lt;/P&gt;&lt;P&gt;While support for these specific formats is still pending in the standard SAP Integration Suite product roadmap and foreseen to be delivered by Q2/2026:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mert_oezkan_0-1756757337314.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307543i30CDC23A5CD237FA/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="mert_oezkan_0-1756757337314.png" alt="mert_oezkan_0-1756757337314.png" /&gt;&lt;/span&gt;the &lt;STRONG&gt;B2B Integration Factory&lt;/STRONG&gt; has already stepped in to fill this gap.&lt;/P&gt;&lt;P&gt;Thanks to its flexible and agile development approach, the B2B Integration Factory currently supports the processing of VDA automotive flat files, enabling customers in the automotive sector to proceed with their B2B integration projects &lt;STRONG&gt;without waiting for the standard product release&lt;/STRONG&gt;.&lt;BR /&gt;Although the OFTP adapter is not currently available, the associated integration content can still be migrated and validated, allowing customers to prepare and move forward with their B2B integration projects.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1336785177" id="toc-hId-1820730626"&gt;What needs to be configured - General&lt;/H4&gt;&lt;H6 id="toc-hId-1882382559"&gt;1. Integration Content Deployment&lt;/H6&gt;&lt;P&gt;Update and deploy the latest changes of the B2B Integration Factory packages, particularly:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;B2B Integration Factory - Cloud Integration - Trading Partner Management v1.8.0&lt;/LI&gt;&lt;LI&gt;B2B Integration Factory - Extended Interchange Processing Flows v1.3.0&lt;/LI&gt;&lt;LI&gt;B2B Integration Factory - Interchange Extraction Flows v1.4.0&lt;/LI&gt;&lt;/UL&gt;&lt;H6 id="toc-hId-1685869054"&gt;2. Create a Message Implementation Guideline (MIG)&lt;/H6&gt;&lt;P&gt;Upload the VDA .xsd as a Custom Message into the Integration Advisor and create the VDA MIG:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mert_oezkan_2-1756759021496.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307545iBD212DCF318CDFFB/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="mert_oezkan_2-1756759021496.png" alt="mert_oezkan_2-1756759021496.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H6 id="toc-hId-1489355549"&gt;3. Trading Partner setup&lt;/H6&gt;&lt;P&gt;Leverage an available message type as a placeholder in the type system, in the Trading Partner Profile and then in the Trading Partner Agreement, even if it's not originally intended for this purpose, such as VDA EDIFACT for instance:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mert_oezkan_3-1756759463565.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307546i93755731E6B6A90C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="mert_oezkan_3-1756759463565.png" alt="mert_oezkan_3-1756759463565.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1336785177" id="toc-hId-1034676606"&gt;Converting XML to VDA Flat File&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;As already known from the IDocXML to IDocFlat &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/b2b-integration-factory-q4-2024-release-highlights/ba-p/13979279" target="_self"&gt;Blog&lt;/A&gt; we will maintain the exact same two activity parameter keys in the TPA:&lt;BR /&gt;&lt;EM&gt;SAP_EDI_REC_Payload_Format&lt;/EM&gt; =&amp;nbsp;VDA-Automotive&lt;BR /&gt;&lt;EM&gt;SAP_B2B_Syntax_Conversion_ProcessFlowAddress&lt;/EM&gt; =&amp;nbsp;/tpm/syntax-conversion/VDA-Automotive&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;This conversion approach is independent of the specific message type and can be applied universally across different VDA formats&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;Additionally, I recommend to maintain two additional parameters:&lt;BR /&gt;&lt;EM&gt;SAP_REC_Assembly_Process_Flow_Indicator&lt;/EM&gt; = false&lt;BR /&gt;&lt;EM&gt;SAP_EDI_REC_Document_Standard&lt;/EM&gt; =&amp;nbsp;VDA AUTOMOTIVE&lt;BR /&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;The first one tells that an assembly procedure is not needed and the second is to populate the correct Receiver Document Standard in the B2B Monitoring. The TPA looks like this:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mert_oezkan_5-1756760841061.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307548i886A53E41E842A72/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="mert_oezkan_5-1756760841061.png" alt="mert_oezkan_5-1756760841061.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;And in B2B Monitoring:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mert_oezkan_6-1756760978191.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307549iE5F47EA40832357C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="mert_oezkan_6-1756760978191.png" alt="mert_oezkan_6-1756760978191.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mert_oezkan_0-1756764158813.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307559i4B084D6CB496D651/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="mert_oezkan_0-1756764158813.png" alt="mert_oezkan_0-1756764158813.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mert_oezkan_1-1756764212844.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307560i652D600D7189392A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="mert_oezkan_1-1756764212844.png" alt="mert_oezkan_1-1756764212844.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here we can see a successful tranformation from an DESADV IDoc to a VDA 4913 Flat file.&lt;BR /&gt;Additionaly, you can set the parameter&amp;nbsp;&lt;EM&gt;SAP_VDA_Automotive_To_Flat_Apply_Max_Length. &lt;/EM&gt;It is per default set to true. If you do not want to apply the max length as defined in the .xsd then simply set the parameter in the TPA to false.&lt;/P&gt;&lt;H4 id="toc-hId-1336785177" id="toc-hId-838163101"&gt;Converting VDA Flat File to XML&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;For this case, only one activity parameter is required to set the right Sender Document Standard. There are two optional parameters which follow the same naming convention as in my previous &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/reusing-sap-pi-po-b2b-mapping-content-in-cloud-integration-trading-partner/ba-p/14147241" target="_self"&gt;blog&lt;/A&gt; where I talk about migration PI/PO content to Cloud Integration TPM. If you want to keep the content from your legacy PI/PO then&amp;nbsp;the Namespace as well as the Namespace Prefix matters for the PI/PO message mapping.&amp;nbsp;These can be maintained in the relevant BTA. Parameter Private values are&amp;nbsp;&lt;EM&gt;SAP_B2B_MM_Namespace&lt;/EM&gt; and&amp;nbsp;&lt;EM&gt;SAP_B2B_MM_Namespace_Prefix&lt;/EM&gt;. Here is an example BTA:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mert_oezkan_11-1756762839229.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307554i3956888596F5588F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="mert_oezkan_11-1756762839229.png" alt="mert_oezkan_11-1756762839229.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In this case, I am converting a VDA 4905 Flat file to its corresponding VDA 4905 XML as the target. At the receiver interchange level I am again misusing the type system IDoc wheras I am using VDA AUTOMOTIVE.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;This conversion approach is also independent of the specific message type and can be applied universally across different VDA formats.&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Result in B2B Monitoring:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mert_oezkan_12-1756762943460.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307555iFBB4A9481EC927B4/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="mert_oezkan_12-1756762943460.png" alt="mert_oezkan_12-1756762943460.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mert_oezkan_2-1756764263445.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307561i4C4CAEEE384B5212/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="mert_oezkan_2-1756764263445.png" alt="mert_oezkan_2-1756764263445.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mert_oezkan_3-1756764295625.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307562i704A99A77669A44B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="mert_oezkan_3-1756764295625.png" alt="mert_oezkan_3-1756764295625.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1336785177" id="toc-hId-641649596"&gt;Outlook&lt;/H4&gt;&lt;P&gt;The ability to process VDA automotive flat files using the B2B Integration Factory—&lt;STRONG&gt;even ahead of standard product support&lt;/STRONG&gt;—demonstrates SAP’s commitment to agility, extensibility, and customer-centric innovation in the B2B integration space.&lt;/P&gt;&lt;P&gt;As the automotive industry continues to rely on flat file formats like VDA for critical EDI processes, this early enablement empowers customers to &lt;STRONG&gt;move forward with migration and modernization efforts&lt;/STRONG&gt; without delay.&lt;/P&gt;&lt;P&gt;Organizations that adopt this approach today will be well-positioned to seamlessly transition to future product enhancements, with minimal rework and full alignment to SAP’s integration roadmap.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/vda-automotive-flat-file-processing-with-b2b-integration-factory/ba-p/14203524"/>
    <published>2025-09-02T12:50:01.164000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/creating-your-first-iflow-in-cloud-integration-for-an-ibp-s-4hana-on-prem/ba-p/14205240</id>
    <title>Creating your first IFlow in Cloud Integration for an IBP - S/4HANA (on prem/private) integration</title>
    <updated>2025-09-02T23:03:31.723000+02:00</updated>
    <author>
      <name>SofianePebre</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1476236</uri>
    </author>
    <content>&lt;P&gt;Hi Community,&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Continuing this blog series on working with &lt;a href="https://community.sap.com/t5/c-khhcw49343/Cloud+Integration/pd-p/67837800100800006801" class="lia-product-mention" data-product="361-1"&gt;Cloud Integration&lt;/a&gt;&amp;nbsp;&amp;nbsp;from&amp;nbsp; SAP BTP's &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Integration+Suite/pd-p/73554900100800003241" class="lia-product-mention" data-product="23-1"&gt;SAP Integration Suite&lt;/a&gt;&amp;nbsp;service.&lt;BR /&gt;We will cover in this article how to create and deploy your first customer integration flow between &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Integrated+Business+Planning/pd-p/67838200100800006742" class="lia-product-mention" data-product="664-1"&gt;SAP Integrated Business Planning&lt;/a&gt;&amp;nbsp;and &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA/pd-p/73554900100800000266" class="lia-product-mention" data-product="799-1"&gt;SAP S/4HANA&lt;/a&gt;&amp;nbsp;(on premise / private cloud).&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;All steps from my previous two blog entries &lt;A href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/sap-ibp-new-integration-option-introducing-sap-cloud-integration-from-btp-s/ba-p/14169516" target="_blank"&gt;BTP/IBP Technical setup&lt;/A&gt; and &lt;A href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/configuring-sap-cloud-integration-for-an-ibp-to-s-4hana-on-prem-private/ba-p/14194922" target="_blank"&gt;Integration Suite Initial Configuration&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;Users have been created via the BTP cockpit with the relevant roles depending on what tasks they need to perform. The three typical roles for CI are the following: &lt;EM&gt;PI_Administrator, PI_Integration_Developer and PI_Business_Expert&lt;/EM&gt;. Check the &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/persona-2937e5ca6ef448cfb21451a2461cc2a6#loio2937e5ca6ef448cfb21451a2461cc2a6__business" target="_blank" rel="noopener noreferrer"&gt;Personas for CI information&lt;/A&gt; to understand what each covers in order to assign the most relevant ones.&lt;UL&gt;&lt;LI&gt;To support actions from this blog entry you need the PI_Integration_Developer role.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;The &lt;A href="https://help.sap.com/ibp_s4hana_addon" target="_blank" rel="noopener noreferrer"&gt;SAP S/4HANA, Supply Chain Integration Add-On for SAP Integrated Business Planning&lt;/A&gt; is configured in S/4HANA for integration purposes.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;BR /&gt;-------------------------------------------------------------------------------------------------------------------&lt;BR /&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Creating your customer iflow&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now that we have done the technical setup and configured Integration Suite to define source/target systems (called destinations) and loaded the reusable iflows we can start building our own project integrations: customer iflows.&lt;/P&gt;&lt;P&gt;To begin, we can start creating a simple business iflow that calls upon a reusable iflow delivered with the August 2025 release called Generic Data Transfer.&lt;/P&gt;&lt;P&gt;The latter is a full-fledged iflow that is built on the basis on a series of individual reusable iflows (that cannot be executed as standalone). It can be leveraged to : read the S/4HANA integration addon extractors, transform &amp;amp; map data to corresponding IBP target and load it there (triggering the IBP post processing batch).&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_0-1756845520341.png" style="width: 951px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308193i9CF382BF4CADB627/image-dimensions/951x215/is-moderation-mode/true?v=v2" width="951" height="215" role="button" title="SofianePebre_0-1756845520341.png" alt="SofianePebre_0-1756845520341.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;But if you want to call upon it with two different sets of parameters, i.e. calling two different extractors with corresponding filters to send POs AND PlannedOrders to IBP, then you have to have two customer iflows. It is the same in CI-DS : for two key figure objects you need two dataflows or even two tasks.&lt;/P&gt;&lt;P&gt;So we can create a first customer iflow that simply calls our Generic Data Transfer iflow as a model that we’ll later copy as many times as needed to cover each object we need to send to IBP. We call this model a &lt;STRONG&gt;wrapper&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Access your Integration Suite tenant and the Design &amp;gt; Integrations and APIs section from your left side panel.&lt;/P&gt;&lt;P&gt;Click on Create and fill out the needed information to set your own package.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_1-1756845520345.png" style="width: 713px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308195iE8BB5E2FCAB37B50/image-dimensions/713x381/is-moderation-mode/true?v=v2" width="713" height="381" role="button" title="SofianePebre_1-1756845520345.png" alt="SofianePebre_1-1756845520345.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Think of your package as a project in CIDS, a grouping of iflows that you could attach significance to (e.g. a package per source system or type of data integrated or target planning area, etc.). You can also store documents (e.g. specifications, guides, etc.) in your package to support integration activities.&lt;/P&gt;&lt;P&gt;Click on Add &amp;gt; Integration Flow&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_2-1756845520349.png" style="width: 679px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308194i8095910C0BDC2448/image-dimensions/679x356/is-moderation-mode/true?v=v2" width="679" height="356" role="button" title="SofianePebre_2-1756845520349.png" alt="SofianePebre_2-1756845520349.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;A blank canvas appears with the premises of your flow.&lt;/P&gt;&lt;P&gt;At the top, you have various features allowing you to build your flow. Our intend here is to have one prior step, before adding a call to our main reusable iflow, called a content modifier. This object will allow us to define and pass along global parameter values to the generic reusable iflow in order to send specific data to IBP, e.g. purchase orders.&lt;/P&gt;&lt;P&gt;From the menu, select Transformation &amp;gt; Content Modifier&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_3-1756845520352.png" style="width: 736px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308196iF920B70F895E06B9/image-dimensions/736x311/is-moderation-mode/true?v=v2" width="736" height="311" role="button" title="SofianePebre_3-1756845520352.png" alt="SofianePebre_3-1756845520352.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click in the middle of the process structure to add it between the start and end events. Bring up the details section of the Content Modifier from the bottom of the screen and define a name for this step.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_4-1756845520354.png" style="width: 745px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308198iE2E0860639B0D942/image-dimensions/745x465/is-moderation-mode/true?v=v2" width="745" height="465" role="button" title="SofianePebre_4-1756845520354.png" alt="SofianePebre_4-1756845520354.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;A process must begin and end with events. For our purpose, let’s use a timer as a start event. Select from the upper functions Event &amp;gt; Timer.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_5-1756845520357.png" style="width: 877px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308197i7239E55BD730D3DD/image-dimensions/877x277/is-moderation-mode/true?v=v2" width="877" height="277" role="button" title="SofianePebre_5-1756845520357.png" alt="SofianePebre_5-1756845520357.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Place it before our previous Content Modifier and delete the preexisting Start event.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_6-1756845520358.png" style="width: 511px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308199i3AA09E091942B3AC/image-dimensions/511x205/is-moderation-mode/true?v=v2" width="511" height="205" role="button" title="SofianePebre_6-1756845520358.png" alt="SofianePebre_6-1756845520358.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can choose how the timer start works by clicking on it and updating its properties from the bottom of the screen. Go to tab Scheduler and select Basic with the below selections so that the execution of ths iflow only starts when you manually trigger its deployment.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_7-1756845520361.png" style="width: 367px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308201iECE57135BCC7F84B/image-dimensions/367x687/is-moderation-mode/true?v=v2" width="367" height="687" role="button" title="SofianePebre_7-1756845520361.png" alt="SofianePebre_7-1756845520361.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This is how you can also schedule your iflow to run with more frequency, for example every day/week, etc (see the Repeat criteria above) or with more complex modes (see the Advanced tab). Once you have set this, you need to save your iflow:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_8-1756845520362.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308200iA3AAFAB1FFB86D0C/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="SofianePebre_8-1756845520362.png" alt="SofianePebre_8-1756845520362.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;To remove the preexisting Start event, click on it and then on the bin icon that appears to its right&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_9-1756845520363.png" style="width: 227px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308202i828DFAC717539F37/image-dimensions/227x253/is-moderation-mode/true?v=v2" width="227" height="253" role="button" title="SofianePebre_9-1756845520363.png" alt="SofianePebre_9-1756845520363.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can proceed the same way with the Sender /Receiver objects to the left and right of the flow.&lt;/P&gt;&lt;P&gt;Next, we need to add our generic reusable iflow that encodes calls to both S/4HANA and IBP. For this, you can again look for the upper function Call &amp;gt; External Call &amp;gt; Request Reply or click on the previous process step, the Content Modifier, and select the “add flow step” &amp;nbsp;option via the “+” icon.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_10-1756845520364.png" style="width: 427px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308204iA6DF8CB9690FACF4/image-dimensions/427x195/is-moderation-mode/true?v=v2" width="427" height="195" role="button" title="SofianePebre_10-1756845520364.png" alt="SofianePebre_10-1756845520364.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select request reply&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_11-1756845520365.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308203iFFD0F7981D8A46E0/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="SofianePebre_11-1756845520365.png" alt="SofianePebre_11-1756845520365.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Add it to the right of the Content Modifier, before the end event and give it a name.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_12-1756845520366.png" style="width: 506px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308206i887EB461D030ABEA/image-dimensions/506x206/is-moderation-mode/true?v=v2" width="506" height="206" role="button" title="SofianePebre_12-1756845520366.png" alt="SofianePebre_12-1756845520366.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_13-1756845520367.png" style="width: 359px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308207iACE970CF37DE623A/image-dimensions/359x136/is-moderation-mode/true?v=v2" width="359" height="136" role="button" title="SofianePebre_13-1756845520367.png" alt="SofianePebre_13-1756845520367.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This step will technically call the generic reusable iflow. To do this we will add a Receiver in the iflow definition.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_14-1756845520368.png" style="width: 473px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308208i93D38BA8D283A15C/image-dimensions/473x201/is-moderation-mode/true?v=v2" width="473" height="201" role="button" title="SofianePebre_14-1756845520368.png" alt="SofianePebre_14-1756845520368.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;search for Receiver and add it to the flow.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_15-1756845520369.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308209i6695BE1092C6AFC9/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="SofianePebre_15-1756845520369.png" alt="SofianePebre_15-1756845520369.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Note you can also add it from the upper function Participant &amp;gt; Receiver.&lt;/P&gt;&lt;P&gt;The system now asks how you want to link the Request Reply to the Receiver by choosing from a list of adapter types. Select Process Direct to specify you need to call another process (the generic reusable iflow).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_16-1756845520370.png" style="width: 315px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308210i1B2608DC8B3129E1/image-dimensions/315x418/is-moderation-mode/true?v=v2" width="315" height="418" role="button" title="SofianePebre_16-1756845520370.png" alt="SofianePebre_16-1756845520370.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The Receiver is placed outside of the integration process box, you can also rename it to better understand its use by simply clicking on the box and changing its properties.&lt;/P&gt;&lt;P&gt;Now to link this external call to the generic reusable iflow, you need to click on the Process Direct arrow linking the two objects and look to the “Connection” tab of its properties, set the full technical ID of the reusable iflow in the Address field:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP_IBP_Add-on_Read_-_Generic_Process&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_17-1756845520372.png" style="width: 741px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308211i5E4965CEA7A3418F/image-dimensions/741x643/is-moderation-mode/true?v=v2" width="741" height="643" role="button" title="SofianePebre_17-1756845520372.png" alt="SofianePebre_17-1756845520372.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note: you can find this ID by navigating to the reusable iflow itself : Design section from the left side panel, select the “SAP IBP Add-On - Reusable Integration Flows” package, open the iflow “SAP IBP Add-On Read - Generic Data Transfer”. Bring up the flow properties from the bottom of the screen and find its ID.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_18-1756845520380.png" style="width: 716px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308213iC173CC8C069807AA/image-dimensions/716x509/is-moderation-mode/true?v=v2" width="716" height="509" role="button" title="SofianePebre_18-1756845520380.png" alt="SofianePebre_18-1756845520380.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Our customer iflow now has all necessary objects to run (the wrapper being a quick set up), we just need to define the global parameters for the Content Modifier we created as a first step in order to have the possibility during execution of the flow to specify what extractor should be read, what mapping should be applied, what filters should be used, etc.&lt;/P&gt;&lt;P&gt;These parameters are already part of the reusable iflow so once we call them in the first step and fill them, they will be automatically read and applied.&lt;/P&gt;&lt;P&gt;To be able to set your own values when executing (deploying) the iflow, you need to externalize them via the Content Modifier step this way:&lt;/P&gt;&lt;P&gt;Click on your Content Modifier step, previously named Set Extraction Filters and click on Externalize from its properties section.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_19-1756845520383.png" style="width: 785px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308212iD71433B7A2021258/image-dimensions/785x204/is-moderation-mode/true?v=v2" width="785" height="204" role="button" title="SofianePebre_19-1756845520383.png" alt="SofianePebre_19-1756845520383.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create your parameters one by one (use the Add button to allow entering more parameters).&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Type the parameter name in the Name column from the below table:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Non exhaustive list of available global parameters&lt;/P&gt;&lt;TABLE width="1000"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;&lt;STRONG&gt;Parameter Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;FileName&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;Name of the generated file passed to IBP that you can download from the Data Integration Jobs app.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;TypeOfData&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;The type of data to load, KeyFigures or MasterData (respect this way of writing).&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;TimeDisaggregationLevel&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;Use time level values that are defined in the time profile of the planning area in IBP using the &lt;EM&gt;Planning Areas – Model Configuration &lt;/EM&gt;app.&lt;/P&gt;&lt;P&gt;You can only specify a TimeDisaggregationLevel value that is the same or higher than the base time profile level of the planning level you’re uploading data to. If TimeDisaggregationLevel is left empty, it defaults to the base time profile level.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;MasterDataType&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;The target Master Data type you want to load in IBP without the prefix that is usually used to distinguish master data types for different planning areas.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Example: your master data type is ABCPRODUCT, type in PRODUCT here. &lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;MasterDataPrefix&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;Here you can set the prefix only.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Example: your master data type is ABCPRODUCT, type in ABC here.&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;BatchName&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;The name that appears as batch in the Data Integration Jobs app in IBP.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;PostFetchFilterExtensionID&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;If you are using an extension for defining filters, this is where you’d set its ID. Will be covered in a future blog entry.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;ERPMaxPackageSize&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;Maximum package size coming from the S/4HANA integration addon for IBP.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;MappingExtensionID&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;If you are using an extension for mapping, this is where you’d set its ID. Will be covered in a future blog entry.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;Extractor&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;The S/4HANA extractor ID to use as data source.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;ERPRequestedFields&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;Source fields to map from S/4HANA side. Add them in any order, separated by commas.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Example : PRDID,LOCID,KEYFIGUREDATE,PLANNINGRELEVQTY&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;IBPFieldList&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;Target fields to map to IBP. Add them in any order, separated by commas.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Example : PRDID,LOCID,KEYFIGUREDATE,MINRECEIPT&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;FieldMap&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;Mapping between above S/4HANA and IBP fields.&lt;/P&gt;&lt;P&gt;Separate mapping groups by commas and separate source from target with colons.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Example : PRDID: PRDID,LOCID: LOCID, KEYFIGUREDATE: KEYFIGUREDATE,PLANNINGRELEVQTY:MINRECEIPT&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Note: when both source and target have the same ID, you do not need to add them here, so the simplified version of the mapping in the above case that would also work is :&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;PLANNINGRELEVQTY:MINRECEIPT&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;DestinationforSAPIBP&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;The Destination configured in BTP cockpit to represent the IBP tenant you want to use as target for the flow.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;PlanningArea&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;The IBP planning area as target for the flow.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;PlanningAreaVersion&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;The IBP planning area version as target for the flow.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;Filters&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;Defines the filter criteria in restricted OData format:&lt;/P&gt;&lt;P&gt;• Relational operators&lt;/P&gt;&lt;P&gt;These operators are EQ, NE, LT, LE, GT, GE, and LIKE.&lt;/P&gt;&lt;P&gt;• Logical operators&lt;/P&gt;&lt;P&gt;These operators are AND, NOT, OR, (, and ).&lt;/P&gt;&lt;P&gt;• Functions&lt;/P&gt;&lt;P&gt;These functions are STARTSWITH, ENDSWITH, and SUBSTRINGOF.&lt;/P&gt;&lt;P&gt;Separate the conditions by a comma. The objects you filter on are fields from the S/4HANA extractor.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Example: TIMEPROFILEID EQ '2504',TIMEPROFILELEVEL EQ '2',MRPELEMENTTYPE EQ 'BE'&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;ERPDestination&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;The Destination configured in BTP cockpit to represent the S/4HANA tenant you want to use as source for the flow.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;ProcessUnchangedData&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;If you want to skip unchanged data, regardless of SAP IBP&lt;/P&gt;&lt;P&gt;global parameter setting for this behavior, set this parameter to &lt;STRONG&gt;false&lt;/STRONG&gt;. If you want to process unchanged data, regardless of the SAP IBP global parameter setting, set this parameter to &lt;STRONG&gt;true&lt;/STRONG&gt;. If you leave this parameter field empty, the SAP IBP global parameter determines the behavior.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="216.628px"&gt;&lt;P&gt;BatchCommand&lt;/P&gt;&lt;/TD&gt;&lt;TD width="405.534px"&gt;&lt;P&gt;Defines the operation type. Accepted parameters are:&lt;/P&gt;&lt;P&gt;INSERT_UPDATE, REPLACE, DELETE.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Leave the Source type as Constant.&lt;/LI&gt;&lt;LI&gt;The Source Value allows you to either&lt;UL&gt;&lt;LI&gt;give a default value that will not be modifiable when deploying the iflow,&lt;/LI&gt;&lt;LI&gt;give a default value that the user can update upon deployment,&lt;/LI&gt;&lt;LI&gt;set no value and let the user define it during deployment.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_20-1756845520386.png" style="width: 901px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308214i268BB28F8F20068F/image-dimensions/901x237/is-moderation-mode/true?v=v2" width="901" height="237" role="button" title="SofianePebre_20-1756845520386.png" alt="SofianePebre_20-1756845520386.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;To set a &lt;STRONG&gt;default value that will not be editable&lt;/STRONG&gt; by the user when deploying the iflow, simply fill in the Source Value field with your value.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Example: you want this iflow to always be executed in Insert/update load mode in IBP.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_21-1756845520388.png" style="width: 838px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308215iD8413BE6400FC689/image-dimensions/838x222/is-moderation-mode/true?v=v2" width="838" height="222" role="button" title="SofianePebre_21-1756845520388.png" alt="SofianePebre_21-1756845520388.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;To let the user &lt;STRONG&gt;define the value only upon deploying the iflow&lt;/STRONG&gt;, fill in the Source Value field with the name of the parameter surrounded by double brackets on each side (format {{FileName}}). Once you validate, this will appear as &lt;EM&gt;&amp;lt; Define Value &amp;gt;&lt;/EM&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_22-1756845520389.png" style="width: 825px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308216i073D9724D2AF06AB/image-dimensions/825x198/is-moderation-mode/true?v=v2" width="825" height="198" role="button" title="SofianePebre_22-1756845520389.png" alt="SofianePebre_22-1756845520389.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When you validate:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_23-1756845520390.png" style="width: 842px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308217i42CCCDF4D92E05AF/image-dimensions/842x40/is-moderation-mode/true?v=v2" width="842" height="40" role="button" title="SofianePebre_23-1756845520390.png" alt="SofianePebre_23-1756845520390.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;And finally, to set a &lt;STRONG&gt;default value that can be editable when deploying the iflow&lt;/STRONG&gt;, proceed as above with the double brackets strategy and then click on the &lt;EM&gt;&amp;lt; Define Value&amp;gt;&lt;/EM&gt; value. This opens a new window where you can set your default value.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Example: you want your iflow to be used for loading Key Figures by default but if a user needs to change this to send Master Data, they can make that change during deployment.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_24-1756845520394.png" style="width: 726px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308218i17F8A3B10E787544/image-dimensions/726x334/is-moderation-mode/true?v=v2" width="726" height="334" role="button" title="SofianePebre_24-1756845520394.png" alt="SofianePebre_24-1756845520394.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In the end, you have set all global parameters that impacts the way the integration is executed, click on OK.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_25-1756845520406.png" style="width: 748px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308219i4E573DD17D7E8A3A/image-dimensions/748x411/is-moderation-mode/true?v=v2" width="748" height="411" role="button" title="SofianePebre_25-1756845520406.png" alt="SofianePebre_25-1756845520406.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Then Save.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_26-1756845520414.png" style="width: 574px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308220i14ED335F2D276762/image-dimensions/574x397/is-moderation-mode/true?v=v2" width="574" height="397" role="button" title="SofianePebre_26-1756845520414.png" alt="SofianePebre_26-1756845520414.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The configuration of your customer iflow as a wrapper of an end to end reusable iflow is finished, we can now deploy it!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Deploying your customer iflow&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;So now we have a customer iflow that :&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Starts when deployed (manually / via schedule)&lt;/LI&gt;&lt;LI&gt;Expects input global parameters to identify systems, extractor name, filters to apply, mapping, etc.&lt;/LI&gt;&lt;LI&gt;Uses a pre configured reusable iflow that opens connections to source and target systems, reads S/4HANA data, loads data in IBP and triggers post processing there.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;To deploy your customer iflow, access it from your package, click on the menu and select Configure to set your final parameters and deploy.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_27-1756845520419.png" style="width: 752px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308221iC1583CC4D18C7C21/image-dimensions/752x243/is-moderation-mode/true?v=v2" width="752" height="243" role="button" title="SofianePebre_27-1756845520419.png" alt="SofianePebre_27-1756845520419.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If you Deploy without the configuration, the iflow will use all your defaulted global parameter values directly.&lt;/P&gt;&lt;P&gt;You can here adapt your global parameters if needed, then click on Deploy&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_28-1756845520427.png" style="width: 722px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308222iB1559A055DD0087B/image-dimensions/722x372/is-moderation-mode/true?v=v2" width="722" height="372" role="button" title="SofianePebre_28-1756845520427.png" alt="SofianePebre_28-1756845520427.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Validate the runtime profile as CI by clicking on Yes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_29-1756845520430.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308223i8701C39217172013/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="SofianePebre_29-1756845520430.png" alt="SofianePebre_29-1756845520430.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Check the log in the Monitor section of the left side panel. Go to Monitor Message Processing app.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_30-1756845520432.png" style="width: 321px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308224iE0C568AA27802A01/image-dimensions/321x336/is-moderation-mode/true?v=v2" width="321" height="336" role="button" title="SofianePebre_30-1756845520432.png" alt="SofianePebre_30-1756845520432.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Find your iflow name and select the associated entry&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_31-1756845520440.png" style="width: 803px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308225iAC22438B5FC2A10B/image-dimensions/803x322/is-moderation-mode/true?v=v2" width="803" height="322" role="button" title="SofianePebre_31-1756845520440.png" alt="SofianePebre_31-1756845520440.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Note that in CI you will get individual log entries for each iflow and embedded iflow. This means since we are using a wrapper iflow that calls upon a reusable iflow, itself calling upon individual reusable iflows, you will get multiple entries for your single deployment action.&lt;/P&gt;&lt;P&gt;To identify all logs related to your deployment, you can use the Correlation ID associated to the initial entry associated to your customer iflow entry. Click on the hyperlink, this will copy this value to the header filter and only show you log entries related to your deployment action. You can appreciate all steps executed during this deployment.&lt;/P&gt;&lt;P&gt;Note : when analyzing log issues (will be handled via an example in another blog entry), always start from the last log entry and make your way upwards one by one.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_32-1756845520450.png" style="width: 873px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308226iFF2CBF8CB2E02DFF/image-dimensions/873x476/is-moderation-mode/true?v=v2" width="873" height="476" role="button" title="SofianePebre_32-1756845520450.png" alt="SofianePebre_32-1756845520450.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Finally, once you’ve checked your flow was successful, you can proceed to the target system, IBP, to confirm post processing. Access the Data Integration Jobs app from your IBP tenant and check logs.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_33-1756845520457.png" style="width: 828px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308229i77946FF1B9042086/image-dimensions/828x327/is-moderation-mode/true?v=v2" width="828" height="327" role="button" title="SofianePebre_33-1756845520457.png" alt="SofianePebre_33-1756845520457.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#3366FF"&gt;That’s it ! you’ve created and executed your first customer iflow in CI from S/4HANA to IBP !&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Creating customer iflows per IBP object&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now that you’ve successfully created a reference iflow, you can duplicate it as many times as needed and only make changes to the global parameters in order to create integration for all the necessary IBP objects for both key figures (purchase orders, production orders, sales orders &amp;amp; deliveries, actuals, stock,…) and master data (products, locations, PDS, etc.) that are supported by the S/4HANA integration addon for IBP.&lt;/P&gt;&lt;P&gt;You can select your primary customer iflow from the Design section and from its menu, select Copy&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_34-1756845520460.png" style="width: 790px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308227iE0685BE6EABA5F1F/image-dimensions/790x231/is-moderation-mode/true?v=v2" width="790" height="231" role="button" title="SofianePebre_34-1756845520460.png" alt="SofianePebre_34-1756845520460.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Give a name to your new iflows identifying what data they are integrating.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_35-1756845520462.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308228i3A3CC303ECD23A1F/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="SofianePebre_35-1756845520462.png" alt="SofianePebre_35-1756845520462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For each, access the menu and select Configure. Replace mappings, filters, extractor names, etc. to adjust to the data needed.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Example for the Production Orders iflow:&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_36-1756845520467.png" style="width: 775px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308230i2C9240B303F9548E/image-dimensions/775x558/is-moderation-mode/true?v=v2" width="775" height="558" role="button" title="SofianePebre_36-1756845520467.png" alt="SofianePebre_36-1756845520467.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on Save. Do this for each iflow to set up your whole interfaces from S/4HANA to IBP and schedule them accordingly at a later stage as shown previously.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can also copy this iflow to use for master data transfer. Make sure in that case that aside from updating the extractor name, mappings, filters, you also set the TypeOfData parameter to ‘MasterData’ and that you properly fill out the MasterDataType and MasterDataPrefix parameters.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;---------------------------------------------------------------------------------------------------------------------&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Next blog entries&lt;/STRONG&gt; &lt;STRONG&gt;will deal with:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Tips and tricks on working the Monitor section&lt;/LI&gt;&lt;LI&gt;Special case handling in Mapping (including mapping extensions)&lt;/LI&gt;&lt;LI&gt;Special case handling in Filtering (including filter extensions)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Sources&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP IBP Help on &lt;A href="https://help.sap.com/docs/SAP_INTEGRATED_BUSINESS_PLANNING/da797ae2bf6246d58abd417f24915d55/1eee047de9db490cab837ab90cd22285.html?version=2508" target="_blank" rel="noopener noreferrer"&gt;S/4HANA integration to IBP via CI&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;IBP Reusable integration flows&amp;nbsp;&lt;A href="https://help.sap.com/doc/d9ca0a5b35214b2a9470b8e6c748c7b3/2402/en-US/b6fe07784e154bb7aa76ac71997dbce2.pdf" target="_blank" rel="noopener noreferrer"&gt;- list and details&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;IBP Reusable integration flows - &lt;A href="https://api.sap.com/package/SAPIBPReusableIntegrationFlows/integrationflow" target="_self" rel="noopener noreferrer"&gt;technical info from Business Accelerator Hub&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/creating-your-first-iflow-in-cloud-integration-for-an-ibp-s-4hana-on-prem/ba-p/14205240"/>
    <published>2025-09-02T23:03:31.723000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/custom-groovy-exception-classes-in-sap-cpi/ba-p/14190767</id>
    <title>Custom Groovy exception classes in SAP CPI</title>
    <updated>2025-09-04T06:56:27.590000+02:00</updated>
    <author>
      <name>JacobVandborg</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1696323</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1609591188"&gt;Intro&lt;/H1&gt;&lt;P&gt;On multiple occasions, I've found myself limited by only being able to &lt;EM&gt;throw new Exception()&lt;/EM&gt; from a Groovy script - especially when the logic needed to throw both functional and technical errors. There's always the possibility to look for existing exception classes that might suit my need, but I wanted exceptions completely tailored to my integrations. As I found out, it's actually not that difficult.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1413077683"&gt;How to&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;So how do you define and throw a custom exception from a Groovy script in SAP CPI? Easy - just define the exception class in your Groovy script and throw it. But how? Here's a very simplified example.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message

def Message processData(Message msg) {
    String exceptionToThrow = msg.getProperty("exceptionToThrow")?.toLowerCase()

    switch (exceptionToThrow) {
        case "functional":
            throw new MyCustomFunctionalException("Functional message", "Whatever subject you like")
            break
        case "technical":
            throw new MyCustomTechnicalException("Technical message", 110)
            break
        default:
            break
    }
    return msg
}

class MyCustomFunctionalException extends Exception {
    private String subject

    MyCustomFunctionalException(String msg, String subject) {
        super(msg)
        this.subject = subject
    }

    String getErrorType() {
        return "FUNCTIONAL"
    }

    String getSubject() {
        return subject
    }
}

class MyCustomTechnicalException extends Exception {
    private int errorCode

    MyCustomTechnicalException(String msg, int errorCode) {
        super(msg)
        this.errorCode = errorCode
    }

    String getErrorType() {
        return "TECHNICAL"
    }

    int getErrorCode() {
        return errorCode
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the example, two classes are defined that extend the the Exception class.Both exception classes include a getErrorType() method, which returns - you guessed it - the error type (FUNCTIONAL/TECHNICAL). Unique to the functional exception class is the method getSubject() and unique to the technical exception class is the method getErrorCode(). These values are set in the constructor of the respective classes.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So, now that you can throw custom exception classes from a Groovy script - what can you actually do with them? You could create another Groovy script in your Exception Subprocess that will perform different actions depending on the error type. Again, here's a very simplified example.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message

def Message processData(Message msg) {
    def camelExceptionCaught = msg.getProperty("CamelExceptionCaught") as Exception
    def rootException = getRootException(camelExceptionCaught)
    def rootExceptionName = rootException.getClass().getCanonicalName()

    def errorType = ""
    def errorMessage = ""
    def errorDetails = ""

    // Classify root exception and extract relevant metadata
    switch (rootExceptionName) {
        case "MyCustomFunctionalException":
            errorType = rootException.getErrorType()
            errorMessage = rootException.getMessage()
            errorDetails = "Subject : " + rootException.getSubject()
            break
        case "MyCustomTechnicalException":
            errorType = rootException.getErrorType()
            errorMessage = rootException.getMessage()
            errorDetails = "Error code : " + rootException.getErrorCode()
            break
        default:
            errorType = "Unclassified"
            errorMessage = rootException.getMessage()
            break
    }

    msg.setProperty("errorType", errorType)
    msg.setProperty("errorMessage", errorMessage)
    msg.setProperty("errorDetails", errorDetails)
    msg.setProperty("rootExceptionName", rootExceptionName)

    return msg
}

/**
 * Traverses exception causes to find the root exception.
 *
 *  throwable The top-level caught exception.
 * @return The deepest cause (root) of the exception chain.
 */
Exception getRootException(Throwable throwable) {
    def cause = throwable
    while (cause?.getCause() != null &amp;amp;&amp;amp; cause.getCause() != cause) {
        cause = cause.getCause()
    }
    return (Exception) cause
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1216564178"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;From the two examples, you can see how easy it is to define, throw, and handle custom exceptions in Groovy script.&amp;nbsp;I’ve used this technique many times when &lt;EM&gt;throw new Exception()&lt;/EM&gt;&amp;nbsp;just wasn’t powerful enough.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/custom-groovy-exception-classes-in-sap-cpi/ba-p/14190767"/>
    <published>2025-09-04T06:56:27.590000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-cloud-integration-simplifying-error-handling-with-a-generic-retry-iflow/ba-p/14206093</id>
    <title>SAP Cloud Integration – Simplifying Error Handling with a Generic Retry iFlow for Kafka</title>
    <updated>2025-09-04T07:00:32.070000+02:00</updated>
    <author>
      <name>ShraddhaFatale</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1640391</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Traditional Retry Handling in SAP Cloud Integration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Apache Kafka is an open-source distributed event streaming platform used for building real-time data pipelines and applications. It allows you to publish, store, and process streams of records in a fault-tolerant and highly scalable way. It is often used for high-throughput, low-latency messaging between systems.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In enterprise-level integration cases, temporary failures are an unfortunate reality — particularly in the context of asynchronous messaging systems such as Apache Kafka. Ensuring these momentary glitches do not lead to data loss or message failure is essential.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In SAP Cloud Integration (CI) iFlows with Kafka, retries are traditionally handled by leveraging Kafka consumer offset management, which allows unprocessed messages to be redelivered. While this ensures reliable message delivery in case of temporary errors, it also introduces challenges such as potential message duplication, out-of-order processing, and difficulty in distinguishing between transient and permanent errors. These factors can complicate error handling and increase the complexity of downstream processing.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introducing the Retry Mechanism iFlow for Kafka&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This blog presents a reusable Retry Mechanism iFlow designed specifically for Kafka as the source. It includes configurable retry logic, failure escalation by JIRA ticket, exponential wait time, and dead-letter handling using Apache Kafka — all packaged into a generic integration flow you can insert into numerous pipelines.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Features&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; Generic &amp;amp; Reusable: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;To be used across iFlows where Kafka is the sender.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; Dynamic Configuration:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Retry Count&lt;/LI&gt;&lt;LI&gt;Retry Interval&lt;/LI&gt;&lt;LI&gt;Kafka Original &amp;amp; DMQ Topic&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; Optional JIRA ticket creation: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;For persistent failures.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; Dead Message Queue (DMQ) Handling: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Failed messages are routed to a Kafka topic for traceability.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Configurable Parameters &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;(passed via headers from source iFlow)&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE width="642"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="274"&gt;&lt;P&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="369"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="274"&gt;&lt;P&gt;&lt;SPAN&gt;Retry Interval (in seconds)&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="369"&gt;&lt;P&gt;&lt;SPAN&gt;Wait time before each retry attempt.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="274"&gt;&lt;P&gt;&lt;SPAN&gt;Maximum Retry Attempts&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="369"&gt;&lt;P&gt;&lt;SPAN&gt;Number of times a message retry is attempted.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="274"&gt;&lt;P&gt;&lt;SPAN&gt;Kafka Original Topic (Header)&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="369"&gt;&lt;P&gt;&lt;SPAN&gt;Destination topic for reprocessing.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="274"&gt;&lt;P&gt;&lt;SPAN&gt;DMQ Topic (Header)&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="369"&gt;&lt;P&gt;&lt;SPAN&gt;Topic for persistently failed messages.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Flow Diagram&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_0-1756904376475.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308571i8D132863E8153A3C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_0-1756904376475.png" alt="ShraddhaFatale_0-1756904376475.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration Flow &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below is a sample Integration Flow created to handle retries selectively for connectivity and interface errors.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_1-1756904376478.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308570i4C65E51E1CFAA2F0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_1-1756904376478.png" alt="ShraddhaFatale_1-1756904376478.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Flow Logic Explained&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;1&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;Start&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Triggered via Process Direct Adapter when an error occurs in the main iFlow.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Retry?&amp;nbsp;&lt;/STRONG&gt;Checks if the message has exceeded maximum retries.&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Yes &lt;/STRONG&gt;→ Retry sequence.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;No → &lt;/STRONG&gt;DMQ + Escalation flow&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_2-1756904376479.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308572iFB42382B3808380B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_2-1756904376479.png" alt="ShraddhaFatale_2-1756904376479.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;NOTE:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;The expression retryCount[last] accesses the last element of the retryCount header array to ensure the latest retry attempt is evaluated during routing.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Retry Sequence&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Sleep&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Groovy script reads waitTime and retryCount headers, calculates an exponential backoff delay (waitTime^retryCount), sleeps for that duration in milliseconds, and sets the new waitTime header accordingly. It preserves the original message body throughout the process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message;

def Message processData(Message message) {
    // Get all headers
    Map&amp;lt;String, Object&amp;gt; headers = message.getHeaders()

    // --- Extract last value from 'waitTime' header ---
    def waitTimeHeader = headers.get("waitTime")
    Integer waitTime = 1 // Default fallback

    if (waitTimeHeader instanceof List || waitTimeHeader?.getClass()?.isArray()) {
        def lastValue = waitTimeHeader[-1]
        waitTime = lastValue?.toString()?.toInteger() ?: 1
    } else if (waitTimeHeader != null) {
        waitTime = waitTimeHeader?.toString()?.toInteger() ?: 1
    }

    // --- Extract last value from 'retryCount' header ---
    def retryCountHeader = headers.get("retryCount")
    Integer retryCount = 1 // Default fallback

    if (retryCountHeader instanceof List || retryCountHeader?.getClass()?.isArray()) {
        def lastValue = retryCountHeader[-1]
        retryCount = lastValue?.toString()?.toInteger() ?: 1
    } else if (retryCountHeader != null) {
        retryCount = retryCountHeader?.toString()?.toInteger() ?: 1
    }

    // --- Calculate exponential backoff ---
    Integer sleepTimeInSeconds = Math.pow(waitTime, retryCount) as Integer
    Integer sleepTimeInMillis = sleepTimeInSeconds * 1000

    // Set new header
    message.setHeader("waitTime", sleepTimeInSeconds)

    // Preserve original body and sleep
    def body = message.getBody()
    sleep(sleepTimeInMillis)

    message.setBody(body)
    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Increment Retry Counter&lt;BR /&gt;&lt;/STRONG&gt;This Groovy script reads the retryCount header (handling both single values and arrays), retrieves the last value, increments it by 1, and sets it back in the message header. It ensures retry tracking is correctly updated for each attempt.&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message

def Message processData(Message message) {
    // Get all headers
    Map&amp;lt;String, Object&amp;gt; headers = message.getHeaders()

    // Extract retryCount header
    def retryCountHeader = headers.get("retryCount")
    Integer currentCount = 0 // Default fallback

    // If retryCount is an array or list, get the last value
    if (retryCountHeader instanceof List || retryCountHeader?.getClass()?.isArray()) {
        def lastValue = retryCountHeader[-1]
        currentCount = lastValue?.toString()?.toInteger() ?: 0
    } else if (retryCountHeader != null) {
        // Handle as single value
        currentCount = retryCountHeader?.toString()?.toInteger() ?: 0
    }

    // Increment the counter
    currentCount += 1

    // Set the updated value back to the header
    message.setHeader("retryCount", currentCount)

    return message
}
​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Restore Original Payload&lt;BR /&gt;&lt;/STRONG&gt;Ensures original data is intact for reprocessing&lt;STRONG&gt;.&lt;BR /&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_10-1756904768075.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308594i31FC0515968647A9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_10-1756904768075.png" alt="ShraddhaFatale_10-1756904768075.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Resend to Kafka Topic&lt;BR /&gt;&lt;/STRONG&gt;Message is pushed back to the original Kafka topic.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_11-1756904768076.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308595iDDFD236D0B73D39A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_11-1756904768076.png" alt="ShraddhaFatale_11-1756904768076.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_12-1756904768077.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308596iD01469CF44D4B834/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_12-1756904768077.png" alt="ShraddhaFatale_12-1756904768077.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Failure Handling &amp;amp; Escalation&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Send to DMQ&lt;/STRONG&gt;&lt;BR /&gt;Routes the message to a &lt;STRONG&gt;Dead Message Queue Topic&lt;/STRONG&gt; on Kafka for monitoring or auditing. Similar configuration as above, change the Topic name accordingly.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;JIRA Ticket creation?&lt;/STRONG&gt;&lt;BR /&gt;Based on user’s configuration in main iflow, determines if a JIRA ticket can be created or not.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_13-1756904823967.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308597i6E97EDE2F7458625/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_13-1756904823967.png" alt="ShraddhaFatale_13-1756904823967.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;Construct Body&lt;/STRONG&gt;&lt;BR /&gt;Adds message context, failure reason, and other metadata in a body.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Creates JIRA Ticket&lt;/STRONG&gt;&lt;BR /&gt;Sends alert to support or integration teams. In this blog I am not covering all Jira configurations, for more information on the this please go through &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/jira-adapter-for-sap-integration-suite/ba-p/13930290" target="_blank"&gt;Jira Adapter for SAP Integration Suite&lt;/A&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Jira Adapter Response&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_17-1756905005529.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308608iFB0E35DB71030102/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_17-1756905005529.png" alt="ShraddhaFatale_17-1756905005529.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Jira Ticket&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_18-1756905020546.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308609iA8766C3A7E87D5C6/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_18-1756905020546.png" alt="ShraddhaFatale_18-1756905020546.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Escalation End&lt;/STRONG&gt;&lt;BR /&gt;Ends process after notification or after DMQ routing if alerts are disabled.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration Points&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Apache Kafka: &lt;/STRONG&gt;As the core message broker retry target and DMQ for message persistence.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;JIRA Adapter: &lt;/STRONG&gt;For failure escalation and ticket creation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Split-in-iFlow Pattern: When Kafka Isn’t the Source&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In scenarios where the &lt;STRONG&gt;source adapter is not Kafka&lt;/STRONG&gt; (e.g., HTTP, IDoc, SFTP), you can still use the Retry Mechanism by applying a &lt;STRONG&gt;split-iFlow design&lt;/STRONG&gt;:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pattern Overview&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;IFlow&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;Role&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;iFlow 1: Sender Adapter → Kafka&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;Ingest source data, sends to Kafka (Original Topic), sets required headers.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;iFlow 2: Kafka → Processing&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;Handles mapping, transformation, and receiver logic.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;Error Path&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;On failure, calls Retry Mechanism iFlow (via Process Direct).&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;Retry Cycle&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;Retry iFlow manages reprocessing or escalation based on logic.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This architecture maintains loose coupling, dynamic routing, and centralized error handling across varied protocols and business cases.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_16-1756904951566.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308601i2D3D2289E50B0857/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_16-1756904951566.png" alt="ShraddhaFatale_16-1756904951566.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why This Matters&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Reduces custom retry logic across iFlows.&lt;/LI&gt;&lt;LI&gt;Centralizes failure handling and monitoring.&lt;/LI&gt;&lt;LI&gt;Makes Kafka-based processing more robust and recoverable.&lt;/LI&gt;&lt;LI&gt;Aligns with event-driven architecture best practices.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Final Thoughts&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Retry Mechanism iFlow is a foundational building block for resilient Kafka integrations in SAP Cloud Integration. Whether you’re integrating external systems, APIs, or internal processes — having a centralized, configurable retry logic ensures smoother operations and reduces manual interventions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;References&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/cloud-integration-what-you-need-to-know-about-the-kafka-adapter/ba-p/13495070" target="_blank"&gt;&lt;STRONG&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/cloud-integration-what-you-need-to-know-about-the-kafka-adapter/ba-p/13495070&lt;/STRONG&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/optimized-error-management-and-retry-strategy-with-kafka-on-sap-cloud/ba-p/13810790" target="_blank"&gt;&lt;STRONG&gt;https://community.sap.com/t5/technology-blog-posts-by-members/optimized-error-management-and-retry-strategy-with-kafka-on-sap-cloud/ba-p/13810790&lt;/STRONG&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://medium.com/@lahirurajapakshe.stack/apache-kafka-retry-mechanism-documentation-4cf67f80d6f7" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;https://medium.com/@lahirurajapakshe.stack/apache-kafka-retry-mechanism-documentation-4cf67f80d6f7&lt;/STRONG&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-cloud-integration-simplifying-error-handling-with-a-generic-retry-iflow/ba-p/14206093"/>
    <published>2025-09-04T07:00:32.070000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-partners-fast-track-your-sap-business-technology-platform-certification/ba-p/14194751</id>
    <title>SAP Partners - Fast Track your SAP Business Technology Platform Certification Path</title>
    <updated>2025-09-04T07:16:06.943000+02:00</updated>
    <author>
      <name>OanaTudorascu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/78</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1867875753"&gt;&lt;STRONG&gt;SAP Business Technology Platform Certification Path – From Beginner to Advanced &lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Are you interested in getting your SAP Business Technology Platform ( SAP BTP) &amp;nbsp;certification, but unsure of where to begin?&lt;/P&gt;&lt;P&gt;In this blog, we would like to give you a better overview of the available SAP BTP certifications and guide you how to progress from foundational level to professional expertise. Additionally, we will introduce several enablement offerings, specifically designed for SAP Partners, &amp;nbsp;that can help you fast track your SAP BTP certification.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Depending on your existing knowledge and skills, you can determine which of the three steps below is the ideal starting point for you.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="OanaTudorascu_0-1756282207059.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305435i63135E52E2DF56F4/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="OanaTudorascu_0-1756282207059.png" alt="OanaTudorascu_0-1756282207059.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1671362248"&gt;&lt;STRONG&gt;Step 1- Entry-Level Certification&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;For partners who are new to SAP’s ecosystem, one of the best starting points to learn the basics of SAP Business Suite and the importance of SAP BTP is the entry level certification “Positioning SAP Business Technology Platform as part of the SAP Business Suite”.&lt;/P&gt;&lt;P&gt;This certification takes you through the foundational courses of the SAP Business Technology Platform, enabling the enhancement of business processes through the integration of intelligent technologies, the development of innovative applications, and the analysis and visualization of data.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;For SAP Partners, we offer bi-weekly 90 minutes webinars that are led by SAP experts and will provide the clarity, focus, and key insights you need to approach the certification exam with confidence.&amp;nbsp;&lt;A href="https://partneredge.sap.com/en/library/education/psd/2025/jun/e_oe_te_w_PSD_WEB_00010574.html" target="_blank" rel="noopener noreferrer"&gt;Access the latest schedule.&amp;nbsp;&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1474848743"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1278335238"&gt;&lt;STRONG&gt;Step 2- Get Specialized with the Associate Level Certifications&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;If you already have the foundational knowledge in SAP BTP, you can delve into specialized certification tracks based on their career goals and interests. Professionals choose from distinct areas, including Application Development and Automation, Integration Database and Data Management, and AI Foundation. Each specialization offers focused certifications and provide the skills required to address specific business needs and technical challenges, equipping learners with the knowledge to advance their SAP careers.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;For SAP Partners , you can join one of the Partner Get and Stay Certified Academies below that will help you with the certification exam.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Partner Get Certified Academy for &lt;A href="https://partneredge.sap.com/en/library/education/psd/2025/jun/e_oe_te_w_PSD_WEB_00010506.html" target="_blank" rel="noopener noreferrer"&gt;Security Administrator&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Partner Get Certified Academy for&amp;nbsp;&lt;A href="https://partneredge.sap.com/en/library/education/psd/2025/mar/e_oe_te_w_PSD_WEB_00009442.html" target="_blank" rel="noopener noreferrer"&gt;Backend Developer – CAP &lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Partner Get Certified Academy for&amp;nbsp;&lt;A href="https://partneredge.sap.com/en/library/education/psd/2025/mar/e_oe_te_w_PSD_WEB_00009457.html" target="_blank" rel="noopener noreferrer"&gt;SAP Build – LCNC&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Partner Get Certified Academy for &lt;A href="https://partneredge.sap.com/en/library/education/psd/2025/mar/e_oe_te_w_PSD_WEB_00009464.html" target="_self" rel="noopener noreferrer"&gt;Integration Developer&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Partner Get Certified Academy for&amp;nbsp;&lt;A href="https://partneredge.sap.com/en/library/education/psd/2025/jul/e_oe_te_w_PSD_WEB_00010652.html" target="_blank" rel="noopener noreferrer"&gt;Backend Developer – ABAP Cloud&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1081821733"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-885308228"&gt;&lt;STRONG&gt;Step 3 - Become a SAP BTP Solution Architect&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Experienced professionals can pursue the SAP BTP Solution Architect professional certification. From a career development perspective, this certification is marking the transition from a specialized skillset to a broader, strategic role. Solution architects are responsible for designing comprehensive SAP BTP implementations that align with business objectives and technical requirements.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;For SAP Partners - Access &lt;A href="https://partneredge.sap.com/en/library/education/psd/2025/mar/e_oe_te_w_PSD_WEB_00009748.html" target="_self" rel="noopener noreferrer"&gt;Partner Get Certified Academy for SAP BTP Solution Architect&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-partners-fast-track-your-sap-business-technology-platform-certification/ba-p/14194751"/>
    <published>2025-09-04T07:16:06.943000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/exploring-salesforce-adapter-for-sap-integration-suite/ba-p/14206977</id>
    <title>Exploring Salesforce Adapter for SAP Integration Suite</title>
    <updated>2025-09-04T13:55:56.601000+02:00</updated>
    <author>
      <name>Shailaja</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/161784</uri>
    </author>
    <content>&lt;P&gt;Overview - As part of my recent Migration project from MuleSoft to SAP, I was able to explore the salesforce adapter. Sharing across the adapter configuration - which can be helpful for other project's use cases.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Pre-reading -&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://api.sap.com/package/SalesforceAdapter/overview" target="_blank" rel="noopener noreferrer"&gt;Overview | Salesforce Adapter for SAP Integration Suite | SAP Business Accelerator Hub&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/langCon_apex_SObject_types.htm" target="_blank" rel="noopener nofollow noreferrer"&gt;sObject Types | Apex Developer Guide | Salesforce Developers&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql_select.htm" target="_blank" rel="noopener nofollow noreferrer"&gt;SOQL SELECT Syntax | SOQL and SOSL Reference | Salesforce Developers&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Pre-requisites -&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;OAuth Client Credentials are deployed in tenant&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Connectivity is working with salesforce&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Basic PoC Flow -&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_0-1756986886495.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309218i441E7141986692F3/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_0-1756986886495.png" alt="Shailaja_0-1756986886495.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Please find configuration of the adapter for different CRUD operation :&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Operation 1 : SOQL Execute query&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Fetches the data based on the query passed, one can select the payload as xml or json based on the interface requirement.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_0-1756983031626.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309168i5701792EFABF9E0C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_0-1756983031626.png" alt="Shailaja_0-1756983031626.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Operation 2 : CREATE -&amp;nbsp;&lt;/STRONG&gt;Custom Salesforce Object is being used.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_3-1756983383702.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309177i0FDD642FF3E4CE26/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_3-1756983383702.png" alt="Shailaja_3-1756983383702.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Operation 3 : DELETE with External ID&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_1-1756985240719.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309196i30201EFA1C9DA38A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_1-1756985240719.png" alt="Shailaja_1-1756985240719.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Operation 4 : UPDATE -&amp;nbsp;&lt;/STRONG&gt;Custom Salesforce Object is being used. Upsert payload is set in content modifier in step ahead of SF adapter.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_4-1756983577271.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309178i882FDE35D3D6CCB2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_4-1756983577271.png" alt="Shailaja_4-1756983577271.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Operation 5 : UPSERT&amp;nbsp; with External ID -&amp;nbsp;&lt;/STRONG&gt;Custom Salesforce Object is being used. Upsert payload is being sent in the field External ID Value. External ID Name consists of the mandatory key.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_6-1756983921399.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309183iA9233E046EDAC8FB/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_6-1756983921399.png" alt="Shailaja_6-1756983921399.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For custom object SD_Job_Activity__c as seen below Id is the key in the Salesforce&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_5-1756983785729.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309182i8D995A3A5BCF5E99/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_5-1756983785729.png" alt="Shailaja_5-1756983785729.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_0-1756984623002.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309187i0C991076BE6667EE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_0-1756984623002.png" alt="Shailaja_0-1756984623002.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The upsert payload needs to be in single object format. Sample Reference upsert payload shared below -&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp;{&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; "SD_DCFR_Sync_Action__c":"None",&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; "SD_DCFR_Sync_Status__c":"Synced",&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; "SD_DCFR_GUID__c":"2f13ffdc-4101-434b-b94d-300a7c70e4c5",&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; "Id":"aEzDw00000006zSKAQ",&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; "SD_DCFR_Sync_Message__c":"Activity created successfully in DCFR | &amp;nbsp;| Crew Details missing in the payload"&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp;}&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Alternatively, One can use salesforce objects - composite - for multiple records update scenario. Kindly refer to blog by&amp;nbsp;SAP Champion &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/3763"&gt;@PriyankaChak&lt;/a&gt;&amp;nbsp; -&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-cloud-integration-with-salesforce-part-2/ba-p/13506343" target="_blank"&gt;SAP Cloud Integration with Salesforce - Part 2 - SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/exploring-salesforce-adapter-for-sap-integration-suite/ba-p/14206977"/>
    <published>2025-09-04T13:55:56.601000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/exploring-sap-salesforce-adapter-retry-mechanism-with-jms-queue/ba-p/14208557</id>
    <title>Exploring SAP Salesforce Adapter - retry mechanism with JMS queue</title>
    <updated>2025-09-05T14:21:32.769000+02:00</updated>
    <author>
      <name>Shailaja</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/161784</uri>
    </author>
    <content>&lt;P&gt;Overview :&lt;/P&gt;&lt;P&gt;This blog will focus on the error handling mechanism when there is connectivity error with Salesforce while trying to update/upsert data in Salesforce. We chose to opt for JMS queue.&lt;/P&gt;&lt;P&gt;Kindly go through previous blog to understand SAP Salesforce Adapter configuration for different operations -&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/exploring-salesforce-adapter-for-sap-integration-suite/ba-p/14206977" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/exploring-salesforce-adapter-for-sap-integration-suite/ba-p/14206977&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Retry Mechanism&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;1. JMS Queues&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Stores failed messages in queues for retries.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Setup: Enable JMS (Enterprise Edition). Use JMS receiver to store messages. &lt;/SPAN&gt;&lt;SPAN&gt;Set max 5 retries, exponential backoff. Move to dead-letter queue or notify after max retries.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Use Case: Update failure in Salesforce Custom Object&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;- Pros: Reliable, visible in Queue Monitor.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Cons: 10 GB limit, polling may pause.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;- Example: Failed message retried 5 times, then mail to Application Maintenance (AM/Support) Team.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Execution Design Steps :&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1. Design consists of three iFlow -&amp;nbsp;&amp;nbsp;Parent (Trigger) iFlow -&amp;gt; Child iFlow -&amp;gt; JMS Retry PD iFlow &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;2.Parent iFlow gets triggered whenever data is placed into Salesforce push topic&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;3.Child iFlow, set the&amp;nbsp;/TargetFlowAddress which would be reference for the JMS Retry PD iFlow&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;4.In the Exception Subprocess, add router condition for specific frequent error occurring during update operation in Salesforce&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;5.On router condition match, call the JMS Retry PD iflow with the input push topic payload&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;6. In JMS Retry PD iFlow - after max retry attempt trigger mail to the AM team.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Implementation Steps : Below are configuration snippets&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;CHILD FLOW :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1. set target address of the iflow to be retriggered by JMS Retry PD iflow ;&amp;nbsp; in child flow&amp;nbsp; in content modifier as&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_3-1757072206433.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309931i6851CD3138BB4584/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_3-1757072206433.png" alt="Shailaja_3-1757072206433.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. Exception occurred in Child flow -&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_0-1757071798128.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309924i4ECBEE59BFB789DE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_0-1757071798128.png" alt="Shailaja_0-1757071798128.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Exception subprocess in Child flow captures the error using the script&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_1-1757071953894.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309926i1E5B8D639F9E5629/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_1-1757071953894.png" alt="Shailaja_1-1757071953894.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_2-1757072115180.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309928i6C2FA7652B9E4674/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_2-1757072115180.png" alt="Shailaja_2-1757072115180.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;JMS Retry PD Flow&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;3. JMS Retry PD Flow is triggered for the initial store with custom header set message as shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_7-1757072465726.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309938iC87DA687D37553EE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_7-1757072465726.png" alt="Shailaja_7-1757072465726.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_8-1757072586300.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309942iCCF4904224AA4801/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_8-1757072586300.png" alt="Shailaja_8-1757072586300.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Setting queue name&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_10-1757072724520.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309945iB7A9D2EFC08FFE7F/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Shailaja_10-1757072724520.png" alt="Shailaja_10-1757072724520.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.In LIP for JMS Reprocess assign the queue name and set the retry mode for iteration check&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_13-1757072861201.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309949i3E614FE7B56CC49C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_13-1757072861201.png" alt="Shailaja_13-1757072861201.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_14-1757072938905.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309953iC4BCCA766FE27C9D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_14-1757072938905.png" alt="Shailaja_14-1757072938905.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. Using the target address call the child flow where error occurred for retry attempts - as shown below -&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_15-1757073041134.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309955iF3831ACF6D6F92CD/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_15-1757073041134.png" alt="Shailaja_15-1757073041134.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_12-1757072792043.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309948iCBCCE6ADF0BC184E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_12-1757072792043.png" alt="Shailaja_12-1757072792043.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6. In case the reprocessing fails, then exception subprocess calls the LIP_ReprocessFailedMessage&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_0-1757073558355.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309967iADBE68A5CB48B070/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_0-1757073558355.png" alt="Shailaja_0-1757073558355.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;7. After Max retry attempts, mail gets triggered from JMS Retry PD iflow.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;PARENT FLOW :&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;8.Flow execution goes back to parents in the exception subprocess of parent flow.&lt;/P&gt;&lt;P&gt;9. Set the iflow name in content modifier for mail body.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_5-1757074746988.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309977iA68D2FA35DED96FE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_5-1757074746988.png" alt="Shailaja_5-1757074746988.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;10.&amp;nbsp;Router condition checks on the specific error and routes accordingly. In case of 'UNABLE_TO_LOCK_ROW' , ends it since JMS Retry PD already sent the error notification mail. In case of other error, sends the error notification mail.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_4-1757074605652.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309976i068CA15CC68F3FBC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_4-1757074605652.png" alt="Shailaja_4-1757074605652.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Monitoring Log :&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Below would be reflected&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_4-1757072329308.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309933i19589D61581A4BF0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_4-1757072329308.png" alt="Shailaja_4-1757072329308.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_11-1757072760799.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309947iE38764652788A8AE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_11-1757072760799.png" alt="Shailaja_11-1757072760799.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_12-1757072792043.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309948iCBCCE6ADF0BC184E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_12-1757072792043.png" alt="Shailaja_12-1757072792043.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;First Initial Store in JMS is set as custom execution header message in JMS Retry PD iflow then attempts in child flow then sends the mail after max attempt and set the error as the custom execution header message.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shailaja_3-1757074169832.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309973iD01DBE2C29954634/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Shailaja_3-1757074169832.png" alt="Shailaja_3-1757074169832.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For groovy for execution summary mail body, you can refer to the previous blog -&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/interface-execution-summary-exception-alert-for-logging-monitoring-and/ba-p/14165906" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/interface-execution-summary-exception-alert-for-logging-monitoring-and/ba-p/14165906&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/exploring-sap-salesforce-adapter-retry-mechanism-with-jms-queue/ba-p/14208557"/>
    <published>2025-09-05T14:21:32.769000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/new-learning-journey-integrating-sap-sales-cloud-and-sap-service-cloud/ba-p/14208710</id>
    <title>New Learning Journey Integrating SAP Sales Cloud and SAP Service Cloud Version 2 with SAP S/4HANA</title>
    <updated>2025-09-05T15:23:46.964000+02:00</updated>
    <author>
      <name>FernandoRedondo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/7571</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Hey SAP CX Community! It's Fernando here, checking in!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Over the past few years, we've been creating numerous educational resources focused on integration topics for SAP Sales and Service Cloud version 1.&amp;nbsp;&lt;/SPAN&gt; From this year on, o&lt;SPAN&gt;ur upcoming focus will be on version 2 extensibility and integration topics&lt;/SPAN&gt;.&amp;nbsp;&lt;SPAN&gt;Today, we are thrilled to announce in this blog post the next major learning milestone for those looking to master the integration of SAP Sales and Service Cloud version 2 with SAP S/4HANA.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Join me in welcoming our newest addition to the&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;A href="https://learning.sap.com/" target="_self" rel="noreferrer noopener"&gt;SAP's learning platform&lt;/A&gt;&lt;/SPAN&gt;:&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Map Path Icon" style="width: 97px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/239485i5BF549AB9D745C1E/image-dimensions/97x97?v=v2" width="97" height="97" role="button" title="FernandoRedondo_0-1742376626121.png" alt="FernandoRedondo_0-1742376626121.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;BR /&gt;New Learning Journey&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;A href="https://learning.sap.com/learning-journeys/integrating-sap-sales-cloud-and-sap-service-cloud-version-2-with-sap-s-4hana" target="_self" rel="noreferrer noopener"&gt;Integrating SAP Sales Cloud and SAP Service Cloud Version 2 with SAP S/4HANA&lt;/A&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you're an integration developer looking to prepare for integrating SAP Sales and Service Cloud version 2 with SAP S/4HANA using Cloud Integration, you've come to the right place. Here, you'll gain the practical knowledge needed to manage the entire end-to-end integration project.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We've structured our content to ensure that, after finishing this learning journey, integration developers, administrators, and consultants will have the skills to set up, configure, and implement the integration between SAP Sales and Service Cloud version 2 and SAP S/4HANA for master data replication.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here's a sneak peek of how it appears:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="C4H48B Course Image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309952iC9659975F63607FC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="C4H48B Course Image.png" alt="C4H48B Course Image.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Au&lt;/STRONG&gt;&lt;STRONG&gt;dience&lt;BR /&gt;&lt;/STRONG&gt;The course is meant to be helpful for:&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Integration Developers&lt;/LI&gt;&lt;LI&gt;Technical Consultants&lt;/LI&gt;&lt;LI&gt;Administrators&lt;/LI&gt;&lt;LI&gt;Architects&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Learning Objectives&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;After completing this learning journey, integration developers and technical consultants will gain an overview of the fundamental technical aspects, architecture, and scenarios for the integration between SAP Sales and Service Cloud Version 2, and SAP S/4HANA. You will be able to develop end-to-end integration between these systems based on identifying involved systems, exploring integration scenarios, preparing your system landscape, performing the master data replication procedure, and gaining skills on monitoring and troubleshooting techniques.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Learning Content&lt;BR /&gt;&lt;/STRONG&gt;The learning journey consists of 6 units and provides more than 8 hours of content:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introducing the Integration of SAP Sales Cloud and SAP Service Cloud Version 2 with SAP S/4HANA&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;This unit introduces SAP Sales and Service Cloud integration with SAP S/4HANA, covering SAP's integration strategy, involved systems, standard scenarios, and the course's scope.&lt;/SPAN&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Preparing Technical System Settings&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Covers the preparation of technical system settings for integrating SAP Sales and Service Cloud with SAP S/4HANA, including detailed system landscape exploration, communication settings, credential setup, integration package configuration, trust establishment, and Cloud Connector configuration.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Preparing Functional Dependencies in SAP Sales Cloud and SAP Service Cloud Version 2&lt;/SPAN&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;This unit focuses on preparing functional dependencies in SAP Sales and Service Cloud, including examining object dependencies, understanding external ID mapping and code list maintenance, and setting up code list integration using Incoterms as an example.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Setting Up and Running Product Replication from SAP S/4HANA to SAP Sales Cloud and SAP Service Cloud Version 2&lt;/SPAN&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;SPAN&gt;T&lt;/SPAN&gt;&lt;/SPAN&gt;eaches how to set up and run product replication from SAP S/4HANA to SAP Sales and Service Cloud, including configuring communication settings, integration flows, web services, and executing the replication process.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Setting Up and Running Business Partner Replication from SAP S/4HANA to SAP Sales Cloud and SAP Service Cloud Version 2&lt;/SPAN&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;This unit covers setting up and running business partner replication from SAP S/4HANA to SAP Sales and Service Cloud, including configuring communication settings, integration flows, service groups, data replication framework, business partner confirmation, and executing the replication process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Monitoring Messages and Troubleshooting&lt;/SPAN&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Last unit on monitoring messages and troubleshooting in the integration process between SAP S/4HANA and SAP Sales and Service Cloud, including identifying monitoring tools, analyzing common issues, and resolving them effectively.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;After completing successfully this Learning Journey you'll be granted with a digital badge like this one which could be shared and linked to your social networks:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="C4H48B Badge.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310006i9D9C71EC152B87BE/image-size/small/is-moderation-mode/true?v=v2&amp;amp;px=200" role="button" title="C4H48B Badge.png" alt="C4H48B Badge.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Give it a try! We plan to create more extensibility learning content for SAP Sales and Service Cloud version 2, and we'd appreciate your feedback on whether these lessons are useful for you or your team.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Additional&amp;nbsp;Resources&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;There is a related live session for&amp;nbsp;. You can find more free learning journeys at the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;, where you can build in-demand SAP skills for&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/products/customer-experience" target="_blank" rel="noopener noreferrer"&gt;variety of topics&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;specifically the SAP CX Solutions portfolio. If you are more in for quick video learning, then, look for our videos&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/videos?page=1&amp;amp;lsc_product_category=CRM+and+Customer+Experience&amp;amp;lsc_product=SAP+Integration+Suite&amp;amp;lsc_product=SAP+Extension+Suite&amp;amp;lsc_product=SAP+BTP%2C+Kyma+runtime" target="_blank" rel="noopener noreferrer"&gt;Integration and Extensibility videos for SAP Customer Experience&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;to get updates on the latest integration and extensibility videos for SAP Customer Experience solutions&lt;/SPAN&gt;&lt;EM&gt;.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;You can find a related live session on&lt;SPAN&gt;&lt;A href="https://learning.sap.com/live-sessions/starting-with-sap-integration-suite-for-customer-experience-" target="_self" rel="noreferrer noopener"&gt;Starting with SAP Integration Suite for Customer Experience&lt;/A&gt;&lt;/SPAN&gt;. For additional free learning journeys, visit the&amp;nbsp;&lt;A href="https://learning.sap.com/products/customer-experience/integration-and-extensibility" target="_blank" rel="noopener noreferrer"&gt;SAP Learning site for Integration and Extesibility&lt;/A&gt;&amp;nbsp;to build&amp;nbsp;&lt;SPAN&gt;in-demand&lt;/SPAN&gt; SAP skills on a variety of topics, for the SAP CX Solutions portfolio. If you enjoy quick video learning, explore our&amp;nbsp;&lt;A href="https://learning.sap.com/videos?page=1&amp;amp;lsc_product_category=CRM+and+Customer+Experience&amp;amp;lsc_product=SAP+Integration+Suite&amp;amp;lsc_product=SAP+Extension+Suite&amp;amp;lsc_product=SAP+BTP%2C+Kyma+runtime" target="_blank" rel="noopener noreferrer"&gt;Integration and Extensibility videos for SAP Customer Experience&lt;/A&gt; for the newest updates on integration and extensibility for SAP Customer Experience solutions.&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/new-learning-journey-integrating-sap-sales-cloud-and-sap-service-cloud/ba-p/14208710"/>
    <published>2025-09-05T15:23:46.964000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/sap-btp-for-hr-at-sap-connect-and-success-connect-2025-summary-bigger-and/ba-p/14209124</id>
    <title>SAP BTP for HR at SAP Connect and Success Connect 2025 summary - bigger and better than ever</title>
    <updated>2025-09-05T20:35:12.794000+02:00</updated>
    <author>
      <name>rnoia</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/46078</uri>
    </author>
    <content>&lt;P&gt;Come see SAP Business Technology Platform (BTP) at this year’s SAP Connect / Success Connect event in Las Vegas! Due to the ever-increasing interest in SAP BTP topics and our sessions in prior years having standing-room only attendance, SAP BTP has more sessions than ever before! We even have for the first time ever, not one, but two hands-on-labs!&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1630170876"&gt;SAP BTP topics for 2025&lt;/H1&gt;&lt;P&gt;This year’s SAP BTP for HR experience at SAP Connect is all about more. More business scenarios, more technology, more platform - more BTP! This year’s topics include customer favorites such as integration, extensibility and automation as well as numerous SAP SuccessFactors product-led sessions about how SAP BTP helps them deliver better solutions making it easier for customers to streamline HCM processes. Additionally, as we see an increase in technical audience members, we’ll be featuring slightly more&lt;BR /&gt;technical product deep dives by the product teams (also a first for us!).&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1433657371"&gt;Demos and hands-on labs&lt;/H1&gt;&lt;H2 id="toc-hId-1366226585"&gt;Demo-station demo: Automate new hire equipment ordering during onboarding, featuring Integration Suite Advanced Event Mesh&lt;/H2&gt;&lt;P&gt;We’re showcasing two demos at the “Integration and Extension with SAP BTP” demo station. The first is our popular &lt;A href="https://www.sap.com/assetdetail/2023/12/74e32719-9d7e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;&lt;EM&gt;Automate new hire equipment ordering during onboarding demo&lt;/EM&gt;&lt;/A&gt; which shows SAP Integration Suite’s Advanced Event Mesh event-driven integration capabilities to provide automated equipment ordering. This dramatically reduces the amount of time a people manager spends ordering equipment as well as requesting access to systems and data. If you missed this demo in Lisbon last year, then this is your chance!&amp;nbsp; Included are:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;See how we used &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Signavio+Process+Intelligence/pd-p/73554900100800003814" class="lia-product-mention" data-product="827-1"&gt;SAP Signavio Process Intelligence&lt;/a&gt;&amp;nbsp;to analyze onboarding processes to identify key areas to address inefficiencies: hiring manager ordering of equipment, waiting for responses from people via email&lt;/LI&gt;&lt;LI&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Integration+Suite/pd-p/73554900100800003241" class="lia-product-mention" data-product="23-1"&gt;SAP Integration Suite&lt;/a&gt;&amp;nbsp;and advanced event mesh which offers real-time triggering of data synchronization based on &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+SuccessFactors+Employee+Central/pd-p/73555000100800000773" class="lia-product-mention" data-product="160-1"&gt;SAP SuccessFactors Employee Central&lt;/a&gt;&amp;nbsp;event triggers&lt;/LI&gt;&lt;LI&gt;An example app an IT department can create to offer pre-bundled packages of equipment to make it easier for managers to pick equipment, and to standardize offerings&lt;/LI&gt;&lt;LI&gt;One-click approvals by the hiring manager, powered by &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Build/pd-p/73555000100700001491" class="lia-product-mention" data-product="1181-1"&gt;SAP Build&lt;/a&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Automatically submitting equipment selection to SAP Ariba guided buying via SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;Notifications pushed to the task center for the hiring manager via SAP Build&lt;/LI&gt;&lt;LI&gt;Automatic submission of support tickets to &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Service+Cloud/pd-p/73555000100700000801" class="lia-product-mention" data-product="822-1"&gt;SAP Service Cloud&lt;/a&gt;&amp;nbsp;for manual tasks like requesting access to systems and data&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1169713080"&gt;&lt;BR /&gt;Demo-station demo: Create a mobile app with SAP Build demo and hands-on lab&lt;/H2&gt;&lt;P&gt;Additionally, we’re showing our brand new &lt;A href="https://www.sap.com/assetdetail/2025/08/f6eb5565-1a7f-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;&lt;EM&gt;Create a mobile app with SAP Build demo&lt;/EM&gt;&lt;/A&gt; which is specifically designed for more technical HRIS audiences in collaboration with the SAP SuccessFactors team.&amp;nbsp;&lt;/P&gt;&lt;P&gt;This demo is also the basis of two, 75-minute hands-on labs we’re offering this year which are sure to sell out! The lab will walk non-technical novices and intermediate technical knowledge people (non-developers, IT and HRIS are our target audience) on how to use SAP Build to quickly and easily create a mobile app with SAP SuccessFactors Employee Central people data to offer location-specific benefits for a field office – all with no coding, using SAP Build’s powerful drag-and-drop development interface. We’ll have product experts from the SAP Build team presenting and explaining to the audience the different capabilities of SAP Build in a follow-the-presenter format from their own workstations in live SAP Build environments so everyone will be able to walk away with direct product knowledge of what’s possible.&lt;BR /&gt;Included in the session:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Overview of the low-code SAP Build environment&lt;/LI&gt;&lt;LI&gt;Overview of various content types, controls, functions available&lt;/LI&gt;&lt;LI&gt;Adding content and configuring to the controls&lt;/LI&gt;&lt;LI&gt;Using an integration to SAP SuccessFactors Employee Central for people data&lt;/LI&gt;&lt;LI&gt;Accessing benefits information in the employee profile via API&lt;/LI&gt;&lt;LI&gt;Customizing the look and feel of the app&lt;/LI&gt;&lt;LI&gt;Testing the app and deployment&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;View the hands-on lab in the event catalog: &lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1750114290689001BJYN" target="_blank" rel="noopener noreferrer"&gt;Hands-on lab: Creating a custom mobile app for HR using SAP Build solutions (limited capacity) | HCM1677&lt;/A&gt;&lt;/P&gt;&lt;P&gt;There’s also quick overview videos of both these demos on the &lt;A href="http://www,sap.com/btp-for-hr" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP.com/btp-for-HR&lt;/A&gt; page as well!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-844116856"&gt;SAP BTP-led sessions&lt;/H1&gt;&lt;H2 id="toc-hId-776686070"&gt;Integration sessions&lt;/H2&gt;&lt;H3 id="toc-hId-709255284"&gt;&lt;BR /&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1750112262926001wb0E" target="_blank" rel="noopener noreferrer"&gt;Maximizing HCM process efficiency with integration through SAP BTP | HCM1665&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Discover how SAP Business Technology Platform and SAP Integration Suite enable integrations for SAP SuccessFactors HCM, automating tasks and processes. Explore third-party integration use cases, such as recruiting, onboarding, and data collection, and strategies for connecting hybrid landscapes, including legacy on-premises and third-party systems as well as event-driven integrations.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-512741779"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1750114845359001HXi3" target="_blank" rel="noopener noreferrer"&gt;How to use event-driven integration to collaborate in real time | HCM1682&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Explore how SAP Integration Suite advanced event mesh can use business events from SAP SuccessFactors solutions such as SAP SuccessFactors Employee Central to push data to other internal or external systems in real-time. See firsthand how you can use this capability to trigger immediate actions, such as when an employee is hired or terminated.&lt;/P&gt;&lt;H2 id="toc-hId-187145555"&gt;&lt;BR /&gt;&lt;BR /&gt;Application development and extensibility sessions&lt;/H2&gt;&lt;H3 id="toc-hId-119714769"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1750113133062001FUeY" target="_blank" rel="noopener noreferrer"&gt;Increasing employee efficiency with automation capabilities in SAP BTP | HCM1671&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Explore automation capabilities in SAP Business Technology Platform (SAP BTP) that can streamline your HCM processes. From recruiting and onboarding to document management, SAP BTP can help you reduce errors in manual data entry and make your employees happier by reducing repetitive and mundane tasks through automation and workflows.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId--152030105"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1749751059587001IP4y" target="_blank" rel="noopener noreferrer"&gt;Using SAP Build to extend your SAP SuccessFactors solutions | HCM1463&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Standardized business processes have come a long way, but every company still has a few things it does differently from everybody else. SAP Build solutions can help extend your human capital management solutions to address your specific business needs. See firsthand how to create low-code/no-code apps that boost end-user adoption and efficiency.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-238262404"&gt;SAP SuccessFactors-led technology sessions including SAP BTP&lt;/H1&gt;&lt;P&gt;&lt;BR /&gt;These SAP SuccessFactors product expert-led sessions discuss how SAP BTP solutions help SAP SuccessFactors deliver better solutions to our customers as well as ways customers may not be aware of how they can use SAP BTP today with their existing SAP SuccessFactors solutions.&lt;/P&gt;&lt;H2 id="toc-hId--251654108"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--448167613"&gt;AI Technology, use cases and innovation&lt;/H2&gt;&lt;H3 id="toc-hId--938084125"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1749744323455001f94N" target="_blank" rel="noopener noreferrer"&gt;Road map and vision: AI in SAP SuccessFactors HCM | HCM1451&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Look at SAP’s AI strategy and planned AI innovations in SAP SuccessFactors HCM. See what’s on the AI road map for HCM and get insights into SAP’s responsible, real-world AI approach. AI-driven capabilities such as the Joule copilot, AI agents, and the mobile experience with &lt;a href="https://community.sap.com/t5/c-khhcw49343/Joule/pd-p/d0136351-8a9c-4881-aebc-bf414b785998" class="lia-product-mention" data-product="1207-1"&gt;Joule&lt;/a&gt;&amp;nbsp;&amp;nbsp;enhance employee experience, adaptability, and productivity&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1134597630"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1749838152489001ki39" target="_blank" rel="noopener noreferrer"&gt;Unlocking and extending the Joule copilot with Joule Studio | HCM1571&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Experience how Joule Studio allows you to create and deploy custom Joule agents and skills that improve efficiency across SAP and third-party systems and enhance your HR experience. Learn about prerequisites and how to get started, and find out how the agent builder capability in Joule Studio can empower you to create your own intelligent agents.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1331111135"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1749753467371001B03H" target="_blank" rel="noopener noreferrer"&gt;Everything you need to know about AI agents for HCM | HCM1468&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;AI agents are "smart teammates" that can observe, plan, and act, often without human intervention. Get a first look at some of the Joule Agents in the HCM road map, such as those for performance and goals, HR service, and people intelligence. Learn how agents can automate complex workflows, augment human capabilities, and drive efficiency.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1234221633"&gt;Employee experience via integration and extensibility&lt;/H2&gt;&lt;H3 id="toc-hId--1724138145"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1748428393122001NWJ4" target="_blank" rel="noopener noreferrer"&gt;Drive productivity by integrating and extending your HCM solutions | HCM1081&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Discover how our recent innovations around integration and extension can help transform your business operations and enhance the user experience. You can use these technologies to integrate and extend your SAP SuccessFactors HCM portfolio with SAP Business Technology Platform.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1920651650"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1749814288319001ACWx" target="_blank" rel="noopener noreferrer"&gt;Enhancing people profiles with SAP Business Technology Platform | HCM1520&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;See firsthand how you can enhance the latest people profile using SAP Business Technology Platform (SAP BTP), with an exclusive preview of advanced features slated for early adopter release in the second half of 2025. Learn how to extend people profiles to meet your organization’s needs and boost the user experience.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1948981464"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1748428393122001NWJ4" target="_blank" rel="noopener noreferrer"&gt;Drive productivity by integrating and extending your HCM solutions | HCM1081&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Discover how our recent innovations around integration and extension can help transform your business operations and enhance the user experience. You can use these technologies to integrate and extend your SAP SuccessFactors HCM portfolio with SAP Business Technology Platform.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1852091962"&gt;Technology and administration&lt;/H2&gt;&lt;H3 id="toc-hId-1952958822"&gt;&lt;BR /&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1747699683547001HZWF" target="_blank" rel="noopener noreferrer"&gt;Road map and vision: Application and technology foundation | HCM1030&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Explore the latest innovations and enhancements in the technology and application foundation of SAP SuccessFactors solutions, including the SAP Business Data Cloud solution, Joule Studio, security, integration, extensibility through SAP Build solutions, and more. See demos and gain insights into what we have planned for our upcoming releases.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1756445317"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1748620308126001OAdd" target="_blank" rel="noopener noreferrer"&gt;Simplifying your system administration to maximize business continuity | HCM1106&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Explore innovative solutions to streamline system configuration and administration of your SAP SuccessFactors solutions. Gain practical tips on how your organization can modernize infrastructure management and boost efficiency with powerful administrative capabilities.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1559931812"&gt;&lt;A href="https://www.sap.com/events/connect/vegas/flow/sap/sc25/catalog-inperson/page/catalog/session/1748184765341001H1Lc" target="_blank" rel="noopener noreferrer"&gt;Fortifying together: Best practices for partner and customer security | HCM1061&lt;/A&gt;&lt;/H3&gt;&lt;P&gt;Explore collaboration strategies and best practices for bolstering security across partners and customers. Discover how collective efforts and aligned practices can mitigate risks and build resilient ecosystems. Don't miss this opportunity to strengthen your security framework and foster trust among your business network.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you haven’t attended Success Connect in the past (now SAP Connect), this year is the time to come to see all the great BTP content and sessions! &lt;STRONG&gt;&lt;A href="https://www.sap.com/events/connect/successconnect.html" target="_blank" rel="noopener noreferrer"&gt;Learn more about SAP Connect on the event page&lt;/A&gt;&lt;/STRONG&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-sap/sap-btp-for-hr-at-sap-connect-and-success-connect-2025-summary-bigger-and/ba-p/14209124"/>
    <published>2025-09-05T20:35:12.794000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-training-and-change-management/sap-learning-conferences-ein-umfassender-%C3%BCberblick-und-highlights-2025/ba-p/14209393</id>
    <title>SAP Learning Conferences: Ein umfassender Überblick und Highlights 2025</title>
    <updated>2025-09-06T08:35:40.838000+02:00</updated>
    <author>
      <name>ThomasJenewein</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/594</uri>
    </author>
    <content>&lt;P&gt;SAP Learning Conferences bieten eine hervorragende Plattform, um die neuesten SAP-Themen zu erkunden, Einblicke von Branchenexperten zu gewinnen und sich mit Fachkollegen zu vernetzen.&amp;nbsp;&lt;/P&gt;&lt;H2 id="wichtigehighlightsdersaplearningconferences2025" id="toc-hId-1759255733"&gt;Wichtige Highlights der SAP Learning Conferences 2025&lt;/H2&gt;&lt;P&gt;Teilnehmer können durch den Besuch dieser Veranstaltungen Ihr SAP Wissen gezielt erweitern. Zusätzlich können Teilnehmer 25% auf ihre nächste SAP-Zertifizierung sparen, indem sie sich für eine SAP Learning Conference registrieren.*&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Hinweis:&lt;/STRONG&gt; Dies ist ein zeitlich begrenztes Angebot und ein aktueller ÜBerblick. Eine frühzeitige Anmeldung wird empfohlen, um Ihren Platz zu sichern.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Schulungskonferenzen.jpg" style="width: 591px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310283i00ACB4C579693795/image-dimensions/591x295/is-moderation-mode/true?v=v2" width="591" height="295" role="button" title="Schulungskonferenzen.jpg" alt="Schulungskonferenzen.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="sapsecurityforumdeutscheausgabe" id="toc-hId-1562742228"&gt;SAP Security Forum / Deutsche Ausgabe&lt;/H2&gt;&lt;P&gt;Mit zunehmenden regulatorischen Anforderungen und dem Bedarf, geschäftskritische SaaS-Plattformen abzusichern, stehen IT-Sicherheitsteams vor erheblichen Herausforderungen. Doch welche Schlüsselthemen müssen Unternehmen angehen, um die SAP-Sicherheit in der Zukunft zu gewährleisten?&amp;nbsp;&lt;/P&gt;&lt;P&gt;Dieses Forum bietet die Möglichkeit, Ihr Fachwissen im Bereich SAP-Sicherheit durch praxisnahe Präsentationen zu Themen wie:&lt;BR /&gt;• IT-Cybersicherheitstrends&lt;BR /&gt;• Infrastruktur- und Kommunikationssicherheit&lt;BR /&gt;• Identitäts- und Zugriffsmanagement&lt;BR /&gt;• Compliance und Datenschutz&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Veranstaltungsdetails:&lt;/STRONG&gt;&lt;BR /&gt;• Datum: 26.–27. November 2025&lt;BR /&gt;• Ort: Walldorf, Deutschland&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Rabatt für DSAG-Mitglieder:&lt;/STRONG&gt; DSAG-Mitglieder können 10% sparen, indem sie beim Ticketkauf den Code &lt;STRONG&gt;DSAG&lt;EM&gt;DISC&lt;/EM&gt;25&lt;/STRONG&gt; verwenden. Bitte beachten Sie, dass dieser Rabatt nicht mit anderen Angeboten kombiniert werden kann.&lt;/P&gt;&lt;P&gt;&lt;A href="https://training.sap.com/course/wdesec-sap-security-forum-classroom-025-de-en/?" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;SAP Security Forum / German Edition hier buchen&lt;/STRONG&gt;&lt;/A&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="sapintegrationsuiteforumdeutscheausgabe" id="toc-hId-1366228723"&gt;SAP Integration Suite Forum (Deutsche Ausgabe)&lt;/H2&gt;&lt;P&gt;Die SAP Integration Suite ist eine Integration-Platform-as-a-Service (iPaaS), die entwickelt wurde, um die Integration von On-Premise- und Cloud-basierten Prozessen, Diensten, Anwendungen, Events und Daten zu optimieren.&lt;/P&gt;&lt;P&gt;Bei diesem Forum werden die Teilnehmer:&lt;BR /&gt;• Die wichtigsten Funktionen und praktischen Anwendungsfälle der SAP Integration Suite erkunden.&lt;BR /&gt;• Über die nahtlose Integration von On-Premise- und Cloud-basierten Anwendungen mit SAP-Tools und vorkonfigurierten Inhalten lernen.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Veranstaltungsdetails:&lt;/STRONG&gt;&lt;BR /&gt;• Datum: 15.–16. Oktober 2025&lt;BR /&gt;• Ort: Walldorf, Deutschland&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Rabatt für DSAG-Mitglieder:&lt;/STRONG&gt; DSAG-Mitglieder können 10% sparen, indem sie beim Ticketkauf den Code &lt;STRONG&gt;DSAG&lt;EM&gt;DISC&lt;/EM&gt;25&lt;/STRONG&gt; verwenden. Bitte beachten Sie, dass dieser Rabatt nicht mit anderen Angeboten kombiniert werden kann.&lt;/P&gt;&lt;P&gt;&lt;A href="https://training.sap.com/course/wdsisd-sap-integration-suite-forum-classroom-025-de-en/?" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;SAP Integration Suite Forum hier buchen&lt;/STRONG&gt;&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="sapdataandanalyticsforumdeutscheausgabe" id="toc-hId-1169715218"&gt;SAP Data and Analytics Forum (Deutsche Ausgabe)&lt;/H2&gt;&lt;P&gt;Dieses Forum bietet Einblicke in die neuesten Entwicklungen und Trends im Bereich SAP Data and Analytics. Teilnehmer können ihr Wissen durch Expertensitzungen vertiefen und von Erfolgsgeschichten der Kunden lernen. Der erste Tag des Forums ist kostenlos und virtuell, der zweite ist kostenpflichtig und hybrid.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Veranstaltungsstruktur:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Tag 1 (Kostenlos):&lt;/STRONG&gt;&lt;BR /&gt;Erkunden Sie die neuesten Trends und Entwicklungen in Data and Analytics, einschließlich Best Practices, neuer Technologien und Anwendungen im Zusammenhang mit der SAP Business Data Cloud. Buchen Sie &lt;A href="https://training.sap.com/course/wdvdaf-sap-data-und-analytics-forum-virtuell-remoteclassroom-025-de-de/?" target="_self" rel="noopener noreferrer"&gt;hier die kostenlose Veranstaltung WDVDAF&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Tag 2 (Kostenpflichtig):&lt;/STRONG&gt;&lt;BR /&gt;Nehmen Sie an Expertensitzungen teil, um Ihr Verständnis von SAP Data and Analytics zu verbessern. Tauschen Sie sich mit SAP-Experten, Trainern und anderen Teilnehmern aus. Buchen Sie &lt;A href="https://training.sap.com/course/wdcdaf-sap-data-und-analytics-forum-hybrid-classroom-025-de-en/?" target="_self" rel="noopener noreferrer"&gt;hier die Veranstaltung in Walldorf ODER virtuell (WDCDAF)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Veranstaltungsdetails:&lt;/STRONG&gt;&lt;BR /&gt;• Datum:&lt;BR /&gt;o 18. November 2025 (Kostenloser virtueller erster Tag)&lt;BR /&gt;o 18.–19. November 2025 (Hybridformat, zweiter Tag kostenpflichtig)&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Rabatt für DSAG-Mitglieder:&lt;/STRONG&gt; DSAG-Mitglieder können 10% sparen, indem sie beim Ticketkauf den Code &lt;STRONG&gt;DSAG&lt;EM&gt;DISC&lt;/EM&gt;25&lt;/STRONG&gt; verwenden. Bitte beachten Sie, dass dieser Rabatt nicht mit anderen Angeboten kombiniert werden kann.&lt;/P&gt;&lt;P&gt;SAP Data und Analytics Forum, 18.-19. November 2025 (2 Tage, hybride Durchführung, der zweite Tag ist kostenpflichtig)&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="wdehr4informationenausderpersonalabrechnungdezumjahreswechsel112026saptraining" id="toc-hId-973201713"&gt;WDEHR4 - Informationen aus der Personalabrechnung DE zum Jahreswechsel 1.1.2026 | SAP Training&lt;/H2&gt;&lt;P&gt;Diese Veranstaltung bietet einen Überblick über die gesetzlichen Änderungen, die ab dem 1. Januar 2026 die Lohn- und Gehaltsabrechnung in Deutschland betreffen. Die Teilnehmer erfahren mehr über die Reformen, neuen Vorschriften und deren Auswirkungen auf die Abrechnungsprozesse.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Für wen ist diese Veranstaltung geeignet:&lt;/STRONG&gt;&lt;BR /&gt;• Projektteammitglieder&lt;BR /&gt;• Mitarbeiter in der Lohnbuchhaltung&lt;BR /&gt;• Erfahrene Berater&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Veranstaltungsdetails:&lt;/STRONG&gt;&lt;BR /&gt;Teilnehmer können zwischen zwei identischen Terminen wählen:&lt;BR /&gt;• Präsenzveranstaltung: Donnerstag, 4. Dezember 2025, in St. Leon-Rot&lt;BR /&gt;• Virtuelle Veranstaltung: Dienstag, 9. Dezember 2025&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Hinweis:&lt;/STRONG&gt; Diese Veranstaltung ist nicht für den 25% SAP-Zertifizierungsrabatt qualifiziert.&lt;/P&gt;&lt;P&gt;&lt;A href="https://training.sap.com/course/wdehr4-informationen-aus-der-personalabrechnung-de-zum-jahreswechsel-112026-classroom-025-de-en/?" target="_self" rel="noopener noreferrer"&gt;WDEHR4 - Informationen aus der Personalabrechnung DE zum Jahreswechsel hier buchen&lt;/A&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="zustzlichehinweise" id="toc-hId-776688208"&gt;Zusätzliche Hinweise&lt;/H2&gt;&lt;P&gt;• Der 25% Rabatt auf SAP-Zertifizierungen gilt nur für SAP Learning Conferences und schließt die WDEHR4-Veranstaltung aus.&lt;BR /&gt;• DSAG-Mitgliedschaftsrabatte sind für ausgewählte Foren verfügbar, können jedoch nicht mit anderen Angeboten kombiniert werden.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/sap-training-and-change-management/sap-learning-conferences-ein-umfassender-%C3%BCberblick-und-highlights-2025/ba-p/14209393"/>
    <published>2025-09-06T08:35:40.838000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/demystifying-the-oauth2-saml-bearer-assertion-usage-in-sap-integration/ba-p/14177915</id>
    <title>Demystifying the OAuth2 SAML Bearer Assertion usage in SAP Integration Suite</title>
    <updated>2025-09-08T05:34:05.936000+02:00</updated>
    <author>
      <name>vinayak_adkoli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/216068</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1737037167"&gt;1. Introduction:&lt;/H2&gt;&lt;P&gt;In the rapidly evolving landscape of enterprise integration, authentication and authorization are no longer mere checkpoints — they are the guardians of trust between systems. Within SAP Integration Suite, the &lt;STRONG&gt;OAuth 2.0 SAML Bearer Assertion &amp;amp; JWT Bearer grant types&lt;/STRONG&gt; stand out as a &lt;U&gt;powerful&lt;/U&gt; yet often &lt;U&gt;less-understood&lt;/U&gt; mechanisms for secure API access, especially in hybrid enterprise landscapes where &lt;U&gt;user identity&lt;/U&gt; is federated across multiple systems.&lt;/P&gt;&lt;P&gt;If you have ever stared at an &lt;U&gt;&lt;EM&gt;urn:ietf:params:oauth:grant-type:saml2-bearer&lt;/EM&gt;&lt;/U&gt;&amp;nbsp;or&amp;nbsp;&lt;U&gt;&lt;EM&gt;urn:ietf:params:oauth:grant-type:jwt-bearer&lt;/EM&gt;&lt;/U&gt; parameter as a supported grant type and wondered &lt;EM&gt;how this elegant string actually translates into a trusted access token&lt;/EM&gt;, you are not alone. Many integration developers and security practitioners have encountered it — often through trial, error, and a bit of documentation spelunking.&lt;/P&gt;&lt;P&gt;In this article, we’ll go beyond the surface. We’ll explore:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;What OAuth2.0 SAML Bearer Assertion is really doing under the hood&lt;/STRONG&gt; — and why it exists in the first place.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;How this plays into SAP Integration Suite’s XSUAA and the broader BTP security model&lt;/STRONG&gt;, particularly in securing IFlows and APIs within SAP Integration Suite.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Practical configuration patterns and gotchas&lt;/STRONG&gt; that can save you hours of troubleshooting.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;A few examples&lt;/STRONG&gt;&amp;nbsp;of exchanging a signed SAML assertion for an OAuth access token, demystifying the process step by step.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1540523662"&gt;&lt;STRONG&gt;2. When is the OAuth2.0 SAML Bearer Assertion relevant for an Integration Developer?&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Traditionally, most communication handled by &lt;STRONG&gt;Cloud Integration&lt;/STRONG&gt; has been &lt;STRONG&gt;system-to-system&lt;/STRONG&gt;, where a technical client or application authenticates itself, and the &lt;STRONG&gt;user context&lt;/STRONG&gt; is irrelevant. In such scenarios, the &lt;STRONG&gt;Client Credentials&lt;/STRONG&gt; grant type has been sufficient, since all that mattered was verifying that the calling system was trusted.&lt;/P&gt;&lt;P&gt;But this picture is evolving. Today, &lt;STRONG&gt;IFlows and APIs are two sides of the same coin&lt;/STRONG&gt;: while IFlows orchestrate integration logic, APIs expose functionality that must often act on behalf of a specific user. Increasingly, organizations expect &lt;STRONG&gt;end-user identity and authorizations&lt;/STRONG&gt; established in one system (e.g., via a corporate IdP or another SAP application) to be &lt;STRONG&gt;seamlessly propagated into Cloud Integration&lt;/STRONG&gt; and carried forward all the way to the backend system.&lt;/P&gt;&lt;P&gt;This is exactly where the &lt;STRONG&gt;OAuth 2.0 SAML Bearer Assertion&lt;/STRONG&gt; grant type becomes relevant. It provides a standards-based mechanism to exchange a trusted user identity assertion for an access token in Cloud Integration. That access token can then be forwarded downstream, ensuring that the &lt;STRONG&gt;original user’s context&lt;/STRONG&gt; — along with their authorizations — is preserved across system boundaries.&lt;/P&gt;&lt;P&gt;For the integration developer, this means that Cloud Integration is no longer just a technical middleware layer. It becomes an active participant in &lt;STRONG&gt;identity propagation&lt;/STRONG&gt;, enabling end-to-end security models that align with enterprise zero-trust principles and modern API-driven architectures.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;To demonstrate the concepts required for achieving identity propagation, this article utilizes the SAP Cloud Connector, X.509 certificates, and backend configurations that I have already explained in detail in &lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/unravelling-the-technical-user-propagation-scenarios-in-sap-integration/ba-p/14182016?utm_source=chatgpt.com" target="_new"&gt;my earlier blog post on technical user propagation&lt;/A&gt;. While that post specifically focuses on &lt;STRONG&gt;technical user&lt;/STRONG&gt; propagation, the configuration steps are not very different for the &lt;STRONG&gt;user propagation&lt;/STRONG&gt; scenario described here. I therefore recommend that readers familiarize themselves with those concepts first, as they provide a solid foundation for this discussion.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;One of the scenarios in &lt;STRONG&gt;this&lt;/STRONG&gt; blog post will also refer back to the earlier article to highlight the applicability of the &lt;STRONG&gt;authorization code grant type&lt;/STRONG&gt; in Cloud Integration—particularly when authorizing users from a corporate IdP such as Entra ID, using &lt;STRONG&gt;OpenID Connect&lt;/STRONG&gt;–based federation in conjunction with &lt;STRONG&gt;SAP Cloud Identity Services (SAP IAS)&lt;/STRONG&gt;. For a broader perspective, I also suggest referring to &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/single-sign-on-to-sap-cloud-integration-cpi-runtime-from-an-external/ba-p/13655108?utm_source=chatgpt.com" target="_self"&gt;my linked blog post&lt;/A&gt;, which explains single sign-on to SAP Cloud Integration runtime from an external application.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Taken together, these resources provide a complete 360-degree view of securing and implementing user-linked flows in SAP Integration Suite.&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-1344010157"&gt;&lt;STRONG&gt;3. Full support for OAuth2.0 SAML Bearer Assertion in Cloud Integration&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;It is important to emphasize that SAP Cloud Integration fully supports the OAuth2 SAML Bearer Assertion flow both at the '&lt;STRONG&gt;sender'&lt;/STRONG&gt;&amp;nbsp;and at the '&lt;STRONG&gt;receiver' side&lt;/STRONG&gt;.&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;On the &lt;STRONG&gt;inbound side&lt;/STRONG&gt;, Cloud Integration can authenticate and authorize incoming requests based on the &lt;STRONG&gt;user’s identity&lt;/STRONG&gt;, ensuring that calls made to IFlows are evaluated not just at the technical client level but also with the context of the end user. This enables developers to enforce fine-grained authorization rules and maintain auditability of user actions.&amp;nbsp;&lt;BR /&gt;The following simplified illustration shows how OAuth2 SAML and JWT Bearer grants act as the enablers that make this flow possible.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DIAGRAM 1.drawio.png" style="width: 450px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307579iEC0BC1F28C5D7290/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="DIAGRAM 1.drawio.png" alt="DIAGRAM 1.drawio.png" /&gt;&lt;/span&gt;&lt;BR /&gt;You can specify these grant types while creating a service instance for the &lt;EM&gt;Process Integration Runtime.&lt;/EM&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Here's an example snippet to create a service instance with the SAMLBearer and JWTBearer grant types" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306947i83528CB7C87A87A6/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-29 at 9.01.40 PM.png" alt="Here's an example snippet to create a service instance with the SAMLBearer and JWTBearer grant types" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Here's an example snippet to create a service instance with the SAMLBearer and JWTBearer grant types&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;On the &lt;STRONG&gt;outbound side&lt;/STRONG&gt;, Cloud Integration can establish an &lt;STRONG&gt;OAuth2 SAML Bearer Assertion&lt;/STRONG&gt; when calling downstream systems such as &lt;STRONG&gt;SAP SuccessFactors, SAP S/4HANA Cloud,&amp;nbsp; S/4HANA On-Premise&lt;/STRONG&gt; (wrapped under the familiar &lt;STRONG&gt;Principal Propagation&lt;/STRONG&gt; pattern), etc.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DIAGRAM 2.drawio.png" style="width: 450px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307580iD6FA24559A181645/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="DIAGRAM 2.drawio.png" alt="DIAGRAM 2.drawio.png" /&gt;&lt;/span&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; This capability is not new. Even in the days of &lt;STRONG&gt;Neo&lt;/STRONG&gt;, Cloud Integration has supported the &lt;STRONG&gt;OAuth2 SAML Bearer flow&lt;/STRONG&gt; for connecting to SAP SuccessFactors — both through technical credentials and via user-based assertions using an email identifier. The topic has been well covered in the community, including several blog posts authored by my colleague, Deepak Deshpande. (&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-integration-principal-propagation-with-successfactors-odata-v2/ba-p/13368194" target="_self"&gt;here&lt;/A&gt; and &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-integration-oauth2-saml-bearer-x-509-certificate-authentication/bc-p/13501610" target="_self"&gt;here&lt;/A&gt;)&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-01 at 4.36.51 PM.png" style="width: 386px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307572i9314CEF8EE52DBF2/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-01 at 4.36.51 PM.png" alt="Screenshot 2025-09-01 at 4.36.51 PM.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Beyond this, any system within the BTP ecosystem that leverages the &lt;STRONG&gt;BTP Connectivity Service&lt;/STRONG&gt;—including &lt;STRONG&gt;S/4HANA Cloud&lt;/STRONG&gt;—can take part in the identity propagation chain. In the sections that follow, we will explore some of the possibilities this enables, such as &lt;STRONG&gt;chaining into another iFlow&lt;/STRONG&gt; (within the same or a different subaccount) or invoking a service exposed through &lt;STRONG&gt;&lt;A href="https://help.sap.com/docs/integration-suite/transitioning-to-odata-provisioning-capability-in-sap-integration-suite/transitioning-odata-provisioning-from-sap-btp-serverless-runtime-to-sap-integration-suite" target="_self" rel="noopener noreferrer"&gt;OData&lt;/A&gt; Provisioning&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-01 at 4.42.11 PM.png" style="width: 328px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307573i309866CD89F19087/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-01 at 4.42.11 PM.png" alt="Screenshot 2025-09-01 at 4.42.11 PM.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This dual capability positions Cloud Integration as a true enabler of &lt;STRONG&gt;end-to-end user identity propagation&lt;/STRONG&gt;, bridging the gap between modern identity-aware APIs and enterprise backend systems, while ensuring security models remain consistent across landscapes.&lt;/P&gt;&lt;H2 id="toc-hId-1147496652"&gt;&lt;STRONG&gt;4. Understanding the "&lt;EM&gt;SAML&lt;/EM&gt;" in OAuth2 SAML Bearer Assertion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The term OAuth2 SAML Bearer Assertion&amp;nbsp;(RFC:&amp;nbsp;&lt;A href="https://datatracker.ietf.org/doc/html/rfc7522" target="_blank" rel="noopener nofollow noreferrer"&gt;RFC 7522&lt;/A&gt;)&amp;nbsp;can often feel confusing at first glance, particularly with the placement of the word '&lt;STRONG&gt;SAML&lt;/STRONG&gt;'.&lt;/P&gt;&lt;P&gt;"&lt;EM&gt;Where is SAML in this picture?", &lt;/EM&gt;you may ask,&amp;nbsp; as practitioners know for a fact that SAP BTP is based on &lt;U&gt;OAuth2.0&lt;/U&gt; and &lt;U&gt;OIDC-based&lt;/U&gt; security standards. Let's unpack this.&lt;/P&gt;&lt;P&gt;Fundamentally, classical&lt;STRONG&gt; Identity Providers (IdP) &lt;/STRONG&gt;like Entra ID,&amp;nbsp;SAP IAS, or corporate ADFS are designed to issue signed &lt;EM&gt;assertions&lt;/EM&gt; asserting a user’s identity and attributes. These assertions are trusted pieces of information that downstream systems can use to authenticate a user without requiring them to re-enter credentials.&amp;nbsp; In addition, in an enterprise integration landscape, the Identity Provider role is &lt;U&gt;not limited&lt;/U&gt; to classical IdPs. Connectivity and middleware components themselves can also &lt;EM&gt;&lt;STRONG&gt;act as&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;an Identity Provider and trusted issuers of SAML assertions. The process of SAML to OAuth2 token exchange sequence is as follows :&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;The SAML assertion issued by the assumed Identity Provider acts as a '&lt;STRONG&gt;credential wrapper&lt;/STRONG&gt;' — it carries the authenticated user identity, roles, and authorizations.&lt;/LI&gt;&lt;LI&gt;The &lt;STRONG&gt;Authorization Server&lt;/STRONG&gt; (in BTP Integration Suite tenant,&amp;nbsp; i.e., &lt;STRONG&gt;XSUAA&lt;/STRONG&gt;) consumes this signed assertion and, if trusted and valid, exchanges it for an OAuth 2.0 access token, per the RFC spec (&lt;A href="https://datatracker.ietf.org/doc/html/rfc7522" target="_blank" rel="noopener nofollow noreferrer"&gt;RFC 7522&lt;/A&gt;).&lt;/LI&gt;&lt;LI&gt;This access token, representing the user identity, can then be presented to the target system, which, based on its security directive, can &lt;STRONG&gt;authenticate&lt;/STRONG&gt; and &lt;STRONG&gt;authorize&lt;/STRONG&gt; the identity from the token.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Let's look at a few notable examples where this process is at play:&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-roman"&gt;&lt;LI&gt;The classical approach to setting up a SAML trust between an &lt;STRONG&gt;Identity Provider&lt;/STRONG&gt; and a &lt;STRONG&gt;Service Provider&lt;/STRONG&gt; lends itself to setting up for the OAuth2 bearer exchange flow, particularly between Entra ID and SAP BTP, based on the '&lt;U&gt;&lt;EM&gt;on-behalf-of&lt;/EM&gt;&lt;/U&gt;' directive. Explained so elegantly in these two blog posts authored by &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/principal-propagation-in-a-multi-cloud-solution-between-microsoft-azure-and/ba-p/13479950" target="_self"&gt;Martin&lt;/A&gt; and &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/principal-propagation-between-azure-ad-and-an-on-premise-sap-system-through/bc-p/13503735" target="_self"&gt;Niklas&lt;/A&gt;, respectively, applicable for services secured by the BTP XSUAA Service.&lt;BR /&gt;Note that this classical 'trust' setup also equally applies between, say, Entra ID and &lt;STRONG&gt;SAP NetWeaver&lt;/STRONG&gt; ABAP AS. Martin Pankraz and I demonstrated the setup in &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/integrating-low-code-solutions-with-microsoft-using-sap-integration-suite/ba-p/13789298" target="_self"&gt;this&lt;/A&gt; blog post.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP BTP Connectivity Service&lt;/STRONG&gt; can generate signed SAML assertions when bridging secure connections to backend systems. For example, the BTP Destination type '&lt;STRONG&gt;OAuth2SAMLBearerAssertion&lt;/STRONG&gt;' leverages this principal. See example below:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-01 at 4.46.21 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307574i4B305C0237472715/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-01 at 4.46.21 PM.png" alt="Screenshot 2025-09-01 at 4.46.21 PM.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;API Management's&lt;/STRONG&gt;&amp;nbsp;gateway acts as an identity provider that injects a user’s authenticated identity into a signed assertion to downstream services. Customers frequently use policy templates like &lt;A href="https://api.sap.com/policytemplate/SAPCloudFoundrySAML2OAuthFlow" target="_self" rel="noopener noreferrer"&gt;this&lt;/A&gt; one listed in the &lt;U&gt;API Business Accelerator Hub&lt;/U&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Integration&lt;/STRONG&gt; itself uses the BTP Connectivity Services' principles by providing out-of-the-box Security Materials that support OAuth2 SAML Bearer exchange. We'll get to more of this bit in this very blog post.&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This means that within the BTP ecosystem, the ability to &lt;EM&gt;mint&lt;/EM&gt; a signed SAML assertion is not confined to a single component but distributed across the connectivity and security services that are orchestrating secure communication flows.&lt;/P&gt;&lt;P&gt;Put simply, the "&lt;STRONG&gt;SAML&lt;/STRONG&gt;"&amp;nbsp;in OAuth2 SAML Bearer Assertion is the &lt;STRONG&gt;trusted identity assertion format&lt;/STRONG&gt; that enables one system to confidently vouch for a user’s identity to another. When combined with OAuth 2.0, it bridges the gap between &lt;STRONG&gt;user-centric authentication (SAML)&lt;/STRONG&gt; and &lt;STRONG&gt;token-based authorization (OAuth)&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;On that note, you may have come across the &lt;STRONG&gt;OAuth2 JWT Bearer&lt;/STRONG&gt; grant type as well. Let’s weave that into our context.&lt;/P&gt;&lt;H2 id="toc-hId-950983147"&gt;&lt;STRONG&gt;5. The OAuth2 JWT Bearer grant type&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;While the OAuth2 SAML Bearer grant type leverages a SAML 2.0 assertion to obtain an access token, its close cousin — the &lt;STRONG&gt;OAuth2 JWT Bearer&lt;/STRONG&gt; grant type — follows a similar token exchange pattern but uses a &lt;STRONG&gt;signed JSON Web Token (JWT)&lt;/STRONG&gt; instead of SAML. In the context of SAP BTP XSUAA, the JWT Bearer flow is often chosen when the identity assertion is already in JWT format, such as when integrating with systems that natively issue JWTs (e.g., other BTP applications, certain identity providers, or trusted microservices).&lt;/P&gt;&lt;P&gt;However, for the purposes of this article, we will not be focusing on the JWT Bearer approach. The reason is that &lt;STRONG&gt;SAP Cloud Integration only partially supports it&lt;/STRONG&gt; — JWT Bearer can be used when authenticating inbound requests to an iFlow, but it is &lt;STRONG&gt;not available as a selectable option in the “Security Material”&lt;/STRONG&gt; when making outbound calls from Cloud Integration to a target system. As such, its utility is currently more limited in end-to-end integration scenarios compared to the SAML Bearer flow.&lt;/P&gt;&lt;H2 id="toc-hId-754469642"&gt;&lt;STRONG&gt;6. Configurations needed to achieve OAuth2 SAML Bearer exchange&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Since we are on the topic of the role of &lt;STRONG&gt;Identity Providers&lt;/STRONG&gt; (&lt;EM&gt;actual&lt;/EM&gt; or &lt;EM&gt;assumed&lt;/EM&gt;) during an OAuth2 SAML Bearer handshake, let us weave in the role of the &lt;STRONG&gt;Trust Configuration&lt;/STRONG&gt; setting in the BTP Cockpit — a subject that is often less understood in the context of SAP Integration Suite.&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;EM&gt;Why is this less understood?&lt;/EM&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;In BTP landscapes, the &lt;EM&gt;Trust Configuration&lt;/EM&gt; in the cockpit is primarily associated with &lt;STRONG&gt;browser-based BTP applications&lt;/STRONG&gt; that require coupling between an &lt;STRONG&gt;Identity Provider (IdP)&lt;/STRONG&gt; (such as SAP IAS or a corporate IdP) and the &lt;STRONG&gt;Service Provider (SP)&lt;/STRONG&gt; role of the application. This trust relationship governs how users log in interactively to applications and how their identities are federated.&lt;/P&gt;&lt;P&gt;This implies that at the &lt;STRONG&gt;design time (UI) level&lt;/STRONG&gt;, configuring the Trust relationship ensures that developers and administrators can access the Integration Suite tools via their corporate IDP.&lt;/P&gt;&lt;P&gt;However, customers often struggle to apply the same concept when it comes to the &lt;STRONG&gt;runtime&lt;/STRONG&gt; — where iFlows and APIs need to be authenticated and authorized via &lt;STRONG&gt;user identities&lt;/STRONG&gt;. This is precisely where dialing in the &lt;STRONG&gt;correct runtime configurations for OAuth2 SAML Bearer exchange&lt;/STRONG&gt; becomes critical.&lt;/P&gt;&lt;P&gt;To keep this practical, let’s break the discussion into multiple scenarios and examine the configurations required for each. Here is a table that captures the different scenarios covered in this blog post :&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="17.02470461868958%"&gt;Scenario 1&lt;/TD&gt;&lt;TD width="82.97529538131043%"&gt;&amp;nbsp;[INBOUND] Invoking an IFlow via BTP Destination / Connectivity Service&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="17.02470461868958%"&gt;Scenario 2 variant 1&lt;/TD&gt;&lt;TD width="82.97529538131043%"&gt;&lt;P&gt;Scenario 1 + [OUTBOUND] Using Security Material to make an outbound OAuth2 SAML Bearer call&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="17.02470461868958%"&gt;Scenario 2 variant 2&lt;/TD&gt;&lt;TD width="82.97529538131043%"&gt;&amp;nbsp;Authorization Code grant type&amp;nbsp; +&amp;nbsp;[OUTBOUND] Using Security Material to make an outbound OAuth2 SAML Bearer call&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H4 id="toc-hId-816121575"&gt;6.1. Scenario 1: [INBOUND] Invoking an IFlow via a BTP Destination:&lt;/H4&gt;&lt;P&gt;There are use cases where a &lt;STRONG&gt;Fiori/UI5 application&lt;/STRONG&gt; deployed on BTP uses a destination to call an IFlow, ensuring the user’s identity (via OAuth2 SAML Bearer) is securely propagated into the integration layer. Similarly, &lt;STRONG&gt;SAP Build Process Automation&lt;/STRONG&gt; can leverage destinations in its Actions framework to trigger IFlows as part of an automated workflow, often requiring identity propagation so that downstream systems know which user initiated the process. Beyond these, other scenarios include &lt;STRONG&gt;SAP Work Zone&lt;/STRONG&gt; or &lt;STRONG&gt;SAP Launchpad&lt;/STRONG&gt; extensions invoking integration services, as well as custom applications running in the Cloud Foundry runtime consuming iFlows via destinations.&lt;/P&gt;&lt;P&gt;In practice, customers often face challenges in identifying the correct configurations to make this scenario work. Below is a detailed cluster of the configurations involved.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;OAuth token endpoint address:&lt;/STRONG&gt; Customers often assume the default '&lt;EM&gt;.../oauth/token&lt;/EM&gt;' endpoint applies universally, but this is not the case. OAuthSAMLBearer looks for the '.../&lt;EM&gt;oauth/token/alias/&lt;/EM&gt;' endpoint.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Exchange of trust between subaccounts&lt;/STRONG&gt; where the services reside.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Implicit trust within the same subaccount:&lt;/STRONG&gt; Even if both services are in the same subaccount, an implicit trust relationship must still be established. This small step can save hours of troubleshooting.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BTP Destination and Integration Flow&lt;/STRONG&gt; settings to support OAuth2 SAML Bearer handshake.&lt;/LI&gt;&lt;LI&gt;A quick walkthrough of the &lt;STRONG&gt;SAP Business Application Studio&lt;/STRONG&gt; template wizard building blocks, enabling an SAP Fiori application to validate everything completed so far.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Here is a solution blueprint of what we will put together:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iflow diagrams-Page-4.drawio.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309417iB09768E7A05C5824/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="iflow diagrams-Page-4.drawio.png" alt="iflow diagrams-Page-4.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let’s review these configurations step by step.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;1. &lt;STRONG&gt;OAuth token alias endpoint.&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="9.595417114214108%"&gt;&lt;H4 id="toc-hId-619608070"&gt;Step No&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;H4 id="toc-hId-423094565"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="49.23021840315074%"&gt;&lt;H4 id="toc-hId-226581060"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.595417114214108%"&gt;1.&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;Download the '&lt;STRONG&gt;SAML Metadata&lt;/STRONG&gt;' from the '&lt;STRONG&gt;Trust Configuration&lt;/STRONG&gt;' section of your BTP Cockpit&lt;/TD&gt;&lt;TD width="49.23021840315074%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 6.36.56 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308275i5AE7A4A3711E75A1/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 6.36.56 PM.png" alt="Screenshot 2025-09-02 at 6.36.56 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.595417114214108%"&gt;2.&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;Locate and copy the value of the '&lt;STRONG&gt;entityID&lt;/STRONG&gt;' element from the downloaded XML file&lt;/TD&gt;&lt;TD width="49.23021840315074%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 6.39.08 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308276i4FFF8592D4B0944B/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 6.39.08 PM.png" alt="Screenshot 2025-09-02 at 6.39.08 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.595417114214108%"&gt;3.&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;P&gt;Locate and copy the '&lt;STRONG&gt;Location&lt;/STRONG&gt;' element. There are multiple attributes present; make sure you copy the one that contains the '&lt;U&gt;&lt;EM&gt;.../oauth/token/alias/...&lt;/EM&gt;&lt;/U&gt;' URL pattern.&lt;/P&gt;&lt;P&gt;This will be the token endpoint we will use in subsequent configuration screens.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="49.23021840315074%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 6.38.57 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308277i660CDC65954D97C8/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 6.38.57 PM.png" alt="Screenshot 2025-09-02 at 6.38.57 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;2. &amp;amp; 3.&amp;nbsp;&lt;STRONG&gt;Exchange of Trust between subaccount / Implicit trust within the same subaccount.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Follow the instructions in this BTP&amp;nbsp;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/user-propagation-between-cloud-foundry-applications" target="_blank" rel="noopener noreferrer"&gt;help guide&lt;/A&gt;: construct the &lt;EM&gt;EntityDescriptor&lt;/EM&gt; metadata exactly as specified and upload it as &lt;STRONG&gt;Trusted Metadata&lt;/STRONG&gt; in your target subaccount—namely, the subaccount hosting the Integration Suite.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="9.917651271034732%"&gt;&lt;H4 id="toc-hId--467649540"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="41.38918725384891%"&gt;&lt;H4 id="toc-hId--664163045"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;H4 id="toc-hId--860676550"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;1&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Identify your &lt;STRONG&gt;source&lt;/STRONG&gt; and &lt;STRONG&gt;target&lt;/STRONG&gt; subaccounts, and carefully construct the &lt;U&gt;&lt;EM&gt;EntityDescriptor&lt;/EM&gt;&lt;/U&gt; snippet using the settings provided in the &lt;EM&gt;User Propagation between Cloud Foundry Applications&lt;/EM&gt; guide.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;Note:&lt;/STRONG&gt; As mentioned earlier, this step is required even if the source and target services reside within the same BTP subaccount. In such cases, the configuration establishes a &lt;STRONG&gt;self-trust&lt;/STRONG&gt; relationship.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 10.07.06 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308287iF754F3C69D008E4C/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 10.07.06 PM.png" alt="Screenshot 2025-09-02 at 10.07.06 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.917651271034732%"&gt;2.&lt;/TD&gt;&lt;TD width="41.38918725384891%"&gt;Go to the &lt;STRONG&gt;Destination Trust&lt;/STRONG&gt; section in your BTP Cockpit of the source subaccount and import the &lt;STRONG&gt;Active Trust Certificate&lt;/STRONG&gt;. In addition, follow the recommended best practices to set up a &lt;U&gt;Passive Trust Certificate&lt;/U&gt; as well, ensuring a smooth switchover and preventing disruptions when the active certificate approaches expiry.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 8.47.32 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308280iC2E9C01380F70775/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 8.47.32 PM.png" alt="Screenshot 2025-09-02 at 8.47.32 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.917651271034732%"&gt;3.&lt;/TD&gt;&lt;TD width="41.38918725384891%"&gt;Here is a snapshot of the &lt;EM&gt;EntityDescriptor&lt;/EM&gt; file taken from my account configuration.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 9.52.14 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308281i05AADBAD5A5639CE/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 9.52.14 PM.png" alt="Screenshot 2025-09-02 at 9.52.14 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Upload the prepared file by clicking on the '&lt;STRONG&gt;New SAML Trust Configuration&lt;/STRONG&gt;' button in your target subaccount.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;Disable the &lt;STRONG&gt;Available for User Logon&lt;/STRONG&gt; and &lt;STRONG&gt;Create Shadow User&lt;/STRONG&gt; options. Disabling the latter ensures that only pre-onboarded users are propagated, which is more secure than allowing all users to be automatically created and propagated.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 3.40.27 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308283iB785E7D1666F62BB/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 3.40.27 PM.png" alt="Screenshot 2025-09-02 at 3.40.27 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;Because we disabled shadow user creation, go to the &lt;STRONG&gt;Users&lt;/STRONG&gt; section and explicitly &lt;STRONG&gt;create&lt;/STRONG&gt; the users that need to be propagated.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 10.00.34 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308285iFAD3B00705F35C11/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 10.00.34 PM.png" alt="Screenshot 2025-09-02 at 10.00.34 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&lt;/TD&gt;&lt;TD&gt;Once the user has been created, we still need to ensure that the necessary roles and scopes from the source token are available for propagation. There are two ways to achieve this. The simplest approach is to assign the newly created user to a &lt;STRONG&gt;Role Collection&lt;/STRONG&gt; that includes the &lt;STRONG&gt;MessagingSend&lt;/STRONG&gt; role.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 10.02.52 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308286iA296EAE7B3FCC306/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 10.02.52 PM.png" alt="Screenshot 2025-09-02 at 10.02.52 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;7.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;Rather than explicitly assigning individual users to a role collection, a more elegant approach is to map a &lt;STRONG&gt;group&lt;/STRONG&gt; from the identity provider to the desired role collection. This ensures that the corresponding scopes from the original token are automatically granted to the user principal in the target token as well.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 2.13.33 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308793i01FE56174ABF9DFD/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 2.13.33 PM.png" alt="Screenshot 2025-09-03 at 2.13.33 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;4. &lt;STRONG&gt;BTP Destination and IFlow settings:&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;H4 id="toc-hId--1057190055"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD&gt;&lt;H4 id="toc-hId--1253703560"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD&gt;&lt;H4 id="toc-hId--1450217065"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.59541711421411%"&gt;1.&lt;/TD&gt;&lt;TD width="42.248478338703904%"&gt;Create a &lt;EM&gt;service instance&lt;/EM&gt; of the Process Integration Runtime, selecting only the &lt;STRONG&gt;saml2-bearer&lt;/STRONG&gt; grant type. This configuration strengthens IFlow security by &lt;U&gt;preventing&lt;/U&gt; the use of other grant types (such as client credentials or password).&lt;/TD&gt;&lt;TD width="48.156104547081995%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 11.07.27 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308306i83FC90AF422C1069/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 11.07.27 PM.png" alt="Screenshot 2025-09-02 at 11.07.27 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.59541711421411%"&gt;2.&amp;nbsp;&lt;/TD&gt;&lt;TD width="42.248478338703904%"&gt;&lt;P&gt;Make sure to create a BTP Destination in the 'source' subaccount (i.e., the subaccount that hosts the client app). I've highlighted the key settings.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;U&gt;URL&lt;/U&gt; - The target IFlow's runtime host alias.&lt;BR /&gt;&lt;U&gt;Audience&lt;/U&gt; - the entityID captured in step 6.1.1.2.&lt;BR /&gt;&lt;U&gt;Token Service URL&lt;/U&gt; - the '&lt;EM&gt;/oauth/token/alias&lt;/EM&gt;' endpoint as explained above.&lt;BR /&gt;&lt;U&gt;includeAttributes&lt;/U&gt; = true. This is needed to support the Identity Provider group assignment demonstrated in step 6.1.2.7.&lt;BR /&gt;&lt;U&gt;nameIDFromat&lt;/U&gt; = 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress' to support the propagation of email address&lt;/P&gt;&lt;/TD&gt;&lt;TD width="48.156104547081995%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 2.49.43 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308796i378B3130FF2E7458/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 2.49.43 PM.png" alt="Screenshot 2025-09-03 at 2.49.43 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;3.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;To demonstrate an end-to-end flow, I’ve created an IFlow that uses an &lt;STRONG&gt;OData V2&lt;/STRONG&gt; adapter at both the Sender and Receiver. This approach was chosen because SAP Business Application Studio makes it straightforward to build a Fiori app that consumes an OData service.&lt;/P&gt;&lt;P&gt;This first variant of the receiver adapter connects to an S/4HANA On-premise backend using &lt;STRONG&gt;&lt;EM&gt;principal propagation&lt;/EM&gt;&lt;/STRONG&gt;. It demonstrates how an inbound OAuth2 SAML Bearer assertion grant type carries the full user context, which can then be propagated downstream.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 11.59.45 AM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308771i6343E452F0A8F074/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 11.59.45 AM.png" alt="Screenshot 2025-09-03 at 11.59.45 AM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;The second receiver adapter variant connects to an S/4HANA Cloud system using &lt;EM&gt;&lt;STRONG&gt;OAuth2 SAML Bearer&lt;/STRONG&gt;&lt;/EM&gt; security material. While we will cover this approach in the next scenario, the detailed configuration within the S/4HANA backend lies outside the scope of this blog post.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 12.01.41 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308772iE6AFD6D9B904270E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 12.01.41 PM.png" alt="Screenshot 2025-09-03 at 12.01.41 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;To test the settings, let’s shift focus to &lt;STRONG&gt;SAP Business Application Studio (BAS)&lt;/STRONG&gt; in the source subaccount, where we’ll build a small app that connects through the BTP Destination to the IFlow running in the target subaccount, using the OAuth2 SAML Bearer bridge. Note that we are using the BAS only as a means to simulate the &lt;STRONG&gt;user login&lt;/STRONG&gt; experience.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 1.15.40 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308797iB85B7CE9B836271D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 1.15.40 PM.png" alt="Screenshot 2025-09-03 at 1.15.40 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&lt;/TD&gt;&lt;TD&gt;If you encounter an error code 500 and notice no entries showing that the IFlow was invoked (for example, in the &lt;STRONG&gt;HTTP Access Log&lt;/STRONG&gt;), it most likely indicates that the token exchange failed. In this case, review the configuration steps carefully to ensure accuracy.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 3.21.08 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308309i20DF552A9ACB3138/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 3.21.08 PM.png" alt="Screenshot 2025-09-02 at 3.21.08 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;7.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;When all configurations are correctly set, the &lt;STRONG&gt;Next&lt;/STRONG&gt; button becomes enabled. This confirms that the system successfully retrieved the OData metadata by querying the backend through the configured destination type. In the Application Wizard template block’s Output console, you can see the call dispatched to the Integration Flow, which can also be verified in the Message Processing Logs (MPL)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 4.09.32 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308310i15AEADDD1398B38E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 4.09.32 PM.png" alt="Screenshot 2025-09-02 at 4.09.32 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;8.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;While this successfully concludes our demonstration, feel free to complete the Wizard and run/deploy the generated application to see the end-to-end response light up.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;This completes one successful round-trip.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 12.35.27 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309454i37AC93F42AF02418/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 12.35.27 PM.png" alt="Screenshot 2025-09-04 at 12.35.27 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H4 id="toc-hId--1646730570"&gt;&amp;nbsp;&lt;/H4&gt;&lt;H4 id="toc-hId--1843244075"&gt;6.2. Scenario 2:&amp;nbsp; [OUTBOUND] Using Security Material to make an outbound OAuth2 SAML Bearer call&lt;/H4&gt;&lt;P&gt;As described in section &lt;U&gt;3.b.2&lt;/U&gt;, we will now focus on leveraging Cloud Integration’s capability to use the generic OAuth2 SAML Bearer security material, rather than the ones targeting SuccessFactors, as they are already well covered in the community.&lt;/P&gt;&lt;P&gt;One might ask: &lt;EM&gt;how do we set up an environment that makes it simple to simulate and test the user flow&lt;/EM&gt;? The good news is that Scenario 1 has already given us the &lt;STRONG&gt;user interaction&lt;/STRONG&gt; layer. All we need to do now is &lt;STRONG&gt;chain&lt;/STRONG&gt; the IFlow we created earlier with another one, letting the &lt;STRONG&gt;outbound of the first serve as the inbound&lt;/STRONG&gt; of the second. This allows us to validate the flow end-to-end in both directions.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="a53ju9.jpg" style="width: 500px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309423iC989A0F6078E14D1/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="a53ju9.jpg" alt="a53ju9.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To keep the discourse engaging, we will explore yet another variant for testing the outbound OAuth2 SAML Bearer setup. Here, we’ll use Cloud Integration’s capability to trigger an &lt;STRONG&gt;Authorization Code&lt;/STRONG&gt; grant type exchange, simulating a real user login, and then build on that to invoke the OAuth2 SAML Bearer method.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6.2.1. Scenario 2 - Variant 1:&lt;/STRONG&gt;&lt;BR /&gt;Here's the solution blueprint of the first variant, where we extend scenario 1 and &lt;EM&gt;chain&lt;/EM&gt; an intermediate IFlow with the main IFlow.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iflow diagrams-Page-5.drawio.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309471i90104E0050C12D36/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="iflow diagrams-Page-5.drawio.png" alt="iflow diagrams-Page-5.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The sequence of events from the client to Business Application Studio follows the same pattern as in Scenario 1. The difference here is that instead of directly calling the &lt;STRONG&gt;main IFlow&lt;/STRONG&gt;,&amp;nbsp; we have intentionally introduced an &lt;STRONG&gt;intermediate IFlow&lt;/STRONG&gt; (step callout 1 in the blueprint above), which is configured with OAuth2 SAML Bearer security material to eventually connect with the &lt;STRONG&gt;&lt;EM&gt;main IFlow&lt;/EM&gt;&lt;/STRONG&gt;. Since the main IFlow accepts only the OAuth2 SAML grant type (step callout 2), this setup allows the connection to be seamlessly extended to the backend using Principal Propagation.&lt;/P&gt;&lt;P&gt;Regardless of whether the intermediate and main IFlows are in the same or separate subaccounts, a &lt;STRONG&gt;SAML trust&lt;/STRONG&gt; between the &lt;EM&gt;source&lt;/EM&gt; and &lt;EM&gt;target&lt;/EM&gt; is &lt;STRONG&gt;mandatory&lt;/STRONG&gt;, as highlighted in Procedure 2 of Scenario 1.&lt;/P&gt;&lt;P&gt;Let's take a look at the key configuration steps:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="9.760394644115578%" height="58px"&gt;&lt;H4 id="toc-hId--2039757580"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="42.84707540521494%" height="58px"&gt;&lt;H4 id="toc-hId-2058696211"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="47.39252995066949%" height="58px"&gt;&lt;H4 id="toc-hId-2030366397"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.760394644115578%" height="112px"&gt;1.&lt;/TD&gt;&lt;TD width="42.84707540521494%" height="112px"&gt;Notice that&amp;nbsp; I've created a metadata called '&lt;STRONG&gt;self-trust&lt;/STRONG&gt;' with the &lt;EM&gt;entityDescriptor&lt;/EM&gt; for the subaccount. In my case, both the &lt;U&gt;intermediate&lt;/U&gt; and &lt;U&gt;main&lt;/U&gt; IFlow are on the same Integration Suite tenant, hence the '&lt;U&gt;self&lt;/U&gt;' trust.&lt;/TD&gt;&lt;TD width="47.39252995066949%" height="112px"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 6.58.17 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309495i274DFF721C10DD9A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 6.58.17 PM.png" alt="Screenshot 2025-09-04 at 6.58.17 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.760394644115578%" height="112px"&gt;2.&lt;/TD&gt;&lt;TD width="42.84707540521494%" height="112px"&gt;Create a security material of type OAuth2 SAML Bearer. Set the target system type as '&lt;STRONG&gt;SAP BTP (CF)&lt;/STRONG&gt;'.&amp;nbsp; For the attributes, use the same settings as the ones we used in step 6.1.4.2 of the previous scenario.&amp;nbsp;&lt;/TD&gt;&lt;TD width="47.39252995066949%" height="112px"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 12.52.25 PM.png" style="width: 359px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309497i4554E1FD554EB476/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 12.52.25 PM.png" alt="Screenshot 2025-09-04 at 12.52.25 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="57px"&gt;3.&lt;/TD&gt;&lt;TD height="57px"&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;You may notice that under the hood, this internally generates a &lt;STRONG&gt;BTP Destination&lt;/STRONG&gt; in the subaccount with &lt;STRONG&gt;OAuth2SAMLBearer&lt;/STRONG&gt;.&lt;/TD&gt;&lt;TD height="57px"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 6.55.26 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309498i8678CFD7DE33806D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 6.55.26 PM.png" alt="Screenshot 2025-09-04 at 6.55.26 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;Notice the change here on the IFlow we built in scenario 1 (step 3 of 6.1.4). Instead of directly calling the backend URL, we have turned this into an &lt;STRONG&gt;Intermediate&lt;/STRONG&gt; IFlow that chains into the final &lt;STRONG&gt;main&lt;/STRONG&gt; IFlow, with the authentication set to the &lt;STRONG&gt;OAuth2 SAML Bearer&lt;/STRONG&gt; security material created in step 2.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-05 at 4.54.30 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310242i141E3876406DA05F/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-05 at 4.54.30 PM.png" alt="Screenshot 2025-09-05 at 4.54.30 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;As you can verify in the screenshot, the &lt;STRONG&gt;main&lt;/STRONG&gt; IFlow is the one that invokes the backend with &lt;STRONG&gt;principal propagation&lt;/STRONG&gt;.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 1.25.41 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309499i0A1845A6E3E43015/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 1.25.41 PM.png" alt="Screenshot 2025-09-04 at 1.25.41 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;Let's go back to the app we built in scenario 1 and refresh the page. We should see the UI populate with the expected recordset after successfully negotiating the flows across the chained &lt;STRONG&gt;intermediate&lt;/STRONG&gt; and &lt;STRONG&gt;main&lt;/STRONG&gt; IFlows all the way to the backend.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 12.35.27 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309515i2DD9B00B2A38C1D0/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 12.35.27 PM.png" alt="Screenshot 2025-09-04 at 12.35.27 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;As a confirmation step, look up the activity in the message processing logs (MPL) section, and you will see that both the intermediate and final IFlows were executed and in the right sequence.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 1.22.58 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309516iCA386F666893BE4E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 1.22.58 PM.png" alt="Screenshot 2025-09-04 at 1.22.58 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6.2.2. Scenario 2 - Variant 2:&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;Rather than using &lt;STRONG&gt;Business Application Studio&lt;/STRONG&gt; as the user-centric app to trigger the intermediate IFlow, we will instead leverage the &lt;STRONG&gt;&lt;EM&gt;Authorization Code&lt;/EM&gt; &lt;/STRONG&gt;grant type. From a technical perspective, the Authorization Code flow differs from the OAuth2 SAML Bearer grant; however, in principle, both achieve the same outcome:&lt;STRONG&gt; propagating a user session&lt;/STRONG&gt; within an OAuth access token.&lt;/P&gt;&lt;P&gt;This raises the question—&lt;EM&gt;how do we introduce the Authorization Code grant flow? &lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Cloud Integration natively &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/deploying-oauth2-authorization-code" target="_self" rel="noopener noreferrer"&gt;supports&lt;/A&gt; the Authorization Code grant type as security material. While it was originally introduced to support adapters such as &lt;STRONG&gt;Dropbox&lt;/STRONG&gt; and &lt;STRONG&gt;Microsoft 365&lt;/STRONG&gt;, which rely on this flow, we can extend its utility further. By attaching this &lt;STRONG&gt;security material&lt;/STRONG&gt; to any outbound call through the &lt;STRONG&gt;HTTP Receiver adapter&lt;/STRONG&gt;—and applying a small amount of scripting (see step 6.2.2.3)—we can retrieve an access token from the authorization code using the &lt;STRONG&gt;SecureStoreService&lt;/STRONG&gt; &lt;A href="https://help.sap.com/doc/471310fc71c94c2d913884e2ff1b4039/Cloud/en-US/com/sap/it/api/securestore/SecureStoreService.html#getAccesTokenForOauth2AuthorizationCodeCredential-java.lang.String-" target="_self" rel="noopener noreferrer"&gt;API.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Here is a solution blueprint of what we aim to achieve:&lt;BR /&gt;For simplicity, a &lt;STRONG&gt;timer-based IFlow&lt;/STRONG&gt; will initiate an outbound call to the &lt;U&gt;intermediate&lt;/U&gt; IFlow, attaching an access token extracted from the security material (constructed via the &lt;STRONG&gt;authorization code&lt;/STRONG&gt; exchange)&amp;nbsp; that represents an authenticated user. This user may either be provisioned through the default Cloud Identity Service or authenticated via a corporate IdP such as Entra ID, as outlined in one of my &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/single-sign-on-to-sap-cloud-integration-cpi-runtime-from-an-external/ba-p/13655108" target="_self"&gt;earlier&lt;/A&gt; blog posts. The interaction sequence between the intermediate IFlow and the final IFlow remains unchanged.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iflow diagrams-Page-3.drawio.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310626i1029D34621866527/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="iflow diagrams-Page-3.drawio.png" alt="iflow diagrams-Page-3.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.2.2.1 First, let's go over the configuration steps to establish the authorization code:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="9.702828499820981%"&gt;&lt;H4 id="toc-hId-1833852892"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="43.1077694235589%"&gt;&lt;H4 id="toc-hId-1637339387"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="47.18940207662013%"&gt;&lt;H4 id="toc-hId-1440825882"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.702828499820981%"&gt;1.&lt;/TD&gt;&lt;TD width="43.1077694235589%"&gt;In your source subaccount, create a new &lt;STRONG&gt;&lt;EM&gt;OAuth2 Authorization Code&lt;/EM&gt;&lt;/STRONG&gt; security material. During setup, a &lt;STRONG&gt;&lt;EM&gt;Redirect URL&lt;/EM&gt;&lt;/STRONG&gt; will be generated—make sure to note this URL, as it will be required in the next step when configuring a service key with the Authorization Code grant type.&lt;/TD&gt;&lt;TD width="47.18940207662013%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 7.54.36 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309520iDFE949E38A72EB5E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 7.54.36 PM.png" alt="Screenshot 2025-09-04 at 7.54.36 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;2.&lt;/TD&gt;&lt;TD&gt;In the BTP Cockpit, when creating a new instance of the &lt;EM&gt;Process Integration Runtime&lt;/EM&gt; service, select both the &lt;STRONG&gt;&lt;EM&gt;Refresh Token&lt;/EM&gt;&lt;/STRONG&gt; and &lt;STRONG&gt;&lt;EM&gt;Authorization Code&lt;/EM&gt;&lt;/STRONG&gt; grant types. Then, paste the Redirect URL captured in Step 1 into the &lt;STRONG&gt;&lt;EM&gt;Redirect URI&lt;/EM&gt;&amp;nbsp;&lt;/STRONG&gt;field.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 7.59.30 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309521iA0C1C87927D67E1D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 7.59.30 PM.png" alt="Screenshot 2025-09-04 at 7.59.30 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;3.&lt;/TD&gt;&lt;TD&gt;After creating the service key, make sure to note the &lt;STRONG&gt;client credentials&lt;/STRONG&gt;, along with the &lt;STRONG&gt;authorization&lt;/STRONG&gt; and &lt;STRONG&gt;token&lt;/STRONG&gt; &lt;STRONG&gt;URL&lt;/STRONG&gt; endpoints, as these will be required in a later step.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.02.01 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309522i7EE278AD4A4F439B/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.02.01 PM.png" alt="Screenshot 2025-09-04 at 8.02.01 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Go back to the security material creation screen and enter the parameters copied from the previous step.&lt;/P&gt;&lt;P&gt;You may specify a user name for the user entity you want to create, but this value will be overridden by the actual user identity provided during browser logon step.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.03.52 PM.png" style="width: 322px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309523i2C49E65A39A30AAA/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.03.52 PM.png" alt="Screenshot 2025-09-04 at 8.03.52 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;After the security material is created, click on the '&lt;STRONG&gt;Authorize&lt;/STRONG&gt;' button under the &lt;STRONG&gt;...&lt;/STRONG&gt; column. This will kick off the authorization code flow process in a new browser window. and will present the auth code to the specified redirect_uri.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.06.02 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309524i606256757B086D19/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.06.02 PM.png" alt="Screenshot 2025-09-04 at 8.06.02 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&lt;/TD&gt;&lt;TD&gt;You will be asked to authenticate yourself to an identity provider of your choosing, depending on the IDP settings as enabled in BTP's '&lt;STRONG&gt;Trust Configuration'&lt;/STRONG&gt;. Note that I'll be authenticating into SAP Identity Service, which in turn is configured to federate with multiple corporate IDPs via OIDC settings, as explained in my &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/single-sign-on-to-sap-cloud-integration-cpi-runtime-from-an-external/ba-p/13655108" target="_self"&gt;linked&lt;/A&gt; blog.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.09.18 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310702i15C3B8FC49B33A84/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.09.18 PM.png" alt="Screenshot 2025-09-04 at 8.09.18 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;7.&lt;/TD&gt;&lt;TD&gt;I'm being led into authenticating against Entra ID and my &lt;STRONG&gt;*.outlook.com&lt;/STRONG&gt; email is being propagated as the authenticated user context into Cloud Integration.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.10.34 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310703i375CAA177552E49E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.10.34 PM.png" alt="Screenshot 2025-09-04 at 8.10.34 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;8.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;After successfully logging the user in, the browser redirects to the specified '&lt;STRONG&gt;redirect_uri'&lt;/STRONG&gt; with the negotiated '&lt;STRONG&gt;code&lt;/STRONG&gt;'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;This completes our authentication process.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-07 at 4.32.20 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310704iCDA7B6A9FFE2ACC4/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-07 at 4.32.20 PM.png" alt="Screenshot 2025-09-07 at 4.32.20 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;6.2.2.2 Next step, let's review the time-triggered IFlow that kicks off the entire process. The first sequence in the flow is a 'timer' step. To keep things simple, it just triggers off upon deployment.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-07 at 4.59.43 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310707i0859AFEA787C1E7D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-07 at 4.59.43 PM.png" alt="Screenshot 2025-09-07 at 4.59.43 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.2.2.3. In the second step, we add a Groovy script that taps into the SecureStoreService API to read the &lt;EM&gt;Authorization Code&lt;/EM&gt; security material defined in the previous step. The script then exchanges the authorization code with the token endpoint to fetch a valid access token.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import com.sap.it.api.securestore.SecureStoreService
import com.sap.it.api.ITApiFactory

def Message processData(Message message) {
    
    // Name of your OAuth2 Authorization Code credential (as defined in Security Material)
    def credentialName = "auth-code-demo"

    // Get an instance of SecureStoreService
    def secureStoreService = ITApiFactory.getApi(SecureStoreService.class, null)

    if (secureStoreService == null) {
        throw new IllegalStateException("SecureStoreService not available")
    }

    // Fetch the access token
    def tokenResponse = secureStoreService.getAccesTokenForOauth2AuthorizationCodeCredential(credentialName)

    if (tokenResponse == null) {
        throw new IllegalStateException("Failed to retrieve access token for credential: ${credentialName}")
    }

    // Extract access token string
    def accessToken = tokenResponse.getAccessToken()

    // Optional: log for debug (mask in production!)
    //messageLogFactory.getMessageLog(message).addAttachmentAsString("OAuth2 Access Token", accessToken, "text/plain")

    // Store token in message header for downstream adapters
    message.setHeader("Authorization", "Bearer " + accessToken)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6.2.2.4 The third step in the sequence is to call the OData entity set through the &lt;EM&gt;intermediate&lt;/EM&gt; IFlow. Note that the authorization setting is explicitly configured as &lt;EM&gt;None&lt;/EM&gt;, since the bearer token is already applied in the preceding Groovy script step. Also, do note that the intermediate IFlow eventually calls the final IFlow, as we studied in step 4 of 6.2.1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-07 at 5.00.36 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310708i8E961EE95568703B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-07 at 5.00.36 PM.png" alt="Screenshot 2025-09-07 at 5.00.36 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.2.2.5 The final step in the sequence is to log the response returned after the &lt;EM&gt;final&lt;/EM&gt; IFlow executes, which is handled by a simple Groovy script.&lt;/P&gt;&lt;P&gt;6.2.2.6. After triggering the process, you can verify the outcome in the Message Processing Logs (MPL). You should see an entry in the &lt;EM&gt;Completed&lt;/EM&gt; state, with the Attachments section containing a text representation of the backend response.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":trophy:"&gt;🏆&lt;/span&gt;Congratulations on reaching this stage!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-05 at 4.50.04 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310762i0E817501ECDD4AA1/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-05 at 4.50.04 PM.png" alt="Screenshot 2025-09-05 at 4.50.04 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1831118391"&gt;Closing summary:&lt;/H2&gt;&lt;P&gt;In this blog, we explored how OAuth2 SAML Bearer assertion support in SAP Cloud Integration serves as a powerful mechanism for securing IFlows and APIs. By leveraging trust configurations, user propagation, and the integration of identity providers, we demonstrated how this grant type enables secure end-to-end flows while maintaining user context. Along the way, we also highlighted related patterns—such as the use of Authorization Code grant type in specific scenarios—and showed how these capabilities extend the flexibility of SAP Integration Suite when working with corporate identity providers and SAP Cloud Identity Services.&lt;/P&gt;&lt;P&gt;As integration landscapes continue to evolve, adopting OAuth2 SAML Bearer assertion not only strengthens security but also ensures compliance with modern identity federation standards. With the concepts and examples covered here, you now have a foundation to design flows that are both secure and user-aware—critical ingredients for enterprise-grade integrations.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/demystifying-the-oauth2-saml-bearer-assertion-usage-in-sap-integration/ba-p/14177915"/>
    <published>2025-09-08T05:34:05.936000+02:00</published>
  </entry>
</feed>
