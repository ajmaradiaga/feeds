<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Event-Mesh-blog-posts.xml</id>
  <title>SAP Community - SAP Event Mesh</title>
  <updated>2025-07-24T05:01:03.675352+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Event Mesh/pd-p/73554900100800000765" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Event Mesh blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-perform-initial-loads-from-s-4hana-to-advanced-event-mesh-with-odata/ba-p/14034749</id>
    <title>How to Perform Initial Loads from S/4HANA to Advanced Event Mesh with Odata Poll</title>
    <updated>2025-04-04T09:41:32.655000+02:00</updated>
    <author>
      <name>AlexPfeil</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165526</uri>
    </author>
    <content>&lt;P&gt;Since RAP does not have a Initial Load Feature, a simple Cloud Integration Flow is able to fetch the current Data of a System via Odata and pass it to AEM using the AEM Adapter.&lt;/P&gt;&lt;P&gt;Prerequisite is of course that the API is activated on the S/4HANA System.&lt;/P&gt;&lt;P&gt;This is how the Iflow looks like:&lt;/P&gt;&lt;P&gt; &lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/233424iB484B7442D3695DF/image-size/large?v=v2&amp;amp;px=999" role="button" title="1.png" alt="1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Since an Init Load only needs to run once, we set the Timer like this:&lt;BR /&gt; &lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/233425i5008ADCB9C457CE7/image-size/large?v=v2&amp;amp;px=999" role="button" title="2.png" alt="2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;We are calling the Local Integration Flow in a Loop (explained [here](&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blogs-by-members/sap-cloud-integration-looping-process-call/ba-p/13598555)because" target="_blank"&gt;https://community.sap.com/t5/enterprise-resource-planning-blogs-by-members/sap-cloud-integration-looping-process-call/ba-p/13598555)because&lt;/A&gt; it might be possible that there is so much data in the system that one call would return a too large Payload.&amp;nbsp;Using the EDMX File from the SAP Accelerator Hub (&lt;A href="https://api.sap.com/api/API_BUSINESS_PARTNER/resource/Business_Partner" target="_blank" rel="noopener noreferrer"&gt;https://api.sap.com/api/API_BUSINESS_PARTNER/resource/Business_Partner&lt;/A&gt;) the required fields can be selected in a wizard. Additionally we specify how many Records we want:&lt;BR /&gt; &lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_0-1741195384272.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/233439i537CF235F8CF24F7/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_0-1741195384272.png" alt="AlexPfeil_0-1741195384272.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Query Options:&lt;/P&gt;&lt;P&gt;$select=BusinessPartner,BusinessPartnerGrouping,FirstName,LastName,to_BusinessPartnerAddress/AddressID,to_BusinessPartnerAddress/ValidityStartDate,to_BusinessPartnerAddress/ValidityEndDate,to_BusinessPartnerAddress/StreetName,to_BusinessPartnerAddress/CityName,to_BusinessPartnerAddress/HouseNumber,to_BusinessPartnerAddress/PostalCode,to_BusinessPartnerAddress/Country&amp;amp;$expand=to_BusinessPartnerAddress&lt;/P&gt;&lt;P&gt;In the next Step we have a Splitter to create individual Events:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/233428iBC73EF12066B2A0D/image-size/large?v=v2&amp;amp;px=999" role="button" title="6.png" alt="6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Then we set the Grouping as Property, because we want to set the Topic dynamically&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_0-1743751626533.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/246679i5834B760A340AD01/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_0-1743751626533.png" alt="AlexPfeil_0-1743751626533.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Odata V2 also supports JSON, the Odata V2 Adapter does not. Alternatively you can use the HTTP adapter and build the query yourself. With XML as returned Payload we need a converter:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/233431iB97B1C76449D9ADB/image-size/large?v=v2&amp;amp;px=999" role="button" title="9.png" alt="9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Last Step: Set up the AEM Adapter. Important here is to use the Grouping Property for the dynamic Topic:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/233432iF08584D8A0607CD2/image-size/large?v=v2&amp;amp;px=999" role="button" title="10.png" alt="10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;Test: For Testing I have added a Consumer Iflow subscribing to Topic sap/businessPartner/&amp;gt; (for all Groupings)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/233433i274F24868C6586FD/image-size/large?v=v2&amp;amp;px=999" role="button" title="11.png" alt="11.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;One Example Message:&lt;BR /&gt;Headers&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/233434i3F37E8BF14FA3737/image-size/large?v=v2&amp;amp;px=999" role="button" title="12.png" alt="12.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Payload&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/233435iCDC65D59DBE34A32/image-size/large?v=v2&amp;amp;px=999" role="button" title="13.png" alt="13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If I change the BP manually, it should appear as well:&lt;/P&gt;&lt;P&gt;Changed the Address&lt;BR /&gt; &lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="14.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/233436iF3478A5E0E334256/image-size/large?v=v2&amp;amp;px=999" role="button" title="14.png" alt="14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;--&amp;gt; Result in AEM (This Changed Event is triggered by AIFAEM)  &lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="15.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/233437i73E5240DAE98B3D8/image-size/large?v=v2&amp;amp;px=999" role="button" title="15.png" alt="15.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;(on the left we see the Payload from the Init Load Iflow, only the order is different, which should be fine. It might be possible that the Odata Pull returns a different Payload than the Event pushed by the ERP. In this case you either need to add a Mapping on Integration Suite or design your Custom Event so it fits to the Odata Payload from the beginning.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Advantages:&lt;/P&gt;&lt;P&gt;- Clean Approach without any changes in the backend except activation of the Odata API&lt;/P&gt;&lt;P&gt;- Does not matter what Even Enablement is used on S/4HANA. Any Migration between Event Enablement Options does not affect this&lt;/P&gt;&lt;P&gt;Disadvantages:&lt;/P&gt;&lt;P&gt;- Payload has to be aligned with Event when the corresponding Object is changed (if the Init Load goes into the same Topic)&lt;/P&gt;&lt;P&gt;API has to be available, activated and one Iflow for it designed specifically.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-perform-initial-loads-from-s-4hana-to-advanced-event-mesh-with-odata/ba-p/14034749"/>
    <published>2025-04-04T09:41:32.655000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/implement-request-reply-integration-pattern-with-sap-advanced-event-mesh-in/ba-p/14074836</id>
    <title>Implement Request-Reply integration pattern with SAP Advanced Event Mesh in SAP UI5 and SAP CPI</title>
    <updated>2025-04-14T05:17:24.174000+02:00</updated>
    <author>
      <name>Deepankar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/130201</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1579235026"&gt;Introduction&lt;/H1&gt;&lt;P&gt;Synchronous systems often have a high probability of encountering errors due to the interdependency that exists between the participant systems. These types of interactions can be made resilient and error-proof by implementing the request-reply integration pattern. In this video, we will demonstrate how we can implement this pattern in SAPUI5 and SAP CPI with SAP Advanced Event Mesh.&lt;/P&gt;&lt;H1 id="toc-hId-1382721521"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-1186208016"&gt;Demonstration&lt;/H1&gt;&lt;P&gt;&lt;A title="Implementing Request-Reply messaging pattern in SAP Advanced Event Mesh (Solace PubSub+)" href="https://youtu.be/nNr9MeIKuAc?si=EolluNMGQ5A3bhW6" target="_self" rel="nofollow noopener noreferrer"&gt;https://youtu.be/nNr9MeIKuAc?si=EolluNMGQ5A3bhW6&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;GitHub Link for demo:&amp;nbsp;&lt;A href="https://github.com/deepankar-bhowmick/sap-aem-weather-demo.git" target="_self" rel="nofollow noopener noreferrer"&gt;https://github.com/deepankar-bhowmick/sap-aem-weather-demo.git&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/implement-request-reply-integration-pattern-with-sap-advanced-event-mesh-in/ba-p/14074836"/>
    <published>2025-04-14T05:17:24.174000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/blog-series-intitial-loads-to-sap-advanced-event-mesh/ba-p/14074847</id>
    <title>Blog Series - Intitial Loads to SAP Advanced Event Mesh</title>
    <updated>2025-04-14T06:34:57.975000+02:00</updated>
    <author>
      <name>AlexPfeil</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165526</uri>
    </author>
    <content>&lt;P&gt;In this blog series we focus on a Push Mechanism with the two Event Enabling Technologies&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;RAP (RESTful Application Programming Model):&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/sap-business-events-initial-loads-using-rap-events/ba-p/14065678" target="_self"&gt;SAP Business Events: Initial Loads using RAP Events&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;AIFAEM:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/how-to-perform-initial-loads-amp-bulk-init-loads-in-aifaem-triggered-by-an/ba-p/14027123" target="_self"&gt;How to perform Initial Loads &amp;amp; Bulk Init Loads in AIFAEM triggered by an ABAP Program&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;as well as a Pull Mechanism by using Odata APIs from SAP BTP Integration Suite:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/how-to-perform-initial-loads-from-s-4hana-to-advanced-event-mesh-with-odata/ba-p/14034749" target="_self"&gt;How to Perform Initial Loads from S/4HANA to Advanced Event Mesh with Odata Poll&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/blog-series-intitial-loads-to-sap-advanced-event-mesh/ba-p/14074847"/>
    <published>2025-04-14T06:34:57.975000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-business-events-initial-loads-using-rap-events/ba-p/14065678</id>
    <title>SAP Business Events: Initial Loads using RAP Events</title>
    <updated>2025-04-16T13:11:14.006000+02:00</updated>
    <author>
      <name>TimoMaier</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1485539</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1578339500"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;There are many different options to use for initial loads. One such options are events through an event broker like SAP Event Mesh or&amp;nbsp;&lt;SPAN&gt;SAP Integration Suite, advanced event mesh&lt;/SPAN&gt;. S/4HANA provides multiple different ways to produce such events. This blog will cover how initial loads can be done using RAP business events.&lt;/P&gt;&lt;H2 id="toc-hId-1510908714"&gt;Concept&lt;/H2&gt;&lt;P&gt;While S/4HANA provides many different standard business events out of the box, using them for initial loads is not advisable. The reason for this is that there can be a multitude of local event handlers that react to those standard events and produce unwanted side effects. To prevent these side effects dedicated initial load events should be used. That means that first a custom event has to be created and secondly an ABAP program has to be created that collects all of the required data and triggers each event.&lt;/P&gt;&lt;H2 id="toc-hId-1314395209"&gt;Creating the custom event&lt;/H2&gt;&lt;P&gt;To create a custom event the following blog can be referenced:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/rap-business-events-with-advanced-event-mesh-2-creating-custom-business/ba-p/13914171" target="_self"&gt;RAP Business Events with Advanced Event Mesh [2]: Creating custom business events&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Depending on the requirements the payload of the event can be adjusted within the abstract entity.&lt;/P&gt;&lt;P&gt;For this blog I'm using the following:&lt;/P&gt;&lt;P&gt;BO Data definition&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'BO for BP init load'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}

define root view entity Z_INITLOAD_Event_BP as select from I_BusinessPartner
{
    key BusinessPartner
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;BO Behaviour definition&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed with unmanaged save implementation in class zbp_initload_event_bp unique;
strict ( 2 );

define behavior for Z_INITLOAD_Event_BP //alias &amp;lt;alias_name&amp;gt;
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
    event BPCreatedInitLoad parameter Z_INITLOAD_EVENT_BP_PAYLOAD;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Payload:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Payload for BP init load'
define abstract entity Z_INITLOAD_EVENT_BP_PAYLOAD
{   
    BusinessPartnerCategory : abap.char(1);
    AuthorizationGroup : abap.char(4);
    BusinessPartnerUUID : abap.raw(16);
    PersonNumber : abap.char(10);
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Global Class:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zbp_initload_event_bp DEFINITION PUBLIC ABSTRACT FINAL FOR BEHAVIOR OF z_initload_event_bp.

    TYPES tt_events TYPE TABLE FOR EVENT z_initload_event_bp~BPCreatedInitLoad.

    PUBLIC SECTION.
        CLASS-METHODS raise_initload_create
            IMPORTING it_events TYPE tt_events.
ENDCLASS.

CLASS zbp_initload_event_bp IMPLEMENTATION.
    METHOD raise_initload_create.
        lcl_event_handler=&amp;gt;on_InitLoad_Create( it_events ).
    ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Local Class:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lcl_event_handler DEFINITION FRIENDS zbp_initload_event_bp.
  PUBLIC SECTION.
    CLASS-METHODS on_InitLoad_Create IMPORTING it_events TYPE zbp_initload_event_bp=&amp;gt;tt_events.
ENDCLASS.

CLASS lcl_event_handler IMPLEMENTATION.
   METHOD on_InitLoad_Create.

    RAISE ENTITY EVENT z_initload_event_bp~BPCreatedInitLoad FROM it_events.

   ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Event Binding:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="TimoMaier_0-1743699528199.png" style="width: 775px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/246495iCD972189CD80FA87/image-dimensions/775x208?v=v2" width="775" height="208" role="button" title="TimoMaier_0-1743699528199.png" alt="TimoMaier_0-1743699528199.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1117881704"&gt;Trigger Program&lt;/H2&gt;&lt;P&gt;For triggering events there is no Out-of-the-Box feature with RAP Events. Therefor we need a trigger program that can be run by the user and creates all of the events.&lt;/P&gt;&lt;P&gt;To trigger the initial load events you have to load the data of the event and then trigger the event with it. I'm using an ABAP Class for that.&lt;/P&gt;&lt;P&gt;So let's create that class. I named mine&amp;nbsp;&lt;EM&gt;Z_INITIAL_LOAD_BP.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Next lets add the code:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_initload_bp DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES if_oo_adt_classrun.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_initload_bp IMPLEMENTATION.
    METHOD if_oo_adt_classrun~main.

        SELECT
            FROM I_BusinessPartner
            FIELDS BusinessPartner, BusinessPartnerCategory, BusinessPartnerUUID, PersonNumber
            INTO TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(t_bupa).

        DATA counter TYPE i VALUE 0.

        LOOP AT t_bupa ASSIGNING FIELD-SYMBOL(&amp;lt;s_bupa&amp;gt;).

            DATA(et_events) = VALUE zbp_initload_event_bp=&amp;gt;tt_events(
                (
                    BusinessPartner = &amp;lt;s_bupa&amp;gt;-BusinessPartner
                    BusinessPartnerCategory = &amp;lt;s_bupa&amp;gt;-BusinessPartnerCategory
                    BusinessPartnerUUID = &amp;lt;s_bupa&amp;gt;-BusinessPartnerUUID
                    PersonNumber = &amp;lt;s_bupa&amp;gt;-PersonNumber
                )
            ).

            zbp_initload_event_bp=&amp;gt;raise_initload_create( it_events = et_events ).

            counter = counter + 1.

        ENDLOOP.

        out-&amp;gt;write( 'Initial load successfull!').
        out-&amp;gt;write( counter &amp;amp;&amp;amp; ' Events were created' ).
        commit work.
    ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This code loads the data, loops trough the table and triggers an event for each business partner. Since it is just plain ABAP coding additional logic can be introduced for example for filtering objects following certain conditions.&lt;/P&gt;&lt;P&gt;You can then execute this code directly from eclipse.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-business-events-initial-loads-using-rap-events/ba-p/14065678"/>
    <published>2025-04-16T13:11:14.006000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/enable-sap-developer-hub-as-central-event-catalog/ba-p/14076495</id>
    <title>Enable SAP Developer Hub as central Event Catalog</title>
    <updated>2025-04-17T12:34:57.927000+02:00</updated>
    <author>
      <name>FlorianOkos</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/5536</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1708373668"&gt;Introduction&lt;/H2&gt;&lt;P class=""&gt;In a world where &lt;STRONG&gt;event-driven architectures (EDA)&lt;/STRONG&gt; are gaining traction, enterprises need a central and consistent way to document, discover, and consume events. SAP is addressing this need with an exciting roadmap initiative: &lt;STRONG&gt;enabling the SAP Developer Hub to act as a central Event Catalog&lt;/STRONG&gt;.&lt;/P&gt;&lt;P class=""&gt;This blog will walk you through the motivation behind this feature, how it fits into SAP’s broader strategy, and what steps you can take to prepare. We'll also include some insights into the current capabilities and what’s coming next.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1511860163"&gt;Why a Central Event Catalog Matters&lt;/H2&gt;&lt;P class=""&gt;Managing asynchronous APIs and events across hybrid landscapes can quickly become complex. Having &lt;STRONG&gt;a unified developer experience&lt;/STRONG&gt;—where both REST APIs and events are discoverable in one place—simplifies onboarding and integration across teams.&lt;/P&gt;&lt;P class=""&gt;This aligns perfectly with SAP’s &lt;STRONG&gt;vision for a unified API consumption layer&lt;/STRONG&gt;, with the &lt;STRONG&gt;SAP Developer Hub&lt;/STRONG&gt; playing a central role.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1315346658"&gt;Roadmap Highlights&lt;/H2&gt;&lt;P class=""&gt;SAP has identified several key innovations in this space, as published in the &lt;STRONG&gt;SAP Roadmap Explorer&lt;/STRONG&gt;. Here are some of the most relevant items:&lt;/P&gt;&lt;H3 id="toc-hId-1247915872"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;STRONG&gt;Developer Hub: Event Catalog - Basic Discovery&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;&lt;A class="" href="https://roadmaps.sap.com/board?PRODUCT=000D3A47875C1EDB98A8A910864AC24B&amp;amp;range=CURRENT-LAST#;INNO=0D8AD41AB0071EDF9485CD0A7A3A09FA" target="_new" rel="noopener noreferrer"&gt;Link to roadmap item&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;SAP has enabled&amp;nbsp;&lt;STRONG&gt;basic discovery of events&lt;/STRONG&gt; directly via the Developer Hub. This allows developers to search, browse, and inspect event metadata just like they would with REST APIs.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1051402367"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&amp;nbsp;&lt;STRONG&gt;Expose Event Definitions via API Business Hub&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;&lt;A class="" href="https://roadmaps.sap.com/board?PRODUCT=000D3A47875C1EDB98A8A910864AC24B&amp;amp;range=CURRENT-LAST#;INNO=9B7F98BCB5891EEFA78945460151130E" target="_new" rel="noopener noreferrer"&gt;Link to roadmap item&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;This has enabled &lt;STRONG&gt;event definitions available in a reusable and standardized format&lt;/STRONG&gt;, ensuring that producers and consumers can align on payload structures, topics, and semantics.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-854888862"&gt;&lt;span class="lia-unicode-emoji" title=":soon_arrow:"&gt;🔜&lt;/span&gt;&lt;STRONG&gt;Enhanced Event Metadata&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;&lt;A class="" href="https://roadmaps.sap.com/board?PRODUCT=000D3A47875C1EDB98A8A910864AC24B&amp;amp;range=CURRENT-LAST#;INNO=F586EF4391F81EDFBECE105CCBF70063" target="_new" rel="noopener noreferrer"&gt;Link to roadmap item&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;SAP plans to enhance event metadata support, offering more insights into &lt;STRONG&gt;event types, versions, and schemas&lt;/STRONG&gt;. This will enrich the Event Catalog experience and further empower developers working in event-driven scenarios.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-529292638"&gt;How does it look like: Event Catalog in Developer Hub&lt;/H2&gt;&lt;P&gt;Let's do it &lt;STRONG&gt;based on one example Event&lt;/STRONG&gt; from&amp;nbsp;&lt;SPAN&gt;SAP Integration Suite, advanced event mesh to Developer Hub.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Download AsyncAPI&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;In&amp;nbsp;&lt;SPAN&gt;SAP Integration Suite, advanced event mesh&lt;/SPAN&gt; navigate to Designer &amp;gt; API Product &amp;gt; Event &amp;gt; Download AsyncAPI&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Donwload AsyncAPI.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/251255iF93F0910DDBC040B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Donwload AsyncAPI.png" alt="Donwload AsyncAPI.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Create Event Product&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;In SAP Developer Hub navigate to Admin Center &amp;gt; Content &amp;gt; Products &amp;gt; Add Event &amp;gt; Publish&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="UploadEvent.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/251272iE2D496110B506EF7/image-size/large?v=v2&amp;amp;px=999" role="button" title="UploadEvent.png" alt="UploadEvent.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Discovery SAP Events from&amp;nbsp;&lt;SPAN&gt;SAP Integration Suite, advanced event mesh in Developer Hub&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;In SAP Developer search/navigate to your Event&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="CatalogView.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/251278i30538C7C5245C739/image-size/large?v=v2&amp;amp;px=999" role="button" title="CatalogView.png" alt="CatalogView.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-332779133"&gt;Conclusion&lt;/H2&gt;&lt;P class=""&gt;The introduction of an &lt;STRONG&gt;Event Catalog in the Developer Hub&lt;/STRONG&gt; is a major step forward in enabling &lt;STRONG&gt;event-driven, loosely coupled architectures&lt;/STRONG&gt; in the SAP ecosystem.&lt;/P&gt;&lt;P class=""&gt;If you're working with events today—or plan to—this is the right time to explore the feature, start aligning your assets, and get ready to expose your events to the wider enterprise.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt;&lt;EM&gt;Don't forget to check the roadmap links above for the latest delivery timelines and feature details.&lt;/EM&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/enable-sap-developer-hub-as-central-event-catalog/ba-p/14076495"/>
    <published>2025-04-17T12:34:57.927000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/filtering-of-rap-business-events-in-sap-btp-abap-environment-and-in-sap/ba-p/14075529</id>
    <title>Filtering of RAP Business Events in SAP BTP ABAP Environment and in SAP Advanced Event Mesh</title>
    <updated>2025-04-23T13:18:38.307000+02:00</updated>
    <author>
      <name>SafaBahoosh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/763514</uri>
    </author>
    <content>&lt;P&gt;In this blog post, I show you how you can do source side filtering of events in SAP BTP ABAP environment, what Dynamic Topics are and how we can use them for routing and filtering of events in SAP Integration Suite Advanced Event Mesh.&lt;BR /&gt;Here, I represent two different ways of filtering of RAP business events in SAP BTP ABAP environment. On the left-hand side, you can see the SAP BTP ABAP environment system that produces some RAP business events. These events are then sent as CloudEvents to the right-hand side, to the Advanced Event Mesh instance.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter1.jpg" style="width: 567px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250484iF3EFDE1B468425A6/image-dimensions/567x321?v=v2" width="567" height="321" role="button" title="filter1.jpg" alt="filter1.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the first part, we discuss&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_CLOUD/0f69f8fb28ac4bf48d2b57b9637e81fa/fa8bf5e202234a2cae60d5560f92111d.html?&amp;amp;state=DRAFT" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Source Side Filtering&lt;/STRONG&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;of events which is available from release 2402 in SAP S/4HANA Cloud and SAP BTP ABAP environment and in SAP S/4HANA and SAP S/4HANA &amp;nbsp;Cloud Private Edition since release 2023 SP00. For a RAP business event, then you can define filterable properties from the actual payload of that event. This means, if there's a field called for example “country code”, you can make it filterable by exposing it as CloudEvents context attribute. Then you can define filter conditions as well, like the country code must match the amount&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;US&lt;/EM&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;or&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;DE.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/EM&gt;&amp;nbsp;If this filter condition is not met, then the event is not sent out of the system. If you want to prevent some events to go out due to the data privacy protection issues or reduce traffic due to unnecessary events, then you can use event filtering.&lt;/P&gt;&lt;P&gt;&amp;nbsp;In the second part, we discuss&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_CLOUD/0f69f8fb28ac4bf48d2b57b9637e81fa/bc8e4abf72494e4b9c5c27cd5a7fdf5b.html?&amp;amp;state=DRAFT" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Dynamic Topic Filtering&lt;/STRONG&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and routing of events with the integration with the Advanced Event Mesh. As a further remark, this feature is available from release 2408 in SAP S/4HANA Cloud Public Edition and SAP BTP ABAP environment and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;in&amp;nbsp;&lt;/SPAN&gt;SAP S/4HANA and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;SAP S/4HANA Cloud Private Edition since release 2023 SP02.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1708344625"&gt;&lt;STRONG&gt;Source side filtering of RAP business events&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Assume you are in your BTP ABAP environment system, and you have a RAP business event. This RAP business event has a corresponding abstract entity where you define your actual payload. Let's say you have a payload that contains a field “country code”:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter2.jpg" style="width: 383px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250485iF5782AE691AAD30D/image-dimensions/383x172?v=v2" width="383" height="172" role="button" title="filter2.jpg" alt="filter2.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This is a payload of a RAP business event without predefined filters. In the data part, the country code has the value DE and in the upper part you can see the header fields of the CloudEvent.&lt;BR /&gt;You want to know how you can make this property filterable? quite easy! As you define the event, you need to add the annotation “@Event.context.attribute” before the field you want to use as a filter and then give it a name like “x&lt;EM&gt;sapcountrycode&lt;/EM&gt;” for example:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;.context. attribute:'xsapcountrycode'
  CountryCode: abap.char(2);&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Then, during the runtime, the country code value “DE” is exposed inside the CloudEvent Context as an additional attribute with the name you have defined as the value of the annotation explained above:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter3.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250491iFD7B0B6962AE1D43/image-size/large?v=v2&amp;amp;px=999" role="button" title="filter3.jpg" alt="filter3.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;With that the payload field ‘CountryCode’ becomes a new filter attribute. &amp;nbsp;the source side filtering is available for every event infrastructure that we currently support. However, there are some restrictions which must be considered, for example not all properties are allowed for exposing in header, e.g., amount fields or cf. annotation, more information can be found in&amp;nbsp;Maintain Filters for Outbound Event Topics | SAP Help Portal&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/event-annotations" target="_blank" rel="noopener noreferrer"&gt;Event Annotations | SAP Help Portal&lt;/A&gt;&lt;/SPAN&gt;. This &lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/3343266" target="_blank" rel="noopener noreferrer"&gt;SAP Note&lt;/A&gt;&lt;/SPAN&gt; describes in more detail what must be considered when creating filters and which restrictions apply.&lt;/P&gt;&lt;P&gt;The next step would be going to filter configuration UI and there you can select all the filterable fields like &lt;EM&gt;xsapcountrycode&lt;/EM&gt; and define filter conditions like ‘eq ‘DE’ ’. You can also define filters containing multiple fields and add additional filter conditions for those fields.&lt;/P&gt;&lt;P&gt;&amp;nbsp;Let’s look at the runtime, for example if you have an event with country code “DE”, this would be published because it would match the filter condition we already defined. Whereas if you have an event with country code “US”, this does not match the filter condition and would therefore be filtered out. This means if you want to prevent events from going out, for example due to data privacy protection or any other reason, then you can define corresponding filter conditions.&lt;/P&gt;&lt;H3 id="toc-hId-1640913839"&gt;&lt;STRONG&gt;Define source side filters in your application &lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;I already build a very simple application, an online shop as it is described in this &lt;SPAN&gt;&lt;A href="https://developers-qa-blue.wcms-nonprod.c.eu-de-2.cloud.sap/tutorials/abap-environment-create-rap-business-events.html" target="_blank" rel="noopener nofollow noreferrer"&gt;tutorial&lt;/A&gt;&lt;/SPAN&gt;. I added the field country code as well to use it later as a filter, so when I create a new item, I can assign a country code for the country I want to ship the item to.&lt;/P&gt;&lt;P&gt;&amp;nbsp;Now, we want to make sure that only events created for items that are shipped to “DE” are also published to the event exchange infrastructure. I create the event that should be raised whenever an item is created and the parameter or the fields that should be in this event are defined in this abstract entity and it looks like this:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Event parameter'
define abstract entity ZD_ItemOrdered_0000 {
    ItemName : abap.char(25);
@Event.context. attribute:'xsapcountrycode'
  CountryCode: abap.char(2);
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;To make this event filterable, I just add this simple annotation “@Event.context.attribute” and I call it &lt;EM&gt;xsapcountrycode&lt;/EM&gt;. when I activate this entity, for all events that are raised in this system, the field “CountryCode” is propagated into the Cloud Event context and contains the values that is in the payload. As a next step, we must define the filter criteria for the given event channel as well.&amp;nbsp;&lt;/P&gt;&lt;P&gt;After creating your communication arrangement, go to “Configure Channel Binding” application to configure the related channel and add your outbound topic which is created during event binding creation as is explained in the &lt;SPAN&gt;&lt;A href="https://developers-qa-blue.wcms-nonprod.c.eu-de-2.cloud.sap/tutorials/abap-environment-create-rap-business-events.html" target="_blank" rel="noopener nofollow noreferrer"&gt;tutorial&lt;/A&gt;&lt;/SPAN&gt;. &amp;nbsp;As you see, there is no event filters defined yet. Keep in mind that you can only add filters to the existing&amp;nbsp;outbound&amp;nbsp;bindings.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter4.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250493i8464E4A6DBF3D134/image-size/large?v=v2&amp;amp;px=999" role="button" title="filter4.jpg" alt="filter4.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can see here we have an outbound topic which is the event from the application. Now I want to define the filter. You can create filters on each topic individually by clicking on it. Then in event filter tab, click on ‘Create’ and choose the filter property. By clicking on “Create” the filter will be generated successfully.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt; All defined filters are displayed under &lt;STRONG&gt;Event Filter Expression.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter5.jpg" style="width: 530px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250494iE70E708892B36FFD/image-dimensions/530x325?v=v2" width="530" height="325" role="button" title="filter5.jpg" alt="filter5.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;We can head back to the channel and see that there is event filters configured:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter6.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250496iB7E8D217ADC201BF/image-size/large?v=v2&amp;amp;px=999" role="button" title="filter6.jpg" alt="filter6.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now let’s try to see if the filter works properly. For that, we will use our event monitor application which is a tool where you can monitor the status of your in/outbound events. First, you can see there are no events on this channel, we want to change that now.&lt;/P&gt;&lt;P&gt;&amp;nbsp;I go into my Fiori application and press “Create” to create an order, a laptop for example, and I want to send that to Germany (DE). If you remember, this will match our filter criteria and therefore it would be sent out. An event can be monitored as expected, in the launchpad open the application “Enterprise Event Enablement-Event Monitor”, you can see an event reach your channel:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter7.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250497i08E7CAFACC5900FA/image-size/large?v=v2&amp;amp;px=999" role="button" title="filter7.jpg" alt="filter7.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If we look at the payload, we see the country code “DE” in the header as well&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter8.jpg" style="width: 424px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250498i71F6FD4A4B34F936/image-dimensions/424x401?v=v2" width="424" height="401" role="button" title="filter8.jpg" alt="filter8.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now to check if this filter works, I want to create another object in here, let's say I want to ship a tablet to Spain. I create this order and head back to our Event Monitor application. You can see the number of events hasn't changed, so the event with country code “ES” did not match our filter criteria and therefore was filtered. Note that you cannot monitor or log events that are filtered out. Such event behaves as if the event was never raised!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter9.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250500i9017FFFE1BAD6DE6/image-size/large?v=v2&amp;amp;px=999" role="button" title="filter9.jpg" alt="filter9.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1315317615"&gt;&lt;STRONG&gt;Dynamic topic filtering in Advanced Event Mesh&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Dynamic Topics enable detailed event filtering and routing, ensuring that events are delivered only to the relevant components, improving efficiency and reducing unnecessary processing. The feature of Dynamic Topics is only available for channels integrating with the Advanced Event Mesh (AEM). For more information regarding AEM, please follow &lt;SPAN&gt;&lt;A href="https://help.pubsub.em.services.cloud.sap/Get-Started/get-started-lp.htm" target="_blank" rel="noopener nofollow noreferrer"&gt;Get Started with SAP Integration Suite, Advanced Event Mesh&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;Imagine you have your RAP business event in BTP ABAP environment system, with the same abstract entity, that represents the actual event payload with the country code field. Similarly, you must add an additional annotation to enable Dynamic Topic or to enable that the country code is added as an additional segment to the Dynamic Topic. The first part of the annotation is the same; we have the event context attribute and then we give it a name, and additionally, you also need to define a position. This is because you could have multiple Dynamic Topic segments, and we need to know at which position each one should be put, so you can order them in the way you need them.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;.context:{attribute:'xsapcountrycode',position: 1}
  CountryCode: abap.char(2);&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;As you see below, the country code is exposed to the header part, but the difference is, you can see at the end of the standard topic the value of the country code field is added as well. Since you could define multiple properties, the position is so important to be added to the Dynamic Topic because we need to know at which position after the standard topic, the Dynamic Topic segment for the given property should be added&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture2.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/254068iED9D9CBC2723375F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture2.jpg" alt="Picture2.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Besides, we want to use this field for routing and filtering the events in Advanced Event Mesh and for that, you also need to know the exact location of the specific property you want to use as a filter.&lt;/P&gt;&lt;P&gt;This is already everything you must do in BTP ABAP environment for your RAP business event.&amp;nbsp; Assume you want to have two filters, one for the country code “DE” and the other one for the country code “US”. For that, you must define two queues in your Advanced Event Mesh.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter11.jpg" style="width: 612px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250502i4DBA362A0F7DD276/image-dimensions/612x126?v=v2" width="612" height="126" role="button" title="filter11.jpg" alt="filter11.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let's say for example in the “US” queue you only want to have events of the country code “US”. Then, you define this topic subscription accordingly and you need to do the same thing for the second queue where you want to receive the events with the country code “DE”.&lt;/P&gt;&lt;P&gt;Now I will show you how to route your events in practice. I have reverted all the changes I've made to enable source side filtering, so there is no event filters defined. Now we want to send out all the events and then put them into different queues depending on their properties. As it is explained before, this is how our abstract entity must look like:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Event parameter'
define abstract entity ZD_ItemOrdered_0000 {
    ItemName : abap.char(25);
@Event.context:{attribute:'xsapcountrycode',position: 1}
  CountryCode: abap.char(2);
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Create a channel for the integration with AEM, either by using the SAP GUI transaction in SAP S/4HANA, SAP S/4HANA Cloud Private Edition or respective communication arrangements in SAP S/4HANA Cloud Public Edition or SAP BTP ABAP Environment (as described &lt;A href="https://help.pubsub.em.services.cloud.sap/Get-Started/get-started-lp.htm" target="_blank" rel="noopener nofollow noreferrer"&gt;Get Started with SAP Integration Suite, Advanced Event Mesh&lt;/A&gt;). You can enable Dynamic Topics by using the button “Enable Dynamic Topics” which is only enabled for Advanced Event Mesh channels. By clicking on this button and enabling the Dynamic Topics, you can see that something has changed, namely the topic now contains this Dynamic Topic segment “xsapcountrycode”&lt;EM&gt;:&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter12.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250504i5FA733018749D102/image-size/large?v=v2&amp;amp;px=999" role="button" title="filter12.jpg" alt="filter12.jpg" /&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Now I go to the connected Advanced Event Mesh broker and configure two queues, one for country code “DE” and another one for “US”:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter13.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250505iB222F401F7CA4484/image-size/large?v=v2&amp;amp;px=999" role="button" title="filter13.jpg" alt="filter13.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In subscriptions section of “DE” queue for example, you can see the topic we have for “DE” country code&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter14a.jpg" style="width: 732px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/254069i39E54891242B2CF3/image-dimensions/732x149?v=v2" width="732" height="149" role="button" title="filter14a.jpg" alt="filter14a.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;and for the “US” it's comparable. That's everything that needs to be done to route events.&lt;/P&gt;&lt;P&gt;&amp;nbsp;Let's create a new order to be shipped to “US”. &amp;nbsp;Then in our event monitor application, there is an event here and you can see also the outbound event tab has changed to signify this topic schema, so you know there are Dynamic Topics in place.&lt;/P&gt;&lt;P&gt;If we look at this event, we can see the Dynamic Topic segment is indeed “US” and if we check the payload, it's the same as before, we have our &lt;EM&gt;xsapcountrycode &lt;/EM&gt;which is lifted to the header and the country code in there:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter14.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250511iADB064015EA35641/image-size/large?v=v2&amp;amp;px=999" role="button" title="filter14.jpg" alt="filter14.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now let's look at our queues and you can see one message has reached the US queue:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="filter15.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250512iE79284EDB5B91E03/image-size/large?v=v2&amp;amp;px=999" role="button" title="filter15.jpg" alt="filter15.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;With that, you have a simple but powerful routing tool for your events.&lt;/P&gt;&lt;H2 id="toc-hId-1118804110"&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Here I shortly presented the newly developed possibilities of event filtering and routing for ABAP Cloud. Source side filtering prevents events from being published &amp;nbsp;based on the filters we define using the payload fields which are exposed to the CloudEvent context. This can be used to satisfy data privacy and protection restrictions or also in case you wanted to distribute the load among different connections.&lt;/P&gt;&lt;P&gt;&amp;nbsp;By means of the Dynamic Topic feature we are now able to route and filter the events in Advanced Event Mesh broker. Both features are already available in the current SAP S/4HANA Cloud Public Edition, SAP S/4HANA, &amp;nbsp;SAP S/4 HANA &amp;nbsp;Cloud Private Edition as well as SAP BTP ABAP environment releases.&lt;/P&gt;&lt;P&gt;In the near future, the customer should also able to choose any valid payload fields of the given RAP event type as an event filter attribute without using annotation “@Event.context.attribute”.&amp;nbsp; Please follow the &lt;SPAN&gt;&lt;A href="https://pages.community.sap.com/topics/abap-connectivity" target="_blank" rel="noopener noreferrer"&gt;community page&lt;/A&gt;&lt;/SPAN&gt; to get informed regarding updates in Enterprise Event Enablement content.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/filtering-of-rap-business-events-in-sap-btp-abap-environment-and-in-sap/ba-p/14075529"/>
    <published>2025-04-23T13:18:38.307000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-april-24th-2025/ba-p/14085506</id>
    <title>SAP Developer News April 24th, 2025</title>
    <updated>2025-04-24T21:10:00.107000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1838350800"&gt;&lt;STRONG&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F9YcPBZZpw6E%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D9YcPBZZpw6E&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F9YcPBZZpw6E%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="SAP Build, New Basic Trial for Enterprise Automation, Event Mesh Bridge | for SAP Developer News" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1641837295"&gt;&lt;STRONG&gt;DESCRIPTION&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;PODCAST: &lt;A href="https://podcast.opensap.info/sap-developers/2025/04/24/sap-developer-news-april-24th-2025/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://podcast.opensap.info/sap-developers/2025/04/24/sap-developer-news-april-24th-2025/&lt;/A&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Build news&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Build included with SAP S/4HANA Cloud &lt;SPAN&gt;&lt;A href="https://news.sap.com/2025/04/sap-build-sap-s4hana-cloud-simplify-development/" target="_blank" rel="noopener noreferrer"&gt;https://news.sap.com/2025/04/sap-build-sap-s4hana-cloud-simplify-development/&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;SAP Cloud ERP Private Package Accelerates Transformation &lt;SPAN&gt;&lt;A href="https://news.sap.com/2025/04/sap-cloud-erp-private-package-accelerate-transformation/" target="_blank" rel="noopener noreferrer"&gt;https://news.sap.com/2025/04/sap-cloud-erp-private-package-accelerate-transformation/&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Introducing the New Project Creation Wizard within SAP Build Lobby &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/introducing-the-new-project-creation-wizard-within-sap-build-lobby/ba-p/14079038" target="_blank"&gt;https://community.sap.com/t5/application-development-and-automation-blog-posts/introducing-the-new-project-creation-wizard-within-sap-build-lobby/ba-p/14079038&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;New Basic Trial available&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Blog post &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/new-basic-trial-available-get-your-hands-on-enterprise-automation-with-sap/ba-p/14075170" target="_blank"&gt;https://community.sap.com/t5/application-development-and-automation-blog-posts/new-basic-trial-available-get-your-hands-on-enterprise-automation-with-sap/ba-p/14075170&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Basic trial &lt;A href="https://www.sap.com/products/try-sap.html" target="_blank" rel="noopener noreferrer"&gt;https://www.sap.com/products/try-sap.html&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Event Mesh bridge and Developer Hub&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Event Mesh bridge in SAP Integration Suite: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/event-mesh-bridge-in-sap-integration/ba-p/14076056" target="_blank"&gt;https://community.sap.com/t5/technology-blogs-by-sap/event-mesh-bridge-in-sap-integration/ba-p/14076056&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Activating Event Mesh bridge: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/activating-event-mesh-bridge" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/integration-suite/sap-integration-suite/activating-event-mesh-bridge&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Enable SAP Developer Hub as central Event Catalog: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/integration-blog-posts/enable-sap-developer-hub-as-central-event-catalog/ba-p/14076495" target="_blank"&gt;https://community.sap.com/t5/integration-blog-posts/enable-sap-developer-hub-as-central-event-catalog/ba-p/14076495&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1445323790"&gt;&lt;STRONG&gt;CHAPTER TITLES&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;0:00 Intro&lt;/P&gt;&lt;P&gt;0:10 SAP Build news&lt;/P&gt;&lt;P&gt;2:22 New Basic Trial available&lt;/P&gt;&lt;P&gt;4:52 Event Mesh bridge and Developer Hub&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1248810285"&gt;&lt;STRONG&gt;TRANSCRIPTION&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Into]&lt;/STRONG&gt; This is the SAP Developer News for April 24th, 2025.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[DJ]&lt;/STRONG&gt;&amp;nbsp;In the early days of SAP R2, key developer tools were separate from the core ERP offering. When we moved to the client-server architecture of SAP R3, the key tools were built-in, part of the experience. Well, today with SAP S4 HANA Cloud, there's a return to batteries included approach because all SAP build capabilities are now included. This means that core SAP facilities for extending and personalizing SAP S4 HANA Cloud systems are right there for customers to use. Apart from a lower TCO and a simpler license model. It's basically the right tools for building extensions and integrations and ready-made content, Joule capabilities and more. It's all there from the get-go. What's more, SAP HANA Cloud is also included. Plus, you can check out all the details in the article linked in the description. By the way, this bundling is also included with SAP cloud ERP private packages and there's another article linked in the description that has more details on that and while i'm here talking about sap build there's a new project creation wizard in the sap build lobby this wizard has been redesigned based upon user research including interviews with different user groups the new design has basically a sort of a new intense based navigation rather than focusing on what tools you want to use it focuses on what you want to build it's got an updated user experience and also the categories the project categories have been reorganized to make things hopefully easier for you and the feedback doesn't stop because there's a feedback facility in the top right that you can use to send your feedback on this new wizard. So happy building and send feedback if you need to.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Thomas]&lt;/STRONG&gt; In this new segment, I'd like to tell you about the new Enterprise Automation Basic Trial. But first, a few words about what is the basic trial, particularly in the context of SAP BTP. So we have two types of trials available for SAP BTP. We have the basic trial and we have the advanced trial. Now, the advanced trial is essentially the BTP trial that you've had access to for several years now. It takes your existing SAP user account and grants it access to its own global and sub-account in SAP BTP. There you have administrative rights and the ability to set up and use many different services and capabilities of SAP PTP. You have full access to that account and can explore many different scenarios. The basic trial, by comparison, we grant you access to an existing environment. So you don't have to wait for a new environment to be provisioned and spin up and configured. You get immediate access and it isn't tied to your existing user account you're given a unique username and password with which to log in now when you access this basic trial environment it's pre-configured and set up for whatever scenario you're accessing and there's a limited number of scenarios so far but the beauty of it is that you get immediate access and certain things are pre-configured and ready for you to use. So if you're looking to try out a new capability in the easiest way possible, then the basic trial is a great way to get started. But on the other hand, if you want to dive deep and really explore a capability, the advanced trial is a better option. Now back to today's topic, which is the new enterprise automation basic trial. And this focuses on the enterprise automation scenario and includes capabilities like SAP BTP integration suite, Signavio, and SAP build business process automation. And you get all those tools and capabilities pre-configured in that environment. So if this is something that you want to explore, particularly how these different capabilities interact and work with one another, then check out this new basic trial. All the links and information are in the description below.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Antonio&lt;/STRONG&gt;] Hola, SAP Developers! So you've embraced event-driven architectures, and you're using the Event Mesh capability in SAP Integration Suite, but you're experiencing a large volume of events, and now you're looking at adopting Advanced Event Mesh to scale your event-driven architecture practice? Well, did you know that it is now possible to connect the broker part of the Event Mesh capability with your instance of Advanced Event Mesh? This is called the Event Mesh Bridge. You just configure the details of an AEM broker in the Event Mesh Bridge and set the topics that you're interested in forwarding. An AEM will start receiving all those events. Awesome, isn't it? Well, but with all those events going around in your landscape, it'll be great to have a central place to document them all, right? Fortunately, you can do this within SAP Integration Suite also. via the Developer Hub, which is part of the API management capability. You can import an async API specification, add them to a product, and make them publicly available to the developers in your organization. Check out Florian's blog post for more details. Ciao&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-april-24th-2025/ba-p/14085506"/>
    <published>2025-04-24T21:10:00.107000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/monitoring-events-in-cap-with-the-cds-event-monitoring-plugin/ba-p/14094152</id>
    <title>Monitoring Events in CAP with the CDS Event Monitoring Plugin</title>
    <updated>2025-05-06T13:28:46.886000+02:00</updated>
    <author>
      <name>arminhatting</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/40753</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1710158118"&gt;Introduction&lt;/H2&gt;&lt;P&gt;In event-driven applications built with SAP CAP, it’s often necessary to track and manage the flow of events across various topics. The &lt;STRONG&gt;CDS Event Monitoring Plugin&lt;/STRONG&gt; provides a practical solution for recording, viewing, and retrying events. It integrates directly with CAP projects, storing event data in a CDS entity and exposing it via a service that can be customized as needed.&lt;/P&gt;&lt;P&gt;This post gives an overview of what the plugin does, how to set it up, and how to extend it for specific requirements.&lt;/P&gt;&lt;P&gt;Link:&amp;nbsp;&lt;A href="https://www.npmjs.com/package/cds-event-monitoring?activeTab=readme" target="_self" rel="nofollow noopener noreferrer"&gt;cds-event-monitoring&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1642727332"&gt;Features&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Monitors multiple messaging topics&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Stores event payloads in a CDS entity (customizable)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Provides a CDS service (EventMonitoringService) with actions for resending messages&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Supports dead-message queue (DMQ) monitoring&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Includes optional event filtering and retention settings&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1317131108"&gt;Installation&lt;/H2&gt;&lt;P&gt;To install the plugin, run:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm add cds-event-monitoring&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Then, configure it in your .cdsrc.json or package.json under the cds.requires section:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;"cds": {
  "requires": {
    "event-monitoring": {
      "retentionInDays": 7,
      "topics": ["my/namespace/topic"],
      "dead-message-queues": ["my/namespace/dmq"]
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Configuration Options:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Option&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Type&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;topics&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Array of Strings&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;List of messaging topics to monitor&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="85px"&gt;retentionInDays&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="85px"&gt;Integer&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="85px"&gt;Retains event data for the given number of days; deletion is triggered when new data arrives&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="57px"&gt;ignoreIdenticalEvents&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="57px"&gt;Boolean&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="57px"&gt;If true, repeated events with the same payload are ignored&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="57px"&gt;dead-message-queues&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="57px"&gt;Array of Strings&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="57px"&gt;Optional list of DMQs to consume and track&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-1120617603"&gt;Default Service&lt;/H2&gt;&lt;P&gt;The plugin provides a CDS service called EventMonitoringService. This exposes the stored events and allows users to resend them or push new messages to topics.&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;service EventMonitoringService {

  action resendAll(topic : String, startTimestamp : Timestamp, endTimestamp : Timestamp);
  action resendDeadMessageQueue(queue : String);
  action sendToTopic(topic : String, message : LargeString);

  entity Events as projection on EventData actions {
    action resend();
    action resendToTopic(topic : String);
  };

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;These actions make it easier to manually or programmatically manage event flow.&lt;/P&gt;&lt;H2 id="toc-hId-924104098"&gt;Extending the Service&lt;/H2&gt;&lt;P&gt;The service can be extended to include additional roles or logic. For example:&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;using {EventMonitoringService} from 'cds-event-monitoring/srv';

extend EventMonitoringService with @(requires: 'admin');&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;You can also override the service implementation in JavaScript or TypeScript:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const cds = require('@sap/cds');
const EventServiceHandler = require('cds-event-monitoring/srv');

module.exports = class EventServiceExt extends EventServiceHandler {
  async init() {
    const messaging = await cds.connect.to('messaging');

    // Extend messaging logic
    messaging.on('*', (msg) =&amp;gt; {
      const { data, event } = msg;
      console.log(data);
      console.log(event);
    });

    return super.init();
  }
};&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This allows you to inject custom behavior without modifying the plugin itself.&lt;/P&gt;&lt;H2 id="toc-hId-727590593"&gt;Database Extension&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;If you want to store specific fields in separate database columns (for example for searching purposes) you can do so, by extending the cds entity&amp;nbsp;&lt;/SPAN&gt;EventData&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;using { event.monitoring.EventData } from 'cds-event-monitoring/db';

extend EventData with {
  description : String;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;As long as the incoming event contains a matching field in the payload:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "data": {
    "description": "Sample description"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;…the new field will be filled automatically.&lt;/P&gt;&lt;H2 id="toc-hId-531077088"&gt;Fiori Annotations&lt;/H2&gt;&lt;P&gt;The plugin includes basic Fiori annotations for the Events entity. These can be used to build a monitoring UI using standard Fiori Elements. You can extend the service with additional Fiori Annotations. A working example is available in the testProject/app folder in the repository.&lt;/P&gt;&lt;H2 id="toc-hId-334563583"&gt;Final Thoughts&lt;/H2&gt;&lt;P&gt;If you're working with messaging in a CAP-based project, give the CDS Event Monitoring Plugin a try. It's straightforward to set up and can help you track and manage events more effectively during development and in production scenarios.&lt;/P&gt;&lt;P&gt;As the plugin is still at an early stage, I'm looking forward to improving it. If you run into any issues, have suggestions for improvement, or can think of a feature that would make your job easier, please open a bug or contribute directly via the GitHub repository.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/monitoring-events-in-cap-with-the-cds-event-monitoring-plugin/ba-p/14094152"/>
    <published>2025-05-06T13:28:46.886000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-send-custom-http-headers-in-aifaem/ba-p/14098050</id>
    <title>How to send Custom HTTP Headers in AIFAEM</title>
    <updated>2025-05-10T18:10:52.321000+02:00</updated>
    <author>
      <name>AlexPfeil</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165526</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1581193600"&gt;Introduction&lt;/H1&gt;&lt;P&gt;The AIFAEM AddOn provides a Framework to publish Events from ECC and S/4HANA Systems to AEM easily. I have explained it in one of my &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-set-up-enhanced-events-for-advanced-event-mesh-with-application/ba-p/13780160" target="_self"&gt;blogs&lt;/A&gt;. Unfortunately AIFAEM cannot send Custom HTTP headers to AEM without Custom Code. There are a couple of Solace-Specific Headers which can be used to add parameters or custom properties to the message, described here:&amp;nbsp;&lt;A href="https://docs.solace.com/API/RESTMessagingPrtl/Solace-REST-Message-Encoding.htm#solace-specific-http-headers" target="_blank" rel="nofollow noopener noreferrer"&gt;https://docs.solace.com/API/RESTMessagingPrtl/Solace-REST-Message-Encoding.htm#solace-specific-http-headers&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;With this blog, I want to show you how to add Custom HTTP Headers with a Custom AIFAEM Action.&lt;/P&gt;&lt;H1 id="toc-hId-1384680095"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-1188166590"&gt;Custom Development Objects&lt;/H1&gt;&lt;P&gt;For the Implementation of this you will need some Custom ABAP Objects. I have stored my Custom Objects here:&amp;nbsp;&lt;A href="https://github.com/alPfeil/AIFAEM/tree/main" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/alPfeil/AIFAEM/tree/main&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You will need&lt;/P&gt;&lt;P&gt;1) Structure Definition&amp;nbsp;&lt;A class="" title="zaif_aem_http_header" href="https://github.com/alPfeil/AIFAEM/blob/main/zaif_aem_http_header" target="_blank" rel="noopener nofollow noreferrer"&gt;zaif_aem_http_header&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;2) Table Type&amp;nbsp;ZAIF_AEM_HTTP_HEADERS&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_0-1746890448460.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259580i4C123B3F945D7DC5/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_0-1746890448460.png" alt="AlexPfeil_0-1746890448460.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2) Function Module&amp;nbsp;&lt;A class="" title="ZAIF_ACTION_CALL_AEM_CUSTOM" href="https://github.com/alPfeil/AIFAEM/blob/main/ZAIF_ACTION_CALL_AEM_CUSTOM" target="_blank" rel="noopener nofollow noreferrer"&gt;ZAIF_ACTION_CALL_AEM_CUSTOM&lt;/A&gt;&lt;/P&gt;&lt;H1 id="toc-hId-991653085"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-795139580"&gt;Customization&lt;/H1&gt;&lt;P&gt;Assuming you already have set up an AIFAEM Interface, you will only need to do the following:&lt;/P&gt;&lt;H2 id="toc-hId-727708794"&gt;Custom Action Definition&lt;/H2&gt;&lt;P&gt;In /N/AIF/CUST -&amp;gt; Interface Development -&amp;gt; Define Action you´ll need to create a new Action&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_0-1746888611708.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259564iCA82D6DAF1B2347F/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_0-1746888611708.png" alt="AlexPfeil_0-1746888611708.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-531195289"&gt;Custom Action Assignment&lt;/H2&gt;&lt;P&gt;In /N/AIF/CUST -&amp;gt; Interface Development -&amp;gt; Define Structure Mapping you´ll need to assign the Custom Action instead of the Standard Action&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_4-1746890915747.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259585iC9137788EB3E0D3E/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_4-1746890915747.png" alt="AlexPfeil_4-1746890915747.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now, if provided, the Custom Action will attach custom HTTP Headers to the Request to AEM. Next Step is to extend the existing Interface.&lt;/P&gt;&lt;H2 id="toc-hId-334681784"&gt;Mapping of the HTTP Headers&lt;/H2&gt;&lt;P&gt;Before the Mapping, the SAP Structure (Target Structure) needs to be enhanced (/N/AIF/CUST -&amp;gt; Define Interfaces)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_6-1746891043012.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259587i2CCCC50BD46C20EE/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_6-1746891043012.png" alt="AlexPfeil_6-1746891043012.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;How you fill up the Headers is up to you. I have added 2 more Structure Mappings:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_11-1746891429585.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259592iB1DB2EB415312303/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_11-1746891429585.png" alt="AlexPfeil_11-1746891429585.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Structure Mapping 40: Header Name is fixed. In order to add it as AEM Property we need the Prefix "Solace-User-Property-"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_7-1746891259380.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259588i8951163C6BD9DDE1/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_7-1746891259380.png" alt="AlexPfeil_7-1746891259380.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Header Value is dynamic (from the Target Structure, can be chosen by F4 Helpt -&amp;gt; Switch Structure):&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_8-1746891288158.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259589i6AFFD98419267910/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_8-1746891288158.png" alt="AlexPfeil_8-1746891288158.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Structure Mapping 50 is the same, except:&lt;/P&gt;&lt;P&gt;HeaderName =&amp;nbsp;Solace-User-Property-BusinessPartnerNumber&lt;/P&gt;&lt;P&gt;HeaderValiue =&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;-BUSINESSPARTNERTYPE-BUSINESSPARTNER&lt;/P&gt;&lt;H1 id="toc-hId-9085560"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId--187427945"&gt;Test&lt;/H1&gt;&lt;P&gt;Let´s change a BusinessPartner in Transaction BP now:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_13-1746892445134.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259596iED82D2512CEBB03F/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_13-1746892445134.png" alt="AlexPfeil_13-1746892445134.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In BTP integration Suite i have set up an Iflow to consume this the topic "sap/businessPartner/&amp;gt;". Here we can see the Headers:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_12-1746892428758.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259595i9B4191958C5AEB6D/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_12-1746892428758.png" alt="AlexPfeil_12-1746892428758.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-send-custom-http-headers-in-aifaem/ba-p/14098050"/>
    <published>2025-05-10T18:10:52.321000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-display-the-json-payload-in-aifaem/ba-p/14098028</id>
    <title>How to Display the JSON Payload in AIFAEM</title>
    <updated>2025-05-10T18:11:00.366000+02:00</updated>
    <author>
      <name>AlexPfeil</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165526</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1581193515"&gt;Introduction&lt;/H1&gt;&lt;P&gt;The AIFAEM AddOn provides a Framework to publish Events from ECC and S/4HANA Systems to AEM easily. I have explained it in one of my &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-set-up-enhanced-events-for-advanced-event-mesh-with-application/ba-p/13780160" target="_self"&gt;blogs&lt;/A&gt;. Unfortunately one feature is not included: Displaying the JSON Data sent out to AEM. With this blog, I want to show you how to extend your System to persist and display JSON Payloads from your AIFAEM Events.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1384680010"&gt;Custom Development Objects&lt;/H1&gt;&lt;P&gt;For the Implementation of this you will need some Custom ABAP Objects. I have stored my Custom Objects here:&amp;nbsp;&lt;A href="https://github.com/alPfeil/AIFAEM/tree/main" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/alPfeil/AIFAEM/tree/main&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You will need&amp;nbsp;&lt;/P&gt;&lt;P&gt;1) DB Table&amp;nbsp;&lt;A class="" title="zaifaem_json" href="https://github.com/alPfeil/AIFAEM/blob/main/zaifaem_json" target="_blank" rel="noopener nofollow noreferrer"&gt;zaifaem_json&lt;/A&gt;&lt;/P&gt;&lt;P&gt;This Table provides Persistence for the JSON Payloads.&lt;/P&gt;&lt;P&gt;2) Function Module&amp;nbsp;&lt;A class="" title="ZAIF_ACTION_CALL_AEM_CUSTOM" href="https://github.com/alPfeil/AIFAEM/blob/main/ZAIF_ACTION_CALL_AEM_CUSTOM" target="_blank" rel="noopener nofollow noreferrer"&gt;ZAIF_ACTION_CALL_AEM_CUSTOM&lt;/A&gt;&lt;/P&gt;&lt;P&gt;This Function Module is an extended Version of the Standard AIFAEM Action which will persist the Payload in&amp;nbsp;&lt;A class="" title="zaifaem_json" href="https://github.com/alPfeil/AIFAEM/blob/main/zaifaem_json" target="_blank" rel="noopener nofollow noreferrer"&gt;zaifaem_json&lt;/A&gt;&lt;/P&gt;&lt;P&gt;3) ABAP Report&amp;nbsp;&lt;A class="" title="ZAIF_AEM_DISPLAY_JSON" href="https://github.com/alPfeil/AIFAEM/blob/main/ZAIF_AEM_DISPLAY_JSON" target="_blank" rel="noopener nofollow noreferrer"&gt;ZAIF_AEM_DISPLAY_JSON&lt;/A&gt;&lt;/P&gt;&lt;P&gt;This ABAP Report selects the JSON Data from the DB Table and displays it as PopUp&lt;/P&gt;&lt;P&gt;4) Message Class &lt;A class="" title="ZAIF_AEM_MESSAGES" href="https://github.com/alPfeil/AIFAEM/blob/main/ZAIF_AEM_MESSAGES" target="_blank" rel="noopener nofollow noreferrer"&gt;ZAIF_AEM_MESSAGES&lt;/A&gt;&lt;/P&gt;&lt;P&gt;In this Message Class there is the Message which will provide the GUID to the UI for the Display Function.&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1188166505"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-991653000"&gt;Customization&lt;/H1&gt;&lt;P&gt;Assuming you already have set up an AIFAEM Interface, you will only need to do the following:&lt;/P&gt;&lt;H2 id="toc-hId-924222214"&gt;Custom Action Definition&lt;/H2&gt;&lt;P&gt;In /N/AIF/CUST -&amp;gt; Interface Development -&amp;gt; Define Action you´ll need to create a new Action&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_0-1746888611708.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259564iCA82D6DAF1B2347F/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_0-1746888611708.png" alt="AlexPfeil_0-1746888611708.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-727708709"&gt;Custom Action Assignment&lt;/H2&gt;&lt;P&gt;In /N/AIF/CUST -&amp;gt; Interface Development -&amp;gt; Define Structure Mapping you´ll need to assign the Custom Action instead of the Standard Action&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_1-1746888631874.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259565i20459B1B5B0EFE51/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_1-1746888631874.png" alt="AlexPfeil_1-1746888631874.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;With this Action, your Interface will now persist the Data into the DB Table&amp;nbsp;ZAIFAEM_JSON. Let´s test it.&lt;/P&gt;&lt;P&gt;Change of a Business Partner:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_2-1746888718357.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259566i8A101FC6945F8A62/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_2-1746888718357.png" alt="AlexPfeil_2-1746888718357.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;--&amp;gt; /N/AIF/ERR&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_3-1746888821253.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259568iA2541C132B2039E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_3-1746888821253.png" alt="AlexPfeil_3-1746888821253.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In SE16N we can see the JSON:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_4-1746888978666.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259570i14766DCA63709AAD/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_4-1746888978666.png" alt="AlexPfeil_4-1746888978666.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In order to see it in AIF Error Monitoring we need a Custom Function.&lt;/P&gt;&lt;H2 id="toc-hId-531195204"&gt;Custom Function for Display&lt;/H2&gt;&lt;P&gt;In AIF Error Monitoring you can simply add Custom Functions here&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_5-1746889046586.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259571iD52D08785307803B/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_5-1746889046586.png" alt="AlexPfeil_5-1746889046586.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Just add the Report, the GUID Parameter and the Text + Icon. Also Skip Screen because the selection is done by the Message Paramter&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_7-1746889117934.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259573iE6E89ABC9AAC2AC1/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_7-1746889117934.png" alt="AlexPfeil_7-1746889117934.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now when clicking the button we can see the JSON:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_8-1746889154502.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259574i311C98DAC3210F98/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_8-1746889154502.png" alt="AlexPfeil_8-1746889154502.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Last Step: In order to make this Custom Function availiable for every User and Interface + add it to a transport, we need to open Transaction /N/AIF/CUST_FUNC&lt;/P&gt;&lt;P&gt;Here we can see how the set up looks like when done in Customizing:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_0-1746889641105.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259578i9A48B616E2B1A21E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AlexPfeil_0-1746889641105.png" alt="AlexPfeil_0-1746889641105.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;I recommend to change these 2 parameters:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_10-1746889267631.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259576i1115DF1F870063CD/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_10-1746889267631.png" alt="AlexPfeil_10-1746889267631.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Then the system should prompt you for a transport. If not, you can add it manually with Table View -&amp;gt; Transport. To make sure the System also takes the Parameter for P_GUID, please make a dummy change in "Define Parameter IDs and Values" and save.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_11-1746889365065.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259577iE174636C293671D5/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_11-1746889365065.png" alt="AlexPfeil_11-1746889365065.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Thats it! Happy Eventing &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-display-the-json-payload-in-aifaem/ba-p/14098028"/>
    <published>2025-05-10T18:11:00.366000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/bridging-advanced-event-mesh-and-kafka-dynamic-topics-and-headers-in-action/ba-p/14098091</id>
    <title>Bridging Advanced Event Mesh and Kafka: Dynamic Topics and Headers in Action</title>
    <updated>2025-05-10T19:05:48.085000+02:00</updated>
    <author>
      <name>AlexPfeil</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165526</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1581193725"&gt;Introduction&lt;/H1&gt;&lt;P&gt;In this &lt;A href="https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-connect-everything-featuring-kafka/ba-p/14050084?emcs_t=S2h8ZW1haWx8dG9waWNfc3Vic2NyaXB0aW9ufE04VDgzMVJLOUMyMU9YfDE0MDUwMDg0fFNVQlNDUklQVElPTlN8aEs" target="_self"&gt;Blog&lt;/A&gt; by Florian the Connectivity between SAP AEM and Kafka is explained. There, in the first step, we have 2 connections&lt;/P&gt;&lt;P&gt;AEM Queue&amp;nbsp;&lt;SPAN&gt;SAPBlogKafkaSenderQueue -&amp;gt; Kafka Topic&amp;nbsp;SAPBlogKafkaSenderQueue &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Kafka Topic&amp;nbsp;SAPBlogKafkaSenderQueue -&amp;gt; AEM Topic WelcomeSAPEvents&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In this blog we want to have a look at Dynamic Topics in AEM. SAP AEM offers the possibility to have dynamic filters, so Consumers can already filter in their subscription to the topic based on certain values.&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1384680220"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-1188166715"&gt;Kafka Sender&lt;/H1&gt;&lt;P&gt;The Queue&amp;nbsp;&lt;SPAN&gt;SAPBlogKafkaSenderQueue from Florians Blog does not have a Topic Subscription. In my AIFAEM &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-set-up-enhanced-events-for-advanced-event-mesh-with-application/ba-p/13780160" target="_self"&gt;Blog&lt;/A&gt; I have created a scenario to connect a S/4HANA System to AEM with AIFAEM. I´ll use the topic from there:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_0-1746894495851.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259599iC18576702D5DE364/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_0-1746894495851.png" alt="AlexPfeil_0-1746894495851.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_1-1746894538768.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259600iA60ECA5A3874839D/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_1-1746894538768.png" alt="AlexPfeil_1-1746894538768.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The Topic of my Test Business Partner is "sap/businessPartner/0001/0000000181". "0001" is the Grouping of the Business Partner, "0000000181" is the BusinessPartner Number this could be different for other Business Partners.&lt;/P&gt;&lt;P&gt;In my Custom Header &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-send-custom-http-headers-in-aifaem/ba-p/14098050" target="_self"&gt;Blog&lt;/A&gt; I have explained how to pass Custom HTTP Headers to AEM. Now we want to pass this information to Kafka. Since Kafka does not support dynamic Topics, we need to store dynamic Values in the Kafka Headers. User Properties are passed from AEM to Kafka automatically and do not need to be specifically customized.&lt;/P&gt;&lt;H1 id="toc-hId-991653210"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-795139705"&gt;Kafka Receiver&lt;/H1&gt;&lt;P&gt;Now when receiving the Event back from Kafka, we want to pass the Kafka Header Values to the AEM Topic dynamically.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Currently the Topic Binding for the Kafka Receiver only passes the Events to a static AEM Topic "SAPAEMInternalEvent"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_3-1746895326639.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259608iFFD641795F26613E/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_3-1746895326639.png" alt="AlexPfeil_3-1746895326639.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let´s change it to&amp;nbsp;&lt;/P&gt;&lt;P&gt;"KafkaBusinessPartnerReceiver/${kafkaHeaderAsString("businesspartnergroup")}/${kafkaHeaderAsString("businesspartnernumber")}"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_4-1746895458072.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259609i6CDF477B20563337/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_4-1746895458072.png" alt="AlexPfeil_4-1746895458072.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-598626200"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-402112695"&gt;Test&lt;/H1&gt;&lt;P&gt;Now If I change a BusinessPartner in my S/4HANA System, the Event should be published to AEM Topic "sap/businessPartner/0001/0000000181", persisted by our Queue "&lt;SPAN&gt;SAPBlogKafkaSenderQueue" which is consumed by our Kafka Sender posting it to Kafka Topic "SAPBlogAEMKafkaSender". This Topic we consume from AEM with our Kafka Receiver and post it to AEM Topic&amp;nbsp;KafkaBusinessPartnerReceiver/0001/0000000181.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_5-1746895768544.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259630iDB67DBC7E6A396B0/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_5-1746895768544.png" alt="AlexPfeil_5-1746895768544.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let´s have a look into Kafka: We can see that the Event has been posted to Topic&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV&gt;&lt;DIV class=""&gt;WelcomeSAPEvents&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_0-1747304862620.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/261520iB5641693D30F4BD5/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_0-1747304862620.png" alt="AlexPfeil_0-1747304862620.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;We also can see that the Headers have been provided:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_0-1747304951514.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/261523i3E9F8E619E4AF2AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_0-1747304951514.png" alt="AlexPfeil_0-1747304951514.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;HTTP Header "&lt;SPAN&gt;Solace-User-Property-BusinessPartnerNumber" (Set by AIFAEM) --&amp;gt; AEM Property "businesspartnernumber" --&amp;gt; Kafka Header "businesspartnernumber"&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;HTTP Header "Solace-User-Property-BusinessPartnerGroup"&amp;nbsp;(Set by AIFAEM) --&amp;gt; AEM Property "businesspartnergroup" --&amp;gt; Kafka Header "businesspartnergroup"&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For Testing Purposes I have created a BTP Integration Suite Iflow consuming KafkaBusinessPartnerReceiver/&amp;gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_7-1746896229082.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259633i4B522EC391FEED65/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_7-1746896229082.png" alt="AlexPfeil_7-1746896229082.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Here we can see what Kafka Topic it was (Header "UserProperties", Property "k_topic") and which Topic was created in AEM (Header "Destination").&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlexPfeil_6-1746896115929.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259631iBE54788BB7935A0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="AlexPfeil_6-1746896115929.png" alt="AlexPfeil_6-1746896115929.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-205599190"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;This blog demonstrated how AEM Message Properties are passed to Kafka and how we can build up dynamic AEM Topics based on Kafka Headers. This, for instance, can make filtering of Kafka Events possible without having to include BTP Integration Suite in between. There are more possibilities to explore for the Substition Expressions, documented &lt;A href="https://docs.solace.com/Messaging/Substitution-Expressions-Overview.htm" target="_self" rel="nofollow noopener noreferrer"&gt;here&lt;/A&gt;.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/bridging-advanced-event-mesh-and-kafka-dynamic-topics-and-headers-in-action/ba-p/14098091"/>
    <published>2025-05-10T19:05:48.085000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-event-mesh-architecture-patterns/ba-p/14103610</id>
    <title>SAP Event Mesh Architecture Patterns</title>
    <updated>2025-05-16T15:43:50.639000+02:00</updated>
    <author>
      <name>vbalko-claimate</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/178477</uri>
    </author>
    <content>&lt;P class=""&gt;This blog post explores common architectural patterns using SAP Event Mesh in a cloud-native integration landscape.&lt;/P&gt;&lt;H1 id="8ce6" id="toc-hId-1601367749"&gt;Audience &amp;amp; Prerequisites&lt;/H1&gt;&lt;P class=""&gt;&lt;STRONG&gt;Audience:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Integration architects and developers familiar with AMQP principles and SAP Cloud Integration.&lt;BR /&gt;&lt;STRONG&gt;Prerequisites:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Basic understanding of event-driven design.&lt;/P&gt;&lt;H1 id="386c" id="toc-hId-1404854244"&gt;Key Components&lt;/H1&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Producer System&lt;/STRONG&gt;: Source of events (e.g., e-commerce platform).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP Cloud Integration Suite&lt;/STRONG&gt;: Acts as an AMQP broker or event router.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Consumer System(s)&lt;/STRONG&gt;: Subscribers processing events (e.g., warehouse, analytics).&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="a8ed" id="toc-hId-1208340739"&gt;1. Single Publisher → Single Event Type → Single Subscriber&lt;/H1&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vbalkoclaimate_0-1747402733679.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262142i16B7E9D64E75A0F6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vbalkoclaimate_0-1747402733679.png" alt="vbalkoclaimate_0-1747402733679.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P class=""&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;BR /&gt;A customer places an online order. The e-commerce app publishes an&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;OrderCreated&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;event, and a warehouse service processes it to trigger shipping.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Motivation&lt;/STRONG&gt;&lt;BR /&gt;Simplest guaranteed-delivery scenario for point-to-point integration.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;Producer sends events to a dedicated queue.&lt;/LI&gt;&lt;LI&gt;Consumer subscribes to the queue for ordered processing.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Pros &amp;amp; Cons&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Pros&lt;/STRONG&gt;: Guaranteed delivery, simple error handling.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":cross_mark:"&gt;❌&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Cons&lt;/STRONG&gt;: Tight coupling, no scalability.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;When to Use&lt;/STRONG&gt;&lt;BR /&gt;Legacy system integrations or one-to-one workflows.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Queue&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_OrderCreated&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Protocol&lt;/STRONG&gt;: AMQP (pull-based).&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="040d" id="toc-hId-1011827234"&gt;2. Single Publisher → Single Event Type → Multiple Subscribers (Fan-out)&lt;/H1&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vbalkoclaimate_1-1747402733638.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262144i8B9F79FA3966A36F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vbalkoclaimate_1-1747402733638.png" alt="vbalkoclaimate_1-1747402733638.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P class=""&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;BR /&gt;A retail platform publishes&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;OrderCreated&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;events to notify analytics, billing, and notification services in parallel.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Motivation&lt;/STRONG&gt;&lt;BR /&gt;Broadcast events to multiple consumers for independent processing.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;Producer publishes to a topic.&lt;/LI&gt;&lt;LI&gt;Event Mesh replicates the event to subscriber queues.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Pros &amp;amp; Cons&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Pros&lt;/STRONG&gt;: Decoupled subscribers, scalable.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":cross_mark:"&gt;❌&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Cons&lt;/STRONG&gt;: Resource overhead, management complexity.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;When to Use&lt;/STRONG&gt;&lt;BR /&gt;Multiple downstream systems need the same event.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Topic&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Topic_OrderCreated&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Subscriber Queues&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_Analytics,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_Billing,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_Notification.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="3f4c" id="toc-hId-815313729"&gt;3. Multiple Event Types → Single Subscriber&lt;/H1&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vbalkoclaimate_2-1747402733442.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262143i582E4C2397F93818/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vbalkoclaimate_2-1747402733442.png" alt="vbalkoclaimate_2-1747402733442.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P class=""&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;BR /&gt;A fulfillment engine handles&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;OrderCreated&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;OrderUpdated&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;events from a single subscription.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Motivation&lt;/STRONG&gt;&lt;BR /&gt;Centralize logic for related event types.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;Producers emit events to a shared topic.&lt;/LI&gt;&lt;LI&gt;Subscriber filters events by headers (e.g.,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;type=Created).&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Pros &amp;amp; Cons&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Pros&lt;/STRONG&gt;: Fewer endpoints, unified logic.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":cross_mark:"&gt;❌&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Cons&lt;/STRONG&gt;: Filtering overhead, load concentration.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;When to Use&lt;/STRONG&gt;&lt;BR /&gt;A service needs multiple event types.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Topic&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Topic_OrderEvents&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Queue&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_OrderProcessor&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with header-based bindings.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="7ac0" id="toc-hId-618800224"&gt;4. Multi-Topic Selective Subscription&lt;/H1&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vbalkoclaimate_3-1747402733544.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262147i084B8E352CA1EF8C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vbalkoclaimate_3-1747402733544.png" alt="vbalkoclaimate_3-1747402733544.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P class=""&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;BR /&gt;A procurement system subscribes to material/vendor events, while analytics uses product events.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Motivation&lt;/STRONG&gt;&lt;BR /&gt;Domain-driven subscriptions for segregated data.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;Producers publish to domain-specific topics.&lt;/LI&gt;&lt;LI&gt;Consumers bind to relevant topics.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Pros &amp;amp; Cons&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Pros&lt;/STRONG&gt;: Fine-grained control, domain isolation.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":cross_mark:"&gt;❌&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Cons&lt;/STRONG&gt;: Binding management.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;When to Use&lt;/STRONG&gt;&lt;BR /&gt;Segregated event types per domain.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Topics&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Topic_MaterialEvents,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Topic_ProductEvents,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Topic_VendorEvents.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Queues&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_Procurement&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(material/vendor),&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_Analytics&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(product).&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="00e6" id="toc-hId-422286719"&gt;5. Aggregator Pattern&lt;/H1&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vbalkoclaimate_4-1747402733864.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262146i9631E6DF95232E66/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vbalkoclaimate_4-1747402733864.png" alt="vbalkoclaimate_4-1747402733864.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P class=""&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;BR /&gt;An integration flow aggregates daily material/product updates into a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;MasterDataBundle&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for reporting.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Motivation&lt;/STRONG&gt;&lt;BR /&gt;Batch processing of related events.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;SAP Cloud Integration (CI) consumes source queues, aggregates data, and publishes a bundled event.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Pros &amp;amp; Cons&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Pros&lt;/STRONG&gt;: Simplified downstream consumption.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":cross_mark:"&gt;❌&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Cons&lt;/STRONG&gt;: Latency, complex logic.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;When to Use&lt;/STRONG&gt;&lt;BR /&gt;Batch reporting or composite events.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Source Queues&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_MaterialEvents,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_ProductEvents.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Output Topic&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Topic_MasterDataBundle.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="661b" id="toc-hId-225773214"&gt;6. Event Enrichment Pipeline&lt;/H1&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vbalkoclaimate_5-1747402733327.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262145i69848F1330C3E950/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vbalkoclaimate_5-1747402733327.png" alt="vbalkoclaimate_5-1747402733327.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P class=""&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;BR /&gt;Enrich raw order events with customer credit scores and product availability.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Motivation&lt;/STRONG&gt;&lt;BR /&gt;Decouple enrichment steps from producers/consumers.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;CI flows progressively enrich events across stages.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Pros &amp;amp; Cons&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Pros&lt;/STRONG&gt;: Modular design, separation of concerns.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":cross_mark:"&gt;❌&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Cons&lt;/STRONG&gt;: Increased latency.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;When to Use&lt;/STRONG&gt;&lt;BR /&gt;Progressive event enhancement.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Topics&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Topic_RawOrderEvents&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;→&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Topic_EnrichedEvents.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Queues&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_Enrich1,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_Billing,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_Shipping.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="11e1" id="toc-hId-29259709"&gt;7. Scatter–Gather Pattern&lt;/H1&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vbalkoclaimate_6-1747402733830.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262150i484D9FBB209E09F6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vbalkoclaimate_6-1747402733830.png" alt="vbalkoclaimate_6-1747402733830.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P class=""&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;BR /&gt;A credit-check flow queries two agencies in parallel and aggregates responses.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Motivation&lt;/STRONG&gt;&lt;BR /&gt;Parallel execution and result collation.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;CI publishes requests to a topic.&lt;/LI&gt;&lt;LI&gt;Subscribers process requests and publish responses.&lt;/LI&gt;&lt;LI&gt;Aggregator CI flow correlates responses.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Pros &amp;amp; Cons&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Pros&lt;/STRONG&gt;: Parallelism, resilience.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":cross_mark:"&gt;❌&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Cons&lt;/STRONG&gt;: Correlation complexity.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;When to Use&lt;/STRONG&gt;&lt;BR /&gt;Multi-service orchestration.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Topics&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Topic_Requests,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Topic_Responses.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Queues&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_ServiceA,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_ServiceB,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_Aggregator.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="504b" id="toc-hId--167253796"&gt;8. Error Handling &amp;amp; Dead-Letter Queue&lt;/H1&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vbalkoclaimate_7-1747402733322.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262148iC18573DFC2BBD3D6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vbalkoclaimate_7-1747402733322.png" alt="vbalkoclaimate_7-1747402733322.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P class=""&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;BR /&gt;Malformed events are moved to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;DLQ_OrderProcessor&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;after retries.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Motivation&lt;/STRONG&gt;&lt;BR /&gt;Isolate poison messages for analysis.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;Configure queues to route failed messages to a DLQ.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Pros &amp;amp; Cons&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Pros&lt;/STRONG&gt;: Prevents message loss.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":cross_mark:"&gt;❌&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Cons&lt;/STRONG&gt;: Requires monitoring.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;When to Use&lt;/STRONG&gt;&lt;BR /&gt;Critical pipelines needing reliability.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Primary Queue&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue_OrderProcessor.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;DLQ&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;DLQ_OrderProcessor&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(bound via dead-letter exchange).&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="5b42" id="toc-hId-405972782"&gt;9. Webhook Integration Pattern&lt;/H1&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vbalkoclaimate_8-1747402733379.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/262151iFF5885ACD1CDB593/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vbalkoclaimate_8-1747402733379.png" alt="vbalkoclaimate_8-1747402733379.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P class=""&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;BR /&gt;Event Mesh invokes a third-party SMS gateway’s webhook on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;OrderShipped&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;events.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Motivation&lt;/STRONG&gt;&lt;BR /&gt;Real-time integration with HTTP endpoints.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;Event Mesh pushes events to HTTP endpoints via POST.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Pros &amp;amp; Cons&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Pros&lt;/STRONG&gt;: No persistent consumer needed.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":cross_mark:"&gt;❌&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Cons&lt;/STRONG&gt;: HTTP reliability challenges.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;When to Use&lt;/STRONG&gt;&lt;BR /&gt;Lightweight integrations with REST APIs.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Topic&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Topic_OrderNotifications.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Webhook&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://api.sms-gateway.com/notify" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.sms-gateway.com/notify&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(TLS + OAuth).&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="8f0c" id="toc-hId-209459277"&gt;Conclusion&lt;/H1&gt;&lt;P class=""&gt;Choose patterns based on coupling, scalability, and latency needs. SAP Event Mesh’s flexibility with queues, topics, and webhooks supports diverse integration scenarios.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-event-mesh-architecture-patterns/ba-p/14103610"/>
    <published>2025-05-16T15:43:50.639000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/discover-s-4hana-cloud-events-in-sap-developer-hub/ba-p/14097325</id>
    <title>Discover S/4HANA Cloud Events in SAP Developer Hub</title>
    <updated>2025-05-21T20:02:36.112000+02:00</updated>
    <author>
      <name>FlorianOkos</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/5536</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1839332042"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Event-driven architectures are becoming essential in building flexible and scalable enterprise applications. With SAP S/4HANA Cloud and SAP Integration Suite, developers can now seamlessly discover business events and build reactive integrations. This blog guides you through the process of registering your S/4HANA Cloud system in SAP BTP and discovering its events in the SAP Developer Hub. You can find more details in one of my former &lt;A href="https://community.sap.com/t5/integration-blog-posts/enable-sap-developer-hub-as-central-event-catalog/ba-p/14076495" target="_self"&gt;blogs&lt;/A&gt;.&lt;/P&gt;&lt;P class=""&gt;Whether you're setting up an event mesh or exploring event-based extension scenarios, this guide will help you get started.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1642818537"&gt;&lt;STRONG&gt;1. Register S/4HANA Cloud in SAP BTP&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;To begin, your S/4HANA Cloud system must be registered in your SAP BTP global account. This registration allows BTP to recognize your business system and enables event exposure.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Steps:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P class=""&gt;Go to your SAP BTP Cockpit (Global Account level).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Navigate to &lt;STRONG&gt;Systems&lt;/STRONG&gt; &amp;gt; &lt;STRONG&gt;System Landscape&lt;/STRONG&gt; &amp;gt; &lt;STRONG&gt;Add System&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Choose &lt;STRONG&gt;SAP S/4HANA Cloud&lt;/STRONG&gt; as the system type.&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Add_System.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264510i676B1724CB86B857/image-size/large?v=v2&amp;amp;px=999" role="button" title="Add_System.png" alt="Add_System.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Assign &lt;STRONG&gt;Coomuication scenarios &lt;/STRONG&gt;you can to use / create a &lt;STRONG&gt;token&lt;/STRONG&gt; for,&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Confirm with "Get Token"&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Token.png" style="width: 988px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264511i9D0725C3A0314BC6/image-size/large?v=v2&amp;amp;px=999" role="button" title="Token.png" alt="Token.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Use the Token in your S/4HANA Cloud system. Navigate to&lt;STRONG&gt;Maintain Extensions on SAP BTP &amp;gt; New &amp;gt; Register Token. On&lt;/STRONG&gt;ce done - check that the setuup has the Status&lt;STRONG&gt; "Enabled"&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Enabled.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264513i8FCCD0F2344CA234/image-size/large?v=v2&amp;amp;px=999" role="button" title="Enabled.png" alt="Enabled.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;In SAP BTP Cockpit System Landscape you should be able see the &lt;STRONG&gt;Registered system&lt;/STRONG&gt; with System Details like &lt;STRONG&gt;available Events.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Registered System.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264515iFB5FF9F7368ABB22/image-size/large?v=v2&amp;amp;px=999" role="button" title="Registered System.png" alt="Registered System.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Finally - create a formation with the Integration Suite tenant you would like to use as foundation for your SAP Developer Portal ( Data will be synchronized) .&lt;/LI&gt;&lt;/OL&gt;&lt;BLOCKQUOTE&gt;&lt;P class=""&gt;&lt;span class="lia-unicode-emoji" title=":blue_book:"&gt;📘&lt;/span&gt;&lt;EM&gt;Reference:&lt;/EM&gt; &lt;A class="" href="https://help.sap.com/docs/btp/sap-business-technology-platform/register-sap-s-4hana-cloud-system-in-global-account-in-sap-btp" target="_new" rel="noopener noreferrer"&gt;Register SAP S/4HANA Cloud System in Global Account in SAP BTP&lt;/A&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1446305032"&gt;&lt;STRONG&gt;2. Discover Events in SAP Developer Hub&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Once your system is registered, you can discover its available events in the &lt;STRONG&gt;Developer Hub&lt;/STRONG&gt; within SAP Integration Suite.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Steps:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P class=""&gt;Open the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; and go to the &lt;STRONG&gt;Settings &amp;gt; API.&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Access&amp;nbsp;&lt;STRONG&gt;Developer Hub&lt;/STRONG&gt; from the side menu and navigate to &lt;STRONG&gt;Admin Center &amp;gt; Content &amp;gt; Business Systems&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Select &lt;STRONG&gt;Business Systems&lt;/STRONG&gt; and locate your registered S/4HANA Cloud system.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BusinessSystem.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264537iC09995A467C3DD3D/image-size/large?v=v2&amp;amp;px=999" role="button" title="BusinessSystem.png" alt="BusinessSystem.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Click on the system to browse the available events ( e.g. Sales Order) and create the Product to displayed in Developer Hub.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Select Event.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264538i10354CBD458002AA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Select Event.png" alt="Select Event.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Fill descriptions and &lt;STRONG&gt;Publish the Product.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P class=""&gt;&lt;span class="lia-unicode-emoji" title=":blue_book:"&gt;📘&lt;/span&gt;&lt;EM&gt;Reference:&lt;/EM&gt; &lt;A class="" href="https://help.sap.com/docs/integration-suite/sap-integration-suite/discovering-events-from-business-systems-and-publishing-them-in-catalog" target="_new" rel="noopener noreferrer"&gt;Discovering Events from Business Systems and Publishing Them in Catalog&lt;/A&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1249791527"&gt;&lt;STRONG&gt;3. Next Steps: Start Building Event-Driven Integrations&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;You can search, filter, and explore details like event topics, payload structures, and descriptions.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Catalog View.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264539iE28B2E74C314D43D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Catalog View.png" alt="Catalog View.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DetailedView.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264540iC597E43043924E9B/image-size/large?v=v2&amp;amp;px=999" role="button" title="DetailedView.png" alt="DetailedView.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;This catalog is essential for building event-driven scenarios, as it gives full visibility into what business events are available — e.g., “Sales Order Created” or “Business Partner Changed”.&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Build integrations or extensions using&amp;nbsp;&lt;STRONG&gt;SAP Cloud Integration&lt;/STRONG&gt;, &lt;STRONG&gt;SAP Build&lt;/STRONG&gt;, or custom apps.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Leverage event topics to decouple logic and enable reactive business processes.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1053278022"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;The ability to discover and consume events from SAP S/4HANA Cloud directly within the SAP Developer Hub makes it easier than ever to implement event-driven architectures in your enterprise landscape. By registering your system in SAP BTP and exploring its business events, you're taking the first step toward building intelligent and responsive applications.&lt;/P&gt;&lt;P class=""&gt;Feel free to share your questions or experiences with event discovery in the comments!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/discover-s-4hana-cloud-events-in-sap-developer-hub/ba-p/14097325"/>
    <published>2025-05-21T20:02:36.112000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-advanced-event-mesh-blog-collection/ba-p/14111943</id>
    <title>SAP Integration Suite, Advanced Event Mesh Blog Collection</title>
    <updated>2025-05-27T10:32:54.286000+02:00</updated>
    <author>
      <name>AlexPfeil</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165526</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1602234667"&gt;Introduction&lt;/H1&gt;&lt;P&gt;In today’s fast-paced, event-driven world, seamless data movement and real-time responsiveness have become critical to modern application architectures. &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;,&amp;nbsp;&lt;STRONG&gt;Advanced Event Mesh&lt;/STRONG&gt; (AEM) offers a powerful solution—enabling dynamic, reliable, and scalable event streaming across hybrid and multi-cloud environments.&lt;/P&gt;&lt;P&gt;Over time, we've created a substantial amount of content around Advanced Event Mesh—now it makes sense to bring all the pieces together in one place as a cohesive blog collection, including Guides &amp;amp; contributions from other AEM Experts in the Community.&lt;/P&gt;&lt;P&gt;This blog serves as a &lt;STRONG&gt;central hub&lt;/STRONG&gt;—a curated collection of insightful articles, technical deep dives and best practices focused on AEM and SAP Event Enablement Options like RAP, AIFAEM and the SAP Event-Enablement Add-On (ASAPIO). Whether you're just getting started or looking to optimize a production-grade deployment, this collection is designed to guide you through the concepts and capabilities of AEM.&lt;/P&gt;&lt;P&gt;Let’s explore how event mesh technology is transforming integration strategies and empowering developers and architects to build the next generation of event-driven systems.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1405721162"&gt;Getting Started&lt;/H1&gt;&lt;DIV class=""&gt;&lt;P class=""&gt;&lt;A href="https://developers.sap.com/mission.advanced-event-mesh-get-started.html" target="_self" rel="noopener noreferrer"&gt;Get Started with SAP Integration Suite, advanced event mesh&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-basic-concepts/ba-p/13572050" target="_self"&gt;Advanced Event Mesh: Basic Concepts&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-create-your-first-event-broker/ba-p/13571945" target="_blank"&gt;Advanced Event Mesh: Create your first event broker&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1338290376"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1141776871"&gt;AEM Features&lt;/H2&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-advanced-event-mesh-manage-advance-event-mesh-with-api-s/ba-p/13807071" target="_self"&gt;SAP Advanced Event Mesh – Manage Advance Event Mesh with API’s&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/automating-advanced-event-mesh-broker-creation/ba-p/13595187" target="_self"&gt;Automating Advanced Event Mesh Broker Creation&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-replay/ba-p/13574847" target="_blank"&gt;Advanced Event Mesh: Replay&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-queue/ba-p/13574698" target="_self"&gt;Advanced Event Mesh: Queue&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/enabling-in-order-processing-with-sap-integration-suite-advanced-event-mesh/ba-p/13703498" target="_blank"&gt;Enabling In-Order processing with SAP Integration Suite, advanced event mesh Partitioned Queues&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/securing-sap-advanced-event-mesh-oauth-configuration-and-semp-api/ba-p/13750269" target="_blank"&gt;Securing SAP Advanced Event Mesh: OAuth Configuration and SEMP API Integration&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-945263366"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-748749861"&gt;Connectivity &amp;amp; Auth&lt;/H2&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-client-authentication-basic-oauth/ba-p/13572073" target="_self"&gt;Advanced Event Mesh: Client Authentication - Basic / OAuth&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/advanced-event-mesh-connectors-and-easy-event-driven-example-of-s-4hana/ba-p/13642721" target="_blank"&gt;Advanced Event Mesh Connectors and Easy Event-Driven Example of S/4HANA with Amazon S3 Integration&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-552236356"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-355722851"&gt;Event Portal / Developer Hub&lt;/H2&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/enable-sap-developer-hub-as-central-event-catalog/ba-p/14076495" target="_blank"&gt;Enable SAP Developer Hub as central Event Catalog&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/discover-s-4hana-cloud-events-in-sap-developer-hub/ba-p/14097325" target="_blank"&gt;Discover S/4HANA Cloud Events in SAP Developer Hub&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-159209346"&gt;Monitoring&lt;/H2&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/configure-sap-integration-suite-advanced-event-mesh-distributed-tracing/ba-p/13755378" target="_self"&gt;Configure SAP Integration Suite, Advanced Event Mesh Distributed Tracing&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/evaluate-sap-integration-suite-advanced-event-mesh-datadog-distributed/ba-p/13776768" target="_blank"&gt;Evaluate SAP Integration Suite, Advanced Event Mesh Datadog Distributed Tracing&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-troubleshooting/ba-p/13762032" target="_blank"&gt;Advanced Event Mesh:Troubleshooting&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--37304159"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-113436693"&gt;User Management&lt;/H2&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/introduction-to-group-management-in-sap-integration-suite-advanced-event/ba-p/14050720" target="_blank"&gt;Introduction to Group Management in SAP Integration Suite, Advanced Event Mesh&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-user-management-in-advanced-event-mesh-with-sap-cis-and/ba-p/14108619" target="_blank"&gt;Streamlining User Management in Advanced Event Mesh with SAP CIS and Identity Federation&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-advanced-event-mesh-event-access-approval-workflow/ba-p/13953086" target="_self"&gt;SAP Advanced Event Mesh – Event Access Approval Workflow&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--83076812"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--279590317"&gt;Deployment Options&lt;/H2&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/setting-up-a-private-sap-advanced-event-mesh-cluster-on-suse-rancher-rke2/ba-p/13988701" target="_blank"&gt;Setting Up a Private SAP Advanced Event Mesh Cluster on SUSE Rancher RKE2&lt;/A&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId--476103822"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--672617327"&gt;Kafka Bridge&lt;/H2&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-connect-everything-featuring-kafka/ba-p/14050084" target="_blank"&gt;SAP Integration Suite – Connect Everything FEATURING Kafka&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/bridging-advanced-event-mesh-and-kafka-dynamic-topics-and-headers-in-action/ba-p/14098091" target="_blank"&gt;Bridging Advanced Event Mesh and Kafka: Dynamic Topics and Headers in Action&lt;/A&gt;&lt;/P&gt;&lt;H1 id="toc-hId--575727825"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId--772241330"&gt;SAP Event Enablement&lt;/H1&gt;&lt;H2 id="toc-hId--1262157842"&gt;RAP&lt;/H2&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/rap-business-events-with-sap-integration-suite-advanced-event-mesh-and-sap/ba-p/13913393" target="_blank"&gt;RAP Business Events with SAP Integration Suite, Advanced Event Mesh and SAP S/4HANA On Premise 2023&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-1-connecting-aem-to-s-4hana-on/ba-p/13913581" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [1]: Connecting AEM to S/4HANA On Premise 2023&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-2-creating-custom-business/ba-p/13914171" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [2]: Creating custom business events&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-3-creating-events-with-deep/ba-p/13914285" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [3]: Creating events with deep payloads&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-4-creating-a-derived-event/ba-p/13915120" target="_self"&gt;RAP Business Events with Advanced Event Mesh [4]: Creating a derived event&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-5-consuming-a-local-business/ba-p/13915138" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [5]: Consuming a local business event&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-6-consuming-a-remote-event/ba-p/13915155" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [6]: Consuming a remote event&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1458671347"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1655184852"&gt;AIFAEM&lt;/H2&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/a-natural-choice-sap-aif-can-now-expose-events-to-advanced-event-mesh-to/ba-p/13773758" target="_blank"&gt;A Natural Choice: SAP AIF can now expose events to Advanced Event Mesh to power your EDA&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-set-up-enhanced-events-for-advanced-event-mesh-with-application/ba-p/13780160" target="_blank"&gt;How to set up enhanced Events for Advanced Event Mesh with Application Interface Framework &amp;amp; AIFAEM&lt;/A&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-send-out-idocs-to-advanced-event-mesh-using-sap-application/ba-p/13972680" target="_blank"&gt;How to send out IDocs to Advanced Event Mesh using SAP Application Interface Framework &amp;amp; AIFAEM&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-set-up-filters-in-aifaem/ba-p/13982842" target="_blank"&gt;How to set up Filters in AIFAEM&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-display-the-json-payload-in-aifaem/ba-p/14098028" target="_blank"&gt;How to Display the JSON Payload in AIFAEM&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-send-custom-http-headers-in-aifaem/ba-p/14098050" target="_blank"&gt;How to send Custom HTTP Headers in AIFAEM&lt;/A&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1390111659"&gt;Initial Loads&lt;/H1&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/blog-series-intitial-loads-to-sap-advanced-event-mesh/ba-p/14074847" target="_blank"&gt;Blog Series - Intitial Loads to SAP Advanced Event Mesh&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1586625164"&gt;Other&lt;/H1&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/btp-event-mesh-advance-concepts/ba-p/13528142" target="_blank"&gt;BTP Event Mesh Advance Concepts&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1783138669"&gt;Summary&lt;/H1&gt;&lt;P&gt;This collection brings together key insights and technical deep dives around Advanced Event Mesh to help you navigate, implement, and optimize event-driven architectures. If you notice that a relevant blog post or important topic is missing, feel free to let me know in the comments—I'm happy to expand the list and keep this collection as complete and useful as possible.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-advanced-event-mesh-blog-collection/ba-p/14111943"/>
    <published>2025-05-27T10:32:54.286000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/simplifying-complex-enterprise-landscapes-using-sap-integration-suite-a/ba-p/14141754</id>
    <title>Simplifying Complex Enterprise Landscapes Using SAP Integration Suite – A Practical Approach</title>
    <updated>2025-07-01T15:48:27.196000+02:00</updated>
    <author>
      <name>aayushaggarwal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/218793</uri>
    </author>
    <content>&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;EM&gt;“Complexity is inevitable. Chaos isn’t.”&lt;/EM&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;In today’s enterprise IT landscape, complexity is everywhere — hybrid architectures, ever-evolving business needs, legacy platforms, and disconnected systems. But complexity doesn’t have to mean confusion or fragility.&lt;/P&gt;&lt;P&gt;With over 11 years of experience across &lt;STRONG&gt;SAP CPI, PI/PO, BTP, and Ariba CIG&lt;/STRONG&gt;, I’ve seen firsthand how integration complexity can slow innovation — and how the right architectural mindset can fix it.&lt;/P&gt;&lt;P&gt;This post is a practical guide to &lt;STRONG&gt;simplifying complex enterprise landscapes&lt;/STRONG&gt; using the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1863168778"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;🔹&lt;/span&gt;Why Complexity Happens&lt;/H3&gt;&lt;P&gt;Most organizations face at least one (if not all) of these challenges:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;A mix of cloud and on-premise systems&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Legacy, point-to-point integrations built without standards&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Business logic scattered across different platforms&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Siloed teams and lack of visibility across integrations&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The result? High maintenance, fragile interfaces, slower time-to-market.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1666655273"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;🔹&lt;/span&gt;My Guiding Principles for Simplification&lt;/H3&gt;&lt;H4 id="toc-hId-1599224487"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_1:"&gt;1️⃣&lt;/span&gt;API-First Architecture&lt;/H4&gt;&lt;P&gt;Design integrations as &lt;STRONG&gt;modular, discoverable services&lt;/STRONG&gt; — not tightly coupled one-offs. Use &lt;STRONG&gt;SAP API Management&lt;/STRONG&gt; to expose, secure, and govern your interfaces centrally.&lt;/P&gt;&lt;H4 id="toc-hId-1402710982"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_2:"&gt;2️⃣&lt;/span&gt;Decouple Business Logic from Integration&lt;/H4&gt;&lt;P&gt;Avoid embedding decision logic in CPI flows or PI/PO mappings. Move that logic to &lt;STRONG&gt;CAP apps&lt;/STRONG&gt;, &lt;STRONG&gt;BRF+&lt;/STRONG&gt;, or reusable business services — this reduces rework and improves clarity.&lt;/P&gt;&lt;H4 id="toc-hId-1206197477"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_3:"&gt;3️⃣&lt;/span&gt;Think Event-Driven&lt;/H4&gt;&lt;P&gt;Don’t force synchronous flows where asynchronous is better. Use &lt;STRONG&gt;SAP Event Mesh&lt;/STRONG&gt; to build decoupled, reactive systems that scale more naturally.&lt;/P&gt;&lt;H4 id="toc-hId-1009683972"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_4:"&gt;4️⃣&lt;/span&gt;Reuse Over Rebuild&lt;/H4&gt;&lt;P&gt;Standardize error handling, logging, naming conventions, and message formats. Use templates, shared artifacts, and integration accelerators wherever possible.&lt;/P&gt;&lt;H4 id="toc-hId-813170467"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_5:"&gt;5️⃣&lt;/span&gt;Integration as a Platform&lt;/H4&gt;&lt;P&gt;Treat integration as a long-term &lt;STRONG&gt;platform&lt;/STRONG&gt;, not a project. Build with future growth, maintainability, and observability in mind.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-487574243"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;🔹&lt;/span&gt;Using SAP Integration Suite Holistically&lt;/H3&gt;&lt;P&gt;Most teams focus only on &lt;STRONG&gt;SAP CPI&lt;/STRONG&gt; — but the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; is more powerful when used as a full toolkit:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Cloud Integration (CPI):&lt;/STRONG&gt; For process orchestration across SAP and non-SAP systems&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;API Management:&lt;/STRONG&gt; To secure, manage, and reuse interfaces&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP Managed Gateway (Ariba CIG):&lt;/STRONG&gt; For rapid, standardized B2B procurement integration&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Event Mesh:&lt;/STRONG&gt; To enable scalable, event-driven communication&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP BTP Cockpit &amp;amp; Cloud ALM:&lt;/STRONG&gt; For centralized monitoring, alerting, and operational control&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Together, these tools can reduce integration effort, increase visibility, and support long-term agility.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-291060738"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;🔹&lt;/span&gt;Real-World Tactics That Worked for Me&lt;/H3&gt;&lt;P&gt;Here are some of the steps I’ve implemented in customer landscapes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Migrated legacy &lt;STRONG&gt;PI/PO&lt;/STRONG&gt; integrations to &lt;STRONG&gt;CPI on SAP BTP&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Created &lt;STRONG&gt;custom adapters&lt;/STRONG&gt; and reusable &lt;STRONG&gt;Groovy-based modules&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Designed a central &lt;STRONG&gt;error-handling and alerting framework&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Introduced integration &lt;STRONG&gt;naming standards, templates, and design guidelines&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Used &lt;STRONG&gt;Cloud ALM&lt;/STRONG&gt; to monitor interfaces across landscapes&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Built a knowledge base of reusable integration components&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-94547233"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;🔹&lt;/span&gt;Final Thoughts&lt;/H3&gt;&lt;P&gt;Complexity is natural. But without intentional design, it turns into chaos.&lt;/P&gt;&lt;P&gt;By adopting a &lt;STRONG&gt;product mindset&lt;/STRONG&gt;, focusing on &lt;STRONG&gt;API-first, reusable, and event-driven&lt;/STRONG&gt; architecture, and fully utilizing the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;, we can turn fragile systems into future-ready platforms.&lt;/P&gt;&lt;P&gt;Let’s not just connect systems — let’s &lt;STRONG&gt;design integration that scales with the product, not against it&lt;/STRONG&gt;.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--177197641"&gt;&lt;span class="lia-unicode-emoji" title=":repeat_button:"&gt;🔁&lt;/span&gt;Let’s Discuss&lt;/H3&gt;&lt;P&gt;How are you approaching simplification in your integration landscape?&lt;BR /&gt;Would love to hear your views and lessons from the field.&lt;/P&gt;&lt;HR /&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/simplifying-complex-enterprise-landscapes-using-sap-integration-suite-a/ba-p/14141754"/>
    <published>2025-07-01T15:48:27.196000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/solace-to-sap-cpi-step-by-step-configuration-guide-from-scratch-part-2/ba-p/14141456</id>
    <title>Solace to SAP CPI: Step-by-Step Configuration Guide from Scratch : part-2</title>
    <updated>2025-07-07T08:59:02.944000+02:00</updated>
    <author>
      <name>pavanKolla</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2108029</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this blog, I’ll guide you through setting up Solace from signing up on the solace console to creating queues, Topics and testing message flows. Whether you’re new to event mesh technology or planning to integrate Solace with the sap cpi, this step-by-step guide will help you get started confidently.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Solace Event Broker, also known as&amp;nbsp;&lt;STRONG&gt;Advanced Event Mesh (AEM)&lt;/STRONG&gt;, enables&amp;nbsp;&lt;STRONG&gt;event-driven architecture&lt;/STRONG&gt;&amp;nbsp;by&amp;nbsp;&lt;STRONG&gt;allowing seamless integration between enterprise systems like SAP Cloud Integration (CPI) and message brokers.&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step-1 :&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;Access to the Solace Platform&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To get started, visit&amp;nbsp;&lt;A title="solace url" href="https://solace.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://solace.com&lt;/A&gt;&amp;nbsp;and click on the Register button and fill the all mandatory credentials and if you have already an account click on the Login button at the top right corner. From there, you can create a free trial account to access the Solace Platform .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 919px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281001iE20E36D7D8232FDA/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-2: Sign Up / Log In&lt;/STRONG&gt;:&lt;/P&gt;&lt;P&gt;&amp;nbsp;If you’re new to Solace, click on Sign Up to register as a new user. If you already have an account, simply log in using your valid credentials and Jump to Step4.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 943px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281002i003D8415DE361D19/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-3:&lt;/STRONG&gt;&amp;nbsp;&lt;STRONG&gt;Provide Valid Sign-Up Details&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;If you're signing up for the first time, ensure you enter all the required and accurate information during the registration process to successfully create your account.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 975px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281007i543946FAFFE4A42B/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step- 4:&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Access the Solace Console&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;After successfully logging in, you will be redirected to the Solace platform, where you can begin managing your messaging services.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 975px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281008iCCD4785436B3381B/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-5:&lt;/STRONG&gt;&lt;STRONG&gt;Navigate to Cluster Manager&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;On the left-hand panel of the Solace Console, under Component Services, click on Cluster Manager.&lt;BR /&gt;The Cluster Manager is where you create and manage your Solace messaging services (brokers). It allows you to define the environment, cloud provider, region, and service type to provision a messaging service According to your needs.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 975px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281009iF7A2CA87D89C0DA3/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-6:&amp;nbsp;Create a New Service&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To create a new Solace messaging service, click on Create Service and provide the following details:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Service Name&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Environment (e.g., dev, test)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Cloud Provider (AWS, Azure, etc.)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Region (choose the one closest to your location)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For learning and development purposes, select the Service Type as&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;Developer&lt;/EM&gt;, which is a free-tier option suitable for testing and non-production use. It allows you to explore key features like topics, queues, and basic message flow without incurring any cost.&lt;/P&gt;&lt;P&gt;Once all the details are filled in, click on Create Service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 975px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281010iB76ACFD43DFEBF66/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-7:&lt;/STRONG&gt;&lt;STRONG&gt;Service Added to Cluster Manager&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Once the service is successfully created, it will appear under the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Cluster Manager&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;dashboard.&lt;BR /&gt;Locate the newly created&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;AWS Developer Service&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;card (or the corresponding cloud provider you selected), and click on it to open the service details and launch the messaging console.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 975px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281012i675C3F391AA677DE/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 975px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281014iF005AB9DE9D8C19B/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-8:&lt;/STRONG&gt;&lt;STRONG&gt;Use Basic Authentication&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To connect with your Solace Event Broker, either for testing within the console or integrating with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP Cloud Integration (CPI)&lt;/STRONG&gt;—you’ll need to authenticate using&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Basic Authentication&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;From the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Try Me!”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;tab:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Client Username&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;is auto generated&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Client Password&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;is masked but can be copied using the icon beside the field&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;These credentials allow you to publish and subscribe messages securely via the broker&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These credentials are essential for establishing a secure connection from CPI to Solace using the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;AEM (Advanced Event Mesh) adapter&lt;/STRONG&gt;, especially when sending data to queues or topics.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 880px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281018i8F37C0DD9B49977D/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281020i67BDF49B983BE788/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-9:&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Data Publishing Methods&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Topics (Publish/Subscribe Pattern)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;Allows broadcasting messages to multiple subscribers.&lt;/LI&gt;&lt;LI&gt;Every subscriber listening to a topic receives a copy of the message.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Delivery Modes:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Direct:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Messages are sent immediately and not stored in the broker.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Persistent:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Messages are stored until acknowledged by the receiver.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 975px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281022i2928A3D026819DDE/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Queues (Asynchronous Processing)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;Used to store and manage messages between systems.&lt;/LI&gt;&lt;LI&gt;You need to provide a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Queue Name&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to place data in the queue.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Delivery Modes:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Direct:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Messages are sent immediately and not stored in the broker.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Persistent:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Messages are stored until acknowledged by the receiver.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 975px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281023i94D5BDB3A5040740/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-10:&lt;/STRONG&gt;&lt;STRONG&gt;Subscribing to Data&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Subscribing to data in Solace is a straightforward process once the connection is established. It uses the same authentication credentials as the publisher to ensure consistency and security.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Use the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;same client username and password&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;that were used to publish messages.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;After a successful connection, navigate to the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Subscriber&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;section in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Try Me!&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;console.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Enter the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;exact topic path&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;used during publishing. Solace uses hierarchical topic structures, so the path must match exactly for the subscriber to receive the intended messages.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281025i47C2EDFCD0DF5B0F/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-11:&lt;/STRONG&gt;&lt;STRONG&gt;Verify Data and Status&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;After subscribing, you can check the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;data&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and its&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;status&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;at the bottom of the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Subscriber Panel&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 975px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281026i765904C081AFC77F/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Steps to Connect Solace to SAP CPI :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-1:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Go to the try me in the solace platform and copy the username and password in the solace that are provided.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="solace_basic.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281150i75595C24BC0852D3/image-size/large?v=v2&amp;amp;px=999" role="button" title="solace_basic.png" alt="solace_basic.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-2:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Go to your SAP Integration Suite and then go to the monitor page then go to the &lt;STRONG&gt;Security Material&amp;nbsp;&lt;/STRONG&gt;and add user credentials that copied for the solace.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="security material_solace.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281158i469B347C4FF76C14/image-size/large?v=v2&amp;amp;px=999" role="button" title="security material_solace.png" alt="security material_solace.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="basic_solace.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281159i33FE34D5C05BAB99/image-size/large?v=v2&amp;amp;px=999" role="button" title="basic_solace.png" alt="basic_solace.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-3:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;configure the sender Advance Event Mesh Adapter in the sap iflow&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aem.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281198iB8D671A430638C18/image-size/large?v=v2&amp;amp;px=999" role="button" title="aem.png" alt="aem.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Copy the Broker URL and username&amp;nbsp; from try me in the solace platform and give it in sap AEM sender adapter connection&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="solace_username.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281201i62CE12EBDCCB0842/image-size/large?v=v2&amp;amp;px=999" role="button" title="solace_username.png" alt="solace_username.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Fill the required fields and select the Basic Authentication&amp;nbsp; and give the password secure alias name as we given in the security material&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aen_conne.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281202i2D01F66EF8FE1F0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="aen_conne.png" alt="aen_conne.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In this way we can configure the solace to the sap cpi using Advance Event Mesh sender and Receiver Adapter&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This guide walked you through the complete setup of Solace Event Broker, from account creation to message publishing and subscription and sending data from sap and receiving from the solace.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;With topics, queues, and authentication configured, you now have a solid foundation for event-driven messaging.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/solace-to-sap-cpi-step-by-step-configuration-guide-from-scratch-part-2/ba-p/14141456"/>
    <published>2025-07-07T08:59:02.944000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/integrating-events-from-sap-sales-amp-service-cloud-v2-into-sap-btp-event/ba-p/14149212</id>
    <title>Integrating Events from SAP Sales &amp; Service Cloud V2 into SAP BTP Event Mesh</title>
    <updated>2025-07-14T12:59:29.701000+02:00</updated>
    <author>
      <name>pvsbprasad</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/7820</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The Event Mesh capability in SAP Integration Suite helps you manage your business events. You can publish and consume events across applications using Event Mesh&lt;/P&gt;&lt;P&gt;&lt;EM&gt;SAP Event Mesh supports event-driven architectures by enabling reliable communication between distributed applications using events and messaging queues. It decouples the sending and receiving applications, allowing for greater scalability, extensibility, and resilience.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;In the context of SAP Sales and Service Cloud V2, Event Mesh can be used to subscribe to business object events — such as a service ticket creation or sales quote update — and route them to downstream consumers like SAP BTP services, third-party APIs, or AI-based microservices.&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In this blog, we’ll walk through the &lt;STRONG&gt;end-to-end steps&lt;/STRONG&gt; to configure and integrate &lt;STRONG&gt;SAP Event Mesh&lt;/STRONG&gt; with &lt;STRONG&gt;Sales and Service Cloud V2&lt;/STRONG&gt; using &lt;STRONG&gt;SAP BTP&lt;/STRONG&gt; and &lt;STRONG&gt;CAP/CPI&lt;/STRONG&gt; as middleware.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_11-1752132918778.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284880i0D71F2EE31E589E9/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_11-1752132918778.png" alt="pvsbprasad_11-1752132918778.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_0-1752212488868.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285322i0B94A201799A2C37/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_0-1752212488868.png" alt="pvsbprasad_0-1752212488868.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1734319456"&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;Prerequisites&lt;/H2&gt;&lt;P&gt;Before you start, ensure:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Access to &lt;STRONG&gt;SAP BTP (Business Technology Platform)&lt;/STRONG&gt; with:&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;SAP Event Mesh&lt;/STRONG&gt; service entitlement&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP Integration Suite / CAP Runtime&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Access to &lt;STRONG&gt;SAP Sales and Service Cloud V2 (Autoflow)&lt;/STRONG&gt; with proper admin permissions&lt;/LI&gt;&lt;LI&gt;Knowledge of:&lt;UL&gt;&lt;LI&gt;Basics of Event Mesh&lt;/LI&gt;&lt;LI&gt;Handling OAuth tokens&lt;/LI&gt;&lt;LI&gt;Service Key consumption via REST/CPI/CAP&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1537805951"&gt;🧩 Step 1: Create and Configure Event Mesh Instance&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Login to BTP Cockpit&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Navigate to your &lt;STRONG&gt;Subaccount &amp;gt; Instances and Subscriptions&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Click &lt;STRONG&gt;Create &amp;gt; Instance&lt;/STRONG&gt; and choose:&lt;UL&gt;&lt;LI&gt;Service: event-mesh&lt;/LI&gt;&lt;LI&gt;Plan: default&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_1-1752131541785.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284866i242917F3AA705E79/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_1-1752131541785.png" alt="pvsbprasad_1-1752131541785.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Provide a name (e.g., event-mesh-salesv2) and click &lt;STRONG&gt;Create&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;After creation, go to the instance and &lt;STRONG&gt;create a service key&lt;/STRONG&gt;. Note the credentials (clientid, clientsecret, tokenurl, messaging, etc.).&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_4-1752131868748.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284870iB1AEC7293CF80399/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_4-1752131868748.png" alt="pvsbprasad_4-1752131868748.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1341292446"&gt;&lt;span class="lia-unicode-emoji" title=":locked_with_key:"&gt;🔐&lt;/span&gt;Step 2: Create and Configure Messaging Queue &amp;amp; Topic&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;Go to &lt;STRONG&gt;Event Mesh UI&lt;/STRONG&gt; via the subscribed application tile.&lt;/LI&gt;&lt;LI&gt;Go to &lt;STRONG&gt;Queues&lt;/STRONG&gt;:&lt;UL&gt;&lt;LI&gt;Create a new queue (e.g., salesv2/quotecreated)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Go to &lt;STRONG&gt;Topics&lt;/STRONG&gt;:&lt;UL&gt;&lt;LI&gt;Add topic (e.g., salesv2/order/*)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Bind it to the queue.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_5-1752132073480.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284873iB7E0953C40CEFCF9/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_5-1752132073480.png" alt="pvsbprasad_5-1752132073480.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_6-1752132128249.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284876i798A38945BBACB48/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_6-1752132128249.png" alt="pvsbprasad_6-1752132128249.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_7-1752132279903.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284878i3099292B038F5D0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_7-1752132279903.png" alt="pvsbprasad_7-1752132279903.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1144778941"&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt;Step 3: Enable Outbound Events in Sales and Service Cloud V2&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;In the &lt;STRONG&gt;SAP Sales &amp;amp; Service Cloud V2&lt;/STRONG&gt; admin console:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Navigate tor &lt;STRONG&gt;Extensibility Settings&amp;nbsp; or Autoflow&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Create or update an &lt;STRONG&gt;Communication System .&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Under the &lt;STRONG&gt;Outbound Events&amp;nbsp;&lt;/STRONG&gt;tab&lt;STRONG&gt;&amp;nbsp;or Autoflow&lt;/STRONG&gt;:&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;Add a new &lt;STRONG&gt;Event Topic&lt;/STRONG&gt; like salesv2/order/created&lt;/LI&gt;&lt;LI&gt;Provide &lt;STRONG&gt;Webhook URL or Messaging Endpoint&lt;/STRONG&gt; pointing to Event Mesh&lt;/LI&gt;&lt;LI&gt;Use &lt;STRONG&gt;OAuth2 Client Credentials&lt;/STRONG&gt; (from the Event Mesh service key)&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;Activate the arrangement.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;This ensures that every new order created in V2 will emit an event to Event Mesh.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Autoflow&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_12-1752133024337.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284883i0FB0D197D9622CE6/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_12-1752133024337.png" alt="pvsbprasad_12-1752133024337.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;External Hooks&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_13-1752133155999.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284887i37D460F43B7851EA/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_13-1752133155999.png" alt="pvsbprasad_13-1752133155999.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-948265436"&gt;&lt;span class="lia-unicode-emoji" title=":gear:"&gt;⚙️&lt;/span&gt;Step 4: Consume Events (Using SAP CPI or CAP)&lt;/H2&gt;&lt;H3 id="toc-hId-880834650"&gt;Option A: SAP CPI (Cloud Integration)&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;In &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;:&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;Create an &lt;STRONG&gt;iFlow&lt;/STRONG&gt; with an &lt;STRONG&gt;AMQP receiver adapter&lt;/STRONG&gt; configured with Event Mesh credentials.&lt;/LI&gt;&lt;LI&gt;Subscribe to the topic salesv2/order/created&lt;/LI&gt;&lt;LI&gt;Use a JSON/XML message converter to map incoming payloads.&lt;/LI&gt;&lt;LI&gt;Route to your target system (e.g., S/4HANA, SAP Build App, external API)&lt;/LI&gt;&lt;LI&gt;Here&amp;nbsp;we are not routing just checking payload&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_14-1752135402364.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284909iF31BB32FD2479A39/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_14-1752135402364.png" alt="pvsbprasad_14-1752135402364.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Send message to the queue&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The above CPI is built with below below details.&lt;/P&gt;&lt;P&gt;Open a new tab in the Postman.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Build the postman URL as below&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;https://&amp;lt;uri&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;of the rest protocol based section from&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Service Keys&lt;/STRONG&gt;&amp;gt;/messagingrest/v1/queues/&amp;lt;Queue name&amp;gt;/messages.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Queue name&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;is queue name along with the namespace. Replace the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;/&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;present in the namespace with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;%2fwhile executing.&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Open the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Headers&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;tab add below two key-value pairs.&lt;/P&gt;KEY VALUE &lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;x-qos&lt;/TD&gt;&lt;TD&gt;0 or 1&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;authorization&lt;/TD&gt;&lt;TD&gt;Bearer &amp;lt;the retrieved&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;access_token&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image_2025-07-11_110510778.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285318i553CB424A68B649D/image-size/large?v=v2&amp;amp;px=999" role="button" title="image_2025-07-11_110510778.png" alt="image_2025-07-11_110510778.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/LI&gt;&lt;LI&gt;Open the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Authorization&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;tab and select the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;TYPE&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;as&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;No Auth.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image_2025-07-11_110610947.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285319iF3EF1A6E8F459B4F/image-size/large?v=v2&amp;amp;px=999" role="button" title="image_2025-07-11_110610947.png" alt="image_2025-07-11_110610947.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;Open the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Body&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;tab and select the type as&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;raw&lt;/STRONG&gt;. And enter some test message in the body.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image_2025-07-11_110710080.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285320iF132272A5D367275/image-size/large?v=v2&amp;amp;px=999" role="button" title="image_2025-07-11_110710080.png" alt="image_2025-07-11_110710080.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Select the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;POST&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;option in&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Postman&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and click on the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Send&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;button. If sending message is successful, you shall get a status as&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;204 No Content.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-555238426"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-358724921"&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;Step 5: Test the End-to-End Flow&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;Create a Sales Quote in &lt;STRONG&gt;Sales Cloud V2&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Check:&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;Event is visible in &lt;STRONG&gt;Event Mesh Monitor&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Message is consumed by your &lt;STRONG&gt;CPI or CAP app and we can observe the payload&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Expected outcome is triggered (e.g., S/4HANA update, email, dashboard refresh)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;V2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_15-1752135549395.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284910i684EB0462B2A1916/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_15-1752135549395.png" alt="pvsbprasad_15-1752135549395.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;CPI &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_16-1752135751863.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284970iF227279D55C0A4CF/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_16-1752135751863.png" alt="pvsbprasad_16-1752135751863.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-162211416"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Conclusion&lt;/H2&gt;&lt;P&gt;Integrating &lt;STRONG&gt;SAP Event Mesh&lt;/STRONG&gt; with &lt;STRONG&gt;Sales and Service Cloud V2&lt;/STRONG&gt; unlocks powerful, real-time, event-driven capabilities. Whether you're using &lt;STRONG&gt;CPI&lt;/STRONG&gt;, &lt;STRONG&gt;CAP&lt;/STRONG&gt;, or external services, this setup allows scalable and decoupled architectures that respond instantly to business events.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/integrating-events-from-sap-sales-amp-service-cloud-v2-into-sap-btp-event/ba-p/14149212"/>
    <published>2025-07-14T12:59:29.701000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/designing-event-driven-architecture-with-solace-event-broker-and-error/ba-p/14139426</id>
    <title>Designing Event Driven Architecture with Solace Event Broker and Error Handling : part - 1</title>
    <updated>2025-07-15T12:16:37.611000+02:00</updated>
    <author>
      <name>pavanKolla</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2108029</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1733397892"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In Today's Digital world the Event driven architecture plays a major role in consuming and sending the data or messages without latency and securely.&lt;/P&gt;&lt;P&gt;In this blog series, I’ll introduce how EDA works, why it’s critical for modern Architectures, and how Solace Event Broker can help you build scalable, reliable event flows in your SAP landscape.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1536884387"&gt;&lt;STRONG&gt;What is Event-Driven Architecture?&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Event-Driven Architecture is one of the design pattern where events are created that what happened in a system are produced, published, and consumed asynchronously(Without triggering /calling it).&lt;/P&gt;&lt;P&gt;Here, An Event is the change of state with in the system(For example, I will take the amazon scenario for better understanding because we generally use in our daily lives, if you order a product or add it cart in amazon it will triggers an event to add that product into cart or purchases and if you purchasing any product it will goes to the payment page the backend triggers an event after purchasing you will get a conformation email automatically it all happens because of triggering of all the events there are many use cases as we can see regularly in daily life)&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;How it’s different from request-response:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here in the below table i had given the difference between a traditional model(Req-Res model) that we are using from the Decades to the Event Driven Model .&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;Request-Response Model&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; Event-Driven Model&lt;/STRONG&gt; &lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;Tightly coupled systems&lt;/TD&gt;&lt;TD&gt;Loosely coupled publishers and subscribers&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Synchronous calls&lt;/TD&gt;&lt;TD&gt;Asynchronous message passing&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Blocking waits&lt;/TD&gt;&lt;TD&gt;Event notifications&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Harder to scale&lt;/TD&gt;&lt;TD&gt;More scalable and resilient&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;Uses of Event Driven Architecture :&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Reduces dependencies between systems(Systems consume data through events not by the API Calls so it is loosely coupled ).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Enables faster reaction to business changes.(The Triggering of an Event happens in milliseconds as i mentioned in the above Amazon Example Scenario)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Supports scaling out consumers independently.(By using this architecture if any further upgrading or enhancing of architecture is because of loosely coupled between systems&amp;nbsp; )&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1340370882"&gt;&lt;STRONG&gt;Common EDA Use Cases&lt;/STRONG&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Order Fulfillment:&lt;/STRONG&gt; When a customer places an order, publish an event. Warehouse, billing, and CRM services subscribe and react automatically, like&amp;nbsp; i mentioned above in amazon example.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Customer Notifications:&lt;/STRONG&gt; Publish events when status changes occur, triggering emails or SMS in real time scenario.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP Integrations:&lt;/STRONG&gt; Connect SAP S/4HANA events with cloud applications, third-party services, or data lakes .&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1143857377"&gt;&lt;STRONG&gt;What is Solace Event Broker?&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Solace Event Broker is a high-performance event broker(where publisher publish the data and subscribers would consume the data) and&amp;nbsp; it acts as the backbone of our EDA.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;How it fits with SAP:&lt;/STRONG&gt;&lt;BR /&gt;Solace provides a flexible platform to integrate with SAP :&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Publish SAP events (from S/4HANA or other apps).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Consume them in SAP Integration Suite (CPI).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Integrate non-SAP systems in real-time.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-947343872"&gt;&lt;STRONG&gt;What You Will Learn in This Blog Series&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In this series, I will show you step by step implementation of EDA using Solace:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Blog-1: Introduction to Event Driven Architecture&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Blog-2: Setting up Solace Event Broker&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Blog-3: Designing event-driven architecture and flow diagrams&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Blog-4: Publishing events from Postman&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Blog-5: &lt;/STRONG&gt;&lt;STRONG&gt;Subscribing to events in SAP CPI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Blog-6: Testing and monitoring your event flows&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Stay tuned ! for further complete series.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/designing-event-driven-architecture-with-solace-event-broker-and-error/ba-p/14139426"/>
    <published>2025-07-15T12:16:37.611000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/designing-an-event-driven-integration-architecture-with-solace-architecture/ba-p/14139458</id>
    <title>Designing an Event-Driven Integration Architecture with Solace : Architecture and Design : part-3</title>
    <updated>2025-07-17T07:14:43.460000+02:00</updated>
    <author>
      <name>pavanKolla</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2108029</uri>
    </author>
    <content>&lt;P&gt;Hello SAP Community!&lt;/P&gt;&lt;P&gt;This architecture follows a &lt;STRONG&gt;3-layer design pattern&lt;/STRONG&gt;&amp;nbsp;that the first layer is &lt;STRONG&gt;Routing layer&lt;/STRONG&gt;, second layer is &lt;STRONG&gt;Transformation layer&lt;/STRONG&gt;, and third layer is the &lt;STRONG&gt;Subscriber layer.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here is the detail architecture of the end to end scenario :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ed_sol.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280119iB65D767E3376223C/image-size/large?v=v2&amp;amp;px=999" role="button" title="ed_sol.png" alt="ed_sol.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1733397987"&gt;&lt;STRONG&gt;Architecture Layers&lt;/STRONG&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-1665967201"&gt;&lt;STRONG&gt;Layer 1 – Routing Layer&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Overview:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Receives incoming HTTPS requests (e.g., product data sent via Postman or an external system) like i will send the data from the postman.&lt;/LI&gt;&lt;LI&gt;Determines what kind of payload has arrived (products or suppliers) with the help of Groovy Script that i declared in the first layer.&lt;/LI&gt;&lt;LI&gt;Routes it to the appropriate processing flow by using the process direct adapter but the target second layer name would comes from the groovy script.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;How it works:&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Setup&amp;nbsp; as an HTTPS endpoint in SAP CPI.&lt;/LI&gt;&lt;LI&gt;Uses a &lt;STRONG&gt;Content-Based Router&lt;/STRONG&gt; to inspect the payload by using groovy script.&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;For example:(here there are 2 separate iflows for my layer-2 that i mentioned in the architecture)&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;If payload type = &lt;EM&gt;Product then request&amp;nbsp;&amp;nbsp;&lt;/EM&gt;forward to &lt;STRONG&gt;Products Layer 2 iFlow&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;If payload type = &lt;EM&gt;Supplier then request&amp;nbsp;&lt;/EM&gt;&amp;nbsp;forward to &lt;STRONG&gt;Suppliers Layer 2 iFlow&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Routing happens with the help of&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;ProcessDirect adapter&lt;/STRONG&gt; (Within the same tenant)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Layer 2 – Transformation Layer&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;This layer is split into &lt;STRONG&gt;two dedicated iFlows&lt;/STRONG&gt;&amp;nbsp;for my scenario if you want scale it you can scale upto to many publishers&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;1.Products -Layer 2 iFlow :&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Here the incoming data would be type of products data&lt;/LI&gt;&lt;LI&gt;Connects to &lt;STRONG&gt;Solace Event Broker&lt;/STRONG&gt; using the &lt;STRONG&gt;SAP Event Mesh Adapter &lt;/STRONG&gt;(The all setup i mentioned in detail in the part 2).&lt;/LI&gt;&lt;LI&gt;Publishes the event to the &lt;STRONG&gt;Products Queue&lt;/STRONG&gt; in Solace.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;2.Suppliers - Layer 2 iFlow:&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;(In this scenario, not triggered since the we are hitting products payload from the postman.)&lt;/LI&gt;&lt;LI&gt;Would do similar transformations for supplier data and publish to a separate queue(Suppliers queue).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Layer 3 – Subscriber Layer :&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;In this layer we can pick the data the from the solace queue and send the final data to the sftp or s/4 Hana cloud&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;How it works:&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;An iFlow is configured with an &lt;STRONG&gt;Event Mesh Receiver Adapter&lt;/STRONG&gt; (or Solace JMS Adapter) connected to the &lt;STRONG&gt;Products Queue&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;As soon as a new message arrives, CPI picks it up automatically.&lt;/LI&gt;&lt;LI&gt;It then maps the payload to the target format and posts it further via HTTP, OData, or other adapters to the target.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;The entire architecture and the adapters are&amp;nbsp; used as shown in the architectural&amp;nbsp; diagram above and this architecture would helps to use both error handling and event driven architecture in the sap cpi.&lt;/LI&gt;&lt;LI&gt;In the next blogs, I’ll share step-by-step setup and testing guides to help you implement this in your own projects. Stay tuned!&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/designing-an-event-driven-integration-architecture-with-solace-architecture/ba-p/14139458"/>
    <published>2025-07-17T07:14:43.460000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-postman-to-solace-event-publishing-using-sap-cpi/ba-p/14151036</id>
    <title>Event driven architecture Postman to Solace: Event Publishing Using SAP CPI  : part-4</title>
    <updated>2025-07-20T14:40:42.941000+02:00</updated>
    <author>
      <name>pavanKolla</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2108029</uri>
    </author>
    <content>&lt;P&gt;Hello SAP Community!&lt;/P&gt;&lt;P&gt;In this blog i would like to share the implementation of publisher part of my use case Event driven architecture using solace Event broker.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-1 : Setup a postman :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use the method POST and use the SAP cpi endpoint in the url section&amp;nbsp; and hit with the target payload that i am given below&lt;/P&gt;&lt;P&gt;Payload:&lt;/P&gt;&lt;P&gt;If its product's:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Products&amp;gt;
    &amp;lt;Product&amp;gt;
        &amp;lt;ProductID&amp;gt;P1001&amp;lt;/ProductID&amp;gt;
        &amp;lt;ProductName&amp;gt;Wireless Mouse&amp;lt;/ProductName&amp;gt;
        &amp;lt;Category&amp;gt;Electronics&amp;lt;/Category&amp;gt;
        &amp;lt;Price&amp;gt;25.99&amp;lt;/Price&amp;gt;
        &amp;lt;Currency&amp;gt;USD&amp;lt;/Currency&amp;gt;
        &amp;lt;StockQuantity&amp;gt;150&amp;lt;/StockQuantity&amp;gt;
        &amp;lt;UnitOfMeasure&amp;gt;EA&amp;lt;/UnitOfMeasure&amp;gt;
        &amp;lt;Supplier&amp;gt;LogiTech Inc.&amp;lt;/Supplier&amp;gt;
    &amp;lt;/Product&amp;gt;
 &amp;lt;/Products&amp;gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If it's suppliers :&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Suppliers&amp;gt;
    &amp;lt;Supplier&amp;gt;
        &amp;lt;ID&amp;gt;P1001&amp;lt;/ID&amp;gt;
        &amp;lt;Name&amp;gt;Wireless Mouse&amp;lt;/Name&amp;gt;
        &amp;lt;Category&amp;gt;Electronics&amp;lt;/Category&amp;gt;
        &amp;lt;Price&amp;gt;27.99&amp;lt;/Price&amp;gt;
        &amp;lt;Currency&amp;gt;USD&amp;lt;/Currency&amp;gt;
        &amp;lt;StockQuantity&amp;gt;200&amp;lt;/StockQuantity&amp;gt;
        &amp;lt;UnitOfMeasure&amp;gt;EA&amp;lt;/UnitOfMeasure&amp;gt;
        &amp;lt;Supplier&amp;gt;LogiTech Inc.&amp;lt;/Supplier&amp;gt;
    &amp;lt;/Supplier&amp;gt;
&amp;lt;/Suppliers&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step-2: Implementing layer-1-Routing layer:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1.start with HTTPS sender adapter&lt;/P&gt;&lt;P&gt;2.Add the Groovy Script to separate the target 2nd layer&lt;/P&gt;&lt;P&gt;Here is the groovy code :&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.util.XmlSlurper

Message processData(Message message) {
    def body = message.getBody(String) // Get XML as a string
    def xml = new XmlSlurper().parseText(body) // Parse XML

    def targetRoute = ""

    // Check the root element or a specific tag (adjust as needed)
    if (xml.name() == "Products") {
        targetRoute = "publisher_solace_inbound_products_layer-2"
    } else if (xml.name() == "Suppliers") {
        targetRoute = "publisher_solace_inbound_suppliers_layer_2"
    } else {
        targetRoute = "publisher_solace_inbound_books_layer_2"
    }

    message.setProperty("routeTo", targetRoute) // Store the route in a property
    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Implementation: This is the Routing layer paste the groovy code that i given above .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="layer1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285791iF48C381B451E6CC3/image-size/large?v=v2&amp;amp;px=999" role="button" title="layer1.png" alt="layer1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the Exception Handling like the below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1ex.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285793i034C0EBC623E6091/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1ex.png" alt="l1ex.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Declare the content modifier like below add Exchange properties like below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1cm1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285792i7E82A8BC3E4CC29C/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1cm1.png" alt="l1cm1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Add the routing condition to separate whether it is recoverable/non-recoverable errors&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1r1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285798i2BEB5132CC69BB50/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1r1.png" alt="l1r1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1r2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285799i63C98E8D05D6DDCB/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1r2.png" alt="l1r2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Based the routing condition above implement the Local Integration Process separately this is the&amp;nbsp;Local Integration Process for the retry purpose called by using process call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip1.png" style="width: 713px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285794iC71111671BFF36F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip1.png" alt="l1lip1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the content modifier as like the below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lipcm1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285800i9F49724C5DD8D6B7/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lipcm1.png" alt="l1lipcm1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Through process direct adapter call the another layers that are global retry layers and jms retry for retry purpose&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip1processdir.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285803i580F57A13C5E319E/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip1processdir.png" alt="l1lip1processdir.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Based the routing condition above implement the Local Integration Process separately this is the&amp;nbsp;Local Integration Process for the Mail triggering if any Business logic/non-recoverable error occurs called by using process call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip2.png" style="width: 697px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285795i85B14D3622E34C66/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip2.png" alt="l1lip2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the content modifier like the below for mail triggering&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip2cm1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285801i88F68C1F014C0191/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip2cm1.png" alt="l1lip2cm1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Through process direct adapter call the mail triggering iflow&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip2processdir.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285804iCBB81ECE35FC195B/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip2processdir.png" alt="l1lip2processdir.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-3 : Implementing layer -2: publishing layer :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here in this layer the data which is coming from the layer 1 is published to the solace queues and in this layer there are multiple layer-2's like products layer2 ,suppliers layer2,books layer2 bases on the first layer the target 2nd layer been hitted.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Implementation:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Configure the Process direct sender adapter that is coming from the layer-1&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="layer2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285806i754DFB221444871C/image-size/large?v=v2&amp;amp;px=999" role="button" title="layer2.png" alt="layer2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2processdirect.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285813iC9BC2FB6DB5A2FF1/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2processdirect.png" alt="l2processdirect.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure the Advance Event Mesh adapter to publish the data into the solace queues, before configuring it make sure you had setup the solace credentials in the Security material that i had given in the part-2 of my blog series&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2aemq.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285807i085F908775E53A57/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2aemq.png" alt="l2aemq.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2aemq2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285808iF7E9F37A30C0DE50/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2aemq2.png" alt="l2aemq2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Setup the Exception handling for retry purpose&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2ex.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285809iC2E0965EFC5D7620/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2ex.png" alt="l2ex.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the Local Integration process for retry purpose&amp;nbsp; as same as the layer-1 above&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2lip1.png" style="width: 732px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285810i1F04D0EE85B899F7/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2lip1.png" alt="l2lip1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the Local Integration process for mail triggering as same like the layer -1 above&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2lip2.png" style="width: 702px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285811i2E9A319F0145CB4E/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2lip2.png" alt="l2lip2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you want to know how to implement Error handling using jms please refer my blog .&lt;/P&gt;&lt;P&gt;Link - [ &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/handling-connectivity-and-recoverable-errors-in-sap-cpi-with-jms-queues/ba-p/14137974" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/handling-connectivity-and-recoverable-errors-in-sap-cpi-with-jms-queues/ba-p/14137974&lt;/A&gt;&amp;nbsp;]&lt;/P&gt;&lt;P&gt;I would continue the Subscriber part in the part-5 Stay tuned!!!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-postman-to-solace-event-publishing-using-sap-cpi/ba-p/14151036"/>
    <published>2025-07-20T14:40:42.941000+02:00</published>
  </entry>
</feed>
