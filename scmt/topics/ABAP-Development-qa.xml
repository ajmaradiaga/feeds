<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/ABAP-Development-qa.xml</id>
  <title>SAP Community - ABAP Development</title>
  <updated>2025-10-04T23:00:04.470892+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/ABAP Development/pd-p/833755570260738661924709785639136" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>ABAP Development Q&amp;A in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/partial-unpacking-of-handling-unit-for-outbound-delivery-orders/qaq-p/14229435</id>
    <title>Partial Unpacking of Handling Unit for Outbound delivery orders</title>
    <updated>2025-09-27T00:21:48.742000+02:00</updated>
    <author>
      <name>jctx15</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/889959</uri>
    </author>
    <content>&lt;P&gt;Hello - I was curious if there are function modules that can allow us to do a partial unpacking of a item for an HU. We have a SAP program that utilizes the FM "HU_UNPACK" which unpacks the entire item quantity.&amp;nbsp;&lt;/P&gt;&lt;P&gt;If for example, a HU had an item of quantity 10, would I be able to unpack only a quantity of 2 from the HU? I was poking around in VL02N&amp;nbsp; and we can do a partial item quantity to pack, but it did not seem we can do it for unpacking.&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/partial-unpacking-of-handling-unit-for-outbound-delivery-orders/qaq-p/14229435"/>
    <published>2025-09-27T00:21:48.742000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-q-a/bapi-fm-to-get-gl-account-line-items/qaq-p/14230485</id>
    <title>BAPI/FM to get GL account line items</title>
    <updated>2025-09-29T13:49:21.095000+02:00</updated>
    <author>
      <name>jan_turek</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/188867</uri>
    </author>
    <content>&lt;P&gt;Hi all,&lt;/P&gt;&lt;P&gt;I'm looking for a BAPI / FM to get GL account line items. My need is only for PL accounts (no OI management), primary key must be account number, limitation by period / posting date.&amp;nbsp;New GL active. CO object is needed.&lt;/P&gt;&lt;P&gt;Sorry if it is obvious but I was not able to find a suitable solution. Before I go for something like BKPF-&amp;gt;BSEG, I'd like to use some systematic solution.&lt;/P&gt;&lt;P&gt;thanks to all!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-q-a/bapi-fm-to-get-gl-account-line-items/qaq-p/14230485"/>
    <published>2025-09-29T13:49:21.095000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/any-api-to-get-all-users-which-would-respond-positively-to-a-given/qaq-p/14230612</id>
    <title>Any API to get all users which would respond positively to a given AUTHORITY-CHECK?</title>
    <updated>2025-09-29T15:57:27.136000+02:00</updated>
    <author>
      <name>Sandra_Rossi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/145194</uri>
    </author>
    <content>&lt;P&gt;Hi,&lt;/P&gt;&lt;P&gt;In the flexible workflow, I'm asked to implement the method RESPONSIBILITY_RULE of the BAdI RSM_BADI_STATIC_RULE, to return the agents who have a given authorization e.g., AUTHORITY-CHECK 'ZZZZZ' FOR USER user ID field1 FIELD value1 ID field2 FIELD value2, etc. The workflow task can then be processed by any of these agents.&lt;/P&gt;&lt;P&gt;For information, our authorization values contain wildcards (values *, CX3101*) or are fixed (CX32). No intervals.&lt;/P&gt;&lt;P&gt;Is there any official (released) API which does that, or do you have any other recommendation?&lt;/P&gt;&lt;P&gt;I have searched a little bit:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The only API authorization query I know, CL_AUTH_OBJECTS_TO_SQL (cf. ABAP Keyword documentation) is not relevant for this query. It transforms some authorizations of the current user into a WHERE clause to select the values from a given database table (to avoid selecting all the lines and then removing the forbidden values by LOOP AT + AUTHORITY-CHECK).&lt;/LI&gt;&lt;LI&gt;The function module&amp;nbsp;SUSR_GET_PROFS_WITH_SPEC_OBJCT (followed by LOOP AT + AUTHORITY-CHECK) can do the job but is not released and is a little bit slow. Its logic is:&lt;UL&gt;&lt;LI&gt;All accesses to the database tables is without buffer&lt;/LI&gt;&lt;LI&gt;Get all the authorizations corresponding to the authorization object (USR12)&lt;/LI&gt;&lt;LI&gt;LOOP AT the authorizations&lt;UL&gt;&lt;LI&gt;Get the profiles corresponding to these authorizations (UST10S)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Get the subprofiles of these profiles via FOR ALL ENTRIES (UST10C)&lt;/LI&gt;&lt;LI&gt;Get all the users corresponding to these profiles and subprofiles via FOR ALL ENTRIES (UST04)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Reading directly the database tables above, with a join. I just did a test and it's faster (with HANA)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Thanks.&lt;/P&gt;&lt;P&gt;Sandra&lt;/P&gt;&lt;P&gt;PS: my system is S/4HANA On Premises, ABAP 7.58.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/any-api-to-get-all-users-which-would-respond-positively-to-a-given/qaq-p/14230612"/>
    <published>2025-09-29T15:57:27.136000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/free-selections-dialog-to-display-filters-and-i-created-a-button-via-se41/qaq-p/14230631</id>
    <title>FREE_SELECTIONS_DIALOG to display filters, and I created a button via SE41.</title>
    <updated>2025-09-29T16:07:53.682000+02:00</updated>
    <author>
      <name>trabelsioussa</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/825427</uri>
    </author>
    <content>&lt;P class=""&gt;&lt;SPAN&gt;I'm using&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;FREE_SELECTIONS_DIALOG&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;to display filters, and I created a button via SE41. I'm trying to show both components in the same interface. While I managed to display them together, the logic and button arenâ€™t working.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;Has anyone implemented something similar or faced this issue? Thanks in advance!&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/free-selections-dialog-to-display-filters-and-i-created-a-button-via-se41/qaq-p/14230631"/>
    <published>2025-09-29T16:07:53.682000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/f0797-app-extension-odata-service-manage-billing-docs/qaq-p/14230656</id>
    <title>F0797 App Extension OData Service - Manage Billing Docs.</title>
    <updated>2025-09-29T16:19:40.774000+02:00</updated>
    <author>
      <name>zajde1jc</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1758013</uri>
    </author>
    <content>&lt;P&gt;Hello Experts,&lt;/P&gt;&lt;P&gt;I have successfully created a Fiori Extension Project in BAS for Fiori App F0797: Manage Billing Documents. I added a new custom action/button to the worklistview. The new button will update the billing date for the records selected in the worklist. In my app preview, the button is displayed correctly, and the popup is also working as expected and provided the user with the option to select the new billing date.&lt;/P&gt;&lt;P&gt;How to tie this to the backend SAP system for processing?&lt;BR /&gt;The OData project in SEGW is&amp;nbsp;&lt;STRONG&gt;SD_CUSTOMER_INVOICES_MANAGE&lt;/STRONG&gt;. My question is, do I need to create a copy of this project and add my custom logic in the DPC_EXT class?&amp;nbsp; Or, am I able to create a new service entirely and add it to my Extension project in BAS? The new service would only be enabled for my custom action/button. What is the preferred approach when extending Fiori Apps which are UI5 based?&lt;/P&gt;&lt;P&gt;Attached are my worklist custom controller.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Br,&lt;BR /&gt;Jared&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/f0797-app-extension-odata-service-manage-billing-docs/qaq-p/14230656"/>
    <published>2025-09-29T16:19:40.774000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-q-a/add-additional-column-to-the-va02-va03-incompletion-log/qaq-p/14230883</id>
    <title>Add additional column to the Va02,Va03 incompletion log.</title>
    <updated>2025-09-29T19:11:22.166000+02:00</updated>
    <author>
      <name>winona8689</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/829794</uri>
    </author>
    <content>&lt;P&gt;Hi All,&lt;/P&gt;&lt;P&gt;Is it possible to add new additional column to the incompletion log of va02, va03.&lt;/P&gt;&lt;P&gt;My requirement is like below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-q-a/add-additional-column-to-the-va02-va03-incompletion-log/qaq-p/14230883"/>
    <published>2025-09-29T19:11:22.166000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/basic-code-s-of-abap/qaq-p/14231152</id>
    <title>Basic code's of ABAP</title>
    <updated>2025-09-30T06:38:10.002000+02:00</updated>
    <author>
      <name>RakeshZore</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1759317</uri>
    </author>
    <content>&lt;P&gt;This blog consists of Basic code's of ABAP which can help most of the Beginner to understand and use it with simple replacements.....&lt;/P&gt;&lt;P&gt;Content of the post.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Display of Data using&amp;nbsp;REUSE_ALV_GRID&lt;/LI&gt;&lt;LI&gt;Display of data using Class method and also screen validation error&lt;/LI&gt;&lt;LI&gt;Modify Table in runtime using&amp;nbsp;REUSE_ALV_GRID_DISPLAY.&lt;/LI&gt;&lt;LI&gt;Error handling using message class code.&lt;/LI&gt;&lt;LI&gt;Spool Generation code.&lt;/LI&gt;&lt;LI&gt;Selection Screen code for visibility of parameters according to requirements.&lt;/LI&gt;&lt;LI&gt;Excel upload using&amp;nbsp;TEXT_CONVERT_XLS_TO_SAP&lt;/LI&gt;&lt;LI&gt;Table Maintenance code for Create, display and update data without SM30 and excel upload of data to create data using FM 'ALSM_EXCEL_TO_INTERNAL_TABLE'&lt;/LI&gt;&lt;LI&gt;Send Mail with Excel and PDF attachments.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;BR /&gt;1. Display of Data using&amp;nbsp;REUSE_ALV_GRID&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT1.

TABLES : BSEG, MARA, MARD.

TYPE-POOLS : SLIS.

*INPUTS
PARAMETERS : R_ACCNO TYPE BSEG-BELNR,
R_FYEAR TYPE BSEG-GJAHR.

*DECLARATIONS OF NEEDED COMPONENTS
DATA : IT_BSEG TYPE STANDARD TABLE OF BSEG,
WA_BSEG TYPE BSEG,
IT_MARA TYPE STANDARD TABLE OF MARA,
WA_MARA TYPE MARA,
IT_MARD TYPE STANDARD TABLE OF MARD,
WA_MARD TYPE MARD.

*CREATING TABLE STRUCTURE FOR FINAL OUTPUT
TYPES : BEGIN OF TY_STRUC,

MATNR TYPE BSEG-MATNR,
BELNR TYPE BSEG-BELNR,
GJAHR TYPE BSEG-GJAHR,
ERNAM TYPE MARA-ERNAM,
AENAM TYPE MARA-AENAM,
LGORT TYPE MARD-LGORT,
END OF TY_STRUC.

DATA : IT_FINAL TYPE STANDARD TABLE OF TY_STRUC,
WA_FINAL TYPE TY_STRUC.

DATA : IT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
WA_FIELDCAT LIKE LINE OF IT_FIELDCAT.

*CONDITION FOR TAKING INPUTS AND ALSO ADDING DATA OF BSEG IN THE INTERNAL TABLE.
IF R_ACCNO IS NOT INITIAL AND R_FYEAR IS NOT INITIAL.

SELECT BELNR MATNR GJAHR FROM BSEG INTO CORRESPONDING FIELDS OF TABLE IT_BSEG WHERE BELNR = R_ACCNO AND GJAHR = R_FYEAR.

ELSEIF R_ACCNO IS NOT INITIAL AND R_FYEAR IS INITIAL.

SELECT BELNR MATNR GJAHR FROM BSEG INTO CORRESPONDING FIELDS OF TABLE IT_BSEG WHERE BELNR = R_ACCNO.

ELSEIF R_ACCNO IS INITIAL AND R_FYEAR IS NOT INITIAL.

SELECT BELNR MATNR GJAHR FROM BSEG INTO CORRESPONDING FIELDS OF TABLE IT_BSEG WHERE GJAHR = R_FYEAR.

ELSEIF R_ACCNO IS INITIAL AND R_FYEAR IS INITIAL.

SELECT BELNR MATNR GJAHR FROM BSEG INTO CORRESPONDING FIELDS OF TABLE IT_BSEG.

ENDIF.

*DELETING THE DUPLICATES WITH RESPECT TO MATNR
*DELETE ADJACENT DUPLICATES FROM IT_BSEG COMPARING MATNR.

*NOW ADDING CONTENT OF MARA AND MARD INTO THE INTERNAL TABLE RESPECTIVELY USING MATNR AS FOREIGN KEY
SELECT MATNR ERNAM AENAM FROM MARA INTO CORRESPONDING FIELDS OF TABLE IT_MARA FOR ALL ENTRIES IN IT_BSEG WHERE MATNR = IT_BSEG-MATNR.

SELECT MATNR LGORT FROM MARD INTO CORRESPONDING FIELDS OF TABLE IT_MARD FOR ALL ENTRIES IN IT_MARA WHERE MATNR = IT_MARA-MATNR.

*MERGING ALL THE DATA INTO FINAL INTERNAL TABLE
LOOP AT IT_BSEG INTO WA_BSEG.

READ TABLE IT_MARA INTO WA_MARA WITH KEY MATNR = WA_BSEG-MATNR .

READ TABLE IT_MARD INTO WA_MARD WITH KEY MATNR = WA_MARA-MATNR.

WA_FINAL-MATNR = WA_MARA-MATNR.
WA_FINAL-BELNR = WA_BSEG-BELNR.
WA_FINAL-GJAHR = WA_BSEG-GJAHR.
WA_FINAL-ERNAM = WA_MARA-ERNAM.
WA_FINAL-AENAM = WA_MARA-AENAM.
WA_FINAL-LGORT = WA_MARD-LGORT.

APPEND WA_FINAL TO IT_FINAL.

ENDLOOP.

*DELETING THE DUPLICATES WITH RESPECT TO MATNR
DELETE ADJACENT DUPLICATES FROM IT_FINAL COMPARING MATNR.

WA_FIELDCAT-FIELDNAME = 'MATNR'.
WA_FIELDCAT-SELTEXT_M = 'MATERIAL NUMBER'.
WA_FIELDCAT-OUTPUTLEN = '18'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME = 'BELNR'.
WA_FIELDCAT-SELTEXT_M = 'ACCOUNT DOCUMENT NUMBER'.
WA_FIELDCAT-OUTPUTLEN = '10'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME = 'GJAHR'.
WA_FIELDCAT-SELTEXT_M = 'FISCAL YEAR'.
WA_FIELDCAT-OUTPUTLEN = '4'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME = 'ERNAM'.
WA_FIELDCAT-SELTEXT_M = 'CREATED BY'.
WA_FIELDCAT-OUTPUTLEN = '12'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME = 'AENAM'.
WA_FIELDCAT-SELTEXT_M = 'CHANGED BY'.
WA_FIELDCAT-OUTPUTLEN = '12'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME = 'LGORT'.
WA_FIELDCAT-SELTEXT_M = 'STORAGE LOCATION'.
WA_FIELDCAT-OUTPUTLEN = '4'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.




CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
EXPORTING
IT_FIELDCAT = IT_FIELDCAT
TABLES
T_OUTTAB = IT_FINAL
* EXCEPTIONS
* PROGRAM_ERROR = 1
* OTHERS = 2
.
IF SY-SUBRC &amp;lt;&amp;gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
* WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;2. Display of data using Class method and also screen validation error&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT2.

PARAMETERS : EMP_ID TYPE PA0000-PERNR.

DATA: WA_PA00 TYPE PA0000,
WA_PA2 TYPE PA0002.

AT SELECTION-SCREEN .

SELECT SINGLE * FROM PA0000 INTO WA_PA00 WHERE PERNR = EMP_ID.
SELECT SINGLE * FROM PA0002 INTO WA_PA2 WHERE PERNR = WA_PA00-PERNR.

IF WA_PA2-PERNR IS INITIAL.
MESSAGE 'EMPLOYEE NOT PRESENT' TYPE 'E'.

ENDIF.

CLASS EMP_MAIN DEFINITION.
PUBLIC SECTION.
METHODS : GET_DATA,
DISPLAY.

PRIVATE SECTION.
DATA: IT_PA02 TYPE STANDARD TABLE OF PA0002,
WA_PA02 TYPE PA0002.


TYPES: BEGIN OF TY_STRUC,
EMP_ID TYPE PA0002-PERNR,
LAST_NAME TYPE PA0002-NACHN,
FIRST_NAME TYPE PA0002-VORNA,
DOB TYPE PA0002-GBDAT,
GENDER TYPE ZGENDER,

END OF TY_STRUC.


DATA : IT_ANS TYPE STANDARD TABLE OF TY_STRUC,
WA_ANS TYPE TY_STRUC.

ENDCLASS.

CLASS EMP_MAIN IMPLEMENTATION.
METHOD GET_DATA.


SELECT PERNR NACHN VORNA GBDAT GESCH FROM PA0002 INTO CORRESPONDING FIELDS OF TABLE ME-&amp;gt;IT_PA02 WHERE PERNR = EMP_ID.

LOOP AT ME-&amp;gt;IT_PA02 INTO ME-&amp;gt;WA_PA02.
ME-&amp;gt;WA_ANS-EMP_ID = ME-&amp;gt;WA_PA02-PERNR.
ME-&amp;gt;WA_ANS-LAST_NAME = ME-&amp;gt;WA_PA02-NACHN.
ME-&amp;gt;WA_ANS-FIRST_NAME = ME-&amp;gt;WA_PA02-VORNA.
ME-&amp;gt;WA_ANS-DOB = ME-&amp;gt;WA_PA02-GBDAT.

IF ME-&amp;gt;WA_PA02-GESCH = 1.
ME-&amp;gt;WA_ANS-GENDER = 'M-YES'.
ELSE.
ME-&amp;gt;WA_ANS-GENDER = 'F-YES'.
ENDIF.

APPEND ME-&amp;gt;WA_ANS TO ME-&amp;gt;IT_ANS.

ENDLOOP.

ENDMETHOD.

METHOD DISPLAY.
DATA : LR_TABLE TYPE REF TO CL_SALV_TABLE.
CL_SALV_TABLE=&amp;gt;FACTORY( IMPORTING R_SALV_TABLE = LR_TABLE
CHANGING T_TABLE = ME-&amp;gt;IT_ANS ).
LR_TABLE-&amp;gt;DISPLAY( ).
ENDMETHOD.
ENDCLASS.

START-OF-SELECTION.

DATA LR_MAIN TYPE REF TO EMP_MAIN.

CREATE OBJECT LR_MAIN.
LR_MAIN-&amp;gt;GET_DATA( ).

LR_MAIN-&amp;gt;DISPLAY( ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;3. Modify Table in runtime using&amp;nbsp;REUSE_ALV_GRID_DISPLAY.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT3.

DATA WA_MS TYPE ZMATERIAL_SALES.

TYPE-POOLS : SLIS.

SELECT-OPTIONS: DATE FOR WA_MS-C_DATE.

DATA: IT_SO TYPE TABLE OF ZMATERIAL_SALES,
IT_CY TYPE TABLE OF ZMATERIAL_SALES,
WA_SO TYPE ZMATERIAL_SALES,
WA_CY TYPE ZMATERIAL_SALES.


DATA : IT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
WA_FIELDCAT LIKE LINE OF IT_FIELDCAT.

START-OF-SELECTION.

IF DATE IS NOT INITIAL.
PERFORM FETCH USING DATE[] CHANGING IT_SO.
ELSE.
SELECT * FROM ZMATERIAL_SALES INTO TABLE IT_SO.
ENDIF.

IT_CY = IT_SO.

PERFORM FIELD_CATALOG.



CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM = SY-REPID
I_CALLBACK_USER_COMMAND = 'SAVE'
IT_FIELDCAT = IT_FIELDCAT
TABLES
T_OUTTAB = IT_SO
EXCEPTIONS
PROGRAM_ERROR = 1
OTHERS = 2
.
IF SY-SUBRC &amp;lt;&amp;gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
* WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.



FORM FETCH USING P_DATE LIKE DATE[]
CHANGING P_IT_SO LIKE IT_SO.
SELECT * FROM ZMATERIAL_SALES INTO TABLE P_IT_SO WHERE C_DATE IN P_DATE.

ENDFORM. " FETCH




FORM FIELD_CATALOG .

WA_FIELDCAT-COL_POS = 1.
WA_FIELDCAT-FIELDNAME = 'MATNR'.
WA_FIELDCAT-SELTEXT_M = 'Material no.'.
WA_FIELDCAT-OUTPUTLEN = '18'.
WA_FIELDCAT-KEY = 'X'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-COL_POS = 2.
WA_FIELDCAT-FIELDNAME = 'VBELN'.
WA_FIELDCAT-SELTEXT_M = 'Sales Doc no.'.
WA_FIELDCAT-OUTPUTLEN = '10'.
WA_FIELDCAT-KEY = 'X'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-COL_POS = 3.
WA_FIELDCAT-FIELDNAME = 'MAT_DESC'.
WA_FIELDCAT-SELTEXT_M = 'Material Discription'.
WA_FIELDCAT-OUTPUTLEN = '40'.
WA_FIELDCAT-EDIT = 'X'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-COL_POS = 4.
WA_FIELDCAT-FIELDNAME = 'SAL_DESC'.
WA_FIELDCAT-SELTEXT_M = 'Sales DiscrIption'.
WA_FIELDCAT-OUTPUTLEN = '40'.
WA_FIELDCAT-EDIT = 'X'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-COL_POS = 5.
WA_FIELDCAT-FIELDNAME = 'QUANT'.
WA_FIELDCAT-SELTEXT_M = 'Quantity'.
WA_FIELDCAT-OUTPUTLEN = '12'.
WA_FIELDCAT-EDIT = 'X'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-COL_POS = 6.
WA_FIELDCAT-FIELDNAME = 'PRICE'.
WA_FIELDCAT-SELTEXT_M = 'Price'.
WA_FIELDCAT-OUTPUTLEN = '4'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-COL_POS = 7.
WA_FIELDCAT-FIELDNAME = 'C_DATE'.
WA_FIELDCAT-SELTEXT_M = 'Date Of Creation'.
WA_FIELDCAT-OUTPUTLEN = '8'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

ENDFORM.


FORM SAVE USING RCOMM TYPE SY-UCOMM
SEL TYPE SLIS_SELFIELD.

CASE SY-UCOMM.
WHEN '&amp;amp;DATA_SAVE'.
LOOP AT IT_SO INTO WA_SO.
CLEAR WA_CY.
READ TABLE IT_CY INTO WA_CY INDEX SY-TABIX.

IF WA_SO NE WA_CY.
WA_CY-MAT_DESC = WA_SO-MAT_DESC.
WA_CY-SAL_DESC = WA_SO-SAL_DESC.
WA_CY-QUANT = WA_SO-QUANT.

MODIFY ZMATERIAL_SALES FROM WA_CY.

IF SY-SUBRC = 0.
MESSAGE 'RECORD HAS BEEN SAVED SUCCESSFULY' TYPE 'S'.
ENDIF.
ENDIF.

CLEAR WA_SO.
ENDLOOP.

ENDCASE.
ENDFORM.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4. Error handling using message class code.&lt;/P&gt;&lt;P&gt;Firstly create msg class using se91 Tcode and then we can use in our code&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT4.

TABLES: BSEG,MSEG.

PARAMETERS C_CODE TYPE BSEG-BUKRS.

TYPES: BEGIN OF TY_BM,
BUKRS TYPE BSEG-BUKRS,
GJAHR TYPE BSEG-GJAHR,
MATNR TYPE BSEG-MATNR,
BELNR TYPE BSEG-BELNR,
MBLNR TYPE MSEG-MBLNR,
ZEILE TYPE MSEG-ZEILE,
END OF TY_BM.

DATA: IT_BM TYPE TABLE OF TY_BM,
WA_BM TYPE TY_BM.

DATA: IT_MSEG TYPE STANDARD TABLE OF MSEG,
WA_MSEG TYPE MSEG.

DATA: IT_BSEG TYPE STANDARD TABLE OF BSEG,
WA_BSEG TYPE BSEG.

DATA OBJ TYPE REF TO ZCX_K_ERRORHANDLE.

AT SELECTION-SCREEN.
TRY.
IF C_CODE IS NOT INITIAL.
SELECT GJAHR MATNR BELNR BUKRS FROM BSEG INTO CORRESPONDING FIELDS OF TABLE IT_BSEG WHERE BUKRS = C_CODE.

IF IT_BSEG IS NOT INITIAL.
SELECT MBLNR ZEILE FROM MSEG INTO CORRESPONDING FIELDS OF TABLE IT_MSEG FOR ALL ENTRIES IN IT_BSEG WHERE MBLNR = IT_BSEG-BELNR.
ENDIF.

IF IT_MSEG IS INITIAL.
RAISE EXCEPTION TYPE ZCX_K_ERRORHANDLE
EXPORTING
TEXTID = ZCX_K_ERRORHANDLE=&amp;gt;ZCX_K_ERRORHANDLE.
ENDIF.
ELSE.
RAISE EXCEPTION TYPE ZCX_K_ERRORHANDLE
EXPORTING
TEXTID = ZCX_K_ERRORHANDLE=&amp;gt;INPUT_ERROR.
ENDIF.

CATCH ZCX_K_ERRORHANDLE INTO OBJ.

MESSAGE OBJ TYPE 'E'.

ENDTRY.



CLASS LCL_MAIN DEFINITION.
PUBLIC SECTION.
METHODS : DISPLAY.


ENDCLASS.

CLASS LCL_MAIN IMPLEMENTATION.

METHOD DISPLAY.
DATA : LR_TABLE TYPE REF TO CL_SALV_TABLE.
CL_SALV_TABLE=&amp;gt;FACTORY( IMPORTING R_SALV_TABLE = LR_TABLE
CHANGING T_TABLE = IT_BM ).
LR_TABLE-&amp;gt;DISPLAY( ).
ENDMETHOD.
ENDCLASS.

START-OF-SELECTION.

LOOP AT IT_BSEG INTO WA_BSEG.
READ TABLE IT_MSEG INTO WA_MSEG WITH KEY MBLNR = WA_BSEG-BELNR.

WA_BM-MATNR = WA_BSEG-MATNR.
WA_BM-BUKRS = WA_BSEG-BUKRS.
WA_BM-GJAHR = WA_BSEG-GJAHR.
WA_BM-BELNR = WA_BSEG-BELNR.
WA_BM-MBLNR = WA_MSEG-MBLNR.
WA_BM-ZEILE = WA_MSEG-ZEILE.
APPEND WA_BM TO IT_BM.
CLEAR WA_BM.

ENDLOOP.

DATA LR_MAIN TYPE REF TO LCL_MAIN.

CREATE OBJECT LR_MAIN.

LR_MAIN-&amp;gt;DISPLAY( ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;5. Spool Generation code.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT5.

DATA: IT_MS LIKE ZMATERIAL_SALES OCCURS 0 WITH HEADER LINE,
C_DATE LIKE ZMATERIAL_SALES-C_DATE.

DATA: IT_SP LIKE ZSPOOLTABLE OCCURS 0 WITH HEADER LINE.

DATA: GD_SPOOL_NR LIKE TSP01-RQIDENT.

START-OF-SELECTION.

SELECT C_DATE FROM ZMATERIAL_SALES INTO CORRESPONDING FIELDS OF TABLE IT_MS.

DELETE ADJACENT DUPLICATES FROM IT_MS COMPARING C_DATE.

LOOP AT IT_MS.

CLEAR: C_DATE.

C_DATE = IT_MS-C_DATE.

WAIT UP TO 1 SECONDS.


PERFORM SUBMIT_PROGRAM.
PERFORM GET_SPOOL_NUMBER.
PERFORM ADD_SPOOL_NUMBER.

ENDLOOP.



FORM SUBMIT_PROGRAM .

SUBMIT ZASSESSMENT3 WITH DATE = C_DATE
TO SAP-SPOOL
WITHOUT SPOOL DYNPRO
AND RETURN.


ENDFORM. " SUBMIT_PROGRAM



FORM GET_SPOOL_NUMBER .

CLEAR GD_SPOOL_NR.
SELECT SINGLE RQIDENT INTO GD_SPOOL_NR FROM TSP01
WHERE RQCRETIME = ( SELECT MAX( RQCRETIME ) FROM TSP01 WHERE RQCLIENT = SY-MANDT
AND RQOWNER = SY-UNAME ).




ENDFORM. " GET_SPOOL_NUMBER



FORM ADD_SPOOL_NUMBER .

IT_SP-C_DATE = C_DATE.
IT_SP-SPOOL_NO = GD_SPOOL_NR.

APPEND IT_SP.

MODIFY ZSPOOLTABLE FROM IT_SP.
COMMIT WORK.

ENDFORM. " ADD_SPOOL_NUMBER&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;6. Selection Screen code for visibility of parameters according to requirements.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT7.

INCLUDE ZSELECTION_SCREEN.


**&amp;amp;---------------------------------------------------------------------*
**&amp;amp; Include ZSELECTION_SCREEN
**&amp;amp;---------------------------------------------------------------------*
*DATA: BELNR TYPE BSEG-BELNR,
* GJAHR TYPE BSEG-GJAHR,
* BUKRS TYPE BSEG-BUKRS.
*
*SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.
* SELECT-OPTIONS: ACC_NO FOR BELNR NO INTERVALS NO-EXTENSION,
* F_YEAR FOR GJAHR MODIF ID P1 NO INTERVALS NO-EXTENSION,
* C_CODE FOR BUKRS MODIF ID P2 NO INTERVALS NO-EXTENSION.
*
* SELECTION-SCREEN SKIP 1.
*
* SELECTION-SCREEN BEGIN OF LINE.
*
*
* PARAMETERS C1 RADIOBUTTON GROUP RAD1 USER-COMMAND R1 DEFAULT 'X'.
* SELECTION-SCREEN COMMENT 3(26) TEXT-021.
* SELECTION-SCREEN POSITION 30.
* PARAMETERS C2 RADIOBUTTON GROUP RAD1.
* SELECTION-SCREEN COMMENT 32(29) TEXT-022.
* SELECTION-SCREEN END OF LINE.
*
* SELECTION-SCREEN SKIP 1.
*
* SELECTION-SCREEN BEGIN OF BLOCK B2 WITH FRAME TITLE TEXT-002.
* PARAMETERS: V2 AS CHECKBOX MODIF ID VW USER-COMMAND COMM2.
* PARAMETERS: V3 AS CHECKBOX MODIF ID VW USER-COMMAND COMM2.
* PARAMETERS: V4 AS CHECKBOX MODIF ID VW USER-COMMAND COMM2.
* SELECTION-SCREEN END OF BLOCK B2.
*
*SELECTION-SCREEN BEGIN OF BLOCK B3 WITH FRAME TITLE TEXT-003.
* PARAMETERS: V5 AS CHECKBOX MODIF ID VW1.
*
* SELECTION-SCREEN END OF BLOCK B3.
*
* SELECTION-SCREEN END OF BLOCK B1.




AT SELECTION-SCREEN OUTPUT.

IF C1 = 'X'.
SET CURSOR FIELD 'C2'.
LOOP AT SCREEN.
IF SCREEN-GROUP1 = 'VW1'.
SCREEN-ACTIVE = '0'.

MODIFY SCREEN.
ENDIF.


IF V4 = 'X' AND ( V3 = 'X' OR V2 = 'X') .

IF SCREEN-GROUP1 = 'P2'.
SCREEN-ACTIVE = '0'.
MODIFY SCREEN.

ENDIF.
IF SCREEN-GROUP1 = 'P1'.
SCREEN-ACTIVE = '1'.
MODIFY SCREEN.
ENDIF.


ELSEIF V4 = 'X'.

IF SCREEN-GROUP1 = 'P1'.
SCREEN-ACTIVE = '0'.
MODIFY SCREEN.

ENDIF.
IF SCREEN-GROUP1 = 'P2'.
SCREEN-ACTIVE = '1'.
MODIFY SCREEN.

ENDIF.
ELSE.

IF SCREEN-GROUP1 = 'P2'.
SCREEN-ACTIVE = '0'.
MODIFY SCREEN.

ENDIF.
ENDIF.
ENDLOOP.

ENDIF.

IF C2 = 'X'.
SET CURSOR FIELD 'C1'.
LOOP AT SCREEN.
IF SCREEN-GROUP1 = 'VW'.
SCREEN-ACTIVE = '0'.
MODIFY SCREEN.
ENDIF.

IF SCREEN-GROUP1 = 'P2'.
SCREEN-ACTIVE = '0'.
MODIFY SCREEN.
ENDIF.

ENDLOOP.
ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;7. Excel upload using&amp;nbsp;TEXT_CONVERT_XLS_TO_SAP&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT10.

DATA: IT_TAB TYPE STANDARD TABLE OF ZASSESS10.

DATA: WA_TAB TYPE ZASSESS10.

DATA IT_TYPE(4096) type c occurs 0.

SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.

PARAMETERS: P_FILE TYPE RLGRAP-FILENAME.

SELECTION-SCREEN END OF BLOCK B1.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
PERFORM GET_FILE.


START-OF-SELECTION.

PERFORM EXCEL_TO_IT_TAB.
PERFORM UPLOAD_DATA.

END-OF-SELECTION.

FORM GET_FILE .

CALL FUNCTION 'F4_FILENAME' "POP UP FOR FETCH
EXPORTING
PROGRAM_NAME = SYST-CPROG
DYNPRO_NUMBER = SYST-DYNNR
* FIELD_NAME = ' '
IMPORTING
FILE_NAME = P_FILE
.

ENDFORM. " GET_FILE




FORM EXCEL_TO_IT_TAB .



CALL FUNCTION 'TEXT_CONVERT_XLS_TO_SAP'
EXPORTING
* I_FIELD_SEPERATOR =
I_LINE_HEADER = 'X'
I_TAB_RAW_DATA = IT_TYPE
I_FILENAME = P_FILE
TABLES
I_TAB_CONVERTED_DATA = IT_TAB
EXCEPTIONS
CONVERSION_FAILED = 1
OTHERS = 2
.
IF SY-SUBRC &amp;lt;&amp;gt; 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.




ENDFORM. " EXCEL_TO_IT_TAB




FORM UPLOAD_DATA .

LOOP AT IT_TAB INTO WA_TAB.

MODIFY ZASSESS10 FROM WA_TAB.
COMMIT WORK.
ENDLOOP.

ENDFORM. " UPLOAD_data&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8. Table Maintenance code for Create, display and update data without SM30 and excel upload of data to create data using FM 'ALSM_EXCEL_TO_INTERNAL_TABLE'&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ztable_update.

TYPES : BEGIN OF ty_ztable,
sel TYPE char1.
INCLUDE STRUCTURE ztable.
TYPES : END OF ty_ztable.

DATA : gs_ztable TYPE ty_ztable,
gt_file_data TYPE TABLE OF ztable,
gob_table TYPE REF TO cl_salv_table,
gt_ztable1 TYPE TABLE OF ztable,
gt_ztable TYPE TABLE OF ty_ztable,
gs_zzpp_ztable TYPE ztable,
gv_mark TYPE char01,
gv_field1 TYPE ztable-field1,
gv_field2 TYPE ztable-field2,
gv_field3 TYPE ztable-field3,
gt_excel TYPE TABLE OF alsmex_tabline.

DATA: gs_excel TYPE ole2_object, " Excel object
gs_mapl TYPE ole2_object, " list of workbooks
gs_map TYPE ole2_object, " workbook
gs_zl TYPE ole2_object, " cell
gs_f TYPE ole2_object, " font
gs_column TYPE ole2_object. " Column

CONTROLS: t_tab TYPE TABLEVIEW USING SCREEN 9000.

SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE TEXT-501.
PARAMETERS : p_rb1 RADIOBUTTON GROUP grp1 DEFAULT 'X' USER-COMMAND usr1 MODIF ID r1,
p_rb2 RADIOBUTTON GROUP grp1 MODIF ID r1,
p_rb3 RADIOBUTTON GROUP grp1 MODIF ID r1.


SELECTION-SCREEN BEGIN OF BLOCK t11 WITH FRAME TITLE TEXT-502.
PARAMETERS : p_file1 TYPE rlgrap-filename MODIF ID z1.
SELECTION-SCREEN: BEGIN OF LINE,
PUSHBUTTON 1(24) TEXT-105 USER-COMMAND form MODIF ID z1,
END OF LINE.
SELECTION-SCREEN END OF BLOCK t11.


SELECTION-SCREEN BEGIN OF BLOCK t12 WITH FRAME TITLE TEXT-503.
SELECT-OPTIONS :so_pc1 FOR gv_field1 NO-EXTENSION NO INTERVALS MODIF ID z2 ,
so_fpc1 FOR gv_field3 NO-EXTENSION NO INTERVALS MODIF ID z2 ,
so_cc1 FOR gv_field2 NO-EXTENSION NO INTERVALS MODIF ID z2 .
SELECTION-SCREEN END OF BLOCK t12.

SELECTION-SCREEN BEGIN OF BLOCK t13 WITH FRAME TITLE TEXT-504.
SELECT-OPTIONS : so_pc2 FOR gv_field1 NO-EXTENSION NO INTERVALS MODIF ID z3,
so_fpc2 FOR gv_field3 NO-EXTENSION NO INTERVALS MODIF ID z3,
so_cc2 FOR gv_field2 NO-EXTENSION NO INTERVALS MODIF ID z3.
SELECTION-SCREEN END OF BLOCK t13.
SELECTION-SCREEN END OF BLOCK b2.

SELECTION-SCREEN BEGIN OF SCREEN 500 AS WINDOW.
SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE TEXT-008 .

SELECTION-SCREEN BEGIN OF LINE.
* YES
PARAMETERS p_y RADIOBUTTON GROUP rad2 USER-COMMAND r1 DEFAULT 'X'.
SELECTION-SCREEN COMMENT 3(10) TEXT-027.
SELECTION-SCREEN POSITION 15.
* NO
PARAMETERS p_n RADIOBUTTON GROUP rad2.
SELECTION-SCREEN COMMENT 18(10) TEXT-028.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK b3.
SELECTION-SCREEN END OF SCREEN 500.

AT SELECTION-SCREEN.
IF sy-ucomm EQ 'FORM'.
PERFORM download_format.
ENDIF.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_file1.
PERFORM f4_filename USING p_file1.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR so_pc1-low.
PERFORM Param_F4_help_pc USING so_pc1-low.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR so_fpc1-low.
PERFORM Param_F4_help_fpc USING so_fpc1-low.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR so_cc1-low.
PERFORM Param_F4_help_cc USING so_cc1-low.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR so_pc2-low.
PERFORM Param_F4_help_pc USING so_pc2-low.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR so_fpc2-low.
PERFORM Param_F4_help_fpc USING so_fpc2-low.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR so_cc2-low.
PERFORM Param_F4_help_cc USING so_cc2-low.

AT SELECTION-SCREEN OUTPUT.
LOOP AT SCREEN.
IF screen-group1 = 'Z1'.
screen-active = COND #( WHEN p_rb1 = 'X' THEN 1
WHEN p_rb2 = 'X' THEN 0
WHEN p_rb3 = 'X' THEN 0 ).
ENDIF.
IF screen-group1 = 'Z2'.
screen-active = COND #( WHEN p_rb1 = 'X' THEN 0
WHEN p_rb2 = 'X' THEN 1
WHEN p_rb3 = 'X' THEN 0 ).
ENDIF.
IF screen-group1 = 'Z3'.
screen-active = COND #( WHEN p_rb1 = 'X' THEN 0
WHEN p_rb2 = 'X' THEN 0
WHEN p_rb3 = 'X' THEN 1 ).
ENDIF.

IF screen-group1 = 'V0' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'V1' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'V2' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'V3' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'C0' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'C1' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'C2' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'C3' .
screen-active = 0.
ENDIF.
MODIFY SCREEN.
ENDLOOP.

START-OF-SELECTION.
IF p_rb1 = 'X'.
PERFORM Create_data.

ELSEIF p_rb2 = 'X'.
PERFORM Update_data.

ELSEIF p_rb3 = 'X'.
PERFORM Display_data.
ENDIF.

END-OF-SELECTION.

FORM Create_data .

DATA: ls_temp_data TYPE ztable,
lt_temp_tab TYPE TABLE OF ztable,
lv_cont TYPE char1.

IF p_file1 IS NOT INITIAL.
IF ( p_file1 CP '*xls' OR p_file1 CP '*xlsx' ).
TRY.
CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE'
EXPORTING
filename = p_file1
i_begin_col = 1
i_begin_row = 2
i_end_col = '30'
i_end_row = '999999'
TABLES
intern = gt_excel
EXCEPTIONS
inconsistent_parameters = 1
upload_ole = 2
OTHERS = 3.
IF sy-subrc &amp;lt;&amp;gt; 0.
MESSAGE 'Excel File Conversion Error' TYPE 'S' DISPLAY LIKE 'E'.
EXIT.
ENDIF.
CATCH cx_root INTO DATA(lob_oref).
MESSAGE lob_oref-&amp;gt;get_text( ) TYPE 'S' DISPLAY LIKE 'E'.
ENDTRY.

LOOP AT gt_excel ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_excel&amp;gt;).
IF ls_temp_data-field1 IS NOT INITIAL
AND ls_temp_data-field3 IS NOT INITIAL
AND ls_temp_data-field2 IS NOT INITIAL
AND &amp;lt;lfs_excel&amp;gt;-col &amp;lt;&amp;gt; 1
AND line_exists( lt_temp_tab[ field1 = ls_temp_data-field1
field3 = ls_temp_data-field3
field2 = ls_temp_data-field2 ] ).
MESSAGE |Duplicate Entry found in Excel at Row number : | &amp;amp;&amp;amp; |{ &amp;lt;lfs_excel&amp;gt;-row + 1 }| TYPE 'S' DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
ENDIF.
CASE &amp;lt;lfs_excel&amp;gt;-col.
WHEN 1.
CLEAR ls_temp_data.
ls_temp_data-field1 = &amp;lt;lfs_excel&amp;gt;-value.
CONDENSE ls_temp_data-field1.
WHEN 2.
ls_temp_data-field3 = &amp;lt;lfs_excel&amp;gt;-value.
CONDENSE ls_temp_data-field3.
WHEN 3.
ls_temp_data-field2 = &amp;lt;lfs_excel&amp;gt;-value.
CONDENSE ls_temp_data-field2.
ENDCASE.
AT END OF row.
ls_temp_data-client = sy-mandt.
APPEND ls_temp_data TO lt_temp_tab.
ENDAT.
ENDLOOP.
ENDIF.

IF lt_temp_tab IS NOT INITIAL.
DELETE FROM ztable.
IF sy-subrc = 0.
COMMIT WORK.
ELSE.
ROLLBACK WORK.
ENDIF.
INSERT ztable FROM TABLE lt_temp_tab .
IF sy-subrc = 0.
COMMIT WORK.
MESSAGE 'Data inserted successfully' TYPE 'S'.
ELSE.
ROLLBACK WORK.
MESSAGE 'Data not inserted' TYPE 'S' DISPLAY LIKE 'E'.
ENDIF.
ELSE.
MESSAGE 'Entry already exists' TYPE 'S' DISPLAY LIKE 'E'.
ENDIF.
ENDIF.

ENDFORM.


FORM Update_data .

SELECT *
FROM ztable
INTO CORRESPONDING FIELDS OF TABLE @gt_ztable
WHERE field1 IN _pc1
AND field3 IN _fpc1
AND field2 IN _cc1.

IF gt_ztable IS NOT INITIAL.
CALL SCREEN 9000.
ELSE.
MESSAGE 'No Data Found' TYPE 'S' DISPLAY LIKE 'E'.
ENDIF.
ENDFORM.


FORM Display_data .

SELECT *
FROM ztable
INTO TABLE (lt_ztable)
WHERE field1 IN _pc2
AND field3 IN _fpc2
AND field2 IN _cc2.

IF lt_ztable IS NOT INITIAL.
TRY.
CALL METHOD cl_salv_table=&amp;gt;factory
IMPORTING
r_salv_table = gob_table
CHANGING
t_table = lt_ztable.
CATCH cx_salv_msg .
ENDTRY.
CALL METHOD gob_table-&amp;gt;display.
ELSE.
MESSAGE 'No data found' TYPE 'S' DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
ENDIF.
ENDFORM.


FORM download_format .

CREATE OBJECT gs_excel 'EXCEL.APPLICATION'.
SET PROPERTY OF gs_excel 'Visible' = 1.
* get list of workbooks, initially empty
CALL METHOD OF
gs_excel
'Workbooks' = gs_mapl.
PERFORM err_hdl.

* add a new workbook
CALL METHOD OF
gs_mapl
'Add' = gs_map.
PERFORM err_hdl.

* Output column headings to active Excel sheet
PERFORM fill_cell USING 1 1 1 'Field 1' .
PERFORM fill_cell USING 1 2 1 'Field 2' .
PERFORM fill_cell USING 1 3 1 'Field 3' .

CALL METHOD OF
gs_excel
'Columns' = gs_column.

CALL METHOD OF
gs_column
'Autofit'.

CALL METHOD OF
gs_excel
'Worksheets' = gs_mapl.
PERFORM err_hdl.

SET PROPERTY OF gs_map 'NAME' = 'COPY'.

FREE OBJECT: gs_excel,
gs_mapl,
gs_map,
gs_zl,
gs_f,
gs_column.


ENDFORM.



FORM f4_filename USING p_file.
TRY.
CALL FUNCTION 'F4_FILENAME'
EXPORTING
field_name = 'P_FILE '
IMPORTING
file_name = p_file.
CATCH cx_root INTO DATA(lob_oref).
MESSAGE lob_oref-&amp;gt;get_text( ) TYPE 'S' DISPLAY LIKE 'E'.
ENDTRY.

ENDFORM.

FORM Param_F4_help_pc USING
p_so_pc.
DATA: lt_return TYPE STANDARD TABLE OF ddshretval.

SELECT DISTINCT field1
FROM ztable
INTO TABLE (lt_value).

TRY.
CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
EXPORTING
retfield = 'field1'
value_org = 'S'
TABLES
value_tab = lt_value
return_tab = lt_return
EXCEPTIONS
parameter_error = 1
no_values_found = 2
OTHERS = 3.
CATCH cx_root INTO DATA(lob_oref).
MESSAGE lob_oref-&amp;gt;get_text( ) TYPE 'S' DISPLAY LIKE 'E'.
ENDTRY.

READ TABLE lt_return INTO DATA(ls_return) INDEX 1.
IF sy-subrc = 0.
p_so_pc = ls_return-fieldval.
ENDIF.
ENDFORM.

FORM Param_F4_help_Fpc USING
p_so_Fpc.
DATA: lt_return TYPE STANDARD TABLE OF ddshretval.

SELECT DISTINCT field3
FROM ztable
INTO TABLE (lt_value).
TRY.
CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
EXPORTING
retfield = 'field3'
value_org = 'S'
TABLES
value_tab = lt_value
return_tab = lt_return
EXCEPTIONS
parameter_error = 1
no_values_found = 2
OTHERS = 3.
CATCH cx_root INTO DATA(lob_oref).
MESSAGE lob_oref-&amp;gt;get_text( ) TYPE 'S' DISPLAY LIKE 'E'.
ENDTRY.
READ TABLE lt_return INTO DATA(ls_return) INDEX 1.
IF sy-subrc = 0.
p_so_fpc = ls_return-fieldval.
ENDIF.
ENDFORM.

FORM Param_F4_help_cc USING
p_so_cc.
DATA: lt_return TYPE STANDARD TABLE OF ddshretval.

SELECT DISTINCT field2
FROM ztable
INTO TABLE (lt_value).
TRY.
CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
EXPORTING
retfield = 'field2'
value_org = 'S'
TABLES
value_tab = lt_value
return_tab = lt_return
EXCEPTIONS
parameter_error = 1
no_values_found = 2
OTHERS = 3.
CATCH cx_root INTO DATA(lob_oref).
MESSAGE lob_oref-&amp;gt;get_text( ) TYPE 'S' DISPLAY LIKE 'E'.
ENDTRY.
READ TABLE lt_return INTO DATA(ls_return) INDEX 1.
IF sy-subrc = 0.
p_so_cc = ls_return-fieldval.
ENDIF.
ENDFORM.


FORM err_hdl .
IF sy-subrc &amp;lt;&amp;gt; 0.
MESSAGE 'Worksheet not created' TYPE 'S' DISPLAY LIKE 'E'.
STOP.
ENDIF.
ENDFORM.


FORM fill_cell USING i TYPE any
j TYPE any
bold TYPE any
val TYPE any.
CALL METHOD OF
gs_excel
'Cells' = gs_zl
EXPORTING
#1 = i
#2 = j.

PERFORM err_hdl.
SET PROPERTY OF gs_zl 'Value' = val.
PERFORM err_hdl.
GET PROPERTY OF gs_zl 'Font' = gs_f.
PERFORM err_hdl.
SET PROPERTY OF gs_f 'Bold' = bold.
PERFORM err_hdl.

ENDFORM.


MODULE status_9000 OUTPUT.
SET PF-STATUS 'PF_STATUS_9000'.
SET TITLEBAR 'TITLE1'.
ENDMODULE.


MODULE user_command_9000 INPUT.
CASE sy-ucomm.
WHEN 'BACK'.
LEAVE TO SCREEN 0.
WHEN 'CANCEL' OR 'EXIT'.
LEAVE PROGRAM.
WHEN 'SAVE'.
MOVE-CORRESPONDING gt_ztable TO gt_ztable1.
LOOP AT gt_ztable1 ASSIGNING FIELD-SYMBOL(&amp;lt;gfs_zrm&amp;gt;).
&amp;lt;gfs_zrm&amp;gt;-client = sy-mandt.
ENDLOOP.
UPDATE ztable FROM TABLE gt_ztable1.
IF sy-subrc = 0.
COMMIT WORK.
MESSAGE 'Data updated successfully' TYPE 'S'.
ELSE.
ROLLBACK WORK.
MESSAGE 'Data not updated ' TYPE 'S'.
ENDIF.
WHEN '%DEL'.
IF line_exists( gt_ztable[ sel = 'X' ] ).
CALL SELECTION-SCREEN 500 STARTING AT 5 5.
IF sy-subrc = 0.
IF p_y = 'X'.
gt_ztable1 = VALUE #( FOR gs_z IN gt_ztable
WHERE ( sel = 'X' )
( CORRESPONDING #( gs_z ) ) ).
IF gt_ztable1 IS NOT INITIAL.
DELETE ztable FROM TABLE gt_ztable1 .
IF sy-subrc = 0.
COMMIT WORK.
DELETE gt_ztable WHERE sel = 'X'.
MESSAGE 'Selected Data deleted' TYPE 'S'.
ELSE.
ROLLBACK WORK.
MESSAGE 'Data not deleted' TYPE 'S'.
ENDIF.
ENDIF.
ENDIF.
ENDIF.
ELSE.
MESSAGE 'Select Data' TYPE 'S' DISPLAY LIKE 'E'.
ENDIF.

WHEN '%SEL'. "Select all
gs_ztable-sel = 'X'.
MODIFY gt_ztable FROM gs_ztable TRANSPORTING sel WHERE sel &amp;lt;&amp;gt; 'X'.

WHEN '%DSE'. "Deselect ALl
gs_ztable-sel = ' '.
MODIFY gt_ztable FROM gs_ztable TRANSPORTING sel WHERE sel = 'X'.

ENDCASE.
ENDMODULE.


MODULE t_tab_change_tc_attr OUTPUT.
DESCRIBE TABLE gt_ztable LINES t_tab-lines.
ENDMODULE.

MODULE t_tab_modify INPUT.
MODIFY gt_ztable
FROM gs_ztable
INDEX t_tab-current_line.
ENDMODULE.
Flow Logic - Screen 9000

PROCESS BEFORE OUTPUT.
MODULE t_tab_change_tc_attr.

LOOP AT gt_ztable
INTO gs_ztable
WITH CONTROL t_tab
CURSOR t_tab-current_line.
ENDLOOP.


MODULE status_9000.
*
PROCESS AFTER INPUT.
LOOP AT gt_ztable.
CHAIN.
FIELD gs_ztable-sel.
FIELD gs_ztable-field1.
FIELD gs_ztable-field2.
FIELD gs_ztable-field3.
MODULE t_tab_modify ON CHAIN-REQUEST.
ENDCHAIN.
ENDLOOP.

MODULE user_command_9000.
 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9. Send Mail with Excel and PDF attachments.&lt;/P&gt;&lt;P&gt;data declarations...&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA: BEGIN OF PDF_OUTPUT OCCURS 0.
          INCLUDE STRUCTURE TLINE.
  DATA: END OF PDF_OUTPUT.

  DATA : I_RECLIST  LIKE SOMLRECI1.
  DATA : I_OBJTXT   LIKE SOLISTI1,
         I_OBJPACK  LIKE SOPCKLSTI1,
         I_OBJBIN   LIKE SOLISTI1,
         WA_OBJHEAD LIKE SOLISTI1.

  DATA : V_LINES_TXT LIKE SY-TABIX,
         V_LINES_BIN LIKE SY-TABIX,
         WA_DOC_CHNG LIKE SODOCCHGI1.
  DATA : T_OBJECTDATA LIKE CLOBJDAT ,
         TAB_CLASS LIKE SCLASS .
  DATA : SEND_REQUEST TYPE REF TO CL_BCS.
  DATA : TEXT TYPE BCSY_TEXT.
  DATA : DOCUMENT TYPE REF TO CL_DOCUMENT_BCS.
  DATA : RECIPIENT TYPE REF TO IF_RECIPIENT_BCS.
  DATA : SENDER TYPE REF TO CL_SAPUSER_BCS.
  DATA : BCS_EXCEPTION TYPE REF TO CX_BCS.
  DATA : SENT_TO_ALL TYPE OS_BOOLEAN.
  DATA : MSTR_PRINT_PARMS LIKE PRI_PARAMS.
  DATA : SOLI_TAB TYPE SOLI_TAB.
  DATA : E_XSTRING TYPE XSTRING.
  DATA : G_XSTRING TYPE XSTRING.
  DATA : LT_SOLIX TYPE SOLIX_TAB.
  DATA : BINARY_CONTENT TYPE SOLIX_TAB.
  DATA : LV_SUBJECT(50) TYPE C.
  DATA :  LV_SUBJ_FILE   TYPE SO_OBJ_DES .
  DATA : LT_ATT_HEAD    TYPE SOLI_TAB.
  DATA : LV_FILENAME    TYPE STRING.
  DATA : LV_TEXT_LINE    TYPE SOLI.
  DATA : CONTENT TYPE STRING.
  DATA : VAL TYPE STRING.

  DATA : GD_SPOOL_NR LIKE TSP01-RQIDENT,
         GD_BYTECOUNT LIKE TST01-DSIZE.

  DATA : IT_CONTENTS TYPE STANDARD TABLE OF SOLISTI1,
         WA_CONTENTS TYPE SOLISTI1.

* EXCEL
  DATA : MT_FCAT        TYPE LVC_T_FCAT,
         MT_DATA        TYPE REF TO DATA,
         M_FLAVOUR      TYPE STRING,
         M_VERSION      TYPE STRING,
         MO_RESULT_DATA TYPE REF TO CL_SALV_EX_RESULT_DATA_TABLE,
         MO_COLUMNS     TYPE REF TO CL_SALV_COLUMNS_TABLE,
         MO_AGGREG      TYPE REF TO CL_SALV_AGGREGATIONS,
         MO_SALV_TABLE  TYPE REF TO CL_SALV_TABLE,
         M_FILE_TYPE    TYPE SALV_BS_CONSTANT.
  FIELD-SYMBOLS : &amp;lt;TAB&amp;gt; TYPE ANY TABLE.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;I. Create Excel&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;GET REFERENCE OF IT_EXCEL INTO mt_data. "IT_EXCEL consists of data which need to in excel

*if we didn't pass fieldcatalog we need to create it
  ASSIGN mt_data-&amp;gt;* TO &amp;lt;tab&amp;gt;.
  TRY .
      cl_salv_table=&amp;gt;factory(
      EXPORTING
      list_display = abap_false
      IMPORTING
      r_salv_table = mo_salv_table
      CHANGING
      t_table      = &amp;lt;tab&amp;gt; ).
    CATCH cx_salv_msg.

  ENDTRY.

  "get colums &amp;amp; aggregation infor to create fieldcat
  mo_columns  = mo_salv_table-&amp;gt;get_columns( ).
  mo_aggreg   = mo_salv_table-&amp;gt;get_aggregations( ).
  mt_fcat     =  cl_salv_controller_metadata=&amp;gt;get_lvc_fieldcatalog(
    r_columns      = mo_columns
    r_aggregations = mo_aggreg ).

  IF cl_salv_bs_a_xml_base=&amp;gt;get_version( ) EQ
  if_salv_bs_xml=&amp;gt;version_25 OR
  cl_salv_bs_a_xml_base=&amp;gt;get_version( ) EQ
  if_salv_bs_xml=&amp;gt;version_26.



    mo_result_data = cl_salv_ex_util=&amp;gt;factory_result_data_table(
    r_data                      = mt_data
*        s_layout                    = is_layout
    t_fieldcatalog              = mt_fcat
*        t_sort                      = it_sort
*        t_filter                    = it_filt
    ).

    CASE cl_salv_bs_a_xml_base=&amp;gt;get_version( ).
      WHEN if_salv_bs_xml=&amp;gt;version_25.
        m_version = if_salv_bs_xml=&amp;gt;version_25.
      WHEN if_salv_bs_xml=&amp;gt;version_26.
        m_version = if_salv_bs_xml=&amp;gt;version_26.
    ENDCASE.

    m_file_type = if_salv_bs_xml=&amp;gt;C_TYPE_EXCEL_XML.

    m_flavour = if_salv_bs_c_tt=&amp;gt;c_tt_xml_flavour_export.


    "transformation of data to excel
    CALL METHOD cl_salv_bs_tt_util=&amp;gt;if_salv_bs_tt_util~transform
      EXPORTING
        xml_type      = m_file_type
        xml_version   = m_version
        r_result_data = mo_result_data
        xml_flavour   = m_flavour
        gui_type      = if_salv_bs_xml=&amp;gt;c_gui_type_gui
      IMPORTING
        xml           = g_xstring.
  ENDIF.


  CALL METHOD cl_bcs_convert=&amp;gt;xstring_to_solix
    EXPORTING
      iv_xstring = g_xstring
    RECEIVING
      et_solix   = binary_content.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;II. Create PDF&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*for fetching print parameters and then changing according to file format
  CALL FUNCTION 'GET_PRINT_PARAMETERS'
    EXPORTING
      NO_DIALOG      = 'X'
    IMPORTING
      OUT_PARAMETERS = MSTR_PRINT_PARMS.

  MSTR_PRINT_PARMS-PAART = 'X_65_230'.

*Submit ZProgram whose output should be the content need to be in PDF
*for creating spool
  SUBMIT ZPROGRAM  WITH C_CODE = C_CODE
                          WITH C_NAME = C_NAME
  TO SAP-SPOOL
   SPOOL PARAMETERS MSTR_PRINT_PARMS
   WITHOUT SPOOL DYNPRO
   AND RETURN.

  CLEAR GD_SPOOL_NR.

*fetching spool id
  SELECT SINGLE RQIDENT INTO GD_SPOOL_NR  FROM TSP01
        WHERE RQCRETIME = ( SELECT MAX( RQCRETIME ) FROM TSP01 WHERE RQCLIENT = SY-MANDT
      AND RQOWNER = SY-UNAME ).

*converting spool content into pdf
  CLEAR :GD_BYTECOUNT .
  CALL FUNCTION 'CONVERT_ABAPSPOOLJOB_2_PDF'
    EXPORTING
      SRC_SPOOLID              = GD_SPOOL_NR
      NO_DIALOG                = ' '
    IMPORTING
      PDF_BYTECOUNT            = GD_BYTECOUNT
    TABLES
      PDF                      = PDF_OUTPUT
    EXCEPTIONS
      ERR_NO_ABAP_SPOOLJOB     = 1
      ERR_NO_SPOOLJOB          = 2
      ERR_NO_PERMISSION        = 3
      ERR_CONV_NOT_POSSIBLE    = 4
      ERR_BAD_DESTDEVICE       = 5
      USER_CANCELLED           = 6
      ERR_SPOOLERROR           = 7
      ERR_TEMSEERROR           = 8
      ERR_BTCJOB_OPEN_FAILED   = 9
      ERR_BTCJOB_SUBMIT_FAILED = 10
      ERR_BTCJOB_CLOSE_FAILED  = 11
      OTHERS                   = 12.

  IF sy-subrc &amp;lt;&amp;gt; 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

* convert attachment
  CALL FUNCTION 'SX_TABLE_LINE_WIDTH_CHANGE'
    TABLES
      CONTENT_IN  = PDF_OUTPUT
      CONTENT_OUT = SOLI_TAB
    EXCEPTIONS
      OTHERS      = 4.

  IF sy-subrc &amp;lt;&amp;gt; 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  CALL FUNCTION 'SCMS_BINARY_TO_XSTRING'
    EXPORTING
      INPUT_LENGTH = GD_BYTECOUNT
    IMPORTING
      BUFFER       = E_XSTRING
    TABLES
      BINARY_TAB   = SOLI_TAB
    EXCEPTIONS
      OTHERS       = 2.

  IF sy-subrc &amp;lt;&amp;gt; 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  LT_SOLIX = CL_DOCUMENT_BCS=&amp;gt;XSTRING_TO_SOLIX( IP_XSTRING = E_XSTRING ).
"LT_SOLIX is the string format of pdf which is use in attachment of mail&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;III. Send Mail&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;Try.
* create persistent send request
      SEND_REQUEST = CL_BCS=&amp;gt;CREATE_PERSISTENT( ).

* create and set document
      CLEAR: TEXT, TEXT[], CONTENT, LV_SUBJECT.

* Email Subject
      CLEAR: LV_SUBJECT.

        LV_SUBJECT =  'Subject of the mail.'.

      CLEAR: LV_SUBJ_FILE.
        lV_SUBJ_FILE = 'File_name'

* Body
      CLEAR : IT_CONTENTS[].

  "email body
  WA_CONTENTS-LINE = 'Greetings,'.
  APPEND WA_CONTENTS TO IT_CONTENTS.
  CLEAR : WA_CONTENTS.

  WA_CONTENTS-LINE = 'This is the mail body'.
  APPEND WA_CONTENTS TO IT_CONTENTS.
  CLEAR : WA_CONTENTS.
  
  APPEND WA_CONTENTS TO IT_CONTENTS.
  WA_CONTENTS-LINE = 'Thanks'.
  APPEND WA_CONTENTS TO IT_CONTENTS.
  CLEAR : WA_CONTENTS.
  
      DOCUMENT = CL_DOCUMENT_BCS=&amp;gt;CREATE_DOCUMENT(
      I_TYPE = 'HTM'
      I_TEXT = IT_CONTENTS
      I_SUBJECT = LV_SUBJECT ).

* add document to send request
      CALL METHOD SEND_REQUEST-&amp;gt;SET_DOCUMENT( DOCUMENT ).

** add attachment for pdf
      TRY.
          CALL METHOD DOCUMENT-&amp;gt;ADD_ATTACHMENT
            EXPORTING
              I_ATTACHMENT_TYPE    = 'PDF'
              I_ATTACHMENT_SUBJECT = LV_SUBJ_FILE
              I_ATT_CONTENT_HEX    = LT_SOLIX.
        CATCH cx_document_bcs.
      ENDTRY.


* add attachment for excel

      TRY.
          CALL METHOD DOCUMENT-&amp;gt;ADD_ATTACHMENT(
            i_attachment_type = 'XLS'
            i_attachment_subject = LV_SUBJ_FILE
            i_att_content_hex = binary_content ).
        CATCH cx_document_bcs.
      ENDTRY.


      data : MAIL_TO  TYPE AD_SMTPADR.

    
* create recipient (e-mail address)

            CLEAR: MAIL_TO.
            MAIL_TO = 'abc@xyz.com'.

            RECIPIENT = CL_CAM_ADDRESS_BCS=&amp;gt;CREATE_INTERNET_ADDRESS(
            MAIL_TO ).


*   add recipient with its respective attributes to send request
            CALL METHOD SEND_REQUEST-&amp;gt;ADD_RECIPIENT
              EXPORTING
                I_RECIPIENT = RECIPIENT
                I_EXPRESS   = 'X'.
*            i_copy      = 'X'.

* If wants to add CC mail id
            CLEAR: MAIL_TO.
            MAIL_TO = 'cc@xyz.com'.


            RECIPIENT = CL_CAM_ADDRESS_BCS=&amp;gt;CREATE_INTERNET_ADDRESS(
            MAIL_TO ).


*   add recipient with its respective attributes to send request
            CALL METHOD SEND_REQUEST-&amp;gt;ADD_RECIPIENT
              EXPORTING
                I_RECIPIENT = RECIPIENT
*            I_EXPRESS   = 'X'.
                i_copy      = 'X'.
         

* send document
      CALL METHOD SEND_REQUEST-&amp;gt;SEND(
      EXPORTING
      I_WITH_ERROR_SCREEN = 'X'
      RECEIVING
      RESULT = SENT_TO_ALL ).

      COMMIT WORK.

      MESSAGE 'Mail Send Successfully' TYPE 'S'.

      DATA:   BCS_EXCEPTION TYPE REF TO CX_BCS.

    CATCH CX_BCS INTO BCS_EXCEPTION.
      MESSAGE 'Mail Not sent' TYPE 'E'.


  ENDTRY.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/basic-code-s-of-abap/qaq-p/14231152"/>
    <published>2025-09-30T06:38:10.002000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/developing-cloud-ready-adobe-forms-on-premise/qaq-p/14231305</id>
    <title>Developing cloud-ready Adobe Forms on-premise</title>
    <updated>2025-09-30T09:01:12.524000+02:00</updated>
    <author>
      <name>patrick_weber11</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/215409</uri>
    </author>
    <content>&lt;P&gt;Hi all,&lt;/P&gt;&lt;P&gt;we're running S/4 HANA 2023 FP1 on-premise and as part of our clean core strategy, we need to deal with forms as well. As today, we use all available technologies like SAPScript, SmartForms as well as Adobe Forms. For sure, we only stick to Adobe Forms for new forms since several years.&lt;/P&gt;&lt;P&gt;To my understanding, we can use SAP Forms in BTP also on-premise. It will only be a replacement for our on-prem ADS, but there is no need to change any print report or form. So we can still use all the NAST and other stuff available since decades. This only covers infrastructure in my opinion. But what is the difference from a developers perspective?&lt;/P&gt;&lt;P&gt;As we all know, reports are not clean core compliant. This must also be true to print reports you define in customizing. So there will be no print report in future anymore. We actually have no plans to move to cloud but at least I want to be prepared for this. This brings me to my final question&lt;/P&gt;&lt;P&gt;What do we need to consider when it comes to developing SAP Forms in a cloud-ready manner? Where and how should we place our custom logic for custom forms as well as for SAP standard forms (i.e. handling templates for invoices, purchase orders etc.)? How to do this to be able to use the form in both, on-premise as well as cloud?&lt;/P&gt;&lt;P&gt;- do we need to replace the logic from Z-print reports to Z-classes? (we typically do this these days)&lt;BR /&gt;- do we need to place custom logic into interface of a form (we do this for standard forms [invoices] to be able to stick to standard print reports)&lt;BR /&gt;- anything else we should consider on-premise?&lt;/P&gt;&lt;P&gt;As said, actually there are no plans to move but at least we should be prepared for this. At least we need to refine our development guidelines to reflect any new concept.&lt;/P&gt;&lt;P&gt;Our current approach looks like this:&lt;BR /&gt;- in case of totally custom form, any code is handled by dedicated print classes. The classes implement the business logic as well as calling the form FMs&lt;BR /&gt;- in case of adopting standard forms, we copy standard form interfaces and add any additional custom code inside this. Same is true for form itself for sure. By this, we can still use standard print reports&amp;nbsp;&lt;BR /&gt;- in any case, we try to avoid mixing both concepts. Code should be either in dedicated print class or in interface but not in both.&lt;/P&gt;&lt;P&gt;I hope someone can give me some hints&lt;BR /&gt;&lt;BR /&gt;Patrick&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/developing-cloud-ready-adobe-forms-on-premise/qaq-p/14231305"/>
    <published>2025-09-30T09:01:12.524000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/product-lifecycle-management-q-a/new-developer-license-for-my-npl-system/qaq-p/14231348</id>
    <title>New developer license for my NPL system</title>
    <updated>2025-09-30T09:45:19.380000+02:00</updated>
    <author>
      <name>KondhareChetan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1907242</uri>
    </author>
    <content>&lt;P&gt;Please provide a new developer license for my NPL system.&lt;BR /&gt;Hardware Key=V1915464910&lt;BR /&gt;Installation Number=DEMOSYSTEM&lt;BR /&gt;System Number=000000000850876940&lt;BR /&gt;SID=NPL&lt;BR /&gt;My P-user is P2009088762&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/product-lifecycle-management-q-a/new-developer-license-for-my-npl-system/qaq-p/14231348"/>
    <published>2025-09-30T09:45:19.380000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/missing-reference-documents-for-the-hu-in-transaction-scwm-grpe/qaq-p/14232039</id>
    <title>Missing reference documents for the HU In transaction /SCWM/GRPE</title>
    <updated>2025-09-30T21:14:08.679000+02:00</updated>
    <author>
      <name>abouahmed</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/872700</uri>
    </author>
    <content>&lt;P&gt;Hi,&lt;/P&gt;&lt;P&gt;In transaction &lt;STRONG&gt;/SCWM/GRPE&lt;/STRONG&gt;, I observed that when a &lt;STRONG&gt;Handling Unit (HU)&lt;/STRONG&gt; is registered for an &lt;STRONG&gt;inbound delivery&lt;/STRONG&gt; and subsequent inbound deliveries are attempted to be assigned to the same HU, the newly added deliveries do not persist as &lt;STRONG&gt;reference documents&lt;/STRONG&gt; for the HU after saving. Upon debugging, I noted that SAP executes a memory clear function within the &lt;STRONG&gt;FORM&lt;/STRONG&gt;&amp;nbsp;HU_DELETE_FROM_MEMORY of program &lt;STRONG&gt;/SCWM/LHUMAINF08&amp;nbsp;To delete the new references (new deliveries)&lt;/STRONG&gt;. It is a potential SAP bug or expected system behavior ?&lt;/P&gt;&lt;P&gt;Thank you.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/missing-reference-documents-for-the-hu-in-transaction-scwm-grpe/qaq-p/14232039"/>
    <published>2025-09-30T21:14:08.679000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-q-a/sapf110v-and-sapmf05a-program-last-changed-user-is-ddic/qaq-p/14232074</id>
    <title>SAPF110V and SAPMF05A Program last changed user is DDIC</title>
    <updated>2025-09-30T22:48:49.567000+02:00</updated>
    <author>
      <name>GNAYUDU</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1420866</uri>
    </author>
    <content>&lt;P&gt;Auditors are asking what changes were done by DDIC user for the programs SAPF110V (F110) and SAPMF05A (FB08)? When we look at the versions in development system, we do not see any versions. How do we prove to the Auditors that no changes were done to these programs? Appreciate your inputs.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-q-a/sapf110v-and-sapmf05a-program-last-changed-user-is-ddic/qaq-p/14232074"/>
    <published>2025-09-30T22:48:49.567000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/any-api-or-eml-for-posting-with-clearing-for-vendor-transfer/qaq-p/14232110</id>
    <title>Any API or EML for posting with clearing for vendor transfer?</title>
    <updated>2025-10-01T01:49:25.444000+02:00</updated>
    <author>
      <name>Jefferson-Rojas</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/157267</uri>
    </author>
    <content>&lt;P&gt;Hi experts,&lt;/P&gt;&lt;P&gt;I really hope that your knowledge help me with this problem.&lt;/P&gt;&lt;P&gt;Currently I need to create a program that allows to transfer posting with clearing in Cloud Public. This process was cover in On-Premise system by the FB05 transaction and its respectives BAPIS.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JeffersonRojas_0-1759275668197.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321822i04A6AE1774643509/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JeffersonRojas_0-1759275668197.png" alt="JeffersonRojas_0-1759275668197.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;But now I tried to do the process with the API&amp;nbsp;&lt;SPAN&gt;JournalEntryBulkClearingRequest_In (&lt;A href="https://api.sap.com/api/JOURNALENTRYBULKCLEARINGREQUES/resource" target="_blank" rel="noopener noreferrer"&gt;API Reference | Journal Entry - Clearing (Asynchronous) | SAP Business Accelerator Hub&lt;/A&gt;) but is not possible because it required to indicate the bill and the payment, in this case I only has the bill.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I tried with EML but the entity&amp;nbsp;I_JOURNALENTRYTP doesn't have the clearing scenario.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JeffersonRojas_1-1759276057668.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321823i05BEE5518CE7AC07/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JeffersonRojas_1-1759276057668.png" alt="JeffersonRojas_1-1759276057668.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/any-api-or-eml-for-posting-with-clearing-for-vendor-transfer/qaq-p/14232110"/>
    <published>2025-10-01T01:49:25.444000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/unable-to-deploy-rap-application-into-fiori-launchpad-in-sap-public-cloud/qaq-p/14232487</id>
    <title>Unable to Deploy RAP application into Fiori launchpad in SAP public cloud(3SL)</title>
    <updated>2025-10-01T11:52:25.461000+02:00</updated>
    <author>
      <name>Sanjay_BS1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2025855</uri>
    </author>
    <content>&lt;P&gt;Hello Experts,&lt;/P&gt;&lt;P&gt;I have created a custom RAP application in Eclipse using a development tenant. The application is working fine in the service binding preview and is showing data correctly.&lt;/P&gt;&lt;P&gt;However, I am facing an issue when trying to deploy this RAP application to the Fiori Launchpad. I am unsure about the correct steps to make it available in the launchpad in the SAP Public Cloud (3-System Landscape).&lt;/P&gt;&lt;P&gt;Has anyone faced the same issue and successfully deployed a RAP application to the Fiori Launchpad? Any guidance or step-by-step instructions would be highly appreciated.&lt;/P&gt;&lt;P&gt;Thank you in advance!&lt;BR /&gt;&lt;BR /&gt;Regards,&lt;BR /&gt;Sanjay&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/unable-to-deploy-rap-application-into-fiori-launchpad-in-sap-public-cloud/qaq-p/14232487"/>
    <published>2025-10-01T11:52:25.461000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/rap-custom-entity-deep-associations/qaq-p/14233131</id>
    <title>RAP Custom Entity Deep associations</title>
    <updated>2025-10-02T05:57:04.431000+02:00</updated>
    <author>
      <name>SandhyaBanwarie</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1788921</uri>
    </author>
    <content>&lt;P&gt;Hi there,&lt;/P&gt;&lt;P&gt;I composed a root custom entity Header which has a composition of 1 _to HeaderStart. Custom entity HeaderStart has a 1..* composition of _toLines. And the lines Custom Entity has a composition of _toDeliveryDetails. Custom Entity DeliveryDetails has a composition of one _toAddress Custom Entity.&lt;/P&gt;&lt;P&gt;Header-&amp;gt;_toHeaderStart-&amp;gt;_toLines-&amp;gt;_toDeliveryDetails-&amp;gt;_toAddress&lt;/P&gt;&lt;P&gt;i created a class and implemented the if_rap_query_provider.&amp;nbsp;&lt;/P&gt;&lt;P&gt;In my service i exposed all the entities. I created an odata v4 service&lt;/P&gt;&lt;P&gt;when i test my service via the gateway client I can only expand one level deep.&lt;/P&gt;&lt;P&gt;but i also want to expand to all other compositions but in one call starting from my root custom entity ZCE.&lt;/P&gt;&lt;P&gt;/ZCE(par1=â€˜1â€™,par2=â€˜2â€™)/Set&amp;amp;?expand=_toHeaderStart,_toLines,_toDeliveryDetails,_toAddress&lt;/P&gt;&lt;P&gt;in the debugger i come only two times in the select. But i want to deep nest further. Is this possible with custom entity?&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I designed it like this because i need a nested json.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Any help or tips are appreciated.&lt;/P&gt;&lt;P&gt;Kind regards,&amp;nbsp;&lt;/P&gt;&lt;P&gt;#RAP#CustomEntity #Composition&lt;/P&gt;&lt;P&gt;#associations&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/rap-custom-entity-deep-associations/qaq-p/14233131"/>
    <published>2025-10-02T05:57:04.431000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-q-a/requirement-to-disable-hide-post-goods-issue-in-me2on-output-screen/qaq-p/14233282</id>
    <title>Requirement to Disable/Hide â€˜Post Goods Issueâ€™ in ME2ON output screen.</title>
    <updated>2025-10-02T10:56:53.170000+02:00</updated>
    <author>
      <name>Manohar_Rm</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/699889</uri>
    </author>
    <content>&lt;P&gt;Hi ,&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;We have a requirement to &lt;STRONG&gt;hide/disable/suppress the â€˜Post Goods Issueâ€™ option&lt;/STRONG&gt; on the output screen of transaction &lt;STRONG&gt;ME2ON&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;The business process requires users to perform goods issue only with reference to &lt;STRONG&gt;outbound delivery&lt;/STRONG&gt;, and not directly with reference to the PO. Therefore, PGI should not be available in ME2ON.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Key points:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Requirement: Hide/disable/suppress PGI field in ME2ON.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;User will always issue goods with reference to outbound delivery.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Creation of a new Z transaction code is not an acceptable option.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Could you please share your inputs or recommended approach to achieve this requirement?&lt;/P&gt;&lt;P&gt;Thanks &amp;amp; Regards,&lt;BR /&gt;Manohar&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-q-a/requirement-to-disable-hide-post-goods-issue-in-me2on-output-screen/qaq-p/14233282"/>
    <published>2025-10-02T10:56:53.170000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/how-to-add-entries-to-transports-to-delete-objects-which-were-deleted-in/qaq-p/14233428</id>
    <title>How to add entries to transports to delete objects which were deleted in Dev and not in TADIR?</title>
    <updated>2025-10-02T13:56:54.171000+02:00</updated>
    <author>
      <name>haykma</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/40710</uri>
    </author>
    <content>&lt;P&gt;Hi community,&lt;BR /&gt;we have created a solution in abap and all development is done in one development-package in our own namespace. We delivered it by creating a transport-request with all objects of that development-package on it.&lt;BR /&gt;&lt;BR /&gt;Now we have a newer version of the solution. But some development-objects where deleted in the development since the first release. We will deliver the software again as a big transport with all development-objects of our development-package on it.&amp;nbsp;&lt;BR /&gt;We create this transport programmatically by selecting all objects from table TADIR for our development-package. Then we use the function-module "TRINT_OBJECTS_CHECK_AND_INSERT" to put all the selected development objects on the transport.&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;But this transport now should not contain only all available development-objects. It shell also contain all development-objects which were deleted since the last transport. So we read table "E071" for the transport of the previous release, check all entries if they still exists in TADIR and for all found no longer existing development objects we want a "delete"-entry in the transport request.&amp;nbsp;&lt;BR /&gt;First try was to use the same function module and setting the value for "objfunc" to "D" for deletion. But the Functionmodule seems to check all added entries for existence against TADIR (throws exception "show_only_tadir_missing").&lt;BR /&gt;&lt;BR /&gt;Principally it should work to add such deletion entries to a transport because i saw it in other software-packages we installed by using transports. The E071 for such transport shows also only a value of "D" for Attribute OBJFUNC.&lt;BR /&gt;&lt;BR /&gt;So my question is how to achive this. is there any special parameter in function-module "TRINT_OBJECTS_CHECK_AND_INSERT" or do i have to use another function-module or abap-class/-method?&lt;BR /&gt;&lt;BR /&gt;Any idea would be hardly welcome.&lt;BR /&gt;kind regards&lt;BR /&gt;Matthias&lt;BR /&gt;&lt;BR /&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/how-to-add-entries-to-transports-to-delete-objects-which-were-deleted-in/qaq-p/14233428"/>
    <published>2025-10-02T13:56:54.171000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/rap-using-custom-entity-with-load-multiple-data-using-pagination-and/qaq-p/14233901</id>
    <title>RAP Using Custom Entity with load multiple data using Pagination and Preview using UI annotations</title>
    <updated>2025-10-03T06:01:53.175000+02:00</updated>
    <author>
      <name>RakeshZore</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1759317</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This blog covers RAP development using a custom entity, showcasing data with UI annotations, and surpassing the standard SAP data preview limit through the use of pagination.&lt;/P&gt;&lt;P&gt;Lets Start....&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create a custom entity with the fields that need to be displayed or sent to the frontend.&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Custom entity for fetching data'
@ObjectModel.query.implementedBy: 'ABAP:ZCL_IMPLEMENT_EXT' //This is the class where the data is handle and processed
@UI:{ headerInfo:{  typeName: 'RAP Learn',
                             typeNamePlural: 'RAP Learn',
                             title: { label: 'RAP Learn',
                                       type: #STANDARD,
                                       value: 'component'
                                     },
                             description: { value: 'obj_desc' },
                                     typeImageUrl: 'sap-icon://activity-items' //Show Icon image on header of object layout
                           }
               }
@Search.searchable: true //for Searching the data from the output which is also need to implement in the implemented class above 
define root custom entity ZCE_MAIN
{
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.facet   : [{
                      id: 'ID1',
                      purpose: #STANDARD,
                      type: #IDENTIFICATION_REFERENCE,
                      label : 'Component detail',
                      position: 10
                    },
                    {
                id: 'FG1',
                purpose: #STANDARD,
                type: #FIELDGROUP_REFERENCE,
                label : 'Validity Date',
                targetQualifier: 'FG1',
                position: 10
              }]
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;         : {  selectionField: [{ position: 10 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                            entity : { name: 'ZIV_F4MATNR' , element: 'matnr'   } ,
                            additionalBinding: [{ localElement: 'werks', element: 'werks' },
                                                         {  localElement: 'stlan' , element: 'stlan' },
                                                         {  localElement: 'stlal' , element: 'stlal' }]}]
      @Consumption.filter.selectionType: #SINGLE
  key matnr       : matnr;
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;         : {  selectionField: [{ position: 20 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                      entity : { name: 'ZIV_F4WERKS', element: 'werks' }
                                                         }]
      @Consumption.filter.selectionType: #SINGLE
  key werks       : werks_d;
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;         : {  selectionField: [{ position: 30 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                entity : { name: 'ZIV_F4STLAN' , element: 'stlan' }
                                                   }]
      @Consumption.filter.selectionType: #SINGLE
  key stlan       : stlan;
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;         : {  selectionField: [{ position: 40 }]}
      @Consumption.filter.mandatory: true
      @Consumption.filter.selectionType: #SINGLE
  key stlal       : stlal;
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;         : { lineItem: [{ position: 10 }], identification: [{ position: 10 }]}
      @EndUserText.label: 'Level'
  key bom_level   : abap.dec( 2, 0 );
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;         : { lineItem: [{ position: 20 }], identification: [{ position: 20 }]}
      @EndUserText.label: 'Component'
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1692417"&gt;@search&lt;/a&gt;.defaultSearchElement: true
  key component   : idnrk;
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;         : {  selectionField: [{ position: 50 }]}
      @Consumption.filter.mandatory: true
      @Consumption.filter.selectionType: #SINGLE
      @EndUserText.label: 'Date'
      zdate       : abap.dats;
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;         : { lineItem: [{ position: 30, cssDefault: { width: '13rem' }  }], identification: [{ position: 30 }]}
      @EndUserText.label: 'Object Description'
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1692417"&gt;@search&lt;/a&gt;.defaultSearchElement: true
      obj_desc    : maktx;
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;         : { lineItem: [{ position: 35, cssDefault: { width: '8rem' } }], identification: [{ position: 35 }]}
      @EndUserText.label: 'Quantity'
      comp_qty    : kmpmg_bi;
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;         : { lineItem: [{ position: 45 }], identification: [{ position: 45 }]}
      @EndUserText.label: 'Unit'
      comp_unit   : kmpme;
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;         : { lineItem: [{ position: 55 }], fieldGroup: [{ position: 10 , qualifier: 'FG1', label: 'Valid From' }]}
      @EndUserText.label: 'Valid from'
      valid_from  : datuv_bi;
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;         : { lineItem: [{ position: 65 }], fieldGroup: [{ position: 11 , qualifier: 'FG1', label: 'Valid To' }]}
      @EndUserText.label: 'Valid to'
      valid_to    : datub_bi;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;While using the RAP framework, metadata extensions cannot be created for custom entities. Therefore, annotations must be directly included in the custom entity code itself for UI purposes.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2 : Create an implementation class for the custom entity mentioned above and name it&amp;nbsp;ZCL_IMPLEMENT_EXT&amp;nbsp;or use the custom name specified in the second line of the code.&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_implement_ext DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC
  SHARED MEMORY ENABLED .

  PUBLIC SECTION.
    DATA : et_final TYPE TABLE OF zce_main.
    INTERFACES if_rap_query_provider .

  PROTECTED SECTION.
  PRIVATE SECTION.

ENDCLASS.



CLASS ZCL_IMPLEMENT_EXT IMPLEMENTATION.

  METHOD if_rap_query_provider~select.
    CASE io_request-&amp;gt;get_entity_id( ).
      WHEN 'ZCE_MAIN'.
        TRY.
            DATA(lv_skip) = io_request-&amp;gt;get_paging( )-&amp;gt;get_offset( ). "gets the skip part from URL which means number of data to be skipped and default is 0 but later on it gets add by 20... till last data not get fetched
            DATA(lv_top) = io_request-&amp;gt;get_paging( )-&amp;gt;get_page_size( ). "gets the top part from URL which means number of data required and default is 20
            DATA(lt_filter) = io_request-&amp;gt;get_filter( )-&amp;gt;get_as_ranges( ). "gets the input value which is either pass in our filters or when click on single data line item
           
          CATCH cx_rap_query_filter_no_range.
            "handle exception
        ENDTRY.

        IF lv_top &amp;lt; 0.
*********** Start Logic
"Put logic for single data fetch in which it will trigger when you are going for object page while clicking on single item from display table
"Take inputs from LT_filter table for sending that particular data click 
*********** End Logic
            IF io_request-&amp;gt;is_total_numb_of_rec_requested( ).
              io_response-&amp;gt;set_total_number_of_records( lines( et_final ) ).
            ENDIF.
            IF io_request-&amp;gt;is_data_requested(  ).
              io_response-&amp;gt;set_data( et_final ).
            ENDIF.
        ELSE.
*********** Start Logic
"Put logic for actual multiple data fetch in which it will trigger when you click go button or any sort of actions like search, sort, excel download....
"Take inputs from LT_filter table for required data fetch 
*********** End Logic
          ENDIF.
********** Searching Logic
        DATA(lv_search) = io_request-&amp;gt;get_search_expression( ). "gets the value from Search field in the UI
          IF lv_search IS NOT INITIAL.
            DATA lt_search LIKE et_final.

            lv_search = |*{ lv_search }*|.
            lt_search = VALUE #( BASE lt_finalts
                          FOR ls_f IN et_final
                          WHERE ( field1 CP lv_search OR  "Put required field to be search instead of field1,field2.....
                                  field2 CP lv_search  OR
                                  field3 cp lv_search OR
                                  field4 cp lv_search OR                                                                
                                                       ( ls_f ) ).
            et_final = lt_search.
          ENDIF.
***********End of Searching logic
***********Sorting logic
        DATA(lt_sort_elements) = io_request-&amp;gt;get_sort_elements( ). "gets the detail table of ascending and descending of field we wants to be sorted from UI
          IF lt_sort_elements IS NOT INITIAL.
            LOOP AT lt_sort_elements INTO DATA(ls_sort).
              IF ls_sort-descending &amp;lt;&amp;gt; 'X'.
                SORT et_final BY (ls_sort-element_name) ASCENDING.
              ELSE.
                SORT et_final BY (ls_sort-element_name) DESCENDING.
              ENDIF.
            ENDLOOP.
          ENDIF.
**********End of sorting logic
**********Paging- logic for loading more data wrt Standard set amount of data
          IF lv_top IS NOT INITIAL OR lv_skip IS NOT INITIAL.
            /iwbep/cl_mgw_data_util=&amp;gt;paging( EXPORTING is_paging = VALUE #( top  = lv_top
                                                                            skip = lv_skip )
                                             CHANGING  ct_data   = et_final ).
          ENDIF.
*********End of Pagination

          IF io_request-&amp;gt;is_total_numb_of_rec_requested( ).
            io_response-&amp;gt;set_total_number_of_records( lines( et_final ) ). "set number of initial data to display overall
          ENDIF.

          IF io_request-&amp;gt;is_data_requested(  ).
            io_response-&amp;gt;set_data( et_final ). "Set data into the entity
          ENDIF.

        ENDIF.
    ENDCASE.
  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;The aforementioned class plays a crucial role as it encapsulates the entire logic for data processing, including searching, sorting, and most importantly, setting data for our custom entity.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3 : Create Service Definition of the Custom entity&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To create a service definition, simply right-click the custom entity in the Project Explorer, click 'New Service Definition', fill in the required inputs, and your service definition will be created.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service definition'
define service ZSD_MAIN {
  expose ZCE_MAIN;
  expose ZIV_F4MATNR; "This is for ValueHelp Definition, and it's okay not to expose it.
  expose ZIV_F4WERKS;
  expose ZIV_F4STLAN;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;Let's take a look at one of the interface views of the ValueHelpDefinition.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface view for ValueHelpDefinition - MATNR'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity ZIV_F4MATNR
  as select distinct from mast
    left outer join       makt on makt.matnr = mast.matnr
{
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;   : {  selectionField: [{ position: 10 }] , lineItem: [{ position: 10 }]}
      @EndUserText.label: 'Material No'
  key mast.matnr,
      @Consumption.filter.hidden: true
  key mast.werks,
      @Consumption.filter.hidden: true
  key mast.stlan,
      @Consumption.filter.hidden: true
  key mast.stlal,
      @Consumption.filter.hidden: true
      &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;   : {   lineItem: [{ position: 20 }]}
      @EndUserText.label: 'Material Desc'
      makt.maktx
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 4 : Create a Service Binding for the aforementioned service definition.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To create a service binding, simply right-click the created service definition in the Project Explorer, click 'New Service Binding', fill in the required inputs, and your service binding will be created. While creating the Service Binding, I selected OData V2 - UI. Then, activate and publish the service. To view the UI output, you can use the Preview option in Eclipse to see the output as shown in the image below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-02 211818.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322447iD800178661F5E9F5/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-02 211818.png" alt="Screenshot 2025-10-02 211818.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In conclusion, using RAP with custom entities and pagination facilitates efficient data handling. With UI annotations, you can easily preview and refine the user interface. We hope this guide has been helpful. Stay tuned for more tips!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Note: This program is created for a remote system. For cloud environments, you can use a service consumption model or access data through a remote system API in the implementation class.&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/rap-using-custom-entity-with-load-multiple-data-using-pagination-and/qaq-p/14233901"/>
    <published>2025-10-03T06:01:53.175000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-q-a/how-add-custom-field-in-cor1-in-sap-abap/qaq-p/14233922</id>
    <title>How add custom field in COR1 IN SAP ABAP</title>
    <updated>2025-10-03T06:48:37.114000+02:00</updated>
    <author>
      <name>Mahil</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1735104</uri>
    </author>
    <content>&lt;P&gt;hello Everyone,&lt;/P&gt;&lt;P&gt;I want to add Custom field in Process order creation(cor1).&lt;/P&gt;&lt;P&gt;I have inserted the custom field in COR1 GENERAL DATA Screen.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Note: already we have custom field in COR1 Screen. Additionaly need to add one more custom field in cor1.&amp;nbsp; my problem is, can't able to find the screen no .&lt;/P&gt;&lt;P&gt;Advance Thanks.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahil_0-1759465175173.png" style="width: 879px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322450i476197F1594C8F57/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Mahil_0-1759465175173.png" alt="Mahil_0-1759465175173.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahil_1-1759465227823.png" style="width: 890px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322451i743D054F5B39A342/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Mahil_1-1759465227823.png" alt="Mahil_1-1759465227823.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-q-a/how-add-custom-field-in-cor1-in-sap-abap/qaq-p/14233922"/>
    <published>2025-10-03T06:48:37.114000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/fiori-flexible-workflow-for-purchase-orders-my-inbox-is-empty/qaq-p/14234229</id>
    <title>Fiori Flexible Workflow for Purchase Orders - My inbox is empty</title>
    <updated>2025-10-03T12:38:32.087000+02:00</updated>
    <author>
      <name>Daniel_NTT</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1425865</uri>
    </author>
    <content>&lt;P&gt;Hello everyone&lt;/P&gt;&lt;P&gt;During upgrade from on prem 2020 to 2023 (I think) there are some problems with Flexible Workflow. User cannot see any WF items in his Inbox Fiorii App. He has to go to SBWP and then accept the PO.&lt;/P&gt;&lt;P&gt;Normally it works that users ( approvers ) have to receive notification in theirs Inbox.&amp;nbsp; They only receive email notification about approve.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Daniel_NTT_0-1759487427702.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322599iD787DAE54C973BDB/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Daniel_NTT_0-1759487427702.png" alt="Daniel_NTT_0-1759487427702.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Daniel_NTT_1-1759487555811.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322602i7FED6378A503D499/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Daniel_NTT_1-1759487555811.png" alt="Daniel_NTT_1-1759487555811.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Daniel_NTT_2-1759487676824.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322603i901B68A1A59BBE0D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Daniel_NTT_2-1759487676824.png" alt="Daniel_NTT_2-1759487676824.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I will be appreciated for any support.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/fiori-flexible-workflow-for-purchase-orders-my-inbox-is-empty/qaq-p/14234229"/>
    <published>2025-10-03T12:38:32.087000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/hcm-pernr-and-business-partner-sync-issue/qaq-p/14234482</id>
    <title>HCM pernr and business partner sync issue</title>
    <updated>2025-10-03T18:57:34.147000+02:00</updated>
    <author>
      <name>S_Shukla</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2053293</uri>
    </author>
    <content>&lt;P&gt;Pernr to bp sync is not working completely or only one company code/country.&lt;/P&gt;&lt;P&gt;BP is created but it is not extending for FI vendor role, this role is extended and working fine for other company code.&lt;/P&gt;&lt;P&gt;Need to find exact cause.&lt;/P&gt;&lt;P&gt;Any way to find root cause by debugging or checking configuration.&lt;/P&gt;&lt;P&gt;Your suggestion is appreciated if any encountered this type of issue in S4Hana&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/hcm-pernr-and-business-partner-sync-issue/qaq-p/14234482"/>
    <published>2025-10-03T18:57:34.147000+02:00</published>
  </entry>
</feed>
