<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-BTP-ABAP-environment-blog-posts.xml</id>
  <title>SAP Community - SAP BTP, ABAP environment</title>
  <updated>2025-11-01T21:00:25.320934+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP BTP, ABAP environment/pd-p/73555000100800001164" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP BTP, ABAP environment blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-pre-upgrade-option-for-release-2511/ba-p/14219621</id>
    <title>SAP BTP ABAP Environment – Pre-Upgrade Option for Release 2511</title>
    <updated>2025-09-17T09:05:06.828000+02:00</updated>
    <author>
      <name>FrankJentsch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4296</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1631099199"&gt;Overview&lt;/H1&gt;&lt;P&gt;Providing a significant number of new features is an important goal of release upgrades to deliver innovations to our customers and partners. There are four major release upgrades per year following a predefined schedule as described in this&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/sap-btp-abap-environment-maintenance-windows-and-major-upgrade-windows-in/ba-p/13920833" target="_blank"&gt;blog post&lt;/A&gt;.&lt;BR /&gt;&lt;BR /&gt;An upgrade is intended as a “no event” for customers and partners. For example, only compatible changes of released objects (APIs) will be delivered. We recommend performing a test of the custom-built productive apps in a test environment for the new release. The complexity of the technical dependencies between the custom-built apps and the underlying environment cannot be tested isolated, only including the ABAP environment on SAP-side. Therefore, we offer you to pre-upgrade selected systems 29 days&amp;nbsp;in advance to test the applications prior to the planned standard-upgrade.&amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1434585694"&gt;Purpose&lt;/H1&gt;&lt;P&gt;This option enables a customer or partner to test the applications they have already developed on top of the new release a couple of days before the standard-upgrade. With SAP BTP ABAP Environment (aka "Steampunk"), we follow the approach of keeping released objects stable and provide all enhancements in a compatible fashion. Early testing is an additional measure to ensure proper software quality and might be used to detect unforeseen regressions. However, this option is not intended to test new features or to consume new features earlier.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1238072189"&gt;Approach&lt;/H1&gt;&lt;P&gt;The standard-upgrade of all systems to release &lt;STRONG&gt;2511&lt;/STRONG&gt;&amp;nbsp;is planned for &lt;STRONG&gt;November 15/16&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;A customer or partner can nominate one or more already existing systems for the pre-upgrade. A nominated system will be upgraded on &lt;STRONG&gt;October 17&lt;/STRONG&gt;&amp;nbsp;within a planned downtime&amp;nbsp;&lt;STRONG&gt;from 8:00 to 16:00 CET&lt;/STRONG&gt;. Depending on the system settings, the actual technical downtime might be only ~20 min within the mentioned timeframe. Please refer to this &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-downtime-optimized-upgrades-and-hotfix-collection/ba-p/13986913" target="_self"&gt;blog post&lt;/A&gt; about the downtime-optimized upgrade.&amp;nbsp;&lt;/P&gt;&lt;P&gt;We recommend nominating a non-development system, such as a test system. The nomination of a development system is technically also possible, but fixes or other changes must not be imported into another system with a lower release. The nomination of a productive system doesn’t make sense because the purpose of the pre-upgrade is the re-test of the existing application before the productive system gets the new release.&lt;/P&gt;&lt;P&gt;According to the approach explained above, this offer is only relevant for customers or partners having at least two systems.&lt;/P&gt;&lt;P&gt;There might be situations where a correction of custom objects needs to be deployed. Such corrections are possible if the development / correction system is on the older release and is imported into the pre-upgraded system with the higher release.&lt;/P&gt;&lt;P&gt;Except potential fixes, the pre-upgrade is based on the same version as the standard-upgrade. It is planned to perform the pre-upgrade based on &lt;STRONG&gt;hotfix collection 1&lt;/STRONG&gt;. The pre-upgrade systems will get the import of &lt;STRONG&gt;hotfix collection 2&lt;/STRONG&gt;&amp;nbsp;after 2 weeks in the middle of the entire pre-upgrade test phase.&amp;nbsp;It is planned to perform the standard-upgrade based on &lt;STRONG&gt;hotfix collection 3&lt;/STRONG&gt;&amp;nbsp;and import this hotfix collection 3 to the pre-upgrade systems on &lt;STRONG&gt;November 15/16&amp;nbsp;&lt;/STRONG&gt;as well.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1041558684"&gt;Costs&lt;/H1&gt;&lt;P&gt;This offering is optional and free of any additional charges.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-845045179"&gt;Planned New Features&lt;/H1&gt;&lt;P data-unlink="true"&gt;The planned new features will be published on the &lt;A href="https://help.sap.com/whats-new/7a822d3bcaa74f31b98fa315601e9c96?Version=ABAP%20Environment%202511" target="_blank" rel="noopener noreferrer"&gt;What's New for SAP BTP ABAP Environment&lt;/A&gt; on &lt;STRONG&gt;October 17&lt;/STRONG&gt;.&amp;nbsp;This list gives you an overview of potential areas for re-testing. The purpose of the pre-upgrade is not to consume these features before the standard-upgrade, because the documentation on help.sap.com will be delivered later before the standard-upgrade. It would also not be possible to transport code of such an adoption, because subsequent systems are not yet on the new release during the pre-upgrade phase.&lt;/P&gt;&lt;P&gt;Independent of the upgrades of the SAP BTP ABAP Environment, we recommend developing automated tests for the custom-built apps to detect regressions early on and without manual effort for re-testing. Such automated tests are perfectly suited to be run in the pre-upgrade test phase.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-648531674"&gt;Time Schedule&lt;/H1&gt;&lt;P&gt;The following figure summarizes the general approach:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="2025-06-17_16-57-23.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275499iE301A3CB2199AF89/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-06-17_16-57-23.png" alt="2025-06-17_16-57-23.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Milestones for release &lt;STRONG&gt;2511&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;September 16&lt;/STRONG&gt;: Nomination of system(s) is possible in the Landscape Portal&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;October 17&lt;/STRONG&gt;: Announcement of the planned new features&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;October 13&lt;/STRONG&gt;: Pre-upgrade systems are known&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;October 17: Pre-upgrade (with hotfix collection 1)&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;October 31&lt;/STRONG&gt;: Import of hotfix collection 2 into pre-upgrade systems&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;November 12&lt;/STRONG&gt;: Potential decision to postpone the upgrade&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;November 15/16: Standard-upgrade&amp;nbsp;(with hotfix collection 3)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-452018169"&gt;System Nomination&lt;/H1&gt;&lt;P&gt;To nominate a system, please register the system(s) by &lt;STRONG&gt;October 13&lt;/STRONG&gt;&amp;nbsp;(EOB) latest by using the &lt;STRONG&gt;Landscape Portal&lt;/STRONG&gt;. You can find further information about &lt;A href="https://help.sap.com/docs/sap-btp-abap-environment/landscape-portal/accessing-landscape-portal" target="_blank" rel="noopener noreferrer"&gt;Accessing the Landscape Portal&lt;/A&gt; and about &lt;A href="https://help.sap.com/docs/sap-btp-abap-environment/landscape-portal/register-systems-for-pre-upgrade" target="_blank" rel="noopener noreferrer"&gt;Register Systems for Pre-Upgrade&lt;/A&gt;. Please do &lt;STRONG&gt;not&lt;/STRONG&gt; create customer tickets for system nomination like in previous pre-upgrades.&lt;/P&gt;&lt;P&gt;With such a nomination, the customer agrees to an extraordinary planned maintenance on &lt;STRONG&gt;October 17&lt;/STRONG&gt;&amp;nbsp;(see above).&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-255504664"&gt;Report an Issue&lt;/H1&gt;&lt;P&gt;Issues should be reported as part of the regression test phase by &lt;STRONG&gt;October 31&lt;/STRONG&gt;&amp;nbsp;(EOB) to allow for a sufficient time frame for issue analysis and potential corrections on SAP-side.&lt;/P&gt;&lt;P&gt;Please create a customer ticket by using component&amp;nbsp;&lt;STRONG&gt;BC-CP-ABA&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;If a detected issue is likely to endanger the productive use after the standard-upgrade, you should use ticket priority&amp;nbsp;&lt;STRONG&gt;very high&lt;/STRONG&gt;&amp;nbsp;despite the fact that the pre-upgrade system is not a productive system.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-58991159"&gt;Exceptional Process in Case of Unresolved Priority Very High Issues&lt;/H1&gt;&lt;P&gt;In case of the aligned decision on Wednesday, &lt;STRONG&gt;November 12&lt;/STRONG&gt;&amp;nbsp;(based on unresolved priority very high tickets) to postpone the upgrade, a dedicated mitigation process needs to be started&amp;nbsp;&lt;SPAN&gt;together with the respective customer or partner, with the following boundary conditions:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Resolving the open priority very high issues remains the highest priority for both, SAP and the customer or partner, as it is also the prerequisite for the upgrade.&lt;/LI&gt;&lt;LI&gt;According to the estimated issue resolution, catching up the upgrade needs to be planned.&lt;/LI&gt;&lt;LI&gt;The upgrade leads to a business downtime of 6 – 8 hours.&lt;/LI&gt;&lt;LI&gt;The upgrade must be scheduled within 7 calendar days the latest after fixing all remaining open priority very high issues.&lt;/LI&gt;&lt;LI&gt;We will not provide any fixes for the old release after the original date of the standard-upgrade to the new release.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In case business-critical issues are detected after the upgrade:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Issues need to be reported as priority very high issues and will be processed accordingly.&lt;/LI&gt;&lt;LI&gt;Going back to the release before upgrade is not an option. Therefore, resolving the issues in the new release with the appropriate priority is the required approach.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--137522346"&gt;Summary&lt;/H1&gt;&lt;P&gt;We recommend performing regression tests in pre-upgraded test systems to avoid day-1 impacts of productive custom apps after the standard-upgrade.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-pre-upgrade-option-for-release-2511/ba-p/14219621"/>
    <published>2025-09-17T09:05:06.828000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-s-4hana-table-maintenance-reimagined-choosing-the-right-framework/ba-p/14218970</id>
    <title>SAP S/4HANA Table Maintenance Reimagined: Choosing the Right Framework</title>
    <updated>2025-09-17T12:42:25.292000+02:00</updated>
    <author>
      <name>Saurabh_Gupta1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/53365</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In this blog, we’ll explore a practical use case implemented in&amp;nbsp;&lt;STRONG&gt;S/4HANA 2021 On-Premise&lt;/STRONG&gt;, where we opted for&amp;nbsp;&lt;STRONG&gt;Custom Business Objects (CBO)&lt;/STRONG&gt;&amp;nbsp;to enable table maintenance via Fiori with minimal development effort and also &lt;STRONG&gt;evaluate new frameworks&lt;/STRONG&gt; to achieve this in &lt;STRONG&gt;latest S4/HANA release 2023&lt;/STRONG&gt;.&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-2018320602"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Approach for choosing Custom Business Object&lt;/STRONG&gt; (Decision Matrix)&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;CBO is based on BOPF framework which was widely used by SAP before the era of RAP (RESTful ABAP Programming), while this is still relevant, SAP has now moved to RAP based development and a new concept called custom business configuration, both will be covered later in context of data maintenance.&lt;/FONT&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1950889816"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Why we didn’t choose RAP or Custom business configuration for this use case.&lt;/FONT&gt;&lt;/H5&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration ( Business configuration maintenance object ) – This is available from S4 On-Prem 2022 onwards and the Fiori app for CUBCO is available after 2023 onwards.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;RESTful ABAP Programming – SAP has provided RAP Generator which can generate all the artefacts based on a table right from views, behavior definition , service binding , generation to Fiori app however this is also not available in On-Prem 2021, the other workaround could be to build all these artefacts manually and generate Fiori app which was going to take more development time, hence it was avoided.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Since we cannot go with above 2 options, the only 2 options left are SM30 and Custom Business object, as we want to move towards Fiori first approach, Custom business object was chosen as the Go to approach. Let us deep dive in this with the help of use- case and practical tips&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1625293592"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;What is Custom Business Object –&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;With the Custom Business Objects Fiori app, you can create and manage custom business objects. A custom business object is a hierarchical set of database tables with an API for creation, retrieval, update and deletion of data.&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In The Fiori App ‘Custom Business Object’, a new BO has been defined and maintained as below.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;User can choose what options do they want as part of framework, e,g, Change document, system admin date (last change at, created at etc are added by default).&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;User interface is disabled in this since it is only possible to enable if Embedded gateway is used which is not the case here.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Saurabh_Gupta1_2-1758034866616.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315300i224DEF863855A856/image-size/large?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_2-1758034866616.png" alt="Saurabh_Gupta1_2-1758034866616.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You are free to choose what kind of operations, out of CUD, should be supported in the BO out of box.&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_3-1758035070410.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315301i4300283172BACF00/image-size/large?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_3-1758035070410.png" alt="Saurabh_Gupta1_3-1758035070410.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;This is where all the fields are defined for BO.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_4-1758035118964.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315302i70F7DFC5438ED8AD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_4-1758035118964.png" alt="Saurabh_Gupta1_4-1758035118964.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1557862806"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Final Output&lt;/STRONG&gt; –&lt;/FONT&gt;&lt;/H5&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Until this point, no coding has been done except for few changes in CDS Metadata for Fiori UI related cosmetic changes, all the operation are handled by framework out of box.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;An additional button ‘Mass upload’ was added in metadata extension which is using intent-based navigation to navigate to another GUI application for mass upload of the entries.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_0-1758038827500.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315330iD5E9892D58E6AD7F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_0-1758038827500.png" alt="Saurabh_Gupta1_0-1758038827500.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1361349301"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Few Tips&lt;/STRONG&gt; -&lt;/FONT&gt;&lt;/H5&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom Table (Type Application) is auto generated in this case with Key field as UUID.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Data entries maintained in one system cannot be transported to other system and must be maintained in target system, which was also the requirement in our use case.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Once business object is published and moved to production, Deletion is not allowed.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H4 id="toc-hId-1035753077"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;How does the future look like for the same activity (Table Maintenance)-&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;As discussed above, there are 2 other ways to achieve this with minimal development efforts in new S4 HANA releases.&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;H4 id="toc-hId-839239572"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Custom Business Configuration&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;This is &lt;STRONG&gt;recommended &lt;/STRONG&gt;approach going forward where a business configuration maintenance object serves as primary entry point for maintenance.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;We have the option to use the Generate ABAP Repository Objects Wizard for Business configuration maintenance object to generate all required development objects based on a customizing table&lt;/LI&gt;&lt;LI&gt;Based on the Business configuration maintenance object, the custom business configurations app renders a&amp;nbsp;Fiori element list report for the entities exposed by the service binding to maintain the configuration entries&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_11-1758035471221.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315310i8644DD844BCAACC2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Saurabh_Gupta1_11-1758035471221.png" alt="Saurabh_Gupta1_11-1758035471221.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_12-1758035554875.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315311iD7963B6C1BF5D5BD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Saurabh_Gupta1_12-1758035554875.png" alt="Saurabh_Gupta1_12-1758035554875.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Image courtesy - SAP&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In short, Custom business configuration (Fiori app) is an umbrella under which all maintenance objects will be listed and serves as one stop shop while maintenance objects are the actual ABAP artefact which contains all the definition related to Object maintenance.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_13-1758035620891.png" style="width: 605px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315321i9C4BDEE4DBF5C59B/image-dimensions/605x198?v=v2" width="605" height="198" role="button" title="Saurabh_Gupta1_13-1758035620891.png" alt="Saurabh_Gupta1_13-1758035620891.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.44.20 PM.png" style="width: 607px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315314iA3E7AFAAA2468BBB/image-dimensions/607x199?v=v2" width="607" height="199" role="button" title="Screenshot 2025-09-16 at 8.44.20 PM.png" alt="Screenshot 2025-09-16 at 8.44.20 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Different options like SM30 are available by default such Add copy action out of box.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Add Data Consistency Check for fields with fixed domain values or foreign key screen check.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.44.37 PM.png" style="width: 633px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315317i5B28948485F2436C/image-dimensions/633x333?v=v2" width="633" height="333" role="button" title="Screenshot 2025-09-16 at 8.44.37 PM.png" alt="Screenshot 2025-09-16 at 8.44.37 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;All of the below objects are created by default including CDS view, service definition, service binding, business object maintenance , transport definition, implementation classes etc.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.44.59 PM.png" style="width: 638px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315318i40537C78E8356547/image-dimensions/638x478?v=v2" width="638" height="478" role="button" title="Screenshot 2025-09-16 at 8.44.59 PM.png" alt="Screenshot 2025-09-16 at 8.44.59 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.45.18 PM.png" style="width: 635px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315320i990558C08B796ACB/image-dimensions/635x487?v=v2" width="635" height="487" role="button" title="Screenshot 2025-09-16 at 8.45.18 PM.png" alt="Screenshot 2025-09-16 at 8.45.18 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-771808786"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Final Output -&amp;nbsp;&lt;/FONT&gt;&lt;/H5&gt;&lt;P&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Until this point, no coding has been done; all these features are provided out of the box by the framework.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="trebuchet ms,geneva"&gt;The custom business configuration app shows all the maintenance objects for which the user is authorized. &lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_0-1758178463971.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316288i7C80DFB3C71A9925/image-size/large?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_0-1758178463971.png" alt="Saurabh_Gupta1_0-1758178463971.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the relevant maintenance object is selected, the Edit button would be enabled to allow creation, deletion, updation, etc. activities.&lt;/P&gt;&lt;H5 id="toc-hId-575295281"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_1-1758178556614.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316290i00ACBDF62350D6C3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_1-1758178556614.png" alt="Saurabh_Gupta1_1-1758178556614.png" /&gt;&lt;/span&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Few Practical Tips&lt;/FONT&gt; –&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;All tables must have a client key field and delivery class C&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Have a timestamp field with data element&amp;nbsp;ABP_LASTCHANGE_TSTMPL&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;To enable the "No Transport" option in the ADT wizard, implement SAP Note&amp;nbsp; &lt;A href="https://me.sap.com/notes/3579012" target="_blank" rel="noopener noreferrer"&gt;https://me.sap.com/notes/3579012&lt;/A&gt;.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;With few tweaks, it is possible to maintain data directly in production system instead of transporting. More details in this &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-a-rap-bo-to-change-the-content-of-a-customizing-table-in-the/ba-p/13723087" target="_blank"&gt;blog&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;As of version SAP S/4HANA release 2022, customers can use the generator for Business Configuration objects. The Custom Business Configurations SAP Fiori app is not yet available; app has been made available in release 2023.&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-249699057"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;2. RAP Generator&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Second approach to achieve this is using same generation wizard from context menu of table.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.45.34 PM.png" style="width: 623px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315319i590CF530AE26F47A/image-dimensions/623x592?v=v2" width="623" height="592" role="button" title="Screenshot 2025-09-16 at 8.45.34 PM.png" alt="Screenshot 2025-09-16 at 8.45.34 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId--737934550"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;How is Custom business configuration different than plain RAP generator?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration is a framework which is also built on RAP artefacts, but it has other framework related functionalities (e.g change log for auditing) in comparison to plain RAP application.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Fiori for CBC can be accessed through generic custom business configuration app serving as single source of entry whereas RAP application should be exposed as standalone app.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration app is built only around customizing tables whereas RAP generator can be built around any customizing and application tables both.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;CBC provides in built functionality to capture entries into transport request, but RAP generator requires explicit changes to incorporate transport feature.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H5 id="toc-hId--934448055"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;How is Custom business configuration different than custom business object?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration is built on RAP framework (SAP recommended) whereas custom business objects is built on BOPF framework.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration has transport feature for data entries whereas custom business object does not any way to transport entries from one system to other system.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration is bottom-up approach where custom tables are defined first, and rest of the artifacts are generated around that whereas custom business object works on top-down approach where business object is created first then custom table is generated around BO.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration supports only OData V4 where CBO supports OData V2.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration app is built only around customizing tables whereas custom business object is built around application tables.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Once CBO has moved to production, it cannot be deleted.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In both the case, Metadata can be enhanced for any Fiori related UI changes, also additional validation, actions are supported in both.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Additional reading-&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/b5670aaaa2364a29935f40b16499972d/047e01c3bcdd4303a60b61364bd5b31d.html?locale=en-US&amp;amp;version=202310.002" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/ABAP_PLATFORM_NEW/b5670aaaa2364a29935f40b16499972d/047e01c3bcdd4303a60b61364bd5b31d.html?locale=en-US&amp;amp;version=202310.002&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/custom-business-configuration/ba-p/13647767" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/custom-business-configuration/ba-p/13647767&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-s-4hana-table-maintenance-reimagined-choosing-the-right-framework/ba-p/14218970"/>
    <published>2025-09-17T12:42:25.292000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-on-sap-cloud-infrastructure/ba-p/14221722</id>
    <title>SAP BTP ABAP Environment on SAP Cloud Infrastructure</title>
    <updated>2025-09-19T12:39:18.178000+02:00</updated>
    <author>
      <name>FrankJentsch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4296</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;With the availability of SAP BTP ABAP Environment on SAP Cloud Infrastructure&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;on September 19th 2025&lt;/STRONG&gt;&lt;STRONG&gt;,&lt;/STRONG&gt; Steampunk has reached the next milestone in the multi-hyperscaler availability for our customers, partners and SAP products using Steampunk.&lt;/P&gt;&lt;P&gt;The following region on SAP Cloud Infrastructure is now supported by SAP BTP &lt;STRONG&gt;and&lt;/STRONG&gt; Steampunk:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Europe (Frankfurt) - EU access&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This new region complements the already existing regions on AWS, Microsoft Azure, and Google Cloud. Please find an overview about all supported hyperscalers and regions in the &lt;A href="https://discovery-center.cloud.sap/serviceCatalog/abap-environment?tab=service_plan&amp;amp;region=all" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Discovery Center&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;The second region on&amp;nbsp;SAP Cloud Infrastructure is planned in Q4/2025 in China (Shanghai). We will update and enhance the plan of further data centers regularly in the &lt;A href="https://roadmaps.sap.com/board?PRODUCT=73555000100800001164" target="_self" rel="noopener noreferrer"&gt;Roadmap Explorer&lt;/A&gt;.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1631785354"&gt;Available Service Plans&lt;/H1&gt;&lt;P&gt;All well-established service plans&amp;nbsp;&lt;STRONG&gt;standard&lt;/STRONG&gt;, &lt;STRONG&gt;build-runtime&lt;/STRONG&gt;,&amp;nbsp;&lt;STRONG&gt;saas_oem&lt;/STRONG&gt;, and &lt;STRONG&gt;free&lt;/STRONG&gt; are available in the new region.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1435271849"&gt;How to use Steampunk on SAP Cloud Infrastructure&lt;/H1&gt;&lt;P&gt;To create a new Steampunk system on SAP Cloud Infrastructure, open the SAP BTP Cockpit and create (or use) a subaccount for the respective &lt;STRONG&gt;SAP Cloud Infrastructure&lt;/STRONG&gt; region, for example, &lt;STRONG&gt;cf-eu01&lt;/STRONG&gt;. Follow the steps as explained in the&amp;nbsp;&lt;A href="https://help.sap.com/docs/sap-btp-abap-environment/abap-environment/abap-environment-initial-settings" target="_blank" rel="noopener noreferrer"&gt;Steampunk documentation&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1238758344"&gt;References&lt;/H1&gt;&lt;P&gt;Please refer to the following additional references:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog/abap-environment?region=all&amp;amp;tab=service_plan" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Discovery Center&amp;nbsp;for all supported providers, service plans and regions&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/abap-cross-product/roadmap-info/sap-btp-abap-environment-roadmap-information?profile=20034788" target="_blank" rel="noopener noreferrer"&gt;Roadmap information&amp;nbsp;for Steampunk infrastructure&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/topics/btp-abap-environment" target="_blank"&gt;SAP Community page&amp;nbsp;for Steampunk&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-on-sap-cloud-infrastructure/ba-p/14221722"/>
    <published>2025-09-19T12:39:18.178000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/how-sap-s-abap-cloud-partner-reference-app-simplifies-multi-tenant-side-by/ba-p/14223705</id>
    <title>How SAP’s ABAP Cloud Partner Reference App Simplifies Multi-Tenant Side-by-Side Extensions on BTP</title>
    <updated>2025-09-22T11:54:22.811000+02:00</updated>
    <author>
      <name>murthy_v</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/343378</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;The SAP BTP ABAP environment continues to unlock powerful opportunities for partners and developers seeking to extend and integrate with SAP Cloud ERP - particularly SAP S/4HANA Cloud Public Edition, by enabling SaaS extension development, leveraging existing ABAP expertise, and delivering benefits such as harmonized user experience, built-in product standard compliance, and simplified lifecycle management and operations out of the box. To further support this process, SAP offers the open-source &lt;A href="https://github.com/SAP-samples/abap-partner-reference-application/" target="_blank" rel="noopener nofollow noreferrer"&gt;ABAP Partner Reference Application&lt;/A&gt;&amp;nbsp;as a best-practice resource.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A title="abap-partner-reference-application" href="https://github.com/SAP-samples/abap-partner-reference-application" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="V8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319012i341B56D90D20194E/image-size/large?v=v2&amp;amp;px=999" role="button" title="V8.png" alt="V8.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The &lt;A href="https://github.com/SAP-samples/abap-partner-reference-application/" target="_blank" rel="noopener nofollow noreferrer"&gt;ABAP Partner Reference Application&lt;/A&gt;&amp;nbsp;on&amp;nbsp;&lt;A href="https://github.com/SAP-samples/abap-partner-reference-application" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP-Samples Git repository&lt;/A&gt; demonstrates how to design, build, and operate&amp;nbsp;multi-tenant side-by-side applications&amp;nbsp;using ABAP Cloud practices while following SAP’s recommended development approaches. The&amp;nbsp;ABAP Partner Reference Application provides developers and technical architects with standard patterns, modular code, and documented guidance for building&amp;nbsp;robust, multi-tenant ABAP applications&amp;nbsp;on SAP BTP, fully integrated with SAP S/4HANA Cloud Public Edition. It guides partners on designing, deploying, and extending ABAP solutions. It provides a blueprint for building scalable, multi-tenant apps that extend and integrate with SAP S/4HANA Cloud Public Edition.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A title="abap-partner-reference-application" href="https://github.com/SAP-samples/abap-partner-reference-application" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317685i29507B55CC679964/image-size/large?v=v2&amp;amp;px=999" role="button" title="2.png" alt="2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What is the ABAP Partner Reference Application?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The ABAP Partner Reference Application (APRA) is a sample implementation that provides practical examples, such as the &lt;STRONG&gt;Music Festival Manager&lt;/STRONG&gt;. It shows partners how to:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Build extensions on&amp;nbsp;SAP BTP ABAP Cloud.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Integrate seamlessly with&amp;nbsp;SAP S/4HANA Cloud Public Edition.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Handle critical multi-tenant aspects such as&amp;nbsp;tenant provisioning, onboarding, and isolation.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Follow SAP’s&amp;nbsp;ABAP Cloud and Restful ABAP Programming Model (RAP)&amp;nbsp;guidelines.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;In short, it’s a real-world blueprint for partners who need a reference starting point.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A title="abap-partner-reference-application" href="https://github.com/SAP-samples/abap-partner-reference-application" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="1_1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317684i37540CB722475C03/image-size/large?v=v2&amp;amp;px=999" role="button" title="1_1.png" alt="1_1.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Capabilities Highlighted&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Multi-tenancy design:&amp;nbsp;APRA showcases how to build applications that serve multiple tenants securely while keeping data isolated.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Tenant lifecycle management:&amp;nbsp;Includes practical examples of provisioning and onboarding processes.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Integration patterns:&amp;nbsp;Demonstrates how ABAP applications can consume SAP S/4HANA Cloud Public Edition APIs side by side, extending core business logic without modification.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Best practices in ABAP Cloud:&amp;nbsp;Clean-core extensions, RAP-based services, and modular design patterns are applied throughout&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;A title="abap-partner-reference-application" href="https://github.com/SAP-samples/abap-partner-reference-application" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317702iE1C9B9D459AEF8C3/image-size/large?v=v2&amp;amp;px=999" role="button" title="3.png" alt="3.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Why It Matters for Partners&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For partners building SAP-certified solutions, alignment with ABAP Cloud principles is no longer optional. APRA offers more than just example code: it provides implementation guidance&amp;nbsp;to ensure solutions are cloud-ready, scalable, and compliant. By studying and adapting the repository, partners save time, reduce uncertainty, and can fast-track their certification and deployment processes.&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The repository demonstrates&amp;nbsp;and aligns with SAP clean-core architecture and RAP best practices, enabling maintainable, upgrade-safe solutions.&amp;nbsp;Along with modularization, helping partners build solutions that are scalable, maintainable, and compliant with SAP’s cloud-first best practices. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It provides&amp;nbsp;real-world samples&amp;nbsp;for rapid development of side-by-side extensions in the SAP BTP ABAP environment.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It demonstrates end-to-end flows: business object modelling, onboarding and provisioning, secure multi-tenancy, and SAP S/4HANA Cloud Public Edition API integration. It includes example business objects, tenant-specific onboarding logic, and detailed sample integrations with SAP S/4HANA Cloud Public Edition APIs, serving as ready-to-adapt templates for real-world enterprise scenarios.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Each step—from tenant lifecycle management to extending SAP S/4HANA Cloud Public Edition functionality using side-by-side applications—is implemented with guidance notes and sample ABAP artifacts, making cloud development approachable for teams at any skill level.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Multi-Tenancy Patterns:&amp;nbsp;Learn how to isolate data and processes by tenant, automate provisioning, and secure user access using SAP BTP role collections and dedicated onboarding flows.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Integration Points:&amp;nbsp;Discover how to consume core APIs, events, and data from SAP S/4HANA Cloud Public Edition while preserving ERP clean core, using recommended SAP BTP services for authentication, navigation, and extensibility.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;RAP and ABAP Cloud Usage:&amp;nbsp;Access sample RAP service definitions and back-end logic that illustrate SAP’s latest cloud-based application paradigms, making it straightforward to adopt modern development models.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Getting Started / How to Use the Repository&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The repository is publicly available on GitHub and welcomes exploration. Developers can:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/import-content-from-abapgit-repository-into-abap-environment" target="_blank" rel="noopener noreferrer"&gt;Import the Music Festival Manager application from your abapGit repository into your ABAP environment in ADT&lt;/A&gt;, browse the artifacts, and review the &lt;A href="https://github.com/SAP-samples/abap-partner-reference-application/blob/main/README.md" target="_blank" rel="noopener nofollow noreferrer"&gt;README&lt;/A&gt; for instructions on deployment and configuration to start with ready-to-run examples or tutorials.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Follow the incremental development guides in the main branch to build up your own ABAP partner app using the same best practices. Follow examples for multi-tenant design, onboarding, and integration with SAP S/4HANA Cloud Public Edition.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Analyze business object definitions, RAP service implementations, and onboarding/integration logic to adapt for your own solution. Use the sample reference application as templates for partner apps, adapting the RAP artifacts and onboarding logic for your business scenario and leverage the documented guidance to use APRA as a&amp;nbsp;starting template&amp;nbsp;for your own solutions.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317689i3F0530DC48CE3D27/image-size/large?v=v2&amp;amp;px=999" role="button" title="4.png" alt="4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;A title="abap-partner-reference-application" href="https://github.com/SAP-samples/abap-partner-reference-application" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317688i8322E35E9BF873E7/image-size/large?v=v2&amp;amp;px=999" role="button" title="4.png" alt="4.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Inside the Repository: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;A href="https://github.com/SAP-samples/abap-partner-reference-application/tree/main" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;Packages and Artifacts&lt;/STRONG&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The repository is organized to guide developers through building a&amp;nbsp;core ABAP application, then evolving it into a&amp;nbsp;multi-tenant solution.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Artifacts are grouped by application logic (business objects), onboarding flows, integration APIs, and service definitions that illustrate SAP’s recommended RAP approach.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The samples &lt;STRONG&gt;Music Festival Manager&lt;/STRONG&gt; and &lt;STRONG&gt;Poetry Slam Manager&lt;/STRONG&gt; demonstrate business object modeling, UI integration, and tenant isolation in real-world use cases.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;How the Repository Accelerates Partner Solutions&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Partners can reuse packages, study onboarding approaches, and adapt integration modules directly for their own certified offerings—streamlining time to market and improving solution quality.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Step-by-step documentation, real code, and sample data flows empower developers to master multi-tenant patterns and extend SAP Cloud systems with confidence.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The repository acts as a knowledge base and starter kit for enterprise ABAP cloud projects, bridging theory and practical implementation for SAP’s partner ecosystem.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;By exploring this repository, developers and architects gain hands-on experience with the foundations of multi-tenant architecture, SAP BTP-managed security, and SAP S/4HANA Cloud Public Edition integration—directly addressing the needs of modern cloud-native SAP applications.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For partners, the repository turns cloud-native theory into practice. Get hands on with SAP BTP ABAP Cloud, accelerate certified solution development, and leverage proven patterns for multi-tenant extensions—all with guided help from SAP’s own reference implementation.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/how-sap-s-abap-cloud-partner-reference-app-simplifies-multi-tenant-side-by/ba-p/14223705"/>
    <published>2025-09-22T11:54:22.811000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/validations-in-bopf-and-consistency-validation-in-bopf/ba-p/14214587</id>
    <title>Validations in BOPF and Consistency Validation in BOPF</title>
    <updated>2025-09-24T07:00:43.999000+02:00</updated>
    <author>
      <name>Krishna_karale</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451081</uri>
    </author>
    <content>&lt;P&gt;Hello Everyone,&lt;/P&gt;&lt;P&gt;In this blog we will be going to learn about the Validations in BOPF.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is Validation in BOPF?&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In BOPF, &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;a validation is a consistency check defined on a node of the business object that ensures the data fulfills specific business rules before it is saved or processed.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In BOPF, keeping the data clean and consistent is very important. Validations help achieve this by checking the data against specific rules. Just like determinations, validations are created on the node of the data model where they are needed. Today, we’ll walk you through how to create a validation and write the logic for it in the implementation class.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Procedure &amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we are defining a custom Travel table (zkk_dt_travel).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Data base table for Travel Details'
@AbapCatalog.enhancement.category : #EXTENSIBLE_ANY
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #ALLOWED
define table zkk_dt_travel {

  key client     : abap.clnt not null;
  key travel_id  : zkk_de_travel_id not null;
  key user_email : zkk_de_email not null;
  start_date     : dats;
  destination    : zkk_de_destination;
  status         : zkk_de_status;
  expense_type   : zkk_de_item_type;
  @Semantics.amount.currencyCode : 'zkk_travel_hdr.curr_key'
  total_cost     : zkk_de_cost;
  curr_key       : zkk_de_cost_key;
  remarks        : zkk_de_remarks;
  created_by     : zkk_de_createdby;
  created_on     : datum;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;The above table has the below shown data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_1-1757594071182.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313058i31645446FA5AE134/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_1-1757594071182.png" alt="Krishna_karale_1-1757594071182.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For the Database table we are defining the Basic view &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.sqlViewName: 'ZKK_DBV_TRAVEL'
@AbapCatalog.compiler.compareFilter: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface view for Travel details'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true


@ObjectModel:{
modelCategory: #BUSINESS_OBJECT,
compositionRoot: true,
transactionalProcessingEnabled: true,
writeActivePersistence: 'ZKK_dt_travel',

createEnabled: true,
updateEnabled: true,
deleteEnabled: true
}

@OData.publish: true
define view zi_kk_travel
  as select from zkk_dt_travel
{
  key travel_id,
      @ObjectModel.mandatory: true
  key user_email,
      start_date,
      destination,
      status,
      @ObjectModel.mandatory: true
      expense_type,
      @ObjectModel.mandatory: true
      total_cost,
      curr_key,
      remarks,
      created_by,
      created_on
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;For creating the Business object directly from the Eclipse editor, we have to make use of annotations which I have given with their functionality&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here’s the explanation of each annotation in your snippet:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;@ObjectModel: {&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;modelCategory: #BUSINESS_OBJECT,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;compositionRoot: true,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;transactionalProcessingEnabled: true,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;writeActivePersistence: 'ZKK_dt_travel',&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;createEnabled: true,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;updateEnabled: true,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;deleteEnabled: true&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;}&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Explanation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;modelCategory: #BUSINESS_OBJECT&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Declares that the CDS view represents a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Business Object (BO)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. This means it can be used in BOPF to handle business logic and transactional operations.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;compositionRoot: true&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Defines this entity as the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;root node&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; of the Business Object. Other nodes (child entities) can be linked to it via composition relationships.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;transactionalProcessingEnabled: true&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Enables &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;transactional behavior&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (create, update, delete, save, rollback) for the entity, making it suitable for business object processing.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;writeActivePersistence: 'ZKK_dt_travel'&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Specifies the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;database table&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (&lt;/SPAN&gt;&lt;SPAN&gt;ZKK_DT_TRAVEL&lt;/SPAN&gt;&lt;SPAN&gt;) where the active (persisted) data of this entity is stored.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;createEnabled: true&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Allows the creation of new records in the entity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;updateEnabled: true&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Allows modification of existing records.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;deleteEnabled: true&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Allows deletion of records.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1599241"&gt;@odata&lt;/a&gt;.publish: true&lt;/STRONG&gt;&lt;SPAN&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;turns your CDS view into an &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;OData service provider&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, making its data available for consumption via OData protocols.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;In short:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This annotation block is used to define a CDS entity as a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Business Object root node&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; with full CRUD (Create, Read, Update, Delete) support and persistence in the custom table &lt;/SPAN&gt;&lt;SPAN&gt;ZKK_DT_TRAVEL&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here I am creating the Metadata extension for the Basic view (ZI_KK_TRAVEL) for consuming it in the front end.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
@UI.headerInfo: {
    typeName: 'Travel',
    typeNamePlural: 'Travel Details'
}
annotate entity zi_kk_travel
    with 
{
@UI.facet: [{ 
id: 'Travel', 
purpose: #STANDARD, 
position: 10, 
label: 'Travel Details ', 
type: #IDENTIFICATION_REFERENCE 
} ]
 @UI.lineItem: [{ position: 10, label: 'Travel Id' }]
 @UI.identification: [{ position: 10 }]
    travel_id;
 @UI.lineItem: [{ position: 20, label: 'Email' }]
 @UI.identification: [{ position: 20 }]
    user_email;
 @UI.lineItem: [{ position: 30, label: 'Travel Date' }]
 @UI.identification: [{ position: 30 }]
    start_date;
 @UI.lineItem: [{ position: 40, label: 'Destination' }]
 @UI.identification: [{ position: 40 }]
    destination;
 @UI.lineItem: [{ position: 50, label: 'Status' }]
 @UI.identification: [{ position: 50 }]
    status;
 @UI.lineItem: [{ position: 60, label: 'Expense Type' }]
 @UI.identification: [{ position: 60 }]
    expense_type;
 @UI.lineItem: [{ position: 65, label: 'Amount' }]
 @UI.identification: [{ position: 65 }]
    total_cost;
 @UI.lineItem: [{ position: 70, label: 'Currency' }]
 @UI.identification: [{ position: 70 }]
    curr_key;
 @UI.lineItem: [{ position: 80, label: 'Remarks for Expense' }]
 @UI.identification: [{ position: 80 }]
    remarks;
 @UI.lineItem: [{ position: 85, label: 'Created By' }]
 @UI.identification: [{ position: 10 }]
    created_by;
 @UI.lineItem: [{ position: 90, label: 'Created Date' }]
 @UI.identification: [{ position: 90 }]
    created_on;   
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Now activate the Basic view and the meta data extension, when it gets activated the Business Object get created implicitly.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now open the BOBX Transaction.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_0-1757592499811.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313013iA3CE0EC7DAE390B8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Krishna_karale_0-1757592499811.png" alt="Krishna_karale_0-1757592499811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We can search the business object in Home business objects or click on the below marked option.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_1-1757592499815.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313014iC696BF0CC68256E1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_1-1757592499815.png" alt="Krishna_karale_1-1757592499815.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Provide the BO name which is our Basic View name (ZI_KK_TRAVEL)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_2-1757592550543.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313015iEB32B50190C69B55/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_2-1757592550543.png" alt="Krishna_karale_2-1757592550543.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_3-1757592550545.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313016i52BC1E6BA95F4920/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_3-1757592550545.png" alt="Krishna_karale_3-1757592550545.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now to Implement the validations expand the Node Elements &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_4-1757592664872.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313018iAD4AC1A6BC6E15F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_4-1757592664872.png" alt="Krishna_karale_4-1757592664872.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Right Click on Validations will see the option to Create Validations&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_5-1757592664876.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313019iFE10A410C3DA9B77/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_5-1757592664876.png" alt="Krishna_karale_5-1757592664876.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Provide the Validation Name and Description and Class for implementing the validation logic.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_6-1757592724202.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313021iE409E1816592FD3A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_6-1757592724202.png" alt="Krishna_karale_6-1757592724202.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Double click on Class Name, and create a class which will be having the super class implicitly&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_7-1757592724204.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313022i60C54D71A4DAD6DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_7-1757592724204.png" alt="Krishna_karale_7-1757592724204.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_8-1757592724206.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313023i7D5C4DCD05FAB412/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_8-1757592724206.png" alt="Krishna_karale_8-1757592724206.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now we have to provide Triggering conditions for the validations, so select the Node instance and tick on Create, Update, Delete and Check &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_9-1757592724208.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313025i9F8AA07FF69DD538/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_9-1757592724208.png" alt="Krishna_karale_9-1757592724208.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Save it and check and generate it.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_10-1757592724210.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313024i2B58966A704D4508/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_10-1757592724210.png" alt="Krishna_karale_10-1757592724210.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;After this we have to go&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;to eclipse and &lt;/SPAN&gt;&lt;SPAN class=""&gt;create&lt;/SPAN&gt;&lt;SPAN class=""&gt; a service definition on basic &lt;/SPAN&gt;&lt;SPAN class=""&gt;view&lt;/SPAN&gt; &lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;SPAN class=""&gt;ZI_KK_TRAVEL)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_0-1757593000483.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313029i1C822052AE6EFECE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_0-1757593000483.png" alt="Krishna_karale_0-1757593000483.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now create a Service binding on top of Service definition and publish it &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_1-1757593000486.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313028i7CF7AC634D5DAC04/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_1-1757593000486.png" alt="Krishna_karale_1-1757593000486.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When we preview it &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It will be navigated to the frontend while navigating it will ask for your SAP GUI Credentials to login.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_2-1757594121268.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313059iAEC5D4AF3D524A70/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_2-1757594121268.png" alt="Krishna_karale_2-1757594121268.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now go to SE91 Transaction and create a message class &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_3-1757593000492.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313032iC0B1ADEA725893E0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_3-1757593000492.png" alt="Krishna_karale_3-1757593000492.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here, I am doing Validation for a Single status field only so i have passed only two messages &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_4-1757593127901.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313039iA7B37EE8E3E92A3F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_4-1757593127901.png" alt="Krishna_karale_4-1757593127901.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;Now I want to provide the Validations for Status field, so go to our class which we have created in Validations&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_5-1757593127904.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313040i39BD2E5B3B58359A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_5-1757593127904.png" alt="Krishna_karale_5-1757593127904.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;Implement our Custom login in this method.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD /bobf/if_frw_validation~execute.

    CLEAR : et_failed_key, eo_message.
    eo_message = /bobf/cl_frw_factory=&amp;gt;get_message( ).
    DATA : lt_data TYPE ztikk_travel,   " Table type for header node
           ls_msg  TYPE symsg.
    io_read-&amp;gt;retrieve(
      EXPORTING
        iv_node                 = is_ctx-node_key
        it_key                  = it_key
        iv_fill_data            = abap_true
        it_requested_attributes = VALUE #(
                                          (                 zif_i_kk_travel_c=&amp;gt;sc_node_attribute-zi_kk_travel-status )
                                         ) )
      IMPORTING
        et_data                 = lt_data
    ).
    LOOP AT lt_data REFERENCE INTO DATA(ls_data).
      IF ls_data-&amp;gt;status IS INITIAL .
        ls_msg-msgid = 'ZKK_MSG_BOPF'.
        ls_msg-msgno = '000'.
        ls_msg-msgty = 'E'.

        eo_message-&amp;gt;add_message(
          is_msg       = ls_msg                 " Message that is to be added to the message object
          iv_node      = is_ctx-node_key            " Node to be used in the origin location
          iv_key       = ls_data-&amp;gt;key            " Instance key to be used in the origin location
iv_attribute = zif_i_kk_travel_c=&amp;gt;sc_node_attribute-zi_kk_travel-status
          " Attribute to be used in the origin location
        ).

        INSERT VALUE #( key = ls_data-&amp;gt;key ) INTO TABLE et_failed_key.
      ENDIF.

      DATA(lv_status) = to_upper( condense( ls_data-&amp;gt;status ) ).
      IF lv_status NA 'ACCEPT' OR lv_status NA 'REJECT'.
        ls_msg-msgid = 'ZKK_MSG_BOPF'.
        ls_msg-msgno = '001'.
        ls_msg-msgty = 'E'.

        eo_message-&amp;gt;add_message(
          is_msg       = ls_msg
          iv_node      = is_ctx-node_key
          iv_key       = ls_data-&amp;gt;key
          iv_attribute = zif_i_kk_travel_c=&amp;gt;sc_node_attribute-zi_kk_travel-status
        ).

        INSERT VALUE #( key = ls_data-&amp;gt;key ) INTO TABLE et_failed_key.
      ENDIF.
    ENDLOOP.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Now go to service binding and preview it. Try to create a new record.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here I am keeping Status field as empty so it will throw error.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_0-1757593607942.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313054i8AFBB4A6CB13AC7F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_0-1757593607942.png" alt="Krishna_karale_0-1757593607942.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now Status should accept only ‘ACCEPT’ or ‘REJECT’. If I&amp;nbsp;try to give any other value it will throw error again.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_1-1757593607945.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313055i5F011EB0883B6BFE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_1-1757593607945.png" alt="Krishna_karale_1-1757593607945.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you give the correct value ‘Accept’ or ‘Reject’.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_2-1757593607947.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313053iAD827C3ADC2B81D1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_2-1757593607947.png" alt="Krishna_karale_2-1757593607947.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1889114913"&gt;&lt;U&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/U&gt;&lt;/H3&gt;&lt;P&gt;Validations in BOPF play a vital role in safeguarding data quality and enforcing business rules at the framework level. By defining validations directly on the business object nodes, we ensure that only consistent and compliant data enters the system, regardless of whether it originates from an SAP UI, an external interface, or a background process. This not only strengthens the reliability of the application but also reduces the need for redundant checks across different layers. In short, validations serve as a powerful and centralized mechanism to guarantee data integrity within the BOPF model.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/validations-in-bopf-and-consistency-validation-in-bopf/ba-p/14214587"/>
    <published>2025-09-24T07:00:43.999000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/from-backlogs-to-breakthroughs-what-abap-ai-means-for-project-delivery/ba-p/14226643</id>
    <title>From Backlogs to Breakthroughs: What ABAP AI Means for Project Delivery</title>
    <updated>2025-09-24T11:12:30.036000+02:00</updated>
    <author>
      <name>SHRUTHISADAGOPANPITCHUMANI</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1699865</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Hello everyone ! I am &lt;STRONG&gt;Shruthi&lt;/STRONG&gt;, a Project Manager of BTP ABAP AI, and I am just about to celebrate my &lt;STRONG&gt;first anniversary with my team&lt;/STRONG&gt;. Looking back at this past year, I feel so grateful for the people I work with, the projects we have delivered, and the way we have grown together.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;One thing I have noticed time and again is how small changes—like a new validation rule, a UI tweak, or a simple workflow adjustment—can have a huge impact for business users. But these “small” requests often take longer than expected because they get caught in processes and development backlogs.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;That is why the recent blogs on &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ABAP AI&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; and the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Extensibility Assistant&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; really resonate with me. They show how SAP is already delivering tools that make development faster and extensibility safer.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Highlights You Should Explore&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here are some excellent resources that set the stage for this journey:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;@Simona Marincei’s Blog: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-ai-revolution-accelerates-the-abap-developer-who-built-enterprise-apps/ba-p/14216073" target="_blank"&gt;&lt;SPAN&gt;ABAP AI Revolution: Accelerates the ABAP Developer Who Built Enterprise Apps&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/44793"&gt;@Georg&lt;/a&gt;Wilhelm’s Blog :&amp;nbsp; &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/extensibility-assistant-for-key-users-the-extensibility-expert-right-next/ba-p/14216097" target="_blank"&gt;&lt;SPAN&gt;Extensibility Assistant for Key Users: The Extensibility Expert Right Next to You&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/4870"&gt;@Alexander&lt;/a&gt;Rother’s Blog:&amp;nbsp; &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/abap-ai-chapter-2/ba-p/14210568" target="_blank"&gt;&lt;SPAN&gt;ABAP AI Chapter 2&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://www.youtube.com/watch?v=OwtRsMRLPYU&amp;amp;list=PL6RpkC85SLQAt9lvPw0gF4E3nwbJD0EUe" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;Joule for Developers – YouTube Playlist&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Joule for Developers, ABAP AI Capabilities – Free and Ready to Use&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;One of the most exciting developments for us right now is &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Joule for Developers, ABAP AI Capabilities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. It is available &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;for free usage&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; today and brings AI-powered assistance directly into the hands of developers.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With Joule for Developers, you can:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Generate and refactor ABAP code with AI guidance.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Explore sample data and learning materials.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Speed up everyday development tasks and reduce repetitive work.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Access tutorials and demos from the &lt;/SPAN&gt;&lt;A href="https://www.youtube.com/watch?v=OwtRsMRLPYU&amp;amp;list=PL6RpkC85SLQAt9lvPw0gF4E3nwbJD0EUe" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;YouTube playlist.&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;For teams like mine, this is a real enabler—it means we are not just talking about AI as the future, we are &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;using it today&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; to accelerate delivery and learn new ways of working.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What We Are Experiencing&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In my role, I see these tools helping in very practical ways:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Business users get changes rolled out more quickly.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Developers focus on high-value, complex scenarios.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Projects move forward with smoother coordination.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The result is a stronger partnership between IT and the business, and a better experience for everyone involved.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Final Thought&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;ABAP AI today is already making a difference—it accelerates development, empowers key users, and ensures safe extensibility with built-in governance. And with Joule for Developers ABAP AI Capabilities now free to use, every developer has the chance to explore AI-powered assistance directly.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;For me and my team, this means more delivered outcomes, happier stakeholders, and projects that stay on track.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;As I celebrate one year with this fantastic team, I look forward to what the next chapter will bring. The journey of ABAP AI is still unfolding, and I am excited to see where it takes us.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;I would love to hear your thoughts: how are you using ABAP AI in your projects, and what impact has it had so far?&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/from-backlogs-to-breakthroughs-what-abap-ai-means-for-project-delivery/ba-p/14226643"/>
    <published>2025-09-24T11:12:30.036000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/1-500-faster-abap-cloud-api-with-just-gzip/ba-p/14229207</id>
    <title>1,500× Faster: ABAP Cloud API with “Just” Gzip</title>
    <updated>2025-09-26T16:36:17.362000+02:00</updated>
    <author>
      <name>natanael1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1557162</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1890184258"&gt;The 3-hours to 7-Second Story&lt;/H3&gt;&lt;P&gt;We had a weekly data integration form ABAP in Cloud, via an OData service, that took about &lt;STRONG&gt;3 hours&lt;/STRONG&gt;(10800 seconds) and nearly &lt;STRONG&gt;600 requests&lt;/STRONG&gt; to finish. After a small redesign, the same data now arrives in &lt;STRONG&gt;~7 seconds(instead of 10800 seconds)&lt;/STRONG&gt; using just &lt;STRONG&gt;3 requests&lt;/STRONG&gt;. So a dramatic x1500 reduction. No new servers, no fancy tools, just smarter packaging of the data, but of course with some drawback.&lt;/P&gt;&lt;P&gt;The full PDF paper, and code is available in this GitHub repo:&amp;nbsp;&lt;A href="https://github.com/legonmarian/abap-btp-api-optimization" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/legonmarian/abap-btp-api-optimization&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1693670753" id="toc-hId-1693670753"&gt;Quick Context&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Infrastructure:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;ABAP in Cloud on SAP BTP.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;A big, flat table (~3 million rows).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Task:&amp;nbsp;&lt;/STRONG&gt;We needed to expose this data to another system once a week&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Status quo:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;OData service exposing this table, called 600 times,&amp;nbsp;5.000 rows per call. It was slow and expensive, the extraction workflow took ~3 hours&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Constraint:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Streaming is not available, the data shape should ideally stay the same, no external systems should be involved.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;"vision":&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Deliver everything fast, simple, and cheap for both sides.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1497157248" id="toc-hId-1497157248"&gt;The Simple Change&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Why not OData for this job:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;OData is a really good tool for interactive reads: $filter, $expand, small pages, typed entities, also for Fiori applications, but our use case was the opposite:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;one flat dataset, all of it, as fast as possible&lt;/STRONG&gt;.&lt;BR /&gt;With OData we’d still pay the cost of many small pages and per-entity overhead the client didn’t need. And most of the consumers wanted a simple file payload they could ingest with generic tools.&lt;BR /&gt;Besides that the biggest restriction why OData cannot be used for this use case is that, OData&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;handles out-of-the-box&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;the data transfer, so you have&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;no control&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;on the data shape, or&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;compression&lt;/STRONG&gt;(which proves to be a big player further).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why a plain HTTP service instead&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;On the other hand an HTTP Service with an HTTP handler class gives us&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;full control over the wire format&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(JSON/CSV), headers, and compression.&lt;/P&gt;&lt;P&gt;And this is the main reason why we moved from an out-of-the-box nice and elegant OData service but&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;slow&lt;/STRONG&gt;, to an HTTP service with a custom handler but&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;fast.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why “just HTTP” still wasn’t enough&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;So the HTTP service doesn't provide any other functionality out of the box other than full control over the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;request&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;response&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;objects. That means that all the other hard work needed in order to send back in the response a DB table should be implemented by the developer, this includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;pagination&lt;/LI&gt;&lt;LI&gt;serialization&lt;/LI&gt;&lt;LI&gt;compression(optional)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Besides that when it comes to custom code, and big tables, the developer must ensure that the program's complexity isn't surpassing the allocated resources and constraints, both in terms of time and memory.&lt;/P&gt;&lt;P&gt;Therefore we explored(and documented in the code) multiple ways of doing this. For more details on these please check the PDF in&amp;nbsp;&lt;A href="https://github.com/legonmarian/abap-btp-api-optimization" target="_self" rel="nofollow noopener noreferrer"&gt;here&lt;/A&gt;. But here are some of our conlusions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If compression is not suitable for your use case, moving from JSON to CSV is a huge advantage&lt;/LI&gt;&lt;LI&gt;Compressing is the best solution, this way you can keep your JSON schema&lt;/LI&gt;&lt;LI&gt;There're several compression algorithms but the most suitable for us in ABAP in cloud proved to be GZIP with out-of-the-box support. We examined the compression / decompression performance of multiple algorithms in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://github.com/legonmarian/abap-btp-api-optimization" target="_self" rel="nofollow noopener noreferrer"&gt;PDF paper&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;The fastest JSON serializer is&amp;nbsp;&lt;CODE&gt;CALL TRANSFORMATION&lt;/CODE&gt;&amp;nbsp;being thousands of times faster than the&amp;nbsp;&lt;CODE&gt;xco&lt;/CODE&gt;&amp;nbsp;library&lt;/LI&gt;&lt;LI&gt;Reading a DB table in an internal table and serializing it requires&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;memory,&amp;nbsp;&lt;/STRONG&gt;and we ran out of it when trying to serialize the full table.&lt;UL&gt;&lt;LI&gt;An alternative to this was to read chunks of it, serialize and compress it and then repeat for next chunk. But this is a bit less client-friendly from a decompression perspective&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Streaming data is not possible with the current ICF of ABAP in Cloud&lt;/LI&gt;&lt;LI&gt;One last performance optimization is parallelization, this can cut the load time in 3-4 times, but use it carefully&lt;/LI&gt;&lt;LI&gt;Always profile for bottlenecks&lt;/LI&gt;&lt;LI&gt;Always stress test to find the right parameters like page size, concurrent calls, etc.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;What we landed on (the pattern)&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Keep JSON&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for compatibility, but&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;generate it using&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;CODE&gt;CALL TRANSFORMATION&lt;/CODE&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Compress every response&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and signal it with Content-Encoding: gzip. One&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;single gzip member&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;per response so common clients auto-decompress reliably.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Use increased paging&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(few big pages) to cut roundtrips. 1.000.000 records per call&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Use parallelization&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1300643743" id="toc-hId-1300643743"&gt;Before vs After&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;TL;DR:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;We didn’t change the data, only the delivery: coarse pages, fast JSON, and gzip over a plain HTTP contract.&lt;/P&gt;&lt;TABLE width="870px"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="153.172px" height="47px"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="387.438px" height="47px"&gt;&lt;STRONG&gt;Before&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="328.391px" height="47px"&gt;&lt;STRONG&gt;After&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="153.172px" height="30px"&gt;Dataset&lt;/TD&gt;&lt;TD width="387.438px" height="30px"&gt;~3,000,000 rows (flat, ~12 columns)&lt;/TD&gt;&lt;TD width="328.391px" height="30px"&gt;Same&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="153.172px" height="30px"&gt;Page size&lt;/TD&gt;&lt;TD width="387.438px" height="30px"&gt;5,000 rows/page&lt;/TD&gt;&lt;TD width="328.391px" height="30px"&gt;~1,000,000 rows/page (tunable)&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="153.172px" height="30px"&gt;Number of requests&lt;/TD&gt;&lt;TD width="387.438px" height="30px"&gt;~593&lt;/TD&gt;&lt;TD width="328.391px" height="30px"&gt;3&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="153.172px" height="33px"&gt;End-to-end time&lt;/TD&gt;&lt;TD width="387.438px" height="33px"&gt;~3 hours (sequential pulls)&lt;/TD&gt;&lt;TD width="328.391px" height="33px"&gt;~6-7 seconds (3 parallel pulls)&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="153.172px" height="30px"&gt;Total transfer&lt;/TD&gt;&lt;TD width="387.438px" height="30px"&gt;~6000 MB&lt;/TD&gt;&lt;TD width="328.391px" height="30px"&gt;~9 MB&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="153.172px" height="30px"&gt;Payload per page&lt;/TD&gt;&lt;TD width="387.438px" height="30px"&gt;~1.15 MB per 5k rows (raw)&lt;/TD&gt;&lt;TD width="328.391px" height="30px"&gt;~3 MB per 1M rows (gzipped)&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="153.172px" height="30px"&gt;Protocol&lt;/TD&gt;&lt;TD width="387.438px" height="30px"&gt;OData&lt;/TD&gt;&lt;TD width="328.391px" height="30px"&gt;Plain REST&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="153.172px" height="30px"&gt;Compression&lt;/TD&gt;&lt;TD width="387.438px" height="30px"&gt;None&lt;/TD&gt;&lt;TD width="328.391px" height="30px"&gt;Content-Encoding: gzip (single member)&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="153.172px" height="20px"&gt;Client pattern&lt;/TD&gt;&lt;TD width="387.438px" height="20px"&gt;Sequential loop&lt;/TD&gt;&lt;TD width="328.391px" height="20px"&gt;Fetch pages in parallel, then merge&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-1104130238" id="toc-hId-1104130238"&gt;How to reproduce this in three simple steps&lt;/H3&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;Heads-up: in here I will refer to an Appendix, you can find it in the detailed&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://github.com/legonmarian/abap-btp-api-optimization" target="_self" rel="nofollow noopener noreferrer"&gt;PDF paper&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;about the optimization, the paper and some code is available on GitHub&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;HR /&gt;&lt;H4 id="toc-hId-1036699452" id="toc-hId-1036699452"&gt;Step 1. Define a tiny HTTP contract&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Endpoint:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;GET /entity?offset=…&amp;amp;count=…&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Helper:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;GET /entity?get_only_count=true returns a small pagination object with totals and suggested pages, for example:&lt;/LI&gt;&lt;/UL&gt;&lt;PRE&gt;&lt;CODE&gt;{
  "number_of_records": 2496434,
  "batch_size": { "maximum": 1500000, "recommended": 1000000 },
  "recommended_pages": [
    "/entity?offset=0&amp;amp;count=1000000",
    "/entity?offset=1000000&amp;amp;count=1000000",
    "/entity?offset=2000000&amp;amp;count=1000000"
  ]
}&lt;/CODE&gt;&lt;/PRE&gt;&lt;P&gt;This keeps clients simple and lets them plan parallel pulls.&lt;/P&gt;&lt;HR /&gt;&lt;H4 id="toc-hId-840185947" id="toc-hId-840185947"&gt;Step 2. Build one big page, serialize, and gzip it on the server&lt;/H4&gt;&lt;P&gt;&lt;STRONG&gt;a) Fast JSON generation with CALL TRANSFORMATION&lt;/STRONG&gt;&lt;BR /&gt;Appendix C shows the lean serializer that perform the best, for the performance comparasion please check the&amp;nbsp;&lt;A href="https://github.com/legonmarian/abap-btp-api-optimization" target="_self" rel="nofollow noopener noreferrer"&gt;PDF paper&lt;/A&gt;&lt;/P&gt;&lt;PRE&gt;&lt;CODE&gt;METHOD convert_json_transformation.
  DATA(lo_writer) = cl_sxml_string_writer⇒create( type = if_sxml⇒co_xt_json ).
  CALL TRANSFORMATION id
    SOURCE itab = data
    RESULT XML lo_writer.
  string = lo_writer-&amp;gt;get_output( ).
ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;P&gt;Use this to turn your internal table into JSON quickly.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;b) Minimal HTTP handler that serves one gzipped page&lt;/STRONG&gt;&lt;BR /&gt;Appendix I demonstrates the pattern: set headers, read a deterministic slice, serialize, gzip once, send bytes.&lt;/P&gt;&lt;PRE&gt;&lt;CODE&gt;METHOD gzip_json_single_page.
  response-&amp;gt;set_status( 200 ).
  response-&amp;gt;set_content_type( 'application/gzip' ).
  response-&amp;gt;set_header_field(
    i_name = 'Content-Disposition'
    i_value = |attachment; filename="data_subset.gz"| ).
  response-&amp;gt;set_compression(
    options = if_web_http_response⇒co_compress_none ).
  response-&amp;gt;set_header_field(
    i_name = 'Content-Encoding'
    i_value = |deflate| ).

  SELECT column_1, column_2, ... , column_12
    FROM dbtable
    ORDER BY column_2
    INTO TABLE @DATA(page)
    UP TO @page_size ROWS.

  cl_abap_gzip⇒compress_binary(
    EXPORTING raw_in = convert_json_transformation( page )
    IMPORTING gzip_out = DATA(gzip) ).

  response-&amp;gt;set_binary( gzip ).
ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;P&gt;&lt;STRONG&gt;c) Where the handler is wired&lt;/STRONG&gt;&lt;BR /&gt;Appendix F shows the entry point choosing which implementation to run:&lt;/P&gt;&lt;PRE&gt;&lt;CODE&gt;METHOD if_http_service_extension~handle_request.
  " choose one of these
  gzip_json_single_page( CHANGING request = request response = response ).
  " only for demonstration
  "gzip_csv_single_page( CHANGING request = request response = response ).
  " only for demonstration
  "gzip_csv_multiple_pages( CHANGING request = request response = response ).
ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;HR /&gt;&lt;H4 id="toc-hId-643672442" id="toc-hId-643672442"&gt;Step 3. Let the client pull a few big pages in parallel&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Ask get_only_count first to get total and recommended pages.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Fire 2-4 page requests in parallel, then merge locally.&lt;/LI&gt;&lt;LI&gt;Most clients auto-decompress when Content-Encoding is set, which is exactly why the server returns a single gzip response.&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H4 id="toc-hId-447158937" id="toc-hId-447158937"&gt;Optional: CSV variant from the appendix&lt;/H4&gt;&lt;P&gt;If you ever need CSV, Appendix H shows the single-page CSV + gzip flow. The JSON path above stayed as our final choice because gzip erases most of JSON’s key overhead while keeping tooling friendly. If you'd like to read more on why the JSON -&amp;gt; CSV conversion becomes obsolete after gzipping please check&amp;nbsp;&lt;A href="https://github.com/legonmarian/abap-btp-api-optimization" target="_self" rel="nofollow noopener noreferrer"&gt;PDF paper&lt;/A&gt;.&lt;/P&gt;&lt;H3 id="toc-hId-121562713" id="toc-hId-121562713"&gt;When to use this pattern and when not to&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Use it when&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;You need to deliver a large, flat dataset fast, usually for batch or analytics.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Your consumers are happy with a plain HTTP GET that returns JSON.&lt;/LI&gt;&lt;LI&gt;You can sort by a unique key and read stable slices with offset and count.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Think twice when&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Consumers need rich OData features&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;like server-side filtering and $expand. You will be giving those up and implementing only what you need in plain HTTP.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Clients cannot hold the decompressed page in memory.&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;A 1,000,000 row page is roughly a few hundred MB once decompressed, so plan for that on the client side.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;You require true streaming.&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;ABAP ICF in the cloud does not support HTTP/1.1 chunked transfer, so streaming is out of scope here.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--150182161" id="toc-hId--150182161"&gt;Gotchas to avoid&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Do not concatenate multiple gzip members&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in one HTTP response if you expect tools like Postman to auto-decompress. Many clients only unpack the first member. Prefer one contiguous gzip stream per response.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Set the right headers.&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Send Content-Encoding: gzip for the single member response. If you build a multi-member payload, clients may not decode it automatically.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Keep ordering stable.&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Always ORDER BY a unique key to make pages deterministic and retries idempotent.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Pick a page size both sides can hold.&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;For us 1,000,000 rows per page hits a good balance. Results and size scale with total rows, not so much with page count.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Stick to one gzip pass per response.&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Compress after you generate JSON for the page, not per record or per mini-chunk inside the same response. It keeps clients simple.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For the full PDF paper, and code please check this GitHub repo:&amp;nbsp;&lt;A href="https://github.com/legonmarian/abap-btp-api-optimization" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/legonmarian/abap-btp-api-optimization&lt;/A&gt;&lt;A href="https://github.com/legonmarian/abap-btp-api-optimization" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;BR /&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/1-500-faster-abap-cloud-api-with-just-gzip/ba-p/14229207"/>
    <published>2025-09-26T16:36:17.362000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-abap-sdk-for-ibm-watsonx-v1-4-0-released/ba-p/14230743</id>
    <title>SAP ABAP SDK for IBM watsonx v1.4.0 released</title>
    <updated>2025-09-29T16:50:19.279000+02:00</updated>
    <author>
      <name>christian_bartels</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/184450</uri>
    </author>
    <content>&lt;P&gt;On September 26, 2025, IBM has released version 1.4.0 of its ABAP® Software Development Kit (SDK) for IBM® watsonx™ services. The &lt;A href="https://www.ibm.com/products/watsonx-ai" target="_self" rel="nofollow noopener noreferrer"&gt;watsonx.ai&lt;/A&gt; service can be used to train, validate, tune, and deploy foundation and machine learning models. The &lt;A href="https://cloud.ibm.com/catalog/services/watsonxai-runtime" target="_self" rel="nofollow noopener noreferrer"&gt;watsonx.ai Runtime&lt;/A&gt; is used to build, run and manage generative AI and machine learning applications with built-in performance and scalabilityThe ABAP SDK provides a class library that can be downloaded to SAP systems using &lt;A href="https://abapgit.org/" target="_self" rel="nofollow noopener noreferrer"&gt;abapGit&lt;/A&gt; and comes in two flavors:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://github.com/IBM/abap-sdk-nwas-x" target="_self" rel="nofollow noopener noreferrer"&gt;ABAP SDK for IBM watsonx, using SAP NetWeaver&lt;/A&gt; for the SAP Business Suite running on SAP NetWeaver 7.50 or above and for the SAP S/4HANA on-premises edition.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://github.com/IBM/abap-sdk-btp-x" target="_self" rel="nofollow noopener noreferrer"&gt;ABAP SDK for IBM watsonx, using SAP BTP ABAP Environment&lt;/A&gt; for the SAP Business Technology Platform ABAP Environment.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Enhancements in this release include new watsonx.ai methods in the groups Prompt Sessions and Prompts. More information about the changes in version 1.4.0 can be found in the repositories in the migration document &lt;A href="https://github.com/IBM/abap-sdk-nwas-x/blob/main/MIGRATION-V1.4.0.md" target="_self" rel="nofollow noopener noreferrer"&gt;MIGRATION-V1.4.0.md&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Detailed information on how to setup and use the SDK can be found in the README.md files of the GitHub repositories. The README.md files also provide two comprehensive examples to show how the supported services can be used. An even more elaborated article about how use watsonx services with the ABAP SDK can be found in Joachim Rese's blog article &lt;A href="https://community.sap.com/t5/application-development-blog-posts/how-to-bring-generative-ai-to-your-abap-program-using-the-abap-sdk-for-ibm/ba-p/13694067" target="_self"&gt;How to Bring Generative AI to Your ABAP Program Using the ABAP SDK for IBM watsonx&lt;/A&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-abap-sdk-for-ibm-watsonx-v1-4-0-released/ba-p/14230743"/>
    <published>2025-09-29T16:50:19.279000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/customer-amp-partner-roundtable-for-sap-btp-abap-environment-28/ba-p/14231467</id>
    <title>Customer &amp; Partner Roundtable for SAP BTP ABAP Environment #28</title>
    <updated>2025-09-30T11:14:17.098000+02:00</updated>
    <author>
      <name>iwona_hahn</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4326</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1860394371" id="toc-hId-1890871559"&gt;&lt;STRONG&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;The call for contributions for one of the upcoming roundtables is open!&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;If you want to show a demo or share a use case scenario for SAP BTP ABAP Environment, send us an&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="mailto:sap_btp_abap_environment@sap.com" target="_blank" rel="noopener nofollow noreferrer"&gt;email&lt;/A&gt;&amp;nbsp;and we will get back to you.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1534798147" id="toc-hId-1565275335"&gt;Introduction&lt;/H2&gt;&lt;DIV&gt;&lt;SPAN class=""&gt;A&lt;/SPAN&gt;&lt;SPAN class=""&gt;s&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform/abap/environment.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;SAP&amp;nbsp;BTP&amp;nbsp;ABAP&amp;nbsp;environment (aka Steampunk)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/A&gt;and ABAP Cloud&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;became&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;more popular&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;inside and outside of SAP, there is a high demand for rolling out the latest product news and updates, asking questions, and showing demos.&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;You can find the slides presented, recordings, and further references from the previous roundtables in this&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://github.com/iwonahahn/SAP-BTP-ABAP-Environment-Roundtable/tree/main" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub repository&lt;/A&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iwona_hahn_0-1751374366410.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281320iF5290A011527C9B9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="iwona_hahn_0-1751374366410.jpeg" alt="iwona_hahn_0-1751374366410.jpeg" /&gt;&lt;/span&gt;&lt;H2 id="toc-hId-1338284642" id="toc-hId-1368761830"&gt;Meeting Information&lt;BR /&gt;&lt;BR /&gt;&lt;/H2&gt;&lt;STRONG&gt;When:&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;October 30&lt;/SPAN&gt;&lt;/STRONG&gt;, 2:00 - 3:00 PM CET&amp;nbsp; – &lt;A href="https://sap-se.zoom.us/meeting/register/BNTQg36rTgWstLMzArws0g" target="_blank" rel="noopener nofollow noreferrer"&gt;Zoom Meeting&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(&lt;STRONG&gt;please register&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in advance)&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Who:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;All interested&amp;nbsp;&lt;STRONG&gt;customers, partners,&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;stakeholders&lt;/STRONG&gt;&amp;nbsp;are invited to join this roundtable&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BTP ABAP team&lt;/STRONG&gt;:&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/4296" target="_blank"&gt;Frank Jentsch&lt;/A&gt;&amp;nbsp;&lt;SPAN class=""&gt;(Product Lead for SAP BTP ABAP&amp;nbsp;Environment)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/4326" target="_self"&gt;&lt;SPAN class=""&gt;Iwona Hahn&lt;/SPAN&gt;&lt;/A&gt;&amp;nbsp;&lt;SPAN class=""&gt;(Product Management)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;Jan Ole Skirke (Development Expert)&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Preliminary Agenda:&lt;/STRONG&gt;&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;Product update for SAP BTP ABAP Environment&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Downtime-optimized hotfix collection updates for SAP BTP ABAP Environment &lt;STRONG&gt;including demo&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Q&amp;amp;A&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;SPAN&gt;Looking forward to meeting you!&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;A href="https://sap-se.zoom.us/meeting/register/BNTQg36rTgWstLMzArws0g" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iwona_hahn_1-1751374366424.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281321i39537B5D388BE6C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="iwona_hahn_1-1751374366424.png" alt="iwona_hahn_1-1751374366424.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;Check out our&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://pages.community.sap.com/topics/btp-abap-environment" target="_blank" rel="noopener noreferrer"&gt;SAP Business Technology ABAP Environment&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;page in SAP Community&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;for&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;product&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;updates&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;and&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;upcoming events.&lt;/SPAN&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/customer-amp-partner-roundtable-for-sap-btp-abap-environment-28/ba-p/14231467"/>
    <published>2025-09-30T11:14:17.098000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/rap-using-custom-entity-with-load-multiple-data-using-pagination-and/ba-p/14233901</id>
    <title>RAP Using Custom Entity with load multiple data using Pagination and Preview using UI annotations</title>
    <updated>2025-10-03T06:01:53.175000+02:00</updated>
    <author>
      <name>RakeshZore</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1759317</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This blog covers RAP development using a custom entity, showcasing data with UI annotations, and surpassing the standard SAP data preview limit through the use of pagination.&lt;/P&gt;&lt;P&gt;Lets Start....&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create a custom entity with the fields that need to be displayed or sent to the frontend.&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Custom entity for fetching data'
@ObjectModel.query.implementedBy: 'ABAP:ZCL_IMPLEMENT_EXT' //This is the class where the data is handle and processed
@UI:{ headerInfo:{  typeName: 'RAP Learn',
                             typeNamePlural: 'RAP Learn',
                             title: { label: 'RAP Learn',
                                       type: #STANDARD,
                                       value: 'component'
                                     },
                             description: { value: 'obj_desc' },
                                     typeImageUrl: 'sap-icon://activity-items' //Show Icon image on header of object layout
                           }
               }
@Search.searchable: true //for Searching the data from the output which is also need to implement in the implemented class above 
define root custom entity ZCE_MAIN
{
      .facet   : [{
                      id: 'ID1',
                      purpose: #STANDARD,
                      type: #IDENTIFICATION_REFERENCE,
                      label : 'Component detail',
                      position: 10
                    },
                    {
                id: 'FG1',
                purpose: #STANDARD,
                type: #FIELDGROUP_REFERENCE,
                label : 'Validity Date',
                targetQualifier: 'FG1',
                position: 10
              }]
               : {  selectionField: [{ position: 10 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                            entity : { name: 'ZIV_F4MATNR' , element: 'matnr'   } ,
                            additionalBinding: [{ localElement: 'werks', element: 'werks' },
                                                         {  localElement: 'stlan' , element: 'stlan' },
                                                         {  localElement: 'stlal' , element: 'stlal' }]}]
      @Consumption.filter.selectionType: #SINGLE
  key matnr       : matnr;
               : {  selectionField: [{ position: 20 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                      entity : { name: 'ZIV_F4WERKS', element: 'werks' }
                                                         }]
      @Consumption.filter.selectionType: #SINGLE
  key werks       : werks_d;
               : {  selectionField: [{ position: 30 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                entity : { name: 'ZIV_F4STLAN' , element: 'stlan' }
                                                   }]
      @Consumption.filter.selectionType: #SINGLE
  key stlan       : stlan;
               : {  selectionField: [{ position: 40 }]}
      @Consumption.filter.mandatory: true
      @Consumption.filter.selectionType: #SINGLE
  key stlal       : stlal;
               : { lineItem: [{ position: 10 }], identification: [{ position: 10 }]}
      @EndUserText.label: 'Level'
  key bom_level   : abap.dec( 2, 0 );
               : { lineItem: [{ position: 20 }], identification: [{ position: 20 }]}
      @EndUserText.label: 'Component'
      .defaultSearchElement: true
  key component   : idnrk;
               : {  selectionField: [{ position: 50 }]}
      @Consumption.filter.mandatory: true
      @Consumption.filter.selectionType: #SINGLE
      @EndUserText.label: 'Date'
      zdate       : abap.dats;
               : { lineItem: [{ position: 30, cssDefault: { width: '13rem' }  }], identification: [{ position: 30 }]}
      @EndUserText.label: 'Object Description'
      .defaultSearchElement: true
      obj_desc    : maktx;
               : { lineItem: [{ position: 35, cssDefault: { width: '8rem' } }], identification: [{ position: 35 }]}
      @EndUserText.label: 'Quantity'
      comp_qty    : kmpmg_bi;
               : { lineItem: [{ position: 45 }], identification: [{ position: 45 }]}
      @EndUserText.label: 'Unit'
      comp_unit   : kmpme;
               : { lineItem: [{ position: 55 }], fieldGroup: [{ position: 10 , qualifier: 'FG1', label: 'Valid From' }]}
      @EndUserText.label: 'Valid from'
      valid_from  : datuv_bi;
               : { lineItem: [{ position: 65 }], fieldGroup: [{ position: 11 , qualifier: 'FG1', label: 'Valid To' }]}
      @EndUserText.label: 'Valid to'
      valid_to    : datub_bi;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;While using the RAP framework, metadata extensions cannot be created for custom entities. Therefore, annotations must be directly included in the custom entity code itself for UI purposes.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2 : Create an implementation class for the custom entity mentioned above and name it&amp;nbsp;ZCL_IMPLEMENT_EXT&amp;nbsp;or use the custom name specified in the second line of the code.&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_implement_ext DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC
  SHARED MEMORY ENABLED .

  PUBLIC SECTION.
    DATA : et_final TYPE TABLE OF zce_main.
    INTERFACES if_rap_query_provider .

  PROTECTED SECTION.
  PRIVATE SECTION.

ENDCLASS.



CLASS ZCL_IMPLEMENT_EXT IMPLEMENTATION.

  METHOD if_rap_query_provider~select.
    CASE io_request-&amp;gt;get_entity_id( ).
      WHEN 'ZCE_MAIN'.
        TRY.
            DATA(lv_skip) = io_request-&amp;gt;get_paging( )-&amp;gt;get_offset( ). "gets the skip part from URL which means number of data to be skipped and default is 0 but later on it gets add by 20... till last data not get fetched
            DATA(lv_top) = io_request-&amp;gt;get_paging( )-&amp;gt;get_page_size( ). "gets the top part from URL which means number of data required and default is 20
            DATA(lt_filter) = io_request-&amp;gt;get_filter( )-&amp;gt;get_as_ranges( ). "gets the input value which is either pass in our filters or when click on single data line item
           
          CATCH cx_rap_query_filter_no_range.
            "handle exception
        ENDTRY.

        IF lv_top &amp;lt; 0.
*********** Start Logic
"Put logic for single data fetch in which it will trigger when you are going for object page while clicking on single item from display table
"Take inputs from LT_filter table for sending that particular data click 
*********** End Logic
            IF io_request-&amp;gt;is_total_numb_of_rec_requested( ).
              io_response-&amp;gt;set_total_number_of_records( lines( et_final ) ).
            ENDIF.
            IF io_request-&amp;gt;is_data_requested(  ).
              io_response-&amp;gt;set_data( et_final ).
            ENDIF.
        ELSE.
*********** Start Logic
"Put logic for actual multiple data fetch in which it will trigger when you click go button or any sort of actions like search, sort, excel download....
"Take inputs from LT_filter table for required data fetch 
*********** End Logic
          ENDIF.
********** Searching Logic
        DATA(lv_search) = io_request-&amp;gt;get_search_expression( ). "gets the value from Search field in the UI
          IF lv_search IS NOT INITIAL.
            DATA lt_search LIKE et_final.

            lv_search = |*{ lv_search }*|.
            lt_search = VALUE #( BASE lt_search
                          FOR ls_f IN et_final
                          WHERE ( field1 CP lv_search OR  "Put required field to be search instead of field1,field2.....
                                  field2 CP lv_search  OR
                                  field3 cp lv_search OR
                                  field4 cp lv_search OR                                                                
                                                       ( ls_f ) ).
            et_final = lt_search.
          ENDIF.
***********End of Searching logic
***********Sorting logic
        DATA(lt_sort_elements) = io_request-&amp;gt;get_sort_elements( ). "gets the detail table of ascending and descending of field we wants to be sorted from UI
          IF lt_sort_elements IS NOT INITIAL.
            LOOP AT lt_sort_elements INTO DATA(ls_sort).
              IF ls_sort-descending &amp;lt;&amp;gt; 'X'.
                SORT et_final BY (ls_sort-element_name) ASCENDING.
              ELSE.
                SORT et_final BY (ls_sort-element_name) DESCENDING.
              ENDIF.
            ENDLOOP.
          ENDIF.
**********End of sorting logic
**********Paging- logic for loading more data wrt Standard set amount of data
          IF lv_top IS NOT INITIAL OR lv_skip IS NOT INITIAL.
            /iwbep/cl_mgw_data_util=&amp;gt;paging( EXPORTING is_paging = VALUE #( top  = lv_top
                                                                            skip = lv_skip )
                                             CHANGING  ct_data   = et_final ).
          ENDIF.
*********End of Pagination

          IF io_request-&amp;gt;is_total_numb_of_rec_requested( ).
            io_response-&amp;gt;set_total_number_of_records( lines( et_final ) ). "set number of initial data to display overall
          ENDIF.

          IF io_request-&amp;gt;is_data_requested(  ).
            io_response-&amp;gt;set_data( et_final ). "Set data into the entity
          ENDIF.

        ENDIF.
    ENDCASE.
  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;The aforementioned class plays a crucial role as it encapsulates the entire logic for data processing, including searching, sorting, and most importantly, setting data for our custom entity.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3 : Create Service Definition of the Custom entity&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To create a service definition, simply right-click the custom entity in the Project Explorer, click 'New Service Definition', fill in the required inputs, and your service definition will be created.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service definition'
define service ZSD_MAIN {
  expose ZCE_MAIN;
  expose ZIV_F4MATNR; "This is for ValueHelp Definition, and it's okay not to expose it.
  expose ZIV_F4WERKS;
  expose ZIV_F4STLAN;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;Let's take a look at one of the interface views of the ValueHelpDefinition.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface view for ValueHelpDefinition - MATNR'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity ZIV_F4MATNR
  as select distinct from mast
    left outer join       makt on makt.matnr = mast.matnr
{
         : {  selectionField: [{ position: 10 }] , lineItem: [{ position: 10 }]}
      @EndUserText.label: 'Material No'
  key mast.matnr,
      @Consumption.filter.hidden: true
  key mast.werks,
      @Consumption.filter.hidden: true
  key mast.stlan,
      @Consumption.filter.hidden: true
  key mast.stlal,
      @Consumption.filter.hidden: true
         : {   lineItem: [{ position: 20 }]}
      @EndUserText.label: 'Material Desc'
      makt.maktx
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 4 : Create a Service Binding for the aforementioned service definition.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To create a service binding, simply right-click the created service definition in the Project Explorer, click 'New Service Binding', fill in the required inputs, and your service binding will be created. While creating the Service Binding, I selected OData V2 - UI. Then, activate and publish the service. To view the UI output, you can use the Preview option in Eclipse to see the output as shown in the image below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-02 211818.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322447iD800178661F5E9F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-02 211818.png" alt="Screenshot 2025-10-02 211818.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In conclusion, using RAP with custom entities and pagination facilitates efficient data handling. With UI annotations, you can easily preview and refine the user interface. We hope this guide has been helpful. Stay tuned for more tips!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Note: This program is created for a remote system. For cloud environments, you can use a service consumption model or access data through a remote system API in the implementation class.&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/rap-using-custom-entity-with-load-multiple-data-using-pagination-and/ba-p/14233901"/>
    <published>2025-10-03T06:01:53.175000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-faq-commercials-getting-started-and-more/ba-p/14233744</id>
    <title>SAP Build FAQ: Commercials, Getting Started and More</title>
    <updated>2025-10-03T15:08:38.806000+02:00</updated>
    <author>
      <name>mark_wright</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13366</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;This FAQ provides an overview of SAP’s commercial offering of SAP Build. It covers the available commercial models for SAP Build and provides answers to questions that we most often hear regarding SAP Build commercial model, onboarding, metering and more.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What is the SAP Build Unified Offering? &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Build has been designed as the optimal way to extend SAP S/4HANA Cloud and other business applications. Thousands of customers are already experiencing up to 3x faster development speeds with SAP Build according to &lt;/SPAN&gt;&lt;A href="https://www.sap.com/documents/2025/02/5cf902d0-f37e-0010-bca6-c68f7e60039b.rc.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;recent analyst research&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; — and now we’ve made it even better.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Combined with deep technical integration, SAP Builds unified offering empowers customers to quickly extend and personalize their business solutions using AI-powered application development and automation, while maintaining a clean core and eliminating additional licensing or budgeting complexity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What is included in the Unified SAP Build Offering? &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Customers can access the full range of SAP Build capabilities through just four distinct SKUs.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build Base User&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; is for end users who need to access applications, gain insights for day-to-day business needs, and approve tasks.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build Premium User&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN&gt;includes all the features of the base user license, with added capabilities for end users to author content, monitor processes, customize pages and deploy attended bots.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build Developer &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;includes all the features of the Premium User license, plus advanced capabilities for developers and architects who need full access to deployed assets.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build Runtime&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN&gt;Application hosting and lifecycle management services that support the creation and execution for dev/test as well as production environments&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;How do I find out what is included in SAP Build? &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;For a list of services that are included in SAP Build you can visit the SAP Discovery Center, for SAP Build following this &lt;/SPAN&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog/sap-build?region=all&amp;amp;tab=service_plan" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;link&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;To find out what is in each SKU, Base, Premium, Developer and Runtime you can visit the SAP Build Pricing Page &lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform/build/pricing.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What commercial models are SAP Build provided in? &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Consumption Based Model: &amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog/sap-build?region=all&amp;amp;tab=service_plan&amp;amp;commercialModel=btpea" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;SAP BTP Enterprise Agreement (BTPEA)&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog/sap-build?region=all&amp;amp;tab=service_plan&amp;amp;commercialModel=cpea" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;SAP Cloud Enterprise Agreement (CPEA)&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog/sap-build?region=all&amp;amp;tab=service_plan&amp;amp;commercialModel=payg" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;Pay-As-You-Go for SAP BTP&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Subscription Based Commercial Mode: &amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog/sap-build?region=all&amp;amp;tab=service_plan&amp;amp;commercialModel=subscription" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;Service Plan for SAP Build Subscription&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;SAP Cloud ERP Private Edition: &amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Build Entitlements are included in the &lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/erp/rise/how-to-buy.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Cloud ERP Edition&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Find more about SAP Cloud ERP Edition &lt;/SPAN&gt;&lt;A href="https://news.sap.com/2025/04/sap-cloud-erp-private-package-accelerate-transformation/" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;  &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Find out more about the SAP Build offering in SAP Cloud ERP Private Edition &lt;/SPAN&gt;&lt;A href="https://news.sap.com/2025/04/sap-build-sap-s4hana-cloud-simplify-development/" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;SAP Business Suite Packages:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Entitlements are provided in several of the &lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/business-suite/pricing.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Business Suite packages&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Partner:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Build offers partners &lt;/SPAN&gt;&lt;A href="https://news.sap.com/2025/08/partners-free-sap-build-licenses-tdd-ai-powered-intelligent-applications/" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;free access to SAP Build and other BTP Services.&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://discovery-center.cloud.sap/protected/index.html#/serviceCatalog/sap-build?commercialModel=tdd-payg&amp;amp;tab=service_plan&amp;amp;region=all" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;SAP Build Test, Demo Development&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; (the site requires you to be logged in as an SAP Partner)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;How do I get started with SAP Build? &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Build uses SAP BTPs Cloud Integration Automation (CIA) to quickly get customers and partners up and going on SAP Build.&amp;nbsp; Find information on how to setup SAP Build &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/build-service/build-service-guide/initial-setup-of-sap-build" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;For detailed instructions on the activation process, please share this &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/how-to-activate-your-free-sap-build-entitlements-with-your-sap-s-4hana/ba-p/13736765" target="_blank"&gt;&lt;SPAN&gt;blog post&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; with your technical team&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Does SAP Build include Joule Studio and Joule for Developer?  &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Yes, SAP Build provides Joule for Developer and Joule Studio.&amp;nbsp; Joule Studio is provided with the SAP Build Developer offering.&amp;nbsp; Joule for Developer features are included, but will need to enable this through the free voucher SKUs.&amp;nbsp; You can find more information on Joule for Developer &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-joule-for-developers-faq-features-access-and-more/ba-p/14045316" target="_blank"&gt;&lt;SPAN&gt;here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and Joule Studio &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/unlock-sap-joule-for-developers-claim-your-free-access-today/ba-p/14183158" target="_blank"&gt;&lt;SPAN&gt;here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Are there specific service plans that are exclusive to the unified&amp;nbsp;SAP Build offering?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The Joule Studio service is only offered in the SAP Build Developer SKU. Joule for Developer needs to be enabled through the free voucher SKU's and then can only be used with the SAP Build offering, SAP Build Code and Joule for Developer, BTP ABAP Environment. &amp;nbsp;Visual Cloud Functions in SAP Build Apps is not available in the SAP Build unified SKU.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Can I migrate from the previous SAP Build SKU’s to the new SAP Build SKU? &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Upgrade you SAP Build licenses to access enhanced features and tools.&amp;nbsp; Use build-specific plans for improved efficiently and customization in your projects.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For migration of services please refer to this &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/build-service/build-service-guide/changing-service-plans" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;help&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Can I use both the Old and New Service plans within the same subaccount?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;The old services cannot be enabled in the same subaccount as the new Build services. &amp;nbsp;You will need to do a migration per the above migration guide.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;How does metering work, for example if I use both SAP Build Base User and SAP Build Developer capabilities?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Build operates on a metering model that relies on specific user roles to determine access and functionality within the platform, which include developer, base user, and premium user. Each user must have a global user ID created by an administrator, who also assigns the appropriate role collection to ensure that the correct authorization is granted.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This role assignment is critical; for instance, an SAP Build base user shouldn't be able to create new processes within SAP Build, as such permissions could lead to unintended alterations or disruptions in workflows. By understanding and correctly implementing these roles, organizations can effectively manage user capabilities while maintaining the integrity and security of their SAP Build environment.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For more detailed information on metering and roles visit &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/build-service/build-service-guide/service-plans-and-metering" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;this&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; help location.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;How can I learn more about SAP Build? &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build Basic Trial&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;–Get hands-on experience with a free, 30-day trial, following a &lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform/build/trial.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;step-by-step tutorial&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; on SAP Build.&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Discovery Center&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;–Dive deeper with step-by-step guidance and best practices for implementing use cases. &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Learning&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; –Develop SAP skills for free, anywhere, anytime, and at your own pace:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/products/sap-build" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Build&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-faq-commercials-getting-started-and-more/ba-p/14233744"/>
    <published>2025-10-03T15:08:38.806000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/extensibility-in-the-age-of-ai-why-abcd-is-easier-and-smarter-than-you/ba-p/14234516</id>
    <title>Extensibility in the Age of AI: Why ABCD Is Easier (and Smarter) Than You Think</title>
    <updated>2025-10-03T20:04:58.498000+02:00</updated>
    <author>
      <name>Sonal_Gupta</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/789731</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;The CTO’s Concern&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Not long ago, during a client conversation, a CTO expressed a concern that resonated deeply:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;“We need to extend our system. But every time someone says ‘let’s customize this,’ I feel we’re piling risk. And now with AI coming, I’m afraid our mess gets worse.”&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;That statement captures the heart of a challenge many SAP customers face. Customization has been both the &lt;STRONG&gt;strength&lt;/STRONG&gt; and the &lt;STRONG&gt;Achilles’ heel&lt;/STRONG&gt; of enterprise landscapes. It allows us to adapt, innovate, and differentiate — but it often comes with &lt;STRONG&gt;technical debt, upgrade pain, and hidden complexity&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why Extensibility Matters More in the AI Era&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s pause here. Ten years ago, if you added a Z-table or tweaked a user exit, the worst-case scenario was some testing pain during an upgrade. Today?&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If your data model is inconsistent, your AI forecasts won’t align with reality.&lt;/LI&gt;&lt;LI&gt;If your logic is buried in old exits, Joule copilots can’t “see” your processes.&lt;/LI&gt;&lt;LI&gt;If your core is brittle, cloud updates feel like risks, not opportunities.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In other words: &lt;STRONG&gt;extensibility is no longer just about “making it work.” It’s about making AI possible.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;And now, with &lt;STRONG&gt;SAP’s AI ambitions&lt;/STRONG&gt; accelerating — embedded copilots, Joule agents, and business data clouds powering predictive intelligence — the &lt;STRONG&gt;messy customizations of the past&lt;/STRONG&gt; risk becoming blockers for the future.&lt;/P&gt;&lt;P&gt;This is where &lt;STRONG&gt;ABCD extensibility&lt;/STRONG&gt; comes in. Far from being abstract jargon, it’s a &lt;STRONG&gt;practical compass&lt;/STRONG&gt; to guide enterprises on &lt;EM&gt;how to extend the system smartly, safely, and in a way that enables AI instead of hindering it&lt;/EM&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The ABCD Levels: A Human Explanation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP’s &lt;STRONG&gt;ABCD framework&lt;/STRONG&gt; doesn’t exist to confuse us — it exists to &lt;STRONG&gt;help customers navigate the grey space between innovation and stability&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Here’s the official breakdown, with real-world translation:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sonal_Gupta_0-1761842186834.png" style="width: 546px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/334454i2BF8D48A3ED7DC32/image-dimensions/546x383/is-moderation-mode/true?v=v2" width="546" height="383" role="button" title="Sonal_Gupta_0-1761842186834.png" alt="Sonal_Gupta_0-1761842186834.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;A Short Story: The MV45AFZZ Debate&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Anyone who has worked in SAP Sales and Distribution knows the legendary &lt;STRONG&gt;include MV45AFZZ&lt;/STRONG&gt;. For decades, it’s been the go-to spot for developers to implement custom sales order checks, validations, and logic.&lt;/P&gt;&lt;P&gt;At one client, a senior developer proudly said, &lt;EM&gt;“We’ve been using MV45AFZZ for 15 years, and it works just fine. Why change?”&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;And he wasn’t wrong. In many ways, that’s a &lt;STRONG&gt;Level B extensibility&lt;/STRONG&gt; choice: small, controlled, and serving the business well. (In fact, SAP even documented this in &lt;A href="https://me.sap.com/notes/3578329" target="_blank" rel="noopener noreferrer"&gt;SAP Note 3578329&lt;/A&gt;, proving that not all ‘old-school’ practices are bad.)&lt;/P&gt;&lt;P&gt;The problem comes when dozens of such exits pile up, undocumented, with overlapping logic — and suddenly the system feels like a house of cards.&lt;/P&gt;&lt;P&gt;Here’s the twist: &lt;STRONG&gt;ABCD extensibility is not about banning MV45AFZZ or exits. It’s about putting them in the right place, with the right intent.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The IDoc Question: Clean or Not?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;One of the most common debates I hear is:&amp;nbsp;&lt;EM&gt;“We use IDocs everywhere. Are they clean core?”&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The answer: Yes, IDocs are safe — they fall under Level B.&lt;/P&gt;&lt;P&gt;SAP clarified this in the &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/idocs-are-still-safe-for-sap-s-4hana-sap-clean-core-extensibility-level-b/ba-p/14225439?utm_source=chatgpt.com" target="_blank"&gt;IDoc Clean Core blog&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Why? Because IDocs are:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Officially documented.&lt;/LI&gt;&lt;LI&gt;Supported by SAP.&lt;/LI&gt;&lt;LI&gt;Used for integration and still relevant in S/4HANA.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;That said, if you’re starting a greenfield cloud project, you may want to move toward APIs and Event Mesh (Level A) instead. But if you’ve got an existing landscape with IDocs, don’t panic — they’re not “unclean.”&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Real-World Scenarios: Which Level to Choose?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sonal_Gupta_2-1761842350188.png" style="width: 539px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/334459i5B806FE3134710A7/image-dimensions/539x189/is-moderation-mode/true?v=v2" width="539" height="189" role="button" title="Sonal_Gupta_2-1761842350188.png" alt="Sonal_Gupta_2-1761842350188.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why This Matters for AI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;AI copilots like Joule don’t “guess.” They rely on:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Stable APIs (Level A).&lt;/LI&gt;&lt;LI&gt;Clear data models (A &amp;amp; B).&lt;/LI&gt;&lt;LI&gt;Trusted logic (not buried in Level C/D).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If your system is full of Level D hacks, AI copilots won’t understand your processes. But if you steer toward A and B (with C monitored), you create an AI-ready enterprise.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Closing Thought&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Extensibility is not the villain. Misuse is.&lt;/P&gt;&lt;P&gt;The ABCD framework gives us a shared language:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A when we want innovation + AI without worry.&lt;/LI&gt;&lt;LI&gt;B when proven frameworks like IDocs or MV45AFZZ still serve us.&lt;/LI&gt;&lt;LI&gt;C only if there’s no choice — and we track it closely.&lt;/LI&gt;&lt;LI&gt;D only if we want to leave a headache for the next generation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;So next time someone says &lt;EM&gt;“let’s customize,”&lt;/EM&gt; you don’t need to panic. You just need to ask:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Is this A, B, C, or D? A&lt;/EM&gt;nd that one question can mean the difference between a system that blocks AI — and one that accelerates it.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;#SAPCleanCore&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#SAPExtensibility&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#ABAPCloud&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#SAPAI&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#SAPBTP&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#S4HANACloud&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;#IDoc&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/extensibility-in-the-age-of-ai-why-abcd-is-easier-and-smarter-than-you/ba-p/14234516"/>
    <published>2025-10-03T20:04:58.498000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-excel-upload-through-custom-action-popup-no-ui5-extension-no/ba-p/14234872</id>
    <title>ABAP RAP : Excel upload through custom action popup ( No UI5 Extension , No Object Page workaround )</title>
    <updated>2025-10-05T00:52:51.623000+02:00</updated>
    <author>
      <name>Ramjee_korada</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/10276</uri>
    </author>
    <content>&lt;P&gt;A frequent business requirement involves enabling mass changes to business objects via&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Excel uploads&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;executed through a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;custom action popup&lt;/STRONG&gt;. Historically, achieving this functionality has necessitated various workarounds, often involving&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI5 extensions&lt;/STRONG&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;third-party solutions&lt;/STRONG&gt;, or&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Object Page manipulations&lt;/STRONG&gt;, all of which present specific implementation challenges.&lt;/P&gt;&lt;P&gt;The existing workaround approaches present several drawbacks:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Custom UI Extensions:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Require specialized&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI5 development expertise&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Third-Party Solutions:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Introduce risks related to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;licensing compliance&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and potential&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;security vulnerabilities&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Object Page Manipulations:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Involve complex, multi-step processes, such as creating a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;dummy object page&lt;/STRONG&gt;, facilitating file upload, temporarily&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;storing the file data in a table field&lt;/STRONG&gt;, and requiring a final user action (a button press) to initiate processing. This temporary data storage is often&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;unnecessary&lt;/STRONG&gt;, complicating the data model.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;However, SAP has recently introduced&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ABAP / CAP annotations&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;that offer a cloud-ready solution, potentially&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;eliminating approximately 95% of the development effort&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;typically associated with integrating an Excel upload into the backend. This innovation allows developers to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;prioritize implementing core business logic&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;over developing reusable technical artifacts.&lt;/P&gt;&lt;P&gt;I will now detail the implementation steps.&lt;/P&gt;&lt;P&gt;A business requirement to manage &lt;STRONG&gt;mass processing listings for a library&lt;/STRONG&gt; was selected to demonstrate this use case. The implementation requires several steps, with steps 3 through 6 being the &lt;STRONG&gt;special or additional configurations&lt;/STRONG&gt; needed, while all others are considered routine.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_0-1759618459647.png" style="width: 691px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322875i27F4B6363B99B5FA/image-dimensions/691x376?v=v2" width="691" height="376" role="button" title="Ramjee_korada_0-1759618459647.png" alt="Ramjee_korada_0-1759618459647.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1890964802"&gt;Note:&lt;/H3&gt;&lt;P&gt;&lt;EM&gt;This feature is currently &lt;STRONG&gt;functional on the BTP ABAP Environment&lt;/STRONG&gt;. However, an issue appears to exist with metadata generation on &lt;STRONG&gt;S/4HANA 2023 On-Premise&lt;/STRONG&gt; deployments, even though the objects are syntactically correct. It is anticipated that this constraint will be addressed in the &lt;STRONG&gt;S/4HANA 2025 release&lt;/STRONG&gt;, making the full feature set available on the S/4HANA On-Premise version following a brief waiting period.&lt;/EM&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1694451297"&gt;Implementation Steps&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;A database table for the &lt;STRONG&gt;listing entity&lt;/STRONG&gt; is created. This involves fields such as &lt;CODE&gt;Id&lt;/CODE&gt;, &lt;CODE&gt;Title&lt;/CODE&gt;, &lt;CODE&gt;Type&lt;/CODE&gt;, and &lt;CODE&gt;Author&lt;/CODE&gt;.&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Library Listings'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zrk_lib_listings {

  key client            : abap.clnt not null;
  key listing_uuid      : sysuuid_x16 not null;
  id                    : abap.numc(10);
  title                 : abap.char(40);
  type                  : abap.char(5);
  author                : abap.char(40);
  publisher_studio      : abap.char(40);
  isbn_ean              : abap.char(40);
  language_code         : abap.lang;
  publication_year      : abap.numc(4);
  description           : abap.char(40);
  totalcopies           : abap.int2;
  available_copies      : abap.int2;
  location_shelf_id     : abap.char(40);
  lending_duration_days : abap.int2;
  status                : abap.char(40);
  cover_image_url       : abap.char(100);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2.&amp;nbsp;A &lt;STRONG&gt;RAP Business Object (BO)&lt;/STRONG&gt;&lt;SPAN&gt; is generated, followed by the requisite &lt;/SPAN&gt;&lt;STRONG&gt;UI artifacts&lt;/STRONG&gt;&lt;SPAN&gt;. The specific RAP BO scenario (Managed, Unmanaged, Draft, or Non-Draft) is noted as not influencing the core Excel upload use case. The &lt;/SPAN&gt;&lt;STRONG&gt;RAP Generator is used&lt;/STRONG&gt;&lt;SPAN&gt;&lt;SPAN&gt; to simplify the demonstration.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_0-1759617725687.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322874iBDE9FF5181449404/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ramjee_korada_0-1759617725687.png" alt="Ramjee_korada_0-1759617725687.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. A &lt;STRONG&gt;root&amp;nbsp;abstract entity&lt;/STRONG&gt; is created for the file to be uploaded. (This entity is highly reusable and can be applied across different RAP BOs).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abs. Entity For Attachment'
define root abstract entity ZRK_D_FILE_STREAM
{
  @Semantics.largeObject.mimeType: 'MimeType'
  @Semantics.largeObject.fileName: 'FileName'
  @Semantics.largeObject.contentDispositionPreference: #INLINE
  @EndUserText.label: 'Select Excel file'
  StreamProperty : abap.rawstring(0);
  
  .hidden: true
  MimeType : abap.char(128);
  
  .hidden: true
  FileName : abap.char(128);   
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4. The &lt;STRONG&gt;abstract behavior definition&lt;/STRONG&gt; for the file entity is implemented.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;abstract;
strict(2);
with hierarchy;
define behavior for ZRK_D_FILE_STREAM {
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5. A second &lt;STRONG&gt;abstract entity is created&lt;/STRONG&gt; to serve as an action parameter. This entity includes an association to the file abstract entity (from Step 3).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Action Param for Uploading Excel'
define root abstract entity ZRK_D_UPLOAD_EXCEL
{
// Dummy is a dummy field
@UI.hidden: true
dummy : abap_boolean;
     _StreamProperties : association [1] to ZRK_D_FILE_STREAM on 1 = 1;
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6. The &lt;STRONG&gt;abstract behavior definition&lt;/STRONG&gt; for the action parameter is implemented, including the association to the earlier entity.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;abstract;
strict ( 2 );
with hierarchy;
define behavior for ZRK_D_UPLOAD_EXCEL //alias &amp;lt;alias_name&amp;gt;
{
association _StreamProperties with hierarchy;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7. An &lt;STRONG&gt;action is defined&lt;/STRONG&gt; on the RAP BO Behavior definition, with the parameter specified in Step 5.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  static action ExcelUpload deep parameter ZRK_D_UPLOAD_EXCEL ;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class ZRK_BP_R_LIB_LISTINGS unique;
strict ( 2 );
with draft;
extensible;
define behavior for ZRK_R_LIB_LISTINGS alias Listings
persistent table ZRK_LIB_LISTINGS
extensible
draft table ZRK_LIB_LSTNGS_D
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master( global )
{
  field ( readonly )
   ListingUUID,
   LocalCreatedBy,
   LocalCreatedAt,
   LocalLastChangedBy,
   LocalLastChangedAt,
   LastChangedAt;

  field ( numbering : managed )
   ListingUUID;


  create;
  update;
  delete;

  draft action Activate optimized;
  draft action Discard;
  draft action Edit;
  draft action Resume;
  draft determine action Prepare;

  static action ExcelUpload deep parameter ZRK_D_UPLOAD_EXCEL ;

  mapping for ZRK_LIB_LISTINGS corresponding extensible
  {
    ListingUUID = listing_uuid;
    ID = id;
    Title = title;
    Type = type;
    Author = author;
    PublisherStudio = publisher_studio;
    IsbnEan = isbn_ean;
    LanguageCode = language_code;
    PublicationYear = publication_year;
    Description = description;
    Totalcopies = totalcopies;
    AvailableCopies = available_copies;
    LocationShelfID = location_shelf_id;
    LendingDurationDays = lending_duration_days;
    Status = status;
    CoverImageUrl = cover_image_url;
    LocalCreatedBy = local_created_by;
    LocalCreatedAt = local_created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt = last_changed_at;
  }

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8. The &lt;STRONG&gt;business logic is implemented&lt;/STRONG&gt; to read the Excel content. A released API, XCO_CP_XLSX&amp;nbsp;&lt;FONT color="#000000"&gt;,&lt;/FONT&gt; is used for this demonstration.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; METHOD ExcelUpload.
    TYPES : BEGIN OF ty_sheet_data,
              id                  TYPE zrk_r_lib_listings-id,
              title               TYPE zrk_r_lib_listings-title,
              type                TYPE zrk_r_lib_listings-Type,
              author              TYPE zrk_r_lib_listings-author,
              PublisherStudio     TYPE zrk_r_lib_listings-PublisherStudio,
              IsbnEan             TYPE zrk_r_lib_listings-IsbnEan,
              LanguageCode        TYPE zrk_r_lib_listings-LanguageCode,
              PublicationYear     TYPE zrk_r_lib_listings-PublicationYear,
              description         TYPE zrk_r_lib_listings-Description,
              Totalcopies         TYPE zrk_r_lib_listings-Totalcopies,
              AvailableCopies     TYPE zrk_r_lib_listings-AvailableCopies,
              LocationShelfID     TYPE zrk_r_lib_listings-LocationShelfID,
              LendingDurationDays TYPE zrk_r_lib_listings-LendingDurationDays,
              status              TYPE zrk_r_lib_listings-Status,
            END OF ty_sheet_data.

    DATA lv_file_content   TYPE xstring.
    DATA lt_sheet_data     TYPE STANDARD TABLE OF ty_sheet_data.
    DATA lt_listing_create TYPE TABLE FOR CREATE zrk_r_lib_listings.

    lv_file_content = VALUE #( keys[ 1 ]-%param-_streamproperties-StreamProperty OPTIONAL ).

    " Error handling in case file content is initial

    DATA(lo_document) = xco_cp_xlsx=&amp;gt;document-&amp;gt;for_file_content( lv_file_content )-&amp;gt;read_access( ).

    DATA(lo_worksheet) = lo_document-&amp;gt;get_workbook( )-&amp;gt;worksheet-&amp;gt;at_position( 1 ).

    DATA(o_sel_pattern) = xco_cp_xlsx_selection=&amp;gt;pattern_builder-&amp;gt;simple_from_to(
      )-&amp;gt;from_column( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_alphabetic_value( 'A' )  " Start reading from Column A
      )-&amp;gt;to_column( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_alphabetic_value( 'N' )   " End reading at Column N
      )-&amp;gt;from_row( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_numeric_value( 2 )    " *** Start reading from ROW 2 to skip the header ***
      )-&amp;gt;get_pattern( ).

    lo_worksheet-&amp;gt;select( o_sel_pattern
                                     )-&amp;gt;row_stream(
                                     )-&amp;gt;operation-&amp;gt;write_to( REF #( lt_sheet_data )
                                     )-&amp;gt;set_value_transformation(
                                         xco_cp_xlsx_read_access=&amp;gt;value_transformation-&amp;gt;string_value
                                     )-&amp;gt;execute( ).

    lt_listing_create = CORRESPONDING #( lt_sheet_data ).

    MODIFY ENTITIES OF zrk_r_lib_listings IN LOCAL MODE
           ENTITY Listings
           CREATE AUTO FILL CID FIELDS ( Id Title Type author PublisherStudio IsbnEan LanguageCode PublicationYear description Totalcopies AvailableCopies LocationShelfID LendingDurationDays status )
           WITH lt_listing_create
           " TODO: variable is assigned but never used (ABAP cleaner)
           MAPPED DATA(lt_mapped)
           " TODO: variable is assigned but never used (ABAP cleaner)
           REPORTED DATA(lt_reported)
           " TODO: variable is assigned but never used (ABAP cleaner)
           FAILED DATA(lt_failed).

    " Communicate the messages to UI - not in scope of this demo
    IF lt_failed IS INITIAL.
      APPEND VALUE #( %msg = new_message_with_text( severity = if_abap_behv_message=&amp;gt;severity-success
                                                    text     = 'Listings have been uploaded - please refresh the list!!' ) )
             TO reported-listings.
    ENDIF.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9. The action is utilized on the &lt;STRONG&gt;projection behavior&lt;/STRONG&gt; and subsequently exposed in the &lt;STRONG&gt;metadata extension&lt;/STRONG&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  use action ExcelUpload;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection implementation in class ZRK_BP_C_LIB_LISTINGS unique;
strict ( 2 );
extensible;
use draft;
use side effects;
define behavior for ZRK_C_LIB_LISTINGS alias Listings
extensible
use etag
{
  use create;
  use update;
  use delete;

  use action Edit;
  use action Activate;
  use action Discard;
  use action Resume;
  use action Prepare;

  use action ExcelUpload;

}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;.lineItem: [{ type:#FOR_ACTION , dataAction: 'ExcelUpload' , label: 'Upload Excel' }]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;10. The &lt;STRONG&gt;service binding is published&lt;/STRONG&gt;, and the application is then ready for execution.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_2-1759616768674.png" style="width: 739px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322868iF1985AA5BDD03A2A/image-dimensions/739x181?v=v2" width="739" height="181" role="button" title="Ramjee_korada_2-1759616768674.png" alt="Ramjee_korada_2-1759616768674.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_3-1759616871331.png" style="width: 721px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322869i040F7DA1CC5515C5/image-dimensions/721x392?v=v2" width="721" height="392" role="button" title="Ramjee_korada_3-1759616871331.png" alt="Ramjee_korada_3-1759616871331.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_4-1759616921974.png" style="width: 720px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322870i5364BBC5623F81B7/image-dimensions/720x117?v=v2" width="720" height="117" role="button" title="Ramjee_korada_4-1759616921974.png" alt="Ramjee_korada_4-1759616921974.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_5-1759617464764.png" style="width: 743px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322872i185A7C14C9E33C7E/image-dimensions/743x390?v=v2" width="743" height="390" role="button" title="Ramjee_korada_5-1759617464764.png" alt="Ramjee_korada_5-1759617464764.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_6-1759617503382.png" style="width: 736px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322873iF922947957F6C08B/image-dimensions/736x407?v=v2" width="736" height="407" role="button" title="Ramjee_korada_6-1759617503382.png" alt="Ramjee_korada_6-1759617503382.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-excel-upload-through-custom-action-popup-no-ui5-extension-no/ba-p/14234872"/>
    <published>2025-10-05T00:52:51.623000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-build-side-by-side-extensions-for-sap-s-4hana-public-cloud-with-sap/ba-p/14235644</id>
    <title>How to build side-by-side extensions for SAP S/4HANA public cloud with SAP BTP ABAP Trial</title>
    <updated>2025-10-06T12:53:29.326000+02:00</updated>
    <author>
      <name>Andre_Fischer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/55</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1632827142"&gt;Introduction&lt;/H1&gt;&lt;P&gt;The SAP BTP Trial has now been equipped with a central shared SAP S/4HANA public cloud instance that can be used to build side-by-side extensions.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ABAP Environment.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323246iBAB9750627EE899B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ABAP Environment.png" alt="ABAP Environment.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Since in the shared systems for the SAP BTP ABAP Environement developers are not allowed to create communication scenarios on their own this is now a great step forward since by providing pre-configure communication scenarios you are now able to walk through the development of a side-by-side scenario without having to bother with setting up the backend connectivity.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In this article I give an overview how this setup can be leveraged in the shared trial systems for the ABAP Environment in SAP BTP Trial.&lt;/P&gt;&lt;H1 id="toc-hId-1436313637"&gt;How to guides&lt;/H1&gt;&lt;P&gt;The new setup is already been described in the following how-to-guides and missions:&lt;/P&gt;&lt;P&gt;&lt;A href="https://discovery-center.cloud.sap/protected/index.html#/missiondetail/3248/" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Discovery Center Mission - Develop extensions for SAP S/4HANA with SAP BTP, ABAP Environment, runtime&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/SAP-samples/abap-platform-rap620/tree/main" target="_blank" rel="noopener nofollow noreferrer"&gt;RAP620: Side-by-side extensibility with SAP BTP ABAP Environment&lt;/A&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1239800132"&gt;Technical background&lt;/H1&gt;&lt;H2 id="toc-hId-1172369346"&gt;SAP S/4HANA Public Cloud backend&lt;/H2&gt;&lt;P&gt;In the shared SAP S/4HANA Trial we have published read-only access to&amp;nbsp;&lt;SPAN&gt;&lt;EM&gt;Product Master Data Including Classification&lt;/EM&gt; using the following API&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://api.sap.com/api/API_CLFN_PRODUCT_SRV/overview" target="_blank" rel="noopener noreferrer"&gt;Overview | Product Master Data Including Classification – Read | SAP Business Accelerator Hub&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;This has been achieved by setting up a communication arrangement in the SAP S/4HANA public cloud instance that is based on the &lt;EM&gt;Communication Scenario&lt;/EM&gt; called&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;&lt;SPAN&gt;Product Classification Integration (SAP_COM_0309)&lt;/SPAN&gt;&lt;/EM&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In addition we have enabled read and write access to &lt;EM&gt;Sales Order Data&lt;/EM&gt; using the followig API&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://api.sap.com/api/API_SALES_ORDER_SRV/overview" target="_blank" rel="noopener noreferrer"&gt;Overview | Sales Order (A2X) | SAP Business Accelerator Hub&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;his has been achieved by setting up a communication arrangement in the SAP S/4HANA public cloud instance that is based on the &lt;EM&gt;Communication Scenario&lt;/EM&gt; called &lt;EM&gt;Sales Order Integration (SAP_COM_0109)&lt;/EM&gt;&lt;/SPAN&gt;&lt;EM&gt;&lt;SPAN&gt;&lt;EM&gt;&amp;nbsp;&lt;/EM&gt;.&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;H2 id="toc-hId-975855841"&gt;SAP BTP ABAP Environment - Trial&lt;/H2&gt;&lt;P&gt;On the consumer side, in the shared SAP BTP ABAP Environment trial instances, we have created communication scenarios as well that allow for the consumption of the aforementioned scenarios.&lt;/P&gt;&lt;H3 id="toc-hId-908425055"&gt;&lt;SPAN&gt;SAP_COM_0109 (Sales Order Data)&lt;/SPAN&gt;&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA(lo_destination) = cl_http_destination_provider=&amp;gt;create_by_comm_arrangement(
                                                         comm_scenario  = 'ZBTP_TRIAL_SAP_COM_0109'
                                                         comm_system_id = 'ZBTP_TRIAL_SAP_COM_0109'
                                                         service_id     = 'ZBTP_TRIAL_SAP_COM_0109_REST'
                                                       ).&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-711911550"&gt;&lt;SPAN&gt;SAP_COM_0309 (Product Master Data)&lt;/SPAN&gt;&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA(lo_destination) = cl_http_destination_provider=&amp;gt;create_by_comm_arrangement(
                                                     comm_scenario  = 'ZBTP_TRIAL_SAP_COM_0309'
                                                     comm_system_id = 'ZBTP_TRIAL_SAP_COM_0309'
                                                     service_id     = 'ZBTP_TRIAL_SAP_COM_0309_REST'
                                                   ).&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-386315326"&gt;&lt;SPAN&gt;Test classes&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;In the shared trial systems you will find two test classes&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;zcl_test_api_sales_order_srv&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;zsc_test_api_clfn_product_srv&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;that you can run as a console application by simply pressing &lt;STRONG&gt;F9&lt;/STRONG&gt; to show a list of products and to create a sales order in the SAP S/4HANA public shared backend system.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Especially the class&amp;nbsp;z&lt;STRONG&gt;cl_test_api_sales_order_srv&lt;/STRONG&gt; is of interest since it shows how to fill the&amp;nbsp;&lt;STRONG&gt;description node&lt;/STRONG&gt; for deep business data, so that it allows you to create the sales order header data alongside with one or more items.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-build-side-by-side-extensions-for-sap-s-4hana-public-cloud-with-sap/ba-p/14235644"/>
    <published>2025-10-06T12:53:29.326000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-btp-q3-2025/ba-p/14235530</id>
    <title>What's New in SAP BTP - Q3 2025</title>
    <updated>2025-10-07T10:16:43.902000+02:00</updated>
    <author>
      <name>romymann</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2090926</uri>
    </author>
    <content>&lt;P&gt;This third quarter brought some helpful innovation highlights for SAP Business Technology Platform, that we’re excited to share with you! The Q3 Innobytes demonstrate the progress we made in SAP BTP over the last months. Check out the video below and explore the latest features in Application Development, Joule and more. Enjoy watching!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FsCJ6PsskeI8%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DsCJ6PsskeI8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FsCJ6PsskeI8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="What's New in SAP BTP: Top New Features | Joule Studio Skill Builder | Q3 2025" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1890991584"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;App Dev Highlights&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-1694478079"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;AI-powered Capabilities in SAP Build Work Zone&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;In the first demo, three new AI capabilities in SAP Build Work Zone are demonstrated to help you work smarter and more efficiently.&lt;/P&gt;&lt;P&gt;With &lt;STRONG&gt;AI Summarization&lt;/STRONG&gt;, you can create a concise summary of long documents within seconds. Simply find the content in your workspace and click Summarize to save time and work smarter.&lt;/P&gt;&lt;P&gt;To make engaging with content easier, you can access &lt;STRONG&gt;AI Comment Generation &lt;/STRONG&gt;via the AI icon to generate contextual comments, helping respond quickly and intelligently.&amp;nbsp;&lt;/P&gt;&lt;P&gt;To support content creation, the &lt;STRONG&gt;AI Text Generation&lt;/STRONG&gt; helps with drafting an introduction or brainstorming ideas. In the workspace editor, you can ask AI to generate Text and let it support your experience in the SAP Build Work Zone.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Watch the demo starting at 00:09 to see these innovations in action.&lt;/P&gt;&lt;P&gt;Learn more&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="•%09https:/community.sap.com/t5/technology-blog-posts-by-sap/sap-build-work-zone-gets-even-more-powerful-with-ai-powered-capabilities/ba-p/14180971" target="_blank" rel="noopener nofollow noreferrer"&gt;Blog Post SAP Build Work Zone&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform/workzone.html" target="_blank" rel="noopener noreferrer"&gt;SAP Build Work Zone&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://community.sap.com/topics/work-zone" target="_blank"&gt;SAP Community&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1497964574"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;Skill &lt;FONT color="#3366FF"&gt;B&lt;/FONT&gt;&lt;/STRONG&gt;&lt;STRONG&gt;uilder in Joule General Availability&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;Welcome to Joule Studio, a powerful tool that enables you to create intelligent AI agents and custom-built &lt;STRONG&gt;Joule Skills&lt;/STRONG&gt; based on your specific business needs.&lt;/P&gt;&lt;P&gt;The creation of &lt;STRONG&gt;Joule Studio’s AI agent&lt;/STRONG&gt; is seamlessly integrated with SAP Business Technology Platform (SAP BTP), leveraging its robust security, scalability, and connectivity to SAP systems for maximum efficiency.&amp;nbsp;In this demo, a new Joule Skill is created that automates the workflow of the badge printing process. It automatically generates and prints employee badges by integrating Joule Studio with the SAP HR database, and everything you need for this process is in one place.&lt;/P&gt;&lt;P&gt;Start the demo at 01:51 to get more insights.&lt;/P&gt;&lt;P&gt;Learn more&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="•%09https:/community.sap.com/t5/application-development-and-automation-blog-posts/how-to-get-started-with-joule-studio/ba-p/14152855" target="_blank" rel="noopener nofollow noreferrer"&gt;Get Started with Joule Studio&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://www.youtube.com/watch?v=0bH3CMpKCIg" target="_blank" rel="noopener nofollow noreferrer"&gt;Detailed Tutorial&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/joule-studio-is-generally-available-in-sap-build-empower-your-business-with/ba-p/14137882" target="_self"&gt;SAP Community Blog Page&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1301451069"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;Downtime-Optimized Upgrades for SAP BTP ABAP Environment&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP BTP ABAP Environment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; now uses blue-green-fashioned lifecycle management to minimize the downtime during hotfixes and version upgrades.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A recent update demonstrates that switching to a new runtime takes only seconds, with release upgrades targeting about 30 minutes. This innovation aims to make the process more transparent, aligning with downtime more efficiently. With this improvement, we are minimizing downtime and optimizing upgrades!&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This demo uses an example to highlight this innovation further (starting at 03:15).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Learn more&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-maintenance-windows-and-major-upgrade-windows-in/ba-p/13920833" target="_blank"&gt;SAP BTP ABAP Environment – Maintenance Windows and Major Upgrade Windows in 2025&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1104937564"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;Integration &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-908424059"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;AI Adapter in SAP Integration Suite&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;In August, we released an &lt;STRONG&gt;AI adapter&lt;/STRONG&gt; for Cloud Integration capability of the SAP Integration Suite on the SAP Business Technology Platform (SAP BTP).&lt;/P&gt;&lt;P&gt;Available as part of the Standard plan and above, it allows integration flows to interact with Large Language Models, adding AI directly into the integration at runtime. In this demo iflow, a product review is analyzed with OpenAI to enrich them with customer sentiment. This example shows the detection of a negative sentiment in a product review through GPT-5. The adapter is available now for you to try.&lt;/P&gt;&lt;P&gt;Watch this part (starting at 04:29) to get more insights.&lt;/P&gt;&lt;P&gt;Learn more&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="•%09https:/community.sap.com/t5/technology-blog-posts-by-members/sap-ci-just-started-talking-to-ai-introducing-the-new-ai-adapter-for-sap/ba-p/14170748" target="_blank" rel="noopener nofollow noreferrer"&gt;AI Adapter Blog Post&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://hub.sap.com/integrationadapter/AI_rojoconsultancy.com" target="_blank" rel="noopener noreferrer"&gt;AI Adapter on SAP Business Accelerator Hub&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-711910554"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;Data &amp;amp; Analytics &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-515397049"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;SQL Generation for SAP HANA in Joule &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;In SAP Build Code, Joule can now automatically generate &lt;STRONG&gt;SAP HANA SQL&lt;/STRONG&gt; based on natural language prompts.&lt;/P&gt;&lt;P&gt;You can either execute it directly within the Joule panel or you can copy the SQL command into the SQL Console to perform additional operations or refinements.&amp;nbsp;This integration streamlines workflows, boosts productivity, and reduces errors, eliminating manual coding and tool switching.&lt;/P&gt;&lt;P&gt;This is how it’s done:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Enable &lt;STRONG&gt;SQL generation&lt;/STRONG&gt; using object definitions in your workspace’s settings&lt;/LI&gt;&lt;LI&gt;Navigate to your Joule extension and select the command type &lt;STRONG&gt;HANA SQL&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Type your &lt;STRONG&gt;Natural Language Prompt&lt;/STRONG&gt; – Joule will then generate and execute the SQL for you&lt;/LI&gt;&lt;LI&gt;Execute or add operations or refinements to the results&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;See these steps in action (starting at 05:57).&lt;/P&gt;&lt;P&gt;Learn more&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/hana-cloud-database/sap-hana-cloud-sap-hana-database-developer-guide-for-cloud-foundry-multitarget-applications-sap-business-app-studio/generate-sql-from-natural-language-using-joule" target="_blank" rel="noopener noreferrer"&gt;Generate SQL from Natural Language using Joule&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-318883544"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;Cross &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-122370039"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;Modifiable Transport Requests &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;SAP Cloud Transport Management Service now supports&amp;nbsp;&lt;STRONG&gt;Modifiable Transport Requests&lt;/STRONG&gt;, allowing you to test and adjust transport requests in safe test nodes before releasing them to production.&lt;/P&gt;&lt;P&gt;This is how it works:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create a Modifiable Transport Request with the &lt;STRONG&gt;Create&lt;/STRONG&gt; button.&lt;/LI&gt;&lt;LI&gt;When opening the request, see the &lt;STRONG&gt;Tracking&lt;/STRONG&gt; tab that shows the transport landscape and is now open for changes.&lt;/LI&gt;&lt;LI&gt;Add content to the request and click the &lt;STRONG&gt;Test&lt;/STRONG&gt; button to import directly or later and freely add or remove content.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Release &lt;/STRONG&gt;the request when testing is completed.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This flexible approach enables adding, removing, or redeploying content as needed, ensuring higher quality and safer deployments. Automation and Integration with other SAP BTP services are planned, so stay tuned for more to come.&lt;/P&gt;&lt;P&gt;To see this demo in action, watch the video (starting at 07:36).&lt;/P&gt;&lt;P&gt;Learn more&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="•%09https:/community.sap.com/t5/technology-blog-posts-by-sap/modifiable-transport-requests-now-also-for-your-sap-cloud-changes/ba-p/14194823" target="_blank" rel="noopener nofollow noreferrer"&gt;Modifiable Transport Request Blog Post&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId--149374835"&gt;&lt;FONT color="#33CCCC"&gt;&lt;STRONG&gt;Cross (Cloud ALM) &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H3 id="toc-hId--345888340"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;Change Point Detection for Custom BTP Apps in SAP Cloud ALM &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;Running custom apps on SAP BTP embraces Cloud Flexibility with the Clean Core Principle. With the &lt;STRONG&gt;SAP Cloud ALM&lt;/STRONG&gt; for Operations, you can monitor SAP and non-SAP applications end-to-end. This feature ensures business continuity and operational efficiency.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Real User Monitoring &lt;/STRONG&gt;gives you clear insights into usage by tracking executions, performance, and response times all in one interface.&amp;nbsp;&lt;/P&gt;&lt;P&gt;If the performance suddenly shifts, &lt;STRONG&gt;Change Point Detection&lt;/STRONG&gt; identifies unusual patterns in the performance compared to historical trends. You can then directly navigate to the &lt;STRONG&gt;respective request&lt;/STRONG&gt; and even receive &lt;STRONG&gt;alerts&lt;/STRONG&gt; or emails when a change point is detected. This helps quick investigation of the issue and ensures smooth operations.&lt;/P&gt;&lt;P&gt;This new feature is highlighted (starting at 08:52).&lt;/P&gt;&lt;P&gt;Learn more&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://support.sap.com/en/alm/sap-cloud-alm/operations/expert-portal.html" target="_blank" rel="noopener noreferrer"&gt;SAP Cloud ALM for Operations Expert Portal&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://github.com/SAP-samples/btp-developer-guide-cap/tree/main/documentation/observability" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP BTP Developer’s Guide (Github)&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Join us for TechEd:&lt;/LI&gt;&lt;LI&gt;CS101 | Discover SAP Cloud ALM for operations in action&lt;/LI&gt;&lt;LI&gt;CS261 | Monitoring a custom SAP BTP application with SAP Cloud ALM for operations&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;H3 id="toc-hId--542401845"&gt;&lt;FONT color="#FFCC00"&gt;&lt;STRONG&gt;Share your thoughts&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;These videos are for YOU, and we would love to hear your impressions. How do you like the video? How can we improve the upcoming videos? Please share your feedback by liking this post or leaving a comment below.&lt;/P&gt;&lt;P&gt;Thank you for your support and happy viewing, sharing, and enjoying!&lt;/P&gt;&lt;P&gt;You Might Also Be Interested In&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://events.sap.com/sap-btp-garage-2025/en_us/home.html" target="_blank" rel="noopener noreferrer"&gt;SAP BTP Garage&lt;/A&gt;:&amp;nbsp;monthly LIVE webinar with hands-on use case walkthroughs and demos.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://podcast.opensap.info/cloud-platform/" target="_blank" rel="noopener nofollow noreferrer"&gt;Unlocking SAP BTP&lt;/A&gt;: monthly podcast covering all things SAP BTP.&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-btp-q3-2025/ba-p/14235530"/>
    <published>2025-10-07T10:16:43.902000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-expands-to-private-cloud-accelerating-abap/ba-p/14237958</id>
    <title>SAP Joule for Developers Expands to Private Cloud:  Accelerating ABAP Innovation and Transformation</title>
    <updated>2025-10-08T10:27:45.674000+02:00</updated>
    <author>
      <name>lienards</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/227111</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1761972361"&gt;&lt;STRONG&gt;Key Highlights&lt;/STRONG&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Joule for Developers, ABAP AI capabilities&lt;/STRONG&gt; are now available in &lt;STRONG&gt;SAP S/4HANA Private Cloud Edition &lt;/STRONG&gt;&lt;STRONG&gt;2025&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;New &lt;STRONG&gt;Custom Code Migration &lt;/STRONG&gt;capabilities accelerate the transformation of classic ERP code to &lt;STRONG&gt;S/4HANA Cloud Private Edition&lt;/STRONG&gt;, including:&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Documentation Chat &lt;/STRONG&gt;- Get accurate answers on SAP S/4HANA simplifications.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;ABAP Program Explain &lt;/STRONG&gt;-&amp;nbsp;Understand the business purpose and logic of legacy code.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Explain&lt;/STRONG&gt;&lt;STRONG&gt; for SAP S/4HANA Test Cockpit Issues &lt;/STRONG&gt;-&amp;nbsp;Diagnose and resolve S/4HANA-related Test Cockpit issues using context from simplification items and cookbooks.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Earlier this year, SAP introduced &lt;STRONG&gt;Joule for Developers&lt;/STRONG&gt; — a set of embedded artificial intelligence capabilities in SAP Build, including ABAP, that helps developers accelerate application and extension development, reduce costs, and boost productivity.&lt;/P&gt;&lt;P&gt;Joule for Developers, ABAP AI capabilities are now available for S/4HANA Private Cloud Edition, version 2025, providing comprehensive support for ABAP Cloud use cases. The release also introduces the first Custom Code Migration capabilities, bringing a powerful suite of AI-assisted capabilities purpose-built for ABAP development and cloud delivery.&lt;/P&gt;&lt;P&gt;Best of all, Joule for Developers remains free of charge, enabling customers and partners to integrate it into daily operations and accelerate innovation without commercial barriers.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1565458856"&gt;&lt;STRONG&gt;What’s Included&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This release for Private Cloud delivers AI-powered support for the core development scenarios ABAP developers rely on every day. Key capabilities include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;inline code completion,&lt;/LI&gt;&lt;LI&gt;ABAP/CDS code explanation,&lt;/LI&gt;&lt;LI&gt;automated unit test generation for ABAP and ABAP core data services (CDS),&lt;/LI&gt;&lt;LI&gt;RAP business objects generation,&lt;/LI&gt;&lt;LI&gt;RAP predictive business logic, and&lt;/LI&gt;&lt;LI&gt;OData consumption.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All capabilities are designed to accelerate development, improve code quality, and boost productivity from day one. Additionally, this release introduces the first wave of&lt;STRONG&gt; Custom Code Migration capabilities&lt;/STRONG&gt;, designed to accelerate the move from classic SAP ERP to &lt;STRONG&gt;SAP S/4HANA Cloud Private Cloud Edition&lt;/STRONG&gt;. These AI-powered features simplify code analysis and adaptation by:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Providing &lt;STRONG&gt;Documentation Chat&lt;/STRONG&gt; for quick answers on SAP S/4HANA simplifications:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lienards_0-1759907233424.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324475i606AD92C02DAE239/image-size/large?v=v2&amp;amp;px=999" role="button" title="lienards_0-1759907233424.png" alt="lienards_0-1759907233424.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Using &lt;STRONG&gt;ABAP Program Explain&lt;/STRONG&gt; to clarify the business purpose and implementation logic of legacy code:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lienards_1-1759907233436.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324473iC9A1BA70B925AFD7/image-size/large?v=v2&amp;amp;px=999" role="button" title="lienards_1-1759907233436.png" alt="lienards_1-1759907233436.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Explaining &lt;STRONG&gt;ABAP Test Cockpit (ATC) findings&lt;/STRONG&gt; with step-by-step guidance on how to fix the issues, based on simplification items and technical documentation:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lienards_2-1759907233449.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324474i74D164B2F8FB58F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="lienards_2-1759907233449.png" alt="lienards_2-1759907233449.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;All capabilities are designed to reduce manual effort, speed up migration projects, and help your teams to modernize their ABAP landscapes with great confidence.&lt;/P&gt;&lt;P&gt;The ABAP AI software development kit, powered by Intelligent Scenario Lifecycle Management, is now available and offers centralized access to the generative AI hub in SAP AI Core. It leverages the same robust platform SAP uses internally, delivering proven, production-grade infrastructure to customer landscapes. With simplified configuration and governance, development teams can adopt AI capabilities quickly, providing a significant boost to integration efforts.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1368945351"&gt;&lt;STRONG&gt;Why This Matters &lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Private cloud customers require strict governance, security, and operational control - yet they also seek the speed and innovation modern AI-driven development delivers. This release addresses both priorities by enabling:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;faster development cycles&lt;/STRONG&gt; with AI-assisted coding and test generation,&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;stronger knowledge transfer&lt;/STRONG&gt; through automated code explanations and copilot interactions,&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;higher delivery quality&lt;/STRONG&gt; with automated testing and code migration support, and&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;secure innovation&lt;/STRONG&gt; within controlled environments.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1172431846"&gt;&lt;STRONG&gt;Looking Ahead&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;We’re building on this momentum with a series of targeted deliveries aligned to upcoming releases across the BTP ABAP Environment and S/4HANA Cloud Public Edition. Planned updates for &lt;STRONG&gt;BTP ABAP Environment 2511, 2602&lt;/STRONG&gt;, and &lt;STRONG&gt;S/4HANA Cloud Public Edition 2602&lt;/STRONG&gt; include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;documentation generation capabilities,&lt;/LI&gt;&lt;LI&gt;enhanced explanations for reports in the Custom Code Migration application,&lt;/LI&gt;&lt;LI&gt;AI-enabled insights on Clean Core–related ATC findings directly within the Custom Code Migration application,&lt;/LI&gt;&lt;LI&gt;code migration and adaptation proposals to support developers working on RISE code adaptation,&lt;/LI&gt;&lt;LI&gt;ABAP CDS annotation and metadata extension generation, and&lt;/LI&gt;&lt;LI&gt;ABAP CDS analytical model generation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These enhancements will extend Joule’s impact beyond code completion and test generation, supporting documentation, migration and Clean Core compliance, analytical use cases, and addressing more stages of the end-to-end development lifecycle.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-975918341"&gt;&lt;STRONG&gt;Free Offer Extended&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;SAP Joule for Developers will remain &lt;STRONG&gt;free of charge.&lt;/STRONG&gt; The extended promotion ensures that all customers and partners can continue to use Joule for Developers capabilities for free.&lt;/P&gt;&lt;P&gt;Access can be requested using the material numbers &lt;STRONG&gt;8019124&lt;/STRONG&gt; (customers) and &lt;STRONG&gt;8019541&lt;/STRONG&gt; (TDD partners). This offer now extends beyond the BTP ABAP environment and SAP Cloud ERP Public Edition to include &lt;STRONG&gt;SAP Cloud ERP Private Edition&lt;/STRONG&gt; customers running the latest 2025 release.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-779404836"&gt;&lt;STRONG&gt;Closing Remarks&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;SAP Joule for Developers’ delivery for Private Cloud is a significant milestone — combining end-to-end ABAP Cloud with AI use cases, innovative code migration scenarios, and a standardized ABAP AI SDK to bring practical AI assistance directly into everyday development workflows.&lt;/P&gt;&lt;P&gt;With extended free of charge access, we invite every customer and partner to explore SAP Joule for Developers, push its boundaries, and help shape the future of AI-assisted ABAP development.&lt;/P&gt;&lt;P&gt;Start using SAP Joule for Developers today and join us in building the next generation of intelligent, AI-driven ABAP innovation.&lt;/P&gt;&lt;P&gt;For a deeper dive, read the &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-ai-revolution-accelerates-the-abap-developer-who-built-enterprise-apps/ba-p/14216073" target="_blank"&gt;blog post&lt;/A&gt; by Simona Marincei, head of ABAP AI.&lt;/P&gt;&lt;P&gt;Learn more about SAP Joule for Developers capabilities &lt;A href="https://www.sap.com/products/artificial-intelligence/joule-for-developers.html" target="_blank" rel="noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-expands-to-private-cloud-accelerating-abap/ba-p/14237958"/>
    <published>2025-10-08T10:27:45.674000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-abap-ai-capabilities-for-sap-s-4hana-cloud-private/ba-p/14236954</id>
    <title>SAP Joule for Developers, ABAP AI capabilities for SAP S/4HANA Cloud Private Edition 2025</title>
    <updated>2025-10-08T12:44:10.622000+02:00</updated>
    <author>
      <name>SebastianBaskovich</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/10947</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Hi folks, &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Joule for Developers, ABAP AI capabilities are now also available for SAP S/4HANA Cloud Private Edition 2025.&lt;BR /&gt;The ABAP AI license materials for SAP S/4HANA Cloud Private Edition 2025 are the same as for SAP BTP ABAP Environment &amp;amp; SAP S/4HANA Public Cloud. For more information, please check out the following SAP Note&amp;nbsp;&lt;A href="https://me.sap.com/notes/3571857" target="_blank" rel="noopener noreferrer"&gt;3571857&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below, you can find a step-by-step guide on how to activate SAP Joule for Developers, ABAP AI capabilities in your SAP S/4HANA Cloud Private Edition 2025 system. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Have fun and stay tuned for TechEd soon!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Best,&lt;BR /&gt;Sebastian&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1761942566"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1565429061"&gt;Prerequisites&lt;/H2&gt;&lt;P&gt;You have a customer account on &lt;STRONG&gt;SAP Business Technology Platform (BTP) &lt;/STRONG&gt;and a development system on &lt;STRONG&gt;SAP&lt;/STRONG&gt; &lt;STRONG&gt;S/4HANA Cloud Private Edition 2025&lt;/STRONG&gt; and you have prepared the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Subscription to &lt;STRONG&gt;SAP Cloud Identity Services&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Subscription to &lt;STRONG&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Established trust to your &lt;STRONG&gt;SAP Cloud Identity Services tenant &lt;/STRONG&gt;in your BTP Subaccount, see this &lt;A href="•https:/help.sap.com/docs/btp/sap-business-technology-platform/trust-and-federation-with-identity-providers?locale=en-US" target="_blank" rel="noopener nofollow noreferrer"&gt;link&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Your user needs Administrator access to your &lt;STRONG&gt;SAP Cloud Identity Services tenant&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Your system needs to be configured so that it trusts server certificates according to the "required" section of the &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https%3A%2F%2Fgithub.com%2Fsap-software%2Fbtp-trust-store" target="_blank" rel="noopener noreferrer"&gt;BTP Trust Store&lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;LI&gt;Your system needs to use a client certificate issued by a CA listed in the "required" section of the &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https%3A%2F%2Fgithub.com%2Fsap-software%2Fbtp-trust-store" target="_blank" rel="noopener noreferrer"&gt;BTP Trust Store&lt;/A&gt;&lt;/SPAN&gt;. One way to obtain a client certificate can be found on &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/use-destination-certificates?version=Cloud#procedure" target="_blank" rel="noopener noreferrer"&gt;Manage Destination Certificates&lt;/A&gt;&lt;/SPAN&gt; (under "Generate a Certificate").&lt;/LI&gt;&lt;LI&gt;You've successfully applied SAP Note &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https://me.sap.com/notes/3627794" target="_blank" rel="noopener noreferrer"&gt;3627794 &lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;LI&gt;Your ABAP system needs to support TLS 1.3. If TLS 1.3 is not enabled, refer to SAP Note &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https://me.sap.com/notes/3318423" target="_blank" rel="noopener noreferrer"&gt;3318423 &lt;/A&gt;&lt;/SPAN&gt;&amp;nbsp;to activate it.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1368915556"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1172402051"&gt;Configuration steps in your SAP BTP subaccount&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;In your BTP subaccount, navigate to &lt;STRONG&gt;Entitlements&lt;/STRONG&gt;. You’ll see a table with all entitlements it already has.&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Configure Entitlements&lt;/STRONG&gt; &amp;gt; &lt;STRONG&gt;Add Service Plans&lt;/STRONG&gt;. A popover appears with all entitlements available for your directory/subaccount.&lt;/LI&gt;&lt;LI&gt;Select the service &lt;EM&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/EM&gt; and then the plan “default”&lt;/LI&gt;&lt;LI&gt;Select the amount of quota&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Add Service Plans&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Save&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 14.22.42.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323868iDD900DFB152B439E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 14.22.42.png" alt="Screenshot 2025-10-06 at 14.22.42.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Navigate to your subaccount in the SAP BTP cockpit&lt;/LI&gt;&lt;LI&gt;Go to &lt;STRONG&gt;Services &amp;gt; Service Marketplace&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Choose the &lt;EM&gt;SAP Joule for developers, ABAP AI capabilities&lt;/EM&gt; tile.&lt;/LI&gt;&lt;LI&gt;Choose &lt;STRONG&gt;Create&lt;/STRONG&gt; and select Plan &lt;EM&gt;default&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 13.48.40.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323870i4553F8A79364BEF0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 13.48.40.png" alt="Screenshot 2025-10-06 at 13.48.40.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 13.49.01.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323871i40511D518B24DB2A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 13.49.01.png" alt="Screenshot 2025-10-06 at 13.49.01.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;Once the service is created, go to your IAS and navigate to &lt;STRONG&gt;Users &amp;amp; Authorizations &amp;gt; Groups &lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Check that the group&lt;EM&gt; j4d-admin&lt;/EM&gt; was successfully created&lt;/LI&gt;&lt;LI&gt;Add your admin user to the created &lt;EM&gt;j4a-admin&lt;/EM&gt; group&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 16.58.21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323874iEDFF6732B4938C19/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 16.58.21.png" alt="Screenshot 2025-10-06 at 16.58.21.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Navigate to your subaccount in the SAP BTP cockpit&lt;/LI&gt;&lt;LI&gt;In the navigation go to &lt;STRONG&gt;Services&lt;/STRONG&gt; &amp;gt;&lt;STRONG&gt;Instances &amp;amp; Subscriptions&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Choose the &lt;EM&gt;SAP Joule for developers, ABAP AI capabilities&lt;/EM&gt; tile.&lt;/LI&gt;&lt;LI&gt;Click on &lt;STRONG&gt;&lt;STRONG&gt;Go to Application&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 17.28.39.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323877i61DEF73A53C3F81A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 17.28.39.png" alt="Screenshot 2025-10-06 at 17.28.39.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Maintain Certificate Mappings&lt;/STRONG&gt; app should be opened&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 13.56.56.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323878iD40F97D4176DFD17/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 13.56.56.png" alt="Screenshot 2025-10-06 at 13.56.56.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;H2 id="toc-hId-975888546"&gt;Configuration steps in your SAP S/4HANA Cloud Private Edition 2025 system&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;Go to your ABAP system, open the transaction &lt;STRONG&gt;APPLDESTCC&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Select &lt;EM&gt;scenario HTTP - Application Destination &lt;/EM&gt;and click on &lt;STRONG&gt;Execute&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.19.37.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323881i91B18A87610C7552/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.19.37.png" alt="Screenshot 2025-10-07 at 13.19.37.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Next, select &lt;EM&gt;AIC_ADT_HTTP_PROXY&lt;/EM&gt; and open the context menu. Choose &lt;STRONG&gt;Create New Application Destination&lt;/STRONG&gt;. Now, you're asked to enter the details of your application destination.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.20.21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323882i741A6289B0CC9B4D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.20.21.png" alt="Screenshot 2025-10-07 at 13.20.21.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Enter an &lt;STRONG&gt;Application Destination Name&lt;/STRONG&gt; of your choice and select the check mark.&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.21.49.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323886i24AFC5D420577B9A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.21.49.png" alt="Screenshot 2025-10-07 at 13.21.49.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Now, first enter a &lt;STRONG&gt;Description&lt;/STRONG&gt; and select the checkboxes &lt;STRONG&gt;Active&lt;/STRONG&gt; and &lt;STRONG&gt;Default&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.24.31.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323887iF167EBE198EF10A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.24.31.png" alt="Screenshot 2025-10-07 at 13.24.31.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Fill in the information in the &lt;STRONG&gt;Technical Settings&lt;/STRONG&gt; tab:&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Target System Settings: In the Host field, enter &lt;EM&gt;&lt;A href="https://proxy" target="_blank" rel="noopener nofollow noreferrer"&gt;https://proxy&lt;/A&gt;.&amp;lt;your region&amp;gt;.hub.j4a.services.sap.&lt;/EM&gt; As &lt;STRONG&gt;Protocol&lt;/STRONG&gt;, select &lt;STRONG&gt;HTTPS&lt;/STRONG&gt;&lt;EM&gt;.&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;(Optional) HTTP Proxy Options: This information is not mandatory.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt; &lt;EM&gt;The region you enter in &lt;SPAN&gt;&lt;A href="https://proxy" target="_blank" rel="noopener nofollow noreferrer"&gt;https://proxy&lt;/A&gt;.&amp;lt;your&lt;/SPAN&gt; region&amp;gt;.hub.j4a.services.sap must be the same region (not technical key) that you chose for your subaccount, for example "eu10". See &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/regions-and-api-endpoints-for-abap-environment?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Regions and API Endpoints for the ABAP Environment&lt;/A&gt;&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.24.31.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323890iEAC270D856B43D0D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.24.31.png" alt="Screenshot 2025-10-07 at 13.24.31.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Choose the &lt;STRONG&gt;Logon&lt;/STRONG&gt; tab&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;General Settings: Select &lt;STRONG&gt;Connection to External Server&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Logon Procedure: Select &lt;STRONG&gt;Client Certificate&lt;/STRONG&gt; and choose the certificate you wish to use from the dropdown menu&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Save&lt;/STRONG&gt;. You've successfully maintained the connection.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.25.26.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323892i5826C527B8DBAD8C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.25.26.png" alt="Screenshot 2025-10-07 at 13.25.26.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Now, continue in your subaccount in the SAP BTP Cockpit&lt;BR /&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Select the &lt;STRONG&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/STRONG&gt; subscription you have just created (see &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-ai/generative-ai-in-abap-cloud/subscribing-to-joule-for-developers-abap-ai-capabilities?locale=en-US&amp;amp;state=DRAFT&amp;amp;version=ADT_SHIP_Previews" target="_blank" rel="noopener noreferrer"&gt;Subscribing to SAP Joule for Developers, ABAP AI Capabilities&lt;/A&gt;&lt;/SPAN&gt;), or open its details and select &lt;STRONG&gt;Go to Application&lt;/STRONG&gt;. You are forwarded to the &lt;STRONG&gt;Maintain Certificate Mappings&lt;/STRONG&gt; page.&lt;/LI&gt;&lt;LI&gt;In the Certificate Mappings section, select &lt;STRONG&gt;Create&lt;/STRONG&gt; to receive a one-time password (OTP).&lt;/LI&gt;&lt;LI&gt;Copy the OTP.&lt;BR /&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Note&lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt;: the OTP is valid for five minutes. If you need a new one, close the pop-up and click on Create again.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.26.55.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323896iC87A756A333E09AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.26.55.png" alt="Screenshot 2025-10-07 at 13.26.55.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;Go to your corresponding ABAP system and run report &lt;EM&gt;AIC_ADT_PROXY_CERTIFICATE&lt;/EM&gt;. Select &lt;STRONG&gt;Execute&lt;/STRONG&gt;.&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Paste the one-time password that you've copied in the previous step&lt;/LI&gt;&lt;LI&gt;(Optional) If you wish to use a new certificate that you haven't used in step 1, select Use Custom SSL Client PSE ID. Click in the Client PSE ID field and choose the new certificate from the value help. Now, you can go back to step 1 and switch to the new certificate.&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Execute&lt;BR /&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.28.39.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323897i7D16DCB9D4AC4E94/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.28.39.png" alt="Screenshot 2025-10-07 at 13.28.39.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;You've successfully registered your certificate!&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.28.57.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323898i164769C8E47F1AEC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.28.57.png" alt="Screenshot 2025-10-07 at 13.28.57.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;You can now create a new ABAP Project in ADT (using its latest version) and check out SAP Joule for developers, ABAP AI capabilities&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Screenshot 2025-10-07 at 13.43.28.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323900iCE484B1826E38612/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.43.28.png" alt="Screenshot 2025-10-07 at 13.43.28.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-abap-ai-capabilities-for-sap-s-4hana-cloud-private/ba-p/14236954"/>
    <published>2025-10-08T12:44:10.622000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/custom-business-configurations-f4579-controlling-the-visibility-of-bc/ba-p/14247015</id>
    <title>Custom Business Configurations (F4579): Controlling the visibility of BC Objects using authorization</title>
    <updated>2025-10-17T13:28:18.345000+02:00</updated>
    <author>
      <name>patrick_winkler</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/729521</uri>
    </author>
    <content>&lt;H1 id="toc-hId-887480474" id="toc-hId-1633804387"&gt;Introduction&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;The&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/custom-business-configurations-app" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;Custom Business Configurations&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;(CUBCO) app serves as an entry point to the&amp;nbsp;&lt;/SPAN&gt;&lt;A class="" title="https://help.sap.com/docs/sap-btp-abap-environment/abap-environment/business-configuration-maintenance-object?version=Cloud" href="https://help.sap.com/docs/sap-btp-abap-environment/abap-environment/business-configuration-maintenance-object?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Business Configuration Maintenance Object&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;provided by custom applications or partners.&lt;BR /&gt;Depending on the respective role the user should only be able to edit certain business configurations.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This blog is relevant for&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+Public+Edition/pd-p/08e2a51b-1ce5-4367-8b33-4ae7e8b702e0" target="_blank"&gt;SAP S/4HANA Cloud Public Edition&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+Private+Edition/pd-p/5c26062a-9855-4f39-8205-272938b6882f" target="_blank"&gt;SAP S/4HANA Cloud Private Edition&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+BTP+ABAP+environment/pd-p/73555000100800001164" target="_blank"&gt;SAP BTP ABAP environment&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Further reading:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/tag/business%20configuration%20maintenance%20object/tg-p/board-id/technology-blog-sap" target="_blank"&gt;Related blog posts&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Learn how you can use&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/products/business-technology-platform/development/abap?url_id=text-sapcommunity-prdteng-ABAP" target="_blank" rel="noopener noreferrer"&gt;ABAP technology&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to develop innovative applications and business solutions across SAP’s portfolio on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/products/business-technology-platform/development/abap" target="_blank" rel="noopener noreferrer"&gt;SAP Learning Site&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1437290882"&gt;Basic Concept&lt;/H1&gt;&lt;P&gt;An OData V4 service is assigned to each business configuration object (SMBC). The corresponding service binding is based on a RAP BO.&lt;BR /&gt;The list of available business configuration objects in the CUBCO app is restricted to those where the user has the start authorization for the service binding (authorization object S_START,&amp;nbsp; see access control object I_SMBC_CONFIGURATION_TP).&amp;nbsp; The application-specific authorizations are not checked until an SMBC object has been selected. That is, authorization control implemented in the RAP BO. Normally, the authorization object S_TABU_NAM is used, but you can also &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-implement-additional-authorization-objects-for-the-rap-bo-of-a/ba-p/13710852" target="_blank"&gt;use any other authorization object&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Therefore, you can create business roles in which only a subset of all business configuration objects can be used.&lt;/P&gt;&lt;H1 id="toc-hId-1240777377"&gt;SAP BTP ABAP environment, SAP S/4HANA Cloud Public Edition&lt;/H1&gt;&lt;P&gt;IAM apps are the smallest building block for creating business roles. For a business configuration object, you &lt;A href="https://developers.sap.com/tutorials/abap-environment-authorization-control.html" target="_blank" rel="noopener noreferrer"&gt;assign&lt;/A&gt; the OData service binding and the application relevant authorization objects to it. You then create a business catalog to collect IAM apps and finally assign business catalogs to business roles.&lt;/P&gt;&lt;P&gt;Example:&lt;BR /&gt;You have four SMBC objects A, B, C, D in the system and a different OData service binding for each SMBC object. The authorization object S_TABU_NAM is used in all RAP BOs. You create four IAM apps A, B, C, D, each containing the OData service of a different SMBC object and the authorization object S_TABU_NAM. You create a business catalog BC1 that contains the IAM apps A, B, and a business catalog BC2 that contains the IAM apps B, C, D.&lt;/P&gt;&lt;P&gt;You assign a business role containing the business catalog BC1 to a user. This user can work with the SMBC objects A, B. The user cannot see or edit the SMBC objects C and D.&lt;BR /&gt;You assign a business role containing the business catalog BC2 to a user. This user can work with the SMBC objects B, C, D. The user cannot see or work with the SMBC object A.&lt;/P&gt;&lt;H1 id="toc-hId-1044263872"&gt;SAP S/4HANA Private Cloud Edition&lt;/H1&gt;&lt;P&gt;IAM apps are not available. You &lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/b5670aaaa2364a29935f40b16499972d/61159c4dc45b45619b46b4620615c357.html?version=202510.000#provide-authorizations-for-a-business-configuration" target="_blank" rel="noopener noreferrer"&gt;add the application relevant authorization&lt;/A&gt; objects to the authorization default of the OData service assigned to the SMBC object. In the PFCG role you then add the authorization default.&lt;/P&gt;&lt;P&gt;Example:&lt;BR /&gt;You have four SMBC objects A, B, C, D in the system&amp;nbsp;and a different OData service binding for each SMBC object. You assign a PFCG role containing the authorization default for the OData services of SMBC objects A, B to a user. This user can work with the SMBC objects A, B. The user cannot see or edit the SMBC objects C and D.&lt;/P&gt;&lt;P&gt;Note that roles that contain the Custom Business Configurations Fiori app do not automatically derive the required authorization for the SMBC objects. You need to add the authorization default of the OData service manually.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/custom-business-configurations-f4579-controlling-the-visibility-of-bc/ba-p/14247015"/>
    <published>2025-10-17T13:28:18.345000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/prepare-for-2602-service-key-and-service-binding-requests-will-change-to/ba-p/14238545</id>
    <title>Prepare for 2602: Service Key and Service Binding Requests will change to asynchronous processing</title>
    <updated>2025-10-21T12:06:25.097000+02:00</updated>
    <author>
      <name>StefanHagen</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/188992</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1632915555"&gt;Service Key and Service Binding Requests will change to asynchronous processing&lt;/H1&gt;&lt;P&gt;&lt;STRONG&gt;Starting with release 2602&lt;/STRONG&gt;, the service broker for the SAP BTP ABAP Environment will switch to asynchronous processing for service binding and service key creation requests. This change will impact client applications using interfaces like the CF CLI and CAPI.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Users of these tools/APIs need to modify their programs or scripts to prepare for this change!&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1565484769"&gt;Affected Interfaces&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Cloud Foundry Command Line Interface (CF CLI)&lt;/LI&gt;&lt;LI&gt;Cloud Foundry Application Programming Interface (CAPI)&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1368971264"&gt;Read this document, if you use these calls&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;cf create-service-key&lt;/LI&gt;&lt;LI&gt;cf delete-service-key&lt;/LI&gt;&lt;LI&gt;cf bind-service&lt;/LI&gt;&lt;LI&gt;cf unbind-service&lt;/LI&gt;&lt;LI&gt;/v3/service_credential_bindings/&amp;lt;service binding guid&amp;gt; Endpoint (&lt;A href="https://v3-apidocs.cloudfoundry.org/version/3.194.0/index.html#service-credential-binding" target="_self" rel="nofollow noopener noreferrer"&gt;CF Service Credential Binding API&lt;/A&gt;)&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1172457759"&gt;Background Information&lt;/H2&gt;&lt;P&gt;The SAP BTP ABAP Environment service broker implements the &lt;A href="https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#api-overview" target="_self" rel="nofollow noopener noreferrer"&gt;Open Service Broker API&lt;/A&gt;. All service offerings of this service allow to create and delete service bindings or service keys for existing SAP BTP ABAP Environment service instances. The service bindings / keys currently supported are:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/creating-service-key-optional" target="_self" rel="noopener noreferrer"&gt;Service Keys of the type oAuth for authentication on the ABAP System&lt;/A&gt; (e.g. when using the ABAP development tools)&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-integration-connectivity/create-communication-arrangement-for-inbound-communication-with-service-key-type-basic?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Service Keys of the type basic auth for creating Communication Arrangements&amp;nbsp;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/sap-btp-abap-environment/abap-environment/integration-with-approuter" target="_self" rel="noopener noreferrer"&gt;Service Bindings for the Integration with the Approuter&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If the service broker receives a request to create (or delete) a service key or binding, it can fulfill this request synchronously or asynchronously. The Open Service Broker API allows the service broker to define the default behavior.&lt;/P&gt;&lt;P&gt;Up to now, these requests were processed synchronously per default.&lt;/P&gt;&lt;P&gt;Over time, it turned out that there are a number of situations where tasks couldn't finish within the synchronous processing timeout. Therefore we decided to &lt;STRONG&gt;change the future default to asynchronous&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Changing the default means, that &lt;STRONG&gt;client implementations need to be adapted before Release 2602&lt;/STRONG&gt;: Make sure that you at least use version 8 of the cf cli or version 3 of the&amp;nbsp;CF API to support asynchronous responses and that your implementation retrieves the error information as described below in detail.&lt;/P&gt;&lt;H2 id="toc-hId-975944254"&gt;Behavior up to Release 2602&lt;/H2&gt;&lt;P&gt;Service binding create or delete requests are been processed &lt;STRONG&gt;synchronously&lt;/STRONG&gt;.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If the call returns successfully, it means the operation was performed successfully.&lt;/LI&gt;&lt;LI&gt;If the call returns a failure, the error contains detailed information about what happened.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-779430749"&gt;Behavior starting from Release 2602&lt;/H2&gt;&lt;P&gt;Service binding create or delete requests are been processed &lt;STRONG&gt;asynchronously&lt;/STRONG&gt;.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If the call returns successfully, it means the request has been successfully planned for execution in background.&lt;/LI&gt;&lt;LI&gt;If the call returns a failure, it means that the request could not be planned for execution.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-582917244"&gt;General adaptation pattern&lt;/H2&gt;&lt;P&gt;Make sure your code can work with the asynchronous execution of service binding create/delete operations.&lt;/P&gt;&lt;P&gt;Functionality that can help:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;You can use the "wait" functionality to instruct the call to block until the the operation has been finished. (only cf cli).&lt;/LI&gt;&lt;LI&gt;You can read the state of the service binding for information about the processing progress and error details.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All our affected services have set&amp;nbsp;the "bindings_retrievable" attribute to "true", which allows the retrieval of the state information.&lt;/P&gt;&lt;P&gt;Do not rely on return values and error messages of the request call. Instead query the state information either in a loop, or after the request call with "wait".&lt;/P&gt;&lt;H2 id="toc-hId-386403739"&gt;Specific adaptation recommendations per Interface&lt;/H2&gt;&lt;P&gt;This chapter outlines only the relevant parts. Necessary, but unaffected parts (request handling, authorization handling etc.) have been left out.&lt;/P&gt;&lt;H3 id="toc-hId-318972953"&gt;Implementation recommendation (Cloud Foundry CLI)&lt;/H3&gt;&lt;P&gt;For a detailed documentation of the Cloud Foundry CLI, see &lt;A href="https://cli.cloudfoundry.org/en-US/v8/" target="_self" rel="nofollow noopener noreferrer"&gt;https://cli.cloudfoundry.org/en-US/v8/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Prerequisite: You should use cf cli version &amp;gt;= 8 (&lt;A href="https://docs.cloudfoundry.org/cf-cli/v8.html" target="_self" rel="nofollow noopener noreferrer"&gt;https://docs.cloudfoundry.org/cf-cli/v8.html&lt;/A&gt;&amp;nbsp;), which provides the "--wait" option to service binding operations.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Note: cf cli version &amp;gt;= 8 also results in the automatically inclusion of the query parameter "accepts_incomplete=true" in modifying requests to the service broker.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Use the "--wait" option in any of your modifying operations.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf create-service-key &amp;lt;&amp;lt;service instance name&amp;gt;&amp;gt; &amp;lt;&amp;lt;service binding name&amp;gt;&amp;gt; -c &amp;lt;&amp;lt;parameters json object&amp;gt;&amp;gt; --wait
cf delete-service-key &amp;lt;&amp;lt;service instance name&amp;gt;&amp;gt; &amp;lt;&amp;lt;service binding name&amp;gt;&amp;gt; --wait&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If you need the detailed error information in case of FAILED operations, do not rely on the cli return value.&lt;/P&gt;&lt;P&gt;Determine the service binding guid:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf service-key &amp;lt;&amp;lt;service instance name&amp;gt;&amp;gt; &amp;lt;&amp;lt;service binding name&amp;gt;&amp;gt; --guid&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;Use the service binding guid to read the service binding details:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf curl /v3/service_credential_bindings/&amp;lt;&amp;lt;service binding guid&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The result data (in json format) should contain the property "last_operation" with a value being another object in json format&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;in case of a FAILED response on the service binding request&lt;UL&gt;&lt;LI&gt;the property "state" of the object "last_operation" should be "failed"&lt;/LI&gt;&lt;LI&gt;the property "description" of the object "last_operation" should always contain a more detailed error message raised by the service broker.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;in case of a OK response the service binding creation request&lt;UL&gt;&lt;LI&gt;the property "state" of the object "last_operation" should be "succeeded"&lt;/LI&gt;&lt;LI&gt;evaluate the detailed data of the service binding for more information&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-122459448"&gt;Consequences for not following the recommendation (Cloud Foundry CLI)&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Wrong assumption on "OK":&lt;BR /&gt;The CLI call will immediately return "OK". However, this will no longer mean the request has been processed. It now means the request has been accepted and will be processed (in background). From there on, your client implementation may continue with the false assumption of success. The request is not yet finished and can still fail.&lt;/LI&gt;&lt;LI&gt;Wrong assumption on "FAILED":&lt;BR /&gt;The response of the cli may not contain a detailed error message. It will return information about the process scheduler, but not the process itself.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;EM&gt;Note: The "--wait" parameter can make the request call block until the process is finished, but it does not change the meaning of the "OK" or "FAILED" error messages.&lt;/EM&gt;&lt;/P&gt;&lt;H3 id="toc-hId--149285426"&gt;Implementation recommendation (Cloud Foundry API)&lt;/H3&gt;&lt;P&gt;For a detailed documentation of the CAPI, please see &lt;A href="https://v3-apidocs.cloudfoundry.org/version/3.194.0/index.html#service-credential-binding" target="_blank" rel="noopener nofollow noreferrer"&gt;https://v3-apidocs.cloudfoundry.org/version/3.194.0/index.html#service-credential-binding&lt;/A&gt;&lt;/P&gt;&lt;P&gt;The request examples used in this chapter are based on curl syntax and they do not contain all necessary parameters/options for a successful https request (the examples also only refer to service bindings of binding type "key" and parameter type "basic").&lt;/P&gt;&lt;P&gt;Prerequisite: You should use a CAPI version &amp;gt;= 3.&lt;/P&gt;&lt;P&gt;Note: CAPI version &amp;gt;= 3 also leads to the automatic inclusion of the query parameter "accepts_incomplete=true" in modifying requests to the service broker.&lt;/P&gt;&lt;P&gt;If you create / delete service bindings with requests like these:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl &amp;lt;&amp;lt;server part of url&amp;gt;&amp;gt;/v3/service_credential_bindings -X POST -H "Content-type: application/json" -d '{"type":"key","name":"&amp;lt;&amp;lt;service binding name&amp;gt;&amp;gt;","relationships":{"service_instance":{"data":{"guid":"&amp;lt;&amp;lt;service instance guid&amp;gt;&amp;gt;"}}},"parameters":{"type
":"basic","scenario_id":"&amp;lt;&amp;lt;specific scenario id&amp;gt;&amp;gt;"}}'
curl &amp;lt;&amp;lt;server part of url&amp;gt;&amp;gt;/v3/service_credential_bindings/&amp;lt;&amp;lt;service binding guid&amp;gt;&amp;gt; -X DELETE -H "Content-type: application/json"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The server will respond with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;HTTP Status Code 202 (Accepted)&lt;BR /&gt;which means the service binding change request has been successfully created&lt;/LI&gt;&lt;LI&gt;a "Location" header which contains a url (including the id) to read data from the scheduled request operation from the service broker&lt;/LI&gt;&lt;LI&gt;In the error case:&amp;nbsp;a response object (in json format) which contains the property "errors" which may contain multiple error messages&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In order to correctly read the status of your request, evaluate the job data:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Determine the job guid by evaluating the url contained in the "Location" header or use the url directly&lt;/LI&gt;&lt;LI&gt;Use the job guid to recursively read the job data until you find a final state (include a meaningful waiting time)&lt;BR /&gt;Example Request:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf curl /v3/jobs/&amp;lt;&amp;lt;job guid&amp;gt;&amp;gt; -H "Content-type: application/json"​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;Then evaluate the property "state" in the object of the json format response:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;in case the property "state" has the value "PROCESSING" or "POLLING"&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;continue the polling with another read of the job data&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;in case the property "state" has the value "COMPLETE"&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;stop the polling and continue by reading the data for the service binding, if wanted&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;in case the property "state" has the value "FAILED"&lt;UL&gt;&lt;LI&gt;Do not rely on the objects in the property "errors" in the response object. These won't contain the full error information about the request after 2602.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We recommend to handle the "FAILED" state in the following way:&lt;BR /&gt;Read the data for the service binding to ensure a detailed error message for the creation (or deletion).&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Determine the service binding guid from the job data by evaluating the url contained in the property "service_credential_binding" or use the url directly&lt;/LI&gt;&lt;LI&gt;Use the service binding guid to read the service binding details&lt;BR /&gt;Example request:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl /v3/service_credential_bindings/&amp;lt;&amp;lt;service binding guid&amp;gt;&amp;gt; -H "Content-type: application/json"​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;the response data (in json format) should contain the property "last_operation" with a value being another object in json format&lt;UL&gt;&lt;LI&gt;the property "state" of the object "last_operation" should be "failed"&lt;/LI&gt;&lt;LI&gt;the property "description" of the object "last_operation" should always contain a more detailed error message raised by the service broker.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In case of non FAILED states, the response contains:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;the property "state" of the object "last_operation" should be "succeeded"&lt;/LI&gt;&lt;LI&gt;evaluate the detailed data of the service binding, if wanted&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--345798931"&gt;Consequences for not following the recommendation (Cloud Foundry API)&lt;/H3&gt;&lt;P&gt;In modifying requests (POST or DELETE), the server responds with an “OK” (HTTP status code 202 - Accepted) when the respective custom resource (AbapServiceBinding) could be created (or deletion triggered) in the underlying kubernetes cluster. This does not reflect the true state (succeeded, failed, processing) of the service binding. If you do not follow our recommendation to implement a polling mechanism, your implementation would assume, the service binding was successful, when it actually still in progress, or even failed.&lt;/P&gt;&lt;P&gt;We hope this blog post explains the change well and gives enough examples for you to adapt your code.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/prepare-for-2602-service-key-and-service-binding-requests-will-change-to/ba-p/14238545"/>
    <published>2025-10-21T12:06:25.097000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/automatic-retry-of-application-jobs-in-abap-in-cloud/ba-p/14249591</id>
    <title>Automatic retry of Application Jobs in ABAP in Cloud</title>
    <updated>2025-10-22T08:12:39.185000+02:00</updated>
    <author>
      <name>natanael1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1557162</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633869018"&gt;Introduction&lt;/H1&gt;&lt;P&gt;When moving from classic ABAP to ABAP in Cloud, one of the most common painpoints of the developers is the fact that they lose many familiar tools and options they had in the non-cloud systems. One of these tools are classical Batch Jobs, they have been replaced with Application Jobs in ABAP in Cloud, about this and some other issue&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/404361"&gt;@octavian_savu&lt;/a&gt;&amp;nbsp;has a very good &lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/abap-cloud-application-jobs-overcoming-key-challenges/ba-p/13929058" target="_self"&gt;blog post&lt;/A&gt;&amp;nbsp;where he explains some common challenges with Application Jobs in ABAP in Cloud.&lt;/P&gt;&lt;P&gt;In my case, we had multiple nightly Application Jobs that were occasionally failing &lt;STRONG&gt;due to network stability&lt;/STRONG&gt; or &lt;STRONG&gt;downtime&lt;/STRONG&gt;, and many of these failures were&lt;STRONG&gt; "fixable" with a simple retry&lt;/STRONG&gt;, however without a 24/7 support we could not make sure that these jobs were retried when they failed. And this is a common fallacy of the &lt;STRONG&gt;&lt;A href="https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing" target="_self" rel="nofollow noopener noreferrer"&gt;"The Eight Fallacies of Distributed Computing"&lt;/A&gt;, &lt;/STRONG&gt;specifically "&lt;STRONG&gt;The network is reliable"&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;My plan was to build a robust retry framework for Application Jobs that will overcome these type of transient issues. I was very much inspired by the Phoenix bird who's rising from the ashes, so my goal was to make sure that the Application Jobs can rise from the ashes as well. The full source code of this framework can be found in &lt;A href="https://github.com/legonmarian/abap-btp-phoenix-framework" target="_self" rel="nofollow noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;&lt;H1 id="toc-hId-1437355513"&gt;Problem Statement&lt;/H1&gt;&lt;P&gt;In classical process chains(TCODE: RSPC), you are given the opportunity of configuring an automatic retry for a certain Job step in case of failure.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-21 at 14.18.54.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330232iAE354CF85EF15A3A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-10-21 at 14.18.54.png" alt="Screenshot 2025-10-21 at 14.18.54.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;However in ABAP in Cloud you don't have such options unfortunately. So there's a gap in functionality that we'l need to address somehow. Why do we need to address it?&amp;nbsp;&lt;BR /&gt;That's simple, and I will give you an &lt;STRONG&gt;example&lt;/STRONG&gt; for that:&lt;/P&gt;&lt;H2 id="toc-hId-1369924727"&gt;Example&lt;/H2&gt;&lt;P&gt;Let's assume you somehow decided to implement the &lt;STRONG&gt;MRP&lt;/STRONG&gt;(or any other process, it doesn't matter)&amp;nbsp;runs in Cloud, you have your development / support teams that sits in Berlin, the working day is from 07:00 - 15:00 UTC. And you also have 2 factories, one in Warsaw(work day 07:00 - 15:00 UTC) and one in Shanghai(work day 01:00 - 09:00 UTC).&lt;BR /&gt;At both factories you also have some production planners that need the data from the MRP run in order to be able to work, if the data is not there, their time is wasted.&amp;nbsp;&lt;BR /&gt;Let's say you have one MRP run per each factory and it takes 1 hour to complete, and you must run it not sooner than 2 hours before the factory opens, otherwise you will miss some important orders.&lt;BR /&gt;Therefore you will have the next schedule:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Warsaw MRP -&amp;gt; 05:00 - 06:00&lt;/LI&gt;&lt;LI&gt;Shanghai MRP -&amp;gt; 23:00 - 00:00&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;And let's assume a theoretical scenario when both of these Jobs have failed.&amp;nbsp;The support team starts their work at ~07:00, this is when they restart the job, and at ~08:00 the job is completed.&amp;nbsp;How much time did the production planners lose?&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Warsaw - ~1-2 hours which is not that much, but still unpleasant&lt;/LI&gt;&lt;LI&gt;Shanghai - ~7-8 hours which is almost a full working day, completely unacceptable&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1044328503"&gt;Design goal&lt;/H1&gt;&lt;P&gt;The ultimate goal is making sure that the system is able to "heal" itself and try again in case of failure. In order to translate this into ABAP code we will need a framework with the next requirements:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Automatically retries in case of failure&lt;/LI&gt;&lt;LI&gt;Has a configurable timeout between the retries to allow external systems to recover&lt;/LI&gt;&lt;LI&gt;Follows SOLID principles&lt;/LI&gt;&lt;LI&gt;Can be fitted into existing jobs with minimal refactoring&lt;/LI&gt;&lt;LI&gt;The class should be able to control the flow of the framework if needed.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In order to achieve this behavior I will introduce the Phoenix Framework. The idea behind of the phoenix framework is to introduce a thin architectural layer on top of the standard ABAP APJ(Application Jobs) runtime. The goal of this layer is to separate the technical orchestration of retires from the actual business logic of the Application Job, this way each job stays focused on what it needs to do, while the framework handles how it should react when something goes wrong.&amp;nbsp;&lt;/P&gt;&lt;P&gt;This behavior will be achieved by introducing a two-tier class structure, a pretty common OOP design.&amp;nbsp;In general in most of the code we prefer composition over inheritance, but in this specific use case inheritance will be more suitable technique.&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Base Class&lt;/STRONG&gt; (&lt;CODE&gt;zcl_phoenix_base&lt;/CODE&gt;) - Handles job lifecycle, and implements APJ contracts, plus it provides the retry engine. It will implement&amp;nbsp;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;&amp;nbsp;and the encapsulated interfaces inside it.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Child Class&lt;/STRONG&gt; (f.ex.&amp;nbsp;&lt;CODE&gt;zcl_phoenix_job_mrp&lt;/CODE&gt;) - Inherits from&amp;nbsp;&lt;CODE&gt;zcl_phoenix_base&lt;/CODE&gt;, and will implement the business logic through hooks enforced by the interface.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;besides that we will create a facade for this framework&amp;nbsp;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;, this interface will be serving multiple purposes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Central point of keeping generic types specific for application jobs&lt;/LI&gt;&lt;LI&gt;Bundles multiple interfaces together&lt;/LI&gt;&lt;LI&gt;Defines an implementation contract for the child class.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-847814998"&gt;Implementation&lt;/H1&gt;&lt;H3 id="toc-hId-909466931"&gt;Interface&lt;/H3&gt;&lt;P&gt;I will first provide the source code, and below will be the explanation&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;"! Phoenix framework interface
INTERFACE zif_phoenix PUBLIC.

  TYPES:
    BEGIN OF ty_job_params_range,
      sign   TYPE c LENGTH 1,
      option TYPE c LENGTH 2,
      low    TYPE c LENGTH 50,
      high   TYPE c LENGTH 50,
    END OF ty_job_params_range.

  TYPES: tt_job_params_range TYPE STANDARD TABLE OF ty_job_params_range WITH EMPTY KEY.

  INTERFACES if_apj_dt_defaults.
  INTERFACES if_apj_rt_run.
  INTERFACES if_oo_adt_classrun.

  "! Run business logic &amp;lt;br&amp;gt;
  "! Implements the job-specific business logic. The framework invokes this
  "! once per attempt. If an exception derived from cx_root is raised, the
  "! framework logs it and may retry according to the configured retry settings.
  "! Keep this method idempotent or self-compensating so it remains safe under retries.
  "! @raising cx_root | Propagate any business error to signal failure to the framework.
  METHODS process RAISING cx_root.

  "! Set default attributes &amp;lt;br&amp;gt;
  "! Populate instance attributes that serve as defaults for scheduling and
  "! execution
  "! The base class calls this from if_apj_dt_defaults~fill_attribute_defaults
  "! so implementations do not depend on APJ types.
  METHODS fill_attribute_defaults.


  "! Get the delay before the next run &amp;lt;br/&amp;gt;
  "! @parameter retry_count | The retry count
  "! @parameter delay | How many seconds to wait before retrying the job
  METHODS get_next_delay IMPORTING retry_count TYPE i
                         RETURNING VALUE(delay) TYPE i.

ENDINTERFACE.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;So why do we implement the&amp;nbsp;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt; interface? Simply it is just encapsulating the structure of our future Application Jobs.&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;SPAN&gt;The type &lt;/SPAN&gt;&lt;SPAN&gt;&lt;SPAN&gt;&lt;CODE&gt;ty_job_params_range&lt;/CODE&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;is just made available in here for job parameters, as they will follow this shape if we want to be able to select multiple options, for more on this check &lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/example-implementation-using-interfaces-if-apj-dt-exec-object-and-if-apj-rt-exec-object?locale=en-US" target="_self" rel="noopener noreferrer"&gt;SAP Docs&lt;/A&gt;.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;SPAN&gt;And then we implement these 3 interfaces: &lt;/SPAN&gt;&lt;SPAN&gt;&lt;CODE&gt;if_apj_rt_run&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt;,&amp;nbsp;&lt;CODE&gt;if_apj_dt_defaults&lt;/CODE&gt;,&amp;nbsp;&lt;CODE&gt;if_oo_adt_classrun&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt;, but why do we need them?&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;So let's take them one by one:&lt;/SPAN&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;CODE&gt;if_apj_rt_run&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;- this is the default interface an application job should implement, without this interface a catalog cannot be created therefore we wouldn't be able to execute it as an application job, inside the &lt;/SPAN&gt;&lt;SPAN&gt;&lt;CODE&gt;if_apj_rt_run~main&lt;/CODE&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;you should encapsulate your business logic. By having it inside&amp;nbsp;&amp;nbsp;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt; we are basically saying that all the classes that implement &lt;/SPAN&gt;&lt;SPAN&gt;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt;(or spoiler alert inherits from a class that implements it) will be "schedulable" as a batch job.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;CODE&gt;if_apj_dt_defaults&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;- this is the interface where you define default values for the parameters passed ot the application job, you can either provide them in here, in the class constructor or as default values of the public attributes of the class.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;CODE&gt;if_oo_adt_classrun&lt;/CODE&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;- a scheduled application job cannot be debugged, therefore we will introduce this interface for easier debugging of the business logic&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-712953426"&gt;&lt;SPAN&gt;Base Class Definition&lt;/SPAN&gt;&lt;/H3&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_phoenix_base DEFINITION
  PUBLIC
  ABSTRACT
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES zif_phoenix.

    "! &amp;lt;p class="shorttext synchronized" lang="en"&amp;gt;Retry Enabled&amp;lt;/p&amp;gt;
    DATA retry_enabled TYPE zde_phoenix_retry_enabled VALUE 'X'.

    "! &amp;lt;p class="shorttext synchronized" lang="en"&amp;gt;Number of retries&amp;lt;/p&amp;gt;
    DATA retry_count TYPE zde_phoenix_retries VALUE 2.

    "! &amp;lt;p class="shorttext synchronized" lang="en"&amp;gt;Cooldown time(s)&amp;lt;/p&amp;gt;
    DATA sleep_value_s TYPE zde_phoenix_sleep VALUE 120.

  PROTECTED SECTION.
    DATA logger            TYPE REF TO zif_logger.

    "! Log informational message &amp;lt;br&amp;gt;
    "! Writes an informational entry to the application log (BALI) for the current attempt.
    "! Uses severity if_bali_constants=&amp;gt;c_severity_information.
    "! @parameter message | Text to persist in the application log.
    "! @raising   cx_bali_runtime | Thrown if the logger is not available or the log write fails.
    METHODS log_info
      IMPORTING !message TYPE cl_bali_free_text_setter=&amp;gt;ty_text
      RAISING   cx_bali_runtime.

    "! Log error message &amp;lt;br&amp;gt;
    "! Writes an error entry to the application log (BALI) for the current attempt.
    "! Uses severity if_bali_constants=&amp;gt;c_severity_error.
    "! @parameter message | Text to persist in the application log.
    "! @raising   cx_bali_runtime | Thrown if the logger is not available or the log write fails.
    METHODS log_error
      IMPORTING !message TYPE cl_bali_free_text_setter=&amp;gt;ty_text
      RAISING   cx_bali_runtime.

    "! Log warning message &amp;lt;br&amp;gt;
    "! Writes a warning entry to the application log (BALI) for the current attempt.
    "! Uses severity if_bali_constants=&amp;gt;c_severity_warning.
    "! Requires an initialized logger (created via create_logger( )).
    "! @parameter message | Text to persist in the application log.
    "! @raising   cx_bali_runtime | Thrown if the logger is not available or the log write fails.
    METHODS log_warning
      IMPORTING !message TYPE cl_bali_free_text_setter=&amp;gt;ty_text
      RAISING   cx_bali_runtime.

    "! Log success/status message &amp;lt;br&amp;gt;
    "! Writes a success entry to the application log (BALI) for the current attempt.
    "! Uses severity if_bali_constants=&amp;gt;c_severity_status.
    "! @parameter message | Text to persist in the application log.
    "! @raising   cx_bali_runtime | Thrown if the logger is not available or the log write fails.
    METHODS log_success
      IMPORTING !message TYPE cl_bali_free_text_setter=&amp;gt;ty_text
      RAISING   cx_bali_runtime.


  PRIVATE SECTION.
    CONSTANTS log_object_id            TYPE cl_bali_header_setter=&amp;gt;ty_object    VALUE 'ZLOG_PHOENIX'.
    CONSTANTS sublog_id_submission_job TYPE cl_bali_header_setter=&amp;gt;ty_subobject VALUE 'PHOENIX_LOG'.

    METHODS notify_about_failure.
    METHODS notify_teams.
    METHODS create_logger RAISING cx_bali_runtime
                                  cx_uuid_error.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-645522640"&gt;PUBLIC SECTION&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;We will of course implement the&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;interface that we defined before.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;And we will also define 3 public attributes&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;retry_enabled&lt;/CODE&gt;&lt;SPAN&gt;,&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;retry_count&lt;/CODE&gt;&lt;SPAN&gt;,&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;sleep_value_s&lt;/CODE&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;These public attributes will be visible in the Job Scheduling screen so the person who schedules the job can control if he wants to have the retry functionality enabled, how many time the framework will retry the job, and how much time to wait between the retries.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-21 at 16.48.53.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330306i5C61E0F2B2D53A89/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-21 at 16.48.53.png" alt="Screenshot 2025-10-21 at 16.48.53.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-449009135"&gt;PROTECTED SECTION&lt;/H4&gt;&lt;P&gt;In here we define the PROTECTED area of the class, and if you don't remember what it is, it's the method / types that's not available to other classes but it's available to the children classes(that implement this base class)&lt;BR /&gt;As protected we have one global object called&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;logger&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and I left it as protected on purpose, if any of the child classes would like to define some custom logging methods, they can access the logger object and define their own methods if the provided methods are not meeting the needs.&lt;/P&gt;&lt;P&gt;And we have 4 more logging methods that will log a message with a specific importance(info, success, warning, error), the consumer is encoruanegd to use these methods, and use the logger obejct itself only when these are not sufficient.&lt;/P&gt;&lt;P&gt;Using this logger and logging methods the consumer will be able to log to the Application Job Log that we see afterwards in the Fiori launchpad&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="natanael1_0-1761058386212.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330307iDBA940A45666AF9C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="natanael1_0-1761058386212.png" alt="natanael1_0-1761058386212.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-252495630"&gt;PRIVATE SECTION&lt;/H4&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;In the private section we defined some constants that we will use for logging into the application job log and also 2 methods for sending external notifications on a job failure, in our case we have a generic method that notifies about a failure, and this method just calls another method that will send a teams notification in case of failure.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;H3 id="toc-hId--148331963"&gt;Implementation&lt;/H3&gt;&lt;P&gt;Now we have this base class, and the purpose of it, is that multiple child classes will implement this base class, and each child class will be a "schedulable" job, but we need a mechanism of how we can make this connection between the child class and base class, and how the child class will indicate to the base class what business logic to run.&lt;BR /&gt;We will do that via the same interface that we created:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;, therefore we define 3 more methods&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;CODE&gt;get_next_delay&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;method will take as a parameter the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;retry_count&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and will return back the cooldown time the framework will need to wait before the next retry, this method will have a default implementation that simply returns the static input parameter of the job&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;sleep_value_s&lt;/CODE&gt;, this method shall not be redefined by the child class unless they want some custom cooldown functionality like exponential backoff&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;fill_attribute_defaults&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;method, this is just a wrapper for the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_dt_defaults~fill_attribute_defaults&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;method, and one could argue why do we need a wrapper why can't we just implement&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_dt_defaults~fill_attribute_defaults&lt;/CODE&gt;, we could, but we want to put an abstraction layer on top of it, and keep this concern into the base class, so the child class implements only the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and not any other interfaces like&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_dt_defaults&lt;/CODE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;process&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;method, probably the most important method, so the child class must redefine the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;process&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;method, and implement it's business logic inside it, so assuming that you're refactoring a class that used before&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_rt_run&lt;/CODE&gt;, you'd rename&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_rt_run~main&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;into&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix~process&lt;/CODE&gt;, the base class will afterwards call the process method again and again in case of retries&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Therefore we already have a default implementation for some methods:&lt;/P&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_dt_defaults~fill_attribute_defaults.
  " ------------------------------------------------------------------------
  " STANDARD IMPLEMENTATION
  " MUST NOT BE REDEFINED, INSTEAD USE EXTENSION POINT:
  "   zif_phoenix~fill_attribute_defaults( ).
  "
  " This is just calling the wrapper class zif_phoenix~fill_attribute_defaults( ).
  " ------------------------------------------------------------------------
  zif_phoenix~fill_attribute_defaults( ).
ENDMETHOD.

METHOD zif_phoenix~get_next_delay.
  " ------------------------------------------------------------------------
  " STANDARD IMPLEMENTATION
  " CAN BE REDEFINED BY CHILD CLASS IF NEEDED(OPTIONAL)
  "
  " By default it will return the configured sleep_value_s
  " This is an extension point if the job needs a custom backoff f.ex. exponential backoff
  " the class could implement it something like this:
  "   RETURN sleep_value_s * ( 2 ** ( retry_count - 1 ) ).
  " ------------------------------------------------------------------------
  RETURN sleep_value_s.
ENDMETHOD.

METHOD zif_phoenix~fill_attribute_defaults.
  " ------------------------------------------------------------------------
  " CUSTOM BUSINESS IMPLEMENTATION
  " CAN BE REDEFINED BY CHILD CLASS IF NEEDED(OPTIONAL)
  " WRAPPER FUNCTION FOR if_apj_dt_defaults~fill_attribute_defaults
  " Q: Why do we need zif_phoenix~fill_attribute_defaults if the
  "    child class can implement if_apj_dt_defaults~fill_attribute_defaults
  " A: We don't want the child class to implement other interfaces other
  "    than zif_phoenix, this way we abstractize the child class from
  "    knowing the inside implementation of the framework
  " ------------------------------------------------------------------------
ENDMETHOD.


METHOD zif_phoenix~process.
  " ------------------------------------------------------------------------
  " CUSTOM BUSINESS IMPLEMENTATION
  " MUST BE REDEFINED BY CHILD CLASS
  " ------------------------------------------------------------------------
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;I will skip over the implementation of the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;create_logger&lt;/CODE&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;log_info&lt;/CODE&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;log_error&lt;/CODE&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;log_success&lt;/CODE&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;log_warning&lt;/CODE&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;notify_about_failure&lt;/CODE&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;notify_teams&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;methods because they're less relevant for this example.&lt;/P&gt;&lt;P&gt;Given that we'd like to run everything inside the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_rt_run~execute&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;when we are running the class inside ADT, this will be the implementation of the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_oo_adt_classrun~main&lt;/CODE&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_oo_adt_classrun~main.
  " ------------------------------------------------------------------------
  " STANDARD IMPLEMENTATION
  " NO NEED FOR REDEFENITION, BUT IT IS OKAY TO
  " if_oo_adt_classrun~main MUST NOT BE USED IN PRODUCTIVE SCENARIOS
  " ------------------------------------------------------------------------
  TRY.
      if_apj_rt_run~execute( ).
      out-&amp;gt;write( |Finished executing at { cl_abap_context_info=&amp;gt;get_system_time( ) }| ).
    CATCH cx_root INTO FINAL(exception).
      out-&amp;gt;write( |Exception raised during execution: { exception-&amp;gt;get_text( ) }| ).
  ENDTRY.
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now we got to the most interesting part, what do we put inside&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_rt_run~execute&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in order to retry the job on failure&lt;BR /&gt;We will start simple, first thing first, we'll try to calculate the total_attempts of the run that we can do, if the retry is disabled it will be 1, so it will run once, and won't retry, if it's enabled it will be the passed retry_count parameter + 1(the first run)&lt;/P&gt;&lt;P&gt;Next via a simple&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;DO&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;loop we will execute the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix~process&lt;/CODE&gt;(which contains the job business logic inside), and if the execution is successful, we'll return, therefore we don't get to the next iteration of the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;DO&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;loop, it will stop there and exit prematurely.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_rt_run~execute.
  FINAL(max_retries)    = COND i( WHEN retry_enabled = abap_true THEN retry_count ELSE 0 ).
  FINAL(total_attempts) = max_retries + 1.

  DO total_attempts TIMES.
    zif_phoenix~process( ).
    RETURN.
  ENDDO.
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;But will this be fault tolerant? No, as soon as&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix~process( )&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;raises an exception&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;if_apj_rt_run~execute&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;will be propagating the exception and prematurely terminate, so we don't get to the next&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;DO&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;iteration.&lt;/P&gt;&lt;P&gt;So we will just wrap it with a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;TRY CATCH&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;block:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_rt_run~execute.
  FINAL(max_retries)    = COND i( WHEN retry_enabled = abap_true THEN retry_count ELSE 0 ).
  FINAL(total_attempts) = max_retries + 1.

  DO total_attempts TIMES.
    TRY.
        zif_phoenix~process( ).
        RETURN.
      CATCH cx_root INTO FINAL(ex).
    ENDTRY.
  ENDDO.
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Congratulations, you have now a very simple fault tolerant application job framework, as soon as the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix~process( )&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;raises an exception, the catch block catches it, and goes to the next iteration of the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;DO&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;loop, as soon as the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix~process( )&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;is successfull it will return so we don't run it too many times.&lt;/P&gt;&lt;P&gt;But we don't have any sleep functionality, so let's add it&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_rt_run~execute.
  FINAL(max_retries)    = COND i( WHEN retry_enabled = abap_true THEN retry_count ELSE 0 ).
  FINAL(total_attempts) = max_retries + 1.

  DO total_attempts TIMES.
    TRY.
        zif_phoenix~process( ).
        RETURN.
      CATCH cx_root INTO FINAL(ex).
        IF sy-index &amp;lt;= max_retries.
          DATA(sleep_time_s) = zif_phoenix~get_next_delay( sy-index ).
          IF sleep_time_s &amp;gt; 0.
            WAIT UP TO sleep_time_s SECONDS.
          ENDIF.
          CONTINUE.
        ENDIF.
    ENDTRY.
  ENDDO.
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now on an exception we will get the next expected delay, will wait that amount of seconds and then continue with the next try.&lt;/P&gt;&lt;P&gt;But can you see the problem in this code?&lt;BR /&gt;The problem is that even if all the attempts of running the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zif_phoenix~process&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;are failing, the code will continue its normal flow after all failures, and will result in a succesfull job, which is false, so we'll raise an exception when we've exhausted all our attempts:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_rt_run~execute.
  FINAL(max_retries)    = COND i( WHEN retry_enabled = abap_true THEN retry_count ELSE 0 ).
  FINAL(total_attempts) = max_retries + 1.

  DO total_attempts TIMES.
    TRY.
        zif_phoenix~process( ).
        RETURN.
      CATCH cx_root INTO FINAL(ex).
        IF sy-index &amp;lt;= max_retries.
          DATA(sleep_time_s) = zif_phoenix~get_next_delay( sy-index ).
          IF sleep_time_s &amp;gt; 0.
            WAIT UP TO sleep_time_s SECONDS.
          ENDIF.
          CONTINUE.
        ENDIF.
        RAISE EXCEPTION NEW cx_apj_rt_content( previous = ex ).
    ENDTRY.
  ENDDO.
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now we'll add a bit of logging:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_rt_run~execute.
  " ------------------------------------------------------------------------
  " STANDARD IMPLEMENTATION DO NOT REDEFINE
  " FOLLOW STANDARD FLOW
  " Enhancement Points:
  "   - process() must be redefined
  " ------------------------------------------------------------------------
  TRY.
      FINAL(max_retries)    = COND i( WHEN retry_enabled = abap_true THEN retry_count ELSE 0 ).
      FINAL(total_attempts) = max_retries + 1.

      DO total_attempts TIMES.

        " new logger for each attempt, to have separation of logs in APJ
        create_logger( ).
        log_info( |Attempt { sy-index } of { total_attempts } started| ).

        TRY.
            zif_phoenix~process( ).
            log_success( |Processed successfully on attempt { sy-index }| ).
            RETURN.
          CATCH cx_root INTO FINAL(ex).
            IF sy-index &amp;lt;= max_retries.
              log_warning( |Attempt { sy-index } failed: { ex-&amp;gt;get_text( ) }| ).
              notify_about_failure( ).
              DATA(sleep_time_s) = zif_phoenix~get_next_delay( sy-index ).
              IF sleep_time_s &amp;gt; 0.
                log_info( |Retrying in { sleep_value_s } seconds| ).
                WAIT UP TO sleep_time_s SECONDS.
              ENDIF.
              CONTINUE.
            ENDIF.

            log_error( |Exhausted { total_attempts } attempts: { ex-&amp;gt;get_text( ) }| ).
            RAISE EXCEPTION NEW cx_apj_rt_content( previous = ex ).
        ENDTRY.

      ENDDO.

    CATCH cx_bali_runtime cx_uuid_error INTO FINAL(log_ex).
      RAISE EXCEPTION NEW cx_apj_rt_content( previous = log_ex ).
  ENDTRY.

ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Cool but what if the child class doesn't want to retry a specific exception, for example it knows for sure that this exception is not transient like some missing configuration, expired credentials, wrong data, etc?&lt;/P&gt;&lt;P&gt;In this case we will define a new exception class called&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zcx_phoenix_stop_retry&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and as soon as the child class raises this exception we don't retry, but just fail the job:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_apj_rt_run~execute.
  " ------------------------------------------------------------------------
  " STANDARD IMPLEMENTATION DO NOT REDEFINE
  " FOLLOW STANDARD FLOW
  " Enhancement Points:
  "   - process() must be redefined
  " ------------------------------------------------------------------------
  TRY.
      FINAL(max_retries)    = COND i( WHEN retry_enabled = abap_true THEN retry_count ELSE 0 ).
      FINAL(total_attempts) = max_retries + 1.

      DO total_attempts TIMES.

        " new logger for each attempt, to have separation of logs in APJ
        create_logger( ).
        log_info( |Attempt { sy-index } of { total_attempts } started| ).

        TRY.
            zif_phoenix~process( ).
            log_success( |Processed successfully on attempt { sy-index }| ).
            RETURN.
          CATCH zcx_phoenix_stop_retry INTO FINAL(stop_retry_ex).
            log_error( |The retrial was intentionally canceled: { stop_retry_ex-&amp;gt;get_text( ) }| ).
            RAISE EXCEPTION NEW cx_apj_rt_content( previous = stop_retry_ex ).
          CATCH cx_root INTO FINAL(ex).
            IF sy-index &amp;lt;= max_retries.
              log_warning( |Attempt { sy-index } failed: { ex-&amp;gt;get_text( ) }| ).
              notify_about_failure( ).
              DATA(sleep_time_s) = zif_phoenix~get_next_delay( sy-index ).
              IF sleep_time_s &amp;gt; 0.
                log_info( |Retrying in { sleep_value_s } seconds| ).
                WAIT UP TO sleep_time_s SECONDS.
              ENDIF.
              CONTINUE.
            ENDIF.

            log_error( |Exhausted { total_attempts } attempts: { ex-&amp;gt;get_text( ) }| ).
            RAISE EXCEPTION NEW cx_apj_rt_content( previous = ex ).
        ENDTRY.

      ENDDO.

    CATCH cx_bali_runtime cx_uuid_error INTO FINAL(log_ex).
      RAISE EXCEPTION NEW cx_apj_rt_content( previous = log_ex ).
  ENDTRY.

ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If you'd like to see the full class implementation you can check out &lt;A href="https://github.com/legonmarian/abap-btp-phoenix-framework" target="_blank" rel="noopener nofollow noreferrer"&gt;this link for the full source code.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;So how to try it? Simply just inherit from the base class, so we will&lt;SPAN&gt;&amp;nbsp;create a&amp;nbsp;&lt;/SPAN&gt;&lt;CODE&gt;zcl_phoenix_demo&lt;/CODE&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_phoenix_job_demo DEFINITION
  PUBLIC
  INHERITING FROM /lego/cl_phoenix_base
  FINAL
  CREATE PUBLIC .
  PUBLIC SECTION.
    METHODS /lego/if_phoenix~process REDEFINITION.
  PRIVATE SECTION.
    DATA: x TYPE i value -1. "anti-pattern, not recommended
ENDCLASS.
CLASS zcl_phoenix_job_demo IMPLEMENTATION.
  METHOD /lego/if_phoenix~process.
    x = x + 1.
    DATA(a) = 1 / x.
  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;What does this class do? Simply it will fail on the first run, and will be successful on the second run, because it will no longer be dividing by 0, but by 1. However I must warn you that the &lt;STRONG&gt;global variables should be avoided&lt;/STRONG&gt; in productive scenarios, I will explain why in the &lt;STRONG&gt;Limitations&lt;/STRONG&gt; section.&lt;/P&gt;&lt;P&gt;We'll create a Job Catalog Entry and Job Template in order to schedule the job:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="natanael1_0-1761067786183.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330406iCB8D1137A72B1341/image-size/medium?v=v2&amp;amp;px=400" role="button" title="natanael1_0-1761067786183.png" alt="natanael1_0-1761067786183.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="natanael1_2-1761067809210.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330408iD9ABA935221745C0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="natanael1_2-1761067809210.png" alt="natanael1_2-1761067809210.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now we can schedule it:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="natanael1_3-1761067909656.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330409i6174664CC9B27EBF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="natanael1_3-1761067909656.png" alt="natanael1_3-1761067909656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;And this is the Job Result:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-21 at 19.49.38.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330418iD54FEC62067DE9AC/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-10-21 at 19.49.38.png" alt="Screenshot 2025-10-21 at 19.49.38.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--51442461"&gt;Improvement points&lt;/H2&gt;&lt;P&gt;This code of course is not perfect, and there're various improvement points that could be done in order to make it better, however the goal of this blog post is not to showcase perfect code, but to explain conceptually how we can implement such a framework. Some of the improvements points could be:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;make the code less nested by using checks and guard clauses&lt;/LI&gt;&lt;LI&gt;add a method to the facade interface to allow external classes to schedule the job(not executing, but scheduling in a different session) by calling that method&lt;/LI&gt;&lt;LI&gt;add a cleanup hook to run before each new trial&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--247955966"&gt;Limitations, considerations, gotchas, and side cases&lt;/H2&gt;&lt;P&gt;And of course there're certain limitations to take into consideration and gotchas to avoid:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Biggest limitation is that you must design your classes to be stateless, because on a failure your class won't be reinstantiated instead the process method will run again, therefore you should try to avoid global variables as much as possible, because the state will be kept between runs&lt;BR /&gt;It is of course fine to have global variables objects from dependency injection that were just instantiated in the constructor, this is perfectly fine. But you should avoid as much as possible having business data in global variables, as the stale data might introduce unnecessary side effects on the re-run.&lt;/LI&gt;&lt;LI&gt;Another gotcha is that there're certain &lt;A href="https://help.sap.com/doc/abapdocu_cp_index_htm/CLOUD/en-US/ABENUNCATCHABLE_EXCEPTION_GLOSRY.html" target="_self" rel="noopener noreferrer"&gt;uncatchable exceptions&lt;/A&gt;&amp;nbsp;and the framework will unfortunately dump on these, because as the name suggests these are uncatchable and they will be propagated to a short dump, bypassing the try catch block.&lt;/LI&gt;&lt;LI&gt;One of the considerations is that you need to design your code in a manner where it will raise exceptions, instead of raising uncatchable exceptions, it might sound a bit confusing, but let me give you an example.&lt;BR /&gt;So let's assume that you make an RFC call to an on-prem system this way:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;"don't do this
call function 'some_rfc_fm'
  destination rfc_key
  exporting param       = 'value'
  importing return_data = return_data
  tables table_data     = table_data.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If the RFC call fails, it will raise an uncatchable exception and the program will dump, however we can modify it slightly in order to make it raise a catchable exception instead:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;"do this instead
call function 'some_rfc_fm'
  destination rfc_key
  exporting param       = 'value'
  importing return_data = return_data
  tables table_data     = table_data.
  exceptions others = 1.

if sy-subrc &amp;lt;&amp;gt; 0.
  raise exception type cx_rfc_dest_provider_error "or any other exception that you want
  exporting textid = cx_rfc_dest_provider_error=&amp;gt;connection_failed.
endif.​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;And a little caveat, it's not the best idea to put all the exception codes into 1 "bucket" with&amp;nbsp;&lt;CODE&gt;others = 1&lt;/CODE&gt;, and it's also probably not the best idea to raise just 1 type of exception, and specifically this type, but the goal of this example is to show how to convert an uncatchable exception into a catchable one.&lt;/P&gt;&lt;H2 id="toc-hId--444469471"&gt;Alternatives&lt;/H2&gt;&lt;P&gt;Now at this stage an obvious question is are there any alternatives or flavors of this implementation? Yes there're, and I will explain some now:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Instead of retry &lt;STRONG&gt;on all except&lt;/STRONG&gt; &lt;CODE&gt;zcx_phoenix&lt;/CODE&gt;, retry &lt;STRONG&gt;only on&lt;/STRONG&gt; &lt;CODE&gt;zcx_phoenix&lt;/CODE&gt;. In case that you have a very good exception handling, and you're controlling each exception you're raising, you can refactor the framework so it will retry only on a specific custom exception, instead of retrying on all exceptions. This way you have a bit more granular control over your execution flow. Similarly how it's done in the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-concepts/implementing-automatic-retry-of-failed-operations?locale=en-US" target="_self" rel="noopener noreferrer"&gt;bgPF framework&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;RAISE EXCEPTION NEW cx_bgmc_operation( 
	retry_settings = VALUE #( 
		delay_time = 2
		do_retry   = abap_true ) ).​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Another flavor of a fault-tolerant job framework would include a bit of a paradigm change, and we will need to give up the base class - child class relationship with a single job architecture in favor of a &lt;STRONG&gt;driver&amp;nbsp;&lt;/STRONG&gt;-&amp;nbsp;&lt;STRONG&gt;worker&amp;nbsp;&lt;/STRONG&gt;relationship. You will have a 2 job architecture, the 1st job will be the&amp;nbsp;&lt;STRONG&gt;driver&lt;/STRONG&gt; job, which will take as a parameter the name of the job with the business logic and it will schedule that job as the&amp;nbsp;&lt;STRONG&gt;worker&lt;/STRONG&gt; job, it will wait until that one has finished successfully, if it has failed then it will just &lt;STRONG&gt;spin up anothe&lt;/STRONG&gt;r worker job, until one finishes successfully. You should use this pattern in case the limitations listed in the limitations section are a&amp;nbsp;showstopper for you, f.ex. you need a stateful job class with state isolation between runs. In my opinion this is a good approach but for certain usecases only, in general I prefer the current approach being more lightweight and flexible&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId--347579969"&gt;Closing notes&lt;/H1&gt;&lt;P&gt;The Phoenix Framework demonstrate that robust doesn't necessary mean complex, reliability can be achieved with a relatively simple and lightweight setup. With a structured retry mechanism we managed to achieve fault-tolerant jobs, and reduce manual recovery efforts.&lt;/P&gt;&lt;P&gt;This framework is not perfect, nor it should be, it's main goal is to ensure that people's time is respected and not wasted because of preventable issues.&lt;/P&gt;&lt;P&gt;Thanks for reading until here, and as a closing remark I must say that it's often through our failures that we find opportunities to improve, just like the Phoenix, this framework was born from the ashes of failed jobs, rising stronger each time.&lt;/P&gt;&lt;P&gt;If you're curious please check the &lt;A href="https://github.com/legonmarian/abap-btp-phoenix-framework" target="_self" rel="nofollow noopener noreferrer"&gt;full source code here&lt;/A&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/automatic-retry-of-application-jobs-in-abap-in-cloud/ba-p/14249591"/>
    <published>2025-10-22T08:12:39.185000+02:00</published>
  </entry>
</feed>
