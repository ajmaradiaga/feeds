<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/BW-Analytic-Engine-(OLAP)-blog-posts.xml</id>
  <title>SAP Community - BW Analytic Engine (OLAP)</title>
  <updated>2025-10-07T23:10:10.034924+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/BW Analytic Engine (OLAP)/pd-p/761831932935929195409379977340781" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>BW Analytic Engine (OLAP) blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/smart-queries-for-sap-analytics-cloud-with-bw-live-connection/ba-p/13443234</id>
    <title>Smart Queries for SAP Analytics Cloud with BW Live Connection</title>
    <updated>2019-11-13T21:10:52+01:00</updated>
    <author>
      <name>IngoH</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/150260</uri>
    </author>
    <content>One important aspect of the integration of SAP Analytics Cloud and SAP BW / BW4HANA is always the topic performance. With wave 19 we released a new feature especially for the BW Live connectivity. Officially the feature is called "Query Merging", but I thought "Smart Query" sounds far better...&lt;BR /&gt;
&lt;BR /&gt;
Lets assume a very simple case:&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/11/BW_TWO_STRUCTURE_007.jpg" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
In our example, we have three charts displaying:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Net Value by Product (Top 10)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Costs by Product (Top 10)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Net Value by Region (Top 10)&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Without doing anything, this would result in three queries towards the SAP BW system.&lt;BR /&gt;
&lt;BR /&gt;
Now with the new option of query merging, we can reduce the amount of queries.&lt;BR /&gt;
&lt;BR /&gt;
First I open the Query Settings as part of my story...&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/11/BW_TWO_STRUCTURE_008.jpg" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
.. and I then enable both options:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Enable Query Merge&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Visualize Query Merge&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/11/BW_TWO_STRUCTURE_009.jpg" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
.. and then i refresh my story.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/11/BW_TWO_STRUCTURE_010.jpg" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
All three charts are shown with a different color and there is a small comment in the bottom right corner for each chart, showing with with data request the data was retrieved. In my given example we still have three data requests - so we didn't improve.&lt;BR /&gt;
&lt;BR /&gt;
Why ?&lt;BR /&gt;
&lt;BR /&gt;
So lets look at the pre-requisites:&lt;BR /&gt;
&lt;UL id="loio697b09ba2a984ab6997eac94efe8d043__ul_cm3_tbt_53b" class="ul"&gt;&lt;BR /&gt;
 	&lt;LI class="li"&gt;&lt;BR /&gt;
&lt;P class="p"&gt;Queries contain the same dimensions with the same hierarchies and drill.&lt;/P&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI class="li"&gt;&lt;BR /&gt;
&lt;P class="p"&gt;Queries use the same sorting and ranking.&lt;/P&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI class="li"&gt;&lt;BR /&gt;
&lt;P class="p"&gt;Queries do not have an active threshold with threshold filters.&lt;/P&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI class="li"&gt;&lt;BR /&gt;
&lt;P class="p"&gt;The widget does not have a local filter on a dimension that is also used in a restriction in SAP BW.&lt;/P&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI class="li"&gt;&lt;BR /&gt;
&lt;P class="p"&gt;Queries are part of the same receiver group if they use linked analysis.&lt;/P&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI class="li"&gt;&lt;BR /&gt;
&lt;P class="p"&gt;There is no widget filter on a secondary structure query.&lt;/P&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI class="li"&gt;&lt;BR /&gt;
&lt;P class="p"&gt;The widget filter is not defined as complex tuple or range filter.&lt;/P&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI class="li"&gt;&lt;BR /&gt;
&lt;P class="p"&gt;Presentation types are the same.&lt;/P&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
So in our example the second rule is why our three charts are not being merged, because we are using three different sets of ranking rules.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
So lets remove the ranking from all our three charts.....&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/11/BW_TWO_STRUCTURE_011.jpg" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
.... and we can see that the two charts that share the dimension are now part of the same data request, so instead of 3 requests we now are only using 2 requests.&lt;BR /&gt;
&lt;BR /&gt;
When looking at this simple example the impact might not be so obvious, so lets put this into a perspective.&lt;BR /&gt;
&lt;BR /&gt;
Lets assume we have a SAP Analytics Cloud Story with a total of 6 widgets and instead of running 6 data requests, we would be running 2 data requests with the Query Merging capability enabled.&lt;BR /&gt;
&lt;BR /&gt;
Lets also assume that the SAP Analytics Cloud Story is being viewed by 100 people each morning.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Our old scenario:&lt;BR /&gt;
&lt;P style="padding-left: 40px"&gt;100 Users x 6 requests = 600 requests&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
New scenario with Query Merging:&lt;BR /&gt;
&lt;P style="padding-left: 40px"&gt;100 Users x 2 requests = 200 requests&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
I am sure your BW Administrator would appreciate this and your end users will as well ...&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://help.sap.com/doc/00f68c2e08b941f081002fd3691d86a7/2019.20/en-US/697b09ba2a984ab6997eac94efe8d043.html" target="_blank" rel="noopener noreferrer"&gt;Merging SAP BW Queries Documentation&lt;/A&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/smart-queries-for-sap-analytics-cloud-with-bw-live-connection/ba-p/13443234"/>
    <published>2019-11-13T21:10:52+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/configuration-of-fiori-analytical-app-using-sap-smart-business-kpi-modeller/ba-p/13453803</id>
    <title>Configuration of FIORI Analytical App using SAP Smart Business KPI Modeller</title>
    <updated>2019-12-13T06:08:12+01:00</updated>
    <author>
      <name>rpatra</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/340759</uri>
    </author>
    <content>Hi Readers,&lt;BR /&gt;
&lt;BR /&gt;
First of all, thank you very much for reading this blog. I hope it will be helpful for you.&lt;BR /&gt;
&lt;BR /&gt;
In this blog, I am going to discuss the steps to create your first FIORI analytical app using SAP Smart Business KPI Modeller.&lt;BR /&gt;
&lt;BR /&gt;
Before going to start let's understand what is FIORI Analytical App.&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="color: #0000ff"&gt;&lt;STRONG&gt;What is FIORI Analytical App?&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
Analytical apps are used to provide role-based real-time information about business operations. Analytical apps integrate the power of SAP HANA with SAP business suite. It provides real-time information from a large volume of data in the front-end web browsers.&lt;BR /&gt;
&lt;BR /&gt;
Using Analytical apps, you can closely monitor Key Performance Indicators KPIs. You can perform complex aggregations and calculations of your business operations and react immediately as per the changes in the market condition.&lt;BR /&gt;
&lt;BR /&gt;
SAP Fiori Analytical apps run on SAP HANA database and use Virtual data models.&lt;BR /&gt;
&lt;BR /&gt;
There are two types of Analytical Apps −&lt;BR /&gt;
&lt;UL class="list"&gt;&lt;BR /&gt;
 	&lt;LI&gt;SMART Business&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Virtual Data Models&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;SPAN style="color: #000000"&gt;&lt;STRONG&gt;SMART Business&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
SAP Fiori smart business apps are used to monitor your most important KPIs in real-time and to make changes as per market conditions immediately.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Note&lt;/STRONG&gt; − There are around 84 Analytical apps under this umbrella and out of these, you have 69 apps are smart business apps and rest 15 are Analytical Apps.&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="color: #0000ff"&gt;&lt;STRONG&gt;What is a KPI Modeler?&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
It is a tool used to model KPI and report tiles for monitoring the business data using Fiori Launchpad. You can define KPIs and reports to which you can apply different calculations and it enables you to make adjustments according to changing market conditions.&amp;nbsp;You can configure drill-down views.&lt;BR /&gt;
&lt;BR /&gt;
SAP HANA Live provides exceptional capability analytics for all business suite by enabling industry-standard access to SAP data through data models.&lt;BR /&gt;
&lt;BR /&gt;
The data models are used for analytical purposes using views in the HANA database. The views from a virtual data model that a customer and partner can reuse.&lt;BR /&gt;
&lt;BR /&gt;
Now, let's see the steps to follow to create a new KPI Report for any of your business processes.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;1&lt;/STRONG&gt;. Open your Fiori Launchpad, you will see &lt;STRONG&gt;KPI Modeller Tiles&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/1-45.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;2&lt;/STRONG&gt;. Click on the &lt;STRONG&gt;Create KPI Tile&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/2-61.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;3. &lt;/STRONG&gt;You should enter &lt;STRONG&gt;Title&lt;/STRONG&gt;, &lt;STRONG&gt;Description&lt;/STRONG&gt;, Choose&lt;STRONG&gt; Goal Type&lt;/STRONG&gt; from options Maximizing, Minimizing or Range&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/3-29.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;4&lt;/STRONG&gt;: You should select &lt;STRONG&gt;SAP HANA View&lt;/STRONG&gt; from the Value Help&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/4-18.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;5&lt;/STRONG&gt;. Select the &lt;STRONG&gt;HANA View&lt;/STRONG&gt; and then search for &lt;STRONG&gt;OData Service&lt;/STRONG&gt; from OData Service Value help.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/5-18.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;6&lt;/STRONG&gt;. Now, select the respective &lt;STRONG&gt;OData Service&lt;/STRONG&gt; and respective &lt;STRONG&gt;Entity Set&lt;/STRONG&gt;.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/6-30.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
7: Now, Search for &lt;STRONG&gt;Value&lt;/STRONG&gt; &lt;STRONG&gt;Measure&lt;/STRONG&gt; from Measure Value help.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/7-16.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;8&lt;/STRONG&gt;. Click on &lt;STRONG&gt;Activate&lt;/STRONG&gt; &lt;STRONG&gt;and&lt;/STRONG&gt; &lt;STRONG&gt;Add Evaluation&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/8-18.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
9. Once clicked on &lt;STRONG&gt;Activate and Add Evaluation&lt;/STRONG&gt;, the Add Evaluation page opens up. On this page some of the fields are prefilled. This data is fetched from KPI.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/9-11.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;10&lt;/STRONG&gt;. Select a few&lt;STRONG&gt; Additional Measures&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/10-17.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;11: &lt;/STRONG&gt;Now, Select &lt;STRONG&gt;optional Filters&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/11-10.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;12:&amp;nbsp;&lt;/STRONG&gt;Select &lt;STRONG&gt;Value Type&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/12-9.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;13: &lt;/STRONG&gt;You can also Enter &lt;STRONG&gt;Target&lt;/STRONG&gt;, &lt;STRONG&gt;Threshold,&lt;/STRONG&gt; and &lt;STRONG&gt;Trend &lt;/STRONG&gt;if required&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/13-10.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;14: &lt;/STRONG&gt;Now, click on &lt;STRONG&gt;Activate and Configure Tile&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/14-6.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;15:&amp;nbsp;&lt;/STRONG&gt;Once you clicked on &lt;STRONG&gt;Add Tile&lt;/STRONG&gt;, &lt;STRONG&gt;Add Tile page&lt;/STRONG&gt; opens up, you can choose any tile type as per your requirement.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/15-4.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;16:&amp;nbsp;&lt;/STRONG&gt;After clicking on &lt;STRONG&gt;Save&lt;/STRONG&gt; &lt;STRONG&gt;and&amp;nbsp;Configure Drill Down&lt;/STRONG&gt;, the Drill-Down Configuration Details page will come up.&lt;BR /&gt;
&lt;BR /&gt;
Now, you have to select an Evaluation and click on Configure Button.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/16-7.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;17:&lt;/STRONG&gt; Now, select &lt;STRONG&gt;Measures&lt;/STRONG&gt; and &lt;STRONG&gt;Dimensions&lt;/STRONG&gt;.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/17-5.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;18&lt;/STRONG&gt;: You can select the &lt;STRONG&gt;Visualization Type &lt;/STRONG&gt;and &lt;STRONG&gt;Save View&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/18-3.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;19:&amp;nbsp;&lt;/STRONG&gt;Save the new Configuration&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/19-4.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;20:&lt;/STRONG&gt; Now, you can go to &lt;STRONG&gt;Tile Catalog&lt;/STRONG&gt; in &lt;STRONG&gt;Fiori Launchpad&lt;/STRONG&gt; and search for the KPI Tile that was created and Add Tile to Group by Clicking on ‘+’ icon&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/12/20-4.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
That's it!!! Your new KPI report will be available on your Fiori Launchpad.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Thanks &amp;amp; Regards,&lt;BR /&gt;
&lt;BR /&gt;
Rahul Patra</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/configuration-of-fiori-analytical-app-using-sap-smart-business-kpi-modeller/ba-p/13453803"/>
    <published>2019-12-13T06:08:12+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/asug-bi-and-dw-upcoming-influence-councils/ba-p/13428562</id>
    <title>ASUG BI and DW Upcoming Influence Councils</title>
    <updated>2020-01-20T18:26:09+01:00</updated>
    <author>
      <name>IngoH</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/150260</uri>
    </author>
    <content>Some of you might already be aware what ASUG Influence Councils are and some of you might be new to the topic.&lt;BR /&gt;
&lt;BR /&gt;
An ASUG Influence Council is basically your opportunity to "make your voice heard" and present any requirements and suggestions to the product team from SAP. In addition, you are not doing this just by yourself, but instead you are combining your voice with several other customers together, which then provides it an even stronger voice.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
In case you are interested to join some of these Influence Council, I highly recommend that you join these public calls to hear more about the scope and what type of profile the product team is looking for.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://www.asug.com/events/data-warehouse-cloud-influence-council" target="_blank" rel="nofollow noopener noreferrer"&gt;February 03 - Data Warehouse Cloud Influence Council 2020 Launch&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://www.asug.com/events/enterprise-data-warehouse-influence-council" target="_blank" rel="nofollow noopener noreferrer"&gt;February 11 - Enterprise Data Warehouse Influence Council 2020 Launch&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://www.asug.com/events/business-intelligence-platform-influence-council" target="_blank" rel="nofollow noopener noreferrer"&gt;February 20 - SAP BusinessObjects BI Platform Influence Council 2020 Launch&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://www.asug.com/events/sap-businessobjects-web-intelligence-2020-launch" target="_blank" rel="nofollow noopener noreferrer"&gt;February 24 - SAP BusinessObjects Web Intelligence 2020 Launch&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://www.asug.com/events/sap-analytics-cloud-integration-with-bw-influence-council-2020-launch-1" target="_blank" rel="nofollow noopener noreferrer"&gt;February 24 - SAP Analytics Cloud Integration with BW Influence Council 2020 Launch&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://www.asug.com/events/sap-analysis-for-microsoft-office-influence-council" target="_blank" rel="nofollow noopener noreferrer"&gt;March 12 - SAP Analysis for Microsoft Office Influence Council 2020 Launch&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://www.asug.com/events/mobile-analytics-influence-council" target="_blank" rel="nofollow noopener noreferrer"&gt;March 16 - Mobile Analytics Influence Council 2020 Launch&lt;/A&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/asug-bi-and-dw-upcoming-influence-councils/ba-p/13428562"/>
    <published>2020-01-20T18:26:09+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/s-4hana-analytics-bw-queries-with-or-without-bw-modeling-comparison/ba-p/13438412</id>
    <title>S/4HANA Analytics: BW queries with or without BW modeling (comparison)</title>
    <updated>2020-05-06T15:42:03+02:00</updated>
    <author>
      <name>Dmitry_Kuznetsov</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/183443</uri>
    </author>
    <content>Since I am a proponent of using BW queries even directly in S/4HANA Embedded Analytics, I have done some research whether stirring BW objects into the picture has any major down-sides.&lt;BR /&gt;
&lt;BR /&gt;
There are two major scenarios of virtual data consumption in BW:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;A BW Query directly on a CDS view with &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/15206"&gt;@analytics&lt;/a&gt;.dataCategory: #CUBE. I will call it CDS scenario further in the text.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;A BW Query on a Composite Provider that has an OpenODS that is based on DataSource that is based on CDS (mentioned above). I will call it HCPR scenario.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
We all realize that CDS-scenario is much simpler, robust, extendable, easier to support and so on. But... we have some BW fans amongst us that would maybe like to union the live data with something else like benchmarks, external system data, etc., so we have certainly valid reasons for HCPR scenario.&lt;BR /&gt;
&lt;BR /&gt;
Before we start doing any modeling, let us just measure if there is a penalty of using the triple-sandwich of BW objects. For the sake of real head-to-head comparison let us eliminate various factors that may influence performance like network time (if we have separate instances), additional data union operations, etc. I take just a plain and simple example of standard BW technical content consumed in two different ways. (Don't blame me for using BW technical content here, it is written in the same ABAP CDS nowadays and works in exact same fashion as S/4HANA CDS views).&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/overview.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
So, here we go, 2 queries with exact same set of fields built on top of CDS-view directly on one end and HCPR on the other.&lt;BR /&gt;
&lt;BR /&gt;
I execute (yes, in RSRT) three very basic tests:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Very aggregaed, i.e. just Key Figures and nothing in drill-down&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Slightly aggregated, i.e. just an Object is in drill-down&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Full details, i.e. all 10 characteristics are in rows&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
In addition, I execute it on two very different data-sets, 1 being 20k records, the other – 1,6 mil (filtered to 0,4 mil in Query), so we see if there is growth related to data-volume.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;TABLE style="height: 782px" width="937"&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR style="height: 42px"&gt;&lt;BR /&gt;
&lt;TD style="width: 127px;height: 42px" width="127"&gt;Scenario&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 334px;height: 42px" width="348"&gt;Small data-set&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 176px;height: 42px" width="184"&gt;Observation&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 233px;height: 42px" width="184"&gt;Big data-set&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 53px;height: 42px" width="95"&gt;Observation&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 257px"&gt;&lt;BR /&gt;
&lt;TD style="width: 127px;height: 257px" width="127"&gt;Very aggregated&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 334px;height: 257px" width="348"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/01.png" /&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 176px;height: 257px" width="184"&gt;&lt;BR /&gt;
&lt;BR /&gt;
Nothing major, but Data Manager seems taking +45% more time in HCPR case&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
HCPR also implies query regeneration even though I generated it before execution (1/10&lt;SUP&gt;th&lt;/SUP&gt; of a second)&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 233px;height: 257px" width="184"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/04.png" /&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 53px;height: 257px" width="95"&gt;No major impact&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 246px"&gt;&lt;BR /&gt;
&lt;TD style="width: 127px;height: 246px" width="127"&gt;Slightly aggregated&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 334px;height: 246px" width="348"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/02.png" /&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 176px;height: 246px" width="184"&gt;&lt;BR /&gt;
&lt;BR /&gt;
Nothing major, but Data Manager seems taking +25% more time and&lt;BR /&gt;
&lt;BR /&gt;
OLAP Data Transfer +70% more time in HCPR case&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
HCPR also implies query regeneration even though I generated it before execution (1/10&lt;SUP&gt;th&lt;/SUP&gt; of a second)&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 233px;height: 246px" width="184"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/05.png" /&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 53px;height: 246px" width="95"&gt;No major impact&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 237px"&gt;&lt;BR /&gt;
&lt;TD style="width: 127px;height: 237px" width="127"&gt;Full details&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 334px;height: 237px" width="348"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/03.png" /&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 176px;height: 237px" width="184"&gt;&lt;BR /&gt;
&lt;BR /&gt;
OLAP Data Transfer +8%&lt;BR /&gt;
&lt;BR /&gt;
Data Manager +6%&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 233px;height: 237px" width="184"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/06.png" /&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 53px;height: 237px" width="95"&gt;The cumulative effect of DM and OLAP in HCPR case is +20 seconds (15% increase), which is a significant penalty&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;/TABLE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
* a small remark that I am doing it on a system where there are 1,6 mil records&lt;BR /&gt;
&lt;BR /&gt;
So, to draw a conclusion – I’ve never noticed HCPR-based solution taking over the CDS&lt;BR /&gt;
&lt;BR /&gt;
There seems to be insignificant penalty for using HCPR in aggregated data-sets, so it is a viable way forward from performance point of view. For bigger, more detailed queries I would do the exact measurement and see if user-expectations will be met.&lt;BR /&gt;
&lt;BR /&gt;
If you would like to reproduce the same scenario, you may grab a BW system and work with Technical Content, e.g. OLAP statistics CDS views. I used RV_C_OlapStatACube</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/s-4hana-analytics-bw-queries-with-or-without-bw-modeling-comparison/ba-p/13438412"/>
    <published>2020-05-06T15:42:03+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/getting-bex-query-id-in-customer-exit-for-authorization-variables/ba-p/13439125</id>
    <title>Getting BEx query ID in customer exit for authorization variables</title>
    <updated>2020-05-29T17:30:36+02:00</updated>
    <author>
      <name>Gourab_Dey</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13422</uri>
    </author>
    <content>&lt;H2 id="toc-hId-931778780"&gt;Introduction:&lt;/H2&gt;&lt;BR /&gt;
The importing parameter "I_S_RKB1D"(query attribute) is not getting filled for authorization variable(I_STEP=0) in the FM "&lt;STRONG&gt;EXIT_SAPLRRS0_001"(FM for customer exit variable). &lt;/STRONG&gt;Recently I have faced this issue in our system and came up with a workaround and thought to share it so that it will be helpful for someone who is having the same issues.&lt;BR /&gt;
&lt;H2 id="toc-hId-735265275"&gt;&lt;STRONG&gt;Problem Statement:&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
In customer exit/BAdI for BEx Variable, we often have requirements to get the query related attributes (e.g., ID of the query) so that we can mold our code accordingly. We already have an importing parameter(I_S_RKB1D in case of customer exit) for the query attributes in the FM/Class of the Customer exit/BAdI respectively.&lt;STRONG&gt; The importing parameter works fine for customer exit variables for I_STEP=1 and 2(work fine in the sense, the query id is filled in the imparting parameter). However, for authorization variables(that is when the value of I_STEP is 0), the values are not filled in the query attributes and remain blank.&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Below screenshot for reference. We can see the variable "I_VNAM" which have the value for authorization variable name, "I_STEP" which have the value "0" which is for authorization check. We can see the value of the variable "I_S_RKB1D-COMPID" is empty, which should have the value of the query being run.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/FM-3.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;(The above screenshot is from the function module "EXIT_SAPLRRS0_001" which belongs to the customer exit "RSR00001"-BI: Enhancements for Global Variables in Reporting).&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
We can see in the below screenshot, the value of I_STEP is "2" and the query id is populated successfully in the variable "I_S_RKB1D-COMPID".&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/FM2-1.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
So, to summarize the issue, the query ID is not getting populated for Authorization Variable (I_STEP=0) but, it is working fine for the customer exit variable(I_STEP =1 or 2).&lt;BR /&gt;
&lt;H2 id="toc-hId-538751770"&gt;Proposed Solution:&lt;/H2&gt;&lt;BR /&gt;
There is a standard class "CL_RSBOLAP_SELECTION_OBJECT" which is responsible for calling the customer exit/BAdI for authorization/customer exit variable of BEx. The class has an attribute "IF_RSBOLAP_MD_SELECTOR~N_S_COMPKEY" which stores the query attributes of the query which is being run.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/FM3.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
So, we can take the help of the "static attribute" of Object-Oriented Programing. We will create a custom class and create a static attribute in the class for the query id. We set the value of query attribute from this class using a "Pre-exit" in the method. Then inside the customer exit/BAdI, we can use our custom class to get the query Id.&lt;BR /&gt;
&lt;BR /&gt;
Those who are new to Object-Oriented programming, static attributes are the attributes of the class which are not associated with the object of the class directly and exists on per class basis. Which means, there will be only one instance of the attribute for one class and these attribute can be accessed without creating the object of the class. For more information, please refer to the below link.&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-us/abapclass-data.htm" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-us/abapclass-data.htm&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
As mentioned already, we will be creating a pre-exit in the class of the method. Pre-exit is nothing but the enhancement technique, where we can associate our code to the class which will be called automatically by the system whenever that particular method is called anywhere. As this is the pre-exit, so our code will be called followed by the code of the standard method. For more information, please refer to the below link&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://wiki.scn.sap.com/wiki/display/ABAP/Enhancement+Framework+-+Class+Enhancements+-+Pre-exit,+Post-exit+and+Overwrite-exit+methods+-+Concept+and+Simple+Scenarios" target="_blank" rel="noopener noreferrer"&gt;https://wiki.scn.sap.com/wiki/display/ABAP/Enhancement+Framework+-+Class+Enhancements+-+Pre-exit,+Post-exit+and+Overwrite-exit+methods+-+Concept+and+Simple+Scenarios&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
So, let's start.&lt;BR /&gt;
&lt;H2 id="toc-hId-342238265"&gt;&lt;STRONG&gt;Step 1: Creation of custom class&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
Let's create a custom class "ZCL_BW_QUERY_NAME". This class will be used to get the Query Id. This class will have below component:&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/Class-2.png" /&gt;&lt;STRONG&gt;Attribute:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;MV_QUERY_ID -&amp;nbsp; To store the query Id&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/Class-2-1.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Methods:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;SET_QUERY_ID&lt;/STRONG&gt; - Sets the query ID - This will be used in the Pre-exit of the method of class "CL_RSBOLAP_SELECTION_OBJECT" to set the value&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;GET_QUERY_ID&lt;/STRONG&gt; - Gets the query ID - This will be used in customer exit/BAdI to get the query id&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/Class-3.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Method: SET_QUERY_ID&lt;/STRONG&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/Class-4.png" /&gt;&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;  METHOD set_query_id.&lt;BR /&gt;
    "Set the query id&lt;BR /&gt;
    mv_query_id = im_v_query_id.&lt;BR /&gt;
  ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;STRONG&gt;Method: GET_QUERY_ID&lt;/STRONG&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/Class-5.png" /&gt;&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;  METHOD get_query_id.&lt;BR /&gt;
    "Return the query id&lt;BR /&gt;
    rt_v_query_id = mv_query_id.&lt;BR /&gt;
  ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId-145724760"&gt;&lt;STRONG&gt;Step 2: Creation of pre-exit for setting the value of Query in the custom class&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
To create the Pre-exit go to the class "CL_RSBOLAP_SELECTION_OBJECT" in class builder(t-code: SE24) and click on "Class--&amp;gt; Enhance" in the menubar.&lt;BR /&gt;
&lt;BR /&gt;
If you have already an enhancement implementation, then the created enhancement implementation will be shown in the pop-up. Select the implementation to proceed. In my case, there is no existing implementation, so I will go ahead and create one.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/Class-7-1.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Once the Enhancement Implementation is created, place the cursor on the method "CREATE_OLAP_OBJECT". Then create a pre-exit method.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/Class-8.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Please click on "Yes" in the pop-up if the pop-up is displayed.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/Class-9-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Now click on the button shown in "Pre-exit" column of the method "CREATE_OLAP_OBJECT".&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/Class-10.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Please add below code inside the pre-exit of the method method&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/Class-11.png" /&gt;&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;METHOD IPR_ZEHN_QUERY_DETAILS~CREATE_OLAP_OBJECT.&lt;BR /&gt;
*"------------------------------------------------------------------------*&lt;BR /&gt;
*" Declaration of PRE-method, do not insert any comments here please!&lt;BR /&gt;
*"&lt;BR /&gt;
*"methods CREATE_OLAP_OBJECT&lt;BR /&gt;
*"  importing&lt;BR /&gt;
*"    !I_AUTHCHECK type RS_BOOL&lt;BR /&gt;
*"  raising&lt;BR /&gt;
*"    CX_RSBOLAP_UNKNOWN_DATA_PROV .&lt;BR /&gt;
*"------------------------------------------------------------------------*&lt;BR /&gt;
  "Set the query ID  &lt;BR /&gt;
  zcl_bw_query_name=&amp;gt;set_query_id( im_v_query_id = core_object-&amp;gt;if_rsbolap_md_selector~n_s_compkey-compid ).&lt;BR /&gt;
ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
So, we have created the custom class and set the query Id. We are all done. No kidding. Now we can use our method "GET_QUERY_ID" of our class "ZCL_BW_QUERY_NAME" inside customer exit to fetch the query id.&lt;BR /&gt;
&lt;H2 id="toc-hId--50788745"&gt;&lt;STRONG&gt;Step 3: Get the query id in customer exit&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
Now, let's go our customer exit for BEx Variable to use our class to get the query id. Let's&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/05/Class-12-3.png" /&gt;&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;IF i_s_rkb1d-compid IS INITIAL.&lt;BR /&gt;
  "Get the query id&lt;BR /&gt;
  i_s_rkb1d-compid = zcl_bw_query_name=&amp;gt;get_query_id( ).&lt;BR /&gt;
ENDIF.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
We can call the method "GET_QUERY_ID" of the class "ZCL_BW_QUERY_NAME". We can see we get the name of the query in the which is being run. Please note the value of "I_STEP" is "0", which confirms we are dealing with the authorization variable.&lt;BR /&gt;
&lt;H2 id="toc-hId--247302250"&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
As we saw, we had an issue to get the Query Name for the authorization variable(I_STEP=0). The I_S_RKB1D-COMPID was blank. However, for I_STEP=1 or 2, there is no issues and the variable "I_S_RKB1D-COMPID" is filled correctly. To overcome the issue, we have created a pre-exit in the method "CREATE_OLAP_OBJECT" in the class to set the query id in the custom class "ZCL_BW_QUERY_NAME". Then, we used the class "ZCL_BW_QUERY_NAME" in the customer exit(for BAdI also it will work fine) to get the name of the query. Cheers!</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/getting-bex-query-id-in-customer-exit-for-authorization-variables/ba-p/13439125"/>
    <published>2020-05-29T17:30:36+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-recover-objects-not-visible-within-infoarea/ba-p/13541917</id>
    <title>How to Recover Objects not visible within InfoArea</title>
    <updated>2021-12-31T09:20:53+01:00</updated>
    <author>
      <name>siddhesh_kadam</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/775176</uri>
    </author>
    <content>In this Blog Post we will understand how to handle a situation when Objects are not visible within InfoArea.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="text-decoration: underline"&gt;&lt;STRONG&gt;Problem Statement :&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
Often when there are Role level and authorization related Changes from Basis or Security Team on User ID, User's might not be able to see the Modelling Objects and Query related Elements within the InfoArea and it creates a kind of confusion when no object is visible to work upon which used to exists before.&lt;BR /&gt;
&lt;BR /&gt;
This issue often occurs due to Shared Buffer that exists on Application Server.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Lets try to Understand how we can resolve this Issue.&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="text-decoration: underline"&gt;&lt;STRONG&gt;Solution&lt;/STRONG&gt;&lt;/SPAN&gt; :&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Go to T-Code : &lt;STRONG&gt;RSOSM&lt;/STRONG&gt;, which is often used for BW Search for SAP HANA Maintenance.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/12/RSOSM.png" height="344" width="461" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
2.&amp;nbsp; You will get the above Screen , Scroll to the bottom of the screen and click on "&lt;STRONG&gt;Configure BW Search&lt;/STRONG&gt;" , You will be presented with the below Screen.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/12/configure_bw_search.png" height="321" width="505" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
3. Once you are within "&lt;STRONG&gt;Configure BW Search&lt;/STRONG&gt;" Section, You can see the status of your Shared Buffer as "&lt;STRONG&gt;Shared Buffer is Filled&lt;/STRONG&gt;" and a Delete Icon besides that Status.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
4. Click on that Delete Icon , it will delete your Shared Buffer and the Status will be changed to "&lt;STRONG&gt;Shared Buffer is not filled&lt;/STRONG&gt;" as below.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/12/Pic3.png" height="113" width="508" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
5. Now , go back to your InfoArea and hit Refresh , You will be able to see all your Modelling Objects and Query related Elements back within InfoArea.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="text-decoration: underline"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/SPAN&gt;:&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
By Following the above steps you will be able to clear up your shared buffer and able to see the missing Objects back within your InfoArea.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
— Sources of the pictures are screenshots I have taken from SAP system and no image is taken from the internet.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Hope the above Information added a bit of value to your time and knowledge .&lt;BR /&gt;
&lt;BR /&gt;
If you enjoyed reading it do give it a Like and would be happy to read your feedback in the comments section.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-recover-objects-not-visible-within-infoarea/ba-p/13541917"/>
    <published>2021-12-31T09:20:53+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/obtaining-mdx-data-in-sapui5-via-xmla/ba-p/13524695</id>
    <title>Obtaining MDX data in SAPUI5 via XMLA</title>
    <updated>2022-02-12T15:06:04+01:00</updated>
    <author>
      <name>ThorstenHoefer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/343</uri>
    </author>
    <content>&lt;H2 id="toc-hId-959340477"&gt;1. Introduction&lt;/H2&gt;&lt;BR /&gt;
SAP UI5 developers often struggle with obtaining data from the backend. The common way to access backend data is the OData protocol.&lt;BR /&gt;
&lt;BR /&gt;
The OData interface provides such advantages as selecting. binding, filtering and sorting data.&lt;BR /&gt;
On the other hand, there are some flaws in OData protocol as to handling OLAP Data for analysis.&lt;BR /&gt;
&lt;BR /&gt;
MDX (Multidimensional Expressions) has established itself as a common query language for OLAP data. XMLA (XML for analysis) is an open standard for requesting OLAP Data with MDX.&lt;BR /&gt;
&lt;BR /&gt;
Below find my description of&amp;nbsp; how MDX Data can be obtained using XMLA in javascript for SAP UI5.&lt;BR /&gt;
&lt;BR /&gt;
SAP offers the ISCF node /sap/bw/xml/soap/xmla/ as a web service data provider interface.&lt;BR /&gt;
&lt;BR /&gt;
This web service offers two methods: &lt;STRONG&gt;Execute&lt;/STRONG&gt; and &lt;STRONG&gt;Discover&lt;/STRONG&gt;. In the following article is the focus on the &lt;STRONG&gt;Execute &lt;/STRONG&gt;Method.&lt;BR /&gt;
&lt;BR /&gt;
A JQuery post request will send the MDX query envelop in a XML structure as a web service request.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-762826972"&gt;2. Create and test the MDX Query&lt;/H2&gt;&lt;BR /&gt;
Transaction MDXTEST allows us to create, test and execute a MDX Query.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/TA_MDX.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
The MDX query can be directly executed.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/mdx_result.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Execution of MDX Query&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
In this example, I used a Query which is provided in the trial SAP 7.52 Developer Edition.&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://developers.sap.com/trials-downloads.html?search=7.52" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/trials-downloads.html?search=7.52&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
MDX example&lt;BR /&gt;
&lt;PRE class="language-markup"&gt;&lt;CODE&gt;SELECT&lt;BR /&gt;
      NON EMPTY&lt;BR /&gt;
        { [48CSWO6CA6TXXHDU2Q35OLJW0].Members }&lt;BR /&gt;
      ON COLUMNS,&lt;BR /&gt;
      NON EMPTY&lt;BR /&gt;
        { [0D_FC_COUN                    0D_FC_COUN_H001].Members }&lt;BR /&gt;
      DIMENSION PROPERTIES&lt;BR /&gt;
        LEVEL_NUMBER&lt;BR /&gt;
      ON ROWS&lt;BR /&gt;
      FROM&lt;BR /&gt;
        [0D_FC_C02/0D_FC_AE_EOIBV_Q001]&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
Key Figures are selected in the columns, the Country hierarchy is selected in the rows.&lt;BR /&gt;
Additionally the property of the hierarchy level is included in the row dimension.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-566313467"&gt;3. Preparing the MDX Statement for the XMLA call&lt;/H2&gt;&lt;BR /&gt;
The MDX statement needs to be embedded in a xml structure for the web service post request.&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt;    var _sRequest = `&lt;BR /&gt;
    &amp;lt;Execute&amp;gt;&lt;BR /&gt;
      &amp;lt;Command&amp;gt;&lt;BR /&gt;
        &amp;lt;Statement&amp;gt;&lt;BR /&gt;
          ${_sMdx}&lt;BR /&gt;
        &amp;lt;/Statement&amp;gt;&lt;BR /&gt;
        &amp;lt;Properties&amp;gt;&lt;BR /&gt;
          &amp;lt;PropertyList&amp;gt;&lt;BR /&gt;
            &amp;lt;Format&amp;gt;&amp;lt;/Format&amp;gt;&lt;BR /&gt;
          &amp;lt;/PropertyList&amp;gt;&lt;BR /&gt;
        &amp;lt;/Properties&amp;gt;&lt;BR /&gt;
      &amp;lt;/Command&amp;gt;&lt;BR /&gt;
    &amp;lt;/Execute&amp;gt;`;&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
The webservice request will be initialized by the JQuery post request to the endpoint.&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt; $.post("/sap/bw/xml/soap/xmla/Execute",_sRequest , _fProcessData);  &lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId-369799962"&gt;4. Processing the XMLA response&lt;/H2&gt;&lt;BR /&gt;
_fProcessData is the callback Method for processing the response of the request.&lt;BR /&gt;
&lt;BR /&gt;
The response can be analysed in the debugger.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/soap_response.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
From the response, the output in Axis0, Axis1 and CellData is relevant to obtain the MDX data..&lt;BR /&gt;
&lt;BR /&gt;
Axis0 delivers the columns Information about the key figure.&lt;BR /&gt;
The element Caption contains the key figure name in the text node.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/Axis0.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Axis1 contains the rows with the requested attribute of the hierarchy level of the row dimension.&lt;BR /&gt;
The first attribute of the member, here "Hierarchy" contains the technical name of the row column.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/axis1-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Axis 1&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
At first the response for the root element needs to be checked. If this element is not present, it indicates an error present. The error message will be passed in the rejection of the promise.&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt;      var _oRoot = oData.querySelector("ExecuteResponse&amp;gt;return&amp;gt;root")&lt;BR /&gt;
      if(!_oRoot){&lt;BR /&gt;
            debugger;&lt;BR /&gt;
       var _sError =&lt;BR /&gt;
          oData.querySelector("Error")?.getAttribute("Description") || &lt;BR /&gt;
                "undefined Error";&lt;BR /&gt;
 &lt;BR /&gt;
       _fReject(_sError)&lt;BR /&gt;
       return;&lt;BR /&gt;
      }&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
Column nodes will be extracted from the Axis0 and the row nodes from Axis1&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt;_ColumnNodes = _oRoot.querySelectorAll("Axes&amp;gt;[name='Axis0']&amp;gt;Tuples&amp;gt;Tuple");&lt;BR /&gt;
_RowNodes    = _oRoot.querySelectorAll("Axes&amp;gt;[name='Axis1']&amp;gt;Tuples&amp;gt;Tuple");&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
Data nodes are extracted from CellData&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt;_DataNodes =  _oRoot.querySelectorAll("CellData&amp;gt;Cell");&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
The rows of the output table will be determined from the row nodes, including the requested properties like "hierarchy level". We assume that the properties always occur starting from position 6 from the child nodes. If the technical name (remember 1. attribute of Member) contains blanks, replace them with one underscore.&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt;      _RowNodes.forEach(pRow=&amp;gt;{&lt;BR /&gt;
        let _oMemberNodes = pRow.querySelectorAll("Member")&lt;BR /&gt;
        let _aRow = [];&lt;BR /&gt;
        _oMemberNodes.forEach(pMember=&amp;gt;{&lt;BR /&gt;
          let _sName = pMember.attributes[0].value.replace(/\s+/g,"_");&lt;BR /&gt;
          _aRow[_sName] = pMember.querySelector("Caption").textContent;&lt;BR /&gt;
          pMember.querySelectorAll(":nth-child(n+6)")&lt;BR /&gt;
          .forEach(pProperty=&amp;gt;_aRow[_sName+pProperty.nodeName] = pProperty.textContent);                  &lt;BR /&gt;
        })&lt;BR /&gt;
        _aRowName.push(_aRow);&lt;BR /&gt;
      });&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
Keyfigures will be determine by text node of the caption element.&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt;      _ColumnNodes.forEach(pRow=&amp;gt;{&lt;BR /&gt;
        let _oMemberNodes = pRow.querySelectorAll("Member")&lt;BR /&gt;
        _oMemberNodes.forEach(pMember=&amp;gt;{&lt;BR /&gt;
          _aColName.push(pMember.querySelector("Caption").textContent);&lt;BR /&gt;
        })&lt;BR /&gt;
      });&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;SPAN style="font-size: 1rem"&gt;Finally the data has to be divided between the rows and columns&lt;/SPAN&gt;&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt;      _iCntRow = _aRowName.length;      &lt;BR /&gt;
      _iCntCol = _aColName.length;&lt;BR /&gt;
      &lt;BR /&gt;
      _DataNodes.forEach((pData,pIndex)=&amp;gt;{&lt;BR /&gt;
        let _sValue = pData.querySelector("Cell&amp;gt;Value").textContent;&lt;BR /&gt;
        let _iRow = Math.trunc(pIndex / _iCntCol)&lt;BR /&gt;
        let _iCol = pIndex % _iCntCol;&lt;BR /&gt;
        _aRowName[_iRow][_aColName[_iCol]] = _sValue&lt;BR /&gt;
      }); &lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId-173286457"&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId--23227048"&gt;5. Binding the OLAP output to the Datamodel&lt;/H2&gt;&lt;BR /&gt;
As a result a promise is returned. Data from this promise can be bound to the model.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;    this.getMdxData(this.getMdx())&lt;BR /&gt;
    .then(aData=&amp;gt;{&lt;BR /&gt;
      this.getView().getModel("viewModel").setProperty("/mdxData",aData);&lt;BR /&gt;
    })&lt;BR /&gt;
    .catch((oError)=&amp;gt;{&lt;BR /&gt;
      debugger&lt;BR /&gt;
    })&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId--90657834"&gt;5.1 Result of the MDX Query in SAP UI5&lt;/H3&gt;&lt;BR /&gt;
After obtaining data from the XMLA web service, it can be bound directly to a table.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/result.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Final result&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H2 id="toc-hId--416254058"&gt;6. Conclusion&lt;/H2&gt;&lt;BR /&gt;
XMLA enables SAP UI5 developers to benefit from the dynamics of&lt;BR /&gt;
Multidimensional Expressions (MDX).&lt;BR /&gt;
&lt;BR /&gt;
Multidimensional Expressions (MDX) is the query language you use to work with and retrieve multidimensional data. This includes the definition of calculated members, named sets, scoped assignments and key performance indicators (KPIs).&lt;BR /&gt;
&lt;BR /&gt;
MDX offers the flexibility to fetch data, pivot data in dynamic structures based on your needs,&lt;BR /&gt;
without restriction of structured data types in the backend.&lt;BR /&gt;
&lt;BR /&gt;
With MDX you use the flexibility of your multidimensional OLAP queries.&lt;BR /&gt;
&lt;BR /&gt;
Thank you for reading this blog post. I want to encourage you to share your knowlege about SAPUI5 using this tag link &lt;A href="https://answers.sap.com/tags/500983881501772639608291559920477" target="_blank" rel="noopener noreferrer"&gt;https://answers.sap.com/tags/500983881501772639608291559920477&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId--483684844"&gt;Appendix: Project Code&lt;/H3&gt;&lt;BR /&gt;
Three files are required to test the project_&lt;BR /&gt;
&lt;BR /&gt;
zxmla/index.html&lt;BR /&gt;
zxmla/Test.view.xml&lt;BR /&gt;
zxmla/Test.controller.xml&lt;BR /&gt;
&lt;PRE class="language-markup"&gt;&lt;CODE&gt;File: zxmla/index.html&lt;BR /&gt;
&lt;BR /&gt;
&amp;lt;!DOCTYPE html&amp;gt;&lt;BR /&gt;
&amp;lt;html&amp;gt;&lt;BR /&gt;
   &amp;lt;head&amp;gt;&lt;BR /&gt;
      &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;&lt;BR /&gt;
      &amp;lt;meta charset="utf-8"&amp;gt;&lt;BR /&gt;
      &amp;lt;title&amp;gt;XMLA-Test&amp;lt;/title&amp;gt;&lt;BR /&gt;
      &amp;lt;script&lt;BR /&gt;
      &lt;BR /&gt;
         id="sap-ui-bootstrap"&lt;BR /&gt;
         src="resources/sap-ui-core.js" &lt;BR /&gt;
         data-sap-ui-theme="sap_bluecrystal"&lt;BR /&gt;
         data-sap-ui-libs="sap.m"&lt;BR /&gt;
         data-sap-ui-compatVersion="edge"&lt;BR /&gt;
         data-sap-ui-preload="async"         &lt;BR /&gt;
         data-sap-ui-resourceroots='{&lt;BR /&gt;
            "zxmla": "./"&lt;BR /&gt;
         }' &amp;gt;&lt;BR /&gt;
      &amp;lt;/script&amp;gt;&lt;BR /&gt;
      &amp;lt;script&amp;gt;&lt;BR /&gt;
         sap.ui.getCore().attachInit(function () {&lt;BR /&gt;
            sap.ui.xmlview({&lt;BR /&gt;
               viewName : "zxmla.Test"&lt;BR /&gt;
            }).placeAt("content");&lt;BR /&gt;
         });&lt;BR /&gt;
      &amp;lt;/script&amp;gt;&lt;BR /&gt;
   &amp;lt;/head&amp;gt;&lt;BR /&gt;
   &amp;lt;body class="sapUiBody" id="content"&amp;gt;&lt;BR /&gt;
   &amp;lt;/body&amp;gt;&lt;BR /&gt;
&amp;lt;/html&amp;gt;&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;PRE class="language-markup"&gt;&lt;CODE&gt;File: zxmla/Test.view.xml&lt;BR /&gt;
&lt;BR /&gt;
&amp;lt;core:View xmlns:core="sap.ui.core" xmlns:mvc="sap.ui.core.mvc" &lt;BR /&gt;
   xmlns="sap.m"&lt;BR /&gt;
   controllerName="zxmla.Test"&amp;gt;&lt;BR /&gt;
&lt;BR /&gt;
  &amp;lt;Table id="idProductsTable" items="{viewModel&amp;gt;/mdxData}"&amp;gt;&lt;BR /&gt;
    &amp;lt;headerToolbar&amp;gt;&lt;BR /&gt;
      &amp;lt;Toolbar&amp;gt;&lt;BR /&gt;
        &amp;lt;content&amp;gt;&lt;BR /&gt;
          &amp;lt;Title text="Products" level="H2"/&amp;gt;&lt;BR /&gt;
          &amp;lt;ToolbarSpacer /&amp;gt;&lt;BR /&gt;
         &amp;lt;Button text="Go" press=".onPress"/&amp;gt;&lt;BR /&gt;
        &amp;lt;/content&amp;gt;&lt;BR /&gt;
      &amp;lt;/Toolbar&amp;gt;&lt;BR /&gt;
    &amp;lt;/headerToolbar&amp;gt;&lt;BR /&gt;
    &amp;lt;columns&amp;gt;&lt;BR /&gt;
      &amp;lt;Column&amp;gt;&amp;lt;Text text="Level" /&amp;gt;&amp;lt;/Column&amp;gt;&lt;BR /&gt;
      &amp;lt;Column&amp;gt;&amp;lt;Text text="Land" /&amp;gt;&amp;lt;/Column&amp;gt;&lt;BR /&gt;
      &amp;lt;Column&amp;gt;&amp;lt;Text text="konsolidiertes Netto" /&amp;gt;&amp;lt;/Column&amp;gt;&lt;BR /&gt;
      &amp;lt;Column&amp;gt;&amp;lt;Text text="netto Umsatz" /&amp;gt;&amp;lt;/Column&amp;gt;&lt;BR /&gt;
    &amp;lt;/columns&amp;gt;&lt;BR /&gt;
    &amp;lt;items&amp;gt;&lt;BR /&gt;
      &amp;lt;ColumnListItem&amp;gt;&lt;BR /&gt;
        &amp;lt;cells&amp;gt;&lt;BR /&gt;
           &amp;lt;Text text="{viewModel&amp;gt;0D_FC_COUN_0D_FC_COUN_H001LEVEL_NUMBER}" /&amp;gt;&lt;BR /&gt;
           &amp;lt;Text text="{viewModel&amp;gt;0D_FC_COUN_0D_FC_COUN_H001}" /&amp;gt;&lt;BR /&gt;
           &amp;lt;Text text="{viewModel&amp;gt;Konsolidierter Netto}" /&amp;gt;&lt;BR /&gt;
           &amp;lt;Text text="{viewModel&amp;gt;Nettoumsatz}" /&amp;gt;&lt;BR /&gt;
        &amp;lt;/cells&amp;gt;&lt;BR /&gt;
      &amp;lt;/ColumnListItem&amp;gt;&lt;BR /&gt;
    &amp;lt;/items&amp;gt;&lt;BR /&gt;
  &amp;lt;/Table&amp;gt;&lt;BR /&gt;
&amp;lt;/core:View&amp;gt;&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;File: zxmla/Test.controller.js&lt;BR /&gt;
&lt;BR /&gt;
sap.ui.define([&lt;BR /&gt;
     "sap/ui/core/mvc/Controller",&lt;BR /&gt;
    "sap/ui/model/json/JSONModel"&lt;BR /&gt;
  ], function(Controller, JSONModel) {&lt;BR /&gt;
  "use strict";&lt;BR /&gt;
  &lt;BR /&gt;
  return Controller.extend("zxmla.Test", {&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
  onInit: function() { &lt;BR /&gt;
    var _oModel = new JSONModel({mdxData: []});&lt;BR /&gt;
    this.getView().setModel(_oModel, "viewModel");&lt;BR /&gt;
  },&lt;BR /&gt;
  &lt;BR /&gt;
  onPress: function(oEvent){&lt;BR /&gt;
    this.getMdxData(this.getMdx())&lt;BR /&gt;
    .then(aData=&amp;gt;{&lt;BR /&gt;
       debugger&lt;BR /&gt;
      this.getView().getModel("viewModel").setProperty("/mdxData",aData);&lt;BR /&gt;
&lt;BR /&gt;
    })&lt;BR /&gt;
    .catch((oError)=&amp;gt;{&lt;BR /&gt;
      debugger&lt;BR /&gt;
    })&lt;BR /&gt;
  },&lt;BR /&gt;
 getMdxData: function(sMdx){&lt;BR /&gt;
    var _fResolve, _fReject, &lt;BR /&gt;
        _oPromise = new Promise((resolve,reject)=&amp;gt;{&lt;BR /&gt;
        _fResolve = resolve;&lt;BR /&gt;
        _fReject = reject;&lt;BR /&gt;
        });&lt;BR /&gt;
    var _sMdx = this.getMdx();&lt;BR /&gt;
    var _sRequest = `&lt;BR /&gt;
    &amp;lt;Execute&amp;gt;&lt;BR /&gt;
      &amp;lt;Command&amp;gt;&lt;BR /&gt;
        &amp;lt;Statement&amp;gt;&lt;BR /&gt;
          ${_sMdx}&lt;BR /&gt;
        &amp;lt;/Statement&amp;gt;&lt;BR /&gt;
        &amp;lt;Properties&amp;gt;&lt;BR /&gt;
          &amp;lt;PropertyList&amp;gt;&lt;BR /&gt;
            &amp;lt;Format&amp;gt;&amp;lt;/Format&amp;gt;&lt;BR /&gt;
          &amp;lt;/PropertyList&amp;gt;&lt;BR /&gt;
        &amp;lt;/Properties&amp;gt;&lt;BR /&gt;
      &amp;lt;/Command&amp;gt;&lt;BR /&gt;
    &amp;lt;/Execute&amp;gt;`;&lt;BR /&gt;
    &lt;BR /&gt;
    var _fProcessData = function(oData, sStatus){&lt;BR /&gt;
    &lt;BR /&gt;
      var _oRoot = oData.querySelector("ExecuteResponse&amp;gt;return&amp;gt;root")&lt;BR /&gt;
      if(!_oRoot){&lt;BR /&gt;
            debugger;&lt;BR /&gt;
       var _sError =&lt;BR /&gt;
          oData.querySelector("Error")?.getAttribute("Description") || &lt;BR /&gt;
                "undefined Error";&lt;BR /&gt;
 &lt;BR /&gt;
       _fReject(_sError)&lt;BR /&gt;
       return;&lt;BR /&gt;
      }&lt;BR /&gt;
&lt;BR /&gt;
      var _aColName = [], _iCntRow = 0, _iCntCol = 0;&lt;BR /&gt;
      var _aRowName = []&lt;BR /&gt;
      var _ColumnNodes =&lt;BR /&gt;
        _oRoot.querySelectorAll("Axes&amp;gt;[name='Axis0']&amp;gt;Tuples&amp;gt;Tuple")&lt;BR /&gt;
      var _RowNodes = &lt;BR /&gt;
        _oRoot.querySelectorAll("Axes&amp;gt;[name='Axis1']&amp;gt;Tuples&amp;gt;Tuple")&lt;BR /&gt;
      var _DataNodes =  _oRoot.querySelectorAll("CellData&amp;gt;Cell")&lt;BR /&gt;
    &lt;BR /&gt;
      _RowNodes.forEach(pRow=&amp;gt;{&lt;BR /&gt;
        let _oMemberNodes = pRow.querySelectorAll("Member")&lt;BR /&gt;
        let _aRow = [];&lt;BR /&gt;
        _oMemberNodes.forEach(pMember=&amp;gt;{&lt;BR /&gt;
          let _sName = pMember.attributes[0].value.replace(/\s+/g,"_");&lt;BR /&gt;
          _aRow[_sName] = pMember.querySelector("Caption").textContent;&lt;BR /&gt;
          pMember.querySelectorAll(":nth-child(n+6)")&lt;BR /&gt;
          .forEach(pProperty=&amp;gt;_aRow[_sName+pProperty.nodeName] = pProperty.textContent);                  &lt;BR /&gt;
        })&lt;BR /&gt;
        _aRowName.push(_aRow);&lt;BR /&gt;
      });&lt;BR /&gt;
&lt;BR /&gt;
      _ColumnNodes.forEach(pRow=&amp;gt;{&lt;BR /&gt;
        let _oMemberNodes = pRow.querySelectorAll("Member")&lt;BR /&gt;
        _oMemberNodes.forEach(pMember=&amp;gt;{&lt;BR /&gt;
          _aColName.push(pMember.querySelector("Caption").textContent);&lt;BR /&gt;
        })&lt;BR /&gt;
      });&lt;BR /&gt;
      &lt;BR /&gt;
      _iCntRow = _aRowName.length;      &lt;BR /&gt;
      _iCntCol = _aColName.length;&lt;BR /&gt;
      &lt;BR /&gt;
      _DataNodes.forEach((pData,pIndex)=&amp;gt;{&lt;BR /&gt;
        let _sValue = pData.querySelector("Cell&amp;gt;Value").textContent;&lt;BR /&gt;
        let _iRow = Math.trunc(pIndex / _iCntCol)&lt;BR /&gt;
        let _iCol = pIndex % _iCntCol;&lt;BR /&gt;
        _aRowName[_iRow][_aColName[_iCol]] = _sValue&lt;BR /&gt;
      }); &lt;BR /&gt;
      debugger&lt;BR /&gt;
      _fResolve(_aRowName)&lt;BR /&gt;
      // check _aRowName&lt;BR /&gt;
    };&lt;BR /&gt;
  &lt;BR /&gt;
  $.post("/sap/bw/xml/soap/xmla/Execute",_sRequest , _fProcessData);  &lt;BR /&gt;
  return _oPromise  &lt;BR /&gt;
  },&lt;BR /&gt;
    &lt;BR /&gt;
  getMdx: function(){&lt;BR /&gt;
    var _sMdx =&lt;BR /&gt;
    `SELECT&lt;BR /&gt;
      NON EMPTY&lt;BR /&gt;
        { [48CSWO6CA6TXXHDU2Q35OLJW0].Members }&lt;BR /&gt;
      ON COLUMNS,&lt;BR /&gt;
      NON EMPTY&lt;BR /&gt;
        { [0D_FC_COUN                    0D_FC_COUN_H001].Members }&lt;BR /&gt;
      DIMENSION PROPERTIES&lt;BR /&gt;
        LEVEL_NUMBER&lt;BR /&gt;
      ON ROWS&lt;BR /&gt;
      FROM&lt;BR /&gt;
        [0D_FC_C02/0D_FC_AE_EOIBV_Q001]`&lt;BR /&gt;
     return  _sMdx;&lt;BR /&gt;
  }&lt;BR /&gt;
&lt;BR /&gt;
  });&lt;BR /&gt;
});&lt;/CODE&gt;&lt;/PRE&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/obtaining-mdx-data-in-sapui5-via-xmla/ba-p/13524695"/>
    <published>2022-02-12T15:06:04+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/embedded-analytics-with-abap-cloud-the-multidimensional-cube-part-2/ba-p/13554045</id>
    <title>Embedded Analytics with ABAP Cloud – The Multidimensional Cube (Part 2)</title>
    <updated>2023-03-31T03:23:36+02:00</updated>
    <author>
      <name>fabianfellhauer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/354017</uri>
    </author>
    <content>&lt;SPAN data-contrast="auto"&gt;Cheers ABAP folks!&lt;/SPAN&gt;&lt;SPAN data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN data-contrast="auto"&gt;The multidimensional cube view is the heart of the analytical model in ABAP CDS. In this blog post, I want to give you an insight into the modeling patterns of analytical cube views and their role within the ABAP Application Server.&lt;/SPAN&gt;&lt;SPAN data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN data-contrast="auto"&gt;New to analytics? Then I urgently recommend that you read the previous part of this blog post series:&lt;/SPAN&gt; &lt;A style="font-size: 1rem" href="https://blogs.sap.com/2022/11/30/embedded-analytics-with-abap-cloud-a-brief-overview-part-1/" target="_blank" rel="noopener noreferrer"&gt;Embedded Analytics with ABAP Cloud – A Brief Overview (Part 1)&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H1 id="toc-hId-833022400"&gt;What Is a Multidimensional Cube?&lt;/H1&gt;&lt;BR /&gt;
&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt;A multidimensional cube &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt;view&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt; spans up all the dimensions&lt;/SPAN&gt;&amp;nbsp;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt;that &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt;exist for a specific data set &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt;to&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt; which an analytical reporting is applied. A sales order, for example, may contain dimensional attributes &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt;such as&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt; an order date, an associated product, as well as a business partner reference. Querying the multidimensional cube with &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt;parameterization of specific&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt; dimensions returns an aggregated result for the matching cells &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt;that&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt; represent a measure, &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun ContextualSpellingAndGrammarErrorV2Themed SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt;e.g.&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt; the turnover, in the multi&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt;-&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW180760360 BCX0" data-ccp-parastyle="Normal (Web)"&gt;dimensional model:&lt;/SPAN&gt;&lt;BR /&gt;
&lt;PRE&gt;&lt;CODE&gt;f(Dimension 1, Dimension 2, Dimension 3) -&amp;gt; Measure&lt;BR /&gt;
&lt;BR /&gt;
Example: f('Targot Corp.', '2023-02-25', 'Lemonade') -&amp;gt; turnover of this particular company&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/Cube-Pruning.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW127570977 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW127570977 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Pruning single dimensions &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW127570977 BCX0" data-ccp-parastyle="Normal (Web)"&gt;whe&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW127570977 BCX0" data-ccp-parastyle="Normal (Web)"&gt;n&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW127570977 BCX0" data-ccp-parastyle="Normal (Web)"&gt; querying a multidimensional data set leads to the aggregation of the pruned dimension:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW127570977 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;PRE&gt;&lt;CODE&gt;f(Dimension 2, Dimension 3) -&amp;gt; Aggregation of Measure over Dimension 1&lt;BR /&gt;
&lt;BR /&gt;
Example: f('2023-02-25', 'Lemonade') -&amp;gt; sum of turnovers of all companies&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW142908008 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Based on &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt;th&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt;is&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt;, a multidimensional cube always provides the overall data basis for your analytical reporting&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt;.&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt; This &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt;can&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt; include &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt;defini&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt;ng&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt; foreign key relationships to dimensions based on dimensional attributes for further data exploration, defaulting for aggregations, &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt;and defining&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW142908008 BCX0" data-ccp-parastyle="Normal (Web)"&gt; text relationships for labeling your attributes.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW142908008 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;H1 id="toc-hId-636508895"&gt;Multidimensional Reporting on Transactional Data&lt;/H1&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW147682123 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Ok, enough theor&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;y&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;. Let’s get concrete: Imagine &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;you run&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; a company&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; that&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; ships soft drinks to &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;retailers,&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; and &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;you have&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; the following given transactional data model: A sales order is defined &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;at the&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; header level with references to the paying business partner, the business partner to &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;whom&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; the products &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;are&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; to be shipped&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;,&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;and an order date. &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;In addition&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;, each sales order &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;can&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; consist of multiple sales order items&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; that&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; have priced products, as well as a quantity assigned. Additionally, each sales order &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;must&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; be paid&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; for&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;. All&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; these&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; details are represented by different CDS &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;e&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt;ntities&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; that are&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW147682123 BCX0" data-ccp-parastyle="Normal (Web)"&gt; linked by a relational data model.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW147682123 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/Transactional-Model.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;The Transactional Model - Represented as Relational Data Model&lt;/P&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW30825004 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt;In the corresponding transactional UI service, all &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt;this &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt;relational data is properly &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt;joined&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt; so the transactional business user can &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt;quickly act&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt; on specific sales orders. However, &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt;it&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt; seems &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt;a bit&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt; challenging &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt;to get a summary of last quarter’s &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt;sales &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt;with this data representation, &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt;doesn’t&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW30825004 BCX0" data-ccp-parastyle="Normal (Web)"&gt; it?&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW30825004 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/Transactional-UI.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;The Transactional Model - User Interface&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H1 id="toc-hId-439995390"&gt;Preparing your Data Model Is Key&lt;/H1&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW220625224 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW220625224 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Therefore, &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW220625224 BCX0" data-ccp-parastyle="Normal (Web)"&gt;it is recommended that you &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW220625224 BCX0" data-ccp-parastyle="Normal (Web)"&gt;prepare&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW220625224 BCX0" data-ccp-parastyle="Normal (Web)"&gt; your transactional data model before building an analytical model on top of it. I’ll show you how to do &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW220625224 BCX0" data-ccp-parastyle="Normal (Web)"&gt;this&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW220625224 BCX0" data-ccp-parastyle="Normal (Web)"&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW220625224 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId-372564604"&gt;Identify Relevant Data Sources&lt;/H2&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW225269429 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt;First, ask yourself: What are the relevant &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt;metrics&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt; that I want to report &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt;on to best run&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt; my business? In our current transactional sales order model&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt;, there are several possible&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt; analytical use cases. Let’s focus on reporting &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt;on &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt;the &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt;revenue&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt; of sales order items&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt; sold&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt; and&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt; the payment &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt;history&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt;. The following relational CDS &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt;e&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW225269429 BCX0" data-ccp-parastyle="Normal (Web)"&gt;ntities are involved in this reporting:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW225269429 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Sales Order Item(s)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Payment(s)&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId-176051099"&gt;Identify Relevant Relationships&lt;/H2&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW260562778 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Isolated reporting on th&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;e&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;se CDS &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;e&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;ntities would be easy to &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;implement but&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt; wouldn’t provide &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;much value to&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt; our business. Therefore, it's essential to identify the relevant relationships between th&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;e&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;se CDS &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;e&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;ntities and to take CDS &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;e&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;ntities in between into the reporting scope. The following CDS &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;e&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW260562778 BCX0" data-ccp-parastyle="Normal (Web)"&gt;ntity is added to our reporting scope:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW260562778 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Sales Order(s)&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId--20462406"&gt;Span up Multidimensional Data Basis&lt;/H2&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW204985564 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Working &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;at&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt; a conceptual level is &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;certainly&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt; fun for all &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;the &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;theorists out there. However, at this point we need to hit the keys and span up our multidimensional data model&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;directly on&lt;/SPAN&gt; &lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;to&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;p of&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;our relational data model. &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;To do &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;this&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;, it's important to&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW204985564 BCX0" data-ccp-parastyle="Normal (Web)"&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW204985564 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Preserve the unique keys across all involved CDS entities&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Unite your measure-based data sets by using UNIONs in CDS entities&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Resolve to-many-relationships by denormalization via dimension-based relations&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW12841610 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW12841610 BCX0" data-ccp-parastyle="Normal (Web)"&gt;In our example, the plain multidimensional data basis could be achieved with the following implementation of a CDS &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW12841610 BCX0" data-ccp-parastyle="Normal (Web)"&gt;e&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW12841610 BCX0" data-ccp-parastyle="Normal (Web)"&gt;ntity:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW12841610 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;PRE class="language-sql"&gt;&lt;CODE&gt;@EndUserText.label: 'Sales Order Cube Basis'&lt;BR /&gt;
define view entity P_DD_TSM_ANA_SALESORDER&lt;BR /&gt;
as select from sdd_tsm_ana_soi                 as SalesOrderItem&lt;BR /&gt;
   left outer join SDD_TSM_ANA_SO              as SalesOrder&lt;BR /&gt;
     on SalesOrder.sales_order_id = SalesOrderItem.sales_order_id&lt;BR /&gt;
&lt;BR /&gt;
{&lt;BR /&gt;
  key SalesOrder.sales_order_id                  as SalesOrder,&lt;BR /&gt;
  key SalesOrderItem.sales_order_item_id         as SalesOrderItem,&lt;BR /&gt;
  key abap.raw'00000000000000000000000000000000' as Payment&lt;BR /&gt;
}&lt;BR /&gt;
&lt;BR /&gt;
union all select from SDD_TSM_ANA_PAYM         as Payment&lt;BR /&gt;
left outer join     SDD_TSM_ANA_SO             as SalesOrder&lt;BR /&gt;
   on SalesOrder.sales_order_id = Payment.sales_order&lt;BR /&gt;
&lt;BR /&gt;
{&lt;BR /&gt;
  key SalesOrder.sales_order_id                  as SalesOrder,&lt;BR /&gt;
  key abap.raw'00000000000000000000000000000000' as SalesOrderItem,&lt;BR /&gt;
  key Payment.payment_id                         as Payment&lt;BR /&gt;
}&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW255917638 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt;This CDS &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun CommentStart SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt;v&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt;iew &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt;helps to span up the data basis for our multidimensional reporting. &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Proper key&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt; handling is essential here. Further attributes &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt;can&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt; be added later in the cube again. Key elements &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt;that do &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt;not &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt;bel&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt;o&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt;ng&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW255917638 BCX0" data-ccp-parastyle="Normal (Web)"&gt; to the reported data set are initialized with corresponding default values. The result of a data preview should then look like the following picture:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW255917638 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/Data-Preview.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Data preview of the cubes data basis&lt;/P&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW101775143 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW101775143 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Each data record contains a reference to &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW101775143 BCX0" data-ccp-parastyle="Normal (Web)"&gt;either&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW101775143 BCX0" data-ccp-parastyle="Normal (Web)"&gt; a concrete sales order item or to a concrete payment. &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW101775143 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Each record also contains a reference to a specific &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW101775143 BCX0" data-ccp-parastyle="Normal (Web)"&gt;sales order header.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW101775143 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H1 id="toc-hId--346058630"&gt;Slice and Dice Your Cube&lt;/H1&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW154017958 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;After &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;preparing&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt; our data basis, we now have a fine&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;-&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;granular reporting of all available data records&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt; that&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt; can be aggregated &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;safely&lt;/SPAN&gt; &lt;SPAN class="NormalTextRun SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;by the HANA engine without counting any measure twice. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="TextRun SCXW154017958 BCX0" lang="DE-DE" lang="DE-DE" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SpellingErrorV2Themed SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;To&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt; design a multidimensional &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SpellingErrorV2Themed SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;cube&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;, &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SpellingErrorV2Themed SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;we&lt;/SPAN&gt; &lt;SPAN class="NormalTextRun SpellingErrorV2Themed SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;now&lt;/SPAN&gt; &lt;SPAN class="NormalTextRun SpellingErrorV2Themed SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;need&lt;/SPAN&gt; &lt;SPAN class="NormalTextRun SpellingErrorV2Themed SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;to&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW154017958 BCX0" data-ccp-parastyle="Normal (Web)"&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW154017958 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Classify the cube view as such&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Introduce measures, which are used for aggregations&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Introduce dimensions, which are used for grouping based on drilldowns&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId--413489416"&gt;Definition of a Cube&lt;/H2&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW117564020 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt;The cube simply selects from our prepared data model and creates joins&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt; to&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt; the &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt;original&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt; data sources &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt;to access&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt; further attributes. Don’t worry about performance: &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Th&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt;e&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt;se&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt; additional joins are optimized by the HANA engine anyway. Just &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt;be&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt; sure to flag your cube with the annotation &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="TextRun SCXW117564020 BCX0" lang="EN-US" style="color: #3366ff" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/15206"&gt;@analytics&lt;/a&gt;.dataCategory: #CUBE&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="TextRun SCXW117564020 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW117564020 BCX0" data-ccp-parastyle="Normal (Web)"&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW117564020 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId--610002921"&gt;Measures&lt;/H2&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW263236811 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW263236811 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Next, add all measure-like fields to your cube&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW263236811 BCX0" data-ccp-parastyle="Normal (Web)"&gt; that&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW263236811 BCX0" data-ccp-parastyle="Normal (Web)"&gt; you're interested in for your analytical reporting. Measures are identified by their numeric data type, as well as by their capability to be &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW263236811 BCX0" data-ccp-parastyle="Normal (Web)"&gt;aggregated by&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW263236811 BCX0" data-ccp-parastyle="Normal (Web)"&gt; default, also called standard aggregation. This property can be set with &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW263236811 BCX0" data-ccp-parastyle="Normal (Web)"&gt;the&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW263236811 BCX0" data-ccp-parastyle="Normal (Web)"&gt; annotation &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="TextRun SCXW263236811 BCX0" lang="EN-US" style="color: #3366ff" lang="EN-US" data-contrast="none"&gt;&lt;SPAN class="NormalTextRun SCXW263236811 BCX0" data-ccp-parastyle="Normal (Web)"&gt;@Aggregation.default&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="TextRun SCXW263236811 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW263236811 BCX0" data-ccp-parastyle="Normal (Web)"&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW263236811 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
Please consider the following recommendations for measures:&lt;BR /&gt;
&lt;TABLE style="border-collapse: collapse;width: 100%" border="1"&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 6.48%;height: 14px"&gt;&lt;SPAN style="color: #339966"&gt;&lt;STRONG&gt;Do&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 93.52%;height: 14px"&gt;Measures should be added to the cube if aggregated reporting is required for them.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 6.48%;height: 14px"&gt;&lt;SPAN style="color: #339966"&gt;&lt;STRONG&gt;Do&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 93.52%;height: 14px"&gt;Aggregations are defined on element level for measures only.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 6.48%;height: 14px"&gt;&lt;SPAN style="color: #339966"&gt;&lt;STRONG&gt;Do&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 93.52%;height: 14px"&gt;Aggregations are defined with annotation &lt;SPAN style="color: #3366ff"&gt;@Aggregation.default&lt;/SPAN&gt;.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 6.48%;height: 14px"&gt;&lt;SPAN style="color: #339966"&gt;&lt;STRONG&gt;Do&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 93.52%;height: 14px"&gt;Supported default aggregations on cube level are #SUM, #MIN, #MAX. Other aggregations need to be defined in concrete analytical queries.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 6.48%;height: 14px"&gt;&lt;SPAN style="color: #800000"&gt;&lt;STRONG&gt;Don't&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 93.52%;height: 14px"&gt;Calculated measures based on formulas shouldn't be introduced in the cube, but in the analytical query on top.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;/TABLE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId--806516426"&gt;Dimensions&lt;/H2&gt;&lt;BR /&gt;
&lt;SPAN data-contrast="auto"&gt;To fine-tune your reporting, it is mandatory to define dimensions in your cube, for example, to group aggregated measures based on the characteristics of a data record. Dimensions are modeled either as foreign key fields, such as a business partner ID, or as pure attribute, such as an order date. Foreign key fields should also be linked via an association to the corresponding dimension view to span up the analytical star schema around your cube. This gives you further possibilities to deep dive into your analytical model at the query level.&lt;/SPAN&gt;&lt;SPAN data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN data-contrast="auto"&gt;Please consider the following recommendations for dimensions:&lt;/SPAN&gt;&lt;SPAN data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;TABLE style="border-collapse: collapse;width: 100%" border="1"&gt;&lt;BR /&gt;
&lt;TBODY&gt;&lt;BR /&gt;
&lt;TR style="height: 28px"&gt;&lt;BR /&gt;
&lt;TD style="width: 5.68%;height: 28px"&gt;&lt;SPAN style="color: #339966"&gt;&lt;STRONG&gt;Do&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 94.32%;height: 28px"&gt;&lt;SPAN class="TextRun SCXW251117459 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW251117459 BCX0"&gt;Dimensions should be added to the cube if drill downs &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW251117459 BCX0"&gt;are to&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW251117459 BCX0"&gt; be applied&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW251117459 BCX0"&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW251117459 BCX0" data-ccp-props="{&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:259}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 5.68%;height: 14px"&gt;&lt;SPAN style="color: #339966"&gt;&lt;STRONG&gt;Do&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 94.32%;height: 14px"&gt;Dimensions may be represented by a dedicated dimension view associated with your cube.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;TR style="height: 14px"&gt;&lt;BR /&gt;
&lt;TD style="width: 5.68%;height: 14px"&gt;&lt;SPAN style="color: #339966"&gt;&lt;STRONG&gt;Do&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;BR /&gt;
&lt;TD style="width: 94.32%;height: 14px"&gt;Be sure to link such an association with annotation &lt;SPAN style="color: #3366ff"&gt;@ObjectModel.foreignKey.association&lt;/SPAN&gt;.&lt;/TD&gt;&lt;BR /&gt;
&lt;/TR&gt;&lt;BR /&gt;
&lt;/TBODY&gt;&lt;BR /&gt;
&lt;/TABLE&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId--655775574"&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId--852289079"&gt;Special Case: Dimeasures&lt;/H2&gt;&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW25633379 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;There &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;may &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;be use cases&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt; where&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt; some attributes need to represent a measure in one analytical reporting, but &lt;/SPAN&gt; &lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;also&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt; a dimension in another one. Ok – I’&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;ll be&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt; honest – &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SpellingErrorV2Themed SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Dimeasure&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt; is&lt;/SPAN&gt; &lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;n&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;o&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;t an official term, but I think you know what I mean, right?&lt;/SPAN&gt; &lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;Like &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;calculating the average response time of incident processing based on a timestamp field, as well as using the same timestamp field for grouping the results &lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;by&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt; month. In such a case, make sure to simply introduce the field&lt;/SPAN&gt; &lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;twice in&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt; your cube view&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;. One with a measure-like flavor, the other one with a dimension&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;-&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW25633379 BCX0" data-ccp-parastyle="Normal (Web)"&gt;like flavor.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class="EOP SCXW25633379 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId--1048802584"&gt;TL;DR – Just Give Me Some Coding&lt;/H2&gt;&lt;BR /&gt;
The result of an analytical cube could look like the following:&lt;BR /&gt;
&lt;PRE class="language-sql"&gt;&lt;CODE&gt;@Analytics.dataCategory: #CUBE&lt;BR /&gt;
define view entity I_DD_TSM_ANA_SALESORDERCUBE&lt;BR /&gt;
  as select from   P_DD_TSM_ANA_SALESORDER          as SalesOrder&lt;BR /&gt;
&lt;BR /&gt;
    left outer join I_DD_TSM_ANA_SALESORDERITEM     as SalesOrderItem&lt;BR /&gt;
       on SalesOrder.SalesOrderItem = SalesOrderItem.SalesOrderItemId&lt;BR /&gt;
&lt;BR /&gt;
    left outer join I_DD_TSM_ANA_PAYMENT            as Payment      &lt;BR /&gt;
       on SalesOrder.Payment        = Payment.PaymentId&lt;BR /&gt;
&lt;BR /&gt;
    association [0..1] to I_DD_TSM_ANA_BUPA         as _Buyer                      &lt;BR /&gt;
       on $projection.Buyer         = _Buyer.BupaId&lt;BR /&gt;
&lt;BR /&gt;
{&lt;BR /&gt;
&lt;BR /&gt;
  key SalesOrder.SalesOrder,&lt;BR /&gt;
  key SalesOrder.SalesOrderItem,&lt;BR /&gt;
  key SalesOrder.Payment,&lt;BR /&gt;
      SalesOrder.OrderDate,&lt;BR /&gt;
&lt;BR /&gt;
    @Aggregation.default: #SUM&lt;BR /&gt;
    @Semantics.amount.currencyCode: 'ItemCurrency'&lt;BR /&gt;
    SalesOrderItem.amount                           as ItemAmount,&lt;BR /&gt;
    SalesOrderItem.currency                         as ItemCurrency,&lt;BR /&gt;
&lt;BR /&gt;
    @Aggregation.default: #MAX&lt;BR /&gt;
    Payment.PaymentDueDate                          as PaymentDueDate,&lt;BR /&gt;
    @Aggregation.default: #MAX&lt;BR /&gt;
    Payment.PaymentDate                             as PaymentDate,&lt;BR /&gt;
&lt;BR /&gt;
    Payment.PaymentMethod                           as PaymentMethod,&lt;BR /&gt;
&lt;BR /&gt;
    @Aggregation.default: #SUM&lt;BR /&gt;
    @Semantics.amount.currencyCode: 'PaymentCurrency'&lt;BR /&gt;
    Payment.PaymentAmount                           as PaymentAmount,&lt;BR /&gt;
    Payment.PaymentCurrency                         as PaymentCurrency,&lt;BR /&gt;
&lt;BR /&gt;
    @ObjectModel.foreignKey.association: '_Buyer'&lt;BR /&gt;
    SalesOrder.Buyer,&lt;BR /&gt;
&lt;BR /&gt;
    _Buyer&lt;BR /&gt;
}&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H1 id="toc-hId--951913082"&gt;Great – But Where’s My Fancy Analytical Reporting?&lt;/H1&gt;&lt;BR /&gt;
&lt;SPAN data-contrast="auto"&gt;I love your excitement! Building a dedicated CDS Analytical Query on top of our cube will be the next step – in the next part of this series. So, stay tuned!&lt;/SPAN&gt;&lt;SPAN data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN data-contrast="auto"&gt;Ok – I just can’t leave you behind with such a spoiler. Here's a preview of what an analytical reporting could look like when accessed via SAP Analytics Cloud.&lt;/SPAN&gt;&lt;SPAN data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic;overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/Analytical-Preview-SAC-2.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Analytical Story in SAP Analytics Cloud (SAC)&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Don't forget to checkout further material:&lt;BR /&gt;
&lt;BR /&gt;
Developer Guide: &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/analytical-data-modeling" target="_blank" rel="noopener noreferrer"&gt;Analytical Data Modeling&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Cheerio ABAP folks!</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/embedded-analytics-with-abap-cloud-the-multidimensional-cube-part-2/ba-p/13554045"/>
    <published>2023-03-31T03:23:36+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-native-hana-procedure-to-create-and-populate-a-transpose-table/ba-p/13574828</id>
    <title>SAP Native HANA Procedure to Create and Populate a Transpose Table</title>
    <updated>2023-08-08T18:16:56+02:00</updated>
    <author>
      <name>pavani_sappati6</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/870399</uri>
    </author>
    <content>&lt;H2 id="toc-hId-963959790"&gt;Scenario:&lt;/H2&gt;&lt;BR /&gt;
The scenario is to transpose a table by a single transpose column and populate the new table with the data.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;PRODUCT_DATA:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/08/Product_data.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;PRODUCT_TRANSPOSE:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/08/Product_transpose.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-767446285"&gt;&lt;STRONG&gt;Solution Approach:&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
The solution is to create the dynamic SQL statement as below which combines both creation and population of data into one step, where the bolded parts of the statement are dynamically created.&lt;BR /&gt;
&lt;PRE class="language-sql"&gt;&lt;CODE&gt;Create table Product_transpose as (        &lt;BR /&gt;
&lt;BR /&gt;
    SELECT Product, Large,Small,Medium FROM (  &lt;BR /&gt;
&lt;BR /&gt;
SELECT Product,&lt;BR /&gt;
&lt;BR /&gt;
MAX(CASE WHEN Product_Type = 'Large' THEN Unit_Price END) AS   Large,&lt;BR /&gt;
&lt;BR /&gt;
MAX(CASE WHEN Product_Type = 'Small' THEN Unit_Price END) AS Small,&lt;BR /&gt;
&lt;BR /&gt;
MAX(CASE WHEN Product_Type = 'Medium' THEN Unit_Price END) AS Medium&lt;BR /&gt;
&lt;BR /&gt;
From Product_data&lt;BR /&gt;
&lt;BR /&gt;
Group By Product ))&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
First two statements are to create the table Product_transpose with the desired columns.&lt;BR /&gt;
&lt;BR /&gt;
The inner select statement reads the data from product_data by transposing it as below.&lt;BR /&gt;
&lt;H2 id="toc-hId-570932780"&gt;&lt;STRONG&gt;&lt;U&gt;Solution:&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId-503501994"&gt;&lt;STRONG&gt;Step1:&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
First, we will use the SQL function “STRING_AGG”, to get the distinct values in the transpose column.&lt;BR /&gt;
&lt;BR /&gt;
In our case “Product_Type”. This is the dynamic column list for the transpose table.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/08/String_Agg.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
We will store this list it in &amp;nbsp;'ProductTypeList' variable.&lt;BR /&gt;
&lt;PRE class="language-sql"&gt;&lt;CODE&gt;SELECT string_agg(PRODUCT_TYPE, ', ')&lt;BR /&gt;
INTO ProductTypeList&lt;BR /&gt;
FROM (SELECT DISTINCT PRODUCT_TYPE from PRODUCT_DATA as b);&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId-306988489"&gt;&lt;STRONG&gt;Step2:&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
Create the first part of the dynamic SQL statement as below.&lt;BR /&gt;
&lt;PRE class="language-sql"&gt;&lt;CODE&gt;DynamicSQL := 'Create table Product_transpose as (&lt;BR /&gt;
&lt;BR /&gt;
    SELECT PRODUCT,  ' || ProductTypeList || ' FROM (&lt;BR /&gt;
&lt;BR /&gt;
        SELECT PRODUCT,&lt;BR /&gt;
&lt;BR /&gt;
         ';&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId-110474984"&gt;&lt;STRONG&gt;Step3:&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
Dynamically create the statement for populating the data as below.&lt;BR /&gt;
&lt;PRE class="language-sql"&gt;&lt;CODE&gt;SELECT &lt;BR /&gt;
STRING_AGG('MAX(CASE WHEN PRODUCT_TYPE = ''' || PRODUCT_TYPE || ''' THEN &lt;BR /&gt;
Unit_Price END) AS ' || PRODUCT_TYPE, ', ')&lt;BR /&gt;
&lt;BR /&gt;
INTO ColumnExpressions&lt;BR /&gt;
&lt;BR /&gt;
FROM (SELECT DISTINCT PRODUCT_TYPE FROM Product_data);&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId--86038521"&gt;&lt;STRONG&gt;Step4:&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
Combine all the 3 steps and create the complete dynamic SQL.&lt;BR /&gt;
&lt;PRE class="language-sql"&gt;&lt;CODE&gt;DynamicSQL := DynamicSQL || ColumnExpressions || &lt;BR /&gt;
' FROM Product_data GROUP BY PRODUCT))';&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId--282552026"&gt;&lt;STRONG&gt;Step5:&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
Execute the dynamic SQL.&lt;BR /&gt;
&lt;PRE class="language-sql"&gt;&lt;CODE&gt;EXEC DynamicSQL;&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId--479065531"&gt;&lt;STRONG&gt;Step6: &lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
Call the procedure from the SQL console as below.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;CALL "MYSCHEMA"."MYPACKAGE::product_transpose" ( ) ;&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId--675579036"&gt;Complete Code:&lt;/H3&gt;&lt;BR /&gt;
&lt;PRE class="language-sql"&gt;&lt;CODE&gt;PROCEDURE "MYSCHEMA"."MYPACKAGE::product_transpose" ( )&lt;BR /&gt;
&lt;BR /&gt;
       LANGUAGE SQLSCRIPT&lt;BR /&gt;
&lt;BR /&gt;
       SQL SECURITY INVOKER&lt;BR /&gt;
&lt;BR /&gt;
       --DEFAULT SCHEMA &amp;lt;default_schema_name&amp;gt;&lt;BR /&gt;
&lt;BR /&gt;
       --READS SQL DATA&lt;BR /&gt;
&lt;BR /&gt;
       AS&lt;BR /&gt;
&lt;BR /&gt;
BEGIN&lt;BR /&gt;
&lt;BR /&gt;
DECLARE ProductTypeList NVARCHAR(10000);&lt;BR /&gt;
&lt;BR /&gt;
DECLARE DynamicSQL NVARCHAR(60000);&lt;BR /&gt;
&lt;BR /&gt;
DECLARE ColumnExpressions NVARCHAR(50000);&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
SELECT string_agg(PRODUCT_TYPE, ', ')&lt;BR /&gt;
&lt;BR /&gt;
INTO ProductTypeList&lt;BR /&gt;
&lt;BR /&gt;
FROM (SELECT DISTINCT PRODUCT_TYPE from PRODUCT_DATA as b);&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
DynamicSQL := 'Create table Product_Transpose as (&lt;BR /&gt;
&lt;BR /&gt;
    SELECT PRODUCT, ' || ProductTypeList || '&lt;BR /&gt;
&lt;BR /&gt;
    FROM (&lt;BR /&gt;
&lt;BR /&gt;
        SELECT PRODUCT,&lt;BR /&gt;
&lt;BR /&gt;
   ';&lt;BR /&gt;
&lt;BR /&gt;
SELECT STRING_AGG('MAX(CASE WHEN PRODUCT_TYPE = ''' || PRODUCT_TYPE || ''' &lt;BR /&gt;
&lt;BR /&gt;
       THEN UNIT_PRICE END) AS ' || PRODUCT_TYPE, ', ')&lt;BR /&gt;
&lt;BR /&gt;
       INTO ColumnExpressions&lt;BR /&gt;
&lt;BR /&gt;
      FROM (SELECT DISTINCT PRODUCT_TYPE FROM PRODUCT_DATA);&lt;BR /&gt;
   &lt;BR /&gt;
&lt;BR /&gt;
DynamicSQL := DynamicSQL || ColumnExpressions || ' FROM PRODUCT_DATA&lt;BR /&gt;
&lt;BR /&gt;
    GROUP BY PRODUCT))';&lt;BR /&gt;
&lt;BR /&gt;
EXEC DynamicSQL;&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
END;&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId--947323910"&gt;In Conclusion,&lt;/H3&gt;&lt;BR /&gt;
SAP Native HANA procedures are a powerful feature to execute complex data transformations, which can significantly enhance data manipulation and processing efficiency.&lt;BR /&gt;
&lt;BR /&gt;
Embrace the advantages of streamlined data processing, optimized performance, and simplified code maintenance that these procedures offer.&lt;BR /&gt;
&lt;BR /&gt;
Feel free to like, comment and share your thoughts! Your insights, questions, and feedback are invaluable in developing a collaborative learning environment.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-native-hana-procedure-to-create-and-populate-a-transpose-table/ba-p/13574828"/>
    <published>2023-08-08T18:16:56+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/cds-hierarchy-directory-how-to-use-notassignednode-annotation-to-suppress/ba-p/13576317</id>
    <title>CDS Hierarchy Directory: How to use NOTASSIGNEDNODE Annotation to suppress or to filter the Not Assigned(REST_H) nodes</title>
    <updated>2023-12-19T23:56:31+01:00</updated>
    <author>
      <name>LinaRaut</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/179963</uri>
    </author>
    <content>This blog is about how to handle Not Assigned(REST_H) nodes in CDS Hierarchy Directory of Analytical query, to get the result set either without Not Assigned node or filtered Not Assigned node. Let’s start with some basic information about CDS Hierarchy Directory.&lt;BR /&gt;
&lt;H2 id="toc-hId-964014535"&gt;&lt;STRONG&gt;Introduction to CDS Hierarchy Directory&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
There are two types of Hierarchy views. First where we use annotation &lt;STRONG&gt;‘&lt;/STRONG&gt;&lt;STRONG&gt;@Hierarchy&lt;/STRONG&gt;&lt;STRONG&gt;’&lt;/STRONG&gt; and new one where we use &lt;STRONG&gt;‘define hierarchy &amp;lt;NAME&amp;gt;’&lt;/STRONG&gt; (from 2023 on Prem and 2308 Cloud). In both the ways we can define association to a view which is then used as Hierarchy Directory.&lt;BR /&gt;
&lt;BR /&gt;
Hierarchy Directory is CDS view.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;It contains the List of all hierarchies available in the hierarchy view.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;It can have Text for the hierarchies (language independent case) Or it can have an association to a text view (language dependent case)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;It can contain a field which determine whether the Not Assigned node will be displayed or not.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;It can contain a field which describes a filter which should be applied to the Not Assigned node.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;It can contain a field which describes when a hierarchy was changed last time and which has annotation as ‘@Semantics.systemDate.lastChangedAt : true (for date)’ or ‘@Semantics.systemDateTime.lastChangedAt: true (for timestamp)’&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
When this field exist, then analytical engine will buffer the hierarchy and will renew the buffer when hierarchy is changed. Without this field hierarchy will always be rebuild and it can be performance overhead.&lt;BR /&gt;
&lt;H2 id="toc-hId-767501030"&gt;&lt;STRONG&gt;Use of &lt;/STRONG&gt;&lt;STRONG&gt;NOTASSIGNEDNODE&lt;/STRONG&gt; &lt;STRONG&gt;Annotations in CDS Hierarchy Directory&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;@HIERARCHY.NOTASSIGNEDNODE.SUPPRESSINDICATOR&lt;/STRONG&gt; can be used to suppress the display of Not Assigned nodes.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
It can be used for one field in a Hierarchy Directory view. The data type of the field must be Boolean (CHAR field with length 1 and with values '' or 'X'). If the flag is set for an entry in the directory, then the analytical engine doesn't create a 'Not Assigned' node. In this case the hierarchy itself acts as a filter and data which is not a leaf in the hierarchy is not part of the resultset.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;@HIERARCHY.NOTASSIGNEDNODE.&lt;/STRONG&gt;&lt;STRONG&gt;FILTER&lt;/STRONG&gt; can be used to restrict the display of Not Assigned nodes.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
It can be used for a field in the Hierarchy Directory view. The field needs in addition, a foreign-key association to a dimension view. This dimension view has also to be target of a foreign-key association defined in the dimension view which holds the hierarchy. The field with that foreign-key association must be a non representative key field. When the analytical engine resolves the 'Not Assigned' node, it derives a filter from the hierarchy’s name and applies this filter to the dimension values which have to be added to the 'Not Assigned' node. The other dimension values, which don't fulfil the filter criteria are ignored. In this case the hierarchy itself acts as a filter. The annotation can be used for key and for non-key fields in the Hierarchy Directory. Only constraint is that the field needs a foreign-key association.&lt;BR /&gt;
With this feature you can improve the performance. It is only useful for hierarchies on dimensions with more than one key field and if one hierarchy should only contain leaves belonging to one value of a key field. A typical example is a cost center hierarchy. All cost centers of one hierarchy should belong to the same controlling area. Without this feature the analytical engine would also add cost centers of other controlling areas to the 'Not-Assigned' node. Notice that this happens independent of the filters used in a query. Therefore, in a query result there is no difference if the query contains a filter on the same controlling area. But the performance will be much better if the filter is also defined in the Hierarchy Directory.&lt;BR /&gt;
&lt;H2 id="toc-hId-570987525"&gt;&lt;STRONG&gt;Examples&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId-503556739"&gt;&lt;STRONG&gt;Example 1: Without @HIERARCHY.NOTASSIGNEDNODE &lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@EndUserText.label:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;'Connection Hierarchy Directory View'&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/15206"&gt;@analytics&lt;/a&gt;&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;{&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;dataCategory:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;#DIMENSION,&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;dataExtraction.&lt;/SPAN&gt;&lt;SPAN style="color: #335ca2;text-decoration: underline"&gt;enabled:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2;text-decoration: underline"&gt;true&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;}&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@ObjectModel.representativeKey:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;'hieid'&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;define&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;view entity&lt;/SPAN&gt; &lt;SPAN style="color: #000000;text-decoration: underline"&gt;ZOQ_CONNECTION_HIERARCHY_DIR&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;as&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;select&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;from&lt;/SPAN&gt; &lt;SPAN style="color: #000000"&gt;ZOQ_CONNID_HD&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;{&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@ObjectModel.text.element:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;'hiertxt'&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;key&lt;/SPAN&gt; &lt;SPAN style="color: #000000"&gt;hieid&lt;/SPAN&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@Semantics.text:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;true&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #000000"&gt;hiertxt&lt;/SPAN&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@Semantics.systemDate.&lt;/SPAN&gt;&lt;SPAN style="color: #335ca2;text-decoration: underline"&gt;lastChangedAt:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2;text-decoration: underline"&gt;true&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #000000"&gt;last_changed&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;}&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
Resultset will display Not assigned (REST_H) nodes&lt;BR /&gt;
&lt;BR /&gt;
&lt;/DIV&gt;&lt;BR /&gt;
&lt;P style="margin: 0px;overflow: hidden"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/all-4.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;/DIV&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId-307043234"&gt;&lt;STRONG&gt;Example 2: With&amp;nbsp;@HIERARCHY.NOTASSIGNEDNODE.SUPPRESSINDICATOR&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@EndUserText.label:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;'Connection Hierarchy Directory View'&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/15206"&gt;@analytics&lt;/a&gt;&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;{&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;dataCategory:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;#DIMENSION,&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;dataExtraction.&lt;/SPAN&gt;&lt;SPAN style="color: #335ca2;text-decoration: underline"&gt;enabled:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2;text-decoration: underline"&gt;true&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;}&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@ObjectModel.representativeKey:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;'hieid'&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;define&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;view entity&lt;/SPAN&gt; &lt;SPAN style="color: #000000;text-decoration: underline"&gt;ZLR_CONNECTION_HIERARCHY_DIR&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;as&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;select&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;from&lt;/SPAN&gt; &lt;SPAN style="color: #000000"&gt;zoq_connid_hd&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;{&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@ObjectModel.text.element:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;'hiertxt'&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;key&lt;/SPAN&gt; &lt;SPAN style="color: #000000"&gt;hieid&lt;/SPAN&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@Semantics.text:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;true&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #000000"&gt;hiertxt&lt;/SPAN&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@Semantics.systemDate.&lt;/SPAN&gt;&lt;SPAN style="color: #335ca2;text-decoration: underline"&gt;lastChangedAt:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2;text-decoration: underline"&gt;true&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #000000"&gt;last_changed&lt;/SPAN&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;STRONG&gt;&lt;SPAN style="color: #335ca2"&gt;@Hierarchy.notAssignedNode.suppressIndicator:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;true&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;STRONG&gt;&lt;SPAN style="color: #008000"&gt;'X'&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074"&gt;as&lt;/SPAN&gt; &lt;SPAN style="color: #000000"&gt;suppressNotAssigned&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;}&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
Resultset will not display Not Assigned (REST_H) nodes&lt;BR /&gt;
&lt;BR /&gt;
&lt;/DIV&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/supress_rest1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId-110529729"&gt;&lt;STRONG&gt;Example 3: With&amp;nbsp;@HIERARCHY.NOTASSIGNEDNODE.FILTER&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@EndUserText.label:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;'Connection Hierarchy Directory View'&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/15206"&gt;@analytics&lt;/a&gt;&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;{&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;dataCategory:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;#DIMENSION,&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;dataExtraction.&lt;/SPAN&gt;&lt;SPAN style="color: #335ca2;text-decoration: underline"&gt;enabled:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2;text-decoration: underline"&gt;true&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;}&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@ObjectModel.representativeKey:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;'hieid'&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;define&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;view entity&lt;/SPAN&gt; &lt;SPAN style="color: #000000;text-decoration: underline"&gt;ZLR_CONNECTION_HIERARCHY_DIR&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;as&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;select&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;from&lt;/SPAN&gt; &lt;SPAN style="color: #000000"&gt;zoq_connid_hd&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;association&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;to&lt;/SPAN&gt; &lt;SPAN style="color: #000000"&gt;ZOQ_AIRLINE&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;as&lt;/SPAN&gt; &lt;SPAN style="color: #000000"&gt;_carrid&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;on&lt;/SPAN&gt; &lt;SPAN style="color: #000000"&gt;_carrid&lt;/SPAN&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;.&lt;/SPAN&gt;&lt;SPAN style="color: #000000"&gt;carrid&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;=&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;$projection.&lt;/SPAN&gt;&lt;SPAN style="color: #000000"&gt;carrid&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;{&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@ObjectModel.text.element:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;'hiertxt'&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;key&lt;/SPAN&gt; &lt;SPAN style="color: #000000"&gt;hieid&lt;/SPAN&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@Semantics.text:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;true&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #000000"&gt;hiertxt&lt;/SPAN&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@Semantics.systemDate.&lt;/SPAN&gt;&lt;SPAN style="color: #335ca2;text-decoration: underline"&gt;lastChangedAt:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2;text-decoration: underline"&gt;true&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #000000"&gt;last_changed&lt;/SPAN&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@ObjectModel.foreignKey.association:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;'_carrid'&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #335ca2"&gt;@Hierarchy.notAssignedNode.filter:&lt;/SPAN&gt; &lt;SPAN style="color: #335ca2"&gt;true&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;cast(&lt;/SPAN&gt; &lt;SPAN style="color: #008000"&gt;'LH'&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;as&lt;/SPAN&gt; &lt;SPAN style="color: #000000;font-style: italic;text-decoration: underline"&gt;s_carr_id&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;)&lt;/SPAN&gt; &lt;SPAN style="color: #7f0074;font-weight: bold"&gt;as&lt;/SPAN&gt; &lt;SPAN style="color: #000000"&gt;carrid&lt;/SPAN&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #000000"&gt;_carrid&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="margin: 0"&gt;&lt;SPAN style="color: #7f0074;font-weight: bold"&gt;}&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
Resultset will display Not Assigned(REST_H) node but only with LH as we have provided filter on carrid LH&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/filter-2.jpg" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Following are some of correction which are done for this feature:&lt;BR /&gt;
&lt;BR /&gt;
3348310 - Problem with Hierarchy.notAssignedNode.filter&lt;BR /&gt;
3377570 - Dump: GETWA_NOT_ASSIGNED in class CL_RSR_RRK0_HIERARCHY&lt;BR /&gt;
&lt;BR /&gt;
&lt;/DIV&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/cds-hierarchy-directory-how-to-use-notassignednode-annotation-to-suppress/ba-p/13576317"/>
    <published>2023-12-19T23:56:31+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/cds-view-time-comparison/ba-p/13620651</id>
    <title>CDS View: Time comparison</title>
    <updated>2024-02-28T22:27:29.400000+01:00</updated>
    <author>
      <name>LinaRaut</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/179963</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT color="#000000"&gt;This blog is about CDS scalar functions - CALENDER_SHIFT and CALENDER_OPERATIONS and how to use it in analytical queries for time comparison. Similarly FISCAL_CALENDAR_SHIFT and FISCAL_CALENDAR_OPERATION can be used.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;These CDS scalar functions are used to compare the measure value of current time period with previous time period. Further it can be used to calculate measure value for year to date (YTD), month to date (MTD) or quarter to date (QTD). Current member can only be used when time dimensions are in drilldown else restricted measure is used. The usage of current member is not as fast as restricted measure. Detail specification of the mentioned scalar functions can be found in Help.&lt;/FONT&gt;&lt;/P&gt;&lt;H2 id="toc-hId-987850336"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-791336831"&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Usage of Current Member&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;This function can be used by modeling an association with the cube. In the ON-condition, the scalar functions are specified on the right side.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;association to ZOQ_FLIGHT as _previousMonth
    on _previousMonth.fyearMonth = calendar_shift( base        =&amp;gt; $projection.fyearMonth, 
                                                   base_level  =&amp;gt; calendar_date_level.#MONTH,	
                                                   shift       =&amp;gt; abap.int2'-1',
                                                   shift_level =&amp;gt; calendar_date_level.#MONTH  )&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Constraints:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Current member to work properly, we have to mark all the time fields which are related with annotation - @ObjectModel.value.derivedFrom. We should also specify semantics. &lt;/FONT&gt;&lt;FONT color="#000000"&gt;for example,&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;STRONG&gt;key&lt;/STRONG&gt; fldate,&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;STRONG&gt;@ObjectModel.value.derivedFrom: 'fldate'&lt;/STRONG&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;@Semantics.calendar.yearMonth: true&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;@ EndUserText.label: 'FL Month'&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;_calday.calmonth &lt;STRONG&gt;as&lt;/STRONG&gt; fyearMonth,&amp;nbsp;&lt;/FONT&gt;&lt;FONT color="#000000"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;The base parameter must be filled with the same field name as it appears on the left: for example, the field name __previousMonth&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;SPAN&gt;&lt;STRONG&gt;fyearMonth&lt;/STRONG&gt; &amp;nbsp;&amp;nbsp;should be same as base &lt;/SPAN&gt;&lt;STRONG&gt;=&amp;gt;&lt;/STRONG&gt; $projection&lt;STRONG&gt;.fyearMonth&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;The Semantics of field $projection.fyearMonth must match the base_level parameter. As In the cube view example, the fyearMonth field has the annotation &amp;nbsp;@Semantics.calendar.yearMonth: true, &amp;nbsp;base_level is specified as calendar_date_level&lt;STRONG&gt;.&lt;/STRONG&gt;#MONTH.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;In the example to restrict the measure to the previous month, shift is set to -1 and shift_level is set to #MONTH. There is a constraint in using shift_level with base_level : for example for base level #MONTH, shift _level can be #MONTH,#QUARTER or #YEAR But can’t be #DAY.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;Example 1:&amp;nbsp;&lt;/STRONG&gt; Time comparison with time in drill-down (Current Member Variables)&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_ALLOWED
@EndUserText.label: 'Query: Current Memeber on Month'
define transient view entity ZLR_PC_CM_1 
provider contract analytical_query
as projection on ZOQ_FLIGHT

  association to ZOQ_FLIGHT as _previousMonth
    on _previousMonth.fyearMonth = calendar_shift( base        =&amp;gt; $projection.fyearMonth, 
                                                   base_level  =&amp;gt; calendar_date_level.#month,
                                                   shift       =&amp;gt; abap.int2'-1',
                                                   shift_level =&amp;gt; calendar_date_level.#month  )
  association to ZOQ_FLIGHT as _firstMonthOfQuarter
    on _firstMonthOfQuarter.fyearMonth between calendar_operation( base           =&amp;gt; $projection.fyearMonth,
                                                                  base_level      =&amp;gt; calendar_date_level.#month,
                                                                  operation       =&amp;gt; calendar_date_operation.#first,
                                                                  operation_level =&amp;gt; calendar_date_level.#quarter )  
                                          and $projection.fyearMonth  
      
  association to ZOQ_FLIGHT as _CMM1_CMP1
    on _CMM1_CMP1.fyearMonth between calendar_shift( base        =&amp;gt; $projection.fyearMonth, 
                                                     base_level  =&amp;gt; calendar_date_level.#month,
                                                     shift       =&amp;gt; abap.int2'-1',
                                                     shift_level =&amp;gt; calendar_date_level.#month  )     
                                 and calendar_shift( base        =&amp;gt; $projection.fyearMonth, 
                                                     base_level  =&amp;gt; calendar_date_level.#month,
                                                     shift       =&amp;gt; abap.int2'1',
                                                     shift_level =&amp;gt; calendar_date_level.#month  )  
 {
  @AnalyticsDetails.query: {
    axis: #ROWS,
    totals: #SHOW
  } 
  @EndUserText.label: 'Year Quarter'
  flquarter,
  
   @AnalyticsDetails.query: {
     axis: #ROWS,
     totals: #SHOW
  }  
   @EndUserText.label: 'Year Month'
   fyearMonth,
  
   @AnalyticsDetails.query.axis: #FREE
   .hidden: true
   currency,
   
   @Semantics.amount.currencyCode: 'currency'
   paymentsum,
   
   _previousMonth.currency as PrevMonthCurrency,
   @Semantics.amount.currencyCode : 'PrevMonthCurrency'
   @EndUserText.label: 'Previous Month'
   _previousMonth.paymentsum as PrevMonthPayment,

   _firstMonthOfQuarter.currency as firstMonthOfQuartCurrency,
   @Semantics.amount.currencyCode : 'firstMonthOfQuartCurrency'
   @EndUserText.label: 'Quarter to today'
   _firstMonthOfQuarter.paymentsum as firstMonthOfQuartPayment, 

   _CMM1_CMP1.currency as last3MonthCurrency,
   @Semantics.amount.currencyCode : 'last3MonthCurrency'
   @EndUserText.label: 'Previous month To next month'
   _CMM1_CMP1.paymentsum as CMM1_CMP1Payment

}
where flyear =  '2019'
  and currency = 'EUR'&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Result:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_2-1709031740486.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/71830iDE9646596608699E/image-size/large?v=v2&amp;amp;px=999" role="button" title="LinaRaut_2-1709031740486.png" alt="LinaRaut_2-1709031740486.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;In this Result&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;FONT color="#FF0000"&gt;&lt;STRONG&gt;Red&lt;/STRONG&gt;&lt;/FONT&gt;- column Previous Month -shows value from previous month.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;FONT color="#FFCC00"&gt;&lt;STRONG&gt;Yellow&lt;/STRONG&gt;&lt;/FONT&gt;- column Quarter to Today- shows the aggregate values of previous months in this quarter.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;FONT color="#339966"&gt;&lt;STRONG&gt;Green&lt;/STRONG&gt;&lt;/FONT&gt;- column Gliding window of 3 month- shows aggregate value of previous month + current month + next month.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-594823326"&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Usage of Restricted Measure&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;This can be done using the CASE statement, where one of the scalar function is used.&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;   case when fyearMonth = calendar_shift( base        =&amp;gt; $parameters.p_month, 
                                          base_level  =&amp;gt; calendar_date_level.#MONTH,
                                          shift       =&amp;gt; abap.int2'-1',
                                          shift_level =&amp;gt; calendar_date_level.#MONTH ) then paymentsum end as paymentPrev&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Constraints:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;The base parameter must be a parameter or a literal.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;The type of parameter or literal must match to &amp;nbsp;base_level. In the example for base_level &amp;nbsp;calendar_date_level.#MONTH, the type of parameter p_month must be NUMC6.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;In the example to restrict the measure to the previous month, shift is set to -1 and shift_level is set to #MONTH.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Example 2:&lt;/STRONG&gt; Time comparison (Restricted key figure)&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_ALLOWED
@EndUserText.label: 'Query: Current Memeber on Month'
define transient view entity ZLR_PC_RSRT_SHIFT1 
provider contract analytical_query
with parameters
       p_month : /bi0/oicalmonth
as projection on ZOQ_FLIGHT
 {
   @AnalyticsDetails.query: {
    axis: #ROWS,
    totals: #SHOW
  } 
   carrid,
   
   currency,
   
   virtual currCur : abap.cuky,
   @Semantics.amount.currencyCode : 'currCur'
   @Consumption.dynamicLabel: {
     label: 'Bookings &amp;amp;1',
     binding: [{ index : 1 , element : 'fyearMonth' }]
   } 
      
   case when fyearMonth = $parameters.p_month then paymentsum end as paymentCur,
   
   virtual currPrev : abap.cuky,
   @Semantics.amount.currencyCode : 'currPrev'
   @Consumption.dynamicLabel: {
     label: 'Previous Bookings &amp;amp;1',
     binding: [{ index : 1 , element : 'fyearMonth' }]
   } 
     
   case when fyearMonth = calendar_shift( base        =&amp;gt; $parameters.p_month, 
                                          base_level  =&amp;gt; calendar_date_level.#month,
                                          shift       =&amp;gt; abap.int2'-1',
                                          shift_level =&amp;gt; calendar_date_level.#month  ) then paymentsum end as paymentPrev,  
   
  
   
   virtual currLastInYear : abap.cuky,                                     
   @Semantics.amount.currencyCode : 'currLastInYear'
   @Consumption.dynamicLabel: {
     label: 'Bookings from &amp;amp;1 To &amp;amp;2',
     binding: [{ index : 1 , element : 'fyearMonth', replaceWith: #LOW },
               { index : 2 , element : 'fyearMonth', replaceWith: #HIGH }]
   }  
   case when fyearMonth between calendar_operation( base            =&amp;gt; $parameters.p_month, 
                                              base_level      =&amp;gt; calendar_date_level.#month,
                                              operation       =&amp;gt; calendar_date_operation.#first,
                                              operation_level =&amp;gt; calendar_date_level.#year  ) and $parameters.p_month then paymentsum end as paymentToDate                                            
 
}
where currency = 'EUR'&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Result:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_3-1709031740488.png" style="width: 800px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/71829i4C6A60C9C4189EE8/image-dimensions/800x159?v=v2" width="800" height="159" role="button" title="LinaRaut_3-1709031740488.png" alt="LinaRaut_3-1709031740488.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;In this example I have used @Consumption.dynamicLabel to dynamically set the column label with values calculated from parameter.&lt;/FONT&gt;&lt;/P&gt;&lt;H2 id="toc-hId-398309821"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-201796316"&gt;&lt;FONT color="#000000"&gt;Release Info:&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;On-Prem SAP_BW from 7.58 and Cloud from 2308&lt;/FONT&gt;&lt;/P&gt;&lt;H2 id="toc-hId-5282811"&gt;&lt;FONT color="#000000"&gt;Related Notes:&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;3270090-CurrentMember + FemsN&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;3359468-Current Member on reference characteristic and selection for Partial Time Characteristic&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/cds-view-time-comparison/ba-p/13620651"/>
    <published>2024-02-28T22:27:29.400000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/cds-view-hierarchy-node-sign-reversal/ba-p/13599337</id>
    <title>CDS View: Hierarchy node sign reversal</title>
    <updated>2024-04-15T13:30:04.285000+02:00</updated>
    <author>
      <name>LinaRaut</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/179963</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;This blog is about how to use @Semantics.signReversal in CDS Views&lt;/SPAN&gt; &lt;SPAN&gt;to revert the sign of a measure in&lt;/SPAN&gt; &lt;SPAN&gt;dependence of the settings of a hierarchy node. Analytic query offers the functionality to reverse a sign after aggregation based on a hierarchy node attribute.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This functionality shall be made accessible from a CDS Query,&lt;/SPAN&gt; &lt;SPAN&gt;for this it is necessary to determine the hierarchy node attribute which stores the sign reverse indicator.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To make use of the sign reversal feature in an analytical query, the following field needs to be added to the related hierarchy view:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;@Semantics.signReversalIndicator&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; signref &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;as&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; signReversalFlag&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Example&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt; &lt;SPAN class=""&gt;Hierarchy &lt;/SPAN&gt;&lt;SPAN class=""&gt;v&lt;/SPAN&gt;&lt;SPAN class=""&gt;iew&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.sqlViewName: 'ZOQ_CONNIDHIER'
@EndUserText.label: 'Connection Hierarchy View'
@ObjectModel.dataCategory: #HIERARCHY
@Hierarchy.parentChild : {
  name : 'ConnectionHierarchy',
  label : 'Connection',
  siblingsOrder: [{ by: 'seqno' , direction: 'ASC' }] ,
  recurseBy : '_parent',
  directory: '_dir'
}

define view ZOQ_CONNECTION_HIERARCHY
  as select from zoq_connid_h

  association [0..1] to ZOQ_CONNECTION_HIERARCHY     as _parent     on  $projection.parentid = _parent.nodeid

  association [1]    to ZOQ_CONNECTION_HIERARCHY_DIR as _dir        on  $projection.hieid = _dir.hieid

  association [1]    to ZOQ_CONNECTION_NODENAME as _node       on       $projection.hieid   = _node.hieid
                                                                    and $projection.nodename = _node.nodeName
                                                                    and $projection.carrid   = ''
                                                                    and $projection.connid   = '0000'

  association [1]    to ZOQ_AIRLINE                  as _airline    on  $projection.carrid = _airline.carrid
                                                                    and $projection.connid = '0000'

  association [1]    to ZOQ_CONNECTION               as _connection on  $projection.carrid = _connection.carrid
                                                                    and $projection.connid = _connection.connid

{
      @Consumption.filter: { mandatory : true, selectionType : #SINGLE, multipleSelections : false }
      @ObjectModel.foreignKey.association: '_dir'
  key hieid,
  key nodeid,
      parentid,

      seqno,

      @ObjectModel.foreignKey.association: '_airline'
      carrid,
      @ObjectModel.foreignKey.association: '_connection'
      connid,
      @ObjectModel.foreignKey.association: '_node'
      nodename,
      
      @Semantics.signReversalIndicator
      signref as signReversalFlag,

      _parent,
      _dir,
      _node,
      _airline,
      _connection

}   &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Preview:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="preview.png" style="width: 791px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95121i6179BCE8DA569035/image-size/large?v=v2&amp;amp;px=999" role="button" title="preview.png" alt="preview.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In CDS views with "Analytics.query : true"&lt;/SPAN&gt;&lt;SPAN&gt; or define as "transient view entity",&lt;/SPAN&gt;&lt;SPAN&gt; function "HRY_NODE_SIGN_VALUE(elemRef)" &lt;/SPAN&gt;&lt;SPAN&gt;is &lt;/SPAN&gt;&lt;SPAN&gt;used in a formula (AnalyticsDetails.query.formula). This function works in the following way&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;At first the path from the element to its hierarchy view is evaluated. In the hierarchy view there should exist exactly one field with semantics signReversal. For each hierarchy node for which the value of the sign reversal element returns space, the function HRY_NODE_SIGN_VALUE will return +1. If the value is not initial, the function returns -1. With this,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;for example- &lt;/SPAN&gt;&lt;SPAN&gt;the formula&lt;/SPAN&gt; &lt;STRONG&gt;&lt;SPAN&gt;$projection.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;paymentsum &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;*&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; hry_node_sign_value&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;(&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; dimension &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;=&amp;gt;&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;$projection.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;connid&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;as&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; paymentsumSignRef&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;will return the key figure &lt;/SPAN&gt;&lt;SPAN&gt;paymentsum&lt;/SPAN&gt;&lt;SPAN&gt; for all nodes/leaves in the hierarchy with initial sign reversal indicator&lt;/SPAN&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;SPAN&gt;It will return "- &lt;/SPAN&gt;&lt;SPAN&gt;paymentsum&lt;/SPAN&gt;&lt;SPAN&gt;" for all nodes/leaves with not initial sign reversal indicator.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If there is no field with semantics signReversal in the hierarchy view, the function HRY_NODE_SIGN_VALUE always returns +1.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Example:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;Analytical query&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_ALLOWED
@EndUserText.label: 'SIGN REVERSAL'
@Metadata.ignorePropagatedAnnotations: true
define transient view entity ZLR_SIGN_REV_FLIGHT_1 
   provider contract analytical_query 
     with parameters
     @EndUserText.label: 'Hierarchy'
     @Consumption.defaultValue: 'CNTRY' 
     p_hienm : char5 
     
  as projection on ZOQ_FLIGHT
    
 {   
    @AnalyticsDetails.query.axis: #ROWS
    @AnalyticsDetails.query: {
      displayHierarchy: #ON,
      hierarchyBinding: [{ type : #PARAMETER , value : 'p_hienm' }]
    }  
    connid,
    @AnalyticsDetails.query.axis: #FREE
    currency,
    
    @Semantics.amount.currencyCode: 'CURRENCY'
    @Aggregation.default: #SUM
    @AnalyticsDetails.query.axis: #COLUMNS
    curr_to_decfloat_amount( paymentsum ) as paymentsum,
    
    @AnalyticsDetails.query.axis: #COLUMNS
    @EndUserText.label: 'HierSignRev'
    @Aggregation.default: #FORMULA
    $projection.paymentsum * hry_node_sign_value( dimension =&amp;gt; $projection.connid) as paymentsumSignRef
  
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;Result:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="result.png" style="width: 761px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95125iE96DEC39C036AD90/image-size/large?v=v2&amp;amp;px=999" role="button" title="result.png" alt="result.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this example for Hierarchy ZOQ_CONNECTION_HIERARCHY (which is defined in the &lt;/SPAN&gt;&lt;SPAN&gt;ZOQ_FLIGHT)&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;signReversalFlag is set for Carried id 'A', 'JL', 'UA'. Therefore, in result of analytical query HierSignRev field is showing the –ve result of the booking total.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Delivered Hierarchies:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;There are few SAP delivered hierarchies which have this feature.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Following fields name:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;FinancialStatementItem, &lt;/SPAN&gt;&lt;SPAN&gt;CnsldtnFinancialStatementItem, FinancialStatementLeafItem, GLAccount, etc.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Can have this feature because they have foreign key association with dimension view which has hierarchy association to hierarchy view supporting this feature.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For example:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Field with name ‘&lt;/SPAN&gt;&lt;SPAN&gt;FinancialStatementItem&lt;/SPAN&gt;&lt;SPAN&gt;’ typically have a foreign key association to dimension view &lt;/SPAN&gt;&lt;SPAN&gt;I_CnsldtnFinStmntItem and corresponding hierarchy view &lt;/SPAN&gt;&lt;SPAN&gt;I_FinStmntItmHier will support this feature.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Constraints:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Only one element in a view of data category HIERARCHY can be marked with semantics signReversal. The data type of the element should be CHAR of length 1.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Allowed values are X or space.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Related Note:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1385580 - How does a formula variable with a replacement path work?&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Availability:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This feature is available from &lt;/SPAN&gt;&lt;SPAN&gt;S/4HANA 1909 (ABAP Platform 7.54).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/cds-view-hierarchy-node-sign-reversal/ba-p/13599337"/>
    <published>2024-04-15T13:30:04.285000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/cds-how-to-define-hierarchy-view/ba-p/13758059</id>
    <title>CDS : How to define Hierarchy View</title>
    <updated>2024-07-17T14:18:20.286000+02:00</updated>
    <author>
      <name>LinaRaut</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/179963</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;This blog is about how to define Hierarchy View&lt;/SPAN&gt;&lt;SPAN&gt; in CDS&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;There are two types of &lt;/SPAN&gt;&lt;SPAN&gt;hierarch&lt;/SPAN&gt;&lt;SPAN&gt;ies – '&lt;/SPAN&gt;&lt;SPAN&gt;Leveled&lt;/SPAN&gt;&lt;SPAN&gt; Hierarchy' and '&lt;/SPAN&gt;&lt;SPAN&gt;Parent-Chil&lt;/SPAN&gt;&lt;SPAN&gt;d Hierarchy'&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;In Analytics, only a Parent-Child hierarchy is supported.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;In CDS, Hierarchy can be defined in two ways:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Inline Hierarchy: where the hierarchy definition is modelled in the dimension view.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;External Hierarchy: where there is a separate CDS view to model the definition of the hierarchy.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;In the past, External hierarchy was defined using the annotation '&lt;/SPAN&gt;&lt;SPAN&gt;@ObjectModel.dataCategory:&lt;/SPAN&gt; &lt;SPAN&gt;#HIERARCHY'.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Now, in CDS it is allowed to define new type of CDS view called as Hierarchy CDS, which is defined using&lt;/SPAN&gt; &lt;SPAN&gt;syntax &lt;/SPAN&gt;&lt;SPAN&gt;define hierarchy&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;which create a hierarchical view.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;A CDS hierarchy represents a HANA hierarchy, created when the CDS hierarchy is activated.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Normally the hierarchy contains headers and nodes. The header data of the hierarchy is coming from the directory view and the nodes data is coming from the hierarchy view itself.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4" color="#0000FF"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Hierarchy Directory&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;The directory of the &lt;/SPAN&gt;&lt;SPAN&gt;h&lt;/SPAN&gt;&lt;SPAN&gt;ierarchy provides the header information of the &lt;/SPAN&gt;&lt;SPAN&gt;h&lt;/SPAN&gt;&lt;SPAN&gt;ierarchy&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt; &lt;SPAN&gt;A hierarchy view might &lt;/SPAN&gt;&lt;SPAN&gt;contain&lt;/SPAN&gt;&lt;SPAN&gt; more than one hierarchy. Information about each hierarchy (&lt;/SPAN&gt;&lt;SPAN&gt;e.g.&lt;/SPAN&gt;&lt;SPAN&gt; text&lt;/SPAN&gt;&lt;SPAN&gt;)&lt;/SPAN&gt; &lt;SPAN&gt;is&lt;/SPAN&gt;&lt;SPAN&gt; provided by a hierarchy directory&lt;/SPAN&gt;&lt;SPAN&gt;. More&lt;/SPAN&gt;&lt;SPAN&gt; information can be found in &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/cds-hierarchy-directory-how-to-use-notassignednode-annotation-to-suppress/ba-p/13576317" target="_blank"&gt;&lt;SPAN&gt;blog&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Typically, the directory view is defined as follows:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Connection Hierarchy Directory View'
@Analytics : { dataCategory: #DIMENSION, dataExtraction.enabled: true }
@ObjectModel.representativeKey: 'hieid'

define view entity ZLR_CONNECTION_HIERARCHY_DIR
  as select from zoq_connid_hd
{
      @ObjectModel.text.element: [ 'hiertxt' ]
  key hieid,
      @Semantics.text: true
      hiertxt,
      @Semantics.systemDate.lastChangedAt: true
      last_changed,

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Output&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_0-1720985264075.png" style="width: 457px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/136485i2087A99928F26B22/image-dimensions/457x361?v=v2" width="457" height="361" role="button" title="LinaRaut_0-1720985264075.png" alt="LinaRaut_0-1720985264075.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Hierarchy View &lt;/SPAN&gt;&lt;SPAN class=""&gt;using&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;d&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;efine&lt;/SPAN&gt;&lt;SPAN class=""&gt; hierarchy &amp;lt;NAME&amp;gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;This is the new way of defining hierarchy and it is available &lt;/SPAN&gt;&lt;SPAN&gt;from 2023 on Prem and 2308 Cloud&lt;/SPAN&gt;&lt;SPAN&gt;. &lt;/SPAN&gt;&lt;SPAN&gt;For defining hierarchy, prerequisite is having a source view, which is mentioned in the definition as parent child hierarchy source.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Source View&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;In view definition parent child association is define along with that following associations:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Association to hierarchy view itself- It defines parent child relationship&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Association to hierarchy directory - It contains all the header information- hierarchy ids.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;A&lt;/SPAN&gt;&lt;SPAN&gt;ssociation to different dimension/text views –&lt;/SPAN&gt;&lt;SPAN&gt; I&lt;/SPAN&gt;&lt;SPAN&gt;t is a relation from the nodes and leaves to dimension and text views&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt; Via this &lt;/SPAN&gt;&lt;SPAN&gt;association the&lt;/SPAN&gt;&lt;SPAN&gt; text of a node/leaf is derived. In the foll&lt;/SPAN&gt;&lt;SPAN&gt;owing e&lt;/SPAN&gt;&lt;SPAN&gt;xample '_&lt;/SPAN&gt;&lt;SPAN&gt;node' is&lt;/SPAN&gt;&lt;SPAN&gt; first level node. '_airline' acts as se&lt;/SPAN&gt;&lt;SPAN&gt;cond &lt;/SPAN&gt;&lt;SPAN&gt;level node &lt;/SPAN&gt;&lt;SPAN&gt;and '&lt;/SPAN&gt;&lt;SPAN&gt;_connection' is leaf and pointing to dimension&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Extra conditions like 'carrid = "" '&amp;nbsp; are not necessary and the order of the associations is not relevant. Instead in this case a separate field is needed, which returns the fieldname of the records, which should be used. In the example it is field 'nodetype'&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Base for : New Way of defining Hierarchy'

define view entity ZLR_CONN_HIERARCHY_BASE
  as select from zoq_connid_h


  //association to itself.
  association [0..1] to ZLR_CONN_HIERARCHY_BASE      as _parent     on  $projection.hieid    = _parent.hieid
                                                                    and $projection.parentid = _parent.nodeid

  // association with hierarchy directory
  association [1]    to ZLR_CONNECTION_HIERARCHY_DIR as _dir        on  $projection.hieid = _dir.hieid


  // associations to the different node types
  // evalulated at runtime for each record in the order given here
  // first hit of ON-condition is followed
  // Differnce to old way of Hierarchy ZLR_CONNECTION_HIERARCHY - here no $projection.carrid   = ''  and $projection.connid   = '0000'
  association [1]    to ZOQ_CONNECTION_NODENAME      as _node       on  $projection.hieid    = _node.hieid
                                                                    and $projection.nodename = _node.nodeName
 

  // "nodatetype" Airline
  // Differnce to old way of Hierarchy ZLR_CONNECTION_HIERARCHY - here no  and $projection.connid = '0000'
  association [1]    to ZOQ_AIRLINE                  as _airline    on  $projection.carrid = _airline.carrid
 

  // association to dimension view
  association [1]    to ZLR_CONN                     as _connection on  $projection.carrid = _connection.carrid
                                                                    and $projection.connid = _connection.connid

{

      @Consumption.filter: { mandatory : true, selectionType : #SINGLE, multipleSelections : false }
      @ObjectModel.foreignKey.association: '_dir'
  key hieid,
  key nodeid,
      parentid,

      seqno,

      // three different node types possible in this example
      // here CONNID is leaf (can not be derived from this view)
      
      @ObjectModel.foreignKey.association: '_airline'
      carrid,
      @ObjectModel.foreignKey.association: '_connection'
      connid,
      @ObjectModel.foreignKey.association: '_node'
      nodename,

      cast(
      case when carrid is initial and connid is initial then 'NODENAME'
           when connid is initial                       then 'CARRID'
           else 'CONNID' end as fieldname ) as nodetype,
  


      // associations defined above have to be exposed here
      // otherwise they will not be available
      _parent,
      _dir,
      _node,
      _airline,
      _connection
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Hierarchy View&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Hierarchy view can be defined using the following syntax.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Syntax:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;... &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;[DEFINE] HIERARCHY hierarchy &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;         [parameter_list] &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;         AS PARENT CHILD HIERARCHY( &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           SOURCE cds_view&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           CHILD TO PARENT ASSOCIATION _hierarchy_assoc &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           [PERIOD FROM field1 TO field2 VALID FROM from TO to] &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           [DIRECTORY _directory_assoc FILTER BY cds_cond] &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           [START WHERE cds_cond] &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           SIBLINGS ORDER BY field1 [ASCENDING|DESCENDING][, &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;                             field2 [ASCENDING|DESCENDING], ...] &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           [DEPTH depth] &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           [NODETYPE node_type] &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           [LOAD BULK|INCREMENTAL|load_option] &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           [MULTIPLE PARENTS {NOT ALLOWED}|LEAVES|ALLOWED] &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           [ORPHANS IGNORE|ERROR|ROOT] &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           [CYCLES ERROR|BREAKUP] &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           [GENERATE SPANTREE] &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;           [CACHE ON|OFF|FORCE]) &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;     { element_list }&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;In Syntax&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;SOURCE&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – Name of Source view. The mandatory addition SOURCE specifies a CDS view entity. This source must expose the hierarchy association specified after CHILD TO PARENT ASSOCIATION in its SELECT list.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;source&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;ZLR_CONN_HIERARCHY_BASE&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;CHILD TO PARENT ASSOCIATION&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: The mandatory addition CHILD TO PARENT ASSOCIATION specifies the hierarchy association who’s ON condition selects the descendant nodes of the root node set.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;child&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;to&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;parent&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;association&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt; _parent&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;PERIOD FROM&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; field1 &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;TO&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; field2 &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;VALID FROM&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; from &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;TO&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; to: The optional addition PERIOD defines the hierarchy as a temporal SQL hierarchy in which the hierarchy nodes are limited by an adjustment of time intervals.&lt;/SPAN&gt;&lt;SPAN&gt; In case&lt;/SPAN&gt;&lt;SPAN&gt; of &lt;/SPAN&gt;&lt;SPAN&gt;parameter, they &lt;/SPAN&gt;&lt;SPAN&gt;can be &lt;/SPAN&gt;&lt;SPAN&gt;different but value must be same when used in a query.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;period&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;from&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; datefrom &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;to&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; dateto &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;valid&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;from&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;$parameters.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;p_date &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;to&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;$parameters.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;p_date&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;OR&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;period&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;from&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; datefrom &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;to&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; dateto &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;valid&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;from&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN&gt;'20230425'&lt;/SPAN&gt; &lt;STRONG&gt;&lt;SPAN&gt;to&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN&gt;'20230425'&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;DIRECTORY&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Hierarchy directory name. The optional addition DIRECTORY defines a filter condition cds_cond for the rows of the source of the hierarchy specified after SOURCE. It defines association to the header/ directory view. Filter can be defined on hierarchy directory, based on parameter. In case of time dependent hierarchy date parameters can be used to filter out the hierarchy.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;_dir &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;filter&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;by&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp; hienm &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;=&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;$parameters.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;p_hienm1&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;and&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; keydate &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;=&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;$parameters.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;p_keydate&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;START WHERE&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: The optional addition START WHERE specifies the start condition for creating the hierarchy. START WHERE can be followed by a logical expression cds_cond that selects rows from the source cds_view.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;start&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;where&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;parentid &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;is&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;initial&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;SIBLINGS ORDER BY&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; field1 [ASCENDING|DESCENDING]: The mandatory addition SIBLINGS ORDER BY sorts sibling nodes in the hierarchy. Default is Ascending.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;siblings&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;order&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;by&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;seqno&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;NODETYPE &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;node_type: The&amp;nbsp; NODETYPE identifies an element of the CDS hierarchy that can be used to determine the type of the hierarchy node. The values of this element must be element names, which must &lt;/SPAN&gt;&lt;SPAN&gt;also&lt;/SPAN&gt;&lt;SPAN&gt; be contained in the element list of the CDS hierarchy.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;In context of Analytics, it is mandatory to define the nodetype field in the source view of the hierarchy and also in the hierarchy view using key word '&lt;/SPAN&gt;&lt;SPAN&gt;nodetype'&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;For example, in the Source view&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;cast(&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt; &lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;case&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;when&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN&gt;carrid&lt;/SPAN&gt; &lt;STRONG&gt;&lt;SPAN&gt;is&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;initial&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;and&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; connid &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;is&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;initial&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;then&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN&gt;'NODENAME'&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;when&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; connid &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;is&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;initial&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;then&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN&gt;'CARRID'&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;else&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN&gt;'CONNID'&lt;/SPAN&gt; &lt;STRONG&gt;&lt;SPAN&gt;end&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;as&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;I&gt;&lt;SPAN&gt;fieldname&lt;/SPAN&gt;&lt;/I&gt; &lt;STRONG&gt;&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;as&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; nodetype&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;In the Hierarchy view&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;nodetype&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;nodetype&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;More detailed information can be found here &lt;/SPAN&gt;&lt;A href="https://help.sap.com/doc/abapdocu_latest_index_htm/latest/en-US/index.htm?file=abencds_f1_define_hierarchy.htm" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;ABAP Keyword Documentation (sap.com)&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;Example of &lt;/SPAN&gt;&lt;SPAN class=""&gt;Hierarchy View&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;define hierarchy ZLR_CONN_HIERARCHY
  with parameters
    @Consumption.defaultValue: 'CNTRY'
    p_hieid : zoq_conhieid
  as parent child hierarchy(
    source ZLR_CONN_HIERARCHY_BASE
    child to parent association _parent
    directory _dir filter by
      hieid = $parameters.p_hieid
    start where
      parentid is initial
    siblings order by
      seqno
    nodetype nodetype
  )
{

      @ObjectModel.foreignKey.association: '_dir'
  key hieid,
  key nodeid,
      parentid,
      seqno,

      @ObjectModel.foreignKey.association: '_airline'
      carrid,
      @ObjectModel.foreignKey.association: '_connection'
      connid,
      @ObjectModel.foreignKey.association: '_node'
      nodename,

      nodetype, 
     
      // associations defined above have to be exposed here
      // otherwise they will not be available
      _parent,
      _dir,
      _node,
      _airline,
      _connection



}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;Out&lt;/SPAN&gt;&lt;SPAN class=""&gt;put&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_0-1720989908770.png" style="width: 607px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/136487iB83682D5BB21AF35/image-dimensions/607x432?v=v2" width="607" height="432" role="button" title="LinaRaut_0-1720989908770.png" alt="LinaRaut_0-1720989908770.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;FONT color="#FF0000"&gt;&lt;SPAN&gt;Red:&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt; association _node&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Green&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&lt;FONT color="#339966"&gt;:&lt;/FONT&gt; association _airline&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;FONT color="#0000FF"&gt;&lt;SPAN&gt;Blue&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&lt;FONT color="#0000FF"&gt;:&lt;/FONT&gt; association _connection,&lt;/SPAN&gt; &lt;SPAN&gt;the blue marked records are leaves&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;FONT color="#0000FF"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Example o&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;f Query using Hierarchy&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_ALLOWED
@EndUserText.label: 'ZLR_CONN - query'
@Metadata.ignorePropagatedAnnotations: true

define transient view entity ZLR_CONN_QUERY
provider contract analytical_query
as projection on ZLR_CONN
{
@AnalyticsDetails.query:{
axis:#ROWS,
displayHierarchy: #ON ,
hierarchyBinding: [{ type: #CONSTANT, value: 'CNTRY'  }]

}
  connid
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Output&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_1-1720990617543.png" style="width: 462px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/136488iDCC79DDE37ADBC00/image-dimensions/462x488?v=v2" width="462" height="488" role="button" title="LinaRaut_1-1720990617543.png" alt="LinaRaut_1-1720990617543.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Hierarchy View Using @ObjectModel.dataCategory: #HIERARCHY Annotation &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;(OLD way)&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;In View &lt;/SPAN&gt;&lt;SPAN&gt;definition the annotation&amp;nbsp;&lt;/SPAN&gt;&lt;A href="mailto:%E2%80%98@Hierarchy.parentChild%E2%80%99" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;@Hierarchy.parentChild &lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;provides the information about the parent child hierarchy. It has hierarchy name, &lt;/SPAN&gt;&lt;SPAN&gt;multiple parents, recursion by, ordering of siblings, root node visibility, orphaned node handling, etc. along with &lt;/SPAN&gt;&lt;SPAN&gt;that, following association&lt;/SPAN&gt;&lt;SPAN&gt;s need to be defined.&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Association to hierarchy view itself&lt;/SPAN&gt; &lt;SPAN&gt;- &lt;/SPAN&gt;&lt;SPAN&gt;I&lt;/SPAN&gt;&lt;SPAN&gt;t defines parent child relationship.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Association to hierarchy directory&lt;/SPAN&gt;&lt;SPAN&gt; view&lt;/SPAN&gt; &lt;SPAN&gt;-&lt;/SPAN&gt;&lt;SPAN&gt; I&lt;/SPAN&gt;&lt;SPAN&gt;t &lt;/SPAN&gt;&lt;SPAN&gt;contains&lt;/SPAN&gt;&lt;SPAN&gt; all the header information&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;hierarchy&lt;/SPAN&gt;&lt;SPAN&gt; Ids and the &lt;/SPAN&gt;&lt;SPAN&gt;descriptions&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Association to different&lt;/SPAN&gt;&lt;SPAN&gt; dimension/text views&lt;/SPAN&gt; &lt;SPAN&gt;–&lt;/SPAN&gt; &lt;SPAN&gt;I&lt;/SPAN&gt;&lt;SPAN&gt;t is a relation from the nodes and leaves to dimension and text views&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt; Via this association &lt;/SPAN&gt;&lt;SPAN&gt;the text of a node/leaf is derived.&lt;/SPAN&gt;&lt;SPAN&gt; In the following example '&lt;/SPAN&gt;&lt;SPAN&gt;_&lt;/SPAN&gt;&lt;SPAN&gt;node'&lt;/SPAN&gt;&amp;nbsp;&lt;SPAN&gt;is&lt;/SPAN&gt; &lt;SPAN&gt;first&lt;/SPAN&gt;&lt;SPAN&gt; level node&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;'_airline' acts as &lt;/SPAN&gt;&lt;SPAN&gt;second&lt;/SPAN&gt;&lt;SPAN&gt; level node &lt;/SPAN&gt;&lt;SPAN&gt;and '&lt;/SPAN&gt;&lt;SPAN&gt;_connection'&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;is leaf and pointing to dimension.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;Important is the order of the associations listed in the element-list and the '&lt;SPAN&gt;extra-condition'&lt;/SPAN&gt;&lt;SPAN&gt; in the ON-clause. For each record of the hierarchy the ON condition of the associations is checked - the first association which meets the ON condition is used to get text and attributes for the hierarchy node/leaf&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;One association is mandatory - its target must be the dimension view which has a &lt;/SPAN&gt;&lt;SPAN&gt;ObjectModel.hierarchy.association&lt;/SPAN&gt;&lt;SPAN&gt; to the hierarchy view. These objects in the hierarchy represent the &lt;/SPAN&gt;&lt;SPAN&gt;leave&lt;/SPAN&gt;&lt;SPAN&gt;s&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Example&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Connection Hierarchy View'
@ObjectModel.dataCategory: #HIERARCHY
@Hierarchy.parentChild: [{  
name : 'ConnectionHierarchy',
  label : 'Connection',
  siblingsOrder: [{ by: 'seqno' }] ,
  recurseBy : '_parent',
  directory: '_dir'
  }] 
  
define view entity ZLR_CONNECTION_HIERARCHY
  as select from zoq_connid_h

  // basic parent child relation inside one hierarchy
  // hierarchy uniquely selected (see @Filter for field HIEID
  association [0..1] to ZLR_CONNECTION_HIERARCHY     as _parent     on  $projection.parentid = _parent.nodeid

  // necessary if view represents several hierarchies
  // association to the hierarchy directory
  association [1]    to ZLR_CONNECTION_HIERARCHY_DIR as _dir        on  $projection.hieid = _dir.hieid


  // associations to the different node types
  // evalulated at runtime for each record in the order given here
  // first hit of ON-condition is followed
  association [1]    to ZOQ_CONNECTION_NODENAME as _node       on       $projection.hieid   = _node.hieid
                                                                    and $projection.nodename = _node.nodeName
                                                                    and $projection.carrid   = ''
                                                                    and $projection.connid   = '0000'

  // "nodatetype" Airline
  association [1]    to ZOQ_AIRLINE                  as _airline    on  $projection.carrid = _airline.carrid
                                                                    and $projection.connid = '0000'

  // For which dimension this hierarchy belongs
  association [1]    to ZLR_CONNECTION               as _connection on  $projection.carrid = _connection.carrid
                                                                 and $projection.connid = _connection.connid

{
      @Consumption.filter: { mandatory : true, selectionType : #SINGLE, multipleSelections : false }
      @ObjectModel.foreignKey.association: '_dir'
  key hieid,
  key nodeid,
      parentid,

      seqno,

      // three different node types possible in this example
      // here CONNID is leaf (can not be derived from this view)
      
      @ObjectModel.foreignKey.association: '_airline'
      carrid,
      @ObjectModel.foreignKey.association: '_connection'
      connid,
      @ObjectModel.foreignKey.association: '_node'
      nodename,
      
      // associations defined above have to be exposed here
      // otherwise they will not be available
      _parent,
      _dir,
      _node,
      _airline,
      _connection

}   &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4" color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Output&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_1-1720985929330.png" style="width: 613px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/136486iE4D5634C7709FE25/image-dimensions/613x544?v=v2" width="613" height="544" role="button" title="LinaRaut_1-1720985929330.png" alt="LinaRaut_1-1720985929330.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;FONT color="#FF0000"&gt;&lt;SPAN&gt;Red:&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt; association _node&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;FONT color="#008080"&gt;&lt;SPAN&gt;Green&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&lt;FONT color="#008080"&gt;: &lt;/FONT&gt;association _airline&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;FONT color="#0000FF"&gt;&lt;SPAN&gt;Blue&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&lt;FONT color="#0000FF"&gt;:&lt;/FONT&gt; association _connection, the blue marked records are leaves&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Reference&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;More information on @Semantics.signReversalIndicator&amp;nbsp;can be found in the &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/cds-view-hierarchy-node-sign-reversal/ba-p/13599337" target="_blank"&gt;blog.&lt;/A&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/cds-how-to-define-hierarchy-view/ba-p/13758059"/>
    <published>2024-07-17T14:18:20.286000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/query-hierarchy-f4-help-not-customizeable-not-possible-for-a-multi-level/ba-p/13925205</id>
    <title>Query Hierarchy F4 Help not customizeable ? Not possible for a multi level Hierarchy ?</title>
    <updated>2024-10-31T16:19:34.903000+01:00</updated>
    <author>
      <name>Martin_4</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/172054</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;newly updated !&amp;nbsp;newly updated !&amp;nbsp;newly updated !newly updated !newly updated !&lt;BR /&gt;&lt;BR /&gt;Hierarchy input Parameter f4 selection user customized solution searched&lt;BR /&gt;===========================================================&lt;BR /&gt;Summary:&lt;BR /&gt;&lt;/STRONG&gt;Desired result is, that a SAP User with defined access rights can see and choose in the&amp;nbsp; query input only those hierachie trees and leaves which he is authorized for.&lt;/P&gt;&lt;P&gt;The authorization rights&amp;nbsp; for each single SAP User are available in a flat view consisting of&amp;nbsp; (SAP User- Country -Region -- Company Code).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Current design Hierarchy Tree:&lt;BR /&gt;&lt;/STRONG&gt;+-0HIER_NODE (Root=Betriebe Gesamt = &amp;nbsp;All Plants)&lt;BR /&gt;+-- ZMO_CNTRY (Country Node = DE, AT)&lt;BR /&gt;+---ZMO REGION (Region Node: BER, FRO)&lt;BR /&gt;+----ZMO_CCODE (Company Code Leave=5070, 8000):&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Martin_4_0-1730903050530.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/187531i95E9914226161B37/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Martin_4_0-1730903050530.png" alt="Martin_4_0-1730903050530.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Current Query Design:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Martin_4_1-1730903050532.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/187532i7D96979C0BDC5718/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Martin_4_1-1730903050532.png" alt="Martin_4_1-1730903050532.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Hierachy node, Mulit entry, input ready &amp;nbsp;variable of the filter which allows the multibed entry&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Current– Customer Exit F4 Input Variable Design:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Martin_4_2-1730903050534.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/187533iC80B7CCE0ED45B33/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Martin_4_2-1730903050534.png" alt="Martin_4_2-1730903050534.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Current F4 Customers Exit Parameter Result:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Martin_4_3-1730903050540.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/187536i0B6FE41879A4DE72/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Martin_4_3-1730903050540.png" alt="Martin_4_3-1730903050540.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;STRONG&gt;Sample Desired Result:&lt;/STRONG&gt;&lt;BR /&gt;A User with &amp;nbsp;these Values &amp;nbsp;Country = DE, Region=BER, Company Codes 5070, 5150, 5160 should result in this F4:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Martin_4_4-1730903050544.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/187535i56F59883C2D46F18/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Martin_4_4-1730903050544.png" alt="Martin_4_4-1730903050544.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;STRONG&gt;Suggested Solution&amp;nbsp;With Badi RSR_VARIABLE_F4_RESTRICT&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Filtervalues:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Martin_4_5-1730903050547.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/187534i803CAE20C07A5A63/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Martin_4_5-1730903050547.png" alt="Martin_4_5-1730903050547.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Using Class Method IF_RSR_VARIABLE_F4_RESTRICT~GET_RESTRICTION_NODE&lt;/P&gt;&lt;P&gt;With a Custome Class with the Method &amp;nbsp;IF_RSR_VARIABLE_F4_RESTRICT~&lt;STRONG&gt;GET_RESTRICTION_NODE&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;???????Right Method ???????&lt;BR /&gt;???????But how to fill the Structures &amp;nbsp;properly ??????&lt;BR /&gt;???????This wont do it&lt;/P&gt;&lt;P&gt;&lt;FONT size="2"&gt;method&amp;nbsp;IF_RSR_VARIABLE_F4_RESTRICT~GET_RESTRICTION_NODE.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2"&gt;DATA:&amp;nbsp;l_s_node&amp;nbsp;LIKE&amp;nbsp;LINE&amp;nbsp;OF&amp;nbsp;c_t_node,&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l_s_hier&amp;nbsp;LIKE&amp;nbsp;LINE&amp;nbsp;OF&amp;nbsp;c_t_hierarchy.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;*&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;#CASE&amp;nbsp;i_vnam.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;**&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;WHEN&amp;nbsp;'ZCOMPCODE_HIERNODE_CUST_MULTI'.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2"&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2"&gt;* ZMO_COMPANY_HIERARCHIE_SAC is the flat view containing the &lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;* Assigments Country Region – BUKR and via an Autorization CDS&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;* the right BUKrs&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;* GROUP By is only used to have only 1 BUKRS in the SELECT result set. &lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SELECT&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;BUKRS&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ZMO_COMPANY_HIERARCHIE_SAC&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GROUP&amp;nbsp;BY&amp;nbsp;&amp;nbsp;&amp;nbsp;BUKRS&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;INTO&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(BUKRS).&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;clear&amp;nbsp;l_s_node.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l_s_node-niobjnm&amp;nbsp;&amp;nbsp;=&amp;nbsp;'ZMO_CCODE'.&amp;nbsp;l_s_node-nodename&amp;nbsp;=&amp;nbsp;BUKRS.&lt;/FONT&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;APPEND&amp;nbsp;l_s_node&amp;nbsp;&amp;nbsp;TO&amp;nbsp;c_t_node.&lt;/FONT&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ENDSELECT.&lt;/FONT&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SELECT&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;country&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ZMO_COMPANY_HIERARCHIE_SAC&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GROUP&amp;nbsp;BY&amp;nbsp;&amp;nbsp;&amp;nbsp;country&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;INTO&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(country).&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;clear&amp;nbsp;l_s_node.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l_s_node-niobjnm&amp;nbsp;&amp;nbsp;=&amp;nbsp;'ZMO_CNTRY'.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l_s_node-nodename&amp;nbsp;=&amp;nbsp;country.&lt;/FONT&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;APPEND&amp;nbsp;l_s_node&amp;nbsp;&amp;nbsp;TO&amp;nbsp;c_t_node.&lt;/FONT&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ENDSELECT.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SELECT&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;region&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FROM&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ZMO_COMPANY_HIERARCHIE_SAC&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GROUP&amp;nbsp;BY&amp;nbsp;&amp;nbsp;&amp;nbsp;region&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;INTO&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(region).&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;clear&amp;nbsp;l_s_node.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l_s_node-niobjnm&amp;nbsp;&amp;nbsp;=&amp;nbsp;'ZMO_REGIO'.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l_s_node-nodename&amp;nbsp;=&amp;nbsp;region.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;APPEND&amp;nbsp;l_s_node&amp;nbsp;&amp;nbsp;TO&amp;nbsp;c_t_node.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2"&gt;ENDCASE.&lt;/FONT&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;endmethod.&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/query-hierarchy-f4-help-not-customizeable-not-possible-for-a-multi-level/ba-p/13925205"/>
    <published>2024-10-31T16:19:34.903000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/cds-view-how-to-provide-the-default-value-for-hierarchy-node-variable-in/ba-p/13930165</id>
    <title>CDS View: How to provide the default value for hierarchy node variable in analytical queries</title>
    <updated>2024-11-08T15:57:12.182000+01:00</updated>
    <author>
      <name>LinaRaut</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/179963</uri>
    </author>
    <content>&lt;P&gt;This blog is about – how to provide static or dynamic default value for hierarchy node variable in&amp;nbsp;analytical queries.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Static Default values&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Hierar&lt;FONT size="3"&gt;chy node variable is defined using &lt;STRONG&gt;@AnalyticsDetails.variable&lt;/STRONG&gt; annotation. Static default value for this variable can be provided using @AnalyticsDetails.variable.defaultHierarchyNode annotation.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;In &lt;STRONG&gt;@AnalyticsDetails.variable&lt;/STRONG&gt; annotation, selectionType need to set as #HIERRARCHY_NODE, also hierarchyBinding is specified along with referenceElement, MultipleSelections.&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Example&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_ALLOWED
@EndUserText.label: 'Example of static default value'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
  serviceQuality: #X,
  sizeCategory: #S,
  dataClass: #MIXED
}
define transient view entity ZLR_RES_HIERNODE2
  provider contract analytical_query
  with parameters

    @EndUserText.label: 'Connection Hierarchy'
    p_hienm     : char5,

    @AnalyticsDetails.variable: {
       selectionType: #HIERARCHY_NODE,
       referenceElement: 'connid',
       hierarchyBinding: [{ type:#PARAMETER, value: 'p_hienm'}],
       multipleSelections: true,
       defaultHierarchyNode:
       {
         nodeType: 'carrid',
         node: [{element: 'carrid', value:'AZ' }]
       }

    }

    @Consumption.hidden: true
    p_hier_node : s_conn_id

  as projection on ZOQ_FLIGHT
{

  @AnalyticsDetails.query.displayHierarchy: #FILTER
  @AnalyticsDetails.query.axis: #ROWS
  @AnalyticsDetails.query.totals: #SHOW
  connid,

  currency,

  @Semantics.amount.currencyCode: 'CURRENCY'
  @AnalyticsDetails.query.axis: #COLUMNS
  paymentsum


}
where
      currency = 'EUR'
  and connid   = $parameters.p_hier_node&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Output&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_0-1730897022732.png" style="width: 572px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/187472i18351CAEEC9588EF/image-dimensions/572x506?v=v2" width="572" height="506" role="button" title="LinaRaut_0-1730897022732.png" alt="LinaRaut_0-1730897022732.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H1 id="toc-hId-945573821"&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Dynamic Default Values&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;Dynamic default values for hierarchy node variables should be derived from another CDS view (lookup view) at runtime.&lt;/P&gt;&lt;P&gt;@Consumption.derivation annotation enables derivation of the value for a parameter or a filter automatically at runtime by selecting a row from a given entity.&lt;/P&gt;&lt;P&gt;At first, a separate hierarchy node lookup view is defined.&lt;/P&gt;&lt;P&gt;Then hierarchy node variable is defined using @AnalyticsDetails.variable annotation.&lt;/P&gt;&lt;P&gt;To specify a default value for the previously defined node variable @Consumption.derivation.resultHierarchyNode is used.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;@Consumption.derivation&lt;/STRONG&gt; annotation contains,&lt;/P&gt;&lt;P&gt;lookupEntity, which provide the name of hierarchy node lookup view to get the hierarchy node.&lt;/P&gt;&lt;P&gt;resultHierachyNode annotation is used to provide hierarchy node value to a parameter.&lt;/P&gt;&lt;P&gt;resultHierarchyNode.nodeTypeElement must point to a field in the lookup entity and this field must return a fieldname. This fieldname (in the data of the lookup view) must be an existing fieldname in the lookup view. &amp;nbsp;If the value of field NodeTypeElement in the result of the lookup is initial, the row represents a leaf.&lt;/P&gt;&lt;P&gt;resultHierarchyNode.Mapping describes the mapping of the elements in the hierarchy view and the elements in the lookup entity.&lt;/P&gt;&lt;P&gt;Consumption.derivation.binding is possible to add filters to the lookup. This is generic and not specific to hierarchy nodes.&lt;/P&gt;&lt;H1 id="toc-hId-749060316"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Example&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H1&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: &lt;/STRONG&gt;Defining Hierarchy node lookup view&lt;/P&gt;&lt;P&gt;Hierarchy node look up view is use as a lookup entity in the @Consumption.derivation annotation.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Derivation for node parameter-resultHierarchyNode'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
  serviceQuality: #X,
  sizeCategory: #S,
  dataClass: #MIXED
}
define view entity ZLR_RES_DERIVE_BASE as select from  t000
{
   cast( 'carrid1' as fieldname ) as nodeType,
   cast( 'LH' as s_carr_id ) as carrid1, 
   cast( ' ' as s_conn_id ) as connid1,
   cast( ' ' as rsshnodename  ) as nodename1,
   $session.user                as userName                                                                             
}
where mandt = '000'&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: &lt;/STRONG&gt;Defining hierarchy node variable and use Consumption.derivation annotation in analytical query&lt;/P&gt;&lt;P&gt;In this example, ZLR_RES_DERIVE_BASE view is used as lookupEntity- which provides default value to the parameter&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_ALLOWED
@EndUserText.label: 'Example of dynamic default value'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
  serviceQuality: #X,
  sizeCategory: #S,
  dataClass: #MIXED
}
define transient view entity ZLR_RES_HIERNODE1 
provider contract analytical_query
with parameters

@EndUserText.label: 'Connection Hierarchy'
p_hienm : char5,

@AnalyticsDetails.variable: { 
   selectionType: #HIERARCHY_NODE, 
   referenceElement: 'connid',   
   hierarchyBinding: [{ type:#PARAMETER, value: 'p_hienm'}],
   multipleSelections: true
  
    }
  
@Consumption.derivation: {
  lookupEntity: 'ZLR_RES_DERIVE_BASE',
  resultHierarchyNode: {
      nodeTypeElement: 'nodetype',
      mapping: [
            { hierarchyElement: 'carrid', lookupElement: 'carrid1' },
            { hierarchyElement: 'connid', lookupElement: 'connid1' },
            { hierarchyElement: 'nodename', lookupElement: 'nodename1' }
      ]
    }
}
@Consumption.hidden: true
 p_hier_node : s_conn_id

as projection on ZOQ_FLIGHT
{

@AnalyticsDetails.query.displayHierarchy: #FILTER
@AnalyticsDetails.query.axis: #ROWS
@AnalyticsDetails.query.totals: #SHOW
connid,

currency,

@Semantics.amount.currencyCode: 'CURRENCY'
@AnalyticsDetails.query.axis: #COLUMNS
paymentsum
 
}
where currency = 'EUR' and connid = $parameters.p_hier_node&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Output&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_1-1730897281623.png" style="width: 562px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/187473i542CB42B4BC03B70/image-dimensions/562x514?v=v2" width="562" height="514" role="button" title="LinaRaut_1-1730897281623.png" alt="LinaRaut_1-1730897281623.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Please note that in the older release instead of using @AnalyticsDetails.variable annotation, @Consumption.hierarchyNodeSelection is used.&lt;/P&gt;&lt;P&gt;@Consumption.hierarchyNodeSelection: {&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; hierarchyElement: 'connid',&lt;/P&gt;&lt;P&gt;&amp;nbsp; hierarchyBinding: [{ type:#PARAMETER, value: 'p_hienm'}],&lt;/P&gt;&lt;P&gt;&amp;nbsp; multipleSelections: true&lt;/P&gt;&lt;P&gt;}&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/cds-view-how-to-provide-the-default-value-for-hierarchy-node-variable-in/ba-p/13930165"/>
    <published>2024-11-08T15:57:12.182000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/cds-how-to-define-analytical-query-using-two-structures/ba-p/13960195</id>
    <title>CDS : How to define analytical query using two structures</title>
    <updated>2024-12-20T14:44:22.867000+01:00</updated>
    <author>
      <name>LinaRaut</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/179963</uri>
    </author>
    <content>&lt;P&gt;This blog is about how to use two structures in CDS analytical query as in BW query.&lt;/P&gt;&lt;P&gt;The structure forms the foundational layout of the axes (rows or columns) in a data table, determining how information is organized and presented.&lt;BR /&gt;Structural components of key figure structures are always based on the key figure selections (basic key figures, restricted key figures, and calculated key figures). Characteristic structural components cannot contain key figure selections.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The arrangement of the structure affects the order and quantity of key figures or characteristics displayed in the rows and columns of a query or report.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt; BW Query with Characteristic structure and Key Figure structure&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_0-1733840825806.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/200347i1F98FC24B75D30C2/image-size/large?v=v2&amp;amp;px=999" role="button" title="LinaRaut_0-1733840825806.png" alt="LinaRaut_0-1733840825806.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In Analytical query, elements can be assigned to characteristics structure using @AnalyticsDetails.query.onCharacteristicStructure: true. Element with measures get automatically assigned to measure structure.&lt;/P&gt;&lt;P&gt;Formulas can be defined for both characteristic structure and measure structure. The operands of a formula must be elements of the same structure to which the formula belongs. Operands of the other structure are not allowed.&lt;/P&gt;&lt;P&gt;If an analytical query has two structures (a measure and a characteristic structure), then the query result is a grid. Each cell in this grid is defined by an element of the measure structure and one of the characteristic structures. Restrictions are combined with AND. If both elements are formulas, the formula of the measure structure is calculated by default. Also, other properties like scaling, decimals are taken from the element of the measure structure by default. If this should be different, @AnalyticsDetails.query.collisionHandling annotation is used.&lt;/P&gt;&lt;P&gt;&amp;nbsp; collisionHandling&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;{&lt;/STRONG&gt; formula&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;:&lt;/STRONG&gt; String&lt;STRONG&gt;(&lt;/STRONG&gt; 20&lt;STRONG&gt;)&lt;/STRONG&gt; &lt;STRONG&gt;enum&lt;/STRONG&gt; &lt;STRONG&gt;{&lt;/STRONG&gt; DEFAULT&lt;STRONG&gt;;&lt;/STRONG&gt; THIS&lt;STRONG&gt;;&lt;/STRONG&gt; CONCURRENT&lt;STRONG&gt;;&lt;/STRONG&gt; &lt;STRONG&gt;};&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; decimals&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;:&lt;/STRONG&gt; String&lt;STRONG&gt;(&lt;/STRONG&gt; 20&lt;STRONG&gt;)&lt;/STRONG&gt; &lt;STRONG&gt;enum&lt;/STRONG&gt; &lt;STRONG&gt;{&lt;/STRONG&gt; DEFAULT&lt;STRONG&gt;;&lt;/STRONG&gt; THIS&lt;STRONG&gt;;&lt;/STRONG&gt; CONCURRENT&lt;STRONG&gt;;&lt;/STRONG&gt; &lt;STRONG&gt;};&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; scaling&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;:&lt;/STRONG&gt; String&lt;STRONG&gt;(&lt;/STRONG&gt; 20&lt;STRONG&gt;)&lt;/STRONG&gt; &lt;STRONG&gt;enum&lt;/STRONG&gt; &lt;STRONG&gt;{&lt;/STRONG&gt; DEFAULT&lt;STRONG&gt;;&lt;/STRONG&gt; THIS&lt;STRONG&gt;;&lt;/STRONG&gt; CONCURRENT&lt;STRONG&gt;;&lt;/STRONG&gt; &lt;STRONG&gt;};&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; semanticObject &lt;STRONG&gt;:&lt;/STRONG&gt; String&lt;STRONG&gt;(&lt;/STRONG&gt; 20&lt;STRONG&gt;)&lt;/STRONG&gt; &lt;STRONG&gt;enum&lt;/STRONG&gt; &lt;STRONG&gt;{&lt;/STRONG&gt; DEFAULT&lt;STRONG&gt;;&lt;/STRONG&gt; THIS&lt;STRONG&gt;;&lt;/STRONG&gt; CONCURRENT&lt;STRONG&gt;;&lt;/STRONG&gt; &lt;STRONG&gt;};&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;};&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_ALLOWED
@EndUserText.label: 'CDS Query with 2 Structures'
@ObjectModel.modelingPattern: #ANALYTICAL_QUERY
@ObjectModel.supportedCapabilities: [ #ANALYTICAL_QUERY ]

define transient view entity ZLR_2STRUCT_CELL_REF_SIMPLE
provider contract analytical_query
as projection on ZOQ_FLIGHT
{

//----Elements of Key Figure structure
@AnalyticsDetails.query.axis: #ROWS
@EndUserText.label: 'Max Capacity Economy'
seatsmax,

@AnalyticsDetails.query.axis: #ROWS
@EndUserText.label: 'Occupied Economy'
seatsocc,


@AnalyticsDetails.query.axis: #ROWS
@Aggregation.default: #FORMULA
@EndUserText.label: 'Percentage'
@AnalyticsDetails.query.decimals: 5
seatsocc / seatsmax * 100 as percentage,


//---Elements of Characteristics Structure

@AnalyticsDetails.query.axis: #COLUMNS
@EndUserText.label: 'Calender Year 2019'
@AnalyticsDetails.query.onCharacteristicStructure: true
case when flyear = '2019' then 1 else null end as year2019,

@AnalyticsDetails.query.axis: #COLUMNS
@EndUserText.label: 'Calender Year 2020'
@AnalyticsDetails.query.onCharacteristicStructure: true
case when flyear = '2020' then 1 else null end as year2020,

@AnalyticsDetails.query.axis: #COLUMNS
@Aggregation.default: #FORMULA
@EndUserText.label: 'Diffenece 2019-2020'
@AnalyticsDetails.query.onCharacteristicStructure: true
@AnalyticsDetails.query.decimals: 2
@AnalyticsDetails.query.collisionHandling: {decimals: #THIS}
 $projection.year2019 -  $projection.year2020 as difference

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Output:&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_0-1733840939495.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/200349i4B1D71B8375BDAD2/image-size/large?v=v2&amp;amp;px=999" role="button" title="LinaRaut_0-1733840939495.png" alt="LinaRaut_0-1733840939495.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To display structure element in a hierarchy, AnalyticsDetials.query.elementHierarchy.parent and @AnalyticsDetails.query.elementHierarchy.initiallyCollapsed annotations are used in CDS.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_ALLOWED
@EndUserText.label: 'CDS Query with 2 Structures'
@ObjectModel.modelingPattern: #ANALYTICAL_QUERY
@ObjectModel.supportedCapabilities: [ #ANALYTICAL_QUERY ]

define transient view entity ZLR_2STRUCT_CELL_REF_HIER
provider contract analytical_query
as projection on ZOQ_FLIGHT
{

//----Elements of Key Figure structure
@AnalyticsDetails.query.axis: #ROWS
@EndUserText.label: 'Max Capacity Economy'
seatsmax,

@AnalyticsDetails.query.axis: #ROWS
@EndUserText.label: 'Occupied Economy'
seatsocc,


@AnalyticsDetails.query.axis: #ROWS
@Aggregation.default: #FORMULA
@EndUserText.label: 'Percentage'
@AnalyticsDetails.query.decimals: 5
seatsocc / seatsmax * 100 as percentage,


//---Elements of Characteristics Structure

@AnalyticsDetails.query.axis: #COLUMNS
@EndUserText.label: 'Calender Year 2019'
@AnalyticsDetails.query.onCharacteristicStructure: true
  @AnalyticsDetails.query.elementHierarchy.parent: 'difference'
case when flyear = '2019' then 1 else null end as year2019,

@AnalyticsDetails.query.axis: #COLUMNS
@EndUserText.label: 'Calender Year 2020'
@AnalyticsDetails.query.onCharacteristicStructure: true
  @AnalyticsDetails.query.elementHierarchy.parent: 'difference'
case when flyear = '2020' then 1 else null end as year2020,

@AnalyticsDetails.query.axis: #COLUMNS
@Aggregation.default: #FORMULA
@EndUserText.label: 'Diffenece 2019-2020'
@AnalyticsDetails.query.onCharacteristicStructure: true
@AnalyticsDetails.query.decimals: 2
@AnalyticsDetails.query.collisionHandling: {decimals: #THIS}
@AnalyticsDetails.query.elementHierarchy.initiallyCollapsed: true  
$projection.year2019 -  $projection.year2020 as difference

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Output:&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_0-1733841400499.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/200350iEACEA12DD6E36CDA/image-size/large?v=v2&amp;amp;px=999" role="button" title="LinaRaut_0-1733841400499.png" alt="LinaRaut_0-1733841400499.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;After Expanding Hierarchy&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_1-1733841400500.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/200351i346EDC9E54E35CC4/image-size/large?v=v2&amp;amp;px=999" role="button" title="LinaRaut_1-1733841400500.png" alt="LinaRaut_1-1733841400500.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Reference:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-US/46/81fc706a23468ce10000000a114a6b/content.htm?no_cache=true" target="_blank" rel="noopener noreferrer"&gt;Working with Structures&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/cds-how-to-define-analytical-query-using-two-structures/ba-p/13960195"/>
    <published>2024-12-20T14:44:22.867000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/cds-how-to-define-analytical-query-using-cell-definition/ba-p/13992131</id>
    <title>CDS : How to define analytical query using cell definition</title>
    <updated>2025-02-19T15:53:49.446000+01:00</updated>
    <author>
      <name>LinaRaut</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/179963</uri>
    </author>
    <content>&lt;P&gt;This blog is about how to use cell definition in CDS analytical query as like in BW query. Lets start with brief overview about two structures.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-951174432"&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Two Structures&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;The structure forms the foundational layout of the axes (rows or columns) in a data table, determining how information is organized and presented. The arrangement of the structure affects the order and quantity of key figures or characteristics displayed in the rows and columns of a query or report. More information can be found in&amp;nbsp; &lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/cds-how-to-define-analytical-query-using-two-structures/ba-p/13960195" target="_blank"&gt;CDS : How to define analytical query using two str... - SAP Community&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-883743646"&gt;&lt;FONT size="4"&gt;Cell Definition&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;A cell is the intersection between two structural components. Each cell in grid is defined by an element of the measures-structure and one of the characteristic-structure.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Exception cell&lt;/STRONG&gt;: When implicit cell definition overwritten by an explicit definition, cell is called as exception cell. It can be defined using formula or selection.&amp;nbsp;&lt;SPAN&gt;Formulas for a cell must only use operands which are cells.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Help cell&lt;/STRONG&gt;: It does not have any direct connection with the corresponding structural elements. It is not embedded in the grid and not displayed, but can be used in formulas of an exception cell.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In BW modelling tool query designer, In 'Cell' tab we can specify the cell definition.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_0-1738656173738.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/221558i1FAFA2D624F36AB7/image-size/large?v=v2&amp;amp;px=999" role="button" title="LinaRaut_0-1738656173738.png" alt="LinaRaut_0-1738656173738.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the above screenshot marked,&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;Red&amp;nbsp; &amp;nbsp; &lt;/FONT&gt;: Exception cell&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;Green&amp;nbsp;&lt;/FONT&gt;: Formula to calculate the value for the exception cell&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;Blue&amp;nbsp; &amp;nbsp;&lt;/FONT&gt;: Help cell&lt;/P&gt;&lt;P&gt;In analytical query to define the Exception cell, following annotation is used.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AnalyticsDetails.query: {

  isCell: true,

  cellReference: {

    measureStructureElement: 'seatsocc',

    characteristicStructureElement: 'yearPlaceholder'

  }

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;A cell is specified with “@AnalyticsDetails.query.isCell: true”,&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;If it should overwrite a cell of the grid, then the coordinates can be specified with @AnalyticsDetails.query.cellReference&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;(Exception Cell)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Otherwise, the element is invisible and must be hidden Consumption.hidden:true.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;(Help Cell)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;A value of a cell in the grid can be obtained with CDS function - GET_CELL_REFERENCE_VALUE, which can be used in formula of an exception or help cell.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Example&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;In the following example, '&lt;EM&gt;exceptionCellRatioPercent'&lt;/EM&gt;&amp;nbsp;is Exception cell, cellReference defines exact coordinate of this cell. '&lt;/FONT&gt;&lt;FONT size="3"&gt;&lt;SPAN&gt;&lt;EM&gt;helpCellratio'&lt;/EM&gt; is a helper cell, it does not have cellReference, it is not part of grid and has Consumption.hidden:true. It is used in formula of an exception cell '&lt;EM&gt;exceptionCellRatioPercent'&amp;nbsp;&lt;/EM&gt;to calculate percentage of occupied seats.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_ALLOWED
@EndUserText.label: 'Query with structure and cell definition'
@ObjectModel.modelingPattern: #ANALYTICAL_QUERY
@ObjectModel.supportedCapabilities: [#ANALYTICAL_QUERY]
// CDS Query like the normal query ZLR_2STRUCT_CELL_CAL
define transient view entity ZLR_2STRUCT_CELL_REF
provider contract analytical_query
as projection on ZOQ_FLIGHT
{

//Elements of the Key Figure Structure
@AnalyticsDetails.query.axis: #ROWS
@EndUserText.label: 'Max Seats'
seatsmax,

@AnalyticsDetails.query.axis: #ROWS
@EndUserText.label: 'Occupied Seats'
seatsocc,


//Elements of the Characteristic Structure
@AnalyticsDetails.query.axis: #COLUMNS
@EndUserText.label: '2020'
@AnalyticsDetails.query.onCharacteristicStructure: true
case when flyear = '2020' then 1 else null end as year2020,

@AnalyticsDetails.query.axis: #COLUMNS
@EndUserText.label: 'Occupied %'
@AnalyticsDetails.query.onCharacteristicStructure: true
case when flyear = '0000' then 1 else null end as yearPlaceholder,


abap.unit'%' as unitPercent,

//Help cell - used in formula of exception cell
@Aggregation.default: #FORMULA
@AnalyticsDetails.query: {
  isCell: true  
}
@Consumption.hidden: true
// scalar function with use of cell refernce
ratio_of( portion =&amp;gt; GET_CELL_REFERENCE_VALUE(measure_struc_element =&amp;gt; $projection.seatsocc, characteristic_struc_element =&amp;gt; $projection.year2020 ),
total   =&amp;gt; GET_CELL_REFERENCE_VALUE(measure_struc_element =&amp;gt; $projection.seatsmax, characteristic_struc_element =&amp;gt; $projection.year2020) )  as helpCellratio,


// Exception cell 
@Aggregation.default: #FORMULA
@AnalyticsDetails.query: {
  isCell: true,
  cellReference: {
    measureStructureElement: 'seatsocc',
    characteristicStructureElement: 'yearPlaceholder'
  
  }
}
@AnalyticsDetails.query.decimals: 2
@Semantics.quantity.unitOfMeasure: 'unitPercent'
$projection.helpCellratio * 100 as exceptionCellRatioPercent

 
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Output&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_0-1737717251178.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/216508i1FA44E82494C69AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="LinaRaut_0-1737717251178.png" alt="LinaRaut_0-1737717251178.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;More information can be found &lt;A href="https://help.sap.com/docs/SAP_NETWEAVER_AS_ABAP_FOR_SOH_740/04030263a0d041309a039fa3ea586720/9735e7691dbd47b1a7f29f26bfc2f70e.html?version=7.40.25" target="_blank" rel="noopener noreferrer"&gt;Cell, Exception Cell and Help Cell | SAP Help Portal&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/cds-how-to-define-analytical-query-using-cell-definition/ba-p/13992131"/>
    <published>2025-02-19T15:53:49.446000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/cds-how-to-use-analyticsdetails-query-ignorefurtherfilter-in-analytical/ba-p/14032597</id>
    <title>CDS: How to use AnalyticsDetails.query.ignoreFurtherFilter in Analytical query (Constant Selection)</title>
    <updated>2025-03-04T13:26:32.355000+01:00</updated>
    <author>
      <name>LinaRaut</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/179963</uri>
    </author>
    <content>&lt;P&gt;This blog is about how to use @ AnalyticsDetails.query.ignoreFurtherFilter in Analytical query to define a constant selection as like in BW query (see Note &amp;nbsp;944815).&lt;/P&gt;&lt;P&gt;‘Ignore filter’ is a property that influences the effect of filters on cells, in classic BW it is called as ‘Constant selection’. It is used to define a selection in query definition as fixed value. Navigation and filters then have no effect on this selection at runtime.&lt;/P&gt;&lt;P&gt;This feature is useful to calculate e.g., Market Index.&amp;nbsp; More information about constant selection can be found &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE/0ecf5244825c4742a7b062a89d11c2ac/4f03364885212f98e10000000a42189d.html?version=1709.latest" target="_blank" rel="noopener noreferrer"&gt;Constant Selection | SAP Help Portal&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1704561383"&gt;&lt;STRONG&gt;@ AnalyticsDetails.query.ignoreFurtherFilter &lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;annotation is used to model 'constant selection' in the Analytical Engine.&lt;/P&gt;&lt;P&gt;The value of each cell in a query result set is determined by different filters acting on this cell. These filters are from the structure element or key figures itself or global filters and drill down. &amp;nbsp;&lt;/P&gt;&lt;P&gt;Sometimes there is a need that not all filters should be applied, therefore with this annotation filters on certain dimensions or on all dimensions can be excluded.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;@AnalyticsDetails.query.ignoreFurtherFilter.forElement&lt;/STRONG&gt;: Global filters and filters from drill down will not be applied on the structure element for the elements listed in the array.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;@AnalyticsDetails.query.ignoreFurtherFilter.forAllElements&lt;/STRONG&gt;: No global filters and no filter from drill down will be applied on the structure element.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1637130597"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Example&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_ALLOWED
@EndUserText.label: 'IGNOREFILTER- constant selection'
@ObjectModel.modelingPattern: #ANALYTICAL_QUERY
@ObjectModel.supportedCapabilities: [#ANALYTICAL_QUERY]
define transient view entity ZLR_PC_IGNOREFILTER1
provider contract analytical_query
as projection on ZDMO_I_FLIGHTCUBE
{
  
  @AnalyticsDetails.query.axis: #ROWS 
  AirlineID,

  @AnalyticsDetails.query.axis: #ROWS 
  @AnalyticsDetails.query.totals: #SHOW
  ConnectionID,

  
  CurrencyCode,
   
  
  @EndUserText.label: 'Price in 2024  '
  @Semantics.amount.currencyCode: 'CurrencyCode'
   case when FlightYear = '2024' then Price else null end as priceIn2024_without,
   
   
  @EndUserText.label: 'Price in 2024 for Airline'
  @Semantics.amount.currencyCode: 'CurrencyCode'
  @AnalyticsDetails.query.ignoreFurtherFilter.forElement: ['ConnectionID' ]
  case when FlightYear = '2024' then Price else null end as priceIn2024
 
}
where AirlineID = 'AA' or AirlineID = 'AZ'&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1440617092"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Output &lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;In the above example column 'Price in 2024 for Airline' shows the total price for airline, as 'ConnectionID' filter is ignored with annotation @AnalyticsDetails.query.ignoreFurtherFilter.forElement: ['ConnectionID' ]&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_0-1741090803682.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/232841i0FEF5347EC3A6674/image-size/large?v=v2&amp;amp;px=999" role="button" title="LinaRaut_0-1741090803682.png" alt="LinaRaut_0-1741090803682.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1244103587"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Constraint&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;This feature is only available in Analytical query&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/cds-how-to-use-analyticsdetails-query-ignorefurtherfilter-in-analytical/ba-p/14032597"/>
    <published>2025-03-04T13:26:32.355000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/cds-how-to-use-analyticsdetails-elimination-annotation-to-eliminate-the/ba-p/14106626</id>
    <title>CDS: How to use @AnalyticsDetails.elimination annotation to eliminate the internal business volume</title>
    <updated>2025-05-26T21:35:47.915000+02:00</updated>
    <author>
      <name>LinaRaut</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/179963</uri>
    </author>
    <content>&lt;P&gt;This blog is about how to use @AnalyticsDetails.elimination to eliminate the internal business volume when executing an analytical query.&lt;/P&gt;&lt;H3 id="toc-hId-1859622597"&gt;&lt;STRONG&gt;Internal business volume&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="3"&gt;When revenues made between two subsidiaries of company, for company’s total revenue, these revenues should not be considered, as transaction is happening within the company.&amp;nbsp;&lt;/FONT&gt;&lt;FONT size="3"&gt;For example, a company is divided into several subsidiaries. These subsidiaries are divided into further subsidiaries. This means there exists a hierarchy of subsidiaries. Subsidiaries are selling products to each other. For each subsidiary this is external sales. But for a parent subsidiary this is just internal sales, as both subsidiaries are descendants. By using this annotation, revenues made between two subsidiaries in an organization are no longer displayed.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;More information about the concept can be found &lt;A href="https://help.sap.com/docs/SAP_NETWEAVER_AS_ABAP_FOR_SOH_740/0ecf5244825c4742a7b062a89d11c2ac/4a245d75b1160456e10000000a421937.html?version=7.40.26&amp;amp;q=analytical+manager" target="_blank" rel="noopener noreferrer"&gt;Elimination of Internal Business Volume | SAP Help Portal&lt;/A&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1663109092"&gt;&lt;STRONG&gt;Syntax&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;elimination: {&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; pair : array of {&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dimension1: String(30);&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; dimension2: String(30);&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; rule : String(20) enum { ELIMINATE_IF_ALL; ELIMINATE_IF_ONE; };&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp; }&lt;/P&gt;&lt;P&gt;The annotation can be used in cube-views (Analytics.dataCategory: #CUBE) or in analytical queries (define transient view entity with provider contract analytical query).&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;pair&lt;/STRONG&gt;: this list defines the pairs (dimension1 and dimension2) which are checked for elimination. Both dimensions have needed a foreign key association to the same target view. If the annotation is used on cube level, both dimensions must be elements of the cube. If the annotation is used in an analytical query, both dimensions must be part of the source cube view.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;rule&lt;/STRONG&gt;: if set to #ELIMINATE_IF_ALL, then the volume is eliminated if all pairs are internal. If set to #ELIMINATE_IF_ONE the volume is eliminated if at least one pair is internal. If "rule" is not set, the AND-logic (ELIMINATE_IF_ALL) is applied.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Example&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Following example displays the number of seat booked in flight according to the elimination rule specified on destination&amp;nbsp;airport, departure&amp;nbsp;airport, destination&amp;nbsp;country, departure country.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_ALLOWED
@EndUserText.label: 'Elimination of Internal Busniess volumn'
@ObjectModel.modelingPattern: #ANALYTICAL_QUERY
@ObjectModel.supportedCapabilities: [#ANALYTICAL_QUERY]
define transient view entity ZLR_PC_FLIGHTICE_SIMPLE
  provider contract analytical_query
  as projection on ZOQ_FLIGHT_ICE
{

  _airportfrom._hier( p_HierarchyID : 'GEO' ) as _airportFromHier,
  @Consumption.hidden: true
  _airportfrom.AirportID                      as dummyAirportFrom,


  _airportto._hier( p_HierarchyID : 'GEO' )   as _airportToHier,
  @Consumption.hidden: true
  _airportto.AirportID                        as dummyAirportTo,
  
  @AnalyticsDetails.query: {
    axis: #ROWS,
    displayHierarchy: #ON,
    hierarchyAssociation: '_airportFromHier'
  }
  
  airportfrom,
  
  @AnalyticsDetails.query: {
    axis: #ROWS,
    displayHierarchy: #ON,
    hierarchyAssociation: '_airportToHier'
  }
  airportto,

  @Consumption.filter.defaultValue: 'DE'
  @AnalyticsDetails.query.axis: #ROWS
  countryfrom,

  @AnalyticsDetails.query.axis: #ROWS
  countryto,

  seatsmax,



  @AnalyticsDetails.elimination: {
    pair: [{ dimension1 : 'countryfrom' , dimension2: 'countryto' }]
  }
  @EndUserText.label: 'SeatsMax Q-ICE country'
  seatsmax                                    as seatsmaxICEQ_C,


  @AnalyticsDetails.elimination:{
    pair: [ { dimension1 : 'airportfrom' , dimension2: 'airportto' },
            { dimension1 : 'countryfrom' , dimension2: 'countryto' } ],
    rule: #ELIMINATE_IF_ALL
  }
  @EndUserText.label: 'SeatsMax Q-ICE airport and country'
  seatsmax                                    as seatsmaxICEQ_AC,


  @AnalyticsDetails.elimination:{
    pair: [ { dimension1 : 'airportfrom' , dimension2: 'airportto' },
            { dimension1 : 'countryfrom' , dimension2: 'countryto' } ],
    rule: #ELIMINATE_IF_ONE
  }
  @EndUserText.label: 'SeatsMax Q-ICE airport or country'
  seatsmax                                    as seatsmaxICEQ_A_C


}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1466595587"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Output &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LinaRaut_0-1747740751661.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/263737iB4743F1656B2A571/image-size/large?v=v2&amp;amp;px=999" role="button" title="LinaRaut_0-1747740751661.png" alt="LinaRaut_0-1747740751661.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In this example for columns (cells marked with colour):&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;SeatsMax Q-ICE country&lt;/FONT&gt; – elimination pair mentioned as 'countryfrom' and 'countryto'. Therefore, there is no entry where departure country and destination country&amp;nbsp;are same.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;SeatsMax Q-ICE airport and country-&lt;/FONT&gt; elimination pairs are 'airportfrom' and 'airportto', 'countryfrom' and 'countryto' And rule as #ELIMINATE_IF_ALL, Therefore, there is no entry where destination airport and departure airport are same AND destination country and departure country are same.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FFCC00"&gt;SeatsMax Q-ICE airport or country&lt;/FONT&gt; - elimination pairs are 'airportfrom' and 'airportto', 'countryfrom' and 'countryto' And rule as #ELIMINATE_IF_ONE, Therefore, there is no entry where destination airport and departure airport are same OR destination country and departure country are same.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1270082082"&gt;&lt;STRONG&gt;Constraints&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;The annotation can be used in cubes or in queries.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The dimension names in one pair (AnalyticsDetails.elimination.pair) must have a foreign key association to the same dimension view and this dimension view must have an hierarchy association.&lt;/LI&gt;&lt;LI&gt;In the query definition:&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;It is not necessary that any of the dimensions in the list of pairs is part of the query&lt;/LI&gt;&lt;LI&gt;If a hierarchy is assigned to a dimension, then the pair dimension must be assigned to the same hierarchy or must be without hierarchy&lt;/LI&gt;&lt;LI&gt;If a dimension is not in drill down, then the condition of the one pair is always true (independent of the value of the other dimension of the pair). The same is true on totals/subtotal lines.&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/cds-how-to-use-analyticsdetails-elimination-annotation-to-eliminate-the/ba-p/14106626"/>
    <published>2025-05-26T21:35:47.915000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/exploring-cds-based-analytical-models-with-the-relation-explorer-analytical/ba-p/14229070</id>
    <title>Exploring CDS based Analytical Models with the Relation Explorer - analytical view/perspective</title>
    <updated>2025-10-01T16:39:40.313000+02:00</updated>
    <author>
      <name>martin_mayer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/191669</uri>
    </author>
    <content>&lt;P&gt;Relation explorer &lt;STRONG&gt;analytical view / analytical perspective&lt;/STRONG&gt; makes it easy to get an&amp;nbsp;overview of the analytical model with very less clicks.&amp;nbsp;No need to open all the views to understands details.&lt;/P&gt;&lt;P&gt;We start small , looking to a branch of a star schema , &lt;STRONG&gt;dimension&lt;/STRONG&gt; Connection (&amp;nbsp;/DMO/ANA_I_Connection ) which is part of the flight data model.&amp;nbsp; After calling the relation explorer we see the Relation Explorer Tab in the below section of the screenshot.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="martin_mayer_1-1759323592595.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322013iB6966D0C878BC05F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="martin_mayer_1-1759323592595.png" alt="martin_mayer_1-1759323592595.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Relation Explorer tab shows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;in the left pane the associations from the dimension to other CDS views &lt;U&gt;over all levels&lt;/U&gt; are&amp;nbsp;visualizes . It starts fully expanded!&lt;BR /&gt;next to the CDS view name we see the view type. E.g. /DMO/ANA_I_CARRIER is of type [Dimension]&lt;/LI&gt;&lt;LI&gt;in the right pane one can see all the elements of current view. As&amp;nbsp;/DMO/ANA_I_Connection is selected all elements of this dimension are displayed.&lt;UL&gt;&lt;LI&gt;One can select (single click) any other view e.g. /DMO/ANA_I_CARRIER and the right pane get updated with the elements of that view.&lt;/LI&gt;&lt;LI&gt;double clicking the view will directly open the view&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;the right pane displays all elements grouped by roles.&lt;UL&gt;&lt;LI&gt;In this example we have 2 keys and e.g. expanding AirlineID show label and additional details about association and InfoObject. In case of compounded parent we would have seen the Parent element.&lt;/LI&gt;&lt;LI&gt;double clicking AirlineID highlight the element in the source ( see line 21 )&lt;/LI&gt;&lt;LI&gt;[Text] gives a hint that AirlineID has text,&amp;nbsp;this is missing for ConnetionID -&amp;gt; no Text supported&lt;/LI&gt;&lt;LI&gt;Attributes list all dimension attributes. Last one, DistanceUnit is a Unit element.&lt;/LI&gt;&lt;LI&gt;the Unit group show all unit related elements.&lt;/LI&gt;&lt;LI&gt;other group are shown if relevant.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;One can also start the analytical Relation Explorer based on query or cube view.&lt;BR /&gt;In both cases the cube view is opened and visualizes the cube with all associations .&lt;/P&gt;&lt;P&gt;We change focus and look to the example of a &lt;STRONG&gt;query&lt;/STRONG&gt;&amp;nbsp;- starting relation explorer shows the cube definition including dimension Connection from above.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="martin_mayer_0-1759325206609.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322016i9D9521200352EC39/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="martin_mayer_0-1759325206609.png" alt="martin_mayer_0-1759325206609.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;with one view&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;in the left pane we get all associations visualizes. View names are shown with the view types&lt;/LI&gt;&lt;LI&gt;in the right pane we can see all 13 dimensions of the cube and get if dimension support Text, have Attributes or Hierarchies&lt;UL&gt;&lt;LI&gt;from 1st screenshot we already know that Text, Attributes and Hierarchies are available for AirlineID&lt;/LI&gt;&lt;LI&gt;expanding ConnectionID show that it is compounded to AirlineID&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;we see all 5 measures with additional details like aggregation method and unit&lt;/LI&gt;&lt;LI&gt;with " Units (2) " we see the unit related dimensions. This section only list those dimension that are unit relevant.&amp;nbsp; Expanding the dimension like CurrencyCode lists all related measures.&amp;nbsp;&lt;BR /&gt;( Both dimension are also listed in dimension section. )&lt;/LI&gt;&lt;LI&gt;for time based dimension one can directly understand the base dimension and wherefrom it is derived without looking into the source ( see below snippet with FiscalYearMonth )&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="martin_mayer_0-1759322874979.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322010i53240695CD5E5697/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="martin_mayer_0-1759322874979.png" alt="martin_mayer_0-1759322874979.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;How to start the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-development-tools-user-guide/relation-explorer" target="_self" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Relation Explorer&lt;/STRONG&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="martin_mayer_1-1758891540834.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320499i4A0D737B505A0062/image-size/medium?v=v2&amp;amp;px=400" role="button" title="martin_mayer_1-1758891540834.png" alt="martin_mayer_1-1758891540834.png" /&gt;&lt;/span&gt;call relation explorer to see the view&lt;/P&gt;&lt;P&gt;right click somewhere in the CDS view&amp;nbsp;&lt;/P&gt;&lt;P&gt;(&amp;nbsp;in case of CDS view type cube, dimension or query the analytical view is the default view )&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;If the view is not shown, choose &lt;STRONG&gt;Configure Context&lt;/STRONG&gt; and activate it.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;one can switch any time to different perspective / context if needed&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="martin_mayer_1-1759325661029.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322021i11B35C6E5358E291/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="martin_mayer_1-1759325661029.png" alt="martin_mayer_1-1759325661029.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Release Info:&lt;/STRONG&gt;&amp;nbsp; analytical view / analytical perspective started with&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;BW/4HANA 2023 FP 04&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;S/4HANA Public Cloud and Privat Cloud OP2023&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/exploring-cds-based-analytical-models-with-the-relation-explorer-analytical/ba-p/14229070"/>
    <published>2025-10-01T16:39:40.313000+02:00</published>
  </entry>
</feed>
