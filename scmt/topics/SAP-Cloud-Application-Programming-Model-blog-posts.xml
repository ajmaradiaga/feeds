<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Cloud-Application-Programming-Model-blog-posts.xml</id>
  <title>SAP Community - SAP Cloud Application Programming Model</title>
  <updated>2025-10-11T23:00:48.534574+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Cloud Application Programming Model/pd-p/9f13aee1-834c-4105-8e43-ee442775e5ce" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Cloud Application Programming Model blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-update-first-release-of-the-sap-fiori-mcp-server-for/ba-p/14204694</id>
    <title>SAP Fiori Tools Update – First Release of the SAP Fiori MCP Server for Agentic AI Workflows</title>
    <updated>2025-09-03T09:45:49.103000+02:00</updated>
    <author>
      <name>Christoph_Gollmick</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/14530</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;We’re excited to announce the &lt;STRONG&gt;release of the SAP Fiori MCP server&lt;/STRONG&gt;, a new capability that lets AI coding assistants directly create and edit &lt;/SPAN&gt;&lt;SPAN&gt;SAP Fiori applications. This marks the next milestone in our AI journey, following the &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/from-idea-to-app-using-ai-powered-project-accelerator-to-develop-sap-fiori/ba-p/14095300" target="_blank"&gt;Project Accelerator&lt;/A&gt; introduced earlier this year. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What is MCP — and why it matters?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The &lt;STRONG&gt;Model Context Protocol (MCP)&lt;/STRONG&gt; is an &lt;A href="https://modelcontextprotocol.io/docs/getting-started/intro" target="_blank" rel="noopener nofollow noreferrer"&gt;open standard&lt;/A&gt; that standardizes how applications provide context to large language models. MCP is already supported by clients such as Claude, Cline, Cursor, and VS Code allowing AI-powered workflows to interact seamlessly with developer tools.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introducing the SAP Fiori MCP server&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The SAP Fiori MCP server (&lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;@sap-ux/fiori-mcp-server&lt;/A&gt;) is an open-source node.js module delivered as part of the &lt;STRONG&gt;open-ux-tools &lt;/STRONG&gt;&lt;A href="https://github.com/SAP/open-ux-tools/" target="_self" rel="nofollow noopener noreferrer"&gt;repository&lt;/A&gt;. It enables developers using AI coding assistants to generate and adapt SAP Fiori elements applications with precision and context awareness. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It is not the only MCP server published by SAP. The &lt;STRONG&gt;CAP MCP server&lt;/STRONG&gt; (&lt;A href="https://www.npmjs.com/package/@cap-js/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;@cap-js/mcp-server&lt;/A&gt;) provides tools to create and modify CAP node.js projects, and the &lt;STRONG&gt;UI5 MCP server&lt;/STRONG&gt; (&lt;A href="https://www.npmjs.com/package/@ui5/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;@ui5/mcp-server&lt;/A&gt;)&lt;/SPAN&gt;&lt;SPAN&gt; allows AI assistants to write SAPUI5&lt;/SPAN&gt;&lt;SPAN&gt; code. Together, these servers provide complementary entry points into different areas of SAP application development, so that AI assistants can seamlessly &lt;/SPAN&gt;&lt;SPAN&gt;data models, SAP Fiori applications, and SAPUI5 code.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For more information also have a look at the related blog posts:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849" target="_self"&gt;Boost your CAP Development with AI: Introducing the MCP Server for CAP&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/give-your-ai-agent-some-tools-introducing-the-ui5-mcp-server/ba-p/14200825" target="_self"&gt;Give Your AI Agent Some Tools: Introducing the UI5 MCP Server&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;With the MCP servers in place, you can already try out scenarios such as:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;“Please add an SAP Fiori elements list report app to my CAP project.”&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;“Generate a new CAP project and SAP Fiori app based on my_sketch.png.”&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;“Add Flexible Column Layout to the app.”&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;“Enable initial load for the SAP Fiori app.”&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;⚠&lt;SPAN&gt;️ &lt;EM&gt;Note: The SAP Fiori MCP server is currently released in &lt;STRONG&gt;experimental state&lt;/STRONG&gt; and subject to rapid change and enhancements.&lt;/EM&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI assistants can discover and act on SAP Fiori projects&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The first release comes with a set of capabilities designed to let AI assistants both discover and act on SAP Fiori projects. The SAP Fiori MCP server provides tools to generate SAP Fiori elements applications for CAP node.js projects, finds SAP Fiori applications in the workspace, and allows to edit applications and pages inside applications. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To ensure that the AI produces correct results, we propose rules that guide the LLM’s behavior (see &lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server#rules" target="_blank" rel="noopener nofollow noreferrer"&gt;rules&lt;/A&gt;). These rules cover important aspects such as using proper SAP Fiori elements application patterns, ensuring data models are valid with UUID primary keys, generating sample data consistently, and preferring code-based modifications over screen personalization. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can configure the server to be directly called with npx or install it globally via npm (see &lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server#usage" target="_blank" rel="noopener nofollow noreferrer"&gt;usage&lt;/A&gt;). In both cases, it integrates easily into an MCP-enabled client such as Cline.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Example how the SAP Fiori MCP server is used in Cline." style="width: 765px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308017iA55B99B19DAD23CD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Christoph_Gollmick_1-1756821532142.png" alt="Example how the SAP Fiori MCP server is used in Cline." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Example how the SAP Fiori MCP server is used in Cline.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Developers can build apps more quickly using MCP servers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;By connecting directly into SAP Fiori projects through MCP, developers gain a much more cost-effective way to experiment with AI support. They can let LLMs execute complex tasks in context—while the built-in functions and rules ensure adherence to SAP Fiori best practices. This reduces the risk of hallucinations, accelerates prototyping, and makes it easier to iterate quickly on new ideas. Since the SAP Fiori MCP server is &lt;/SPAN&gt;&lt;SPAN&gt;with other MCP servers like UI5 and CAP, developers can benefit from a consistent AI-driven experience across different parts of the development process.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;This is the first step on the MCP journey&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The current release is just the first step. We are already working on extending the server with a &lt;STRONG&gt;document search feature&lt;/STRONG&gt; that will make guidance from SAP documentation, tutorials, and examples directly available to the LLM. This means that the AI assistant won’t just follow rules embedded in the server but can also draw from the wealth of published learning content.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In addition, the &lt;STRONG&gt;generator functionality&lt;/STRONG&gt;, which in the first release is limited to CAP node.js projects, will be expanded to support &lt;STRONG&gt;any suitable OData source&lt;/STRONG&gt;. This will significantly broaden the scenarios in which the SAP Fiori MCP server can be applied, giving developers much more flexibility in how they use AI to create and adapt applications.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Try the SAP Fiori MCP server at SAP TechEd 2025&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can experience the SAP Fiori MCP server live at &lt;STRONG&gt;SAP TechEd Berlin&lt;/STRONG&gt;. In session &lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749126322451001Fcbi" target="_blank" rel="noopener noreferrer"&gt;CA261 – Create great UX with AI, SAP Design System, SAP Fiori elements, and SAPUI5&lt;/A&gt;, we’ll guide you through using AI and MCP to generate applications, adapt them, and extend them with SAPUI5. It’s a hands-on workshop designed to show how these new capabilities come together in practice.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Closing&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This release marks the start of a new era in SAP Fiori development, where AI assistants can not only suggest but also execute tasks reliably. With upcoming enhancements like doc search and broader generator support, we’re laying the groundwork for &lt;STRONG&gt;smarter, faster, and more flexible AI-driven development&lt;/STRONG&gt;. As an open-source project we also welcome your contributions. We encourage you to report any issues you encounter. Your feedback is invaluable to us.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We can’t wait to see how you experiment with it—and we look forward to meeting you at TechEd!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-update-first-release-of-the-sap-fiori-mcp-server-for/ba-p/14204694"/>
    <published>2025-09-03T09:45:49.103000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602</id>
    <title>SAP Build introduces new MCP Servers to enable agentic development for Enterprise Applications</title>
    <updated>2025-09-03T10:00:34.225000+02:00</updated>
    <author>
      <name>YuvalA</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/172240</uri>
    </author>
    <content>&lt;P&gt;Agentic AI application development is fundamentally reshaping the way business applications are designed, developed, and delivered. AI-powered assistants and copilots are rapidly becoming an integral part of the development process, helping teams to boost productivity, reduce errors, and innovate faster than ever.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Meeting Developers Where They Are&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP is committed to meeting developers where they’re at – that means no matter where or how you code, you have the freedom to choose the environment that best suits your needs and access to the tools that maximize your productivity and impact.&lt;/P&gt;&lt;P&gt;To that end, I’m excited to share that &lt;STRONG&gt;SAP is introducing &lt;/STRONG&gt;&lt;STRONG&gt;Model Context Protocol (MCP)&lt;/STRONG&gt; &lt;STRONG&gt;servers&lt;/STRONG&gt; to boost development with the following technologies:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849" target="_blank"&gt;Cloud Application Programming Model (CAP)&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-update-first-release-of-the-sap-fiori-mcp-server-for/ba-p/14204694" target="_blank"&gt;SAP Fiori Elements&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/give-your-ai-agent-some-tools-introducing-the-ui5-mcp-server/ba-p/14200825" target="_self"&gt;SAPUI5&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;By adopting these new MCP standards, developers can seamlessly extend SAP’s development capabilities into multiple environments, ensuring flexibility and choice. SAP Build now enhances popular IDEs and AI coding assistants such as Cursor, Windsurf, Github Copilot, Cline and Claude Code.&lt;/P&gt;&lt;P&gt;We are also excited to share that the &lt;STRONG&gt;MCP Servers&lt;/STRONG&gt;&amp;nbsp;are being released as an &lt;STRONG&gt;open-source projects&lt;/STRONG&gt;, licensed under the &lt;STRONG&gt;Apache-2.0 license&lt;/STRONG&gt;. This marks another step in our commitment to openness and community-driven innovation. &lt;EM&gt;Learn more about &lt;/EM&gt;&lt;A href="https://www.sap.com/about/company/innovation/open-source.html" target="_blank" rel="noopener noreferrer"&gt;&lt;EM&gt;Open Source at SAP&lt;/EM&gt;&lt;/A&gt;&lt;EM&gt;.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is an MCP?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;A href="https://modelcontextprotocol.io/docs/getting-started/intro" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP&lt;/A&gt; is an emerging open standard that allows AI models and tools to interact in a structured, secure, and consistent way. MCP acts as a universal bridge between an AI coding assistant with an LLM and external tools, data, and workflows — so the model can seamlessly fetch context, take actions, and deliver more accurate, useful results. MCP gives developers the ability to integrate their tools with the broader AI ecosystem while receiving the right assistance, at the right time, without switching contexts.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The Value of SAP MCP Tools&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;While many AI tools generate code, SAP takes this a step further by ensuring that what’s generated provides a solid foundation for building enterprise-grade applications. The MCP tools delivered by SAP are backed by our technology teams and designed specifically for SAP Business Applications. This means:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Best Practices Built-In:&amp;nbsp;&lt;/STRONG&gt;Generated code with CAP, UI5 and Fiori elements code already provides you with the right starting point for reaching SAP standards and proven design guidelines.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Guided Development: &lt;/STRONG&gt;Developers receive recommendations and guardrails tailored to SAP Business Technology Platform (BTP).&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;&lt;STRONG&gt;Consistency: &amp;nbsp;&lt;/STRONG&gt;SAP’s MCP tools are and will be reused across our tooling portfolio, ensuring consistent developer experience and outcomes wherever you build SAP applications. Whether you’re generating backend services, UIs, or business logic, you can rely on the same quality, structure, and compliance.&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Scaling AI Agents with SAP Expertise&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;One of the most powerful aspects of MCP adoption is the ability to upscale AI agent chat capabilities with deep SAP application development expertise. This means that AI copilots and agents can go beyond generic code suggestions to provide context-aware, SAP-specific guidance. Whether you are working with Vibe Coding tools on the web or coding directly in your IDE of choice, MCP brings value to everyone — from casual and junior developers to senior professionals. It enables you to build enterprise-grade SAP applications with confidence, while seamlessly combining AI-driven assistance with SAP’s trusted frameworks, best practices, and tooling to maximize productivity.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Looking Ahead&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;These are exciting times to be a developer. The combination of AI and open standards like MCP is rewriting the rules of software development. At SAP, we are committed to keeping our developer community at the forefront of innovation. By investing in AI-powered tools and standards, we ensure that you—our developers—have everything you need to build, scale, and innovate with confidence. &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602"/>
    <published>2025-09-03T10:00:34.225000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/evaluating-sap-s-new-mcp-servers-ui5-cap-and-fiori-tools-in-practice/ba-p/14205611</id>
    <title>Evaluating SAP’s new MCP servers: UI5, CAP, and Fiori tools in practice</title>
    <updated>2025-09-04T07:00:11.016000+02:00</updated>
    <author>
      <name>Marian_Zeis</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/61</uri>
    </author>
    <content>&lt;P class=""&gt;SAP published MCP servers for UI5, CAP, and Fiori tools. For background and official positioning, see the release post&amp;nbsp;overview &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602" target="_blank"&gt;SAP Build introduces MCP servers&lt;/A&gt;.&lt;/P&gt;&lt;P class=""&gt;The SAP Build article positions MCP as the standard bridge from coding assistants to SAP tools and support across popular IDE agents like Cursor, Windsurf, GitHub Copilot, Cline, and Claude Code. The emphasis is on best‑practice scaffolds, guardrails aligned to BTP, and consistent tool behavior across the portfolio.&lt;/P&gt;&lt;P class=""&gt;This post is a hands‑on review, not another introduction. I focus on what matters when you actually use these servers locally, how they complement my SAP Docs MCP server, and where the current limits are.&amp;nbsp;My Blog Posts about MCP can be found &lt;A href="https://community.sap.com/t5/tag/SAP%20MCP%20Server%20by%20Marian%20Zeis/tg-p/board-id/technology-blog-members" target="_self"&gt;here&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-why" id="toc-hId-1759139202"&gt;Why the official CAP, Fiori, and UI5 MCP servers matter&lt;/H2&gt;&lt;P class=""&gt;SAP now provides MCP servers focused on concrete development tasks in CAP, Fiori tools, and UI5. They complement a documentation-first server like my SAP Docs MCP by giving the AI project awareness and executable workflows. In practice, this means better results directly in your editor, without relying on Joule for Developers.&lt;/P&gt;&lt;H2 id="toc-hId-cap" id="toc-hId-1562625697"&gt;CAP MCP server&lt;/H2&gt;&lt;P class=""&gt;Package: &lt;A href="https://www.npmjs.com/package/@cap-js/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;@cap-js/mcp-server&lt;/A&gt;.&lt;BR /&gt;GitHub: &lt;A href="https://github.com/cap-js/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;github.com/cap-js/mcp-server&lt;/A&gt;.&lt;BR /&gt;Release background and usage intent are covered in &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849" target="_blank"&gt;Boost your CAP Development with AI: Introducing the MCP Server for CAP&lt;/A&gt;.&lt;/P&gt;&lt;P class=""&gt;What it does: gives LLMs a fuzzy search over your compiled CDS model (entities, services, annotations, HTTP endpoints) and a semantic search over CAP docs (similar to my SAP Docs MCP server). The goal is agentic coding for CAP projects with guaranteed grounding to your model and the official guide.&lt;/P&gt;&lt;P class=""&gt;Install:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm i -g @cap-js/mcp-server&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Client config (example VS Code):&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "mcpServers": {
    "cds-mcp": {
      "command": "cds-mcp",
      "args": [],
      "env": {}
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Rules (recommended in your AGENTS.md .cursorrules or depending on the client):&lt;/P&gt;&lt;BLOCKQUOTE&gt;- You MUST search for CDS definitions, like entities, fields and services (which include HTTP endpoints) with cds-mcp, only if it fails you MAY read \*.cds files in the project.&lt;BR /&gt;- You MUST search for CAP docs with cds-mcp EVERY TIME you modify CDS models or when using APIs from CAP. Do NOT propose, suggest or make any changes without first checking it.&lt;/BLOCKQUOTE&gt;&lt;P class=""&gt;CLI usage for quick tests:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# Search CDS model
cds-mcp search_model . Books entity

# Search CAP docs
cds-mcp search_docs "how to add columns to a select statement in CAP Node.js" 1&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-cap-tools" id="toc-hId-1495194911"&gt;CAP tools in detail&lt;/H3&gt;&lt;P class=""&gt;&lt;A href="https://github.com/cap-js/mcp-server#search_model" target="_self" rel="nofollow noopener noreferrer"&gt;search_model&lt;/A&gt; returns CSN definitions with elements, annotations, file locations and HTTP endpoints. Useful to build queries or OData URLs.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "search_model",
  "params": {
    "projectPath": "/absolute/path/to/cap/project",
    "name": "Books",
    "kind": "entity",
    "topN": 3,
    "namesOnly": false
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;For a sample project of mine, the response looks like this:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;[
  {
    "kind": "entity",
    "includes": [
      "cuid",
      "managed"
    ],
    "elements": {
      "ID": {
        "key": true,
        "type": "cds.UUID"
      },
      "createdAt": {
        "@cds.on.insert": {
          "=": "$now"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@Core.Immutable": true,
        "@title": "{i18n&amp;gt;CreatedAt}",
        "@readonly": true,
        "type": "cds.Timestamp",
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;CreatedAt}"
      },
      "createdBy": {
        "@cds.on.insert": {
          "=": "$user"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@Core.Immutable": true,
        "@title": "{i18n&amp;gt;CreatedBy}",
        "@readonly": true,
        "@description": "{i18n&amp;gt;UserID.Description}",
        "type": "cds.String",
        "length": 255,
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;CreatedBy}",
        "@Core.Description": "{i18n&amp;gt;UserID.Description}"
      },
      "modifiedAt": {
        "@cds.on.insert": {
          "=": "$now"
        },
        "@cds.on.update": {
          "=": "$now"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@title": "{i18n&amp;gt;ChangedAt}",
        "@readonly": true,
        "type": "cds.Timestamp",
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;ChangedAt}"
      },
      "modifiedBy": {
        "@cds.on.insert": {
          "=": "$user"
        },
        "@cds.on.update": {
          "=": "$user"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@title": "{i18n&amp;gt;ChangedBy}",
        "@readonly": true,
        "@description": "{i18n&amp;gt;UserID.Description}",
        "type": "cds.String",
        "length": 255,
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;ChangedBy}",
        "@Core.Description": "{i18n&amp;gt;UserID.Description}"
      },
      "username": {
        "@mandatory": true,
        "type": "cds.String",
        "length": 100,
        "$location": {
          "file": "db/schema.cds",
          "line": 7,
          "col": 3
        },
        "@Common.FieldControl": {
          "#": "Mandatory"
        }
      },
      "email": {
        "@mandatory": true,
        "type": "cds.String",
        "length": 255,
        "$location": {
          "file": "db/schema.cds",
          "line": 8,
          "col": 3
        },
        "@Common.FieldControl": {
          "#": "Mandatory"
        }
      },
      "firstName": {
        "type": "cds.String",
        "length": 100,
        "$location": {
          "file": "db/schema.cds",
          "line": 9,
          "col": 3
        }
      },
      "lastName": {
        "type": "cds.String",
        "length": 100,
        "$location": {
          "file": "db/schema.cds",
          "line": 10,
          "col": 3
        }
      },
      "role": {
        "type": "cds.Association",
        "target": "volleyball.tournament.UserRoles",
        "keys": [
          {
            "ref": [
              "code"
            ],
            "$generatedFieldName": "role_code"
          }
        ],
        "$location": {
          "file": "db/schema.cds",
          "line": 11,
          "col": 3
        }
      },
      "role_code": {
        "type": "cds.String",
        "@odata.foreignKey4": "role"
      },
      "isActive": {
        "type": "cds.Boolean",
        "default": {
          "val": true
        },
        "$location": {
          "file": "db/schema.cds",
          "line": 12,
          "col": 3
        }
      }
    },
    "$location": {
      "file": "db/schema.cds",
      "line": 6,
      "col": 8
    },
    "name": "volleyball.tournament.Users"
  },
  {
    "kind": "entity",
    "@cds.autoexpose": true,
    "@cds.persistence.skip": "if-unused",
    "@UI.Identification": [
      {
        "Value": {
          "=": "name"
        }
      }
    ],
    "@cds.odata.valuelist": true,
    "includes": [
      "sap.common.CodeList"
    ],
    "elements": {
      "name": {
        "@title": "{i18n&amp;gt;Name}",
        "localized": true,
        "type": "cds.String",
        "length": 255,
        "@Common.Label": "{i18n&amp;gt;Name}"
      },
      "descr": {
        "@title": "{i18n&amp;gt;Description}",
        "localized": true,
        "type": "cds.String",
        "length": 1000,
        "@Common.Label": "{i18n&amp;gt;Description}"
      },
      "code": {
        "key": true,
        "type": "cds.String",
        "enum": {
          "Admin": {
            "val": "ADMIN",
            "$location": {
              "file": "db/schema.cds",
              "line": 17,
              "col": 5
            }
          },
          "EventCreator": {
            "val": "EVENT_CREATOR",
            "$location": {
              "file": "db/schema.cds",
              "line": 18,
              "col": 5
            }
          },
          "ResultsInputer": {
            "val": "RESULTS_INPUTER",
            "$location": {
              "file": "db/schema.cds",
              "line": 19,
              "col": 5
            }
          },
          "Reader": {
            "val": "READER",
            "$location": {
              "file": "db/schema.cds",
              "line": 20,
              "col": 5
            }
          }
        },
        "$location": {
          "file": "db/schema.cds",
          "line": 16,
          "col": 7
        }
      },
      "texts": {
        "type": "cds.Composition",
        "cardinality": {
          "max": "*"
        },
        "target": "volleyball.tournament.UserRoles.texts",
        "on": [
          {
            "ref": [
              "texts",
              "code"
            ]
          },
          "=",
          {
            "ref": [
              "code"
            ]
          }
        ]
      },
      "localized": {
        "type": "cds.Association",
        "target": "volleyball.tournament.UserRoles.texts",
        "on": [
          {
            "ref": [
              "localized",
              "code"
            ]
          },
          "=",
          {
            "ref": [
              "code"
            ]
          },
          "and",
          {
            "ref": [
              "localized",
              "locale"
            ]
          },
          "=",
          {
            "ref": [
              "$user",
              "locale"
            ]
          }
        ]
      }
    },
    "$location": {
      "file": "db/schema.cds",
      "line": 15,
      "col": 8
    },
    "$localized": true,
    "name": "volleyball.tournament.UserRoles"
  }
]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;[
  {
    "kind": "entity",
    "includes": [
      "cuid",
      "managed"
    ],
    "elements": {
      "ID": {
        "key": true,
        "type": "cds.UUID"
      },
      "createdAt": {
        "@cds.on.insert": {
          "=": "$now"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@Core.Immutable": true,
        "@title": "{i18n&amp;gt;CreatedAt}",
        "@readonly": true,
        "type": "cds.Timestamp",
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;CreatedAt}"
      },
      "createdBy": {
        "@cds.on.insert": {
          "=": "$user"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@Core.Immutable": true,
        "@title": "{i18n&amp;gt;CreatedBy}",
        "@readonly": true,
        "@description": "{i18n&amp;gt;UserID.Description}",
        "type": "cds.String",
        "length": 255,
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;CreatedBy}",
        "@Core.Description": "{i18n&amp;gt;UserID.Description}"
      },
      "modifiedAt": {
        "@cds.on.insert": {
          "=": "$now"
        },
        "@cds.on.update": {
          "=": "$now"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@title": "{i18n&amp;gt;ChangedAt}",
        "@readonly": true,
        "type": "cds.Timestamp",
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;ChangedAt}"
      },
      "modifiedBy": {
        "@cds.on.insert": {
          "=": "$user"
        },
        "@cds.on.update": {
          "=": "$user"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@title": "{i18n&amp;gt;ChangedBy}",
        "@readonly": true,
        "@description": "{i18n&amp;gt;UserID.Description}",
        "type": "cds.String",
        "length": 255,
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;ChangedBy}",
        "@Core.Description": "{i18n&amp;gt;UserID.Description}"
      },
      "username": {
        "@mandatory": true,
        "type": "cds.String",
        "length": 100,
        "$location": {
          "file": "db/schema.cds",
          "line": 7,
          "col": 3
        },
        "@Common.FieldControl": {
          "#": "Mandatory"
        }
      },
      "email": {
        "@mandatory": true,
        "type": "cds.String",
        "length": 255,
        "$location": {
          "file": "db/schema.cds",
          "line": 8,
          "col": 3
        },
        "@Common.FieldControl": {
          "#": "Mandatory"
        }
      },
      "firstName": {
        "type": "cds.String",
        "length": 100,
        "$location": {
          "file": "db/schema.cds",
          "line": 9,
          "col": 3
        }
      },
      "lastName": {
        "type": "cds.String",
        "length": 100,
        "$location": {
          "file": "db/schema.cds",
          "line": 10,
          "col": 3
        }
      },
      "role": {
        "type": "cds.Association",
        "target": "volleyball.tournament.UserRoles",
        "keys": [
          {
            "ref": [
              "code"
            ],
            "$generatedFieldName": "role_code"
          }
        ],
        "$location": {
          "file": "db/schema.cds",
          "line": 11,
          "col": 3
        }
      },
      "role_code": {
        "type": "cds.String",
        "@odata.foreignKey4": "role"
      },
      "isActive": {
        "type": "cds.Boolean",
        "default": {
          "val": true
        },
        "$location": {
          "file": "db/schema.cds",
          "line": 12,
          "col": 3
        }
      }
    },
    "$location": {
      "file": "db/schema.cds",
      "line": 6,
      "col": 8
    },
    "name": "volleyball.tournament.Users"
  },
  {
    "kind": "entity",
    "@cds.autoexpose": true,
    "@cds.persistence.skip": "if-unused",
    "@UI.Identification": [
      {
        "Value": {
          "=": "name"
        }
      }
    ],
    "@cds.odata.valuelist": true,
    "includes": [
      "sap.common.CodeList"
    ],
    "elements": {
      "name": {
        "@title": "{i18n&amp;gt;Name}",
        "localized": true,
        "type": "cds.String",
        "length": 255,
        "@Common.Label": "{i18n&amp;gt;Name}"
      },
      "descr": {
        "@title": "{i18n&amp;gt;Description}",
        "localized": true,
        "type": "cds.String",
        "length": 1000,
        "@Common.Label": "{i18n&amp;gt;Description}"
      },
      "code": {
        "key": true,
        "type": "cds.String",
        "enum": {
          "Admin": {
            "val": "ADMIN",
            "$location": {
              "file": "db/schema.cds",
              "line": 17,
              "col": 5
            }
          },
          "EventCreator": {
            "val": "EVENT_CREATOR",
            "$location": {
              "file": "db/schema.cds",
              "line": 18,
              "col": 5
            }
          },
          "ResultsInputer": {
            "val": "RESULTS_INPUTER",
            "$location": {
              "file": "db/schema.cds",
              "line": 19,
              "col": 5
            }
          },
          "Reader": {
            "val": "READER",
            "$location": {
              "file": "db/schema.cds",
              "line": 20,
              "col": 5
            }
          }
        },
        "$location": {
          "file": "db/schema.cds",
          "line": 16,
          "col": 7
        }
      },
      "texts": {
        "type": "cds.Composition",
        "cardinality": {
          "max": "*"
        },
        "target": "volleyball.tournament.UserRoles.texts",
        "on": [
          {
            "ref": [
              "texts",
              "code"
            ]
          },
          "=",
          {
            "ref": [
              "code"
            ]
          }
        ]
      },
      "localized": {
        "type": "cds.Association",
        "target": "volleyball.tournament.UserRoles.texts",
        "on": [
          {
            "ref": [
              "localized",
              "code"
            ]
          },
          "=",
          {
            "ref": [
              "code"
            ]
          },
          "and",
          {
            "ref": [
              "localized",
              "locale"
            ]
          },
          "=",
          {
            "ref": [
              "$user",
              "locale"
            ]
          }
        ]
      }
    },
    "$location": {
      "file": "db/schema.cds",
      "line": 15,
      "col": 8
    },
    "$localized": true,
    "name": "volleyball.tournament.UserRoles"
  }
]&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P class=""&gt;&lt;A href="https://github.com/cap-js/mcp-server#search_docs" target="_self" rel="nofollow noopener noreferrer"&gt;search_docs&lt;/A&gt; searches CAP docs locally (embeddings) and returns relevant chunks.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "search_docs",
  "params": { "query": "draft activation action", "maxResults": 3 }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;The response to the above query looks like this:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt; Fiori Support &amp;gt; Lean Draft &amp;gt; Programmatic Invocation of Draft Actions &amp;lt;Beta /&amp;gt;
API, draft actions, JavaScript, Fiori, programmatic, service implementation
Demonstrates how to programmatically invoke Fiori draft actions using ApplicationService API: creating, discarding, editing, and saving (activating) drafts.

```js
await srv.new(MyEntity.drafts, data)     // create new draft
await srv.discard(MyEntity.drafts, keys) // discard draft
await srv.edit(MyEntity, keys)           // create draft from active instance
await srv.new(MyEntity.drafts).for(keys) // same as above
await srv.save(MyEntity.drafts, keys)    // activate draft
```

---
 Fiori Drafts &amp;gt; Activating Drafts
drafts, Java, event handler, CREATE, validation
Registers a @Before handler for the CREATE event. Used to validate user input or entity state before an active entity is created or updated as part of draft activation (Save action). Applies to activation flow of SAP Fiori draft-enabled entities.

```java
@Before
public void validateOrderItem(CdsCreateEventContext context, OrderItems orderItem) {
    // Add validation logic
}
```

---
 Fiori Support &amp;gt; Lean Draft &amp;gt; Handlers Registration
draft-specific events, event handler, Fiori, JavaScript, CANCEL, EDIT, NEW, SAVE
Illustrates how to add custom logic for specific draft events: NEW, CANCEL, EDIT, and SAVE. These let you react to various points in the Fiori draft process, including draft creation, discard, editing, and persisting changes.

```js
// When a new draft is created
srv.on('NEW', 'MyEntity.drafts', /*...*/)
// When a draft is discarded
srv.on('CANCEL', 'MyEntity.drafts', /*...*/)
// When a new draft is created from an active instance
srv.on('EDIT', 'MyEntity', /*...*/)
// When the active entity is changed
srv.on('SAVE', 'MyEntity', /*...*/)
```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt; Fiori Support &amp;gt; Lean Draft &amp;gt; Programmatic Invocation of Draft Actions &amp;lt;Beta /&amp;gt;
API, draft actions, JavaScript, Fiori, programmatic, service implementation
Demonstrates how to programmatically invoke Fiori draft actions using ApplicationService API: creating, discarding, editing, and saving (activating) drafts.

```js
await srv.new(MyEntity.drafts, data)     // create new draft
await srv.discard(MyEntity.drafts, keys) // discard draft
await srv.edit(MyEntity, keys)           // create draft from active instance
await srv.new(MyEntity.drafts).for(keys) // same as above
await srv.save(MyEntity.drafts, keys)    // activate draft
```

---
 Fiori Drafts &amp;gt; Activating Drafts
drafts, Java, event handler, CREATE, validation
Registers a @Before handler for the CREATE event. Used to validate user input or entity state before an active entity is created or updated as part of draft activation (Save action). Applies to activation flow of SAP Fiori draft-enabled entities.

```java
@Before
public void validateOrderItem(CdsCreateEventContext context, OrderItems orderItem) {
    // Add validation logic
}
```

---
 Fiori Support &amp;gt; Lean Draft &amp;gt; Handlers Registration
draft-specific events, event handler, Fiori, JavaScript, CANCEL, EDIT, NEW, SAVE
Illustrates how to add custom logic for specific draft events: NEW, CANCEL, EDIT, and SAVE. These let you react to various points in the Fiori draft process, including draft creation, discard, editing, and persisting changes.

```js
// When a new draft is created
srv.on('NEW', 'MyEntity.drafts', /*...*/)
// When a draft is discarded
srv.on('CANCEL', 'MyEntity.drafts', /*...*/)
// When a new draft is created from an active instance
srv.on('EDIT', 'MyEntity', /*...*/)
// When the active entity is changed
srv.on('SAVE', 'MyEntity', /*...*/)
```&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;H2 id="toc-hId-fiori" id="toc-hId-1169598687"&gt;Fiori MCP server&lt;/H2&gt;&lt;P class=""&gt;Package: &lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;@sap-ux/fiori-mcp-server&lt;/A&gt;.&lt;BR /&gt;GitHub Repo: &lt;A href="https://github.com/SAP/open-ux-tools/tree/main/packages/fiori-mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;github.com/SAP/open-ux-tools/packages/fiori-mcp-server&lt;/A&gt;&lt;BR /&gt;Release Blog Post:&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-update-first-release-of-the-sap-fiori-mcp-server-for/ba-p/14204694" target="_blank"&gt;SAP Fiori Tools Update – First Release of the SAP Fiori MCP Server for Agentic AI Workflows&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;What it does: generates or modifies SAP Fiori apps, including adding pages, controller extensions, FCL, and manifest changes. It returns required parameters for each functionality and executes the change.&lt;/P&gt;&lt;P class=""&gt;This MCP server also recommends adding a rules markdown file with the following content, so the LLM knows how to use the server better:&lt;/P&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;-&lt;/SPAN&gt; When asked to create an SAP Fiori elements app check whether the user input can be interpreted as an application organized into one or more pages containing table data or forms, these can be translated into a SAP Fiori elements application, else ask the user for suitable input.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; The application typically starts with a List Report page showing the data of the base entity of the application in a table. Details of a specific table row are shown in the ObjectPage. This first Object Page is therefore based on the base entity of the application.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; An Object Page can contain one or more table sections based on to-many associations of its entity type. The details of a table section row can be shown in an another Object Page based on the associations target entity.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; The data model must be suitable for usage in a SAP Fiori elements frontend application. So there must be one main entity and one or more navigation properties to related entities.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; Each property of an entity must have a proper datatype.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; For all entities in the data model provide primary keys of type UUID.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; When creating sample data in CSV files, all primary keys and foreign keys MUST be in UUID format (e.g., &lt;SPAN class=""&gt;`&lt;/SPAN&gt;&lt;SPAN class=""&gt;550e8400-e29b-41d4-a716-446655440001&lt;/SPAN&gt;&lt;SPAN class=""&gt;`&lt;/SPAN&gt;).
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; When generating or modifying the SAP Fiori elements application on top of the CAP service use the Fiori MCP server if available.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; When attempting to modify the SAP Fiori elements application like adding columns you must not use the screen personalization but instead modify the code of the project, before this first check whether an MCP server provides a suitable function.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; When previewing the SAP Fiori elements application use the most specific script for the app in the &lt;SPAN class=""&gt;`&lt;/SPAN&gt;&lt;SPAN class=""&gt;package.json&lt;/SPAN&gt;&lt;SPAN class=""&gt;`&lt;/SPAN&gt;.&lt;/PRE&gt;&lt;P class=""&gt;Use via npx (no install needed):&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "mcpServers": {
    "fiori-mcp": {
      "command": "npx",
      "args": ["--yes","@sap-ux/fiori-mcp-server@latest", "fiori-mcp"]
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Main tools: list-fiori-apps, list-functionality, get-functionality-details, execute-functionality. The typical flow is 1) list-functionality, 2) get-functionality-details, 3) execute-functionality.&lt;/P&gt;&lt;H3 id="toc-hId-fiori-tools" id="toc-hId-1102167901"&gt;Fiori tools and 3-step workflow&lt;/H3&gt;&lt;P class=""&gt;Discovery:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "list-fiori-apps",
  "params": { "workspaceDir": "/abs/path/to/mono" }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;The response for my sample repo looks like this:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;{
  "applications": [
    {
      "name": "resultsdashboard",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/results-dashboard",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    },
    {
      "name": "eventmanagement",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/event-management",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    },
    {
      "name": "matchresults",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/match-results",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    },
    {
      "name": "teammanagement",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/team-management",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;{
  "applications": [
    {
      "name": "resultsdashboard",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/results-dashboard",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    },
    {
      "name": "eventmanagement",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/event-management",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    },
    {
      "name": "matchresults",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/match-results",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    },
    {
      "name": "teammanagement",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/team-management",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    }
  ]
}&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P class=""&gt;Step 1:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "list-functionality",
  "params": { "appPath": "/abs/path/to/app" }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;The redacted response is worth for my Fiori elements app about 13k tokens:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "applicationPath": "/Users/marianzeis/DEV/mcp-sap-test/app/event-management",
  "functionalities": [
    {
      "functionalityId": "add-page",
      "description": "Create new fiori elements page like ListReport, ObjectPage, CustomPage"
    },
    {
      "functionalityId": "generate-fiori-ui-app",
      "description": "Creates (generates) a new SAP Fiori UI application within an existing CAP project.\n                Crucially, you must first construct the appGenConfig JSON argument.\n                To do this, you **MUST** use the ***CDS MCP*** to search the model for service definitions, entities, associations, and UI annotations.\n                As a fallback, only if no such tool is available, you should manually read and parse all .cds files in the projectPath to extract this information.\n                The data obtained from either method must then be formatted into a JSON object and passed as the appGenConfig parameter."
    },
    {
      "functionalityId": "delete-page",
      "description": "Remove existing fiori elements page from the application"
    },
    {
      "functionalityId": "create-controller-extension",
      "description": "Add new controller extension by creating javascript or typescript file and updates manifest.json with entry. Controller extensions allow users to extensiate default behaviour with custom controllers code."
    },
    {
      "functionalityId": [
        "settings",
        "path"
      ],
      "description": "Represents a prefix that is prepended in front of the viewName"
    },
    {
      "functionalityId": [
        "settings",
        "viewType"
      ],
      "description": "standard view type of views"
    },
    {
      "functionalityId": [
        "settings",
        "title"
      ],
      "description": "Defines the title for the application."
    },
    {
      "functionalityId": [
        "settings",
        "description"
      ],
      "description": "Defines the description for the application."
    },
    {
      "functionalityId": [
        "settings",
        "flexEnabled"
      ],
      "description": "Enables key user adaptation for an application."
    },
    {
      "functionalityId": [
        "settings",
        "cloudDevAdaptationStatus"
      ],
      "description": "Represents the release status for the developer adaptation in the cloud (relevant for SAP internal only). The supported types are released, deprecated, obsolete, no value means not released."
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout"
      ],
      "description": "The flexible column layout allows users to see more details on the page, and to expand and collapse the screen areas."
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout",
        "limitFCLToTwoColumns"
      ],
      "description": "Determines whether the Flexible Column Layout is limited to two columns. If set to true, the third level will be displayed in full screen mode rather than a third column."
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout",
        "defaultTwoColumnLayoutType"
      ],
      "description": "Default Two Column Layout Type"
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout",
        "defaultThreeColumnLayoutType"
      ],
      "description": "Default Three Column Layout Type"
    },
    {
      "functionalityId": [
        "settings",
        "controllerExtensions"
      ],
      "description": "Controller extensions allow users to extensiate default behaviour with custom controllers code."
    },
    {
      "functionalityId": [
        "settings",
        "hideDraft"
      ],
      "description": "Hidden draft features."
    },
    {
      "functionalityId": [
        "settings",
        "hideDraft",
        "enabled"
      ],
      "description": "All features related to draft handling can be hidden from the UI while the draft functionality remains active in the background. To achieve this, enable the 'Hide Draft' property."
    },
    {
      "functionalityId": [
        "settings",
        "hideDraft",
        "stayOnCurrentPageAfterSave"
      ],
      "description": "Determines whether to stay on the current page after saving an object.\nTo ensure a consistent experience, set this and 'Stay On Current Page After Cancel' to the same value."
    },&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;{
  "applicationPath": "/Users/marianzeis/DEV/mcp-sap-test/app/event-management",
  "functionalities": [
    {
      "functionalityId": "add-page",
      "description": "Create new fiori elements page like ListReport, ObjectPage, CustomPage"
    },
    {
      "functionalityId": "generate-fiori-ui-app",
      "description": "Creates (generates) a new SAP Fiori UI application within an existing CAP project.\n                Crucially, you must first construct the appGenConfig JSON argument.\n                To do this, you **MUST** use the ***CDS MCP*** to search the model for service definitions, entities, associations, and UI annotations.\n                As a fallback, only if no such tool is available, you should manually read and parse all .cds files in the projectPath to extract this information.\n                The data obtained from either method must then be formatted into a JSON object and passed as the appGenConfig parameter."
    },
    {
      "functionalityId": "delete-page",
      "description": "Remove existing fiori elements page from the application"
    },
    {
      "functionalityId": "create-controller-extension",
      "description": "Add new controller extension by creating javascript or typescript file and updates manifest.json with entry. Controller extensions allow users to extensiate default behaviour with custom controllers code."
    },
    {
      "functionalityId": [
        "settings",
        "path"
      ],
      "description": "Represents a prefix that is prepended in front of the viewName"
    },
    {
      "functionalityId": [
        "settings",
        "viewType"
      ],
      "description": "standard view type of views"
    },
    {
      "functionalityId": [
        "settings",
        "title"
      ],
      "description": "Defines the title for the application."
    },
    {
      "functionalityId": [
        "settings",
        "description"
      ],
      "description": "Defines the description for the application."
    },
    {
      "functionalityId": [
        "settings",
        "flexEnabled"
      ],
      "description": "Enables key user adaptation for an application."
    },
    {
      "functionalityId": [
        "settings",
        "cloudDevAdaptationStatus"
      ],
      "description": "Represents the release status for the developer adaptation in the cloud (relevant for SAP internal only). The supported types are released, deprecated, obsolete, no value means not released."
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout"
      ],
      "description": "The flexible column layout allows users to see more details on the page, and to expand and collapse the screen areas."
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout",
        "limitFCLToTwoColumns"
      ],
      "description": "Determines whether the Flexible Column Layout is limited to two columns. If set to true, the third level will be displayed in full screen mode rather than a third column."
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout",
        "defaultTwoColumnLayoutType"
      ],
      "description": "Default Two Column Layout Type"
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout",
        "defaultThreeColumnLayoutType"
      ],
      "description": "Default Three Column Layout Type"
    },
    {
      "functionalityId": [
        "settings",
        "controllerExtensions"
      ],
      "description": "Controller extensions allow users to extensiate default behaviour with custom controllers code."
    },
    {
      "functionalityId": [
        "settings",
        "hideDraft"
      ],
      "description": "Hidden draft features."
    },
    {
      "functionalityId": [
        "settings",
        "hideDraft",
        "enabled"
      ],
      "description": "All features related to draft handling can be hidden from the UI while the draft functionality remains active in the background. To achieve this, enable the 'Hide Draft' property."
    },
    {
      "functionalityId": [
        "settings",
        "hideDraft",
        "stayOnCurrentPageAfterSave"
      ],
      "description": "Determines whether to stay on the current page after saving an object.\nTo ensure a consistent experience, set this and 'Stay On Current Page After Cancel' to the same value."
    },&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P class=""&gt;Step 2:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "get-functionality-details",
  "params": { "appPath": "/abs/path/to/app", "functionalityId": "add-page" }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Here is a response for the functionality "add-page":&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "functionalityId": "add-page",
  "name": "Add new page to application by updating manifest.json",
  "description": "Create new fiori elements page like ListReport, ObjectPage, CustomPage",
  "parameters": [
    {
      "id": "parentPage",
      "type": "string",
      "description": "Parent page is id/name of parent page. First try to extract parent page from user input in a format defined in example, if not possible suggest content defined in options",
      "options": [
        "EventsObjectPage"
      ],
      "required": true,
      "examples": [
        "parentPage: EventsObjectPage"
      ]
    },
    {
      "id": "pageNavigation",
      "type": "string",
      "description": "Page navigation option for parent page. First try to extract navigation option from user input in a format defined in example, if not possible suggest content defined in options",
      "options": [
        "for EventsObjectPage: available navigation(s) is/are one of: teams, groups, matches"
      ],
      "examples": [
        "pageNavigation: teams"
      ],
      "required": true
    },
    {
      "id": "pageType",
      "type": "string",
      "description": "Type of page to be created. First try to extract page type from user input in a format defined in example, if not possible suggest content defined in options.",
      "options": [
        "ObjectPage",
        "ListReport",
        "CustomPage",
        "FPMCustomPage",
        "AnalyticalListPage"
      ],
      "examples": [
        "pageType: ObjectPage"
      ],
      "required": true
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;{
  "functionalityId": "add-page",
  "name": "Add new page to application by updating manifest.json",
  "description": "Create new fiori elements page like ListReport, ObjectPage, CustomPage",
  "parameters": [
    {
      "id": "parentPage",
      "type": "string",
      "description": "Parent page is id/name of parent page. First try to extract parent page from user input in a format defined in example, if not possible suggest content defined in options",
      "options": [
        "EventsObjectPage"
      ],
      "required": true,
      "examples": [
        "parentPage: EventsObjectPage"
      ]
    },
    {
      "id": "pageNavigation",
      "type": "string",
      "description": "Page navigation option for parent page. First try to extract navigation option from user input in a format defined in example, if not possible suggest content defined in options",
      "options": [
        "for EventsObjectPage: available navigation(s) is/are one of: teams, groups, matches"
      ],
      "examples": [
        "pageNavigation: teams"
      ],
      "required": true
    },
    {
      "id": "pageType",
      "type": "string",
      "description": "Type of page to be created. First try to extract page type from user input in a format defined in example, if not possible suggest content defined in options.",
      "options": [
        "ObjectPage",
        "ListReport",
        "CustomPage",
        "FPMCustomPage",
        "AnalyticalListPage"
      ],
      "examples": [
        "pageType: ObjectPage"
      ],
      "required": true
    }
  ]
}&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P class=""&gt;The problem here is that the MCP server returns an error:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{"error": "MCP error -32602: Structured content does not
match the tool's output schema: data should have
required property '.id'"}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;I tested a few different functionalities and always saw the same error, so unfortunately this can't be used yet.&lt;BR /&gt;Step 3:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "execute-functionality",
  "params": {
    "appPath": "/abs/path/to/app",
    "functionalityId": "add-page",
    "parameters": {
      "pageType": "ObjectPage",
      "entity": "Books",
      "navigation": "toAuthors"
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;As I got stuck at step 2, I unfortunately couldn't properly test step 3.&lt;/P&gt;&lt;H2 id="toc-hId-ui5" id="toc-hId-776571677"&gt;UI5 MCP server&lt;/H2&gt;&lt;P class=""&gt;Package: &lt;A href="https://www.npmjs.com/package/@ui5/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;@ui5/mcp-server&lt;/A&gt;.&lt;BR /&gt;GitHub:&amp;nbsp;&lt;A href="https://github.com/UI5/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;github.com/UI5/mcp-server&lt;/A&gt;&lt;BR /&gt;Release Blog Post:&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/give-your-ai-agent-some-tools-introducing-the-ui5-mcp-server/ba-p/14200825" target="_blank"&gt;Give Your AI Agent Some Tools: Introducing the UI5 MCP Server&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;What it does: scaffolds UI5 apps, fetches API reference and guidelines, inspects an existing UI5 project, retrieves framework version info, and runs the UI5 linter for actionable fixes.&lt;/P&gt;&lt;P class=""&gt;Quick client config:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "mcpServers": {
    "ui5mcp": {
      "command": "npx",
      "args": ["@ui5/mcp-server"]
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Environment options (examples):&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "mcpServers": {
    "ui5mcp": {
      "command": "npx",
      "args": ["@ui5/mcp-server"],
      "env": {
        "UI5_MCP_SERVER_ALLOWED_ODATA_DOMAINS": "localhost, services.odata.org",
        "UI5_LOG_LVL": "verbose"
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Available tools: create_ui5_app, get_api_reference, get_guidelines, get_project_info, get_version_info, run_ui5_linter.&lt;/P&gt;&lt;H3 id="toc-hId-ui5-tools" id="toc-hId-709140891"&gt;UI5 tools in detail&lt;/H3&gt;&lt;P class=""&gt;create_ui5_app scaffolds a project from built-in templates (JS or TS). It can also preconfigure an OData V4 model if you pass a service URL that matches the allowed domains.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "create_ui5_app",
  "params": {
    "projectDir": "/abs/path/new-ui5-app",
    "template": "ts",
    "oDataV4Url": "https://services.odata.org/V4/OData/OData.svc/"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;get_api_reference downloads and caches api.json files for the configured UI5 version and returns focused API info for a symbol.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "get_api_reference",
  "params": { "projectDir": "/abs/path/ui5-app", "symbol": "sap.m.Button#text" }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In my tests this did not work. One app was using version 1.108.1 in ui5.yaml, and using this tool I got the following response:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Failed to fetch resource from CDN. Error: The requested resource does not exist for URL: https://ui5.sap.com/1.108.1/resources/sap-ui-version.json&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;My second Fiori elements app was using SAPUI5 version 1.136.7. The API reference tool gets the reference from the OpenUI5 SDK, which has the current maximum patch of 1.136.5. Because of this I got the error:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Failed to fetch resource from CDN. Error: The requested resource does not exist for URL: https://sdk.openui5.org/1.136.7/resources/sap-ui-version.json&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Even after changing the version in the manifest I could not get the tool to work. It was still fetching the wrong version.&lt;BR /&gt;get_guidelines returns a curated markdown with UI5 and CAP development guidelines for agents.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "get_guidelines",
  "params": {}
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Response:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# UI5 Development Guidelines

&amp;gt; *This document outlines the fundamental rules and best practices an AI agent must follow when developing or modifying SAPUI5 projects. Adherence to these guidelines is critical for creating modern, maintainable, and performant applications.*

## 1. Coding Guidelines

- **NEVER** use global variables to access UI5 framework objects (e.g., `sap.m.Button`). Instead, explicitly declare all dependencies, so that they are loaded asynchronously before your code executes.
  - in Javascript&amp;amp;colon; Using `sap.ui.define` at the top of the file (which also registers the file as a UI5 module) or dynamically using `sap.ui.require`
  - in TypeScript: Using ES6 `import` statements
  - in XML:
    - For controls it is sufficient to declare the corresponding XML tag (e.g. `&amp;lt;m:Button&amp;gt;&amp;lt;/m:Button&amp;gt;`). The XML Template engine will load the corresponding resource automatically.
    - However, when referring to programmatic API like formatters or types, those must be "imported" using a `core:require` directive
    - Example
      ```xml
       &amp;lt;ObjectListItem
          core:require="{
              Currency: 'sap/ui/model/type/Currency'
          }"
          title="{invoice&amp;gt;Quantity} x {invoice&amp;gt;ProductName}"
          number="{
              parts: [
                  'invoice&amp;gt;ExtendedPrice',
                  'view&amp;gt;/currency'
              ],
              type: 'Currency',
              formatOptions: {
                  showMeasure: false
              }
          }"
          numberUnit="{view&amp;gt;/currency}"/&amp;gt;
      ```
    - Find more information on the UI5 documentation page "Require Modules in XML View and Fragment"
- **ALWAYS** use the `sap/ui/core/ComponentSupport` module to initialize a UI5 application/component in an HTML page
  - Example:
    ```html
    &amp;lt;!-- index.html --&amp;gt;
    &amp;lt;script id="sap-ui-bootstrap"
      src="resources/sap-ui-core.js"
      data-sap-ui-on-init="module:sap/ui/core/ComponentSupport"
      data-sap-ui-async="true"
      data-sap-ui-resource-roots='{ "my.app": "./" }'
      data-...="..."&amp;gt;
    &amp;lt;/script&amp;gt;
    ```
  - Find more information on the UI5 documentation page "Declarative API for Initial Components"
- **ALWAYS** use data binding in views to connect UI controls to data or i18n models.
  - When binding data from OData services, **NEVER** use custom formatters for standard data types (e.g., dates, numbers, currencies). The built-in types handle these cases automatically.
- When making changes to `*.properties` files, **ALWAYS** apply the changes to all relevant locales. This ensures consistency across different language versions of the application.
  - **Example:** If you add a new key to `i18n.properties`, also add it to existing translation files like e.g `i18n_en.properties`, `i18n_de.properties`, etc.
- **NEVER** use inline script in HTML
  - All application logic must reside in dedicated JS or TS files. Inline `&amp;lt;script&amp;gt;` would violate the recommended CSP settings for UI5 applications.
  - Find more information on the UI5 documentation page "Content Security Policy"

### TypeScript: Special Handling for Control Event Handlers

- **Rule:** For any control event handler, import and use the specific event type from the control's module. The type is typically named `&amp;lt;ControlName&amp;gt;$&amp;lt;EventName&amp;gt;Event`. Notice the "Event" suffix.
- **Example:** For the `press` event of `sap.m.Button`, use `import {Button$PressEvent} from "sap/m/Button"`.
  - The event handler then may look like this: `onPress(event: Button$PressEvent): void { [...]`.
- **Benefit:** This provides static type checking and autocompletion for event parameters (e.g., `event.getParameter(...)`) without needing manual casting or comments.
- **Version Compatibility:**
    - **UI5 &amp;gt;= 1.115.0:** This feature is available and **MUST** be used.
    - **UI5 &amp;lt; 1.115.0:** These specific types are **NOT** available. Use the generic `import Event from "sap/ui/base/Event"` as the fallback type.

**Example (UI5 &amp;gt;= 1.115.0):**

```ts
// Import the specific event type from the control's module
import { Table$RowSelectionChangeEvent } from "sap/ui/table/Table";
import Table from "sap/ui/table/Table";

// ... inside a controller class
public onRowSelectionChange(event: Table$RowSelectionChangeEvent): void {
    // Correctly typed: getParameter is known and its return value can be inferred
    const selectedContext = event.getParameter("rowContext");
    // ...
}
```

## 2. Tooling and Environment Interaction

An AI agent must understand how to use and interpret the standard UI5 development tools, primarily through the available MCP tools.

- **API Lookup:** To get information on UI5 controls and APIs, **ALWAYS** use the `get_api_reference` tool. This provides direct access to the official UI5 API Reference. Provide it with a path to the current project and it will provide the correct API reference for the UI5 version in use.
- **Code Validation:** To identify issues, **ALWAYS** use the `run_ui5_linter` tool. It detects deprecated APIs, accessibility issues, and other potential bugs.
- **Code Fixes:** To apply fixes suggested by the linter, always confirm with the user first. Then use the `fix` parameter of the `run_ui5_linter` tool. This will automatically correct _some_ of the identified issues. The tool can also provide context information that can be used to manually fix the remaining issues when tasked to do so.
- **Local Server Behavior:** When interacting with the UI5 CLI's development server, understand that it does **NOT** serve a default index file. You **MUST ALWAYS** reference files by their full path when using the browser (e.g., `http://localhost:8080/index.html`, not `http://localhost:8080/`).

## 3. CAP (Cloud Application Programming Model) Integration

When creating a new UI5 project within a CAP project, a specific set of rules apply to ensure seamless integration.

- **Project Location:** **ALWAYS** create UI5 projects within the `app/` directory of the CAP project root.
- **Service Information:**
  - If CDS tools are available to you, **ALWAYS** use them to get information about the definitions, services and their endpoints.
  - If no CDS tools are available to you, **ALWAYS** run `cds compile '*'` to get information about the definitions and `cds compile '*' --to serviceinfo` to get information about the services and their endpoints.
- **Service Integration:** When creating the UI5 project, **ALWAYS** provide the absolute OData V4 service URL and the target entity set when prompted by the tooling.
- **Plugin Installation:** **ALWAYS** run `npm i -D cds-plugin-ui5` in the CAP project root directory to ensure the latest version of `cds-plugin-ui5` is installed. This plugin automatically handles serving the UI5 applications.
- **Running the Server:**
    - **NEVER** run a separate `ui5 serve` or `npm start` command inside the UI5 project folder.
    - **ALWAYS** run `cds watch` (or `cds run`) from the **root** of the CAP project. This single command serves both the backend services and all UI5 applications.
- **Data Connection:**
    - **NEVER** configure a `ui5-middleware-simpleproxy` in the `ui5.yaml` file to connect to the local CAP service.
    - **Why:** The `cds watch` command ensures the UI and the service are served from the same origin (`http://localhost:4004`), making a proxy unnecessary.
- **Accessing the App:** Check the CAP launch page (typically `http://localhost:4004`) for a list of available services and links to the UI5 applications.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;# UI5 Development Guidelines

&amp;gt; *This document outlines the fundamental rules and best practices an AI agent must follow when developing or modifying SAPUI5 projects. Adherence to these guidelines is critical for creating modern, maintainable, and performant applications.*

## 1. Coding Guidelines

- **NEVER** use global variables to access UI5 framework objects (e.g., `sap.m.Button`). Instead, explicitly declare all dependencies, so that they are loaded asynchronously before your code executes.
  - in Javascript&amp;amp;colon; Using `sap.ui.define` at the top of the file (which also registers the file as a UI5 module) or dynamically using `sap.ui.require`
  - in TypeScript: Using ES6 `import` statements
  - in XML:
    - For controls it is sufficient to declare the corresponding XML tag (e.g. `&amp;lt;m:Button&amp;gt;&amp;lt;/m:Button&amp;gt;`). The XML Template engine will load the corresponding resource automatically.
    - However, when referring to programmatic API like formatters or types, those must be "imported" using a `core:require` directive
    - Example
      ```xml
       &amp;lt;ObjectListItem
          core:require="{
              Currency: 'sap/ui/model/type/Currency'
          }"
          title="{invoice&amp;gt;Quantity} x {invoice&amp;gt;ProductName}"
          number="{
              parts: [
                  'invoice&amp;gt;ExtendedPrice',
                  'view&amp;gt;/currency'
              ],
              type: 'Currency',
              formatOptions: {
                  showMeasure: false
              }
          }"
          numberUnit="{view&amp;gt;/currency}"/&amp;gt;
      ```
    - Find more information on the UI5 documentation page "Require Modules in XML View and Fragment"
- **ALWAYS** use the `sap/ui/core/ComponentSupport` module to initialize a UI5 application/component in an HTML page
  - Example:
    ```html
    &amp;lt;!-- index.html --&amp;gt;
    &amp;lt;script id="sap-ui-bootstrap"
      src="resources/sap-ui-core.js"
      data-sap-ui-on-init="module:sap/ui/core/ComponentSupport"
      data-sap-ui-async="true"
      data-sap-ui-resource-roots='{ "my.app": "./" }'
      data-...="..."&amp;gt;
    &amp;lt;/script&amp;gt;
    ```
  - Find more information on the UI5 documentation page "Declarative API for Initial Components"
- **ALWAYS** use data binding in views to connect UI controls to data or i18n models.
  - When binding data from OData services, **NEVER** use custom formatters for standard data types (e.g., dates, numbers, currencies). The built-in types handle these cases automatically.
- When making changes to `*.properties` files, **ALWAYS** apply the changes to all relevant locales. This ensures consistency across different language versions of the application.
  - **Example:** If you add a new key to `i18n.properties`, also add it to existing translation files like e.g `i18n_en.properties`, `i18n_de.properties`, etc.
- **NEVER** use inline script in HTML
  - All application logic must reside in dedicated JS or TS files. Inline `&amp;lt;script&amp;gt;` would violate the recommended CSP settings for UI5 applications.
  - Find more information on the UI5 documentation page "Content Security Policy"

### TypeScript: Special Handling for Control Event Handlers

- **Rule:** For any control event handler, import and use the specific event type from the control's module. The type is typically named `&amp;lt;ControlName&amp;gt;$&amp;lt;EventName&amp;gt;Event`. Notice the "Event" suffix.
- **Example:** For the `press` event of `sap.m.Button`, use `import {Button$PressEvent} from "sap/m/Button"`.
  - The event handler then may look like this: `onPress(event: Button$PressEvent): void { [...]`.
- **Benefit:** This provides static type checking and autocompletion for event parameters (e.g., `event.getParameter(...)`) without needing manual casting or comments.
- **Version Compatibility:**
    - **UI5 &amp;gt;= 1.115.0:** This feature is available and **MUST** be used.
    - **UI5 &amp;lt; 1.115.0:** These specific types are **NOT** available. Use the generic `import Event from "sap/ui/base/Event"` as the fallback type.

**Example (UI5 &amp;gt;= 1.115.0):**

```ts
// Import the specific event type from the control's module
import { Table$RowSelectionChangeEvent } from "sap/ui/table/Table";
import Table from "sap/ui/table/Table";

// ... inside a controller class
public onRowSelectionChange(event: Table$RowSelectionChangeEvent): void {
    // Correctly typed: getParameter is known and its return value can be inferred
    const selectedContext = event.getParameter("rowContext");
    // ...
}
```

## 2. Tooling and Environment Interaction

An AI agent must understand how to use and interpret the standard UI5 development tools, primarily through the available MCP tools.

- **API Lookup:** To get information on UI5 controls and APIs, **ALWAYS** use the `get_api_reference` tool. This provides direct access to the official UI5 API Reference. Provide it with a path to the current project and it will provide the correct API reference for the UI5 version in use.
- **Code Validation:** To identify issues, **ALWAYS** use the `run_ui5_linter` tool. It detects deprecated APIs, accessibility issues, and other potential bugs.
- **Code Fixes:** To apply fixes suggested by the linter, always confirm with the user first. Then use the `fix` parameter of the `run_ui5_linter` tool. This will automatically correct _some_ of the identified issues. The tool can also provide context information that can be used to manually fix the remaining issues when tasked to do so.
- **Local Server Behavior:** When interacting with the UI5 CLI's development server, understand that it does **NOT** serve a default index file. You **MUST ALWAYS** reference files by their full path when using the browser (e.g., `http://localhost:8080/index.html`, not `http://localhost:8080/`).

## 3. CAP (Cloud Application Programming Model) Integration

When creating a new UI5 project within a CAP project, a specific set of rules apply to ensure seamless integration.

- **Project Location:** **ALWAYS** create UI5 projects within the `app/` directory of the CAP project root.
- **Service Information:**
  - If CDS tools are available to you, **ALWAYS** use them to get information about the definitions, services and their endpoints.
  - If no CDS tools are available to you, **ALWAYS** run `cds compile '*'` to get information about the definitions and `cds compile '*' --to serviceinfo` to get information about the services and their endpoints.
- **Service Integration:** When creating the UI5 project, **ALWAYS** provide the absolute OData V4 service URL and the target entity set when prompted by the tooling.
- **Plugin Installation:** **ALWAYS** run `npm i -D cds-plugin-ui5` in the CAP project root directory to ensure the latest version of `cds-plugin-ui5` is installed. This plugin automatically handles serving the UI5 applications.
- **Running the Server:**
    - **NEVER** run a separate `ui5 serve` or `npm start` command inside the UI5 project folder.
    - **ALWAYS** run `cds watch` (or `cds run`) from the **root** of the CAP project. This single command serves both the backend services and all UI5 applications.
- **Data Connection:**
    - **NEVER** configure a `ui5-middleware-simpleproxy` in the `ui5.yaml` file to connect to the local CAP service.
    - **Why:** The `cds watch` command ensures the UI and the service are served from the same origin (`http://localhost:4004`), making a proxy unnecessary.
- **Accessing the App:** Check the CAP launch page (typically `http://localhost:4004`) for a list of available services and links to the UI5 applications.&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P&gt;get_project_info inspects ui5.yaml and manifest to report framework, version, and libraries.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "get_project_info",
  "params": { "projectDir": "/abs/path/ui5-app" }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;The response is a bit underwhelming, as I was expecting more information about the project as described in the output format:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;{
  "projectDir": "/Users/marianzeis/DEV/mcp-sap-test-2/app/match-management",
  "projectName": "matchmanagement",
  "projectType": "application",
  "frameworkLibraries": []
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;get_version_info pulls version.json from the selected CDN to show latest and LTS.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "get_version_info",
  "params": { "framework": "OpenUI5" }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Response:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "versions": {
    "latest": {
      "version": "1.139.0",
      "support": "Maintenance",
      "lts": false
    },
    "active": {
      "version": "1.139.0",
      "support": "Maintenance",
      "lts": false
    },
    "1.139": {
      "version": "1.139.0",
      "support": "Maintenance",
      "lts": false
    },
    "1.136": {
      "version": "1.136.8",
      "support": "Maintenance",
      "lts": true
    },
    "1.133": {
      "version": "1.133.5",
      "support": "Maintenance",
      "lts": false
    },
    "1.130": {
      "version": "1.130.11",
      "support": "Maintenance",
      "lts": false
    },
    "1.120": {
      "version": "1.120.35",
      "support": "Maintenance",
      "lts": true
    },
    "1.108": {
      "version": "1.108.45",
      "support": "Maintenance",
      "lts": true
    },
    "1.96": {
      "version": "1.96.43",
      "support": "Maintenance",
      "lts": true
    },
    "1.84": {
      "version": "1.84.54",
      "support": "Maintenance",
      "lts": true
    },
    "1.71": {
      "version": "1.71.76",
      "support": "Maintenance",
      "lts": true
    },
    "1.38": {
      "version": "1.38.65",
      "support": "Maintenance",
      "lts": true
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;{
  "versions": {
    "latest": {
      "version": "1.139.0",
      "support": "Maintenance",
      "lts": false
    },
    "active": {
      "version": "1.139.0",
      "support": "Maintenance",
      "lts": false
    },
    "1.139": {
      "version": "1.139.0",
      "support": "Maintenance",
      "lts": false
    },
    "1.136": {
      "version": "1.136.8",
      "support": "Maintenance",
      "lts": true
    },
    "1.133": {
      "version": "1.133.5",
      "support": "Maintenance",
      "lts": false
    },
    "1.130": {
      "version": "1.130.11",
      "support": "Maintenance",
      "lts": false
    },
    "1.120": {
      "version": "1.120.35",
      "support": "Maintenance",
      "lts": true
    },
    "1.108": {
      "version": "1.108.45",
      "support": "Maintenance",
      "lts": true
    },
    "1.96": {
      "version": "1.96.43",
      "support": "Maintenance",
      "lts": true
    },
    "1.84": {
      "version": "1.84.54",
      "support": "Maintenance",
      "lts": true
    },
    "1.71": {
      "version": "1.71.76",
      "support": "Maintenance",
      "lts": true
    },
    "1.38": {
      "version": "1.38.65",
      "support": "Maintenance",
      "lts": true
    }
  }
}&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P&gt;run_ui5_linter analyzes the project and can auto-fix; optionally include context information for API references, rule descriptions and migration guides.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "run_ui5_linter",
  "params": {
    "projectDir": "/abs/path/ui5-app",
    "fix": true,
    "provideContextInformation": true
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The response is a complete overview, just like when running the UI5 linter directly. The benefit is that it is fed directly into the LLM so remaining issues can be fixed.&lt;/P&gt;&lt;H2 id="toc-hId-bas" id="toc-hId-383544667"&gt;Using these servers in VS Code&lt;/H2&gt;&lt;P class=""&gt;You can run all three servers in VS Code. For CAP and Fiori, install globally or use npx and configure your MCP-capable client inside VS Code. If your client cannot be configured, you can still validate functionality by calling the server CLIs directly (for CAP) or by using the tool flows that write files and then reviewing the diffs. For quick inspection of HTTP-based MCP endpoints you can use the MCP Inspector:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npx @modelcontextprotocol/inspector&lt;/code&gt;&lt;/pre&gt;&lt;!--    Joule section folded into Final words    --&gt;&lt;H2 id="toc-hId-compare" id="toc-hId-187031162"&gt;Which MCP server when?&lt;/H2&gt;&lt;P class=""&gt;This overview helps decide which server to use first. You can run them together in one client.&lt;/P&gt;&lt;TABLE border="1"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Server&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Primary goal&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Scope&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Local project awareness&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Typical use&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Notes&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/163398"&gt;@cap&lt;/a&gt;-js/mcp-server&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Understand and change CAP models safely&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;CDS model, CAP docs&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Yes (compiled CDS)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Search entities/services, check docs before edits&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;CLI tools available&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;-ux/fiori-mcp-server&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Create/modify Fiori elements apps&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;FE app scaffolding and refactoring&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Yes (scans workspace)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Add pages, FCL, controller extensions, manifest changes&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;three-step functionality flow&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;@ui5/mcp-server&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Bootstrap and fix UI5 apps&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Templates, API, guidelines, lint fixes&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Yes (project inspection)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Create UI5 app, read API, run linter&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;A href="https://github.com/marianfoo/mcp-sap-docs" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Docs MCP&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Find the right official page, API, sample&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;SAPUI5, CAP, UI5 Tooling, OpenUI5 API, wdi5, SAP Help, SAP Community&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;No (documentation-first)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Answer questions with sources; verify changes&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Hosted endpoints available; consistent result format&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;!--    Observations folded into Final words    --&gt;&lt;H2 id="toc-hId-first-tests" id="toc-hId--9482343"&gt;First tests in Cursor&lt;/H2&gt;&lt;P class=""&gt;In an initial test with all MCP servers, the CAP server performed particularly well.&lt;BR /&gt;Based on the recommendations for the MCP server, I created a detailed rules file to better guide the MCP server and the LLM.&lt;BR /&gt;Unfortunately, the Fiori tools server did not work, otherwise the Fiori elements apps would have been generated successfully.&lt;BR /&gt;A test without the SAP MCP server successfully generated Fiori elements apps.&lt;/P&gt;&lt;P class=""&gt;I think the best way is to combine the MCP SAP Docs server with the MCP servers from SAP and control them with rules so that they work well together.&lt;/P&gt;&lt;P class=""&gt;My rules file which you can use in your project:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# SAP Development Rules for AI Assistants

## MCP Server Usage Rules

### CAP MCP Server (@cap-js/mcp-server)
- You MUST search for CDS definitions, like entities, fields and services (which include HTTP endpoints) with cds-mcp, only if it fails you MAY read *.cds files in the project.
- You MUST search for CAP docs with cds-mcp EVERY TIME you modify CDS models or when using APIs from CAP. Do NOT propose, suggest or make any changes without first checking it.
- Always refer to @cap docs for better information about SAP CAP (Cloud Application Programming) applications.

### Fiori MCP Server (@sap-ux/fiori-mcp-server)
- When asked to create an SAP Fiori elements app check whether the user input can be interpreted as an application organized into one or more pages containing table data or forms.
- When generating or modifying SAP Fiori elements applications on top of CAP services, use the Fiori MCP server if available.
- When attempting to modify SAP Fiori elements applications like adding columns, you must NOT use screen personalization but instead modify the code of the project. First check whether an MCP server provides a suitable function.
- Follow the 3-step workflow: list-functionality → get-functionality-details → execute-functionality.

### UI5 MCP Server (@ui5/mcp-server)
- This tool MUST be called once to retrieve UI5 guidelines before working on any UI5 (SAPUI5/OpenUI5) related task or project.
- Use for UI5 linting, API reference, project information, and version details.
- Always run UI5 linter after making changes and verify no new problems are introduced.

## SAP CAP Development Rules

### Project Initialization
- Always use `cds init` and don't use `cds init projectname`
- Always create nodejs CAP based applications (don't add --add, just init is fine)
- Always add `cds lint` after generating the application
- Always enable draft for CAP applications but AVOID draft on composed entities
- Don't add random samples using `cds add sample`
- MANDATORY: Set up npm workspaces for UI5 applications in package.json:
  ```json
  {
    "workspaces": [
      "app/*"
    ]
  }
  ```

### Data Modeling
- If using cuid aspect, a default column ID is added and usually has UUIDs
- When cuid is added to entity, then ID will be uuid, so ensure sample data will have ID type uuid
- Prefer composition over association for child entities in SAP CAP
- Use cds managed aspect wherever necessary and add it to entity for it to work
- Don't use enums, prefer associated tables with preload configuration data
- For all entities in the data model provide primary keys of type UUID
- When creating sample data in CSV files, all primary keys and foreign keys MUST be in UUID format (e.g., `550e8400-e29b-41d4-a716-446655440001`)

#### CRITICAL: Draft Entity Composition Rules
- NEVER apply @odata.draft.enabled to both parent and child entities in a composition
- Only apply draft to the main/parent entity (e.g., Events but NOT Teams if Events composes Teams)
- Child entities should be managed through the parent's draft context
- ERROR EXAMPLE: Events @odata.draft.enabled + Teams @odata.draft.enabled + Events composes Teams = BUILD FAILURE

### Value Helps and Views
- For cds views use #TextOnly
- For smaller set of data, prefer fixed values (dropdown) instead of popup help - ValueListWithFixedValues: true

### Testing and Development
- Use `cds build` to find any annotation errors and fix them before testing
- Use `cds watch` to test locally
- After `cds watch`, don't call `sleep 5 or 3`, it will stop cds watch
- Use browser testing to confirm if it's working fine and UI looks good

## Fiori Application Generation

### JSON Configuration Template
Always use this configuration structure for Fiori app generation:
```json
{
    "version": "0.2",
    "floorplan": "FE_LROP",
    "project": {
        "name": "app-name",
        "targetFolder": "/path/to/project",
        "title": "App Title",
        "description": "App Description",
        "ui5Version": "1.132.1",
        "localUI5Version": "1.82.2",
        "sapux": true
    },
    "service": {
        "servicePath": "/service/path/",
        "capService": {
            "projectPath": "/path/to/project",
            "serviceName": "serviceName",
            "serviceCdsPath": "srv/service.cds"
        }
    },
    "entityConfig": {
        "mainEntity": {
            "entityName": "EntityName"
        },
        "generateFormAnnotations": true
    },
    "projectType": "FORM_ENTRY_OBJECT_PAGE",
    "telemetryData": {
        "generationSourceName": "AI Headless",
        "generationSourceVersion": "1.18.1"
    }
}
```

### Required Steps for Fiori Generation
1. First generate the JSON config file as shown above
2. Run the command: `yo @sap/fiori:headless "/path/to/config.json" --force`
3. Add necessary annotations in the generated fiori application (usually in annotations.cds file)
4. Check https://github.com/SAP-samples/fiori-elements-feature-showcase for guidance on annotations

### Package Requirements
- Always use node package "yo" with version 4.3.1
- Before installing check if yo is already installed
- Use @sap/generator-fiori for fiori app generation
- CRITICAL: Always install these UI5 dependencies to avoid startup failures:
  - `npm install -D @ui5/cli` (required for cds-plugin-ui5)
  - `npm install -D @sap/ux-ui5-tooling` (required for advanced UI5 features)
- Always install `npm install -D cds-plugin-ui5` for CAP-UI5 integration

### UI Design Guidelines
- Application typically starts with a List Report page showing data in a table
- Details of specific table row shown in ObjectPage based on the base entity
- ObjectPage can contain table sections based on to-many associations
- Ensure complete UI is generated for requirements and all UI is tested
- Add necessary annotations: Tables for compositions, labels for all fields, value helps, etc.
- Ensure the UI is complete and functional

## Project Management and Documentation

### Product Requirements Document (PRD)
- Always ensure a product requirement document is there (prd.md) with high level requirements
- Status should be "approved" before starting development
- Should be TDD based development -&amp;gt; test after every change
- If PRD is not there, take requirements and generate the PRD
- Initial status should be "pending" - only work when status is "approved"
- Don't assume anything, first ask user to verify the PRD

### PRD Structure
```markdown
# Product Requirements Document

## Status: pending/approved

## Requirements
[High level requirements]

## Development Steps
[ ] step 1
[ ] step 2  
[ ] step n
    [ ] substep 1
    [ ] substep 2
```

- Steps and substeps should be very detailed
- Ensure the whole application is complete - with UI and necessary logic
- After every step completion, mark it as completed [X], for sub and main steps

## Code Quality Rules

### Comments and Documentation
- Don't remove already existing code comments, may improve them
- Maintain existing documentation structure
- Add meaningful comments for complex logic

### Testing and Quality Assurance
- Always test after every change to ensure the outcome is correct
- Ensure complete UI is generated for the requirements
- All UI must be tested and functional
- Use browser testing MCP to confirm functionality and UI appearance

## Additional Guidelines

### Data Types and Structure
- Each property of an entity must have a proper datatype
- Data model must be suitable for SAP Fiori elements frontend applications
- Must have one main entity and one or more navigation properties to related entities

### Annotations Reference
- For annotation details check https://github.com/SAP-samples/fiori-elements-feature-showcase
- Use proper annotations for tables, labels, value helps, etc.
- Ensure UI completeness through proper annotations

#### CRITICAL: Navigation Property Syntax in Annotations
- ALWAYS use dot notation (.) for navigation properties in CDS annotations
- CORRECT: `group.groupName`, `homeTeam.teamName`, `event.name`
- WRONG: `group/groupName`, `homeTeam/teamName`, `event/name` (OData URL syntax)
- ERROR EXAMPLE: Using '/' will cause "Mismatched '/', expecting ',', '.', '}', '#'" compilation errors

### Version Specifications
- Always use UI5 versions: "ui5Version": "1.132.1", "localUI5Version": "1.82.2"
- Keep version consistency across the project

## Development Workflow
1. Create/verify PRD (status: pending → approved)
2. Initialize CAP project with `cds init`
3. Add `cds lint` to the project
4. Create data model with proper entities, compositions, and managed aspects
5. Generate sample data with UUID format for keys
6. Generate Fiori application using 3-step process
7. Add comprehensive annotations
8. Use `cds build` to check for errors
9. Test with `cds watch`
10. Verify UI functionality with browser testing
11. Mark steps as completed in PRD

Remember: Always use MCP servers for their respective domains and follow the specific guidelines for each technology stack.

## Critical Issues &amp;amp; Solutions from Real Development Experience

### UI5 Dependency Resolution Issues
**Problem**: CDS server starts but fails to mount UI5 applications with errors like:
- `Cannot find module '@ui5/cli/package.json'`
- `Cannot find module '@sap/ux-ui5-tooling/package.json'`

**Root Cause**: Fiori generator creates applications with UI5 tooling requirements not installed in project root

**MANDATORY Solution**:
1. Always install: `npm install -D @ui5/cli @sap/ux-ui5-tooling`
2. Install before generating Fiori applications
3. If applications already exist, install dependencies then restart `cds watch`

### Service Import Issues in Annotations
**Problem**: Cannot import services in annotation files with errors like:
- `Can't find local module '../srv/service-name'`

**Solution**: 
- Import services using destructuring: `using { ServiceName } from '../srv/service-file';`
- If import fails, create separate annotation files per service
- Use relative paths correctly from app/ to srv/ directory

### Draft Entity Composition Conflicts
**Problem**: Build error "Composition in draft-enabled entity can't lead to another entity with @odata.draft.enabled"

**Solution**:
- Only enable draft on parent entities in compositions
- Child entities are automatically managed through parent draft context
- Example: Events (draft enabled) → Teams (no draft) is correct

### npm Workspaces for UI5 Applications
**MANDATORY Setup**:
```json
{
  "workspaces": [
    "app/*"
  ],
  "scripts": {
    "watch-app1": "cds watch --open app1/webapp/index.html",
    "watch-app2": "cds watch --open app2/webapp/index.html"
  }
}
```

### Authorization Testing
- Protected endpoints returning "Unauthorized" is CORRECT behavior
- Test public endpoints for anonymous access
- Use different service definitions for different security levels
- @requires at service level, @restrict at entity level

### Troubleshooting Checklist
When CDS server fails to start with Fiori applications:
1. ✅ Check @ui5/cli is installed
2. ✅ Check @sap/ux-ui5-tooling is installed  
3. ✅ Check cds-plugin-ui5 is installed
4. ✅ Verify npm workspaces configuration
5. ✅ Check draft entity composition conflicts
6. ✅ Verify annotation syntax (. not / for navigation)
7. ✅ Run `npm audit fix` for security vulnerabilities

### Testing Verification Steps
1. `cds watch` starts without errors
2. http://localhost:4004 shows launch page
3. All UI5 applications listed and accessible
4. Service endpoints return data or proper authorization errors
5. Fiori preview links work for all entities&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;# SAP Development Rules for AI Assistants

## MCP Server Usage Rules

### CAP MCP Server (@cap-js/mcp-server)
- You MUST search for CDS definitions, like entities, fields and services (which include HTTP endpoints) with cds-mcp, only if it fails you MAY read *.cds files in the project.
- You MUST search for CAP docs with cds-mcp EVERY TIME you modify CDS models or when using APIs from CAP. Do NOT propose, suggest or make any changes without first checking it.
- Always refer to @cap docs for better information about SAP CAP (Cloud Application Programming) applications.

### Fiori MCP Server (@sap-ux/fiori-mcp-server)
- When asked to create an SAP Fiori elements app check whether the user input can be interpreted as an application organized into one or more pages containing table data or forms.
- When generating or modifying SAP Fiori elements applications on top of CAP services, use the Fiori MCP server if available.
- When attempting to modify SAP Fiori elements applications like adding columns, you must NOT use screen personalization but instead modify the code of the project. First check whether an MCP server provides a suitable function.
- Follow the 3-step workflow: list-functionality → get-functionality-details → execute-functionality.

### UI5 MCP Server (@ui5/mcp-server)
- This tool MUST be called once to retrieve UI5 guidelines before working on any UI5 (SAPUI5/OpenUI5) related task or project.
- Use for UI5 linting, API reference, project information, and version details.
- Always run UI5 linter after making changes and verify no new problems are introduced.

## SAP CAP Development Rules

### Project Initialization
- Always use `cds init` and don't use `cds init projectname`
- Always create nodejs CAP based applications (don't add --add, just init is fine)
- Always add `cds lint` after generating the application
- Always enable draft for CAP applications but AVOID draft on composed entities
- Don't add random samples using `cds add sample`
- MANDATORY: Set up npm workspaces for UI5 applications in package.json:
  ```json
  {
    "workspaces": [
      "app/*"
    ]
  }
  ```

### Data Modeling
- If using cuid aspect, a default column ID is added and usually has UUIDs
- When cuid is added to entity, then ID will be uuid, so ensure sample data will have ID type uuid
- Prefer composition over association for child entities in SAP CAP
- Use cds managed aspect wherever necessary and add it to entity for it to work
- Don't use enums, prefer associated tables with preload configuration data
- For all entities in the data model provide primary keys of type UUID
- When creating sample data in CSV files, all primary keys and foreign keys MUST be in UUID format (e.g., `550e8400-e29b-41d4-a716-446655440001`)

#### CRITICAL: Draft Entity Composition Rules
- NEVER apply @odata.draft.enabled to both parent and child entities in a composition
- Only apply draft to the main/parent entity (e.g., Events but NOT Teams if Events composes Teams)
- Child entities should be managed through the parent's draft context
- ERROR EXAMPLE: Events @odata.draft.enabled + Teams @odata.draft.enabled + Events composes Teams = BUILD FAILURE

### Value Helps and Views
- For cds views use #TextOnly
- For smaller set of data, prefer fixed values (dropdown) instead of popup help - ValueListWithFixedValues: true

### Testing and Development
- Use `cds build` to find any annotation errors and fix them before testing
- Use `cds watch` to test locally
- After `cds watch`, don't call `sleep 5 or 3`, it will stop cds watch
- Use browser testing to confirm if it's working fine and UI looks good

## Fiori Application Generation

### JSON Configuration Template
Always use this configuration structure for Fiori app generation:
```json
{
    "version": "0.2",
    "floorplan": "FE_LROP",
    "project": {
        "name": "app-name",
        "targetFolder": "/path/to/project",
        "title": "App Title",
        "description": "App Description",
        "ui5Version": "1.132.1",
        "localUI5Version": "1.82.2",
        "sapux": true
    },
    "service": {
        "servicePath": "/service/path/",
        "capService": {
            "projectPath": "/path/to/project",
            "serviceName": "serviceName",
            "serviceCdsPath": "srv/service.cds"
        }
    },
    "entityConfig": {
        "mainEntity": {
            "entityName": "EntityName"
        },
        "generateFormAnnotations": true
    },
    "projectType": "FORM_ENTRY_OBJECT_PAGE",
    "telemetryData": {
        "generationSourceName": "AI Headless",
        "generationSourceVersion": "1.18.1"
    }
}
```

### Required Steps for Fiori Generation
1. First generate the JSON config file as shown above
2. Run the command: `yo @sap/fiori:headless "/path/to/config.json" --force`
3. Add necessary annotations in the generated fiori application (usually in annotations.cds file)
4. Check https://github.com/SAP-samples/fiori-elements-feature-showcase for guidance on annotations

### Package Requirements
- Always use node package "yo" with version 4.3.1
- Before installing check if yo is already installed
- Use @sap/generator-fiori for fiori app generation
- CRITICAL: Always install these UI5 dependencies to avoid startup failures:
  - `npm install -D @ui5/cli` (required for cds-plugin-ui5)
  - `npm install -D @sap/ux-ui5-tooling` (required for advanced UI5 features)
- Always install `npm install -D cds-plugin-ui5` for CAP-UI5 integration

### UI Design Guidelines
- Application typically starts with a List Report page showing data in a table
- Details of specific table row shown in ObjectPage based on the base entity
- ObjectPage can contain table sections based on to-many associations
- Ensure complete UI is generated for requirements and all UI is tested
- Add necessary annotations: Tables for compositions, labels for all fields, value helps, etc.
- Ensure the UI is complete and functional

## Project Management and Documentation

### Product Requirements Document (PRD)
- Always ensure a product requirement document is there (prd.md) with high level requirements
- Status should be "approved" before starting development
- Should be TDD based development -&amp;gt; test after every change
- If PRD is not there, take requirements and generate the PRD
- Initial status should be "pending" - only work when status is "approved"
- Don't assume anything, first ask user to verify the PRD

### PRD Structure
```markdown
# Product Requirements Document

## Status: pending/approved

## Requirements
[High level requirements]

## Development Steps
[ ] step 1
[ ] step 2  
[ ] step n
    [ ] substep 1
    [ ] substep 2
```

- Steps and substeps should be very detailed
- Ensure the whole application is complete - with UI and necessary logic
- After every step completion, mark it as completed [X], for sub and main steps

## Code Quality Rules

### Comments and Documentation
- Don't remove already existing code comments, may improve them
- Maintain existing documentation structure
- Add meaningful comments for complex logic

### Testing and Quality Assurance
- Always test after every change to ensure the outcome is correct
- Ensure complete UI is generated for the requirements
- All UI must be tested and functional
- Use browser testing MCP to confirm functionality and UI appearance

## Additional Guidelines

### Data Types and Structure
- Each property of an entity must have a proper datatype
- Data model must be suitable for SAP Fiori elements frontend applications
- Must have one main entity and one or more navigation properties to related entities

### Annotations Reference
- For annotation details check https://github.com/SAP-samples/fiori-elements-feature-showcase
- Use proper annotations for tables, labels, value helps, etc.
- Ensure UI completeness through proper annotations

#### CRITICAL: Navigation Property Syntax in Annotations
- ALWAYS use dot notation (.) for navigation properties in CDS annotations
- CORRECT: `group.groupName`, `homeTeam.teamName`, `event.name`
- WRONG: `group/groupName`, `homeTeam/teamName`, `event/name` (OData URL syntax)
- ERROR EXAMPLE: Using '/' will cause "Mismatched '/', expecting ',', '.', '}', '#'" compilation errors

### Version Specifications
- Always use UI5 versions: "ui5Version": "1.132.1", "localUI5Version": "1.82.2"
- Keep version consistency across the project

## Development Workflow
1. Create/verify PRD (status: pending → approved)
2. Initialize CAP project with `cds init`
3. Add `cds lint` to the project
4. Create data model with proper entities, compositions, and managed aspects
5. Generate sample data with UUID format for keys
6. Generate Fiori application using 3-step process
7. Add comprehensive annotations
8. Use `cds build` to check for errors
9. Test with `cds watch`
10. Verify UI functionality with browser testing
11. Mark steps as completed in PRD

Remember: Always use MCP servers for their respective domains and follow the specific guidelines for each technology stack.

## Critical Issues &amp;amp; Solutions from Real Development Experience

### UI5 Dependency Resolution Issues
**Problem**: CDS server starts but fails to mount UI5 applications with errors like:
- `Cannot find module '@ui5/cli/package.json'`
- `Cannot find module '@sap/ux-ui5-tooling/package.json'`

**Root Cause**: Fiori generator creates applications with UI5 tooling requirements not installed in project root

**MANDATORY Solution**:
1. Always install: `npm install -D @ui5/cli @sap/ux-ui5-tooling`
2. Install before generating Fiori applications
3. If applications already exist, install dependencies then restart `cds watch`

### Service Import Issues in Annotations
**Problem**: Cannot import services in annotation files with errors like:
- `Can't find local module '../srv/service-name'`

**Solution**: 
- Import services using destructuring: `using { ServiceName } from '../srv/service-file';`
- If import fails, create separate annotation files per service
- Use relative paths correctly from app/ to srv/ directory

### Draft Entity Composition Conflicts
**Problem**: Build error "Composition in draft-enabled entity can't lead to another entity with @odata.draft.enabled"

**Solution**:
- Only enable draft on parent entities in compositions
- Child entities are automatically managed through parent draft context
- Example: Events (draft enabled) → Teams (no draft) is correct

### npm Workspaces for UI5 Applications
**MANDATORY Setup**:
```json
{
  "workspaces": [
    "app/*"
  ],
  "scripts": {
    "watch-app1": "cds watch --open app1/webapp/index.html",
    "watch-app2": "cds watch --open app2/webapp/index.html"
  }
}
```

### Authorization Testing
- Protected endpoints returning "Unauthorized" is CORRECT behavior
- Test public endpoints for anonymous access
- Use different service definitions for different security levels
- @requires at service level, @restrict at entity level

### Troubleshooting Checklist
When CDS server fails to start with Fiori applications:
1. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Check @ui5/cli is installed
2. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Check @sap/ux-ui5-tooling is installed  
3. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Check cds-plugin-ui5 is installed
4. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Verify npm workspaces configuration
5. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Check draft entity composition conflicts
6. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Verify annotation syntax (. not / for navigation)
7. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Run `npm audit fix` for security vulnerabilities

### Testing Verification Steps
1. `cds watch` starts without errors
2. http://localhost:4004 shows launch page
3. All UI5 applications listed and accessible
4. Service endpoints return data or proper authorization errors
5. Fiori preview links work for all entities&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;H2 id="toc-hId-compare-logs" id="toc-hId-141258509"&gt;Quick comparison: SAP MCP servers vs SAP Docs MCP server&lt;/H2&gt;&lt;TABLE border="1"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Aspect&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Official CAP/Fiori/UI5 MCP&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;SAP Docs MCP (my server)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Startup guidance&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Project-aware; returns concrete tools and parameters&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Finds the right pages (CAP getting started, UI5 what’s new)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Model and API grounding&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;CAP: search_model/search_docs; UI5: get_api_reference&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Cross-source docs incl. SAP Help and Community posts&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Scaffolding&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;UI5: create_ui5_app; Fiori: generate flow (schema issues in test client)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;No scaffolding, documentation-first&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Quality gates&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;UI5 linter with contextual docs and migration guides&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Verify answers against official sources&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Outcome in this test&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;CAP and UI5 flows helped; Fiori flow blocked by schema validation → manual FE generation produced object pages only&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Docs server supplied confirmation for versions, annotations and FE patterns&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-next" id="toc-hId--55254996"&gt;Final words&lt;/H2&gt;&lt;P class=""&gt;First of all, I want to praise my colleagues at SAP in the UI5, CAP, and Fiori tools teams. Making these MCP servers available as open source is the right decision—it enables not only developers who use BAS, but all developers, including those outside of BTP.&lt;/P&gt;&lt;P class=""&gt;For day-to-day development I prefer a local client with MCP servers. The official CAP, Fiori, and UI5 servers add project awareness and executable actions. Combined with a documentation-first server like my &lt;A href="https://github.com/marianfoo/mcp-sap-docs" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Docs MCP&lt;/A&gt;, you can cover both creation and verification without switching to Joule for Developers. You can also use MCP servers with BAS; I will cover this in another blog post.&lt;/P&gt;&lt;P class=""&gt;From my tests: the UI5 server ties linter output to API references and migration guides, closing a common gap where fixes lacked context. The cache under the data directory speeds up repeated queries, but verify version alignment via get_project_info and get_version_info before applying fixes. The Fiori server’s three-step approach makes changes explicit and reviewable, which helps keep pull requests predictable—if you automate this in CI, keep it behind a branch. The CAP server provides safe discovery over the compiled model and a docs search, reducing wrong assumptions about services and endpoints.&lt;/P&gt;&lt;P class=""&gt;It is important to note that these MCP tools were only released this week. Not everything works perfectly yet, but once you start using them, it is hard to work without them. Work with Git so any changes can be reversed if necessary.&lt;/P&gt;&lt;P class=""&gt;The MCP protocol is still new, and it is fair to ask whether it is worth the investment. I think it is promising: it can solve the problem of missing or outdated context for LLMs and, as these servers show, it is not just about context but also about executing the right actions with Fiori tools and CAP.&lt;/P&gt;&lt;H2 id="toc-hId-links" id="toc-hId--251768501"&gt;Links&lt;/H2&gt;&lt;P class=""&gt;&lt;A href="https://www.npmjs.com/package/@cap-js/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;@cap-js/mcp-server&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;@sap-ux/fiori-mcp-server&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://www.npmjs.com/package/@ui5/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;@ui5/mcp-server&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://github.com/UI5/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;UI5 MCP server repository&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/give-your-ai-agent-some-tools-introducing-the-ui5-mcp-server/ba-p/14200825" target="_blank"&gt;UI5 MCP server release post&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602" target="_blank"&gt;SAP Build introduces MCP servers&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849" target="_blank"&gt;CAP MCP server release post&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://github.com/SAP/open-ux-tools/tree/main/packages/fiori-mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;Fiori MCP server repository&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://github.com/cap-js/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;CAP MCP server repository&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/evaluating-sap-s-new-mcp-servers-ui5-cap-and-fiori-tools-in-practice/ba-p/14205611"/>
    <published>2025-09-04T07:00:11.016000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/enhancing-unit-testing-in-sap-cap-java-applications-with-github-copilot/ba-p/14207293</id>
    <title>Enhancing Unit Testing in SAP CAP Java Applications with GitHub Copilot</title>
    <updated>2025-09-04T13:37:40.530000+02:00</updated>
    <author>
      <name>Anjali_Pathak</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2043652</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Introduction&lt;/FONT&gt;&lt;BR /&gt;&lt;/STRONG&gt;Building upon&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/getting-started-with-unit-testing-in-sap-cap-java-applications/ba-p/14164240" target="_self"&gt;SAP's guide to unit testing in CAP Java&lt;/A&gt;,&amp;nbsp;this post explores how &lt;STRONG&gt;GitHub Copilot&lt;/STRONG&gt; can streamline and accelerate the process of writing unit tests in SAP Cloud Application Programming (CAP) Java projects.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;GitHub Copilot&lt;/STRONG&gt; is an AI-powered coding assistant developed by GitHub and OpenAI. It helps developers by suggesting code snippets, functions, and even entire test cases in real time, based on the context of what you're writing. Integrated into popular code editors, it speeds up development and reduces repetitive tasks.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;Where GitHub Copilot Helps&lt;FONT size="4"&gt;&lt;BR /&gt;&lt;/FONT&gt;GitHub Copilot&lt;/STRONG&gt; assists by:&lt;/P&gt;&lt;OL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Autocompleting test scaLolds&lt;/LI&gt;&lt;LI&gt;Suggesting assertion logic&lt;/LI&gt;&lt;LI&gt;Handling repetitive boilerplate (e.g., mocks and setup)&lt;/LI&gt;&lt;LI&gt;Speeding up TDD cycles (Red → Green → Refactor)&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;How GitHub Copilot Can Help in Writing TDD Test Cases&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In the context of &lt;STRONG&gt;SAP CAP Java,&lt;/STRONG&gt; &lt;STRONG&gt;GitHub Copilot&lt;/STRONG&gt; streamlines the process of writing unit tests, allowing developers to focus on defining behaviour and business logic.&lt;BR /&gt;Below we will demonstrate the example using a test case from&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/getting-started-with-unit-testing-in-sap-cap-java-applications/ba-p/14164240" target="_self"&gt;SAP's guide to unit testing in CAP Java&lt;/A&gt;. The test case is part of the method “validateBookAndDecreaseStock” , which was introduced and tested manually in this post.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Let’s now see how &lt;STRONG&gt;GitHub Copilot&lt;/STRONG&gt; helps implement the same scenario using a TDD approach, covering prompts, completions, and code refinements.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Scenario: Book Does Not Exist -&lt;/STRONG&gt; We want to write a test for the case where a book ID in an order does not exist in the database.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Red&lt;/STRONG&gt;&lt;/FONT&gt; – &lt;U&gt;Write the Failing Test First&lt;/U&gt;&lt;BR /&gt;&lt;P class=""&gt;&lt;STRONG&gt;Prompt Example:&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;EM&gt;"Write a JUnit 5 test for validateBookAndDecreaseStock(List&amp;lt;OrderItems&amp;gt;) when the book does not exist. Mock the persistence service to return empty result. Expect Service Exception with message – Book does not exist"&lt;BR /&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;STRONG&gt;Copilot Suggestion:&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Anjali_Pathak_0-1756984803409.png" style="width: 438px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309189iF53201249652DC40/image-dimensions/438x233?v=v2" width="438" height="233" role="button" title="Anjali_Pathak_0-1756984803409.png" alt="Anjali_Pathak_0-1756984803409.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P class=""&gt;This gives us a strong starting point — the &lt;STRONG&gt;structure, mocking, and assertions&lt;/STRONG&gt; are generated instantly. We can now refine or expand it as needed.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Green&lt;/STRONG&gt;&lt;/FONT&gt; – &lt;U&gt;&lt;U&gt;Implement Minimal Code to Pass the Test&lt;BR /&gt;&lt;/U&gt;&lt;/U&gt;&lt;P class=""&gt;Once the test is in place and failing, we write just enough application code to make it pass.&lt;BR /&gt;&lt;STRONG&gt;How Copilot Helps:&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;•&lt;/SPAN&gt; Copilot can suggest the implementation stub or completion for the service method.&lt;BR /&gt;&lt;SPAN class=""&gt;•&lt;/SPAN&gt; It recognizes context (e.g., entity names like Books, usage of persistence Service, and typical CAP patterns).&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Prompt Example:&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;EM&gt;“Implement the validateBookAndDecreaseStock method so it throws a Service Exception when the book is not found.”&lt;/EM&gt;&lt;/P&gt;&lt;U&gt;&lt;BR /&gt;&lt;/U&gt;&lt;STRONG&gt;&lt;STRONG&gt;Copilot Suggestion:&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Anjali_Pathak_1-1756985058432.png" style="width: 542px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309194iEC63DA7D5181681D/image-dimensions/542x187?v=v2" width="542" height="187" role="button" title="Anjali_Pathak_1-1756985058432.png" alt="Anjali_Pathak_1-1756985058432.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P class=""&gt;While still minimal, this satisfies the failing test and progresses the TDD loop.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Refactor&lt;/STRONG&gt; &lt;/FONT&gt;– &lt;U&gt;Clean and Improve Code&lt;/U&gt;&lt;P class=""&gt;Once the test passes, the code can be cleaned up. Copilot can assist by:&lt;BR /&gt;1.&amp;nbsp;Suggesting improved variable naming&lt;/P&gt;2. Identifying reusable logic (e.g., extracting methods)&lt;BR /&gt;3. Completing more idiomatic Java or CAP Java constructs&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Prompt Example:&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;EM&gt;"Refactor validateBookAndDecreaseStock to extract book lookup into a separate private method."&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;STRONG&gt;Copilot Suggestion:&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Anjali_Pathak_2-1756985317779.png" style="width: 528px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309197i9E659950079E0A48/image-dimensions/528x99?v=v2" width="528" height="99" role="button" title="Anjali_Pathak_2-1756985317779.png" alt="Anjali_Pathak_2-1756985317779.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P class=""&gt;GitHub Copilot provides several other ways to improve our development workflow. Below is a table showcasing additional use cases and how it can support us throughout the process:&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="50px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Way Copilot Helps&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="50px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="105px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Prompting&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="105px"&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Provides code suggestions based on the context of your work, helping you quickly generate code snippets and complete tasks.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="105px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Auto-completion&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="105px"&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Suggests auto-completions for common code patterns like variable declarations, method signatures, or class instantiations, reducing the need to write repetitive code.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="105px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Refactoring Suggestions&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="105px"&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Suggests improvements in code structure, like method extraction or renaming variables, for cleaner and more maintainable code.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="77px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Context-Aware Suggestions&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="77px"&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Generates code that fits with the specific libraries or frameworks you're using, ensuring adherence to best practices.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="62px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Error Handling Recommendations&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="62px"&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Helps identify and handle potential exceptions or edge cases by suggesting relevant error handling and assertions.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Conclusion&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In conclusion, GitHub Copilot significantly enhances the unit testing process in SAP CAP Java applications by providing real-time code suggestions, automating repetitive tasks, and ensuring comprehensive test coverage. By streamlining the creation of test cases, mocking dependencies, and improving code structure, Copilot accelerates the TDD workflow, allowing developers to focus more on business logic and less on boilerplate code. Its ability to suggest improvements and handle edge cases ultimately leads to cleaner, more maintainable code and a more efficient development process.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Disclaimer&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The views and opinions expressed in this blog post are those of the author and do not necessarily reflect the official policy or position of SAP or its affiliates. This content is provided for informational purposes only, based on the author's personal experience and understanding.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;This blog references the use of GitHub Copilot, an AI-powered coding assistant. The suggestions generated by Copilot are not guaranteed to be accurate, complete, secure, or compliant with any specific coding standards or organizational policies. Developers are responsible for reviewing, validating, and testing all code before use in any production or sensitive environment.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;SAP makes no representations or warranties, express or implied, regarding the suitability or accuracy of the information or tools mentioned herein.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/enhancing-unit-testing-in-sap-cap-java-applications-with-github-copilot/ba-p/14207293"/>
    <published>2025-09-04T13:37:40.530000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/consuming-on-premise-service-in-cap-project-error-failed-to-load/ba-p/14208190</id>
    <title>Consuming on-Premise Service in CAP Project - Error “Failed to load destination” after deployment</title>
    <updated>2025-09-05T08:52:06.672000+02:00</updated>
    <author>
      <name>parth_</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/866502</uri>
    </author>
    <content>&lt;P&gt;Hi All,&lt;/P&gt;&lt;P&gt;I am trying to consume an on-premise service in the CAP project using the destination.&amp;nbsp;My SAP BTP Subaccount is connected to on-premise system via Cloud Connector.&lt;/P&gt;&lt;P&gt;In my existing CAP project, I have added the External Service (on-premise) by following steps as --&amp;gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;&lt;STRONG&gt;Service Center &amp;gt; Select Provider as 'SAP SYSTEM' &amp;gt; Catalog of Services as &amp;lt;my on-premise system&amp;gt; &amp;gt; Selected the service that I want &amp;gt; Selected the Entity that I&amp;nbsp;wanted to add in my existing CAP project.&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;You can find more details in the URL mentioned below.&lt;/P&gt;&lt;P&gt;URL:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-q-a/consuming-on-premise-service-in-cap-project/qaq-p/13682458" target="_blank"&gt;https://community.sap.com/t5/technology-q-a/consuming-on-premise-service-in-cap-project/qaq-p/13682458&lt;/A&gt;&lt;/P&gt;&lt;P&gt;When I run the application locally using environment variables, it works fine. However, after deployment, I am getting the following error :&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;502&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;lt;/code&amp;gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;&amp;lt;message&amp;gt;&lt;/SPAN&gt;&lt;SPAN&gt;Error during request to remote service: Failed to load destination.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;P&gt;Please guide me on how I can achieve this.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thanks in advance!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/consuming-on-premise-service-in-cap-project-error-failed-to-load/ba-p/14208190"/>
    <published>2025-09-05T08:52:06.672000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-eslint-plugin-better-cap-config-an-eslint-plugin-to-improve-cap/ba-p/14209616</id>
    <title>Introducing eslint-plugin-better-cap-config an ESLint plugin to improve CAP configuration</title>
    <updated>2025-09-08T01:24:02.584000+02:00</updated>
    <author>
      <name>mauriciolauffer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11418</uri>
    </author>
    <content>&lt;P&gt;I've created an ESLint plugin to validate the configurations in SAP CAP Node.js applications. Yes, &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt; validates JSON files containing project configuration. For now, it's basically the usage of deprecated key/value entries, but it can evolve to accommodate best practices, suggestions and autofixes just like any other ESLint plugin.&lt;/P&gt;&lt;P&gt;It's build for modern ESLint which has introduced the concept of &lt;A href="https://eslint.org/docs/latest/extend/languages" target="_blank" rel="noopener nofollow noreferrer"&gt;new languages&lt;/A&gt;. This offers proper support to more languages beyond JavaScript and TypeScript. &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt; leverages the new &lt;A href="https://www.npmjs.com/package/@eslint/json" target="_blank" rel="noopener nofollow noreferrer"&gt;JSON Language&lt;/A&gt; rather than generic regular expressions. This makes it more powerful and flexible.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1759258371"&gt;Demo time&lt;/H2&gt;&lt;P&gt;Let's assume we have a simple CAP project with the following configuration in the &lt;STRONG&gt;package.json&lt;/STRONG&gt; file.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;"cds": {
    "requires": {
      "destinations": true,
      "html5-repo": true,
      "[production]": {
        "auth": "ias"
      },
      "messaging": {
        "kind": "enterprise-messaging"
      },
      "db": {
        "kind": "sql",
        "[production]": {
          "kind": "hana"
        }
      }
    },
    "features": {
      "cds_validate": false,
      "odata_new_adapter": false
    },
    "fiori": {
      "draft_compat": true
    }
  },&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;And the following ESLint configuration:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import cds from '@sap/cds/eslint.config.mjs';
export default [ ...cds.recommended ];&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;As we can see, it's using the ESLint config that comes with &lt;STRONG&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;/cds&lt;/STRONG&gt;. The same you get from &lt;A href="https://cap.cloud.sap/docs/tools/cds-lint/#cds-add-lint" target="_blank" rel="nofollow noopener noreferrer"&gt;$ cds add lint&lt;/A&gt;. OK, let's lint the project and see what happens:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm run lint&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ESLint shows no errors" style="width: 571px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310511i47AA8FEAA8728BC2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-06 162804.png" alt="ESLint shows no errors" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;ESLint shows no errors&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Nothing. No output. No issues. No problems. Happy days, right?&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Aladdin says &amp;quot;Not so fast Jafar!&amp;quot;" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310502iAF3835BDBD4FBB57/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-07 001830.png" alt="Aladdin says &amp;quot;Not so fast Jafar!&amp;quot;" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Aladdin says "Not so fast Jafar!"&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;According to the CAP documentation, configuration like&amp;nbsp;&lt;STRONG&gt;cds.features.cds_validate = false&lt;/STRONG&gt;, &lt;SPAN&gt;&lt;STRONG&gt;cds.&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;features.odata_new_adapter = false&lt;/STRONG&gt; and &lt;SPAN&gt;&lt;STRONG&gt;cds.&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;fiori.draft_compat = true&lt;/STRONG&gt; are deprecated. For some of the deprecated config in CAP, you may get a message on the console when running the application (cds-serve, cds watch, etc). However, there are some problems with relying on those console messages:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Most of the time they go unnoticed;&lt;/LI&gt;&lt;LI&gt;If you don't upgrade &lt;A href="https://www.npmjs.com/package/@sap/cds" target="_self" rel="nofollow noopener noreferrer"&gt;@sap/cds&lt;/A&gt; and &lt;A href="https://www.npmjs.com/package/@sap/cds-dk" target="_blank" rel="noopener nofollow noreferrer"&gt;@sap/cds-dk&lt;/A&gt;, you won't get the new messages informing something has been deprecated;&lt;/LI&gt;&lt;LI&gt;No visual cues on IDEs;&lt;/LI&gt;&lt;LI&gt;Not possible to integrate to a CI/CD pipeline.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;In this example, executing &lt;STRONG&gt;cds-serve&lt;/STRONG&gt; doesn't return any warning or error messages on the console for the aforementioned deprecated configs.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1562744866"&gt;ESLint Plugin Better CAP Config to the rescue!&lt;/H2&gt;&lt;P&gt;Now, let's install and configure &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt; to see what changes. Using it is quite simple, it's just another ESLint plugin you need to add to your collection. Because it uses the JSON language, you need to install the&amp;nbsp;&lt;A href="https://www.npmjs.com/package/@eslint/json" target="_blank" rel="noopener nofollow noreferrer"&gt;@eslint/json&lt;/A&gt; package as well.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm i -D @eslint/json   eslint-plugin-better-cap-config&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Edit, the &lt;STRONG&gt;eslint.config.js&lt;/STRONG&gt; file (or whatever variation you're using, eg, *.ts or *.mjs) to include &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import cds from "@sap/cds/eslint.config.mjs";
import { defineConfig } from "eslint/config";
import json from "@eslint/json";
import capConfig from "eslint-plugin-better-cap-config";

export default defineConfig([
  {
    files: ["**/*.js"],
    extends: [cds.recommended],
  },
  {
    files: ["**/*.json"],
    plugins: {
      json,
    },
    language: "json/json",
    extends: [capConfig.configs.recommended],
  },
]);&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now, we execute ESLint just like we did before, nothing else is required.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm run lint&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ESLint shows CAP config errors" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310515i7CA852E4D420D083/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-06 165546.png" alt="ESLint shows CAP config errors" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;ESLint shows CAP config errors&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;We can see &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt; picked up a few deprecated configs that went unnoticed before.&lt;/P&gt;&lt;P&gt;Now, we fix our config:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;  "cds": {
    "requires": {
      "destinations": true,
      "html5-repo": true,
      "[production]": {
        "auth": "ias"
      },
      "messaging": {
        "kind": "enterprise-messaging"
      },
      "db": {
        "kind": "sql",
        "[production]": {
          "kind": "hana"
        }
      }
    },
    "features": {
      "cds_validate": true,
      "odata_new_adapter": true
    }
  },&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;And lint the project again:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm run lint&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ESLint shows no errors" style="width: 571px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310505i684D6E51DCC6FDB2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-06 162804.png" alt="ESLint shows no errors" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;ESLint shows no errors&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;No issues found! Hooray!!!&lt;/P&gt;&lt;P&gt;This is early days for &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt;, there are few rules implemented so far and some others cooking.&lt;/P&gt;&lt;P&gt;It works with configuration in any JSON file, such as&amp;nbsp;&lt;STRONG&gt;package.json&lt;/STRONG&gt; and&amp;nbsp;&lt;STRONG&gt;.cdsrc.json&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;CAP documentation is good, but doesn't help much when looking for deprecated stuff. A central place for that would be great. Right now, I'm going through the release notes and looking for everything that's deprecated. It's a rather tedious process...&lt;/P&gt;&lt;P&gt;As always, the project is open-source (&lt;A href="https://github.com/mauriciolauffer/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub&lt;/A&gt;) and PRs are welcome &lt;span class="lia-unicode-emoji" title=":robot_face:"&gt;🤖&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-eslint-plugin-better-cap-config-an-eslint-plugin-to-improve-cap/ba-p/14209616"/>
    <published>2025-09-08T01:24:02.584000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172</id>
    <title>Avoiding Data Loss When Loading Initial Data with CSV Files in CAP</title>
    <updated>2025-09-15T22:17:28.888000+02:00</updated>
    <author>
      <name>MioYasutake</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/789</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760058105"&gt;Introduction&lt;/H2&gt;&lt;P&gt;When you start learning CAP, running &lt;EM&gt;cds add tiny-sample&lt;/EM&gt; generates all the necessary sample artifacts, including a CSV file inside the &lt;STRONG&gt;db/data&lt;/STRONG&gt; folder. Once deployed, the data from this CSV file is loaded as initial data into SAP HANA Cloud.&lt;/P&gt;&lt;P&gt;This mechanism seems convenient for loading initial data into SAP HANA Cloud for productive applications, doesn’t it?&lt;BR /&gt;However, there’s a catch. &lt;STRONG&gt;If you change the CSV data or modify the schema, the data in SAP HANA Cloud will be reinitialized with the CSV content&lt;/STRONG&gt; — including the data entered by users! Let’s take a look at what the &lt;A href="https://cap.cloud.sap/docs/guides/databases#using-csv-files" target="_self" rel="nofollow noopener noreferrer"&gt;documentation&lt;/A&gt; says:&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;On SAP HANA, only use CSV files for configuration data that can't be changed by application users. → See &lt;EM&gt;CSV data gets overridden&lt;/EM&gt; in the SAP HANA guide for details.&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;This is exactly the point I want to highlight in this article. At the same time, I’ve also explored some alternative approaches and validated them.&lt;/P&gt;&lt;H2 id="toc-hId-1563544600"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1367031095"&gt;Case1: New Development&lt;/H2&gt;&lt;P&gt;When developing a new CAP application, you have the following options:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Option A&lt;/STRONG&gt;: Do not use CSV files to register initial data for tables that will be maintained by the application users.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Option B&lt;/STRONG&gt;:&amp;nbsp;If both initial data and user-generated data need to coexist, define filter conditions in the &lt;STRONG&gt;.hdbtabledata&lt;/STRONG&gt;&amp;nbsp;file.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Option A is the simplest, if feasible. However, in some cases — such as for master data — the ability to quickly load initial data from CSV files is attractive. Below, let’s look at Option B&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;in more detail.&lt;/P&gt;&lt;H3 id="toc-hId-1299600309"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1103086804"&gt;&lt;STRONG&gt;Option B:&amp;nbsp;&lt;/STRONG&gt;Define filter conditions in the &lt;STRONG&gt;.hdbtabledata&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;1. Add a column called &lt;EM&gt;dataCategory&lt;/EM&gt; to the table to distinguish between different types of data. (This is just an example; you can use any column as an identifier.)&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;entity Books {
  key ID    : Integer;
      title : String;
      stock : Integer;
      dataCategory: String enum {
        system = 'S';
        user = 'U';
      }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2.&amp;nbsp;Run the command &lt;EM&gt;cds build --production&lt;/EM&gt;&amp;nbsp;to generate an &lt;STRONG&gt;.hdbtabledata&lt;/STRONG&gt; file in the &lt;STRONG&gt;gen/db/src/data&lt;/STRONG&gt; folder. Copy this file to the &lt;STRONG&gt;db/src/static/csv&lt;/STRONG&gt; folder, and then add an &lt;STRONG&gt;include_filter&lt;/STRONG&gt; as shown below.&amp;nbsp; This ensures that the HDI container takes ownership only of the records specified by the filter. (Note:&amp;nbsp;&lt;SPAN&gt;The values must be strings, even if the column’s data type is numeric.)&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "format_version": 1,
  "imports": [
    {
      ...,
      "import_settings": {
        "import_columns": [
          "ID",
          "TITLE",
          "STOCK",
          "DATACATEGORY"
        ],
        "include_filter": [
          { "DATACATEGORY" : "S" }
        ]
      },
      "column_mappings": {
        "ID": "ID",
        "TITLE": "title",
        "STOCK": "stock",
        "DATACATEGORY": "dataCategory"
      }
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Move the CSV file into the &lt;STRONG&gt;db/src/static/csv&lt;/STRONG&gt; folder as well. Don't forget to set the dataCategory to "S".&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;ID,title,stock,dataCategory
1,Wuthering Heights,100,S
2,Jane Eyre,500,S&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4.&amp;nbsp;After the initial deployment, users update some of the records and insert one new entry, resulting in the following state (as shown in the result of a GET request):&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "@odata.context": "$metadata#Books",
  "value": [
    { "ID": 1, "dataCategory": "S", "stock": 100, "title": "Updated" },
    { "ID": 2, "dataCategory": "S", "stock": 500, "title": "Jane Eyre" },
    { "ID": 3, "dataCategory": "U", "stock": 10, "title": "New Book" }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5.&amp;nbsp;When schema changes or updates to the initial data are applied, records with dataCategory = "S" are overwritten, while records with dataCategory = "U" remain untouched. For example, after adding a new column newField:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;{
  "@odata.context": "$metadata#Books",
  "value": [
    { "ID": 1, "dataCategory": "S", "newField": null, "stock": 100, "title": "Wuthering Heights" },
    { "ID": 2, "dataCategory": "S", "newField": null, "stock": 500, "title": "Jane Eyre" },
    { "ID": 3, "dataCategory": "U", "newField": null, "stock": 10, "title": "New Book" }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-777490580"&gt;Case 2: Accidentally Mixed Data&lt;/H2&gt;&lt;P&gt;In some cases, custom data and pre-delivered data (from a CSV file) may accidentally end up in the same table governed by an HDI Table Data artifact (.hdbtabledata) without filter conditions to separate them.&amp;nbsp;&lt;/P&gt;&lt;P&gt;SAP Note &lt;A href="https://me.sap.com/notes/2922271/E" target="_self" rel="noopener noreferrer"&gt;2922271&lt;/A&gt; outlines how to handle this situation. Below, I’ll walk you through the steps.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;: The procedure described here applies to single-tenant applications. For multitenant scenarios, please refer to the &lt;A href="https://cap.cloud.sap/docs/get-started/troubleshooting#hana-csv" target="_self" rel="nofollow noopener noreferrer"&gt;documentation&lt;/A&gt;, as well as&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1517445"&gt;@Sekar_Somasundaram&lt;/a&gt;'s&amp;nbsp;&lt;/EM&gt;&amp;nbsp;detailed &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/handling-csv-data-deployment-in-cap-hdi-without-data-loss/ba-p/14118322" target="_self"&gt;blog post&lt;/A&gt;.&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-710059794"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-513546289"&gt;Steps at a Glance&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Delete the CSV file.&lt;/LI&gt;&lt;LI&gt;Make the &lt;STRONG&gt;.hdbtabledata&lt;/STRONG&gt; artifact subject to undeploy.&lt;/LI&gt;&lt;LI&gt;Ensure that existing data is preserved during undeploy.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-317032784"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-120519279"&gt;Current State of the Data&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The CSV file initially contains the following data:&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;ID,title,stock
1,Wuthering Heights,100
2,Jane Eyre,500&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;After the initial deployment, users update some of the records and insert one new entry, resulting in the following state:&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "@odata.context": "$metadata#Books",
  "value": [
    { "ID": 1, "stock": 100, "title": "Updated" },
    { "ID": 2, "stock": 500, "title": "Jane Eyre" },
    { "ID": 3, "stock": 10, "title": "New Book" }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--151225595"&gt;Step-by-Step: Deleting the CSV File After Initial Deployment&lt;/H3&gt;&lt;P&gt;1. Delete the CSV file.&lt;/P&gt;&lt;P&gt;2. Add "&lt;EM&gt;src/gen/**/*.hdbtabledata&lt;/EM&gt;" to &lt;STRONG&gt;db/undeploy.json &lt;/STRONG&gt;as shown below:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;[
  "src/gen/**/*.hdbview",
  "src/gen/**/*.hdbindex",
  "src/gen/**/*.hdbconstraint",
  "src/gen/**/*_drafts.hdbtable",
  "src/gen/**/*.hdbcalculationview",
  "src/gen/**/*.hdbtabledata"
]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3.&amp;nbsp;Copy &lt;STRONG&gt;gen/db/package.json&lt;/STRONG&gt; to the &lt;STRONG&gt;db&lt;/STRONG&gt; folder, and add the following parameters to the start script.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt; --undeploy src/&amp;lt;mytable&amp;gt;.hdbtabledata --path-parameter src/&amp;lt;mytable&amp;gt;.hdbtabledata:skip_data_deletion=true&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;In my example, the &lt;STRONG&gt;package.json&lt;/STRONG&gt; looks as follows:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "name": "deploy",
  "dependencies": {
    "hdb": "^0",
    "@sap/hdi-deploy": "^5"
  },
  "engines": {
    "node": "&amp;gt;=18"
  },
  "scripts": {
    "start": "node node_modules/@sap/hdi-deploy/deploy.js --use-hdb --parameter com.sap.hana.di.table/try_fast_table_migration=true --undeploy src/gen/data/my.bookshop-Books.hdbtabledata --path-parameter src/gen/data/my.bookshop-Books.hdbtabledata:skip_data_deletion=true"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4.&amp;nbsp;&lt;SPAN&gt;Deploy the project. In the db-deployer log, you will see a message indicating that the existing data was not deleted.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;[APP/TASK/deploy/0] OUT The "skip_data_deletion" make parameter is set; no data will be deleted from the target table "MY_BOOKSHOP_BOOKS"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;As a result, the updated user data remains intact.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "@odata.context": "$metadata#Books",
  "value": [
    { "ID": 1, "stock": 100, "title": "Updated" },
    { "ID": 2, "stock": 500, "title": "Jane Eyre" },
    { "ID": 3, "stock": 10, "title": "New Book" }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5.&amp;nbsp;Before the next deployment, delete the &lt;STRONG&gt;db/package.json&lt;/STRONG&gt; file to restore the original state. From this point on, even if the schema changes, the data will no longer be overridden.&lt;/P&gt;&lt;H2 id="toc-hId--54336093"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--250849598"&gt;Other Ways to Register Data&lt;/H2&gt;&lt;P&gt;Besides using CSV files during deployment, you can load data through the following approaches as well:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Insert data via HTTP requests&lt;/STRONG&gt;: Insert data after deployment using HTTP requests.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Upload CSV files through the Database Explorer&lt;/STRONG&gt;: Upload CSV files directly from the Database Explorer.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For local testing&lt;/STRONG&gt;: Place CSV files in the &lt;STRONG&gt;test/data&lt;/STRONG&gt; folder instead of &lt;STRONG&gt;db/data&lt;/STRONG&gt; (see: &lt;A href="https://cap.cloud.sap/docs/guides/databases#location-of-csv-files" target="_self" rel="nofollow noopener noreferrer"&gt;Location of CSV Files | capire&lt;/A&gt;).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;* For CAP Java, configuration in application.yaml is required for loading CSV files from the &lt;STRONG&gt;test/data&lt;/STRONG&gt; folder. Please find my Q&amp;amp;A below:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-q-a/cap-java-csv-data-in-the-test-data-folder-not-loaded-duirng-local-testing/qaa-p/14227290#M4927381" target="_blank"&gt;https://community.sap.com/t5/technology-q-a/cap-java-csv-data-in-the-test-data-folder-not-loaded-duirng-local-testing/qaa-p/14227290#M4927381&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--447363103"&gt;Closing&lt;/H2&gt;&lt;P&gt;A clear strategy on how to provide initial data must be defined upfront.&amp;nbsp;CSV files are convenient but must be used with caution, particularly in productive environments. Applying best practices such as separating system and user data, leveraging .hdbtabledata filters, or considering alternative loading options will help maintain data integrity and protect user input across deployments.&lt;/P&gt;&lt;H2 id="toc-hId--643876608"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--840390113"&gt;References&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://cap.cloud.sap/docs/guides/databases-hana#csv-data-gets-overridden" target="_self" rel="nofollow noopener noreferrer"&gt;CSV Data Gets Overridden (capire)&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://cap.cloud.sap/docs/get-started/troubleshooting#hana-csv" target="_self" rel="nofollow noopener noreferrer"&gt;I removed sample data (.csv file) from my project. Still, the data is deployed and overwrites existing data. (capire)&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172"/>
    <published>2025-09-15T22:17:28.888000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/learner-stories/upskilling-with-sap-alex-s-journey-into-the-sap-cloud-application/ba-p/14221585</id>
    <title>Upskilling with SAP: Alex's Journey into the SAP Cloud Application Programming Model</title>
    <updated>2025-09-18T17:08:18.646000+02:00</updated>
    <author>
      <name>Margit_Wagner</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/491</uri>
    </author>
    <content>&lt;P&gt;&lt;A href="https://community.sap.com/source-Ids-list" target="1_6jxa615j" rel="nofollow noopener noreferrer"&gt;&amp;nbsp;&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/learner-stories/upskilling-with-sap-alex-s-journey-into-the-sap-cloud-application/ba-p/14221585"/>
    <published>2025-09-18T17:08:18.646000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-september-18th-2025/ba-p/14221662</id>
    <title>SAP Developer News September 18th, 2025</title>
    <updated>2025-09-18T21:10:00.086000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1889949955"&gt;&lt;STRONG&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FT0veFdcM280%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DT0veFdcM280&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FT0veFdcM280%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="CSV Data Loss Fix in CAP, Devtoberfest, UI5con, Subscribers, CAP ESLint plugin | SAP Developer News" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-1693436450"&gt;&lt;STRONG&gt;DESCRIPTION&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;PODCAST: &lt;A href="https://podcast.opensap.info/sap-developers/2025/09/18/sap-developer-news-september-18th-2025/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://podcast.opensap.info/sap-developers/2025/09/18/sap-developer-news-september-18th-2025/&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Avoiding Data Loss When Loading Initial Data with CSV Files in CAP&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Blog post &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Developers YouTube Approaching 50k Subscribers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Subscribe to the SAP Developers YouTube: &lt;/SPAN&gt;&lt;A href="https://www.youtube.com/@sapdevs?sub_confirmation=1" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.youtube.com/@sapdevs?sub_confirmation=1&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Devtoberfest 2025&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest 2025: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-welcome/ba-p/14182817" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-welcome/ba-p/14182817&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest Calendar: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest/eb-p/devtoberfest-events?calendar=true" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest/eb-p/devtoberfest-events?calendar=true&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest Gameboard: &lt;/SPAN&gt;&lt;A href="https://devrel-tools-prod-scn-badges-srv.cfapps.eu10.hana.ondemand.com/devtoberfestContest/scnId.Here" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://devrel-tools-prod-scn-badges-srv.cfapps.eu10.hana.ondemand.com/devtoberfestContest/scnId.Here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest Playlist: &lt;/SPAN&gt;&lt;A href="https://www.youtube.com/playlist?list=PL6RpkC85SLQA4Lb9qdevEkcqoCJH2bXek" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.youtube.com/playlist?list=PL6RpkC85SLQA4Lb9qdevEkcqoCJH2bXek&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;UI5con Bengaluru 2025&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Announcement Post: &lt;/SPAN&gt;&lt;A href="https://www.linkedin.com/posts/openui5_ui5con2025bengaluru-developerconference-sapdevelopers-activity-7373981566852579328-lTDS" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.linkedin.com/posts/openui5_ui5con2025bengaluru-developerconference-sapdevelopers-activity-7373981566852579328-lTDS&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introducing eslint-plugin-better-cap-config an ESLint plugin to improve CAP configuration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Post: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-eslint-plugin-better-cap-config-an-eslint-plugin-to-improve-cap/ba-p/14209616" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-eslint-plugin-better-cap-config-an-eslint-plugin-to-improve-cap/ba-p/14209616&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;NPM Package: &lt;/SPAN&gt;&lt;A href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.npmjs.com/package/eslint-plugin-better-cap-config&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;GitHub Repo: &lt;/SPAN&gt;&lt;A href="https://github.com/mauriciolauffer/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://github.com/mauriciolauffer/eslint-plugin-better-cap-config&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1496922945"&gt;&lt;STRONG&gt;CHAPTER TITLES&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;0:00 Intro&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:10 Avoiding Data Loss When Loading Initial Data with CSV Files in CAP&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:58 50k Subscribers&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1:58 Devtoberfest&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;3:52 UI5con Bengaluru 2025&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;4:20 eslint-plugin-better-cap-config&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1300409440"&gt;&lt;STRONG&gt;TRANSCRIPTION&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Intro]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;This is the SAP Developer News for September 18th, 2025. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[DJ]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;When creating solutions with CAP and following the recommended local first development philosophy, you'll know about the immense utility of initial and sample data loading via CSV files. Some of you also may know about the things to look out for when subsequently deploying data to SAP HANA Cloud. If you don't, well, even if you do, it's definitely worth reading this blog post published recently by SAP champion MioYasutake. It serves as a reminder of the feature and the challenge and also walks through some alternative approaches. Link in the description. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Mamikee]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;We're so close to reaching a huge milestone here on the SAP Developers YouTube channel. 50K subscribers. Right now, we're sitting at about 49.8K, which means we just need a few hundred more of you to help us cross that line. Now, if you've been watching our tutorials, following the SAP developer news, participating in Devtoberfest , and all of our technical deep dives, now is the perfect time to hit that subscribe button. Subscribing doesn't just get you notified of our latest content, it makes you part of this growing global developer community. A community that's learning together, building together, and shaping the future of SAP development. here is the challenge, let's see if we can reach 50k before Devtoberfest . It's a celebration for developers around the world, and hitting this milestone together will make it even more special. So, don't wait. Click subscribe, turn on the notification, and help us celebrate the Big 50. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Tom]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Hey Devtoberfest is a little over a week away It is hard to believe, seems like just the other day we were starting to planning and preparations for the Devtoberfest , here it is, on top of us. we have all the fun and learning opportunities that you have come to know from previous years of Devtoberfest, plus a few new surprises this year. I had a look at the calendar of content on the community the other day, and it is chock full of educational sessions that I know I can't wait to attend myself. And it's going to have everything you need to help you get ready for TechEd this year. You know, TechEd, we're going to hear about lots of new AI innovations, changes in development capabilities, new functionality across the board in SAP BTP. and if you need to get up to speed on what some of these things are and how to get ready to learn about all the new innovations, Devtoberfest is the place to be. And don't forget, we'll be running the contest again this year. If you'd like an opportunity to perhaps win an all -expense-paid trip to next year's SAP TechEd in-person experience, then be sure to take part in the Devtoberfest contest. We'll have 10 winners from last year joining us in Berlin and we can't wait to see who the new winners are going to be joining us wherever TechEd is in the following year. So be on the lookout for everything DevToverFest. Check out the community calendar so you don't miss any of the sessions and join the DevToverFest community group so that you're registered for the contest. And don't forget to do all those validation tutorials and scavenger hunt and everything else where you can earn points for DevToverFest. So we look forward to bringing you another great DevToverfest this year. We'll see you all around the community and on those sessions on the SAP Developers YouTube channel. Hi everyone, and welcome to the SAP Developer News. Just a quick announcement. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Nico]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;After a six-year-long break, UI5Con is back in Bangalore, India. End of November, early December, there's no exact date yet. UI5Con will be back in India, so watch this space for more information. Very exciting. Hope to see you soon. Bye. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Tom]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Hi, I want to tell you about a nifty new little plugin supplied by one of our community members and fellow SAP employees. Mauricio has recently written a blog post about his available open source ESLint plugin. for the cloud application programming model. Now, this is part of, or taking advantage of an expanded effort for ESLint to focus on more languages and capabilities than just JavaScript and TypeScript. And he's using the JSON plugin that was already available and building on top of it to allow you to parse and check the configuration files specific to CAP, like the package a song but the additional functionality that he has added is checking for deprecated features and keys so if you think that would be a useful addition to your CAP development environment check out his blog post today and install and start using that plug-in.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-september-18th-2025/ba-p/14221662"/>
    <published>2025-09-18T21:10:00.086000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-application-programming-model-cap-customer-roundtable-october/ba-p/14222428</id>
    <title>SAP Cloud Application Programming Model (CAP) | Customer Roundtable | October 2025</title>
    <updated>2025-09-19T14:43:26.536000+02:00</updated>
    <author>
      <name>TheSebastian</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/142742</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760894987"&gt;Customer Roundtable&lt;/H2&gt;&lt;P&gt;It's time for a new edition of the CAP Roundtable - the first one after our highlight of the year - &lt;A href="https://recap-conf.dev/" target="_blank" rel="noopener nofollow noreferrer"&gt;re&amp;gt;≡CAP 2025&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;As always we will go for a mix of recent announcements, demo, presentations as well as topics and questions raised by the CAP community.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Do you have CAP related insights, requirements, issues, challenges, topics… that you would like to share and discuss in the upcoming meeting?&lt;FONT color="#3366FF"&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;If yes, please reach-out to us so that we can add it to the agenda.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="CAP_Roundtable.png" style="width: 734px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/261956i19B673F3858FB90E/image-size/large?v=v2&amp;amp;px=999" role="button" title="CAP_Roundtable.png" alt="CAP_Roundtable.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1564381482"&gt;&lt;STRONG&gt;&amp;nbsp;Agenda&lt;/STRONG&gt;&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;re&amp;gt;≡CAP 2025 recordings&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Kyma&lt;/STRONG&gt;&amp;nbsp;runtime usage - request for short interviews (complaints, feedback, requirements)&lt;/LI&gt;&lt;LI&gt;CAP sessions at Devtoberfest &amp;amp; TechEd&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Updates from CAP Team&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;CAP/JS MCP Servers &lt;EM&gt;(David Kunz, Sebastian van Syckel)&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;Status Transition Flows with History &lt;EM&gt;(Simon Engel)&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;What's New in CAP Tools &lt;EM&gt;(Christian Georgi)&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;New Capire Samples&lt;EM&gt; (Daniel Hutzel)&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Q&amp;amp;A / Topics by the Community&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1367867977"&gt;&lt;FONT size="5"&gt;Meeting Information&lt;/FONT&gt;&lt;/H2&gt;&lt;P data-unlink="true"&gt;&lt;STRONG&gt;When:&amp;nbsp;&lt;/STRONG&gt;Wednesday,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;October 15th&lt;/STRONG&gt;, 2025, 11 AM EST | 5 PM CE(S)T&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Where:&amp;nbsp;&lt;A href="https://teams.microsoft.com/l/meetup-join/19%3ameeting_ZWY3NmFiYTYtZjU1NC00MzIyLWE4ZDItZjY1NDJlZDA0ZTE1%40thread.v2/0?context=%7b%22Tid%22%3a%2242f7676c-f455-423c-82f6-dc2d99791af7%22%2c%22Oid%22%3a%223d4d6882-45a1-41ce-9418-35a35744348f%22%7d" target="_blank" rel="nofollow noopener noreferrer"&gt;Teams Meeting&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Meeting Request Download&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;A href="https://cap.cloud.sap/resources/events/CAP_Customer_Roundtable_October_2025.ics" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;link&lt;/STRONG&gt;&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Who: &amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;All interested&amp;nbsp;&lt;STRONG&gt;partners and stakeholders&lt;/STRONG&gt;&amp;nbsp;are invited to join: developers, enterprise architects, technical consultants…&lt;/LI&gt;&lt;LI&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP Cloud Application Programming Model&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;team&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Anyone interested&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in learning about the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP Cloud Application Programming Model&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and exchange your ideas and feedback with other users and the product team&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;Looking forward to seeing you there!&lt;BR /&gt;Check also out the new&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/resources/events" target="_blank" rel="nofollow noopener noreferrer"&gt;Events&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;page in our&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/" target="_blank" rel="nofollow noopener noreferrer"&gt;documentation&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and our&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/topics/cloud-application-programming" target="_blank"&gt;Community page&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for updates on upcoming events.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-application-programming-model-cap-customer-roundtable-october/ba-p/14222428"/>
    <published>2025-09-19T14:43:26.536000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/building-a-cap-service-with-cds-mcp-and-cline-hands-on-super-basic-guide/ba-p/14223349</id>
    <title>Building a CAP service with cds‑mcp and Cline — HANDS‑ON SUPER BASIC GUIDE [ with screenshots ] 🍌</title>
    <updated>2025-09-21T22:27:22.791000+02:00</updated>
    <author>
      <name>smarchesini</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/125739</uri>
    </author>
    <content>&lt;P&gt;&lt;BR /&gt;Everything you’re about to read started with this brilliant SAP blog: &lt;A target="_new" rel="noopener"&gt;Boost your CAP development with AI: Introducing the MCP Server for CAP&lt;/A&gt;. Think of it as the seed that grew into my little CAP + Cline + banana adventure. &lt;span class="lia-unicode-emoji" title=":banana:"&gt;🍌&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1890006599"&gt;What you’ll get&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;A friendly walkthrough to spin up a CAP service in VS Code&lt;/LI&gt;&lt;LI&gt;How to wire it to S/4HANA via a BTP Destination for local tests&lt;/LI&gt;&lt;LI&gt;A few real‑world bumps on Windows PATH and global installs&lt;/LI&gt;&lt;LI&gt;A silly “banana mode” at the end to prove handlers actually run &lt;span class="lia-unicode-emoji" title=":banana:"&gt;🍌&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1693493094"&gt;Prereqs (aka “don’t skip me”)&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;VS Code on Windows&lt;/LI&gt;&lt;LI&gt;Node.js installed and on PATH&lt;/LI&gt;&lt;LI&gt;SAP BTP subaccount with a Destination, e.g. DEVTOBERFEST_DEST to you S4H public cloud [follow my &lt;A href="https://www.youtube.com/watch?v=7m22NubgqME" target="_blank" rel="noopener nofollow noreferrer"&gt;Devtoberfest session&lt;/A&gt; for this]&lt;/LI&gt;&lt;LI&gt;Optional: Postman for poking endpoints&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1496979589"&gt;Step 1 — Tools on deck&lt;/H3&gt;&lt;P&gt;If you try to run &lt;FONT face="terminal,monaco"&gt;cds init&lt;/FONT&gt; and it's not working, follow the next steps.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_0-1758470144854.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317439i6AAD273BE7F7C538/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_0-1758470144854.png" alt="smarchesini_0-1758470144854.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;H4 id="toc-hId-1429548803"&gt;CAP dev kit&lt;/H4&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;PRE&gt;npm add -g @sap/cds-dk&lt;/PRE&gt;&lt;P&gt;If global installs act shy on Windows, add this to PATH then restart VS Code:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;C:\Users\&amp;lt;YourUser&amp;gt;\AppData\Roaming\npm&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1496979589" id="toc-hId-1103952579"&gt;Step 2 —&amp;nbsp;Cline + CAP MCP server&lt;/H3&gt;&lt;P&gt;There are a bunch of AI coding assistants out there — GitHub Copilot, Codeium, Cursor, Tabnine — so why bother with Cline and not Copilot or the others?&lt;/P&gt;&lt;P&gt;Copilot is amazing for inline coding, Cline felt like the right fit for &lt;STRONG&gt;building and testing a whole CAP service with AI in the loop&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_1-1758470196350.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317440i122E48B40A2D78EE/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_1-1758470196350.png" alt="smarchesini_1-1758470196350.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Install &lt;A href="https://marketplace.visualstudio.com/items?itemName=saoudrizwan.claude-dev&amp;amp;utm_source=website&amp;amp;utm_medium=header" target="_self" rel="nofollow noopener noreferrer"&gt;Cline from the VS Marketplace&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_2-1758470223336.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317441i8DDE7C3CA5025BDB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_2-1758470223336.png" alt="smarchesini_2-1758470223336.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_3-1758470245401.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317442i225C41439CDD285C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_3-1758470245401.png" alt="smarchesini_3-1758470245401.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Add the CAP MCP server:&lt;/LI&gt;&lt;/UL&gt;&lt;PRE&gt;npm i -g @cap-js/mcp-server&lt;/PRE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_4-1758470286552.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317443i48A3A864296E08DB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_4-1758470286552.png" alt="smarchesini_4-1758470286552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;VS Code settings (snip):&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_5-1758470320117.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317444i3ABD349E25BB21DC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_5-1758470320117.png" alt="smarchesini_5-1758470320117.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Add the MCP Server configuration to your Cline:&lt;/P&gt;&lt;PRE&gt;{
  "mcpServers": {
    "cds-mcp": { "command": "cds-mcp", "args": [], "env": {} }
  }
}&lt;/PRE&gt;&lt;P&gt;Heads‑up: &lt;A href="http://Agents.md" target="_blank" rel="noopener nofollow noreferrer"&gt;Agents.md&lt;/A&gt; wasn’t supported by Cline when I tried it; check again later.&lt;/P&gt;&lt;P&gt;Bonus guardrails, I told Cline:&lt;/P&gt;&lt;PRE&gt;- Always use cds‑mcp to look up CDS definitions before reading *.cds files.
- Always check CAP docs via cds‑mcp before proposing changes.&lt;BR /&gt;&lt;BR /&gt;&lt;/PRE&gt;&lt;P&gt;If you check on the bottom, you can find the model version:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_6-1758470378191.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317445i8DDBB09D395D061D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_6-1758470378191.png" alt="smarchesini_6-1758470378191.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Cline model picks I tried:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;anthropic/claude-sonnet-4&lt;/STRONG&gt; — great for agentic coding, supports images/browser/prompt caching.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;openai/gpt-5&lt;/STRONG&gt; — state-of-the-art for long tasks, supports images/browser, no caching.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;x-ai/grok-code-fast-1&lt;/STRONG&gt; — free (handy after I burned credits), supports prompt caching but no images/browser.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;You can see the differences between all the models, but Grok is free. After using my 10 free prompts, I switched to Grok on my daily to continue working (but not for this blog)&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-907439074"&gt;Step 3 — New CAP project&lt;/H3&gt;&lt;PRE&gt;cds init&lt;/PRE&gt;&lt;P&gt;The cds init command scaffolds a &lt;STRONG&gt;new CAP project&lt;/STRONG&gt;.&lt;BR /&gt;It creates the basic folder structure (app/, db/, srv/), adds a package.json, and sets up config files so you don’t start from scratch.&lt;/P&gt;&lt;P&gt;In short: it’s the “hello world” starter for CAP — without it, you’d have to wire everything by hand.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-710925569"&gt;Step 4 — Bring in Business Partner and scaffold&lt;/H3&gt;&lt;P&gt;After importing the EDMX file [&lt;A href="https://www.youtube.com/watch?v=7m22NubgqME" target="_blank" rel="noopener nofollow noreferrer"&gt;check my video on the Devtoberfest&lt;/A&gt;], let's try a prompt. We want to apply this prompt to Cline:&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;Extend API_BUSINESS_PARTNER.&lt;/P&gt;&lt;P&gt;Create service.cds and service.js.&lt;/P&gt;&lt;P&gt;Expose only BusinessPartner with READ and CREATE. If the name contains “banana”, throw an error.&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;Result: service.cds and service.js created. MCP caching made later calls cheaper. Nice.&lt;/P&gt;&lt;P&gt;For this blog, I bought 2$ of credit just for testing (I already used all the free ones). Let’s see how much it will be used.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_7-1758470566557.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317446i00551918E0DD1099/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_7-1758470566557.png" alt="smarchesini_7-1758470566557.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_10-1758470706094.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317447i4054FE74939CA97E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_10-1758470706094.png" alt="smarchesini_10-1758470706094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The creation seems to be working fine, and we used 82.6k credits, which is close to $1. Let’s continue the process and create the service.cds by clicking save.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_11-1758470747820.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317448iECA65DC6A46DDEF9/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_11-1758470747820.png" alt="smarchesini_11-1758470747820.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The service.js file was created correctly. We also used fewer tokens because we cached the query before sending it to the MCP server.&lt;/P&gt;&lt;P&gt;The file also seems fine. I would not expect anything else after this, but Cline is asking me that :&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;Now let me check if there's a package.json file to understand the project setup and then test the implementation. and it want to read the package.json file.&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;I want to be more specific in this case. I have a destination defined in my btp with already access to my S4HC and exposed the business partner scenario. I would like to test locally by using this destination and my new project. Let’s then correct and add new information with my prompt.&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;I would like you check the package.json and prepare the project for deploy and test locally. I have a BTP destination ready and connected with name DEVTOBERFEST_DEST&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&lt;!--            notionvc: 257f8e46-37f8-4be9-9869-3ef56c969725            --&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_13-1758470799460.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317449i1916BE772E09803E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_13-1758470799460.png" alt="smarchesini_13-1758470799460.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_14-1758470809477.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317450i53FC37C7C229A9B1/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_14-1758470809477.png" alt="smarchesini_14-1758470809477.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As a money saver, I get a little annoyed paying 3 cents to ask me to run npm install, even though I know I need to do it always.&lt;BR /&gt;It’s fine for testing and learning purposes lol.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_16-1758470928344.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317451i0A629453D9983810/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_16-1758470928344.png" alt="smarchesini_16-1758470928344.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;And another 6 cents to check and suggested me npm start. But let’s imagine we are new in this CAP world and we follow blindly Cline and the MCP.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_17-1758470944331.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317452iF27933E158A017B1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_17-1758470944331.png" alt="smarchesini_17-1758470944331.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-514412064"&gt;Step 5 — Prep for local testing with a Destination&lt;/H3&gt;&lt;P&gt;Have a BTP Destination named DEVTOBERFEST_DEST that points to the S/4HANA Business Partner API.&lt;/P&gt;&lt;P&gt;After this point, I decided to add my MTA file and the destination configuration (to connect to the system) by myself. Without using any AI tool&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;PRE&gt;cds add mta;&lt;BR /&gt;cds add xsuaa,destination,connectivity;&lt;/PRE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_18-1758471011289.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317453i2AF3B57634F0AB09/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_18-1758471011289.png" alt="smarchesini_18-1758471011289.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-317898559"&gt;Step 6 — Build, deploy, and test&lt;/H3&gt;&lt;P&gt;&lt;BR /&gt;Install all the package dependencies with&lt;/P&gt;&lt;PRE&gt;npm i&lt;/PRE&gt;&lt;P&gt;I decided to build and deploy by using Cline.&lt;BR /&gt;Something I notice differently in my usual process is the new terminal type Cline on the right.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_19-1758471059158.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317454i919195B196F92B68/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_19-1758471059158.png" alt="smarchesini_19-1758471059158.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Everything went fine, and from my postman, I can see the call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_21-1758471103480.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317455iAA360E10F188205F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_21-1758471103480.png" alt="smarchesini_21-1758471103480.png" /&gt;&lt;/span&gt;&lt;BR /&gt;This one was the first significant milestone. I think the most challenging part was to make VSCode (for me, who I am a Business Application Code user). Let's try something more fun.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-121385054"&gt;Step 7 — Banana mode (purely for fun)&lt;/H3&gt;&lt;P&gt;I asked (Because why not?):&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;When filtering by BusinessPartnerFullName for "Sebastiano Marchesini", make every field say "banana".&amp;nbsp;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_22-1758471312259.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317459i0668E427066942CA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_22-1758471312259.png" alt="smarchesini_22-1758471312259.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This request took the MCP multiple steps and ended with $0.89 in expenses.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_23-1758471366190.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317461i22F8239C314448F0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_23-1758471366190.png" alt="smarchesini_23-1758471366190.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Not bad for banana mode, but it didn’t fully understand my request. The code set everything to ‘banana’ whenever it found one in the result.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_24-1758471404885.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317463i8E4CA6D95AE0F4D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_24-1758471404885.png" alt="smarchesini_24-1758471404885.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This still teaches a big truth about our development: we cannot leave everything to the AI, but we need to take care of our code and pay attention to what we produce.&amp;nbsp;&lt;BR /&gt;Now....&lt;BR /&gt;Send to prod? Absolutely not. Demo at parties? Maybe.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-143043187"&gt;Token Cost Breakdown &lt;span class="lia-unicode-emoji" title=":money_bag:"&gt;💰&lt;/span&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Current Usage:&lt;/STRONG&gt; ?? / 256K tokens I used in 3 sessions to prepare this blog.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Estimated Cost:&lt;/STRONG&gt; $2.45 USD&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Per 1K tokens:&lt;/STRONG&gt; $0.004 - $0.011&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--346873325"&gt;Quick fixes when things go sideways&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Global CLI not found → fix PATH and restart VS Code&lt;/LI&gt;&lt;LI&gt;npm start explodes → run npm i in the project root&lt;/LI&gt;&lt;LI&gt;Destination calls fail → ensure destination + connectivity are added and bound in BTP&lt;/LI&gt;&lt;LI&gt;401/403 after deploy → check xsuaa&amp;nbsp; and use the client id and secret only from Postman&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--543386830"&gt;Copy‑paste corner&lt;/H3&gt;&lt;PRE&gt;# Global tools
npm add -g @sap/cds-dk
npm i -g @cap-js/mcp-server

# Project
cds init
# import EDMX as needed

# BTP integration
cds add mta
cds add xsuaa,destination,connectivity
npm i

# Local run
npm start
# or
cds watch

# Build &amp;amp; deploy
npm run build
npm run deploy&lt;/PRE&gt;&lt;H2 id="toc-hId--446497328"&gt;Final questions and next steps&lt;/H2&gt;&lt;H6 id="toc-hId--1816622861"&gt;Did you try with other tools? How did you feel?&amp;nbsp; &lt;span class="lia-unicode-emoji" title=":eyes:"&gt;👀&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;Next blog, I want to try the integration with SAPui5 MCP and Copilot.&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":sparkler:"&gt;🎇&lt;/span&gt;&amp;nbsp;&lt;/H6&gt;&lt;P&gt;&lt;!--            notionvc: 979ccd25-475f-459c-85a9-c149ec09e7bf            --&gt;&lt;/P&gt;&lt;P&gt;&lt;!--            notionvc: 9641f12f-0fc4-4029-b2e2-6e2a4a53ead0            --&gt;&lt;/P&gt;&lt;P&gt;&lt;!--            notionvc: a39c14df-2664-454e-8914-64da4ae0aa23            --&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/building-a-cap-service-with-cds-mcp-and-cline-hands-on-super-basic-guide/ba-p/14223349"/>
    <published>2025-09-21T22:27:22.791000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/from-rest-to-datasphere-a-cap-based-integration-approach/ba-p/14218922</id>
    <title>From REST to Datasphere: A CAP-based Integration Approach</title>
    <updated>2025-09-30T08:30:00.053000+02:00</updated>
    <author>
      <name>christian_willi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/678327</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1631072292"&gt;From REST to Datasphere: A CAP-based Integration Approach&lt;/H1&gt;&lt;P&gt;We recently wrote a blog about how we integrate data from a REST service into SAP Datasphere. For that we deployed a small service on SAP BTP, which used the OPEN SQL schema and FastAPI to write this data directly into Datasphere. That service could also be triggered via REST endpoint from SAP Datasphere directly (&lt;A href="https://www.zpartner.eu/streamlining-rest-api-integrations-in-sap-datasphere-with-task-chains-and-fastapi-microservices-on-sap-btp/" target="_blank" rel="nofollow noopener noreferrer"&gt;ZPARTNER Link&lt;/A&gt;, &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/streamlining-rest-api-integrations-in-sap-datasphere-with-task-chains-and/ba-p/14169273" target="_blank"&gt;SAP Community Link)&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;In this blog we now choose a different setup to retrieve data and consume it into SAP Dataphere.&lt;/P&gt;&lt;P&gt;We Created a CAP Application on SAP BTP.&lt;/P&gt;&lt;P&gt;This CAP service connects to the SCIM API of SAP Datasphere, extracts users and roles, and makes the data consumable for analytics. It uses the following BTP services:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;HDI Container&lt;/STRONG&gt;&lt;BR /&gt;To persist our data from the REST calls. The HDI container is deployed to the HANA Cloud instance of our Datasphere tenant, so the data can be consumed directly.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BTP Credential Store&lt;/STRONG&gt;&lt;BR /&gt;We store the credentials for the SCIM API in the BTP Credential Store and retrieve them in our CAP application securely.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;XSUAA Authorization and Trust Management&lt;/STRONG&gt;&lt;BR /&gt;To secure our REST endpoints and enforce token-based access control.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Foundry Space&lt;/STRONG&gt;&lt;BR /&gt;Provides the runtime environment for deploying the CAP application.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_0-1758034031474.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315296i7682A0680123DAA5/image-size/large?v=v2&amp;amp;px=999" role="button" title="christian_willi_0-1758034031474.png" alt="christian_willi_0-1758034031474.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1434558787"&gt;Use Case&lt;/H1&gt;&lt;P&gt;In our use case, we extract user information from SAP Datasphere’s own SCIM API.&lt;/P&gt;&lt;P&gt;We retrieve:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;the list of users,&lt;/LI&gt;&lt;LI&gt;all available roles, and&lt;/LI&gt;&lt;LI&gt;the assignments between users and roles.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This can be helpful for reporting on the number of users in a tenant and their corresponding roles. However, the same setup can be reused to extract and process any other REST API data into SAP Datasphere.&lt;/P&gt;&lt;H1 id="toc-hId-1238045282"&gt;Credential Store&lt;/H1&gt;&lt;P&gt;We create a dedicated namespace in the Credential Store and store four secrets for the SCIM API authentication flow:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;dsp-scim-token-url&lt;/LI&gt;&lt;LI&gt;dsp-scim-base-url&lt;/LI&gt;&lt;LI&gt;dsp-scim-client-id&lt;/LI&gt;&lt;LI&gt;dsp-scim-client-secret&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The CAP application retrieves these secrets at runtime, ensuring no credentials are hardcoded.&lt;/P&gt;&lt;H1 id="toc-hId-1041531777"&gt;XSUAA Authorization and Trust Management Service&lt;/H1&gt;&lt;P&gt;We create a dedicated xsuaa service to get a Token URL and credentials. This service is bound to our CAP application so that every incoming request is authorized and protected.&lt;/P&gt;&lt;H1 id="toc-hId-845018272"&gt;HDI Container&lt;/H1&gt;&lt;P&gt;We create an HDI container where the database artifacts (tables and associations) are deployed. This container is provisioned in our SAP Datasphere tenant, making the synchronized data directly available for consumption.&lt;/P&gt;&lt;H1 id="toc-hId-648504767"&gt;CAP Application&lt;/H1&gt;&lt;P&gt;The heart of the solution is the CAP service DSPUsers.&lt;/P&gt;&lt;P&gt;It exposes two kinds of endpoints:&lt;/P&gt;&lt;H2 id="toc-hId-581073981"&gt;Virtual Views (live from SCIM)&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;GET /data/UsersVH → List of users with profile info.&lt;/LI&gt;&lt;LI&gt;GET /data/RolesVH → Roles with aggregated user counts.&lt;/LI&gt;&lt;LI&gt;GET /data/UserRolesVH → Which users have which roles.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These views are always fresh, since they query SCIM directly.&lt;/P&gt;&lt;H2 id="toc-hId-384560476"&gt;Persistent Entities (stored in HDI)&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;GET /data/Users → Users persisted in HANA.&lt;/LI&gt;&lt;LI&gt;GET /data/Roles → Roles persisted in HANA.&lt;/LI&gt;&lt;LI&gt;GET /data/UserRoles → User-to-role assignments persisted in HANA.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-188046971"&gt;Actions (to sync SCIM → HDI)&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;POST /data/SyncUsersVHToUsers → Upserts SCIM users into the Users table.&lt;/LI&gt;&lt;LI&gt;POST /data/SyncRolesFromSCIM → Stores aggregated roles in the Roles table.&lt;/LI&gt;&lt;LI&gt;POST /data/SyncUserRolesFromSCIM → Refreshes both Roles and UserRoles.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This design lets you both query SCIM data live and persist snapshots into HANA for modeling in Datasphere.&lt;/P&gt;&lt;P&gt;The complete CAP service code is available here: &lt;A href="https://github.com/zpartner/cap-scim-handler-dsp" target="_blank" rel="nofollow noopener noreferrer"&gt;Link to GitHub Repository&lt;/A&gt;.&lt;/P&gt;&lt;H1 id="toc-hId--137549253"&gt;SAP Datasphere&lt;/H1&gt;&lt;P&gt;Once deployed, the HDI container is automatically integrated with our SAP Datasphere tenant. This allows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Consuming the Users, Roles, and UserRoles tables directly in Datasphere,&lt;/LI&gt;&lt;LI&gt;Building reporting scenarios on top of user and role data,&lt;/LI&gt;&lt;LI&gt;Joining with other business data to enrich analytics.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;To consume the entities, we need to add the HDI Container to a specific space. Also, we can now create a generic HTTP Connection. This enables to call the Endpoints for sync in a Task Chain.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_1-1758034059841.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315297i9C02A86C7A1B379C/image-size/large?v=v2&amp;amp;px=999" role="button" title="christian_willi_1-1758034059841.png" alt="christian_willi_1-1758034059841.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-435677325"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;The integration of a CAP-based service into SAP Datasphere showcases how SAP BTP services (HDI Container, Credential Store, XSUAA, Cloud Foundry) can be combined to securely retrieve and persist data from external REST APIs. By consuming SAP Datasphere’s own SCIM API, we demonstrated how to expose both live views for real-time insights and persistent tables for analytical modeling, all within a lightweight and extensible architecture.&lt;/P&gt;&lt;P&gt;Looking ahead, this framework can be reused for any REST API integration into SAP Datasphere, opening the door to richer reporting scenarios, advanced data modeling, and seamless orchestration with Task Chains. With this foundation, organizations gain a simple but powerful pattern for bridging external services with Datasphere while maintaining enterprise-grade security and governance.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/from-rest-to-datasphere-a-cap-based-integration-approach/ba-p/14218922"/>
    <published>2025-09-30T08:30:00.053000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/tooling-sap-build-blog-posts/what-s-new-in-sap-build-q3-2025-release-highlights/ba-p/14231783</id>
    <title>What’s New in SAP Build – Q3 2025 Release Highlights</title>
    <updated>2025-09-30T16:14:25.210000+02:00</updated>
    <author>
      <name>EsmeeX</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/8621</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Zoom Webinar Banner (3) (1).png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321661i10CB0B180F5894FB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Zoom Webinar Banner (3) (1).png" alt="Zoom Webinar Banner (3) (1).png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In Q3, we delivered several innovations across AI-powered development, ABAP project creation, modernized SAPUI5&amp;nbsp;and advanced mobile capabilities. SAP Build also reached a significant milestone with the introduction of &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;MCP servers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, allowing developers to boost productivity further with AI agents.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Check these out in our Top 10 Release Highlights from Q3 2025!&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#333399"&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI-powered development&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;1. Empowering developers with MCP Tools for SAP Build&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Model Context Protocol (MCP) servers&amp;nbsp;are now available for the following technologies: SAP Cloud Application Programming Model (CAP), SAPUI5 and SAP Fiori. This is a huge step forward for developers working with popular IDEs and coding assistants like GitHub Copilot, Cursor and more. With these MCP servers,&amp;nbsp;we’re now providing a comprehensive set of tools designed to optimize your development workflow across various SAP technologies.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Learn more in the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602" target="_blank"&gt;&lt;I&gt;&lt;SPAN&gt;blog post.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;2. SAP HANA Cloud SQL Statement Generation in Joule&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Directly in SAP Build Code, the Joule panel now offers the new command &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;/hana-sql-gen,&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;which enables the generation of SQL statements from natural language directly in the panel. The generated statements can be reviewed and refined in the Joule panel. Suitable SQL statements can be either copied to a SQL console or directly executed inside the Joule panel after selecting a database connection on which to run the statement.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="hana cloud.png" style="width: 727px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321675i984EF7EF189C674B/image-dimensions/727x365/is-moderation-mode/true?v=v2" width="727" height="365" role="button" title="hana cloud.png" alt="hana cloud.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;3. Expanded AI-powered capabilities in SAP Build Work Zone&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Build Work Zone continues to expand its AI capabilities, bringing new built-in features to an intelligent workspace with accelerated decision-making and improved employee experiences:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration of Joule in SAP Build Work Zone, advanced edition: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;By bringing Joule into SAP Build Work Zone, advanced edition, users can now enjoy the power of Joule within their digital workplace. This eliminates the hassle of system-hopping, reduces time wasted on searching for information, and allows employees to focus on what is important. (Note: Available in early October)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI-powered text and comment generation: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;This enables employees to quickly create, summarize, and engage with workplace content. For example, project managers can generate project status updates in minutes, ensuring their team members stay aligned.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Learn more in the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-work-zone-gets-even-more-powerful-with-ai-powered-capabilities/ba-p/14180971" target="_blank"&gt;&lt;I&gt;&lt;SPAN&gt;blog post.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="WZ joule.jpg" style="width: 728px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321676i619CA9786FB4BA73/image-dimensions/728x384/is-moderation-mode/true?v=v2" width="728" height="384" role="button" title="WZ joule.jpg" alt="WZ joule.jpg" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/I&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#333399"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Enhanced App Development &amp;amp; Automation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;4. Availability of SAPUI5 1.136.x-legacy-free with deprecated code removed&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAPUI5 1.136.x-legacy-free with deprecated code removed is now available via cloud access. This means app developers can test their UI code for compliance to SAPUI5 best practices. This helps to future-proof an SAP Fiori app for future SAPUI5 versions and work on deprecated/outdated code. Developers can also provide feedback to the UI5 team.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Learn more in the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/explore-sapui5-openui5-1-136-x-legacy-free/ba-p/14103271" target="_blank"&gt;&lt;I&gt;&lt;SPAN&gt;blog post.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;5. Create full-stack ABAP projects in SAP Build&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can now create full-stack ABAP projects or open an existing ABAP CSN as a project in SAP Build. You can also model your application using the CDS Graphical Modeler and generate ABAP development objects. By leveraging high productivity tools, this significantly accelerates time-to-market, improves collaboration and provides a standardized, compliant approach to building extensions.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Learn more in the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://help.sap.com/docs/bas/developing-full-stack-abap-application-in-sap-business-application-studio-40adaba361e2469493d47bf9757e87c7/developing-full-stack-abap-application-in-sap-business-application-studio?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;&lt;I&gt;&lt;SPAN&gt;Help Portal.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;I&gt;&lt;SPAN&gt;&amp;nbsp;..And stay tuned! We’ll share more about this topic at &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110615653001ATih" target="_blank" rel="noopener noreferrer"&gt;&lt;I&gt;&lt;SPAN&gt;SAP TechEd 2025.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;6. Maintenance project for released process automation projects&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For process automation, we’ve introduced the ability to create dedicated project versions based on an existing released version. This allows process owners to maintain parallel editable versions while keeping the latest version in place, enabling teams to focus on solving a problem without redoing everything from scratch.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Learn more in the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://help.sap.com/docs/build-process-automation/sap-build-process-automation/manage-business-process-projects?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;&lt;I&gt;&lt;SPAN&gt;Help Portal.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;7. Outbox functionality for tasks in SAP Task Center&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Task Center, which provides a seamless user experience for&amp;nbsp;accessing open tasks, now lets you view completed tasks in an outbox. This provides a complete view of historical data while reducing support requests and efforts around process automation instances.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#333399"&gt;&lt;STRONG&gt;&lt;SPAN&gt;New innovations for mobile&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;8. UI enhancements available for mobile development&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The latest release of SAP Mobile Development Kit (MDK) is now available to customers, bringing with it multiple enhancements for UI creation. Developers can add a date range to their calendar controls, enable a read-only state, add required fields to forms, and much more.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Learn more in the latest &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-9/ba-p/14227370" target="_blank"&gt;blog post.&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;9. Support for new site experience in SAP Build Work Zone, advanced edition&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Employees accessing their workspace content via SAP Mobile Start can now enjoy a new view mode with a more flexible structuring of content. They can quickly view workspace updates, company news or project dashboards, making it easier to organize and consume information in a personalized way. (Note: Available in early October)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mobile start document AI.png" style="width: 302px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321677iF375AB4D9A89D5E6/image-dimensions/302x302/is-moderation-mode/true?v=v2" width="302" height="302" role="button" title="mobile start document AI.png" alt="mobile start document AI.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mobile start 2.png" style="width: 369px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321678iC54A3157B190A318/image-dimensions/369x303/is-moderation-mode/true?v=v2" width="369" height="303" role="button" title="mobile start 2.png" alt="mobile start 2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;10. Updates to SAP Mobile Start&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As the native mobile entry point to all SAP business apps and content, SAP Mobile Start has released several new innovations that simplify employee tasks and optimize their user experience:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Document AI integration: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Allows users to upload documents and photos for automated processing. This streamlines document handling, cuts down manual work and ensures data accuracy throughout operations.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Enhanced push notifications with more detailed information: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Load and display context-specific details directly in the push notification, providing more meaningful and informative messages.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Simplified onboarding via deep link: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;IT teams can invite users to onboard to SAP Mobile Start via an email or message and provide a deep link that the users can use to initiate a simplified onboarding process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Top news on start screen: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Shows the most important news in a larger format on top of the Start screen.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Learn more in the latest &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-mobile-start-v2-4-sap-document-ai-integration-and-much-more-release/ba-p/14170599" target="_blank"&gt;&lt;I&gt;&lt;SPAN&gt;blog post&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;I&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://help.sap.com/docs/SAP_MOBILE_START/386859cc981742f3b6bb31f7e0d8a168?locale=en-US&amp;amp;state=PRODUCTION&amp;amp;version=2.4" target="_blank" rel="noopener noreferrer"&gt;&lt;I&gt;&lt;SPAN&gt;Help Portal&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;I&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/I&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#333399"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Ready to see these in action?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Join us for the next &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;What’s New in SAP Build Webinar&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; on October 8&lt;/SPAN&gt;&lt;SPAN&gt;th&lt;/SPAN&gt;&lt;SPAN&gt; as we dive deeper into MCP servers in CAP, SAP Mobile Start innovations, and much more!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="whats new.jpeg" style="width: 569px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321673iBA7A6B90719D2F62/image-dimensions/569x298/is-moderation-mode/true?v=v2" width="569" height="298" role="button" title="whats new.jpeg" alt="whats new.jpeg" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Sign up today for your preferred option:&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;&lt;STRONG&gt;October 8th, 9:00-10:00am CEST&lt;/STRONG&gt; (EMEA/APJ friendly):&amp;nbsp;&lt;A href="https://sap-se.zoom.us/webinar/register/3517592411496/WN_HjxF9s5sRSevFRe3kFzRDQ" target="_blank" rel="noopener nofollow noreferrer"&gt;Register here&lt;/A&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;&lt;STRONG&gt;October 8th, 5:00-6:00pm CEST&lt;/STRONG&gt; (Americas friendly):&amp;nbsp;&lt;A href="https://sap-se.zoom.us/webinar/register/2017592412254/WN_hj7isBlESOuvEKzNL6AYdg" target="_blank" rel="noopener nofollow noreferrer"&gt;Register here&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/tooling-sap-build-blog-posts/what-s-new-in-sap-build-q3-2025-release-highlights/ba-p/14231783"/>
    <published>2025-09-30T16:14:25.210000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/building-saas-products-on-sap-btp/ba-p/14231929</id>
    <title>Building SaaS Products on SAP BTP</title>
    <updated>2025-09-30T17:53:09.293000+02:00</updated>
    <author>
      <name>michal_majer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/160961</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1632710804"&gt;Building SaaS Products on SAP BTP&lt;/H1&gt;&lt;P&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt; This article was inspired by SAP's work on modern cloud development, particularly the blog "&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/how-sap-s-abap-cloud-partner-reference-app-simplifies-multi-tenant-side-by/ba-p/14223705" target="_blank"&gt;How SAP's ABAP Cloud Partner Reference App simplifies multi-tenant side-by-side extensions&lt;/A&gt;," and is intended to explore these critical architectural topics further.&lt;/P&gt;&lt;P&gt;SAP is undergoing its largest transformation in decades—moving from &lt;STRONG&gt;on-premise monoliths to cloud-native architecture&lt;/STRONG&gt;. Products like Datasphere, Analytics Cloud, and Business Data Cloud exist only in the cloud. Yet despite this fundamental shift, most software vendors still treat SAP like it’s 2010.&lt;/P&gt;&lt;P&gt;Let me explain why this gap is a massive &lt;STRONG&gt;opportunity for disruption&lt;/STRONG&gt;—and why mastering the &lt;STRONG&gt;SAP Business Technology Platform (BTP)&lt;/STRONG&gt; is much harder than the marketing suggests.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1565280018"&gt;The Architectural Divide: From Monolith to Node&lt;/H2&gt;&lt;P&gt;To understand the &lt;STRONG&gt;BTP challenge&lt;/STRONG&gt;, we must first recognize the dramatic shift in enterprise architecture.&lt;/P&gt;&lt;H3 id="toc-hId-1497849232"&gt;The Old World: SAP as the Center of Gravity&lt;/H3&gt;&lt;P&gt;For decades, &lt;STRONG&gt;SAP ECC&lt;/STRONG&gt; was the undisputed heart of enterprise data. Every system pointed inward. CRM, warehouse management, custom applications—everything fed data into one central, tightly coupled system.&lt;/P&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;External&amp;nbsp;Systems&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;⟶&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP&amp;nbsp;ECC&amp;nbsp;Monolith&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;⟶&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Single&amp;nbsp;Source&amp;nbsp;of&amp;nbsp;Truth&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;P&gt;This architecture made building SAP-integrated products deceptively straightforward:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Write &lt;STRONG&gt;ABAP code&lt;/STRONG&gt; directly inside the SAP system.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Deploy via Transport Requests.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Access everything natively (tables, function modules, full transaction control).&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;I've seen incredibly sophisticated, high-performance solutions built entirely in ABAP. But notice this: many of these established ABAP vendors are slow to build cloud-native versions on BTP. This hesitation tells you something profound about the real challenges involved.&lt;/P&gt;&lt;H3 id="toc-hId-1301335727"&gt;The New Reality: S/4HANA as Just Another Node&lt;/H3&gt;&lt;P&gt;In today's distributed architecture, &lt;STRONG&gt;S/4HANA is simply one system among many&lt;/STRONG&gt;. It sits alongside Salesforce, Workday, custom applications, and SAP’s own cloud products—all communicating through &lt;STRONG&gt;SAP BTP as the critical integration, extension, and application layer&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;This fundamental change means you can no longer rely on deep, internal access to the core. It forces a complete overhaul of how you design and build &lt;STRONG&gt;SaaS products&lt;/STRONG&gt; for the SAP ecosystem.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-975739503"&gt;The BTP Reality: Why It's Harder Than It Looks&lt;/H2&gt;&lt;P&gt;The core challenge lies in bridging the gap between the &lt;STRONG&gt;ABAP world's capabilities&lt;/STRONG&gt; and the &lt;STRONG&gt;modern cloud platform’s constraints&lt;/STRONG&gt;.&lt;/P&gt;&lt;H3 id="toc-hId-908308717"&gt;The ABAP Advantage (What You Lose)&lt;/H3&gt;&lt;P&gt;When you build directly in ABAP (on-premise), you gain:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Direct access&lt;/STRONG&gt; to all SAP objects and processes.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Standardized integration patterns (BAPIs, Function Modules).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Full &lt;STRONG&gt;transactional control&lt;/STRONG&gt; and deep customization hooks.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;30+ years of accumulated frameworks and access methods.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-711795212"&gt;The BTP Reality (What You Are Limited To)&lt;/H3&gt;&lt;P&gt;On BTP, you are limited to officially sanctioned external access methods:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;APIs (REST, OData)&lt;/STRONG&gt; – when they exist and are complete.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;RFC Calls/Web Services&lt;/STRONG&gt; – (The "legacy" or "sidecar" approach).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Custom ABAP Extensions&lt;/STRONG&gt; – (The fallback when APIs fail).&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The Technical Truth: Many older, niche, or newly migrated SAP modules do not have complete &lt;STRONG&gt;API coverage&lt;/STRONG&gt; for every critical workflow step. This is not a criticism of SAP; it's the reality of a massive platform in transition. Building true SaaS products on BTP requires mapping your entire solution against the &lt;STRONG&gt;SAP API Business Hub&lt;/STRONG&gt; before writing any code.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-386198988"&gt;The Compelling Reason to Build SaaS on BTP&lt;/H2&gt;&lt;P&gt;Despite the integration complexity, the strategic advantages of BTP are too significant for modern vendors to ignore. &lt;STRONG&gt;BTP is the enforcement mechanism for SAP's Clean Core strategy.&lt;/STRONG&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;Strategic Advantage&lt;/TD&gt;&lt;TD&gt;Why it Matters&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;1. Leverage SAP Objects Without Core Modification&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Use SAP &lt;STRONG&gt;CAP&lt;/STRONG&gt; (Cloud Application Programming Model) or &lt;STRONG&gt;RAP&lt;/STRONG&gt; (ABAP RESTful Application Programming Model) to extend key SAP objects (Business Partners, Sales Orders, Materials) with custom fields and logic. This ensures your solution aligns with the &lt;STRONG&gt;Clean Core&lt;/STRONG&gt; approach.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;2. Instant User Management and Security&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Integrate with BTP's &lt;STRONG&gt;XSUAA service&lt;/STRONG&gt;. You instantly inherit customer's users, &lt;STRONG&gt;SSO integration&lt;/STRONG&gt;, saving months of development and operational overhead on identity management.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;3. Customer-Specific Extensions via Multitenancy&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Ship one product while allowing customer-specific configurations and extensions. BTP's native &lt;STRONG&gt;multitenancy&lt;/STRONG&gt; handles the data and configuration isolation, dramatically lowering codebase maintenance costs compared to the old world of branched ABAP code.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;4. Modern Deployment and Operations&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Deploy globally without hardware investment. Scale automatically based on demand. Use modern &lt;STRONG&gt;DevOps&lt;/STRONG&gt; practices and CI/CD pipelines to update all customers simultaneously—a logistical nightmare with on-premise solutions.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-189685483"&gt;Two Strategic Approaches to BTP SaaS&lt;/H2&gt;&lt;P&gt;Your product's architecture should align with its core purpose:&lt;/P&gt;&lt;H3 id="toc-hId-122254697"&gt;Approach 1: Extend SAP Objects&lt;/H3&gt;&lt;P&gt;Your product becomes a natural, value-add extension of core SAP functionality, leveraging the data models customers already use and understand.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Best for:&lt;/STRONG&gt; Solutions that enhance existing SAP processes (advanced analytics, specialized compliance requirements, industry-specific workflows).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Technical Focus:&lt;/STRONG&gt; Heavy reliance on &lt;STRONG&gt;CAP/RAP&lt;/STRONG&gt; to extend standard entities and leverage the existing SAP transactional context.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--149490177"&gt;Approach 2: Build Independent with SAP Integration (Loosely Coupled)&lt;/H3&gt;&lt;P&gt;Create your own data model using modern frameworks (CAP/Node.js, Java) and integrate with SAP only as needed for master data and transactional exchange.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Best for:&lt;/STRONG&gt; Products that could exist standalone but gain significant value from SAP integration (planning tools, specialized industry solutions, asset management).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Technical Focus:&lt;/STRONG&gt; Strong emphasis on the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; and &lt;STRONG&gt;Event Mesh&lt;/STRONG&gt; for asynchronous, reliable communication.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--52600675"&gt;The Common Pitfalls I've Observed&lt;/H2&gt;&lt;P&gt;Architectural success on BTP is often defined by avoiding these common traps:&lt;/P&gt;&lt;H3 id="toc-hId--542517187"&gt;1. The API Gap Surprise&lt;/H3&gt;&lt;P&gt;Teams design beautiful cloud-native architecture assuming APIs exist for everything. When they discover a critical workflow is missing an API, they are forced to write custom ABAP in the S/4HANA core to create a needed OData service.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;The Lesson:&lt;/STRONG&gt; This creates a &lt;STRONG&gt;Custom ABAP Sidecar&lt;/STRONG&gt;—it defeats the purpose of the BTP-native, Clean Core approach for that use case, complicating deployment and creating system-specific dependencies. &lt;STRONG&gt;Map your integration requirements against actual API availability before committing to architecture.&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--739030692"&gt;2. The Custom Integration Trap&lt;/H3&gt;&lt;P&gt;A company builds its first SAP integration for Customer A, which takes six months. Customer B has different middleware, a different S/4HANA version, and unique customizations. Three years later, the company has five customers but five completely different integrations with no reusable product.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;The Lesson:&lt;/STRONG&gt; Design for product &lt;STRONG&gt;reusability&lt;/STRONG&gt; from day one. Use &lt;STRONG&gt;BTP as the standard integration hub&lt;/STRONG&gt; for all customers. Your product should treat the S/4HANA backend as an interchangeable service, not a monolithic dependency.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--935544197"&gt;3. The Deployment Complexity&lt;/H3&gt;&lt;P&gt;The product itself might be excellent, but if every customer implementation requires weeks of external SAP consulting to set up roles, connect services, and configure the integration, the deployment model doesn't scale economically.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;The Lesson:&lt;/STRONG&gt; Design your solution to be simple. Aim for a solution that can be deployed and configured by the customer’s existing SAP team in days, not months, using automated scripts and minimal manual steps.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--838654695"&gt;My Strategic Focus&lt;/H2&gt;&lt;P&gt;My focus is clear: to master the architecture required to build and commercialize a &lt;STRONG&gt;CAP template SaaS solution&lt;/STRONG&gt;. By leveraging the best practices of the &lt;STRONG&gt;Cloud Application Programming Model (CAP)&lt;/STRONG&gt; and designing for &lt;STRONG&gt;native multitenancy&lt;/STRONG&gt;, I aim to provide a production-ready, clean-core blueprint that accelerates the time-to-market for modern SAP solutions. This is the strategic direction for dominating the next era of the SAP ecosystem.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/building-saas-products-on-sap-btp/ba-p/14231929"/>
    <published>2025-09-30T17:53:09.293000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-cap-blog-posts/building-custom-authentication-in-sap-cap/ba-p/14232992</id>
    <title>Building Custom Authentication in SAP CAP</title>
    <updated>2025-10-01T21:25:29.143000+02:00</updated>
    <author>
      <name>michal_majer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/160961</uri>
    </author>
    <content>&lt;P&gt;This guide presenets practical example to implement custom authentication in SAP CAP (Node.js). I hav&lt;/P&gt;&lt;H2 id="toc-hId-1761823524"&gt;Project Setup&lt;/H2&gt;&lt;H3 id="toc-hId-1694392738"&gt;Configuration Entry Point&lt;/H3&gt;&lt;P&gt;The key to enabling custom authentication in CAP is the &lt;STRONG&gt;&lt;CODE&gt;auth&lt;/CODE&gt; configuration in &lt;CODE&gt;package.json&lt;/CODE&gt;&lt;/STRONG&gt;. This tells the CAP runtime to use your custom middleware handler for all incoming requests, allowing you to control the identity verification process.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "cds": {
    "requires": {
      "auth": {
        "impl": "auth/basic-auth.ts"
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1368796514"&gt;Implementation: Core Components&lt;/H2&gt;&lt;H3 id="toc-hId-1301365728"&gt;1. Security Best Practices&lt;/H3&gt;&lt;P&gt;When handling passwords, &lt;STRONG&gt;security must be the top priority&lt;/STRONG&gt;. The following code demonstrates secure handling, specifically addressing the &lt;STRONG&gt;timing attack&lt;/STRONG&gt; vector, which is often overlooked.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// auth/basic-auth.ts
import crypto from 'crypto';

const PASSWORD_PEPPER = process.env.PASSWORD_PEPPER || ""; 

// Timing-safe comparison prevents timing attacks
function secureCompare(a: string, b: string): boolean {
  // Ensure we compare strings of the same length
  if (a.length !== b.length) return false; 
  // crypto.timingSafeEqual is CRITICAL for password security
  return crypto.timingSafeEqual(Buffer.from(a, 'utf8'), Buffer.from(b, 'utf8'));
}

function hashPassword(password: string): string {
  if (!password) {
    throw new Error("Password cannot be empty");
  }
  // NOTE: SHA-256 is used here ONLY for simplicity in a Basic Auth example.
  // DO NOT use SHA-256 in production. Use bcrypt or argon2.
  return crypto
    .createHash('sha256')
    .update(password + PASSWORD_PEPPER)
    .digest('hex');
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-1233934942"&gt;Key Security Features:&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;CODE&gt;&lt;SPAN class=""&gt;crypto.timingSafeEqual()&lt;/SPAN&gt;&lt;/CODE&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;: Guarantees constant-time comparison, preventing attackers from using timing measurements to guess password characters.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Password Pepper&lt;/STRONG&gt;: An extra layer of security beyond salting.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Production Note&lt;/STRONG&gt;: In a production system, &lt;STRONG&gt;always use &lt;CODE&gt;bcrypt&lt;/CODE&gt; or &lt;CODE&gt;argon2&lt;/CODE&gt;&lt;/STRONG&gt; instead of simple hash functions.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-908338718"&gt;2. Database Schema&lt;/H3&gt;&lt;P&gt;The user schema must be designed to support both local password-based authentication (for Basic Auth) and future external OAuth integrations.&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;// db/schema.cds
entity Users {
  key ID          : UUID;
      email       : String(255) @assert.unique;
      username    : String(100) @assert.unique;
      passwordHash: String(255);
      firstName   : String(100);
      lastName    : String(100);
      provider    : String(50);   // 'local', 'google', 'oidc'
      providerId  : String(255);  // ID from external provider (for OAuth)
      isActive    : Boolean default true;
}&lt;/code&gt;&lt;/pre&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-711825213"&gt;3. Authentication Logic&lt;/H3&gt;&lt;P&gt;This core function handles credential verification against the database.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const credentialsAuthentication = async ({ 
  email, 
  password 
}: { 
  email: string, 
  password: string 
}) =&amp;gt; {
  const { Users } = cds.entities;
  try {
    // 1. Validate Input
    if (!email || !password) {
      return { success: false, message: "Email and password are required", user: null };
    }
    
    // Normalize email for consistent lookups
    const normalizedEmail = email.trim().toLowerCase();
    
    // 2. Query User
    const user = await SELECT.one
      .from(Users)
      .where({ 
         email: normalizedEmail, 
         isActive: true 
       });
       
    // 3. Security Check: Prevent User Enumeration Attack
    // Use the same error message whether the user is missing or the password is wrong.
    if (!user) {
      return { success: false, message: "Invalid credentials", user: null };
    }
    
    // 4. Secure Password Verification
    const passwordHash = hashPassword(password);
    const isPasswordValid = secureCompare(user.passwordHash, passwordHash); 
    
    if (!isPasswordValid) {
      return { success: false, message: "Invalid credentials", user: null };
    }
          
    return {
      success: true,
      message: 'Login successful',
      user: {
        id: user.ID,
        email: user.email,
        username: user.username,
        firstName: user.firstName,
        lastName: user.lastName,
      }
    };
  } catch (err) {
    cds.log('auth').error('Authentication error:', err);
    return { success: false, message: "Authentication failed", user: null };
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-644394427"&gt;Key Technical Points:&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Preventing User Enumeration&lt;/STRONG&gt;: Using the generic &lt;I&gt;"Invalid credentials"&lt;/I&gt; message.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Email Normalization&lt;/STRONG&gt;: Ensures query consistency.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-318798203"&gt;4. Express Middleware Integration&lt;/H3&gt;&lt;P&gt;The authentication handler is implemented as &lt;STRONG&gt;Express Middleware&lt;/STRONG&gt;. It parses the &lt;CODE&gt;Basic Auth&lt;/CODE&gt; header and creates the essential &lt;STRONG&gt;CAP-compatible user object&lt;/STRONG&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import { Request, Response, NextFunction } from 'express';
import cds from '@sap/cds';
// ... import credentialsAuthentication ... (from section 3)

export default async function custom_auth(
  req: Request, 
  res: Response, 
  next: NextFunction
) {
  try {
    const authHeader = req.headers.authorization;
    
    // Allow requests without Basic Auth header to proceed. 
    if (!authHeader || !authHeader.startsWith('Basic ')) {
      return next();
    }
    
    // Parse Basic Auth header
    const base64Credentials = authHeader.split(' ')[1];
    const credentials = Buffer
      .from(base64Credentials, 'base64')
      .toString('utf-8');
      
    const [email, password] = credentials.split(':', 2);
    
    if (!email?.trim() || !password) {
      res.status(401).json({ error: 'Invalid credentials format' });
      return;
    }
    
    const auth = await credentialsAuthentication({ email, password });
    const { success, user } = auth;
    
    if (success &amp;amp;&amp;amp; user) {
      // CRITICAL: Create the CAP-compatible user object
      const roles = user.roles.length &amp;gt; 0 ? user.roles : ['authenticated'];
      
      const capUser = new cds.User({
        id: user.id,
        attr: {
          email: user.email,
          username: user.username,
          firstName: user.firstName,
          lastName: user.lastName
        }
      });
      
      // Set the user context in both CAP and Express
      cds.context.user = capUser;
      req.user = capUser;
      next();
    } else {
      res.status(401).json({ error: auth.message });
    }
  } catch (error) {
    cds.log('auth').error('Unexpected authentication error:', error);
    res.status(401).json({ error: 'Unauthorized' });
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-251367417"&gt;Critical Implementation Details:&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The user context must be set in both &lt;STRONG&gt;&lt;CODE&gt;cds.context.user&lt;/CODE&gt;&lt;/STRONG&gt; (for CAP Services) and &lt;STRONG&gt;&lt;CODE&gt;req.user&lt;/CODE&gt;&lt;/STRONG&gt; (for Express-based middleware).&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--149460176"&gt;5. Service-Level Authorization&lt;/H3&gt;&lt;P&gt;With the custom handler successfully establishing the user context, you can immediately leverage CAP's built-in authorization features:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// srv/test-service.cds
service TestService @(requires: 'authenticated-user') { 
   entity Products as projection on template.Products;
}&lt;/code&gt;&lt;/pre&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--52570674"&gt;Testing Your Implementation&lt;/H2&gt;&lt;H3 id="toc-hId--542487186"&gt;Basic Authentication Test&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;Bash&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;CODE&gt;&lt;SPAN class=""&gt;# 1. Base64 encode your credentials (email:password)&lt;/SPAN&gt;
&lt;SPAN class=""&gt;echo&lt;/SPAN&gt; -n &lt;SPAN class=""&gt;'john.doe@example.com:password'&lt;/SPAN&gt; | base64

&lt;SPAN class=""&gt;# 2. Test the endpoint using the encoded value in the Authorization header&lt;/SPAN&gt;
curl -X GET http://localhost:4004/odata/v4/&lt;SPAN class=""&gt;test&lt;/SPAN&gt;/Products \
  -H &lt;SPAN class=""&gt;"Authorization: Basic am9obi5kb2VAZXhhbXBsZS5jb206cGFzc3dvcmQ="&lt;/SPAN&gt;
&lt;/CODE&gt;&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;Expected:&lt;/STRONG&gt; &lt;CODE&gt;200 OK&lt;/CODE&gt; with product data.&lt;/P&gt;&lt;H3 id="toc-hId--739000691"&gt;Unauthorized Access Test&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;Bash&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;CODE&gt;&lt;SPAN class=""&gt;# Test without the Authorization header&lt;/SPAN&gt;
curl -X GET http://localhost:4004/odata/v4/&lt;SPAN class=""&gt;test&lt;/SPAN&gt;/Products&lt;/CODE&gt;&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;Expected:&lt;/STRONG&gt; &lt;CODE&gt;401 Unauthorized&lt;/CODE&gt;.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--642111189"&gt;When to Use Custom Authentication vs. Standard SAP Solutions&lt;/H2&gt;&lt;P&gt;It's crucial to acknowledge that using &lt;STRONG&gt;XSUAA&lt;/STRONG&gt;, &lt;STRONG&gt;IAS (Identity Authentication Service)&lt;/STRONG&gt;, or standard JWT-based authentication is the &lt;STRONG&gt;recommended and preferred approach&lt;/STRONG&gt; for the vast majority of SAP CAP applications. These services offer enterprise-grade security, compliance, and integration with the SAP ecosystem.&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;However, the SAP CAP intentionally provides mechanisms for custom authentication.&lt;/SPAN&gt; This approach is necessary when:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;B2C Applications:&lt;/STRONG&gt; Requiring fully custom registration and login user experiences.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Legacy System Migration:&lt;/STRONG&gt; Integrating existing applications with established user databases and authentication logic.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If your use case aligns with standard enterprise authentication, &lt;STRONG&gt;you should prioritize XSUAA or IAS.&lt;/STRONG&gt; Custom authentication should be a deliberate, technically driven choice.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--838624694"&gt;What's Next?&lt;/H2&gt;&lt;P&gt;This guide provides the robust foundation for custom Basic Authentication in SAP CAP. Stay tuned for the next parts of this series, where we will extend this implementation.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The journey continues!&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/sap-cap-blog-posts/building-custom-authentication-in-sap-cap/ba-p/14232992"/>
    <published>2025-10-01T21:25:29.143000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631</id>
    <title>Creating a Hybrid CAP (Node.js) Profile with PostgreSQL on BTP from Business Application Studio</title>
    <updated>2025-10-02T17:44:09.830000+02:00</updated>
    <author>
      <name>valentincadart</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/786198</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this blog post, I’ll walk you through how to configure a hybrid testing profile in a Node.js-based CAP project, using a PostgreSQL database hosted on BTP, and running it locally from Business Application Studio.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;While setting up hybrid profiles in CAP is a common task, using them with PostgreSQL on BTP introduces a few challenges, mainly the need to connect via SSH tunneling to access the remote database from your local BAS workspace.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For more information on hybrid testing in CAP: &lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/advanced/hybrid-testing" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://cap.cloud.sap/docs/advanced/hybrid-testing&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This blog summarizes the approach I followed to solve a real-world issue raised in the SAP Community (&lt;A href="https://community.sap.com/t5/technology-q-a/cap-hybrid-testing-using-postgresql-on-sap-btp-hyperscaler-option-cloud/qaq-p/14037087" target="_self"&gt;original Q&amp;amp;A here&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;). Thanks to &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/789" target="_blank"&gt;&lt;SPAN&gt;@MioYasutake&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/139578" target="_blank"&gt;&lt;SPAN&gt;@Willem_Pardaens&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; for their help. Worth noting, &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/789" target="_blank"&gt;&lt;SPAN&gt;@MioYasutake&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; has published a great blog covering a complete Java-based CAP example, which you’ll find linked in the &lt;A href="https://community.sap.com/t5/technology-q-a/cap-java-how-to-connect-to-postgresql-on-btp-from-bas/qaq-p/14003400" target="_self"&gt;answer of this thread&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Table of contents:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;ul =""&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1890932964"&gt;Prerequisites and Sample Project&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1694419459"&gt;PostgreSQL specificity on BTP&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1497905954"&gt;Creating the Hybrid Profile&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1301392449"&gt;Enable SSH&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1104878944"&gt;Secure Connection via SSH Tunnel&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-908365439"&gt;Launch the Application&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-711851934"&gt;In case of "ResourceRequest timed out" error&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-515338429"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1890932964"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Prerequisites and Sample Project&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;In this tutorial, I’ll be using a sample CAP project that was previously created and publicly available on &lt;A href="https://github.com/ValentinCadart/CAPHybridTestingWithPostgres" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;If you prefer to start from scratch, you can follow the official setup guide here:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/guides/deployment/to-cf" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://cap.cloud.sap/docs/guides/deployment/to-cf&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Just make sure to replace HANA Cloud with PostgreSQL by running the following command:&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add postgres --for production&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Note: The cds add postgres command automatically adds a PostgreSQL resource to your mta.yaml file, using the development service plan by default. However, this plan is not available on BTP trial accounts. If you're using a trial account, simply replace development with trial in the mta.yaml as shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;- name: bookshop-postgres
  type: org.cloudfoundry.managed-service
  parameters:
    service: postgresql-db
    service-plan: trial&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Once the project is deployed to BTP, you’ll see five service instances created:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;One instance for authorization (XSUAA)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;One for the destination service&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Two related to the HTML5 application repository (host and runtime)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;And one for the PostgreSQL database&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;This setup represents a standard CAP deployment on Cloud Foundry with an HTML5 UI module.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="valentincadart_0-1759418082183.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322347i21B48A475FBCECBB/image-size/large?v=v2&amp;amp;px=999" role="button" title="valentincadart_0-1759418082183.png" alt="valentincadart_0-1759418082183.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Additionally, in your Cloud Foundry space, you will find two deployed applications:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;One for the PostgreSQL database&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;And another for the backend service of your application (the -srv module)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="valentincadart_1-1759418100619.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322348i2A9FFF905F5C4C73/image-size/large?v=v2&amp;amp;px=999" role="button" title="valentincadart_1-1759418100619.png" alt="valentincadart_1-1759418100619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With the basic configuration set up on BTP, we can now move on to implementing hybrid testing from Business Application Studio.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1694419459"&gt;&lt;STRONG&gt;PostgreSQL specificity on BTP&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;EM&gt;- Correction added on 03/10/2025 following feedback from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/52838"&gt;@antoniojmnunes&lt;/a&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The PostgreSQL service on SAP BTP now includes features that allow access from outside the BTP environment. This includes support for &lt;A href="https://help.sap.com/docs/postgresql-on-sap-btp/postgresql-on-sap-btp-hyperscaler-option/public-ip-access-in-postgresql-instances?locale=en-US" target="_self" rel="noopener noreferrer"&gt;public IPs&lt;/A&gt;, which enable connections from external systems, as well as the &lt;A href="https://help.sap.com/docs/postgresql-on-sap-btp/postgresql-on-sap-btp-hyperscaler-option/instance-sharing?locale=en-US" target="_self" rel="noopener noreferrer"&gt;instance sharing&lt;/A&gt; feature, which allows you to share a PostgreSQL instance across different subaccounts.&lt;/P&gt;&lt;P&gt;For more details, you can refer to the following blog posts:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/postgresql-on-sap-btp-how-to-access-instances-via-public-ips/ba-p/13868169" target="_self"&gt;PostgreSQL on SAP BTP - How-to access instances via public IPs&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/postgresql-on-sap-btp-instance-sharing-reference-service-plan/ba-p/13794791" target="_self"&gt;PostgreSQL on SAP BTP - Instance sharing | 'reference' service plan&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you’re interested in more official blog posts about PostgreSQL on BTP, check out this index:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/postgresql-on-sap-btp-are-you-looking-for-official-blog-posts-blog-index/ba-p/13788533" target="_self"&gt;PostgreSQL on SAP BTP - Are you looking for official blog posts? Blog INDEX&lt;/A&gt;&lt;/P&gt;&lt;P&gt;However, in our specific use case, we are unable to make use of these features. This limitation is due to the nature of our current setup, where these options do not allow us to achieve this in practice. As a workaround, we will create an SSH tunnel between Business Application Studio and our Cloud Foundry application.&lt;/P&gt;&lt;H3 id="toc-hId-1497905954"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Creating the Hybrid Profile&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;To set up the hybrid profile, you need to modify or create the .cdsrc.json (or .cdsrv-private.json) file at the root of your CAP project. This file defines launch profiles and specific options for the cds command.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "cds": {
    "requires": {
      "[hybrid]": {
        "db": {
          "kind": "postgres",
          "credentials": {
            "host": "127.0.0.1",
            "port": 63306,
            "user": "&amp;lt;user&amp;gt;",
            "password": "&amp;lt;password&amp;gt;",
            "database": "&amp;lt;dbname&amp;gt;",
            "sslcert": "-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----",
            "sslrootcert": "-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----"
          },
          "pool": {
            "acquireTimeoutMillis": 2000
          }
        }
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Replace the placeholders &lt;CODE&gt;&amp;lt;user&amp;gt;&lt;/CODE&gt;, &lt;CODE&gt;&amp;lt;password&amp;gt;&lt;/CODE&gt;, &lt;CODE&gt;&amp;lt;database&amp;gt;&lt;/CODE&gt;, as well as the &lt;CODE&gt;&amp;lt;sslcert&amp;gt;&lt;/CODE&gt; and &lt;CODE&gt;&amp;lt;sslrootcert&amp;gt;&lt;/CODE&gt; fields with the credentials provided by your PostgreSQL instance hosted on BTP. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="valentincadart_2-1759418191865.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322349iD823E1883D84B021/image-size/large?v=v2&amp;amp;px=999" role="button" title="valentincadart_2-1759418191865.png" alt="valentincadart_2-1759418191865.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Direct access to the remote PostgreSQL database is restricted for security reasons. By creating an SSH tunnel, a local port (e.g., 63306) on your BAS environment is securely forwarded to the remote database, so connecting to 127.0.0.1:63306 effectively accesses the remote PostgreSQL instance through this tunnel.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1301392449"&gt;&lt;SPAN&gt;Enable SSH&lt;BR /&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Before you can connect via SSH to your Cloud Foundry app, you need to enable this feature first by running:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf enable-ssh bookshop-srv
cf restart bookshop-srv&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;If you encounter any issues, refer to the official Cloud Foundry SSH documentation:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://docs.cloudfoundry.org/devguide/deploy-apps/ssh-apps.html" target="_blank" rel="noopener nofollow noreferrer"&gt;https://docs.cloudfoundry.org/devguide/deploy-apps/ssh-apps.html&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1104878944"&gt;&lt;STRONG&gt;Secure Connection via SSH Tunnel&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Open a terminal in Business Application Studio and run the following command:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf ssh -L 63306:&amp;lt;host_from_service_key&amp;gt;:&amp;lt;port_from_service_key&amp;gt; &amp;lt;application_name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Replace &lt;CODE&gt;&amp;lt;host_from_service_key&amp;gt;&lt;/CODE&gt; and &lt;CODE&gt;&amp;lt;port_from_service_key&amp;gt;&lt;/CODE&gt; with the values from your PostgreSQL service key on BTP (create one if it doesn’t exist). Also replace &lt;CODE&gt;&amp;lt;application_name&amp;gt;&lt;/CODE&gt; with the name of your Cloud Foundry application (e.g., bookshop-srv).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="valentincadart_3-1759418309506.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322350i6083D44CC7B8CA8B/image-size/large?v=v2&amp;amp;px=999" role="button" title="valentincadart_3-1759418309506.png" alt="valentincadart_3-1759418309506.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This command creates an SSH tunnel that forwards local port 63306 to the remote PostgreSQL database through the Cloud Foundry app.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-908365439"&gt;&lt;STRONG&gt;Launch the Application&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;In a second terminal, run the following command to start your application using the hybrid profile:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds watch --profile hybrid&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;You should see a message in the console confirming the connection to PostgreSQL on localhost, for example:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;[cds] - connect to db &amp;gt; postgres {
  host: '127.0.0.1',
  port: 63306,
  ...
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Your application now runs locally in Business Application Studio but using the real data from the PostgreSQL database hosted on your BTP account.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-711851934"&gt;&lt;STRONG&gt;In case of "ResourceRequest timed out" error&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;If you see the following error:&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;&amp;lt;message&amp;gt;ResourceRequest timed out&amp;lt;/message&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;It likely means that:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The SSH tunnel is not active&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The SSL certificate is not loaded properly&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The timeout is too short (hence the importance of the acquireTimeoutMillis setting)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-515338429"&gt;Conclusion&lt;/H3&gt;&lt;P&gt;Once set up, this configuration lets you develop locally from Business Application Studio while testing your application with real data from PostgreSQL. This way, you avoid redeploying the app after every change and fully leverage CAP’s hybrid testing capabilities.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631"/>
    <published>2025-10-02T17:44:09.830000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/why-clients-say-no-to-btp-and-how-to-change-their-mind/ba-p/14237359</id>
    <title>Why Clients Say No to BTP – and How to Change Their Mind</title>
    <updated>2025-10-07T18:10:07.654000+02:00</updated>
    <author>
      <name>michal_majer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/160961</uri>
    </author>
    <content>&lt;P&gt;Hey BTP Community! Do you know that feeling? You walk into a meeting with an innovative idea, and the client—just hearing "&lt;STRONG&gt;SAP BTP&lt;/STRONG&gt;"—immediately rejects it. &lt;I&gt;"I don't want BTP implementation!"&lt;/I&gt; – they exclaim, with a look of weariness in their eyes.&lt;/P&gt;&lt;P&gt;Too many times, innovation, instead of solving problems, becomes... a hot potato.&lt;/P&gt;&lt;P&gt;Sure, there are companies boasting a full migration to BTP, but the truth is, most organizations have concerns. Concerns about the new, about the cost, about too much detachment from the stable, &lt;STRONG&gt;"on-premise"&lt;/STRONG&gt; world.&lt;/P&gt;&lt;P&gt;But today, I'll show you how to turn that "No" into &lt;STRONG&gt;"Why didn't we do this sooner?"&lt;/STRONG&gt; I'm presenting a true case that proves, in certain scenarios, BTP is not just better; it's the only sensible and secure solution.&lt;/P&gt;&lt;H3 id="toc-hId-1891049315"&gt;End Customers Straight into S/4HANA&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Problem Analysis: When On-Premise "Knowledge and Familiarity" Becomes the Biggest Risk.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Imagine a typical scenario: A client needs a portal where their end customers (&lt;STRONG&gt;B2C/B2B&lt;/STRONG&gt;) can verify the status of their service requests (or other object/s existing in the S/4HANA).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;On-premise decision:&lt;/STRONG&gt; We create external user accounts directly in the &lt;STRONG&gt;S/4HANA&lt;/STRONG&gt; system. We define roles just like for internal users. We have advanced control and know the system inside out. Sounds good, right?&lt;/P&gt;&lt;P&gt;This approach, while familiar, introduces critical risks and burdens:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Security Risk:&lt;/STRONG&gt; This is my biggest headache. An external user, even with the most restrictive role, works on the same system as critical business processes and your internal employees. There is a risk (or its perception) that the user will gain access to data they shouldn't. This discomfort is a real threat to your company.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Performance Issues:&lt;/STRONG&gt; Suddenly, your customers start working on the same system as your business processes! Increased traffic, planned jobs, mass status verifications... all of this burdens &lt;STRONG&gt;S/4HANA&lt;/STRONG&gt;. Planning for increased resource consumption is required.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Additional Team Workload:&lt;/STRONG&gt; Every request regarding access problems, passwords, or end-customer permissions lands on your Security/Basis team's desk. This burdens them, diverting them from key maintenance and development tasks.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1694535810"&gt;The "SAP Plumber" Architecture: Why Are Customers Waiting in the Dark?&lt;/H3&gt;&lt;P&gt;This scenario was further complicated by inefficient integration processes:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;The Customer creates a request in an old, external &lt;STRONG&gt;Legacy System&lt;/STRONG&gt; (Success - 200 - Request Created in the Lagacy System).&lt;/LI&gt;&lt;LI&gt;The request is saved in the Legacy Database (Status: "Staging").&lt;/LI&gt;&lt;LI&gt;The Legacy System processes requests and transfers them (via API) to &lt;STRONG&gt;S/4HANA&lt;/STRONG&gt; at intervals.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;And here the drama begins:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;S/4HANA REJECTS&lt;/STRONG&gt; some requests for various reasons (business rules, technical errors, missing data).&lt;/LI&gt;&lt;LI&gt;The client receives &lt;STRONG&gt;no feedback&lt;/STRONG&gt;. They just wait. And then they wait some more.&lt;/LI&gt;&lt;LI&gt;Finally, the request lands on the servisk desk of... System Maintenance Experts! (Our &lt;STRONG&gt;"SAP Plumber"&lt;/STRONG&gt; &lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;). They painstakingly verify errors, push through messages, and waste valuable time on tasks that should be automated.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The result? Low customer satisfaction, increased pressure, and prioritization of requests that were never even processed in the first place!&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1498022305"&gt;&amp;nbsp;The Solution You Need: Client Portal on SAP BTP&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Isolation, Visibility, Scalability – The Three True Benefits of BTP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Client portals are an ideal, canonical use case for &lt;STRONG&gt;SAP BTP&lt;/STRONG&gt;!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;How does it work, technically and business-wise?&lt;/STRONG&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1430591519"&gt;1. Isolation and Security&amp;nbsp;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;We deploy a new &lt;STRONG&gt;Portal Application&lt;/STRONG&gt; (e.g., based on &lt;STRONG&gt;SAP CAP&lt;/STRONG&gt; in Node.js or Fiori/UI5) on &lt;STRONG&gt;SAP BTP&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;End customers log in &lt;STRONG&gt;ONLY to BTP&lt;/STRONG&gt;. Their accounts, users, and traffic are completely isolated from the critical S/4HANA system&lt;/LI&gt;&lt;LI&gt;Key logic and statuses are handled outside the ERP, in a &lt;STRONG&gt;secure BTP environment&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="unnamed (1).jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324121iB199A3665184F954/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="unnamed (1).jpg" alt="unnamed (1).jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1234078014"&gt;2. Full Request Status Visibility&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The BTP application integrates with the Legacy system. Since SAP CAP is Node.js, we can:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;Consume existing Legacy APIs.&lt;/LI&gt;&lt;LI&gt;Or, if no API exists, connect directly to the Legacy Database (using the appropriate driver).&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;From the moment a request is created, the client sees its &lt;STRONG&gt;FULL and CURRENT status&lt;/STRONG&gt;, directly in the BTP application.&lt;/LI&gt;&lt;LI&gt;(Such app is also helpfull for technical persons)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;S/4HANA Integration:&lt;/STRONG&gt; If necessary, we use secure &lt;STRONG&gt;OData APIs&lt;/STRONG&gt; from S/4HANA (read-only or controlled write access) to fetch additional, approved information (e.g., invoice number, agent name). Controlled APIs are your gateway, not an open door!&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1037564509"&gt;3. Unleashing Data Potential&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;A bonus that is often overlooked: If we decide to use &lt;STRONG&gt;HANA DB on BTP&lt;/STRONG&gt;, we automatically gain the ability to easily consume and analyze data from the Client Portal in analytical tools such as &lt;STRONG&gt;SAP DataSphere&lt;/STRONG&gt;, &lt;STRONG&gt;SAP Analytics Cloud (SAC)&lt;/STRONG&gt;, or &lt;STRONG&gt;Business Data Cloud (BDC)&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Creating reports, tracking progress, measuring satisfaction, and identifying bottlenecks becomes trivially simple.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-711968285"&gt;Break Client Resistance. Turn "No" into "I Need This."&lt;/H3&gt;&lt;P&gt;A client who says &lt;STRONG&gt;"No to BTP"&lt;/STRONG&gt; is actually saying:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;"I don't want additional costs."&lt;/LI&gt;&lt;LI&gt;"I don't want complications."&lt;/LI&gt;&lt;LI&gt;"I don't understand how this will help me."&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;My answer:&lt;/STRONG&gt;&lt;BR /&gt;"BTP is not an end goal; BTP is a tool that eliminates critical architectural and business risks."&lt;/P&gt;&lt;P&gt;When integration is so strongly tied to the SAP S/4HANA ecosystem, and the requirements are &lt;STRONG&gt;data isolation&lt;/STRONG&gt; and &lt;STRONG&gt;scalability&lt;/STRONG&gt; —&amp;nbsp;&amp;nbsp;SAP BTP is good choice.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Leave Kudos if You like it &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/why-clients-say-no-to-btp-and-how-to-change-their-mind/ba-p/14237359"/>
    <published>2025-10-07T18:10:07.654000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/integrating-sap-document-information-extraction-document-ai-with-sap-cap/ba-p/14235024</id>
    <title>Integrating SAP Document Information Extraction (Document AI) with SAP CAP – Step by Step</title>
    <updated>2025-10-09T12:50:17.556000+02:00</updated>
    <author>
      <name>furkan5</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2115025</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="4"&gt;Introduction :&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In the SAP ecosystem, extracting meaningful data from documents such as invoices, contracts, or delivery notes—especially in accounting, finance, and operational processes—is often a manual and time-consuming task.Since these documents are usually in PDF or scanned image formats, using traditional data processing methods to identify fields is both error-prone and unsustainable in the long run.This is where SAP Document AI comes into play.By leveraging AI-powered models, Document AI can automatically analyze documents and extract key fields such as invoice number, date, currency, supplier–customer information, and line items.This eliminates the need for manual data entry, making the overall process faster, more reliable, and significantly more efficient.In this blog post, I will walk you through the step-by-step process of enabling SAP Document AI on SAP BTP and integrating it with a CAP (Cloud Application Programming) project.Starting from service activation, we’ll cover creating a service key, performing authentication (token retrieval), defining actions in CAP, uploading files, and storing the extracted Document AI results in a database.By the end of this guide, you’ll have a fully functional CAP endpoint that can be tested via Postman.You’ll learn how to send real PDF invoice files to Document AI and receive structured data in return—a foundation you can later extend with UI5 interfaces or workflow integrations.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;BR /&gt;Step &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;1 — Creating the Document AI Service in SAP BTP&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;First, we need to enable the Document AI service in SAP BTP. To do this:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Log in to your SAP BTP subaccount.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Open &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Service Marketplace&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Find &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the SAP Document AI Trial&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; service under &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Artificial Intelligence&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; category .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_0-1759664486213.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322910iF81D4AB95DE1798C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_0-1759664486213.png" alt="furkan5_0-1759664486213.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;On the service details page, you'll see &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Overview&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; and &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Service Plans tabs. Click &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Create&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; to create a service instance &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Select the &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;default&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; plan . This plan enables basic API access in a trial environment and creates the instance your CAP project needs to connect to the Document AI service.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_1-1759664694730.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322911i78197B4CDDE308E1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_1-1759664694730.png" alt="furkan5_1-1759664694730.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Fill out the form below:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Service:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; SAP Document AI Trial Version &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ We will be using this service. Since it is a trial version, we will use the free trial quota.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Plan:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; default &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ Only the &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;default&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; plan is available in the trial environment. It is sufficient for basic use.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Runtime Environment:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Cloud Foundry &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ Defines where the service will run. Cloud Foundry is often chosen for integration with CAP projects.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Domain:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; dev &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ Select the Cloud Foundry domain where your project is located (for example, dev, test).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Instance Name:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; DocAI &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ You can give the service instance any name you want. This makes it easier to connect later (you can use lowercase, for example &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;docai&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;After filling in all the fields, you can click &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Next button&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; to proceed to the confirmation screens and complete the sample creation process.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Once the instance has been successfully created, the next step is to generate &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;a Service Key for it&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; . This key contains the authentication information needed for your CAP project to connect to the Document AI service.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Click the ellipsis ( … ) &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;on the far right of your sample row &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Select Create Service Key&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; from the menu &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In the dialog box:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_2-1759665251951.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322912i292D746AFAAFA8A6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_2-1759665251951.png" alt="furkan5_2-1759665251951.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In the Name&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; field, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;enter a meaningful name such as &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;DocAIKey&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;You can leave the other settings at their default values.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Then&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; click Create &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Once the Service Key is generated, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;click on its row to open the &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;detail page.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ChatGPT Image 5 Eki 2025 15_02_16.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322913i9A734DF3DA76B3AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ChatGPT Image 5 Eki 2025 15_02_16.png" alt="ChatGPT Image 5 Eki 2025 15_02_16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;After copying the JSON:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Adding Service Key details to the file To access &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Document&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; AI service, we need to define credentials in our CAP project. To do this, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;you can add a structure like the following to the file located in your project's root directory:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Correct the highlighted errors and try again.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Unsupported HTML code has been removed from your message. The HTML has been updated. Please review the message and send it when you are satisfied.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "DOCAI_CLIENT_ID": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "DOCAI_CLIENT_SECRET": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "DOCAI_TOKEN_URL": "https://39c50baetrial.authentication.us10.hana.ondemand.com/oauth/token",
  "DOCAI_URL": "https://aiservices-trial-dox.cfapps.us10.hana.ondemand.com/document-information-extraction/v1"
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In real projects&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; , instead of manually adding these details to the file &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, service keys are &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;automatically&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; linked to the application. This way, the application reads credentials from environment variables ( ) and is managed more securely. Automatic linking can also be achieved during deployment via &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;MTA&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; or &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;manifest&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; files &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;VCAP_SERVICES&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;CODE&gt;service.cds&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Action Definition &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;in File&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;using { app as db } from '../db/schema';

service InvoiceService {
  entity Invoices as projection on db.Invoices;
  entity InvoiceItems as projection on db.InvoiceItems;

  action analyzeAndSave(file : LargeBinary, filename : String) returns {
     documentNumber : String(60);    
    documentDate   : Date;           
    currencyCode   : String(3);      
    senderName     : String(255);    
    receiverName   : String(255);   
    netAmount      : Decimal(15,2);  
    taxName        : String(40);     
    taxRate        : Decimal(5,2);   
    taxAmount      : Decimal(15,2);  
    grossAmount    : Decimal(15,2);  

  };
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;First, we define &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;a CAP Action to send the PDF to the Document AI service and retrieve the result&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; . This action can be triggered from the frontend or from tools like Postman.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;For example, let's define an action with the following name &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;CODE&gt;analyzeAndSave&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;CODE&gt;file&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;field:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Retrieves PDF file content in Base64 format.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;CODE&gt;filename&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;field:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Contains the file name.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;CODE&gt;returns&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;section:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Returns key invoice fields from the AI ​​service (for example, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;documentNumber&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;documentDate&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;currencyCode&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, etc.).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;This step creates the backend point that will trigger access to the Document AI service.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;At this point, we need to listen for the action we defined &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;in the backend &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;. To do this , we add &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;an &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;event handler&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; to . When the action is triggered, this handler sends the file to the Document AI service, retrieves the analysis result, and saves it to the database. The entire flow is managed within this function.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;analyzeAndSave&lt;/CODE&gt;&lt;CODE&gt;service.cds&lt;/CODE&gt;&lt;CODE&gt;srv/service.js&lt;/CODE&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;module.exports = cds.service.impl(function () {
  this.on("analyzeAndSave", async (req) =&amp;gt; {
    // We define the **helper functions required for the Document AI integration**.

  });
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Obtaining a Token (Authentication)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Now that we've defined the service credentials in the file&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, we need to obtain an access token to send requests to the Document AI service.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;We'll add the following sample function&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;to our file&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;CODE&gt;getToken&lt;/CODE&gt;&lt;CODE&gt;srv/service.js&lt;/CODE&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const axios = require("axios");

async function getToken() {
  const r = await axios.post(
    process.env.DOCAI_TOKEN_URL,
    new URLSearchParams({
      grant_type: "client_credentials",
      client_id: process.env.DOCAI_CLIENT_ID,
      client_secret: process.env.DOCAI_CLIENT_SECRET,
    }),
    { headers: { "Content-Type": "application/x-www-form-urlencoded" } }
  );
  return r.data.access_token;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;This function &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;access_token&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;returns a value from the SAP Document AI service using the information in the file. This token &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;will be used in subsequent API calls within the &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;Authorization&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; header .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In real projects, this step is often automated through &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;target+service binding&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; . The CAP application reads the necessary information &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;VCAP_SERVICES&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;from environment variables to obtain the token .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In this step, we retrieve the schemas defined in Document AI and&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;select the appropriate one for invoices. This allows the model to determine which fields to extract (e.g., Invoice ID, Date, Currency, etc.).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const schemas = await fetchSchemas(base, token);
console.log("[DocAI] schemas count =", schemas.length);

const chosen = pickInvoiceSchema(schemas);
if (!chosen) return req.error(500, "No invoice-related schema available in DOX");
console.log("[DocAI] chosen =", chosen);&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;fetchSchemas:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Retrieves the schema list from DOX using the access token.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;pickInvoiceSchema:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Selects the schema whose name is invoice or &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;contains &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the invoice&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;documentType&lt;/CODE&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;If none are found, return &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;500&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; (an obvious error to the developer).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Base64 → Buffer conversion (prepare the file)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The PDF file received from the client (UI5/Postman) may be in Base64 format. If it is a Data URL (for example,&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;data&amp;amp;colon;application/pdf;base64,...&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;), remove the prefix and convert it to a true binary buffer.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;let b64 = Buffer.isBuffer(file) ? null : String(file);
if (b64 &amp;amp;&amp;amp; b64.startsWith("data:")) {
  const i = b64.indexOf("base64,");
  if (i &amp;gt; -1) b64 = b64.slice(i + "base64,".length);
}
const buffer = Buffer.isBuffer(file) ? file : Buffer.from(b64 || file, "base64");
console.log("[CHECK] filename=", filename, "buffer length=", buffer?.length);
if (!buffer?.length) return req.error(400, "Empty or invalid base64 file");&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The field we will send via &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;HTTP form-data needs &lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;to be&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; binary &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;; therefore &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;we convert the Base64 payload into a &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;buffer&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;CODE&gt;file&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;We return 400&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; (client error) &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;for an &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;empty or corrupt&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; file .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Create a job (submit with &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;schemaId&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; We provide&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; the selected schema&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; and&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; document type&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; in&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt; , then&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; submit the file&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt; to DocAI&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; to start&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;CODE&gt;options&lt;/CODE&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const options = {
  clientId: "default",
  schemaId: chosen.id,
  documentType: chosen.documentType || "invoice",
};
console.log("[DocAI] submit options =", options);

const submitted = await submitJob(base, token, buffer, filename || "invoice.pdf", options);
const jobId = submitted?.id;
if (!jobId) throw new Error(`Job submit failed: ${JSON.stringify(submitted)}`);
console.log("[DocAI] jobId =", jobId);&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;schemaId: &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;chosen.id&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ we use a dynamic schema id.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;If successful, it returns a &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;jobId&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;; we use this ID to track the status of the job.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;If &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;filename&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;not provided the default value is &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;"invoice.pdf"&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Question the work and get results&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The job runs in the background.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; We poll at intervals until the status is COMPLETED &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Once the process is complete, the extracted areas become available under &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;CODE&gt;extraction&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const result = await pollJob(base, token, jobId, 60000, 1500);
console.log("[DocAI] status DONE, extraction keys =", Object.keys(result?.extraction || {}));&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;CODE&gt;pollJob(base, token, jobId, 60000, 1500)&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;60 sec timeout / 1.5 sec interval&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Below &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;and &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;result.extraction&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;you get &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;CODE&gt;headerFields&lt;/CODE&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;CODE&gt;lineItems&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;NOW LET'S GO TO TESTING:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;First, ...&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;cds watch --profile hybrid &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Let's start our CAP project with the following command. (I started it this way &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;because I chose &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;HANA&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; as the database .)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Sample Invoice PDF file:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_7-1759670250574.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322915i32530D5E1CCE4274/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_7-1759670250574.jpeg" alt="furkan5_7-1759670250574.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Above&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; is a sample PDF file we sent to the SAP Document AI service. The service automatically analyzes the invoice and extracts fields such as the invoice number, date, currency, supplier-customer information, and item information.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Testing with Postman:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Now that everything is ready on the backend, we can test the CAP action integrated with the Document AI service. To do this, use a REST client like Postman and send the following request:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_6-1759670015598.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322914iA652EA031F5674AB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_6-1759670015598.jpeg" alt="furkan5_6-1759670015598.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Method:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; POST&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;URL:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;CODE&gt;&lt;A href="http://localhost:4004/odata/v4/invoice/analyzeAndSave" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:4004/odata/v4/invoice/analyzeAndSave&lt;/A&gt;&lt;/CODE&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Body (JSON):&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;file name:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Name of the PDF file to be uploaded&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;file:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; PDF file content in &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Base64&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; format&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In this answer:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The fields extracted by Document AI match &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;exactly&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; the action return types defined in &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;service.cds&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;These values ​​are also &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;automatically&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; saved to the HANA database in the background.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In real projects,&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; this setup isn't written manually. Instead, the Document AI service &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;automatically connects to the CAP application via &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;service binding&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; . The application reads the necessary credentials directly &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;from environment variables, and token acquisition is performed automatically in the background. This not only increases security (sensitive data like client secrets aren't visible in the code or repository) but also &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;allows the application to run across different environments (dev, test, production) &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;without additional configuration . During deployment, binding is provided via &lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;MTA&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; or &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;manifest&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; files, and the application continues to run seamlessly with the same approach when deployed to production.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;STRONG&gt;&lt;CODE&gt;VCAP_SERVICES&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Optional: Storing Raw Document AI JSON for Debugging:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ekran görüntüsü 2025-10-05 170414.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322919i67EE420641065A4C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ekran görüntüsü 2025-10-05 170414.png" alt="Ekran görüntüsü 2025-10-05 170414.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In the Invoices&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; entity of the schema &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, I defined a field called to store the original response returned by the Document AI service. This field &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;is of type &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;LargeString&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; and holds all the header and line item data returned by Document AI in JSON format.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;RawJson&lt;/CODE&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The purpose of this area:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Debug/Trace&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; : Easily inspect the data returned by Document AI during development.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Extensibility&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; : If I later want to add new fields or change the mapping structure, I can access the original source.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Data Traceability&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; : Store raw invoice data so it can be reprocessed when necessary.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;For example, when an invoice is processed, all the extraction data returned by Document AI is stored in this column. You can then open this data and clearly see which fields Document AI has recognized.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;In this article, we explored how to enable SAP Document AI on SAP BTP and integrate it end-to-end with a CAP project. Each step—from creating the service instance and generating the service key to authenticating, defining CAP actions, and processing documents—represents a fundamental building block of a real-world backend automation setup.With this integration, you can now automatically process invoices or similar business documents without manual data entry. The extracted fields can be stored in your HANA database and then used for reporting, process automation, or analytics. This approach not only speeds up financial and operational workflows but also reduces human error and increases overall process reliability.In production environments, this setup is typically secured and automated through &lt;STRONG&gt;service binding&lt;/STRONG&gt;, allowing applications to read credentials from environment variables without manual configuration. This ensures smooth operation across development, test, and production landscapes.As a next step, you can extend this backend integration with a &lt;STRONG&gt;SAP UI5 dashboard&lt;/STRONG&gt; or management panel, enabling users to upload, view, validate, and approve invoices in real time. By doing so, you’ll move from a simple technical integration to a &lt;STRONG&gt;fully functional end-to-end intelligent document processing solution&lt;/STRONG&gt;.&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/integrating-sap-document-information-extraction-document-ai-with-sap-cap/ba-p/14235024"/>
    <published>2025-10-09T12:50:17.556000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/implementing-custom-audit-logging-in-sap-cap-applications/ba-p/14239283</id>
    <title>Implementing Custom Audit Logging in SAP CAP Applications</title>
    <updated>2025-10-09T13:22:32.172000+02:00</updated>
    <author>
      <name>gopalanand</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/126694</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1762025304"&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/H2&gt;&lt;DIV&gt;&lt;SPAN&gt;While SAP Cloud Application Programming (CAP) provides automatic audit logging through annotations, there are scenarios where you need more granular control over what gets logged. Custom audit logging becomes essential when you want to capture specific security events, such as unauthorised access attempts or track custom business logic violations.&lt;/SPAN&gt;&lt;DIV&gt;&amp;nbsp;&lt;DIV&gt;&lt;SPAN&gt;&lt;SPAN&gt;In this blog post, we'll explore how to implement custom audit logging in your CAP application to capture 403 Forbidden events when users attempt to access resources without proper authorisation.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;DIV&gt;This blog contains information from the SAP BTP Developer's Guide:&amp;nbsp;&lt;A href="https://github.com/SAP-samples/btp-developer-guide-cap/tree/main/documentation" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-samples/btp-developer-guide-cap/tree/main/documentation&lt;/A&gt;&lt;H4 id="toc-hId-1823677237"&gt;&lt;SPAN&gt;Why Custom Audit Logging?&lt;/SPAN&gt;&lt;/H4&gt;&lt;DIV&gt;&lt;SPAN&gt;Enterprise applications often require tracking security events beyond data access. Consider these scenarios:&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;-&amp;nbsp;&lt;STRONG&gt;Security Monitoring&lt;SPAN&gt;: Log unauthorised access attempts&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;- &lt;STRONG&gt;Compliance Requirements&lt;SPAN&gt;: Track specific business rule violations &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;- &lt;STRONG&gt;Custom Events&lt;SPAN&gt;: Capture application-specific audit trails&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;Custom audit logging fills these gaps by giving developers the flexibility to log any event deemed critical for security or compliance.&lt;/SPAN&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;H4 id="toc-hId-1627163732"&gt;&lt;SPAN&gt;Setting Up Custom Audit Logging&lt;/SPAN&gt;&lt;/H4&gt;&lt;DIV&gt;&lt;SPAN&gt;CAP provides powerful event handlers that allow you to intercept requests and responses. Here's how to implement custom audit logging for security events:&lt;/SPAN&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Step 1: Create the Server Extension&lt;/STRONG&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Create a &lt;STRONG&gt;server.js&lt;SPAN&gt;&amp;nbsp;file at the root of your CAP application and implement the custom audit logging logic:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const cds = require('@sap/cds')

let audit

cds.on('served', async () =&amp;gt; {
  audit = await cds.connect.to('audit-log')
})

const audit_log_403 = (resource, ip) =&amp;gt; {
  // we need to start our own tx because the default tx may be burnt
  audit.tx(async () =&amp;gt; {
    await audit.log('SecurityEvent', {
      data: {
        user: cds.context.user?.id || 'unknown',
        action: `Attempt to access restricted resource "${resource}" with insufficient authority`
      },
      ip
    })
  })
}

// log for non-batch requests
cds.on('bootstrap', app =&amp;gt; {
  app.use((req, res, next) =&amp;gt; {
    req.on('close', () =&amp;gt; {
      if (res.statusCode == 403) {
        const { originalUrl, ip } = req
        audit_log_403(originalUrl, ip)
      }
    })
    next()
  })
})

// log for batch subrequests
cds.on('serving', srv =&amp;gt; {
  if (srv instanceof cds.ApplicationService) {
    srv.on('error', (err, req) =&amp;gt; {
      if (err.code == 403) {
        const { originalUrl, ip } = req.http.req
        if (originalUrl.endsWith('/$batch')) audit_log_403(originalUrl.replace('/$batch', req.req.url), ip)
      }
    })
  }
})

module.exports = cds.server​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Understanding the Implementation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The implementation consists of three key components:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Audit Connection: Establishes a connection to the audit-log service when CAP is served&lt;/LI&gt;&lt;LI&gt;Custom Audit Function: Creates security event entries with user context and resource information&lt;/LI&gt;&lt;LI&gt;Event Handlers: Captures 403 errors for both regular and batch requests&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;The code handles two scenarios:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- Non-batch requests: Uses Express middleware to capture response status codes&lt;/P&gt;&lt;P&gt;- Batch requests: Leverages CAP's error handling for OData batch operations&lt;/P&gt;&lt;H4 id="toc-hId-1430650227"&gt;Testing Your Custom Audit Logging&lt;/H4&gt;&lt;P&gt;To verify your implementation works correctly:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Start your CAP server with &lt;STRONG&gt;cds watch&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Modify user permissions: Remove the `&lt;STRONG&gt;admin&lt;/STRONG&gt;` role from user `&lt;STRONG&gt;alice&lt;/STRONG&gt;` in your `&lt;STRONG&gt;package.json&lt;/STRONG&gt;`&lt;/LI&gt;&lt;LI&gt;Send a test request: Use the following HTTP request to trigger a 403 error&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;GET {{server}}/odata/v4/admin/Customers
Authorization: Basic {{username}}:{{password}}
​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Check the console output: You should see a custom audit log entry like this:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;[audit-log] - SecurityEvent: {
     data: {
       user: 'alice',
       action: 'Attempt to access restricted resource "/odata/v4/admin/Customers" with insufficient authority'
     },
     ip: '::ffff:127.0.0.1',
     uuid: '1109134c-64db-42f8-a780-2dde61cf6821',
     tenant: undefined,
     user: 'alice',
     time: 2025-05-28T04:59:43.653Z
   }
​&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-1105054003"&gt;Conclusion&lt;/H3&gt;&lt;P&gt;Custom audit logging in CAP applications provides the flexibility needed for comprehensive security monitoring and compliance. By leveraging CAP's event system and audit logging infrastructure, you can create robust audit trails that go beyond standard data access logging.&lt;/P&gt;&lt;P&gt;The implementation shown here focuses on security events, but the same principles apply to any custom audit logging requirements in your enterprise applications.&lt;BR /&gt;Learn more about SAP BTP Developer's Guide and More concepts:&amp;nbsp;&lt;A href="https://help.sap.com/docs/btp/btp-developers-guide/btp-developers-guide" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/btp/btp-developers-guide/btp-developers-guide&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Note: The views and opinions expressed in this post are my own.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/implementing-custom-audit-logging-in-sap-cap-applications/ba-p/14239283"/>
    <published>2025-10-09T13:22:32.172000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/developer-news/sap-developer-news-october-9th-2025/ba-p/14239602</id>
    <title>SAP Developer News October 9th, 2025</title>
    <updated>2025-10-09T21:10:00.023000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F7kAbhWcSBFg%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D7kAbhWcSBFg&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F7kAbhWcSBFg%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="Devtoberfest, CAP Customer Roundtable, ES5 Decommissioned &amp;amp; Scavenger Hunt Clue | SAP Developer News" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1891111618"&gt;&lt;SPAN&gt;DESCRIPTION&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;PODCAST:&lt;/STRONG&gt;&amp;nbsp;&lt;A href="https://podcast.opensap.info/sap-developers/2025/10/09/sap-developer-news-october-9th-2025/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://podcast.opensap.info/sap-developers/2025/10/09/sap-developer-news-october-9th-2025/&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Devtoberfest Week 3&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/devtoberfest/gh-p/Devtoberfest" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest/gh-p/Devtoberfest&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;ES5 Decommissioned &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Andre Fischer's blog post: &lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-gateway-demo-system-will-be-de-commissioned/bc-p/13353604" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-gateway-demo-system-will-be-de-commissioned/bc-p/13353604&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;CAP Customer Roundtable 15 Oct 2025&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;All details including agenda: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-application-programming-model-cap-customer-roundtable-october/ba-p/14222428" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-application-programming-model-cap-customer-roundtable-october/ba-p/14222428&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Scavenger Hunt Clue #7&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Scavenger Hunt Main blog post: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/fun-for-week-1-the-devtoberfest-scavenger-hunt/ba-p/14183972" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest-blog-posts/fun-for-week-1-the-&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;devtoberfest-scavenger-hunt/ba-p/14183972&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Discovery Center: &lt;/SPAN&gt;&lt;A href="https://discovery-center.cloud.sap/index.html" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://discovery-center.cloud.sap/index.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Architecture Center: &lt;/SPAN&gt;&lt;A href="https://architecture.learning.sap.com/" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://architecture.learning.sap.com/&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Week 3 Puzzles blog post: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/fun-for-week-3-puzzles-puzzles-puzzles/ba-p/14234936" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest-blog-posts/fun-&lt;/SPAN&gt;&lt;/A&gt; &lt;SPAN&gt;for-week-3-puzzles-puzzles-puzzles/ba-p/14234936&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Links to the 4 Puzzles:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-sap-crossword.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://developers.sap.com/tutorials/devtoberfest2025-sap-crossword.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-sap-crossword-bonus.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://developers.sap.com/tutorials/devtoberfest2025-sap-crossword-bonus.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-fun-scramble-codejam.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://developers.sap.com/tutorials/devtoberfest2025-fun-scramble-codejam.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-fun-scramble-languages.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://developers.sap.com/tutorials/devtoberfest2025-fun-scramble-languages.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1694598113"&gt;&lt;SPAN&gt;CHAPTER TITLES&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;0:00 Intro&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:10 &lt;/SPAN&gt;&lt;SPAN&gt;Devtoberfest Week 3&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:51&lt;/SPAN&gt; &lt;SPAN&gt;ES5 Decommissioned&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1:29 &lt;/SPAN&gt;&lt;SPAN&gt;CAP Customer Roundtable 15 Oct 2025&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;2:09 Scavenger Hunt Clue #7&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1498084608"&gt;&lt;SPAN&gt;TRANSCRIPTION&lt;/SPAN&gt;&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Intro]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;This is the SAP Developer News for October 9th, 2025. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Mamikee]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Hi, everyone. Can you believe we're already wrapping up week two of Devtoberfest? It's been such a fun week, tons of coding, learning, and connecting with the community. But don't slow down just yet because week three is right around the corner and we've gotten some really exciting stuff planned. So if you want to find out what's coming up next, the challenges, the sessions, all the surprises, make sure to head over to the Devtoberfest group on communities.sap. This is where you'll find all updates on all the sessions that's going on. Check it out and keep earning your points. We'll see you in week three. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Rainey]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Howdy, SAP developers. If you're a user of the SAP developer tutorial system, there's an important migration that's been underway that you'll want to know about. We've been gradually migrating content from an older NetWeaver system called ES5 over to S/4HANA. And we're happy to say that that migration is largely complete today. As one of the final touches in this, Andre Fisher, a product manager for ABAP, has published a blog post outlining the decommissioning of the older system. You can click on a link below and get access to that information. Happy S4ing, folks. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[DJ]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;On Wednesday next week that's Wednesday the 15th of October 5pm CEST is the next installment of the CAP roundtable so it's on the horizon so I did that if you are a CAP aficionado a user a developer anybody involved in the CAP ecosphere this meeting is for you topics to discuss requirements, things to highlight, insights you want to share, then join this roundtable next Wednesday, 15th of October. See you there.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Shrini]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt; Hello, everybody. Are you ready for today's scavenger and clue? Today's clue is hidden right here in the Discovery Center. The SAP Discovery Center is packed with a lot of useful resources. You will find a mission catalog with missions to help you implement your use cases on SAP BTP. A guidance framework which gives you a clear and structured path with best practices and developer guide. Plus a service catalog for SAP BTP and AI services where you can check pricing, see available regions and explore the related missions. here is what to look for. In the Mission Catalog, search for the mission title, Setup Joule Studio with SAP Built in BTP Enterprise account. Once you open this mission, you will find the first three hexadecimal numbers of the clue. The next half of the clue can be found in the Architecture Center. Architecture Center was recently launched by SAP to showcase, share, and collaborate on reference solution architectures with the developers and architects. It has a sleek card style overview page. Head over to the tile named Exchange Joule with Joule's Toolbook. Once you land on the page, you might notice something out of place there. The next three hexadecimal numbers might be hiding there. As a part of fun activities for week 3, we have 4 brand new puzzles. Check it out in this blog post by Daniel. You can find links to all the resources in the description. Let us know about your hunt in the comments.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/developer-news/sap-developer-news-october-9th-2025/ba-p/14239602"/>
    <published>2025-10-09T21:10:00.023000+02:00</published>
  </entry>
</feed>
