<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Cloud-Application-Programming-Model-blog-posts.xml</id>
  <title>SAP Community - SAP Cloud Application Programming Model</title>
  <updated>2025-09-19T05:00:48.197178+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Cloud Application Programming Model/pd-p/9f13aee1-834c-4105-8e43-ee442775e5ce" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Cloud Application Programming Model blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AEcap-java%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%8B%E3%82%89%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88-odata-api-%E3%81%B8%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E6%89%8B%E9%A0%86/ba-p/14172974</id>
    <title>ローカルのCAP Javaプロジェクトからリモート OData API へ接続する手順</title>
    <updated>2025-08-11T08:29:06.785000+02:00</updated>
    <author>
      <name>Umezuki</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/841332</uri>
    </author>
    <content>&lt;DIV&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-call-a-remote-odata-api-from-your-local-cap-java-project/ba-p/14177098" target="_self"&gt;English Version&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1736888397"&gt;目的&lt;/H2&gt;&lt;P&gt;ローカルの CAP Java プロジェクトから、SAP S/4HANA の Sandbox OData API を呼び出してデータを取得する手順の一例をまとめます。最終的には、以下のURLにアクセスしてBusiness Partnersを取得することをゴールとします。&lt;/P&gt;&lt;P&gt;&lt;A href="http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;H2 id="toc-hId-1540374892"&gt;1. 検証時の環境&lt;/H2&gt;&lt;DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&amp;nbsp;SAP BTP トライアル環境&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;SAP Business Accelerator Hub の Sandbox 環境&lt;/LI&gt;&lt;LI&gt;開発環境: Visual Studio Code&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Maven&amp;nbsp; 3.9&lt;/LI&gt;&lt;LI&gt;OpenJDK 21&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;H2 id="toc-hId-1343861387"&gt;2. プロジェクトの作成&lt;/H2&gt;&lt;P&gt;2.1. CAP Javaプロジェクトの初期化&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds init cap-java-remote-api --add destination,xsuaa --java&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;初期化後、以下のようなプロジェクトフォルダーが作成されます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.08.10.png" style="width: 420px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298811iBF8B4C6F08704B7A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.08.10.png" alt="Screenshot 2025-08-09 at 16.08.10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.2. プロジェクトをVisual Studio Code で開く&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;code cap-java-remote-api&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.06.25.png" style="width: 305px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298812i23214A6D24A7A3C9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.06.25.png" alt="Screenshot 2025-08-09 at 16.06.25.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1147347882"&gt;3. ライブラリの追加&lt;/H2&gt;&lt;P&gt;リモート OData API に接続するには、SAP Cloud SDK と リモート OData用のライブラリが必要です。&lt;/P&gt;&lt;P&gt;3.1. ルートディレクトリのpom.xml に SAP Cloud SDK の最新のバージョンをプロパティとして追加し、dependencyManagement に sdk-bom を追加します。&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;properties&amp;gt;
    ...
    &amp;lt;!-- 最新のSDKのバージョンに置き換える --&amp;gt;
    &amp;lt;cloud-sdk.version&amp;gt;5.20.0&amp;lt;/cloud-sdk.version&amp;gt;
&amp;lt;/properties&amp;gt;
...
&amp;lt;dependencyManagement&amp;gt;
	&amp;lt;dependencies&amp;gt;
        ...
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.sap.cloud.sdk&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;sdk-bom&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${cloud-sdk.version}&amp;lt;/version&amp;gt;
            &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;
            &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
	&amp;lt;/dependencies&amp;gt;
&amp;lt;/dependencyManagement&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3.2. srv/pom.xmlに以下のライブラリを追加します。&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;
    ...
    &amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;com.sap.cds&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;cds-feature-remote-odata&amp;lt;/artifactId&amp;gt;
		&amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
	&amp;lt;/dependency&amp;gt;

	&amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;com.sap.cloud.sdk&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;sdk-core&amp;lt;/artifactId&amp;gt;
	&amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-950834377"&gt;4. ODataメタデータの取得とCSNの生成&lt;/H2&gt;&lt;P&gt;OData API を使うには、ODataのエンティティやプロパティ情報を記載したメタデータファイル(EDMX)から、CAP内部の共通モデル表現として役割を果たす、CSN形式に変換した上で、CDSでのモデリングを行う必要があります。&lt;/P&gt;&lt;P&gt;4.1. SAP&amp;nbsp;Business Accelerator HubのBusiness Partner (A2X)からEDMXをダウンロード&lt;/P&gt;&lt;P&gt;&lt;A href="https://api.sap.com/api/API_BUSINESS_PARTNER/overview" target="_blank" rel="noopener noreferrer"&gt;https://api.sap.com/api/API_BUSINESS_PARTNER/overview&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 13.31.37.png" style="width: 779px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299183iF693C036A176C0D3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 13.31.37.png" alt="Screenshot 2025-08-11 at 13.31.37.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.2. ルートディレクトリの配下に.edmxファイルを格納&lt;/P&gt;&lt;P&gt;4.3. .edmxから.csn を生成&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds import API_BUSINESS_PARTNER.edmx&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.23.04.png" style="width: 889px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298813i6925F272B6BEFB45/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.23.04.png" alt="Screenshot 2025-08-09 at 16.23.04.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;実行後、 srv/external フォルダに .edmx と .csn ファイルが生成されます。&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.23.32.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298814iD2927F42D196A41B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.23.32.png" alt="Screenshot 2025-08-09 at 16.23.32.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;加えて、application.yaml に Destination Service のテンプレート設定が追加されます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.26.16.png" style="width: 412px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298815iCE79C4F7F4E7C32C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.26.16.png" alt="Screenshot 2025-08-09 at 16.26.16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-754320872"&gt;5. 接続設定&lt;/H2&gt;&lt;P&gt;S/4HANA のような外部システムと接続する際に、他サービスからの再利用性も高く、接続先や認証情報を設定できるBTP の Destination Service を利用します。今回はSandbox 環境のため、APIKeyでの認証を行い、.envファイルにその情報を格納しますが、実運用環境では他の適切な認証方式を使用してください。&lt;/P&gt;&lt;P&gt;5.1. BTP Destination Service に S/4HANA Sandbox の情報を登録&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Name: S4Sandbox&lt;/LI&gt;&lt;LI&gt;Type: HTTP&lt;/LI&gt;&lt;LI&gt;ProxyType: Internet&lt;/LI&gt;&lt;LI&gt;URL: &lt;A href="https://sandbox.api.sap.com/s4hanacloud" target="_blank" rel="noopener noreferrer"&gt;https://sandbox.api.sap.com/s4hanacloud&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Authentication: NoAuthentication&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;Sandbox環境のため、ここではNoAuthenticationを選択し、後続のapplication.yamlにてAPIKeyを.env経由で渡します。&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 15.19.55.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298809i5D4884B8945AB664/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 15.19.55.png" alt="Screenshot 2025-08-09 at 15.19.55.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.2. .envにAPIKeyを設定&lt;/P&gt;&lt;P&gt;APIキーはBusiness Accelerator Hubから取得できます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 12.05.52.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299169iA9BA4CBFB4C9144A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 12.05.52.png" alt="Screenshot 2025-08-11 at 12.05.52.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;APIKey=&amp;lt;Business Accelerator Hubで取得したAPIキー&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5.3. application.yamlで接続先の設定&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds:
  remote:
    services:
      API_BUSINESS_PARTNER:
        destination:
          # 対象のDestination Serviceで登録したDestination名を記載する
          name: S4Sandbox
        http:
          suffix: /sap/opu/odata/sap
          # Sandbox APIを使用する場合には、APIKeyをHTTPヘッダーに入れる必要がある
          headers:
            # 環境変数のAPIKeyを参照する
            APIKey: ${APIKey}
        type: odata-v2&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-557807367"&gt;6. サービスモデルとハンドラの実装&lt;/H2&gt;&lt;P&gt;6.1 srv/business-partner-service.cdsにサービスモデルを実装&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;using {API_BUSINESS_PARTNER as bp} from './external/API_BUSINESS_PARTNER';

service BusinessPartnerService @(requires: 'any') {
    entity BusinessPartner as projection on bp.A_BusinessPartner {
        key A_BusinessPartner.BusinessPartner,
            A_BusinessPartner.BusinessPartnerName,
            A_BusinessPartner.BusinessPartnerFullName
    };
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;先ほど作成した .csn に含まれる API_BUSINESS_PARTNER を投影し、サービスモデルのエンティティ BusinessPartner を定義します。また、セキュリティについては範囲外としますので、requires部分は'any'としています。&lt;/P&gt;&lt;P&gt;6.2. srv/src/main/java/customer/cap_java_remote_api/handlers/BusinessPartnerHandler.javaにハンドラを実装&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;package customer.cap_java_remote_api.handlers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.sap.cds.Result;
import com.sap.cds.services.cds.CdsReadEventContext;
import com.sap.cds.services.handler.EventHandler;
import com.sap.cds.services.handler.annotations.On;
import com.sap.cds.services.handler.annotations.ServiceName;

import cds.gen.api_business_partner.ApiBusinessPartner;
import cds.gen.businesspartnerservice.BusinessPartner_;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Component
@ServiceName("BusinessPartnerService")
public class BusinessPartnerHandler implements EventHandler {

    @Autowired
    ApiBusinessPartner remoteBp;

    private static final Logger logger = LoggerFactory.getLogger(BusinessPartnerHandler.class);
    // このブログサービスの仕様でアットマークとそれに付随する文字列が消えてしまいます。下記のコードに置き換えてください。
    (entity = BusinessPartner_.CDS_NAME)
    public Result readBusinessPartner(CdsReadEventContext context) {
        try {
            logger.info("Reading Business Partner data from S/4HANA with CQN: {}", context.getCqn());
            return remoteBp.run(context.getCqn());
        } catch (Exception e) {
            logger.error("Error while reading Business Partner data from S/4HANA.", e);
            throw new RuntimeException(e);
        }
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;上記でコメントした行をこちらに置き換えてください。&lt;/P&gt;&lt;P&gt;'@On(entity = BusinessPartner_.CDS_NAME)'&lt;/P&gt;&lt;P&gt;また、CQNを使用する際は、CqnServiceを継承したインターフェイスを使用します。今回でいうと、remoteBpのインターフェイスであるApiBusinessPartnerは、CqnServiceを継承しています。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 12.12.57.png" style="width: 552px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299173i326FDDD8D81D45EE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 12.12.57.png" alt="Screenshot 2025-08-11 at 12.12.57.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-361293862"&gt;7. デプロイ準備&lt;/H2&gt;&lt;P&gt;ローカルで開発したCAP JavaアプリケーションをSAP BTPのCloud Foundry環境へデプロイするための準備を行います。&lt;/P&gt;&lt;P&gt;7.1. MTAファイルの作成&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add mta&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;mta.yamlが生成されますが、modulesに記載のcap-java-remote-api-srvが生成されただけではなく、プロジェクト初期化の際にaddオプションでつけた、xsuaaとdestinationがそれぞれバッキングサービスとしてresourcesに記載されていることが確認できます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 12.41.58.png" style="width: 686px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299179iB3A160479CC7927D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 12.41.58.png" alt="Screenshot 2025-08-11 at 12.41.58.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;加えて、srv/pom.xmlに以下のライブラリが追加されます。&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;
    ...
    &amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;com.sap.cds&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;cds-starter-cloudfoundry&amp;lt;/artifactId&amp;gt;
		&amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
	&amp;lt;/dependency&amp;gt;

	&amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;spring-boot-starter-actuator&amp;lt;/artifactId&amp;gt;
	&amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7.2. ビルド&amp;amp;ローカルリポジトリへのインストール&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;mvn clean install&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-164780357"&gt;8. BTPへデプロイ&lt;/H2&gt;&lt;P&gt;8.1. mtarファイルの作成&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;mbt build --mtar archive
#  CAPを扱う際には、前回のビルド成果物を削除したいケースが多いので、
# 下記のコマンドを叩くことが多いです。
# rm -rf mta_archives &amp;amp;&amp;amp; mbt build --mtar archive&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.2. 対象のCloud Foundry環境を選択&lt;/P&gt;&lt;P&gt;BTP CockpitのサブアカウントページからAPI Endpointを取得できます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.29.40.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299029i1200738CD3FE787D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.29.40.png" alt="Screenshot 2025-08-10 at 20.29.40.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf api &amp;lt;対象のCFエンドポイント&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.3. Cloud Foundryにログイン&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf login&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.4. Cloud Foundryにデプロイ&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf deploy mta_archives/archive.mtar
# デプロイが失敗した時には三度のリトライがデフォルトで実施されますが、
# 一度だけで済ませても問題ないケースが多いので、時間短縮のために、下記のコマンドをよく使います。
# cf deploy mta_archives/archive.mtar --retries 1&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;8.5. BTP Cockpitでデプロイ結果を確認&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.36.06.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299032i81C64DCDA2B57375/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.36.06.png" alt="Screenshot 2025-08-10 at 20.36.06.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--31733148"&gt;9. ローカルからリモートAPIへアクセス&lt;/H2&gt;&lt;P&gt;最後に、ローカル環境からリモートOData APIにアクセスします。そのためには、BTPにデプロイしたバッキングサービスをローカルにバインドする必要があります。&lt;/P&gt;&lt;P&gt;9.1. BTP上のxsuaaとdestinationをローカルにバインド&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds bind auth --to cap-java-remote-api-auth
cds bind destination --to cap-java-remote-api-destination&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;このバインドにより、ハイブリッド環境用のバッキングサービスの設定が行えます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.50.26.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299035iD96558F42CFCFD43/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.50.26.png" alt="Screenshot 2025-08-10 at 20.50.26.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9.2. Hybrid Testing&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds bind --exec -- mvn spring-boot:run&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9.3. 対象エンドポイントにて、結果を確認&lt;/P&gt;&lt;P&gt;&lt;A href="http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.48.22.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299034i2089150842E7A939/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.48.22.png" alt="Screenshot 2025-08-10 at 20.48.22.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;CAP Javaプロジェクトのお役に立てれば幸いです！&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AEcap-java%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%8B%E3%82%89%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88-odata-api-%E3%81%B8%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E6%89%8B%E9%A0%86/ba-p/14172974"/>
    <published>2025-08-11T08:29:06.785000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-call-a-remote-odata-api-from-your-local-cap-java-project/ba-p/14177098</id>
    <title>How to Call a Remote OData API from Your Local CAP Java Project</title>
    <updated>2025-08-11T08:29:09.172000+02:00</updated>
    <author>
      <name>Umezuki</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/841332</uri>
    </author>
    <content>&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AEcap-java%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%8B%E3%82%89%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88-odata-api-%E3%81%B8%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E6%89%8B%E9%A0%86/ba-p/14172974" target="_self"&gt;Japanese version&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1737028769"&gt;Objective&lt;/H2&gt;&lt;P&gt;This post walks you through how to call the SAP S/4HANA sandbox OData API from a local CAP Java project.&lt;BR /&gt;The final goal is to call the following endpoint and retrieve a list of business partners:&lt;BR /&gt;&lt;A href="http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1540515264"&gt;1. Testing Environment&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;SAP BTP Trial&lt;/LI&gt;&lt;LI&gt;SAP Business Accelerator Hub – Sandbox&lt;/LI&gt;&lt;LI&gt;IDE: Visual Studio Code&lt;/LI&gt;&lt;LI&gt;Maven 3.9&lt;/LI&gt;&lt;LI&gt;OpenJDK 21&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1344001759"&gt;2. Project Setup&amp;nbsp;&lt;/H2&gt;&lt;P&gt;2.1 Initialize a CAP Java project&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds init cap-java-remote-api --add destination,xsuaa --java&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The command creates the following folder structure:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.08.10.png" style="width: 420px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298811iBF8B4C6F08704B7A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.08.10.png" alt="Screenshot 2025-08-09 at 16.08.10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.2 Open the project in VS Code&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;code cap-java-remote-api&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.06.25.png" style="width: 305px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298812i23214A6D24A7A3C9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.06.25.png" alt="Screenshot 2025-08-09 at 16.06.25.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1147488254"&gt;3. Add Required Libraries&lt;/H2&gt;&lt;P&gt;To call a remote OData service you need both the SAP Cloud SDK and the CAP library for remote OData.&lt;/P&gt;&lt;P&gt;3.1 Add the&amp;nbsp; latest SDK version to the properties and the Cloud SDK BOM to the root pom.xml&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;properties&amp;gt;
    ...
    &amp;lt;!-- Replace with the latest SDK version --&amp;gt;
    &amp;lt;cloud-sdk.version&amp;gt;5.20.0&amp;lt;/cloud-sdk.version&amp;gt;
&amp;lt;/properties&amp;gt;
...
&amp;lt;dependencyManagement&amp;gt;
	&amp;lt;dependencies&amp;gt;
        ...
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.sap.cloud.sdk&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;sdk-bom&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${cloud-sdk.version}&amp;lt;/version&amp;gt;
            &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;
            &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
	&amp;lt;/dependencies&amp;gt;
&amp;lt;/dependencyManagement&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3.2 Add the following dependencies to srv/pom.xml&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;
    ...
    &amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;com.sap.cds&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;cds-feature-remote-odata&amp;lt;/artifactId&amp;gt;
		&amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
	&amp;lt;/dependency&amp;gt;

	&amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;com.sap.cloud.sdk&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;sdk-core&amp;lt;/artifactId&amp;gt;
	&amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-950974749"&gt;4. Fetch OData Metadata and Generate CSN&lt;/H2&gt;&lt;P&gt;CAP needs a CSN file, so you must first download the EDMX file and convert it.&lt;/P&gt;&lt;P&gt;4.1 Download the Business Partner (A2X) EDMX from the SAP Business Accelerator Hub&lt;BR /&gt;&lt;A href="https://api.sap.com/api/API_BUSINESS_PARTNER/overview" target="_blank" rel="noopener noreferrer"&gt;https://api.sap.com/api/API_BUSINESS_PARTNER/overview&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 13.31.37.png" style="width: 779px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299183iF693C036A176C0D3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 13.31.37.png" alt="Screenshot 2025-08-11 at 13.31.37.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.2 Place the .edmx file in the project’s root folder.&lt;/P&gt;&lt;P&gt;4.3 Generate a .csn file from the .edmx&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds import API_BUSINESS_PARTNER.edmx&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.23.04.png" style="width: 889px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298813i6925F272B6BEFB45/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.23.04.png" alt="Screenshot 2025-08-09 at 16.23.04.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After execution, both the .edmx and .csn files appear in srv/external.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.23.32.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298814iD2927F42D196A41B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.23.32.png" alt="Screenshot 2025-08-09 at 16.23.32.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;A template for the Destination Service is also added to application.yaml.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.26.16.png" style="width: 412px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298815iCE79C4F7F4E7C32C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.26.16.png" alt="Screenshot 2025-08-09 at 16.26.16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-754461244"&gt;5. Connectivity Configuration&lt;/H2&gt;&lt;P&gt;You will use the BTP Destination Service to store the connectivity settings such as the URL and authentication. Because you are calling the sandbox, authentication is done via an API Key stored in a local .env file. In a productive scenario you would switch to a more secure authentication method.&lt;/P&gt;&lt;P&gt;5.1 Create a destination in BTP&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Name: S4Sandbox&lt;/LI&gt;&lt;LI&gt;Type: HTTP&lt;/LI&gt;&lt;LI&gt;ProxyType: Internet&lt;/LI&gt;&lt;LI&gt;URL: &lt;A href="https://sandbox.api.sap.com/s4hanacloud" target="_blank" rel="noopener noreferrer"&gt;https://sandbox.api.sap.com/s4hanacloud&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Authentication: NoAuthentication&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 15.19.55.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298809i5D4884B8945AB664/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 15.19.55.png" alt="Screenshot 2025-08-09 at 15.19.55.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.2 Store the API Key in .env&lt;/P&gt;&lt;P&gt;You can get the API Key on Business Accelerator Hub.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 12.05.52.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299169iA9BA4CBFB4C9144A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 12.05.52.png" alt="Screenshot 2025-08-11 at 12.05.52.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;APIKey=&amp;lt;your-API-key-from-Business-Accelerator-Hub&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5.3 Configure the destination in application.yaml&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds:
  remote:
    services:
      API_BUSINESS_PARTNER:
        destination:
          # Name of the destination you just created
          name: S4Sandbox
        http:
          suffix: /sap/opu/odata/sap
          # The sandbox requires the API Key in a header
          headers:
            # Read from the env file
            APIKey: ${APIKey}
        type: odata-v2&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-557947739"&gt;6. Service Model and Handler&lt;/H2&gt;&lt;P&gt;6.1 Define the service model in srv/business-partner-service.cds&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;using {API_BUSINESS_PARTNER as bp} from './external/API_BUSINESS_PARTNER';

service BusinessPartnerService @(requires: 'any') {
    entity BusinessPartner as projection on bp.A_BusinessPartner {
        key A_BusinessPartner.BusinessPartner,
            A_BusinessPartner.BusinessPartnerName,
            A_BusinessPartner.BusinessPartnerFullName
    };
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Project the API_BUSINESS_PARTNER definition from the .csn file you just created and use it to define the BusinessPartner entity in your service model. You can ignore the security perspectives on this tutorial, so you just need to add 'any' to the requires value.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;6.2 Implement the handler in&lt;BR /&gt;srv/src/main/java/customer/cap_java_remote_api/handlers/BusinessPartnerHandler.java&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;package customer.cap_java_remote_api.handlers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.sap.cds.Result;
import com.sap.cds.services.cds.CdsReadEventContext;
import com.sap.cds.services.handler.EventHandler;
import com.sap.cds.services.handler.annotations.On;
import com.sap.cds.services.handler.annotations.ServiceName;

import cds.gen.api_business_partner.ApiBusinessPartner;
import cds.gen.businesspartnerservice.BusinessPartner_;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Component
@ServiceName("BusinessPartnerService")
public class BusinessPartnerHandler implements EventHandler {

    @Autowired
    ApiBusinessPartner remoteBp;

    private static final Logger logger = LoggerFactory.getLogger(BusinessPartnerHandler.class);
    // This blogging platform strips out the “@” symbol and 'On' that follows it, so please replace the above line with the code shown below.
    (entity = BusinessPartner_.CDS_NAME)
    public Result readBusinessPartner(CdsReadEventContext context) {
        try {
            logger.info("Reading Business Partner data from S/4HANA with CQN: {}", context.getCqn());
            return remoteBp.run(context.getCqn());
        } catch (Exception e) {
            logger.error("Error while reading Business Partner data from S/4HANA.", e);
            throw new RuntimeException(e);
        }
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Please replace the commented line above with the following code:&lt;/P&gt;&lt;P&gt;'@On(entity = BusinessPartner_.CDS_NAME)'&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When you work with CQN, use an interface that extends CqnService. In this case, the interface for remoteBp, ApiBusinessPartner, does exactly that: it extends CqnService.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 12.12.57.png" style="width: 552px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299173i326FDDD8D81D45EE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 12.12.57.png" alt="Screenshot 2025-08-11 at 12.12.57.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-361434234"&gt;7. Prepare for Deployment&lt;/H2&gt;&lt;P&gt;7.1 Generate an MTA descriptor&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add mta&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The generated mta.yaml now contains a module (cap-java-remote-api-srv) and the backing services (xsuaa, destination) that you added during init.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 12.41.58.png" style="width: 686px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299179iB3A160479CC7927D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 12.41.58.png" alt="Screenshot 2025-08-11 at 12.41.58.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The following dependencies are also auto-added to srv/pom.xml:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;
    ...
    &amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;com.sap.cds&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;cds-starter-cloudfoundry&amp;lt;/artifactId&amp;gt;
		&amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
	&amp;lt;/dependency&amp;gt;

	&amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;spring-boot-starter-actuator&amp;lt;/artifactId&amp;gt;
	&amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7.2 Build the project and install to your local Maven repo&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;mvn clean install&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-164920729"&gt;8. Deploy to BTP&lt;/H2&gt;&lt;P&gt;8.1 Create an .mtar file&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;mbt build --mtar archive
# It is often useful to clean old artifacts:
# rm -rf mta_archives &amp;amp;&amp;amp; mbt build --mtar archive&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.2 Target the correct Cloud Foundry org/space&lt;/P&gt;&lt;P&gt;You can obtain the targeted Endpoint from the BTP Cockpit:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.29.40.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299029i1200738CD3FE787D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.29.40.png" alt="Screenshot 2025-08-10 at 20.29.40.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf api &amp;lt;your Cloud Foundry endpoint&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.3 Log in to Cloud Foundry&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf login&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.4 Deploy to Cloud Foundry&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf deploy mta_archives/archive.mtar
# Skip the default 3 retries to save time:
# cf deploy mta_archives/archive.mtar --retries 1&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.5 Verify the deployment in the BTP Cockpit&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.36.06.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299032i81C64DCDA2B57375/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.36.06.png" alt="Screenshot 2025-08-10 at 20.36.06.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--31592776"&gt;9. Access the Remote API from Your Local Environment&lt;/H2&gt;&lt;P&gt;Because the backing services live on BTP, you need to bind them locally for hybrid testing.&lt;/P&gt;&lt;P&gt;9.1 Bind xsuaa and destination locally&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds bind auth --to cap-java-remote-api-auth
cds bind destination --to cap-java-remote-api-destination&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.50.26.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299035iD96558F42CFCFD43/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.50.26.png" alt="Screenshot 2025-08-10 at 20.50.26.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9.2 Run the application in hybrid mode&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds bind --exec -- mvn spring-boot:run&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9.3 Open the endpoint&lt;/P&gt;&lt;P&gt;&lt;A href="http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner&lt;/A&gt;&lt;/P&gt;&lt;P&gt;You should now see the list of business partners fetched from the SAP S/4HANA sandbox.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.48.22.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299034i2089150842E7A939/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.48.22.png" alt="Screenshot 2025-08-10 at 20.48.22.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I hope this helps you kick-start your CAP Java project!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-call-a-remote-odata-api-from-your-local-cap-java-project/ba-p/14177098"/>
    <published>2025-08-11T08:29:09.172000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/create-cds-views-and-expose-through-odata-service-in-capm/ba-p/14173298</id>
    <title>Create CDS Views and expose through OData service in CAPM</title>
    <updated>2025-08-11T11:58:32.804000+02:00</updated>
    <author>
      <name>VenkateshMundru</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/44269</uri>
    </author>
    <content>&lt;P&gt;Hi, in this blog I’m going to explain how to create CDS Views and expose through OData service in CAPM.&lt;/P&gt;&lt;P&gt;Here we have discussion about to create CDS views and expose through OData service&amp;nbsp;&lt;SPAN&gt;on SAP Business Application Studio with Cloud Application Programming Model (CAPM).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;Step-1:&lt;/U&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;We have to create a CAPM application with Business Application Studio.&amp;nbsp;&lt;/SPAN&gt;Create a new folder in workspace with name "zviewcreation".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VenkateshMundru_0-1754475868584.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297104i06C2219543BC783F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="VenkateshMundru_0-1754475868584.png" alt="VenkateshMundru_0-1754475868584.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-2:&amp;nbsp;&lt;/STRONG&gt;Open terminal and enter "cds init" to initialize the cap application. You can see db, srv and app folders are created.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VenkateshMundru_1-1754475934865.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297105iC2791D8CEDE9C1D7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="VenkateshMundru_1-1754475934865.png" alt="VenkateshMundru_1-1754475934865.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-3:&lt;/STRONG&gt; Now create new file in db folder as "data-model.cds" and add entities "products" and "orderitems" as below.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;namespace zviewcreation.db;

entity products {
    key ID            : UUID;
        PRODUCT_ID    : String(30);
        PRODUCT_NAME  : String(250);
        CATEGORY      : String(32);
        CURRENCY_CODE : String(4);
        PRICE         : Decimal(15, 2);
        orderitem     : Association to one orderitems;
}

entity orderitems {
    key NODE_KEY   : UUID;
        ORDER_ID   : String(30);
        ORDER_DATE : Date;
        products   : Association to many products
                         on products.orderitem = $self;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step-4:&lt;/STRONG&gt;&amp;nbsp;Now create new file in db folder as "cdsview.cds" and add views "Product" and "productsOrders" as below.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;namespace zviewcreation.dbview;

using {zviewcreation.db} from './data-model';

define view ![Product] as
    select from db.products {
        PRODUCT_ID         as ![ProductId],
        PRODUCT_NAME       as ![ProductName],
        PRICE              as ![Price],
        CURRENCY_CODE      as ![Currency],
        orderitem.NODE_KEY as ![OrderKey]

    }

define view ![ProductsOrders] as
    select from db.orderitems
    mixin {
        PRODUCTS : Association[ * ] to Product
                       on PRODUCTS.OrderKey = $projection.OrderKey
    }
    into {
        NODE_KEY   as ![OrderKey],
        ORDER_ID   as ![OrderId],
        ORDER_DATE as ![OrderDate],
        PRODUCTS   as ![Products]

    }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step-5:&lt;/STRONG&gt;&amp;nbsp;Create new file in srv folder with name "catservice.cds" and expose our cds view as entity set.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;using { zviewcreation.dbview } from '../db/cdsview';

service MyService @(path: 'ProductsSrv') {

    entity ProductsOrdersSet as projection on dbview.ProductsOrders;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step-6:&lt;/STRONG&gt;&amp;nbsp;Install node modules using "npm install" in terminal.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 940px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297118iF747D536B1A37099/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-7:&lt;/STRONG&gt;&amp;nbsp;Now run the application using "cds watch" .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 940px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297120iCA23E0EC88F28ACF/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-8:&amp;nbsp;&lt;/STRONG&gt;You will be able to see our OData service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 938px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297123i36077E34983154E0/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-9:&lt;/STRONG&gt;&amp;nbsp;You can add data to our entities by doing "cds add data" in terminal. As a result 2 files will be added in data folder in db folder in the format of "&amp;lt;your namespace&amp;gt;-&amp;lt;entity name&amp;gt;.csv".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 932px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297124i3EF5533C34AADF7E/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-10:&lt;/STRONG&gt;&amp;nbsp;Add some sample data to both files as below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 940px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297125i047D3DA1CCCB9BB0/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 940px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297126iCD8D14B238B906E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-11:&lt;/STRONG&gt;&amp;nbsp;Now again do "cds watch" and select "ProductsOrdersSet" to see the data.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 932px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297127i744E3ABA0CC3260B/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-12:&lt;/STRONG&gt;&amp;nbsp;Now you can able to see ProductsOrdersSet data.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 932px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297128iF65929A29FA5ECE9/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-13:&lt;/STRONG&gt;&amp;nbsp;Add "?$expand=Products" at end of the url and you will able to see all the data of orders with respective products.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 932px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297129iBCE5E324FA3247E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;That’s it!!!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/create-cds-views-and-expose-through-odata-service-in-capm/ba-p/14173298"/>
    <published>2025-08-11T11:58:32.804000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cap-with-local-app-previews-tips-for-smooth-development/ba-p/14182208</id>
    <title>CAP with Local App Previews – Tips for Smooth Development</title>
    <updated>2025-08-16T23:18:43.039000+02:00</updated>
    <author>
      <name>MioYasutake</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/789</uri>
    </author>
    <content>&lt;P&gt;UI5 has recently introduced Virtual Endpoints, eliminating the need for sandbox files and reducing maintenance effort in local previews. For details, please read the blog post below:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-local-app-previews-virtual-endpoints-for-seamless-development/ba-p/14155498" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-local-app-previews-virtual-endpoints-for-seamless-development/ba-p/14155498&lt;/A&gt;&lt;/P&gt;&lt;P&gt;I have tried virtual endpoints with CAP Node.js, and would like to share a few things I noticed.&lt;/P&gt;&lt;H2 id="toc-hId-1737804978"&gt;TypeScript as a prerequisite&lt;/H2&gt;&lt;P&gt;By default, you will not see the "Use virtual endpoints for local preview" option. This option becomes available once you enable TypeScript.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MioYasutake_1-1755378123535.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301676i9C15CBFE7B00C3BA/image-size/large?v=v2&amp;amp;px=999" role="button" title="MioYasutake_1-1755378123535.png" alt="MioYasutake_1-1755378123535.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1541291473"&gt;Select the #app-preview endpoint for testing the app inside Fiori Launchpad&lt;/H2&gt;&lt;P&gt;When you start the server with `cds watch`, you will see several options for opening the app. The &lt;STRONG&gt;#app-preview&lt;/STRONG&gt; option is optimal choice for testing the app inside the Fiori Launchpad (sandbox).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MioYasutake_2-1755378271155.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301677i97D3522689B30B7C/image-size/large?v=v2&amp;amp;px=999" role="button" title="MioYasutake_2-1755378271155.png" alt="MioYasutake_2-1755378271155.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1344777968"&gt;Reinstall dependencies after build&lt;/H2&gt;&lt;P&gt;After building the MTA, you will not see the virtual endpoints anymore. This is due to the `&lt;STRONG&gt;npm ci&lt;/STRONG&gt;` command executed during the build (I haven't dug deeper into the cause). To enable the virtual endpoints again, simply run `&lt;STRONG&gt;npm install&lt;/STRONG&gt;`.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MioYasutake_3-1755378833726.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301678i8AD1EF823485958D/image-size/large?v=v2&amp;amp;px=999" role="button" title="MioYasutake_3-1755378833726.png" alt="MioYasutake_3-1755378833726.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;That's it. I hope this post is useful.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cap-with-local-app-previews-tips-for-smooth-development/ba-p/14182208"/>
    <published>2025-08-16T23:18:43.039000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-business-technology-platform-blue-green-deployment-approach-in-sap-btp/ba-p/14179173</id>
    <title>SAP Business Technology Platform Blue-Green Deployment Approach in SAP BTP Cloud foundry</title>
    <updated>2025-08-22T14:05:01.013000+02:00</updated>
    <author>
      <name>anmolbhatia003</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/681888</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;What is Blue-Green Deployment?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Blue-Green Deployment in &lt;STRONG&gt;SAP BTP Cloud Foundry&lt;/STRONG&gt; is a reliable strategy for updating applications with &lt;STRONG&gt;zero downtime&lt;/STRONG&gt; and minimal risk. The concept revolves around maintaining two identical environments:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Blue&lt;/STRONG&gt; – the current live environment actively serving users.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Green&lt;/STRONG&gt; – the new version of the application, deployed in parallel for testing and validation.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;While end-users continue working in the &lt;STRONG&gt;Blue&lt;/STRONG&gt; environment, developers can safely deploy and verify the updated application in &lt;STRONG&gt;Green&lt;/STRONG&gt;. This allows for functional testing, performance checks, and integration validation without affecting live operations.&lt;/P&gt;&lt;P&gt;Once the &lt;STRONG&gt;Green&lt;/STRONG&gt; environment is confirmed to be stable and fully functional, traffic is seamlessly redirected from &lt;STRONG&gt;Blue&lt;/STRONG&gt; to &lt;STRONG&gt;Green&lt;/STRONG&gt;, making it the new production environment. If any issues arise after the switch, rollback is straightforward—traffic can quickly be pointed back to &lt;STRONG&gt;Blue&lt;/STRONG&gt;, ensuring business continuity.&lt;/P&gt;&lt;P&gt;SAP BTP supports this deployment approach through the &lt;STRONG&gt;Cloud Foundry CLI&lt;/STRONG&gt; and &lt;STRONG&gt;Multi-Target Application (MTA) deployment tools&lt;/STRONG&gt;, making it particularly well-suited for rolling out updates to mission-critical business applications where even a few minutes of downtime is unacceptable. This method not only improves release reliability but also enhances user confidence in the stability of new updates.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Key Advantages:&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Zero Downtime Deployments&lt;/LI&gt;&lt;LI&gt;Quick Rollback&lt;/LI&gt;&lt;LI&gt;Improved Business Continuity&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Restriction&lt;/STRONG&gt;&lt;/FONT&gt;:&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;EM&gt;&lt;STRONG&gt;Blue Green deployment is supported only for cloud foundry application. It is not supported for there bounded services, such as workflow content and HTM5 repository content and others.&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;I assume that you have knowledge of:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;BR /&gt;1. Knowledge of SAP BTP CAPM development.&lt;BR /&gt;2. SAP BTP Cloud Foundry&lt;BR /&gt;3. Basic Postman&lt;BR /&gt;4. OData API understanding.&lt;/P&gt;&lt;P&gt;Demonstration:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Assume you're working on a BTP CAPM project that has already been deployed in the Cloud Foundry environment. Below is a screenshot of a basic CAPM project containing two entities:&lt;BR /&gt;Books and Authors&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="anmolbhatia003_1-1755059812771.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300104iE15B0C45F3EBFF06/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_1-1755059812771.png" alt="anmolbhatia003_1-1755059812771.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Below is a screenshot of Cloud Foundry Space, showing the live services&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_2-1755059828675.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300105iC6AD1060A2D4BF89/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_2-1755059828675.png" alt="anmolbhatia003_2-1755059828675.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Below is a screenshot of calling the service using Postman:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_3-1755059847296.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300106iAE0271D833F09787/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_3-1755059847296.png" alt="anmolbhatia003_3-1755059847296.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_4-1755059858085.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300107i9E83267063D37D79/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_4-1755059858085.png" alt="anmolbhatia003_4-1755059858085.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;The above CAP project has been built and deployed in the Cloud Foundry environment. A new requirement has now been introduced to create an additional entity named 'E-Books'&lt;/P&gt;&lt;P&gt;Modify the entity and service .cds file as below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_5-1755059890453.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300108i34808528754FDC3E/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_5-1755059890453.png" alt="anmolbhatia003_5-1755059890453.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can test the services locally by executing Command: “cds watch”&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_6-1755059900518.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300109iBC1E8621B632D7C4/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_6-1755059900518.png" alt="anmolbhatia003_6-1755059900518.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now, we build the project using&lt;BR /&gt;1.CLI: cds build –production. OR&lt;BR /&gt;2.Right Click MTA file and build.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_7-1755059914867.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300110i9E19CB655FF81B78/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_7-1755059914867.png" alt="anmolbhatia003_7-1755059914867.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The Build will start:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_8-1755059923214.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300111iE556B21AF5585629/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_8-1755059923214.png" alt="anmolbhatia003_8-1755059923214.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;After the build is finished, change the directory to "mta_archives", using command:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;gt;&amp;gt;&amp;gt;&amp;nbsp; cd mta_archives&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_9-1755059932869.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300112iD18B38FE44626C95/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_9-1755059932869.png" alt="anmolbhatia003_9-1755059932869.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We will now use the Blue-Green deployment strategy to carry out testing before promoting the changes to the live environment.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Please note we need to make use of CLI to use the strategy.&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Command format:&lt;BR /&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; cf deploy &amp;lt;your-mta-archive-v2&amp;gt; --strategy blue-green&lt;/P&gt;&lt;P&gt;Actual Command (for the project):&lt;BR /&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;nbsp; cf deploy BlueGreenDemo_v1_1.0.0.mtar --strategy blue-green&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_10-1755059950313.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300113iA9FFD676D16064D2/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_10-1755059950313.png" alt="anmolbhatia003_10-1755059950313.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The deployment process will begin shortly. You can monitor its progress—a new service instance with the suffix -idle will be created as part of the Blue-Green deployment strategy&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_11-1755059960238.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300114iA592FA5E5DEE001B/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_11-1755059960238.png" alt="anmolbhatia003_11-1755059960238.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_12-1755059965699.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300115i3850D2950AD80204/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_12-1755059965699.png" alt="anmolbhatia003_12-1755059965699.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Finally, the service are now deployed.&lt;/P&gt;&lt;P&gt;Save the following commands, as this specifies the process ID’s of blue green deployment.&lt;BR /&gt;Use "cf deploy -i 2355087a-572f-11f0-aeea-eeee0a8c175e -a abort" to abort the process.&lt;BR /&gt;Use "cf deploy -i 2355087a-572f-11f0-aeea-eeee0a8c175e -a resume" to resume the process.process.&lt;BR /&gt;Hint: Use the "--skip-testing-phase" option of the deploy command to skip this phase.&lt;/P&gt;&lt;P&gt;Hint: Incase the above process id is lost because of terminal closed. You can get the process id using command&lt;BR /&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; cf mta-ops&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_13-1755059979972.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300116i3BE41F3BA669D7F1/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_13-1755059979972.png" alt="anmolbhatia003_13-1755059979972.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_14-1755059987254.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300117iD4F0E71362B23F9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_14-1755059987254.png" alt="anmolbhatia003_14-1755059987254.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Also, the above shows the status that action is required for MTA to either be aborted or resumed.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 9:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Check under the cloud foundry dev space in SAP BTP:&lt;BR /&gt;As seen in the screenshot below:&lt;BR /&gt;We have and Idle and live services running.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_15-1755060018835.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300118iA232B5B20654F532/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_15-1755060018835.png" alt="anmolbhatia003_15-1755060018835.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 10:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Check the service status using CLI :&lt;BR /&gt;Command: cf apps&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_16-1755060031256.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300119iA28AC53FEE9963CC/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_16-1755060031256.png" alt="anmolbhatia003_16-1755060031256.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let’s test the idle service using postman:&lt;BR /&gt;The Idle service has 3 entities defined in it:&lt;BR /&gt;1.Books&lt;BR /&gt;2.Authors&lt;BR /&gt;3.Ebooks&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_17-1755060042182.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300120iCA75EE8D91B072D8/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_17-1755060042182.png" alt="anmolbhatia003_17-1755060042182.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let’s check the live services as of now:&lt;BR /&gt;The live services are still showing 2 entities:&lt;BR /&gt;1.Authors&lt;BR /&gt;2.Books&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_18-1755060055553.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300121i20AE51E531ECC1CE/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_18-1755060055553.png" alt="anmolbhatia003_18-1755060055553.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 11:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Let check the commands that were saved during the deployment:&lt;BR /&gt;Use "cf deploy -i 2355087a-572f-11f0-aeea-eeee0a8c175e -a abort" to abort the process.&lt;/P&gt;&lt;P&gt;The above command is used to abort the deployment process. This is typically done when the changes deployed to the idle service do not meet the requirements. In such cases, the deployment process can be safely aborted without affecting the live environment, thereby preventing unintended changes from being promoted to production and preventing the effort of reverting the changes.&lt;BR /&gt;However please note:&lt;BR /&gt;This action does not perform a rollback, and the state of apps, routes and services remains unchanged. Depending on your needs, you might want to remove the new app versions and the temporary routes.&lt;BR /&gt;Let’s use the command to see the effects of:&lt;BR /&gt;As soon as you use the command, the process is aborted:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_19-1755060072766.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300122i6CB4C3B97D1E3484/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_19-1755060072766.png" alt="anmolbhatia003_19-1755060072766.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;However, the idle routes are still available and active&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_20-1755060081670.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300123iEC4396D4FE8FD2C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_20-1755060081670.png" alt="anmolbhatia003_20-1755060081670.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Use "cf deploy -i 2355087a-572f-11f0-aeea-eeee0a8c175e -a resume" to resume the process&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_21-1755060092064.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300124i30037448A850EF0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_21-1755060092064.png" alt="anmolbhatia003_21-1755060092064.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The deployment starts again:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_22-1755060099645.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300125iFF1AED954415CB2D/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_22-1755060099645.png" alt="anmolbhatia003_22-1755060099645.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Checking in the Cloud foundry the idle and live service are not removed and a live service is activated.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_23-1755060109172.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300126i35FCA63F6AA7BD78/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_23-1755060109172.png" alt="anmolbhatia003_23-1755060109172.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;EM&gt;&lt;STRONG&gt;References:&lt;/STRONG&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;1.&amp;nbsp;&lt;A href="https://learning.sap.com/learning-journeys/developing-applications-on-sap-btp-cloud-foundry-runtime/implementing-blue-green-deployment-with-sap-btp-cloud-foundry-runtime-for-zero-downtime-updates" target="_self" rel="noopener noreferrer"&gt;Implementing Blue-Green Deployment with SAP BTP, Cloud Foundry Runtime for Zero Downtime Updates&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;2.&amp;nbsp;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/blue-green-deployment-strategy?q=blue+green+deployment" target="_self" rel="noopener noreferrer"&gt;Blue-Green-Deployment-strategy&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-business-technology-platform-blue-green-deployment-approach-in-sap-btp/ba-p/14179173"/>
    <published>2025-08-22T14:05:01.013000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/multiple-ways-to-give-feedback-on-cap-documentation/ba-p/14199559</id>
    <title>Multiple Ways to Give Feedback on CAP Documentation</title>
    <updated>2025-08-29T16:06:20.583000+02:00</updated>
    <author>
      <name>Ren</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13759</uri>
    </author>
    <content>&lt;P&gt;At CAP, we believe great documentation is a collaborative effort. That's why we've built multiple channels for you to share feedback, report issues, and contribute improvements. Whether you spot a typo, need clarification, or want to suggest new content, we've got you covered.&lt;/P&gt;&lt;H2 id="toc-hId-1738940075"&gt;Quick Feedback: "Was This Page Helpful?&lt;/H2&gt;&lt;P&gt;The fastest way to give feedback is right at the bottom of every documentation page.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ren_0-1756475138757.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306632i4C198466E0AC59CC/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Ren_0-1756475138757.png" alt="Ren_0-1756475138757.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Our "Was This Page Helpful?" widget lets you:&lt;/P&gt;&lt;P&gt;• Give a quick &lt;span class="lia-unicode-emoji" title=":thumbs_up:"&gt;👍&lt;/span&gt; or &lt;span class="lia-unicode-emoji" title=":thumbs_down:"&gt;👎&lt;/span&gt; rating.&lt;BR /&gt;• Add optional comments (up to 140 characters, dialog opens after you gave a rating).&lt;BR /&gt;• Track sentiment without leaving the page.&lt;/P&gt;&lt;P&gt;This feedback is collected anonymously through Matomo analytics and helps us identify which pages need attention. It's perfect for quick reactions and brief improvement suggestions.&lt;/P&gt;&lt;H2 id="toc-hId-1542426570"&gt;Targeted Survey Feedback&lt;/H2&gt;&lt;P&gt;For more structured feedback, click the survey icon in the top navigation bar.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ren_1-1756475306967.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306633iEF5559457CFCF34D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Ren_1-1756475306967.png" alt="Ren_1-1756475306967.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This links to our comprehensive SAP Insights survey where you can:&lt;/P&gt;&lt;P&gt;• Rate different aspects of the documentation.&lt;BR /&gt;• Suggest specific improvements.&lt;BR /&gt;• Share your overall experience with CAP.&lt;BR /&gt;• Provide demographic information to help us understand our audience.&lt;/P&gt;&lt;P&gt;The survey typically takes 5-10 minutes and gives us deeper insights into what's working and what needs improvement. Not only for capire but also for CAP overall.&lt;/P&gt;&lt;H2 id="toc-hId-1345913065"&gt;Issues &amp;amp; Bug Reports: GitHub Issues&lt;/H2&gt;&lt;P&gt;Found a problem? Have a feature request? Head to our &lt;A href="https://github.com/capire/docs/issues" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub Issues&lt;/A&gt; page.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ren_2-1756475432584.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306638iA1B9A311CE4C759D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Ren_2-1756475432584.png" alt="Ren_2-1756475432584.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This is ideal for:&lt;/P&gt;&lt;P&gt;• Bug reports: Broken links, incorrect code examples, outdated information&lt;BR /&gt;• Content requests: Missing documentation, unclear explanations&lt;BR /&gt;• Technical issues: Problems with the website functionality&lt;BR /&gt;• Enhancement suggestions: Ideas for improving existing content&lt;/P&gt;&lt;P&gt;GitHub Issues provide full transparency - you can see what others have reported and track progress on fixes.&lt;/P&gt;&lt;H2 id="toc-hId-1149399560"&gt;Direct Contributions: Edit This Page&lt;/H2&gt;&lt;P&gt;See something that needs a quick fix? At the bottom of every page is an "Edit this page" link that takes you directly to GitHub.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ren_3-1756475486227.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306639i719294297F34DAE2/image-size/small/is-moderation-mode/true?v=v2&amp;amp;px=200" role="button" title="Ren_3-1756475486227.png" alt="Ren_3-1756475486227.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;There you can:&lt;/P&gt;&lt;P&gt;• Fix typos and formatting issues.&lt;BR /&gt;• Update code examples.&lt;BR /&gt;• Add clarifications.&lt;BR /&gt;• Improve explanations.&lt;/P&gt;&lt;P&gt;This leverages GitHub's collaborative features. The process is as follows:&lt;/P&gt;&lt;P&gt;1. Fork the repository&lt;BR /&gt;2. Make your changes&lt;BR /&gt;3. Submit a pull request&lt;BR /&gt;4. Get your improvements reviewed and merged&lt;/P&gt;&lt;H2 id="toc-hId-952886055"&gt;Learning Resources &amp;amp; Community Contributions&lt;/H2&gt;&lt;P&gt;We maintain a curated collection of community learning resources. You can nominate blog posts, tutorials, and other content that helped you learn CAP through &lt;A href="https://github.com/capire/docs/issues/new" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub Issues&lt;/A&gt;. Tag your issue with suggestions for the learning resources page.&lt;/P&gt;&lt;H2 id="toc-hId-756372550"&gt;Contributing to Open Source Projects&lt;/H2&gt;&lt;P&gt;Many CAP components are open source with their own feedback channels:&lt;/P&gt;&lt;P&gt;• &lt;A href="https://github.com/cap-js/cds-dbs" target="_blank" rel="noopener nofollow noreferrer"&gt;CDS Database Services&lt;/A&gt;: Feature requests and bug reports for database connectors&lt;BR /&gt;• &lt;A href="https://github.com/cap-js/cds-types" target="_blank" rel="noopener nofollow noreferrer"&gt;CDS Types&lt;/A&gt;: TypeScript declaration improvements&lt;BR /&gt;• &lt;A href="https://github.com/cap-js/cds-intellij" target="_blank" rel="noopener nofollow noreferrer"&gt;IntelliJ Plugin&lt;/A&gt;: IDE integration feedback&lt;/P&gt;&lt;H2 id="toc-hId-559859045"&gt;Which Channel Should You Use?&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Use the page widget when:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;• You want to quickly rate a page.&lt;BR /&gt;• You have brief suggestions (under 140 characters).&lt;BR /&gt;• You don't need to track the response.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Use the survey when:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;• You want to provide comprehensive feedback.&lt;BR /&gt;• You have time for a detailed questionnaire.&lt;BR /&gt;• You want to influence our documentation strategy.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Use GitHub Issues when:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;• You found a bug or technical problem.&lt;BR /&gt;• You need to include screenshots or code examples.&lt;BR /&gt;• You want to track progress on your request.&lt;BR /&gt;• You're suggesting new content or major changes.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Use "Edit this page" when:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;• You can fix the issue yourself.&lt;BR /&gt;• The change is straightforward (typos, small clarifications).&lt;BR /&gt;• You want to contribute directly to the codebase.&lt;/P&gt;&lt;H2 id="toc-hId-363345540"&gt;What Happens Next?&lt;/H2&gt;&lt;P&gt;Your feedback doesn't go into a black hole! Here's how we process it:&lt;/P&gt;&lt;P&gt;1. Page ratings are monitored weekly to identify problematic content.&lt;BR /&gt;2. Survey responses inform our quarterly documentation roadmap.&lt;BR /&gt;3. GitHub Issues are triaged and assigned to subject matter experts if needed.&lt;BR /&gt;4. Pull requests are reviewed by maintainers and merged when appropriate.&lt;BR /&gt;5. Community contributions are highlighted in our release notes.&lt;/P&gt;&lt;H2 id="toc-hId-166832035"&gt;Get Involved!&lt;/H2&gt;&lt;P&gt;The CAP documentation is a community effort. Whether you're fixing a typo or contributing a comprehensive guide, every improvement helps thousands of developers worldwide.&lt;/P&gt;&lt;P&gt;Ready to contribute? Start with something small - maybe rate this blog post or leave us a comment. Every&lt;BR /&gt;contribution makes CAP better for everyone.&lt;/P&gt;&lt;P&gt;Have ideas for improving our feedback mechanisms? We'd love to hear them! Use any of the channels above to let us know.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/multiple-ways-to-give-feedback-on-cap-documentation/ba-p/14199559"/>
    <published>2025-08-29T16:06:20.583000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/effective-axios-error-logging-for-robust-sap-integrations/ba-p/14201836</id>
    <title>Effective Axios Error Logging for Robust SAP Integrations</title>
    <updated>2025-08-31T16:50:12.285000+02:00</updated>
    <author>
      <name>Sahil2508</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1527875</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1888104746"&gt;&lt;BR /&gt;&lt;SPAN&gt;Comparing Error Responses: Which One Aids Debugging Better?&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Suppose we have executed an HTTP request using CAP and it fails. Below are two logged error responses:&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;1st Scenario:&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Axios-Error.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307021i73987CAA32F7D95A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Axios-Error.png" alt="Axios-Error.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;EM&gt;&lt;STRONG&gt;2nd Scenario:&lt;/STRONG&gt;&lt;/EM&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Axios-Error-Handling.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307048iF2FA4DAA41B8AA6E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Axios-Error-Handling.png" alt="Axios-Error-Handling.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;It’s immediately clear which version is easier to debug and helps us quickly identify the reason for the failure.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;When building SAP extensions or integrations, developers often rely on &lt;STRONG&gt;Axios&lt;/STRONG&gt; for handling HTTP requests. While Axios simplifies API communication, error handling can quickly become a challenge—especially when debugging complex integration scenarios.&lt;/P&gt;&lt;P&gt;In many projects, errors are either logged with too little detail (just a generic message) or with too much raw data, making debugging time-consuming. To improve maintainability and speed up root cause analysis, we need a &lt;STRONG&gt;structured error logging mechanism&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1691591241"&gt;Why Structured Error Logging Matters&lt;/H3&gt;&lt;P&gt;In enterprise scenarios like SAP SuccessFactors or SAP BTP service integrations, requests often involve multiple systems. Without detailed error insights, you might only see:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;Error: Request failed with status code 400&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;But what you really need is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Which &lt;STRONG&gt;endpoint&lt;/STRONG&gt; failed?&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;What &lt;STRONG&gt;payload&lt;/STRONG&gt; was sent?&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;What was the &lt;STRONG&gt;response from the server&lt;/STRONG&gt;?&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Was there any &lt;STRONG&gt;custom error code&lt;/STRONG&gt; attached?&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This is where a structured error handling approach becomes invaluable.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1495077736"&gt;Implementation: A Structured Axios Error Logger&lt;/H3&gt;&lt;P&gt;Here’s a reusable utility function you can plug into your Node.js / TypeScript projects:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;public getAxiosErrorObject(error: any) {
  if (error.isAxiosError) {
    const errorObj = {
      message: error.message || 'An error occurred during the request.',
      code: error.code || 'UNKNOWN',
      status: error.response ? error.response.status : 'No Status',
      statusText: error.response ? error.response.statusText : 'No Status Text',
      requestData: error.config ? error.config.data : 'No Request Data',
      requestMethod: error.config ? error.config.method : 'No Request Method',
      requestUrl: error.config ? error.config.url : 'No Request URL',
      responseData: error.response ? error.response.data : 'No Response Data'
    };
    return errorObj;
  }
  return {
    message: error.message || 'An unknown error occurred',
    stack: error.stack || 'No Stack Trace'
  };
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1298564231"&gt;How It Works&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Checks if it’s an Axios error&lt;/STRONG&gt;&lt;BR /&gt;Axios sets error.isAxiosError = true. This allows us to distinguish between HTTP request errors and other runtime issues.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Captures request details&lt;/STRONG&gt;&lt;BR /&gt;The request URL, method, and payload are logged, which is crucial for reproducing and debugging issues.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Captures response details&lt;/STRONG&gt;&lt;BR /&gt;If the server responded, we extract the &lt;STRONG&gt;status code&lt;/STRONG&gt;, &lt;STRONG&gt;status text&lt;/STRONG&gt;, and &lt;STRONG&gt;response body&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Fallback for non-Axios errors&lt;/STRONG&gt;&lt;BR /&gt;In cases where the error didn’t come from Axios (e.g., runtime exceptions), we still log a meaningful message and stack trace.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1102050726"&gt;Example Usage&lt;BR /&gt;&lt;BR /&gt;&lt;/H3&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;try {
  const response = await axios.post('/api/employees', { name: 'Sahil M' });
  console.log(response.data);
} catch (error) {
  const structuredError = this.getAxiosErrorObject(error);
  console.error('API Error:', structuredError);
}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-905537221"&gt;Example Output &amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/H3&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;{
  "message": "Request failed with status code 400",
  "code": "ERR_BAD_REQUEST",
  "status": 400,
  "statusText": "Bad Request",
  "requestData": "{\"name\":\"Sahil M\"}",
  "requestMethod": "post",
  "requestUrl": "/api/employees",
  "responseData": {
    "error": "Invalid employee data"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-709023716"&gt;Best Practices&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Avoid logging sensitive data&lt;/STRONG&gt;&lt;BR /&gt;When logging request payloads, ensure no confidential fields (e.g., passwords, tokens) are exposed.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Integrate with monitoring tools&lt;/STRONG&gt;&lt;BR /&gt;Forward structured error logs to tools like &lt;STRONG&gt;SAP Cloud Logging&lt;/STRONG&gt;&amp;nbsp;for central monitoring.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Normalize error structure&lt;/STRONG&gt;&lt;BR /&gt;Use this function as a single source of truth for error logging across your project, ensuring consistent logs.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Enhance with correlation IDs&lt;/STRONG&gt;&lt;BR /&gt;In SAP integrations, add &lt;STRONG&gt;transaction or correlation IDs&lt;/STRONG&gt; to quickly trace requests across systems.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/effective-axios-error-logging-for-robust-sap-integrations/ba-p/14201836"/>
    <published>2025-08-31T16:50:12.285000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/devtoberfest-blog-posts/introducing-the-devtoberfest-scavenger-hunt-coming-soon/ba-p/14183972</id>
    <title>🟡 Introducing the Devtoberfest Scavenger Hunt 🔨🪙 ... COMING SOON</title>
    <updated>2025-09-01T08:09:22.994000+02:00</updated>
    <author>
      <name>Dan_Wroblewski</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/72</uri>
    </author>
    <content>&lt;P&gt;Welcome to the&amp;nbsp;&lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/devtoberfest/gh-p/Devtoberfest" target="_self"&gt;Devtoberfest&lt;/A&gt; Scavenger Hunt&lt;/STRONG&gt;, a chase around important SAP developer-related tools/sites, a challenge to construct a secret phrase, and a chance to win 1000s of points toward the Devtoberfest &lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-grand-prize-trip-faq/ba-p/13781581" target="_self"&gt;grand prize&lt;/A&gt;.&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;The hunt officially starts &lt;STRONG&gt;Sept. 25&lt;/STRONG&gt;, with the release of the first clue during that day's &lt;STRONG&gt;SAP Developer News&lt;/STRONG&gt;, and you have until the end of Devtoberfest, &lt;STRONG&gt;Oct. 24&lt;/STRONG&gt;, to complete it.&lt;/P&gt;&lt;TABLE border="2" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;To get all the clues make sure to &lt;STRONG&gt;SUBSCRIBE TO THIS POST!!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Dan_Wroblewski_0-1756392968630.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306022iE4681CFA8F3E546E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Dan_Wroblewski_0-1756392968630.png" alt="Dan_Wroblewski_0-1756392968630.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Learn more about the&amp;nbsp; entire Devtoberfest event in&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1423549"&gt;@KevinR&lt;/a&gt;'s post&amp;nbsp;&lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-welcome/ba-p/14182817" target="_self"&gt;Devtoberfest 2025 Welcome!&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="frame0004-Photoroom" style="width: 222px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303712iDEFAB5049DFD4CE1/image-dimensions/222x145/is-moderation-mode/true?v=v2" width="222" height="145" role="button" title="frame0004-Photoroom" alt="frame0004-Photoroom" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1737841707"&gt;What you need to find&lt;/H2&gt;&lt;P&gt;We have hidden a special phrase, which you need to figure out using the clues from several missions, described in the next section. Along your journey you will do the following:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Visit about 10 different locations related to SAP developers, mostly web sites that are designed to help you in your daily SAP development.&lt;/LI&gt;&lt;LI&gt;At each location, you will discover a set of hexadecimal digits.&lt;/LI&gt;&lt;LI&gt;Concatenate the digits together (in the order of the missions) to get one, 37-digit hexadecimal number.&lt;/LI&gt;&lt;LI&gt;Multiply that hexadecimal number by another secret number, for which we will give a clue.&lt;/LI&gt;&lt;LI&gt;Take the resulting 38-digit hexadecimal product, and convert it into the secret phrase, using each pair of digits as values for ASCII characters.&lt;/LI&gt;&lt;LI&gt;Enter the phrase, exactly (case-sensitive, no extra spaces), into the &lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-scavenger-hunt.html" target="_self" rel="noopener noreferrer"&gt;Scavenger Hunt tutorial&lt;/A&gt;.‌&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Not until the SAP Developer News of Oct. 16 will you have all the pieces to be able to complete the phrase.&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1670410921"&gt;Example Hunt&lt;/H3&gt;&lt;P&gt;As an example of what you will have to do, here's a short sample hunt (just a warm-up, no points will be earned). Each mission is independent of the other.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;Mission&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;No. Digits&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;SAP Web Property&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Instructions&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="289px"&gt;1&lt;/TD&gt;&lt;TD width="10%" height="289px"&gt;7&lt;/TD&gt;&lt;TD width="30%" height="289px"&gt;&lt;P&gt;&lt;FONT color="#7C484A"&gt;&lt;STRONG&gt;SAP Developers YouTube Channel&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="289px"&gt;&lt;P&gt;Go to our &lt;A href="https://www.youtube.com/@sapdevs/videos" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Developer YouTube channel&lt;/A&gt;.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Open &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/156020"&gt;@Rekha_DR&lt;/a&gt;'s video "&lt;A href="https://youtu.be/1vElTfSxGWM?si=VO5Asnf6paocjKru" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Build Process Automation (Part 1): Build your very first process&lt;/A&gt;". Watch it and find the secret 7-digit hexadecimal number in one of the info cards.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_1-1756706383435.png" style="width: 580px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307154i7E73F36E50823BD8/image-dimensions/580x300/is-moderation-mode/true?v=v2" width="580" height="300" role="button" title="Dan_Wroblewski_1-1756706383435.png" alt="Dan_Wroblewski_1-1756706383435.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can also see the hex digits in the description.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_0-1757324129515.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311023iACADC3BF745F6659/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Dan_Wroblewski_0-1757324129515.png" alt="Dan_Wroblewski_0-1757324129515.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;2&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;6&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&lt;FONT color="#7C484A"&gt;&lt;STRONG&gt;SAP Community&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;P&gt;Inside this blog post, use the Developer Tools on your browser to inspect the words "SAP Community" in the cell immediately to the left (in this very table) and find the 6-digit RGB ASCII code for the color of the text.&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_0-1756706325713.png" style="width: 565px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307152i1D8D7FDEE95C1713/image-dimensions/565x202/is-moderation-mode/true?v=v2" width="565" height="202" role="button" title="Dan_Wroblewski_0-1756706325713.png" alt="Dan_Wroblewski_0-1756706325713.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;3&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;None (directly)&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;P&gt;Concatenate the 2 sets of hexadecimal digits (13 in all), in order, and multiply the resulting hexadecimal number by the number of original SAP founders (you can easily find the number on the &lt;A href="https://en.wikipedia.org/wiki/SAP" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Wikipedia page&lt;/A&gt;).&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Convert the resulting hexadecimal number into a phrase, converting each pair of digits into a character using ASCII codes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;In this blog post, post a comment/picture&amp;nbsp;about the phrase -- but NOT the phrase itself&amp;nbsp; (like your experiences with or opinion about the phrase, or a picture of something belonging to you that reminds you of the phrase). You won't get any points, but it will be fun and you will be ready for the real scavenger hunt. If you have any trouble with this example hunt, post in the comments.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;REMINDER:&lt;/STRONG&gt; The above is just an example of how the real scavenger hunt will work. The real scavenger hunt instructions will be described in the rest of this blog post, as clues become available.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1344814697"&gt;The (real) hunt&lt;/H2&gt;&lt;P&gt;Below are the instructions for finding the hexadecimal digits for the actual scavenger hunt. We will release clues as follows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the SAP Developer News of &lt;STRONG&gt;Sept. 25&lt;/STRONG&gt;, &lt;STRONG&gt;Oct. 2&lt;/STRONG&gt;, &lt;STRONG&gt;Oct. 9&lt;/STRONG&gt;, and &lt;STRONG&gt;Oct. 16&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;In this blog &lt;STRONG&gt;each Monday during the first 3 weeks of Devtoberfest&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;To be notified when a new clue is released,&amp;nbsp;&lt;STRONG&gt;SUBSCRIBE TO THIS POST!!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="rule.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295882i3E2967613A5D1256/image-size/large?v=v2&amp;amp;px=999" role="button" title="rule.png" alt="rule.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;‌ &lt;SPAN&gt;When you find the secret phase, just enter it into this &lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-scavenger-hunt.html" target="_self" rel="noopener noreferrer"&gt;Devtoberfest tutorial&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_0-1756261779255.png" style="width: 1009px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305319iF03452ECEE94B400/image-dimensions/1009x185/is-moderation-mode/true?v=v2" width="1009" height="185" role="button" title="Dan_Wroblewski_0-1756261779255.png" alt="Dan_Wroblewski_0-1756261779255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To guide you, we have created a &lt;A href="http://developers.sap.com/tutorials/devtoberfest2025-scavenger-hunt-checking.html" target="_self" rel="noopener noreferrer"&gt;second tutorial&lt;/A&gt; -- you do not have to use it, nor do you get any points from it. But you can enter the 1 to 6 digits from each mission to check if you received the correct digits for that mission.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_1-1756261827758.png" style="width: 984px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305320i6D6063DA1D7F3A96/image-dimensions/984x185/is-moderation-mode/true?v=v2" width="984" height="185" role="button" title="Dan_Wroblewski_1-1756261827758.png" alt="Dan_Wroblewski_1-1756261827758.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="rule.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295882i3E2967613A5D1256/image-size/large?v=v2&amp;amp;px=999" role="button" title="rule.png" alt="rule.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1406466630"&gt;Here are your missions&amp;nbsp;&lt;/H4&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;Mission&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;No. Digits&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;SAP Web Property&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Instructions&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;1&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;2&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&lt;P&gt;&lt;STRONG&gt;SAP Developer News&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.youtube.com/playlist?list=PL6RpkC85SLQAVBSQXN9522_1jNvPavBgg" target="_self" rel="nofollow noopener noreferrer"&gt;The Developer News&lt;/A&gt; comes out each Thursday with the latest about ABAP, CAP, BTP, SAP Build, UI5, Fiori, AI, and all your favorite SAP developer topics. All delivered by some of your favorite Developer Advocates, like DJ, Shilpa Shankar, Thomas Jung, Antonio Maradiaga, Nora von Thenen and the rest of the gang.&lt;/P&gt;&lt;P&gt;Most episodes about 5 minutes. Also available as a &lt;A href="https://podcast.opensap.info/sap-developers/" target="_self" rel="nofollow noopener noreferrer"&gt;Podcast&lt;/A&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Watch the Developer News of Sept. 25&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;2&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;6&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;To be released Sept. 29&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;3&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;4&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;To be released Sept. 29&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;4&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;2&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Watch the Developer News of Oct. 2&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;5&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;4&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;To be released Oct. 6&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;6&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;6&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;To be released Oct. 6&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;7&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;6&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Watch the Developer News of Oct. 9&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;8&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;6&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;To be released Oct. 13&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;9&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;1&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;To be released Oct. 13&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;10&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;None (directly)&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Watch the Developer News of Oct. 16&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Good luck!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":grinning_cat_face_with_smiling_eyes:"&gt;😸&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/devtoberfest-blog-posts/introducing-the-devtoberfest-scavenger-hunt-coming-soon/ba-p/14183972"/>
    <published>2025-09-01T08:09:22.994000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/tree-table-support-in-cap-is-now-generally-available/ba-p/14202772</id>
    <title>Tree-Table Support in CAP is Now Generally Available</title>
    <updated>2025-09-01T11:31:42.912000+02:00</updated>
    <author>
      <name>BirgitS</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/41902</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Since July, the Tree-Table Support in the SAP Cloud Programming Model (CAP) is generally available. This exciting milestone represents the culmination of months of dedicated work. Our journey began in February with the initial release of &lt;A href="https://cap.cloud.sap/docs/releases/archive/2025/feb25#hierarchy-maintenance-in-tree-table" target="_blank" rel="noopener nofollow noreferrer"&gt;Hierarchy Maintenance in the Tree Table for Java&lt;/A&gt;, followed in March by &lt;A href="https://cap.cloud.sap/docs/releases/archive/2025/mar25#recursive-hierarchies-and-fiori-tree-table-support" target="_blank" rel="noopener nofollow noreferrer"&gt;Recursive Hierarchies and Fiori Tree Table support for Node.js&lt;/A&gt; in beta. Since then, we’ve consistently rolled out new features in beta, leading up to July 2025 when we officially announced that CAP's tree view support has exited beta and &lt;A href="https://cap.cloud.sap/docs/releases/july25#fiori-tree-views-ga" target="_blank" rel="noopener nofollow noreferrer"&gt;is now generally available&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Features&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Hierarchical Entities Definition&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Use standard OData/Fiori annotations to define hierarchical entities.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Hierarchical Queries&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Hierarchical queries from the underlying &lt;A href="https://www.sap.com/design-system/fiori-design-web/ui-elements/tree-table/?external" target="_blank" rel="noopener noreferrer"&gt;SAPUI5 Tree Table&lt;/A&gt; components are generically served by CAP runtimes.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Read-Only Usage&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Hierarchical entities can be used in read-only mode in List Views and Value Helps, including expanding/collapsing of an entire tree or separate nodes as well as sort, filter, and search functionalities on hierarchical data.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="TreeTables1.png" style="width: 540px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307285iD479D795CD0BD6BC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="TreeTables1.png" alt="TreeTables1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Modification Capabilities for&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/advanced/fiori#draft-support" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;draft enabled&lt;/STRONG&gt;&lt;/A&gt;&lt;STRONG&gt;&amp;nbsp;entities:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Node Operations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Create new nodes, add them as root or child nodes, modify and delete nodes, and change a parent of a child node (node movement).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="TreeTables2.png" style="width: 403px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307287i237D10B3F09CDA4D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="TreeTables2.png" alt="TreeTables2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Hierarchy Management&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Deleting a node will cascade the deletion to its descendant nodes if they are in a composition relationship with the deleted node.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Object Page Support&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: The same set of modifications is supported on the Object Page, with the main difference, that all nodes on the List View have their own drafts, but all nodes on the Object Page belong to the same draft.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Database Support&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;/LI&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;For&lt;STRONG&gt; Java&lt;/STRONG&gt; we already support SAP HANA and H2, with PostgreSQL to follow.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;For&lt;STRONG&gt; Node.js&lt;/STRONG&gt; we support SAP HANA, SQLite, and PostgreSQL.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Current Limitations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We want to keep you informed about what’s not (yet) supported so you can plan accordingly:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Interception and modification of hierarchical queries in custom handlers &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Arbitrary OData query options other than the ones served today for SAPUI5 Tree Table&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Get Started&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Demo&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Check out our demo session recording from &lt;A href="https://recap-conf.dev/" target="_blank" rel="noopener nofollow noreferrer"&gt;reCAP 2025&lt;/A&gt;:&amp;nbsp;&lt;A href="https://www.youtube.com/watch?v=qZpWvwayIP8&amp;amp;list=PLJDFklpD_2cTjReIS8xQ2L0HnfjoxPUxd&amp;amp;index=11" target="_blank" rel="noopener nofollow noreferrer"&gt;TreeTables Support in CAP&lt;/A&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Try it out&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Explore the new features in our bookshop sample apps for&amp;nbsp;&lt;A href="https://github.com/SAP-samples/cloud-cap-samples-java" target="_blank" rel="noopener nofollow noreferrer"&gt;CAP Java&lt;/A&gt;&amp;nbsp;and&amp;nbsp;&lt;A href="https://github.com/capire/samples" target="_blank" rel="noopener nofollow noreferrer"&gt;CAP Node.js&lt;/A&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The general availability of Tree-Table Support in CAP opens up a wealth of opportunities to streamline hierarchical data management. We encourage you to dive in, explore the capabilities, and share your experiences with the community. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Happy coding!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/tree-table-support-in-cap-is-now-generally-available/ba-p/14202772"/>
    <published>2025-09-01T11:31:42.912000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/leveraging-sap-reference-architecture-for-event-driven-application-in/ba-p/14204897</id>
    <title>Leveraging SAP Reference Architecture for Event-Driven Application in Missing Part Fulfilment Busine</title>
    <updated>2025-09-02T18:15:58.170000+02:00</updated>
    <author>
      <name>Cocquerel</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/754</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the era of Industry 4.0, the ability to respond to real-time events in industrial production is crucial for operational efficiency. This blog outlines a proof of concept (PoC) that demonstrates how Airbus leveraged SAP Business Technology Platform (BTP), SAP Build Process Automation (BPA), and Events-to-Business Actions Framework to automate and orchestrate the missing part fulfillment process within production operations. The solution leverages an event-driven architecture to automate business processes based on missing part fulfillment in real-time.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This architecture is highly repeatable and can be applied to a wide range of SAP scenarios such as plant maintenance, purchase requisitions, inventory updates, and more, making it a valuable reference for enterprises looking to scale event-driven integrations.&lt;/SPAN&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Engagement&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Cocquerel_0-1756829031891.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308081i7565797D7242D648/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Cocquerel_0-1756829031891.png" alt="Cocquerel_0-1756829031891.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The outcome described in this article was facilitated by custom adaptation of the Events-to-Business-Actions Framework by Airbus and was supported by SAP OCTO Team under &lt;/SPAN&gt;&lt;A href="https://www.linkedin.com/in/pavankumarpvn/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;PVN Pavankumar&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Business Scenario : Missing Part Fulfilment in Production&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The use case centres on streamlining the missing part fulfilment process within Airbus production operations. It begins when a missing part is detected for a work order reservation in the SAP ECC backend, which supports day-to-day production activities. From that initial identification, the process continues all the way through to the confirmation of the work order operation.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Throughout this journey, the workflow leverages an event-driven architecture (EDA) to track progress in real time, integrating seamlessly with backend systems. SAP Build Process Automation (BPA) orchestrates collaboration between all involved actors by sending out forms and notifications, gathering approvals, and automating decisions based on predefined business rules. Additionally, the PoC highlights the real-time monitoring and dashboarding features of SAP Build Process Automation, ensuring end-to-end visibility across the process.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This PoC showcases how we made that happen.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Solution Architecture&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below is the architecture diagram representing the technical landscape for the missing part fulfilment process.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Cocquerel_1-1756829031891.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308082i8B4EA8BC88B1E716/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Cocquerel_1-1756829031891.png" alt="Cocquerel_1-1756829031891.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Figure 1: End-to-end architecture of the Airbus missing part fulfillment solution using SAP BTP, Advanced Event Mesh, E2B Framework, and custom Node.js applications.&lt;/SPAN&gt;&lt;/I&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Technical Implementation&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This architecture leverages key components across SAP BTP, Advanced Event Mesh, and custom applications to create a robust event-to-action pipeline: The Solution Architecture is illustrated in Figure 1, and the important components along with their connectivity are explained below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt; &lt;/SPAN&gt;&lt;STRONG&gt;Business events are triggered:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Different actors interact with the SAP backend (supporting production operations). Transactions such as work order reservations, purchase orders, or outbound deliveries generate relevant business events.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt; &lt;/SPAN&gt;&lt;STRONG&gt;Events are routed to SAP Integration Suite, Advanced Event Mesh (AEM):&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;These events are sent to SAP Integration Suite, Advanced Event Mesh—either directly or via Solace event brokers in Airbus Private Cloud, especially if events need to be shared with other platforms.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;Event-specific queues manage the flow:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Within SAP Integration Suite, Advanced Event Mesh, specific queues collect events related to predefined topics, pushing them into the Events to Business Actions (E2B) framework.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;Business logic and workflows are triggered:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;E2B calls SAP Build Process Automation (BPA) APIs to:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Apply decision rules and determine what business action should occur based on the event payload,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Launch new workflow instances,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Update waiting tasks on running workflows,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Push events to visibility scenarios for process monitoring.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;Backend queries for richer context:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;E2B also calls backend APIs to fetch more information related to business objects—such as:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Details of a reservation linked to a purchase order,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The specific station tied to a work order reservation,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The list of actors involved, leveraging Responsibility Management in SAP S/4HANA based on attributes like station.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;Traceability with PartsNow:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;PartsNow, is a custom SAP Cloud Application Programming (CAP,Node.js) application, used to persist the relationship between workflow instance IDs and related work order reservation IDs. E2B registers new workflow instances and can retrieve instance details as needed via PartsNow APIs.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;Unified user experience in SAP Build Workzone:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;SAP Build Workzone serves as the entry point for business actors, providing:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;My Inbox&lt;/SPAN&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;SPAN&gt; For completing tasks such as form fills or approvals,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;My Processes&lt;/SPAN&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;SPAN&gt; For real-time workflow monitoring,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Process Visibility Dashboard&lt;/SPAN&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;SPAN&gt; To track KPIs and process efficiency,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Studio Home&lt;/SPAN&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;SPAN&gt; Where process specialists can manage BPA decision rules.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;Automated notifications and integration points:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Finally, SAP BPA calls remote APIs to:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Inform the PartsNow app about workflow instance completion,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Send email notifications to relevant actors via an SMTP server.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Developer Insights&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As a developer building this PoC, a few key learnings stand out:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Loose coupling using SAP Integration Suite, Advanced Event Mesh and queues ensures resiliency and scalability.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Decision capability in SAP Build Process Automation allowed us to externalize complex logic from the app code, making it easier to maintain and extend.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Using SAP BTP Destinations and Service Bindings helped standardize secure backend access across environments.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Deployment Steps&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Follow this &lt;/SPAN&gt;&lt;A href="https://github.com/SAP-samples/btp-events-to-business-actions-framework/tree/main/scenarios/Integration-with-AWS/IoTSiteWise" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;GitHub documentation&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;for detailed steps for configuration and deployment.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Closing Remarks&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We hope this blog has inspired new ideas for applying event-driven automation to your own business processes.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Refer to &lt;/SPAN&gt;&lt;A href="https://architecture.learning.sap.com/docs/ref-arch/fbdc46aaae" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Architecture Centre&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;A href="https://github.com/SAP-samples/btp-events-to-business-actions-framework/tree/main" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;Events-to-Business-Actions Framework Repository&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; for implementation details.&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Thanks to colleagues from SAP OCTO Team &lt;/SPAN&gt;&lt;A href="https://www.linkedin.com/in/praveenkumarpadegal/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;Praveen Kumar Padegal&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;A href="https://www.linkedin.com/in/swati-maste/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;Swati Maste&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; for their support.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/leveraging-sap-reference-architecture-for-event-driven-application-in/ba-p/14204897"/>
    <published>2025-09-02T18:15:58.170000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849</id>
    <title>Boost your CAP Development with AI: Introducing the MCP Server for CAP</title>
    <updated>2025-09-03T09:45:05.665000+02:00</updated>
    <author>
      <name>BirgitS</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/41902</uri>
    </author>
    <content>&lt;P&gt;Imagine the following: You are an experienced developer, working on SAP Cloud Application Programming Model (CAP) projects. You use AI agents, such as Claude Code, opencode, or GitHub Copilot, to support you in your daily work. Wouldn't it be cool if the used LLM can help you develop CAP applications? With our new MCP server for CAP, we can provide more context about your project as well as relevant CAP examples to steer the LLM in doing the right thing.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is an MCP Server?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;An MCP (&lt;A href="https://modelcontextprotocol.io/docs/getting-started/intro" target="_blank" rel="noopener nofollow noreferrer"&gt;Model Context Protocol&lt;/A&gt;) server is designed to manage and deliver capabilities to Large Language Models (LLMs) via AI agents. It bridges the gap between LLMs and external resources such as services, tools, and data, enabling LLMs to interact with these resources. The newly introduced MCP server for CAP transforms AI agents into CAP development experts. It provides context-focused tools that aim to help the AI agent to answer questions such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Which CDS (Core Data Services) services does my project expose and where are they served?&lt;/LI&gt;&lt;LI&gt;What are the entities about and how do they relate to each other?&lt;/LI&gt;&lt;LI&gt;How do I add columns to a select statement in CAP Node.js?&lt;/LI&gt;&lt;LI&gt;How can I register custom READ handlers in CAP Java?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The MCP Server for CAP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the context of the assisted development introduced in the beginning, this means: You might ask the LLM to add, for example, a bound action `setToCompleted` to the entity `Orders`. Without our new MCP server for CAP, the LLM would hallucinate and could invent a new syntax and do a lot of file searches to find the relevant file. With the help of our new MCP server for CAP the LLM behaves as intended. To do so, the LLM generates a tool call to check the Orders entity and relevant information is returned, such as its elements and file location. It also generates a tool call to check the CAP documentation for bound actions. Based on the results, it generates the correct CDS code to add the bound action. This, of course, is just one example. We designed our MCP server for CAP to help you with arbitrary tasks instead of focusing on single commands.&lt;/P&gt;&lt;P&gt;For this purpose, our newly introduced MCP server for CAP provides the following two tools for AI-assisted development of CAP applications:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;search_model&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This tool allows the AI model to perform a fuzzy search for CDS definitions (entities, services, actions) within a unified compiled CDS model of all your&amp;nbsp;.cds&amp;nbsp;files. This CDS model includes the model structure and relationships, annotations and metadata, and the generated HTTP endpoints.&lt;/P&gt;&lt;P&gt;The fuzzy search algorithm matches definition names and supports partial matches, making it easy to find entities such as "Books" even when searching for "book".&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;search_docs&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This tool enables the AI model to perform a semantic search through the preprocessed&amp;nbsp; &lt;A href="https://cap.cloud.sap/" target="_blank" rel="noopener nofollow noreferrer"&gt;CAP documentation&lt;/A&gt;, which is stored locally as embeddings. The search query is converted to an embedding vector. Finally, a similarity search is performed to find the relevant parts of the documentation, which have the highest semantic similarity to your query even if the exact keywords are not used.&lt;/P&gt;&lt;P&gt;Please note: These tools are meant to be used by AI models and do not constitute a stable API. But for experimental purposes, you can also use the tools directly from the command line as documented here: &lt;A href="https://github.com/cap-js/mcp-server?tab=readme-ov-file#cli-usage" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP server for AI-assisted development of CAP applications&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Try it out&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Are you excited to try it out? Detailed instructions can be found here: &lt;A href="https://github.com/cap-js/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP server for AI-assisted development of CAP applications&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Important: Our MCP Server for CAP is designed to support professional developers in their daily work. As with all AI-generated information, you should check the generated results carefully to avoid unintended side effects.&lt;/P&gt;&lt;P&gt;We are excited to announce that the MCP Server for CAP is an open-source project, licensed under the Apache-2.0 license. Learn more about &lt;A href="https://opensource.sap.com/" target="_blank" rel="noopener noreferrer"&gt;open source at SAP&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;We are very curious to see what you will do with our &lt;A href="https://npmjs.com/package/@cap-js/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP s&lt;U&gt;e&lt;/U&gt;&lt;U&gt;rver for CAP&lt;/U&gt;&lt;/A&gt;! Please don't hesitate to provide your feedback here or report any issues in our &lt;A href="https://github.com/cap-js/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub repository&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Beyond CAP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We also offer a &lt;A href="https://github.com/UI5/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;UI5 MCP server&lt;/A&gt; and an &lt;A href="https://github.com/SAP/open-ux-tools/tree/main/packages/fiori-mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP server for SAP Fiori&lt;/A&gt;, ensuring that you have a comprehensive suite of tools to enhance your development workflow across various SAP technologies. You can find the packages here: &lt;A href="https://www.npmjs.com/package/@ui5/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;UI5 MCP server&lt;/A&gt; and &lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP server for SAP Fiori&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;The introduction of the MCP servers for CAP, SAPUI5 and SAP Fiori marks a significant step forward in leveraging AI to enhance developer productivity.&lt;/P&gt;&lt;P&gt;Stay tuned for more updates. Happy coding!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849"/>
    <published>2025-09-03T09:45:05.665000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-update-first-release-of-the-sap-fiori-mcp-server-for/ba-p/14204694</id>
    <title>SAP Fiori Tools Update – First Release of the SAP Fiori MCP Server for Agentic AI Workflows</title>
    <updated>2025-09-03T09:45:49.103000+02:00</updated>
    <author>
      <name>Christoph_Gollmick</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/14530</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;We’re excited to announce the &lt;STRONG&gt;release of the SAP Fiori MCP server&lt;/STRONG&gt;, a new capability that lets AI coding assistants directly create and edit &lt;/SPAN&gt;&lt;SPAN&gt;SAP Fiori applications. This marks the next milestone in our AI journey, following the &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/from-idea-to-app-using-ai-powered-project-accelerator-to-develop-sap-fiori/ba-p/14095300" target="_blank"&gt;Project Accelerator&lt;/A&gt; introduced earlier this year. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What is MCP — and why it matters?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The &lt;STRONG&gt;Model Context Protocol (MCP)&lt;/STRONG&gt; is an &lt;A href="https://modelcontextprotocol.io/docs/getting-started/intro" target="_blank" rel="noopener nofollow noreferrer"&gt;open standard&lt;/A&gt; that standardizes how applications provide context to large language models. MCP is already supported by clients such as Claude, Cline, Cursor, and VS Code allowing AI-powered workflows to interact seamlessly with developer tools.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introducing the SAP Fiori MCP server&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The SAP Fiori MCP server (&lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;@sap-ux/fiori-mcp-server&lt;/A&gt;) is an open-source node.js module delivered as part of the &lt;STRONG&gt;open-ux-tools &lt;/STRONG&gt;&lt;A href="https://github.com/SAP/open-ux-tools/" target="_self" rel="nofollow noopener noreferrer"&gt;repository&lt;/A&gt;. It enables developers using AI coding assistants to generate and adapt SAP Fiori elements applications with precision and context awareness. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It is not the only MCP server published by SAP. The &lt;STRONG&gt;CAP MCP server&lt;/STRONG&gt; (&lt;A href="https://www.npmjs.com/package/@cap-js/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;@cap-js/mcp-server&lt;/A&gt;) provides tools to create and modify CAP node.js projects, and the &lt;STRONG&gt;UI5 MCP server&lt;/STRONG&gt; (&lt;A href="https://www.npmjs.com/package/@ui5/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;@ui5/mcp-server&lt;/A&gt;)&lt;/SPAN&gt;&lt;SPAN&gt; allows AI assistants to write SAPUI5&lt;/SPAN&gt;&lt;SPAN&gt; code. Together, these servers provide complementary entry points into different areas of SAP application development, so that AI assistants can seamlessly &lt;/SPAN&gt;&lt;SPAN&gt;data models, SAP Fiori applications, and SAPUI5 code.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For more information also have a look at the related blog posts:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849" target="_self"&gt;Boost your CAP Development with AI: Introducing the MCP Server for CAP&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/give-your-ai-agent-some-tools-introducing-the-ui5-mcp-server/ba-p/14200825" target="_self"&gt;Give Your AI Agent Some Tools: Introducing the UI5 MCP Server&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;With the MCP servers in place, you can already try out scenarios such as:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;“Please add an SAP Fiori elements list report app to my CAP project.”&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;“Generate a new CAP project and SAP Fiori app based on my_sketch.png.”&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;“Add Flexible Column Layout to the app.”&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;“Enable initial load for the SAP Fiori app.”&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;⚠&lt;SPAN&gt;️ &lt;EM&gt;Note: The SAP Fiori MCP server is currently released in &lt;STRONG&gt;experimental state&lt;/STRONG&gt; and subject to rapid change and enhancements.&lt;/EM&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI assistants can discover and act on SAP Fiori projects&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The first release comes with a set of capabilities designed to let AI assistants both discover and act on SAP Fiori projects. The SAP Fiori MCP server provides tools to generate SAP Fiori elements applications for CAP node.js projects, finds SAP Fiori applications in the workspace, and allows to edit applications and pages inside applications. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To ensure that the AI produces correct results, we propose rules that guide the LLM’s behavior (see &lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server#rules" target="_blank" rel="noopener nofollow noreferrer"&gt;rules&lt;/A&gt;). These rules cover important aspects such as using proper SAP Fiori elements application patterns, ensuring data models are valid with UUID primary keys, generating sample data consistently, and preferring code-based modifications over screen personalization. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can configure the server to be directly called with npx or install it globally via npm (see &lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server#usage" target="_blank" rel="noopener nofollow noreferrer"&gt;usage&lt;/A&gt;). In both cases, it integrates easily into an MCP-enabled client such as Cline.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Example how the SAP Fiori MCP server is used in Cline." style="width: 765px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308017iA55B99B19DAD23CD/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Christoph_Gollmick_1-1756821532142.png" alt="Example how the SAP Fiori MCP server is used in Cline." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Example how the SAP Fiori MCP server is used in Cline.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Developers can build apps more quickly using MCP servers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;By connecting directly into SAP Fiori projects through MCP, developers gain a much more cost-effective way to experiment with AI support. They can let LLMs execute complex tasks in context—while the built-in functions and rules ensure adherence to SAP Fiori best practices. This reduces the risk of hallucinations, accelerates prototyping, and makes it easier to iterate quickly on new ideas. Since the SAP Fiori MCP server is &lt;/SPAN&gt;&lt;SPAN&gt;with other MCP servers like UI5 and CAP, developers can benefit from a consistent AI-driven experience across different parts of the development process.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;This is the first step on the MCP journey&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The current release is just the first step. We are already working on extending the server with a &lt;STRONG&gt;document search feature&lt;/STRONG&gt; that will make guidance from SAP documentation, tutorials, and examples directly available to the LLM. This means that the AI assistant won’t just follow rules embedded in the server but can also draw from the wealth of published learning content.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In addition, the &lt;STRONG&gt;generator functionality&lt;/STRONG&gt;, which in the first release is limited to CAP node.js projects, will be expanded to support &lt;STRONG&gt;any suitable OData source&lt;/STRONG&gt;. This will significantly broaden the scenarios in which the SAP Fiori MCP server can be applied, giving developers much more flexibility in how they use AI to create and adapt applications.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Try the SAP Fiori MCP server at SAP TechEd 2025&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can experience the SAP Fiori MCP server live at &lt;STRONG&gt;SAP TechEd Berlin&lt;/STRONG&gt;. In session &lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749126322451001Fcbi" target="_blank" rel="noopener noreferrer"&gt;CA261 – Create great UX with AI, SAP Design System, SAP Fiori elements, and SAPUI5&lt;/A&gt;, we’ll guide you through using AI and MCP to generate applications, adapt them, and extend them with SAPUI5. It’s a hands-on workshop designed to show how these new capabilities come together in practice.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Closing&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This release marks the start of a new era in SAP Fiori development, where AI assistants can not only suggest but also execute tasks reliably. With upcoming enhancements like doc search and broader generator support, we’re laying the groundwork for &lt;STRONG&gt;smarter, faster, and more flexible AI-driven development&lt;/STRONG&gt;. As an open-source project we also welcome your contributions. We encourage you to report any issues you encounter. Your feedback is invaluable to us.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We can’t wait to see how you experiment with it—and we look forward to meeting you at TechEd!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-update-first-release-of-the-sap-fiori-mcp-server-for/ba-p/14204694"/>
    <published>2025-09-03T09:45:49.103000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602</id>
    <title>SAP Build introduces new MCP Servers to enable agentic development for Enterprise Applications</title>
    <updated>2025-09-03T10:00:34.225000+02:00</updated>
    <author>
      <name>YuvalA</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/172240</uri>
    </author>
    <content>&lt;P&gt;Agentic AI application development is fundamentally reshaping the way business applications are designed, developed, and delivered. AI-powered assistants and copilots are rapidly becoming an integral part of the development process, helping teams to boost productivity, reduce errors, and innovate faster than ever.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Meeting Developers Where They Are&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP is committed to meeting developers where they’re at – that means no matter where or how you code, you have the freedom to choose the environment that best suits your needs and access to the tools that maximize your productivity and impact.&lt;/P&gt;&lt;P&gt;To that end, I’m excited to share that &lt;STRONG&gt;SAP is introducing &lt;/STRONG&gt;&lt;STRONG&gt;Model Context Protocol (MCP)&lt;/STRONG&gt; &lt;STRONG&gt;servers&lt;/STRONG&gt; to boost development with the following technologies:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849" target="_blank"&gt;Cloud Application Programming Model (CAP)&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-update-first-release-of-the-sap-fiori-mcp-server-for/ba-p/14204694" target="_blank"&gt;SAP Fiori Elements&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/give-your-ai-agent-some-tools-introducing-the-ui5-mcp-server/ba-p/14200825" target="_self"&gt;SAPUI5&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;By adopting these new MCP standards, developers can seamlessly extend SAP’s development capabilities into multiple environments, ensuring flexibility and choice. SAP Build now enhances popular IDEs and AI coding assistants such as Cursor, Windsurf, Github Copilot, Cline and Claude Code.&lt;/P&gt;&lt;P&gt;We are also excited to share that the &lt;STRONG&gt;MCP Servers&lt;/STRONG&gt;&amp;nbsp;are being released as an &lt;STRONG&gt;open-source projects&lt;/STRONG&gt;, licensed under the &lt;STRONG&gt;Apache-2.0 license&lt;/STRONG&gt;. This marks another step in our commitment to openness and community-driven innovation. &lt;EM&gt;Learn more about &lt;/EM&gt;&lt;A href="https://www.sap.com/about/company/innovation/open-source.html" target="_blank" rel="noopener noreferrer"&gt;&lt;EM&gt;Open Source at SAP&lt;/EM&gt;&lt;/A&gt;&lt;EM&gt;.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is an MCP?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;A href="https://modelcontextprotocol.io/docs/getting-started/intro" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP&lt;/A&gt; is an emerging open standard that allows AI models and tools to interact in a structured, secure, and consistent way. MCP acts as a universal bridge between an AI coding assistant with an LLM and external tools, data, and workflows — so the model can seamlessly fetch context, take actions, and deliver more accurate, useful results. MCP gives developers the ability to integrate their tools with the broader AI ecosystem while receiving the right assistance, at the right time, without switching contexts.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The Value of SAP MCP Tools&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;While many AI tools generate code, SAP takes this a step further by ensuring that what’s generated provides a solid foundation for building enterprise-grade applications. The MCP tools delivered by SAP are backed by our technology teams and designed specifically for SAP Business Applications. This means:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Best Practices Built-In:&amp;nbsp;&lt;/STRONG&gt;Generated code with CAP, UI5 and Fiori elements code already provides you with the right starting point for reaching SAP standards and proven design guidelines.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Guided Development: &lt;/STRONG&gt;Developers receive recommendations and guardrails tailored to SAP Business Technology Platform (BTP).&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;&lt;STRONG&gt;Consistency: &amp;nbsp;&lt;/STRONG&gt;SAP’s MCP tools are and will be reused across our tooling portfolio, ensuring consistent developer experience and outcomes wherever you build SAP applications. Whether you’re generating backend services, UIs, or business logic, you can rely on the same quality, structure, and compliance.&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Scaling AI Agents with SAP Expertise&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;One of the most powerful aspects of MCP adoption is the ability to upscale AI agent chat capabilities with deep SAP application development expertise. This means that AI copilots and agents can go beyond generic code suggestions to provide context-aware, SAP-specific guidance. Whether you are working with Vibe Coding tools on the web or coding directly in your IDE of choice, MCP brings value to everyone — from casual and junior developers to senior professionals. It enables you to build enterprise-grade SAP applications with confidence, while seamlessly combining AI-driven assistance with SAP’s trusted frameworks, best practices, and tooling to maximize productivity.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Looking Ahead&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;These are exciting times to be a developer. The combination of AI and open standards like MCP is rewriting the rules of software development. At SAP, we are committed to keeping our developer community at the forefront of innovation. By investing in AI-powered tools and standards, we ensure that you—our developers—have everything you need to build, scale, and innovate with confidence. &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602"/>
    <published>2025-09-03T10:00:34.225000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/evaluating-sap-s-new-mcp-servers-ui5-cap-and-fiori-tools-in-practice/ba-p/14205611</id>
    <title>Evaluating SAP’s new MCP servers: UI5, CAP, and Fiori tools in practice</title>
    <updated>2025-09-04T07:00:11.016000+02:00</updated>
    <author>
      <name>Marian_Zeis</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/61</uri>
    </author>
    <content>&lt;P class=""&gt;SAP published MCP servers for UI5, CAP, and Fiori tools. For background and official positioning, see the release post&amp;nbsp;overview &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602" target="_blank"&gt;SAP Build introduces MCP servers&lt;/A&gt;.&lt;/P&gt;&lt;P class=""&gt;The SAP Build article positions MCP as the standard bridge from coding assistants to SAP tools and support across popular IDE agents like Cursor, Windsurf, GitHub Copilot, Cline, and Claude Code. The emphasis is on best‑practice scaffolds, guardrails aligned to BTP, and consistent tool behavior across the portfolio.&lt;/P&gt;&lt;P class=""&gt;This post is a hands‑on review, not another introduction. I focus on what matters when you actually use these servers locally, how they complement my SAP Docs MCP server, and where the current limits are.&amp;nbsp;My Blog Posts about MCP can be found &lt;A href="https://community.sap.com/t5/tag/SAP%20MCP%20Server%20by%20Marian%20Zeis/tg-p/board-id/technology-blog-members" target="_self"&gt;here&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-why" id="toc-hId-1759139202"&gt;Why the official CAP, Fiori, and UI5 MCP servers matter&lt;/H2&gt;&lt;P class=""&gt;SAP now provides MCP servers focused on concrete development tasks in CAP, Fiori tools, and UI5. They complement a documentation-first server like my SAP Docs MCP by giving the AI project awareness and executable workflows. In practice, this means better results directly in your editor, without relying on Joule for Developers.&lt;/P&gt;&lt;H2 id="toc-hId-cap" id="toc-hId-1562625697"&gt;CAP MCP server&lt;/H2&gt;&lt;P class=""&gt;Package: &lt;A href="https://www.npmjs.com/package/@cap-js/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;@cap-js/mcp-server&lt;/A&gt;.&lt;BR /&gt;GitHub: &lt;A href="https://github.com/cap-js/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;github.com/cap-js/mcp-server&lt;/A&gt;.&lt;BR /&gt;Release background and usage intent are covered in &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849" target="_blank"&gt;Boost your CAP Development with AI: Introducing the MCP Server for CAP&lt;/A&gt;.&lt;/P&gt;&lt;P class=""&gt;What it does: gives LLMs a fuzzy search over your compiled CDS model (entities, services, annotations, HTTP endpoints) and a semantic search over CAP docs (similar to my SAP Docs MCP server). The goal is agentic coding for CAP projects with guaranteed grounding to your model and the official guide.&lt;/P&gt;&lt;P class=""&gt;Install:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm i -g @cap-js/mcp-server&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Client config (example VS Code):&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "mcpServers": {
    "cds-mcp": {
      "command": "cds-mcp",
      "args": [],
      "env": {}
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Rules (recommended in your AGENTS.md .cursorrules or depending on the client):&lt;/P&gt;&lt;BLOCKQUOTE&gt;- You MUST search for CDS definitions, like entities, fields and services (which include HTTP endpoints) with cds-mcp, only if it fails you MAY read \*.cds files in the project.&lt;BR /&gt;- You MUST search for CAP docs with cds-mcp EVERY TIME you modify CDS models or when using APIs from CAP. Do NOT propose, suggest or make any changes without first checking it.&lt;/BLOCKQUOTE&gt;&lt;P class=""&gt;CLI usage for quick tests:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# Search CDS model
cds-mcp search_model . Books entity

# Search CAP docs
cds-mcp search_docs "how to add columns to a select statement in CAP Node.js" 1&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-cap-tools" id="toc-hId-1495194911"&gt;CAP tools in detail&lt;/H3&gt;&lt;P class=""&gt;&lt;A href="https://github.com/cap-js/mcp-server#search_model" target="_self" rel="nofollow noopener noreferrer"&gt;search_model&lt;/A&gt; returns CSN definitions with elements, annotations, file locations and HTTP endpoints. Useful to build queries or OData URLs.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "search_model",
  "params": {
    "projectPath": "/absolute/path/to/cap/project",
    "name": "Books",
    "kind": "entity",
    "topN": 3,
    "namesOnly": false
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;For a sample project of mine, the response looks like this:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;[
  {
    "kind": "entity",
    "includes": [
      "cuid",
      "managed"
    ],
    "elements": {
      "ID": {
        "key": true,
        "type": "cds.UUID"
      },
      "createdAt": {
        "@cds.on.insert": {
          "=": "$now"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@Core.Immutable": true,
        "@title": "{i18n&amp;gt;CreatedAt}",
        "@readonly": true,
        "type": "cds.Timestamp",
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;CreatedAt}"
      },
      "createdBy": {
        "@cds.on.insert": {
          "=": "$user"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@Core.Immutable": true,
        "@title": "{i18n&amp;gt;CreatedBy}",
        "@readonly": true,
        "@description": "{i18n&amp;gt;UserID.Description}",
        "type": "cds.String",
        "length": 255,
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;CreatedBy}",
        "@Core.Description": "{i18n&amp;gt;UserID.Description}"
      },
      "modifiedAt": {
        "@cds.on.insert": {
          "=": "$now"
        },
        "@cds.on.update": {
          "=": "$now"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@title": "{i18n&amp;gt;ChangedAt}",
        "@readonly": true,
        "type": "cds.Timestamp",
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;ChangedAt}"
      },
      "modifiedBy": {
        "@cds.on.insert": {
          "=": "$user"
        },
        "@cds.on.update": {
          "=": "$user"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@title": "{i18n&amp;gt;ChangedBy}",
        "@readonly": true,
        "@description": "{i18n&amp;gt;UserID.Description}",
        "type": "cds.String",
        "length": 255,
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;ChangedBy}",
        "@Core.Description": "{i18n&amp;gt;UserID.Description}"
      },
      "username": {
        "@mandatory": true,
        "type": "cds.String",
        "length": 100,
        "$location": {
          "file": "db/schema.cds",
          "line": 7,
          "col": 3
        },
        "@Common.FieldControl": {
          "#": "Mandatory"
        }
      },
      "email": {
        "@mandatory": true,
        "type": "cds.String",
        "length": 255,
        "$location": {
          "file": "db/schema.cds",
          "line": 8,
          "col": 3
        },
        "@Common.FieldControl": {
          "#": "Mandatory"
        }
      },
      "firstName": {
        "type": "cds.String",
        "length": 100,
        "$location": {
          "file": "db/schema.cds",
          "line": 9,
          "col": 3
        }
      },
      "lastName": {
        "type": "cds.String",
        "length": 100,
        "$location": {
          "file": "db/schema.cds",
          "line": 10,
          "col": 3
        }
      },
      "role": {
        "type": "cds.Association",
        "target": "volleyball.tournament.UserRoles",
        "keys": [
          {
            "ref": [
              "code"
            ],
            "$generatedFieldName": "role_code"
          }
        ],
        "$location": {
          "file": "db/schema.cds",
          "line": 11,
          "col": 3
        }
      },
      "role_code": {
        "type": "cds.String",
        "@odata.foreignKey4": "role"
      },
      "isActive": {
        "type": "cds.Boolean",
        "default": {
          "val": true
        },
        "$location": {
          "file": "db/schema.cds",
          "line": 12,
          "col": 3
        }
      }
    },
    "$location": {
      "file": "db/schema.cds",
      "line": 6,
      "col": 8
    },
    "name": "volleyball.tournament.Users"
  },
  {
    "kind": "entity",
    "@cds.autoexpose": true,
    "@cds.persistence.skip": "if-unused",
    "@UI.Identification": [
      {
        "Value": {
          "=": "name"
        }
      }
    ],
    "@cds.odata.valuelist": true,
    "includes": [
      "sap.common.CodeList"
    ],
    "elements": {
      "name": {
        "@title": "{i18n&amp;gt;Name}",
        "localized": true,
        "type": "cds.String",
        "length": 255,
        "@Common.Label": "{i18n&amp;gt;Name}"
      },
      "descr": {
        "@title": "{i18n&amp;gt;Description}",
        "localized": true,
        "type": "cds.String",
        "length": 1000,
        "@Common.Label": "{i18n&amp;gt;Description}"
      },
      "code": {
        "key": true,
        "type": "cds.String",
        "enum": {
          "Admin": {
            "val": "ADMIN",
            "$location": {
              "file": "db/schema.cds",
              "line": 17,
              "col": 5
            }
          },
          "EventCreator": {
            "val": "EVENT_CREATOR",
            "$location": {
              "file": "db/schema.cds",
              "line": 18,
              "col": 5
            }
          },
          "ResultsInputer": {
            "val": "RESULTS_INPUTER",
            "$location": {
              "file": "db/schema.cds",
              "line": 19,
              "col": 5
            }
          },
          "Reader": {
            "val": "READER",
            "$location": {
              "file": "db/schema.cds",
              "line": 20,
              "col": 5
            }
          }
        },
        "$location": {
          "file": "db/schema.cds",
          "line": 16,
          "col": 7
        }
      },
      "texts": {
        "type": "cds.Composition",
        "cardinality": {
          "max": "*"
        },
        "target": "volleyball.tournament.UserRoles.texts",
        "on": [
          {
            "ref": [
              "texts",
              "code"
            ]
          },
          "=",
          {
            "ref": [
              "code"
            ]
          }
        ]
      },
      "localized": {
        "type": "cds.Association",
        "target": "volleyball.tournament.UserRoles.texts",
        "on": [
          {
            "ref": [
              "localized",
              "code"
            ]
          },
          "=",
          {
            "ref": [
              "code"
            ]
          },
          "and",
          {
            "ref": [
              "localized",
              "locale"
            ]
          },
          "=",
          {
            "ref": [
              "$user",
              "locale"
            ]
          }
        ]
      }
    },
    "$location": {
      "file": "db/schema.cds",
      "line": 15,
      "col": 8
    },
    "$localized": true,
    "name": "volleyball.tournament.UserRoles"
  }
]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;[
  {
    "kind": "entity",
    "includes": [
      "cuid",
      "managed"
    ],
    "elements": {
      "ID": {
        "key": true,
        "type": "cds.UUID"
      },
      "createdAt": {
        "@cds.on.insert": {
          "=": "$now"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@Core.Immutable": true,
        "@title": "{i18n&amp;gt;CreatedAt}",
        "@readonly": true,
        "type": "cds.Timestamp",
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;CreatedAt}"
      },
      "createdBy": {
        "@cds.on.insert": {
          "=": "$user"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@Core.Immutable": true,
        "@title": "{i18n&amp;gt;CreatedBy}",
        "@readonly": true,
        "@description": "{i18n&amp;gt;UserID.Description}",
        "type": "cds.String",
        "length": 255,
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;CreatedBy}",
        "@Core.Description": "{i18n&amp;gt;UserID.Description}"
      },
      "modifiedAt": {
        "@cds.on.insert": {
          "=": "$now"
        },
        "@cds.on.update": {
          "=": "$now"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@title": "{i18n&amp;gt;ChangedAt}",
        "@readonly": true,
        "type": "cds.Timestamp",
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;ChangedAt}"
      },
      "modifiedBy": {
        "@cds.on.insert": {
          "=": "$user"
        },
        "@cds.on.update": {
          "=": "$user"
        },
        "@UI.HiddenFilter": true,
        "@UI.ExcludeFromNavigationContext": true,
        "@title": "{i18n&amp;gt;ChangedBy}",
        "@readonly": true,
        "@description": "{i18n&amp;gt;UserID.Description}",
        "type": "cds.String",
        "length": 255,
        "@Core.Computed": true,
        "@Common.Label": "{i18n&amp;gt;ChangedBy}",
        "@Core.Description": "{i18n&amp;gt;UserID.Description}"
      },
      "username": {
        "@mandatory": true,
        "type": "cds.String",
        "length": 100,
        "$location": {
          "file": "db/schema.cds",
          "line": 7,
          "col": 3
        },
        "@Common.FieldControl": {
          "#": "Mandatory"
        }
      },
      "email": {
        "@mandatory": true,
        "type": "cds.String",
        "length": 255,
        "$location": {
          "file": "db/schema.cds",
          "line": 8,
          "col": 3
        },
        "@Common.FieldControl": {
          "#": "Mandatory"
        }
      },
      "firstName": {
        "type": "cds.String",
        "length": 100,
        "$location": {
          "file": "db/schema.cds",
          "line": 9,
          "col": 3
        }
      },
      "lastName": {
        "type": "cds.String",
        "length": 100,
        "$location": {
          "file": "db/schema.cds",
          "line": 10,
          "col": 3
        }
      },
      "role": {
        "type": "cds.Association",
        "target": "volleyball.tournament.UserRoles",
        "keys": [
          {
            "ref": [
              "code"
            ],
            "$generatedFieldName": "role_code"
          }
        ],
        "$location": {
          "file": "db/schema.cds",
          "line": 11,
          "col": 3
        }
      },
      "role_code": {
        "type": "cds.String",
        "@odata.foreignKey4": "role"
      },
      "isActive": {
        "type": "cds.Boolean",
        "default": {
          "val": true
        },
        "$location": {
          "file": "db/schema.cds",
          "line": 12,
          "col": 3
        }
      }
    },
    "$location": {
      "file": "db/schema.cds",
      "line": 6,
      "col": 8
    },
    "name": "volleyball.tournament.Users"
  },
  {
    "kind": "entity",
    "@cds.autoexpose": true,
    "@cds.persistence.skip": "if-unused",
    "@UI.Identification": [
      {
        "Value": {
          "=": "name"
        }
      }
    ],
    "@cds.odata.valuelist": true,
    "includes": [
      "sap.common.CodeList"
    ],
    "elements": {
      "name": {
        "@title": "{i18n&amp;gt;Name}",
        "localized": true,
        "type": "cds.String",
        "length": 255,
        "@Common.Label": "{i18n&amp;gt;Name}"
      },
      "descr": {
        "@title": "{i18n&amp;gt;Description}",
        "localized": true,
        "type": "cds.String",
        "length": 1000,
        "@Common.Label": "{i18n&amp;gt;Description}"
      },
      "code": {
        "key": true,
        "type": "cds.String",
        "enum": {
          "Admin": {
            "val": "ADMIN",
            "$location": {
              "file": "db/schema.cds",
              "line": 17,
              "col": 5
            }
          },
          "EventCreator": {
            "val": "EVENT_CREATOR",
            "$location": {
              "file": "db/schema.cds",
              "line": 18,
              "col": 5
            }
          },
          "ResultsInputer": {
            "val": "RESULTS_INPUTER",
            "$location": {
              "file": "db/schema.cds",
              "line": 19,
              "col": 5
            }
          },
          "Reader": {
            "val": "READER",
            "$location": {
              "file": "db/schema.cds",
              "line": 20,
              "col": 5
            }
          }
        },
        "$location": {
          "file": "db/schema.cds",
          "line": 16,
          "col": 7
        }
      },
      "texts": {
        "type": "cds.Composition",
        "cardinality": {
          "max": "*"
        },
        "target": "volleyball.tournament.UserRoles.texts",
        "on": [
          {
            "ref": [
              "texts",
              "code"
            ]
          },
          "=",
          {
            "ref": [
              "code"
            ]
          }
        ]
      },
      "localized": {
        "type": "cds.Association",
        "target": "volleyball.tournament.UserRoles.texts",
        "on": [
          {
            "ref": [
              "localized",
              "code"
            ]
          },
          "=",
          {
            "ref": [
              "code"
            ]
          },
          "and",
          {
            "ref": [
              "localized",
              "locale"
            ]
          },
          "=",
          {
            "ref": [
              "$user",
              "locale"
            ]
          }
        ]
      }
    },
    "$location": {
      "file": "db/schema.cds",
      "line": 15,
      "col": 8
    },
    "$localized": true,
    "name": "volleyball.tournament.UserRoles"
  }
]&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P class=""&gt;&lt;A href="https://github.com/cap-js/mcp-server#search_docs" target="_self" rel="nofollow noopener noreferrer"&gt;search_docs&lt;/A&gt; searches CAP docs locally (embeddings) and returns relevant chunks.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "search_docs",
  "params": { "query": "draft activation action", "maxResults": 3 }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;The response to the above query looks like this:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt; Fiori Support &amp;gt; Lean Draft &amp;gt; Programmatic Invocation of Draft Actions &amp;lt;Beta /&amp;gt;
API, draft actions, JavaScript, Fiori, programmatic, service implementation
Demonstrates how to programmatically invoke Fiori draft actions using ApplicationService API: creating, discarding, editing, and saving (activating) drafts.

```js
await srv.new(MyEntity.drafts, data)     // create new draft
await srv.discard(MyEntity.drafts, keys) // discard draft
await srv.edit(MyEntity, keys)           // create draft from active instance
await srv.new(MyEntity.drafts).for(keys) // same as above
await srv.save(MyEntity.drafts, keys)    // activate draft
```

---
 Fiori Drafts &amp;gt; Activating Drafts
drafts, Java, event handler, CREATE, validation
Registers a @Before handler for the CREATE event. Used to validate user input or entity state before an active entity is created or updated as part of draft activation (Save action). Applies to activation flow of SAP Fiori draft-enabled entities.

```java
@Before
public void validateOrderItem(CdsCreateEventContext context, OrderItems orderItem) {
    // Add validation logic
}
```

---
 Fiori Support &amp;gt; Lean Draft &amp;gt; Handlers Registration
draft-specific events, event handler, Fiori, JavaScript, CANCEL, EDIT, NEW, SAVE
Illustrates how to add custom logic for specific draft events: NEW, CANCEL, EDIT, and SAVE. These let you react to various points in the Fiori draft process, including draft creation, discard, editing, and persisting changes.

```js
// When a new draft is created
srv.on('NEW', 'MyEntity.drafts', /*...*/)
// When a draft is discarded
srv.on('CANCEL', 'MyEntity.drafts', /*...*/)
// When a new draft is created from an active instance
srv.on('EDIT', 'MyEntity', /*...*/)
// When the active entity is changed
srv.on('SAVE', 'MyEntity', /*...*/)
```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt; Fiori Support &amp;gt; Lean Draft &amp;gt; Programmatic Invocation of Draft Actions &amp;lt;Beta /&amp;gt;
API, draft actions, JavaScript, Fiori, programmatic, service implementation
Demonstrates how to programmatically invoke Fiori draft actions using ApplicationService API: creating, discarding, editing, and saving (activating) drafts.

```js
await srv.new(MyEntity.drafts, data)     // create new draft
await srv.discard(MyEntity.drafts, keys) // discard draft
await srv.edit(MyEntity, keys)           // create draft from active instance
await srv.new(MyEntity.drafts).for(keys) // same as above
await srv.save(MyEntity.drafts, keys)    // activate draft
```

---
 Fiori Drafts &amp;gt; Activating Drafts
drafts, Java, event handler, CREATE, validation
Registers a @Before handler for the CREATE event. Used to validate user input or entity state before an active entity is created or updated as part of draft activation (Save action). Applies to activation flow of SAP Fiori draft-enabled entities.

```java
@Before
public void validateOrderItem(CdsCreateEventContext context, OrderItems orderItem) {
    // Add validation logic
}
```

---
 Fiori Support &amp;gt; Lean Draft &amp;gt; Handlers Registration
draft-specific events, event handler, Fiori, JavaScript, CANCEL, EDIT, NEW, SAVE
Illustrates how to add custom logic for specific draft events: NEW, CANCEL, EDIT, and SAVE. These let you react to various points in the Fiori draft process, including draft creation, discard, editing, and persisting changes.

```js
// When a new draft is created
srv.on('NEW', 'MyEntity.drafts', /*...*/)
// When a draft is discarded
srv.on('CANCEL', 'MyEntity.drafts', /*...*/)
// When a new draft is created from an active instance
srv.on('EDIT', 'MyEntity', /*...*/)
// When the active entity is changed
srv.on('SAVE', 'MyEntity', /*...*/)
```&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;H2 id="toc-hId-fiori" id="toc-hId-1169598687"&gt;Fiori MCP server&lt;/H2&gt;&lt;P class=""&gt;Package: &lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;@sap-ux/fiori-mcp-server&lt;/A&gt;.&lt;BR /&gt;GitHub Repo: &lt;A href="https://github.com/SAP/open-ux-tools/tree/main/packages/fiori-mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;github.com/SAP/open-ux-tools/packages/fiori-mcp-server&lt;/A&gt;&lt;BR /&gt;Release Blog Post:&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-update-first-release-of-the-sap-fiori-mcp-server-for/ba-p/14204694" target="_blank"&gt;SAP Fiori Tools Update – First Release of the SAP Fiori MCP Server for Agentic AI Workflows&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;What it does: generates or modifies SAP Fiori apps, including adding pages, controller extensions, FCL, and manifest changes. It returns required parameters for each functionality and executes the change.&lt;/P&gt;&lt;P class=""&gt;This MCP server also recommends adding a rules markdown file with the following content, so the LLM knows how to use the server better:&lt;/P&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;-&lt;/SPAN&gt; When asked to create an SAP Fiori elements app check whether the user input can be interpreted as an application organized into one or more pages containing table data or forms, these can be translated into a SAP Fiori elements application, else ask the user for suitable input.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; The application typically starts with a List Report page showing the data of the base entity of the application in a table. Details of a specific table row are shown in the ObjectPage. This first Object Page is therefore based on the base entity of the application.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; An Object Page can contain one or more table sections based on to-many associations of its entity type. The details of a table section row can be shown in an another Object Page based on the associations target entity.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; The data model must be suitable for usage in a SAP Fiori elements frontend application. So there must be one main entity and one or more navigation properties to related entities.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; Each property of an entity must have a proper datatype.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; For all entities in the data model provide primary keys of type UUID.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; When creating sample data in CSV files, all primary keys and foreign keys MUST be in UUID format (e.g., &lt;SPAN class=""&gt;`&lt;/SPAN&gt;&lt;SPAN class=""&gt;550e8400-e29b-41d4-a716-446655440001&lt;/SPAN&gt;&lt;SPAN class=""&gt;`&lt;/SPAN&gt;).
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; When generating or modifying the SAP Fiori elements application on top of the CAP service use the Fiori MCP server if available.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; When attempting to modify the SAP Fiori elements application like adding columns you must not use the screen personalization but instead modify the code of the project, before this first check whether an MCP server provides a suitable function.
&lt;SPAN class=""&gt;-&lt;/SPAN&gt; When previewing the SAP Fiori elements application use the most specific script for the app in the &lt;SPAN class=""&gt;`&lt;/SPAN&gt;&lt;SPAN class=""&gt;package.json&lt;/SPAN&gt;&lt;SPAN class=""&gt;`&lt;/SPAN&gt;.&lt;/PRE&gt;&lt;P class=""&gt;Use via npx (no install needed):&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "mcpServers": {
    "fiori-mcp": {
      "command": "npx",
      "args": ["--yes","@sap-ux/fiori-mcp-server@latest", "fiori-mcp"]
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Main tools: list-fiori-apps, list-functionality, get-functionality-details, execute-functionality. The typical flow is 1) list-functionality, 2) get-functionality-details, 3) execute-functionality.&lt;/P&gt;&lt;H3 id="toc-hId-fiori-tools" id="toc-hId-1102167901"&gt;Fiori tools and 3-step workflow&lt;/H3&gt;&lt;P class=""&gt;Discovery:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "list-fiori-apps",
  "params": { "workspaceDir": "/abs/path/to/mono" }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;The response for my sample repo looks like this:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;{
  "applications": [
    {
      "name": "resultsdashboard",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/results-dashboard",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    },
    {
      "name": "eventmanagement",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/event-management",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    },
    {
      "name": "matchresults",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/match-results",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    },
    {
      "name": "teammanagement",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/team-management",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;{
  "applications": [
    {
      "name": "resultsdashboard",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/results-dashboard",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    },
    {
      "name": "eventmanagement",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/event-management",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    },
    {
      "name": "matchresults",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/match-results",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    },
    {
      "name": "teammanagement",
      "appPath": "/Users/marianzeis/DEV/mcp-sap-test/app/team-management",
      "projectPath": "/Users/marianzeis/DEV/mcp-sap-test",
      "projectType": "CAPNodejs",
      "odataVersion": "4.0"
    }
  ]
}&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P class=""&gt;Step 1:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "list-functionality",
  "params": { "appPath": "/abs/path/to/app" }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;The redacted response is worth for my Fiori elements app about 13k tokens:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "applicationPath": "/Users/marianzeis/DEV/mcp-sap-test/app/event-management",
  "functionalities": [
    {
      "functionalityId": "add-page",
      "description": "Create new fiori elements page like ListReport, ObjectPage, CustomPage"
    },
    {
      "functionalityId": "generate-fiori-ui-app",
      "description": "Creates (generates) a new SAP Fiori UI application within an existing CAP project.\n                Crucially, you must first construct the appGenConfig JSON argument.\n                To do this, you **MUST** use the ***CDS MCP*** to search the model for service definitions, entities, associations, and UI annotations.\n                As a fallback, only if no such tool is available, you should manually read and parse all .cds files in the projectPath to extract this information.\n                The data obtained from either method must then be formatted into a JSON object and passed as the appGenConfig parameter."
    },
    {
      "functionalityId": "delete-page",
      "description": "Remove existing fiori elements page from the application"
    },
    {
      "functionalityId": "create-controller-extension",
      "description": "Add new controller extension by creating javascript or typescript file and updates manifest.json with entry. Controller extensions allow users to extensiate default behaviour with custom controllers code."
    },
    {
      "functionalityId": [
        "settings",
        "path"
      ],
      "description": "Represents a prefix that is prepended in front of the viewName"
    },
    {
      "functionalityId": [
        "settings",
        "viewType"
      ],
      "description": "standard view type of views"
    },
    {
      "functionalityId": [
        "settings",
        "title"
      ],
      "description": "Defines the title for the application."
    },
    {
      "functionalityId": [
        "settings",
        "description"
      ],
      "description": "Defines the description for the application."
    },
    {
      "functionalityId": [
        "settings",
        "flexEnabled"
      ],
      "description": "Enables key user adaptation for an application."
    },
    {
      "functionalityId": [
        "settings",
        "cloudDevAdaptationStatus"
      ],
      "description": "Represents the release status for the developer adaptation in the cloud (relevant for SAP internal only). The supported types are released, deprecated, obsolete, no value means not released."
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout"
      ],
      "description": "The flexible column layout allows users to see more details on the page, and to expand and collapse the screen areas."
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout",
        "limitFCLToTwoColumns"
      ],
      "description": "Determines whether the Flexible Column Layout is limited to two columns. If set to true, the third level will be displayed in full screen mode rather than a third column."
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout",
        "defaultTwoColumnLayoutType"
      ],
      "description": "Default Two Column Layout Type"
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout",
        "defaultThreeColumnLayoutType"
      ],
      "description": "Default Three Column Layout Type"
    },
    {
      "functionalityId": [
        "settings",
        "controllerExtensions"
      ],
      "description": "Controller extensions allow users to extensiate default behaviour with custom controllers code."
    },
    {
      "functionalityId": [
        "settings",
        "hideDraft"
      ],
      "description": "Hidden draft features."
    },
    {
      "functionalityId": [
        "settings",
        "hideDraft",
        "enabled"
      ],
      "description": "All features related to draft handling can be hidden from the UI while the draft functionality remains active in the background. To achieve this, enable the 'Hide Draft' property."
    },
    {
      "functionalityId": [
        "settings",
        "hideDraft",
        "stayOnCurrentPageAfterSave"
      ],
      "description": "Determines whether to stay on the current page after saving an object.\nTo ensure a consistent experience, set this and 'Stay On Current Page After Cancel' to the same value."
    },&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;{
  "applicationPath": "/Users/marianzeis/DEV/mcp-sap-test/app/event-management",
  "functionalities": [
    {
      "functionalityId": "add-page",
      "description": "Create new fiori elements page like ListReport, ObjectPage, CustomPage"
    },
    {
      "functionalityId": "generate-fiori-ui-app",
      "description": "Creates (generates) a new SAP Fiori UI application within an existing CAP project.\n                Crucially, you must first construct the appGenConfig JSON argument.\n                To do this, you **MUST** use the ***CDS MCP*** to search the model for service definitions, entities, associations, and UI annotations.\n                As a fallback, only if no such tool is available, you should manually read and parse all .cds files in the projectPath to extract this information.\n                The data obtained from either method must then be formatted into a JSON object and passed as the appGenConfig parameter."
    },
    {
      "functionalityId": "delete-page",
      "description": "Remove existing fiori elements page from the application"
    },
    {
      "functionalityId": "create-controller-extension",
      "description": "Add new controller extension by creating javascript or typescript file and updates manifest.json with entry. Controller extensions allow users to extensiate default behaviour with custom controllers code."
    },
    {
      "functionalityId": [
        "settings",
        "path"
      ],
      "description": "Represents a prefix that is prepended in front of the viewName"
    },
    {
      "functionalityId": [
        "settings",
        "viewType"
      ],
      "description": "standard view type of views"
    },
    {
      "functionalityId": [
        "settings",
        "title"
      ],
      "description": "Defines the title for the application."
    },
    {
      "functionalityId": [
        "settings",
        "description"
      ],
      "description": "Defines the description for the application."
    },
    {
      "functionalityId": [
        "settings",
        "flexEnabled"
      ],
      "description": "Enables key user adaptation for an application."
    },
    {
      "functionalityId": [
        "settings",
        "cloudDevAdaptationStatus"
      ],
      "description": "Represents the release status for the developer adaptation in the cloud (relevant for SAP internal only). The supported types are released, deprecated, obsolete, no value means not released."
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout"
      ],
      "description": "The flexible column layout allows users to see more details on the page, and to expand and collapse the screen areas."
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout",
        "limitFCLToTwoColumns"
      ],
      "description": "Determines whether the Flexible Column Layout is limited to two columns. If set to true, the third level will be displayed in full screen mode rather than a third column."
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout",
        "defaultTwoColumnLayoutType"
      ],
      "description": "Default Two Column Layout Type"
    },
    {
      "functionalityId": [
        "settings",
        "flexibleColumnLayout",
        "defaultThreeColumnLayoutType"
      ],
      "description": "Default Three Column Layout Type"
    },
    {
      "functionalityId": [
        "settings",
        "controllerExtensions"
      ],
      "description": "Controller extensions allow users to extensiate default behaviour with custom controllers code."
    },
    {
      "functionalityId": [
        "settings",
        "hideDraft"
      ],
      "description": "Hidden draft features."
    },
    {
      "functionalityId": [
        "settings",
        "hideDraft",
        "enabled"
      ],
      "description": "All features related to draft handling can be hidden from the UI while the draft functionality remains active in the background. To achieve this, enable the 'Hide Draft' property."
    },
    {
      "functionalityId": [
        "settings",
        "hideDraft",
        "stayOnCurrentPageAfterSave"
      ],
      "description": "Determines whether to stay on the current page after saving an object.\nTo ensure a consistent experience, set this and 'Stay On Current Page After Cancel' to the same value."
    },&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P class=""&gt;Step 2:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "get-functionality-details",
  "params": { "appPath": "/abs/path/to/app", "functionalityId": "add-page" }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Here is a response for the functionality "add-page":&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "functionalityId": "add-page",
  "name": "Add new page to application by updating manifest.json",
  "description": "Create new fiori elements page like ListReport, ObjectPage, CustomPage",
  "parameters": [
    {
      "id": "parentPage",
      "type": "string",
      "description": "Parent page is id/name of parent page. First try to extract parent page from user input in a format defined in example, if not possible suggest content defined in options",
      "options": [
        "EventsObjectPage"
      ],
      "required": true,
      "examples": [
        "parentPage: EventsObjectPage"
      ]
    },
    {
      "id": "pageNavigation",
      "type": "string",
      "description": "Page navigation option for parent page. First try to extract navigation option from user input in a format defined in example, if not possible suggest content defined in options",
      "options": [
        "for EventsObjectPage: available navigation(s) is/are one of: teams, groups, matches"
      ],
      "examples": [
        "pageNavigation: teams"
      ],
      "required": true
    },
    {
      "id": "pageType",
      "type": "string",
      "description": "Type of page to be created. First try to extract page type from user input in a format defined in example, if not possible suggest content defined in options.",
      "options": [
        "ObjectPage",
        "ListReport",
        "CustomPage",
        "FPMCustomPage",
        "AnalyticalListPage"
      ],
      "examples": [
        "pageType: ObjectPage"
      ],
      "required": true
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;{
  "functionalityId": "add-page",
  "name": "Add new page to application by updating manifest.json",
  "description": "Create new fiori elements page like ListReport, ObjectPage, CustomPage",
  "parameters": [
    {
      "id": "parentPage",
      "type": "string",
      "description": "Parent page is id/name of parent page. First try to extract parent page from user input in a format defined in example, if not possible suggest content defined in options",
      "options": [
        "EventsObjectPage"
      ],
      "required": true,
      "examples": [
        "parentPage: EventsObjectPage"
      ]
    },
    {
      "id": "pageNavigation",
      "type": "string",
      "description": "Page navigation option for parent page. First try to extract navigation option from user input in a format defined in example, if not possible suggest content defined in options",
      "options": [
        "for EventsObjectPage: available navigation(s) is/are one of: teams, groups, matches"
      ],
      "examples": [
        "pageNavigation: teams"
      ],
      "required": true
    },
    {
      "id": "pageType",
      "type": "string",
      "description": "Type of page to be created. First try to extract page type from user input in a format defined in example, if not possible suggest content defined in options.",
      "options": [
        "ObjectPage",
        "ListReport",
        "CustomPage",
        "FPMCustomPage",
        "AnalyticalListPage"
      ],
      "examples": [
        "pageType: ObjectPage"
      ],
      "required": true
    }
  ]
}&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P class=""&gt;The problem here is that the MCP server returns an error:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{"error": "MCP error -32602: Structured content does not
match the tool's output schema: data should have
required property '.id'"}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;I tested a few different functionalities and always saw the same error, so unfortunately this can't be used yet.&lt;BR /&gt;Step 3:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "execute-functionality",
  "params": {
    "appPath": "/abs/path/to/app",
    "functionalityId": "add-page",
    "parameters": {
      "pageType": "ObjectPage",
      "entity": "Books",
      "navigation": "toAuthors"
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;As I got stuck at step 2, I unfortunately couldn't properly test step 3.&lt;/P&gt;&lt;H2 id="toc-hId-ui5" id="toc-hId-776571677"&gt;UI5 MCP server&lt;/H2&gt;&lt;P class=""&gt;Package: &lt;A href="https://www.npmjs.com/package/@ui5/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;@ui5/mcp-server&lt;/A&gt;.&lt;BR /&gt;GitHub:&amp;nbsp;&lt;A href="https://github.com/UI5/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;github.com/UI5/mcp-server&lt;/A&gt;&lt;BR /&gt;Release Blog Post:&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/give-your-ai-agent-some-tools-introducing-the-ui5-mcp-server/ba-p/14200825" target="_blank"&gt;Give Your AI Agent Some Tools: Introducing the UI5 MCP Server&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;What it does: scaffolds UI5 apps, fetches API reference and guidelines, inspects an existing UI5 project, retrieves framework version info, and runs the UI5 linter for actionable fixes.&lt;/P&gt;&lt;P class=""&gt;Quick client config:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "mcpServers": {
    "ui5mcp": {
      "command": "npx",
      "args": ["@ui5/mcp-server"]
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Environment options (examples):&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "mcpServers": {
    "ui5mcp": {
      "command": "npx",
      "args": ["@ui5/mcp-server"],
      "env": {
        "UI5_MCP_SERVER_ALLOWED_ODATA_DOMAINS": "localhost, services.odata.org",
        "UI5_LOG_LVL": "verbose"
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Available tools: create_ui5_app, get_api_reference, get_guidelines, get_project_info, get_version_info, run_ui5_linter.&lt;/P&gt;&lt;H3 id="toc-hId-ui5-tools" id="toc-hId-709140891"&gt;UI5 tools in detail&lt;/H3&gt;&lt;P class=""&gt;create_ui5_app scaffolds a project from built-in templates (JS or TS). It can also preconfigure an OData V4 model if you pass a service URL that matches the allowed domains.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "create_ui5_app",
  "params": {
    "projectDir": "/abs/path/new-ui5-app",
    "template": "ts",
    "oDataV4Url": "https://services.odata.org/V4/OData/OData.svc/"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;get_api_reference downloads and caches api.json files for the configured UI5 version and returns focused API info for a symbol.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "get_api_reference",
  "params": { "projectDir": "/abs/path/ui5-app", "symbol": "sap.m.Button#text" }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In my tests this did not work. One app was using version 1.108.1 in ui5.yaml, and using this tool I got the following response:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Failed to fetch resource from CDN. Error: The requested resource does not exist for URL: https://ui5.sap.com/1.108.1/resources/sap-ui-version.json&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;My second Fiori elements app was using SAPUI5 version 1.136.7. The API reference tool gets the reference from the OpenUI5 SDK, which has the current maximum patch of 1.136.5. Because of this I got the error:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Failed to fetch resource from CDN. Error: The requested resource does not exist for URL: https://sdk.openui5.org/1.136.7/resources/sap-ui-version.json&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Even after changing the version in the manifest I could not get the tool to work. It was still fetching the wrong version.&lt;BR /&gt;get_guidelines returns a curated markdown with UI5 and CAP development guidelines for agents.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "get_guidelines",
  "params": {}
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Response:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# UI5 Development Guidelines

&amp;gt; *This document outlines the fundamental rules and best practices an AI agent must follow when developing or modifying SAPUI5 projects. Adherence to these guidelines is critical for creating modern, maintainable, and performant applications.*

## 1. Coding Guidelines

- **NEVER** use global variables to access UI5 framework objects (e.g., `sap.m.Button`). Instead, explicitly declare all dependencies, so that they are loaded asynchronously before your code executes.
  - in Javascript&amp;amp;colon; Using `sap.ui.define` at the top of the file (which also registers the file as a UI5 module) or dynamically using `sap.ui.require`
  - in TypeScript: Using ES6 `import` statements
  - in XML:
    - For controls it is sufficient to declare the corresponding XML tag (e.g. `&amp;lt;m:Button&amp;gt;&amp;lt;/m:Button&amp;gt;`). The XML Template engine will load the corresponding resource automatically.
    - However, when referring to programmatic API like formatters or types, those must be "imported" using a `core:require` directive
    - Example
      ```xml
       &amp;lt;ObjectListItem
          core:require="{
              Currency: 'sap/ui/model/type/Currency'
          }"
          title="{invoice&amp;gt;Quantity} x {invoice&amp;gt;ProductName}"
          number="{
              parts: [
                  'invoice&amp;gt;ExtendedPrice',
                  'view&amp;gt;/currency'
              ],
              type: 'Currency',
              formatOptions: {
                  showMeasure: false
              }
          }"
          numberUnit="{view&amp;gt;/currency}"/&amp;gt;
      ```
    - Find more information on the UI5 documentation page "Require Modules in XML View and Fragment"
- **ALWAYS** use the `sap/ui/core/ComponentSupport` module to initialize a UI5 application/component in an HTML page
  - Example:
    ```html
    &amp;lt;!-- index.html --&amp;gt;
    &amp;lt;script id="sap-ui-bootstrap"
      src="resources/sap-ui-core.js"
      data-sap-ui-on-init="module:sap/ui/core/ComponentSupport"
      data-sap-ui-async="true"
      data-sap-ui-resource-roots='{ "my.app": "./" }'
      data-...="..."&amp;gt;
    &amp;lt;/script&amp;gt;
    ```
  - Find more information on the UI5 documentation page "Declarative API for Initial Components"
- **ALWAYS** use data binding in views to connect UI controls to data or i18n models.
  - When binding data from OData services, **NEVER** use custom formatters for standard data types (e.g., dates, numbers, currencies). The built-in types handle these cases automatically.
- When making changes to `*.properties` files, **ALWAYS** apply the changes to all relevant locales. This ensures consistency across different language versions of the application.
  - **Example:** If you add a new key to `i18n.properties`, also add it to existing translation files like e.g `i18n_en.properties`, `i18n_de.properties`, etc.
- **NEVER** use inline script in HTML
  - All application logic must reside in dedicated JS or TS files. Inline `&amp;lt;script&amp;gt;` would violate the recommended CSP settings for UI5 applications.
  - Find more information on the UI5 documentation page "Content Security Policy"

### TypeScript: Special Handling for Control Event Handlers

- **Rule:** For any control event handler, import and use the specific event type from the control's module. The type is typically named `&amp;lt;ControlName&amp;gt;$&amp;lt;EventName&amp;gt;Event`. Notice the "Event" suffix.
- **Example:** For the `press` event of `sap.m.Button`, use `import {Button$PressEvent} from "sap/m/Button"`.
  - The event handler then may look like this: `onPress(event: Button$PressEvent): void { [...]`.
- **Benefit:** This provides static type checking and autocompletion for event parameters (e.g., `event.getParameter(...)`) without needing manual casting or comments.
- **Version Compatibility:**
    - **UI5 &amp;gt;= 1.115.0:** This feature is available and **MUST** be used.
    - **UI5 &amp;lt; 1.115.0:** These specific types are **NOT** available. Use the generic `import Event from "sap/ui/base/Event"` as the fallback type.

**Example (UI5 &amp;gt;= 1.115.0):**

```ts
// Import the specific event type from the control's module
import { Table$RowSelectionChangeEvent } from "sap/ui/table/Table";
import Table from "sap/ui/table/Table";

// ... inside a controller class
public onRowSelectionChange(event: Table$RowSelectionChangeEvent): void {
    // Correctly typed: getParameter is known and its return value can be inferred
    const selectedContext = event.getParameter("rowContext");
    // ...
}
```

## 2. Tooling and Environment Interaction

An AI agent must understand how to use and interpret the standard UI5 development tools, primarily through the available MCP tools.

- **API Lookup:** To get information on UI5 controls and APIs, **ALWAYS** use the `get_api_reference` tool. This provides direct access to the official UI5 API Reference. Provide it with a path to the current project and it will provide the correct API reference for the UI5 version in use.
- **Code Validation:** To identify issues, **ALWAYS** use the `run_ui5_linter` tool. It detects deprecated APIs, accessibility issues, and other potential bugs.
- **Code Fixes:** To apply fixes suggested by the linter, always confirm with the user first. Then use the `fix` parameter of the `run_ui5_linter` tool. This will automatically correct _some_ of the identified issues. The tool can also provide context information that can be used to manually fix the remaining issues when tasked to do so.
- **Local Server Behavior:** When interacting with the UI5 CLI's development server, understand that it does **NOT** serve a default index file. You **MUST ALWAYS** reference files by their full path when using the browser (e.g., `http://localhost:8080/index.html`, not `http://localhost:8080/`).

## 3. CAP (Cloud Application Programming Model) Integration

When creating a new UI5 project within a CAP project, a specific set of rules apply to ensure seamless integration.

- **Project Location:** **ALWAYS** create UI5 projects within the `app/` directory of the CAP project root.
- **Service Information:**
  - If CDS tools are available to you, **ALWAYS** use them to get information about the definitions, services and their endpoints.
  - If no CDS tools are available to you, **ALWAYS** run `cds compile '*'` to get information about the definitions and `cds compile '*' --to serviceinfo` to get information about the services and their endpoints.
- **Service Integration:** When creating the UI5 project, **ALWAYS** provide the absolute OData V4 service URL and the target entity set when prompted by the tooling.
- **Plugin Installation:** **ALWAYS** run `npm i -D cds-plugin-ui5` in the CAP project root directory to ensure the latest version of `cds-plugin-ui5` is installed. This plugin automatically handles serving the UI5 applications.
- **Running the Server:**
    - **NEVER** run a separate `ui5 serve` or `npm start` command inside the UI5 project folder.
    - **ALWAYS** run `cds watch` (or `cds run`) from the **root** of the CAP project. This single command serves both the backend services and all UI5 applications.
- **Data Connection:**
    - **NEVER** configure a `ui5-middleware-simpleproxy` in the `ui5.yaml` file to connect to the local CAP service.
    - **Why:** The `cds watch` command ensures the UI and the service are served from the same origin (`http://localhost:4004`), making a proxy unnecessary.
- **Accessing the App:** Check the CAP launch page (typically `http://localhost:4004`) for a list of available services and links to the UI5 applications.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;# UI5 Development Guidelines

&amp;gt; *This document outlines the fundamental rules and best practices an AI agent must follow when developing or modifying SAPUI5 projects. Adherence to these guidelines is critical for creating modern, maintainable, and performant applications.*

## 1. Coding Guidelines

- **NEVER** use global variables to access UI5 framework objects (e.g., `sap.m.Button`). Instead, explicitly declare all dependencies, so that they are loaded asynchronously before your code executes.
  - in Javascript&amp;amp;colon; Using `sap.ui.define` at the top of the file (which also registers the file as a UI5 module) or dynamically using `sap.ui.require`
  - in TypeScript: Using ES6 `import` statements
  - in XML:
    - For controls it is sufficient to declare the corresponding XML tag (e.g. `&amp;lt;m:Button&amp;gt;&amp;lt;/m:Button&amp;gt;`). The XML Template engine will load the corresponding resource automatically.
    - However, when referring to programmatic API like formatters or types, those must be "imported" using a `core:require` directive
    - Example
      ```xml
       &amp;lt;ObjectListItem
          core:require="{
              Currency: 'sap/ui/model/type/Currency'
          }"
          title="{invoice&amp;gt;Quantity} x {invoice&amp;gt;ProductName}"
          number="{
              parts: [
                  'invoice&amp;gt;ExtendedPrice',
                  'view&amp;gt;/currency'
              ],
              type: 'Currency',
              formatOptions: {
                  showMeasure: false
              }
          }"
          numberUnit="{view&amp;gt;/currency}"/&amp;gt;
      ```
    - Find more information on the UI5 documentation page "Require Modules in XML View and Fragment"
- **ALWAYS** use the `sap/ui/core/ComponentSupport` module to initialize a UI5 application/component in an HTML page
  - Example:
    ```html
    &amp;lt;!-- index.html --&amp;gt;
    &amp;lt;script id="sap-ui-bootstrap"
      src="resources/sap-ui-core.js"
      data-sap-ui-on-init="module:sap/ui/core/ComponentSupport"
      data-sap-ui-async="true"
      data-sap-ui-resource-roots='{ "my.app": "./" }'
      data-...="..."&amp;gt;
    &amp;lt;/script&amp;gt;
    ```
  - Find more information on the UI5 documentation page "Declarative API for Initial Components"
- **ALWAYS** use data binding in views to connect UI controls to data or i18n models.
  - When binding data from OData services, **NEVER** use custom formatters for standard data types (e.g., dates, numbers, currencies). The built-in types handle these cases automatically.
- When making changes to `*.properties` files, **ALWAYS** apply the changes to all relevant locales. This ensures consistency across different language versions of the application.
  - **Example:** If you add a new key to `i18n.properties`, also add it to existing translation files like e.g `i18n_en.properties`, `i18n_de.properties`, etc.
- **NEVER** use inline script in HTML
  - All application logic must reside in dedicated JS or TS files. Inline `&amp;lt;script&amp;gt;` would violate the recommended CSP settings for UI5 applications.
  - Find more information on the UI5 documentation page "Content Security Policy"

### TypeScript: Special Handling for Control Event Handlers

- **Rule:** For any control event handler, import and use the specific event type from the control's module. The type is typically named `&amp;lt;ControlName&amp;gt;$&amp;lt;EventName&amp;gt;Event`. Notice the "Event" suffix.
- **Example:** For the `press` event of `sap.m.Button`, use `import {Button$PressEvent} from "sap/m/Button"`.
  - The event handler then may look like this: `onPress(event: Button$PressEvent): void { [...]`.
- **Benefit:** This provides static type checking and autocompletion for event parameters (e.g., `event.getParameter(...)`) without needing manual casting or comments.
- **Version Compatibility:**
    - **UI5 &amp;gt;= 1.115.0:** This feature is available and **MUST** be used.
    - **UI5 &amp;lt; 1.115.0:** These specific types are **NOT** available. Use the generic `import Event from "sap/ui/base/Event"` as the fallback type.

**Example (UI5 &amp;gt;= 1.115.0):**

```ts
// Import the specific event type from the control's module
import { Table$RowSelectionChangeEvent } from "sap/ui/table/Table";
import Table from "sap/ui/table/Table";

// ... inside a controller class
public onRowSelectionChange(event: Table$RowSelectionChangeEvent): void {
    // Correctly typed: getParameter is known and its return value can be inferred
    const selectedContext = event.getParameter("rowContext");
    // ...
}
```

## 2. Tooling and Environment Interaction

An AI agent must understand how to use and interpret the standard UI5 development tools, primarily through the available MCP tools.

- **API Lookup:** To get information on UI5 controls and APIs, **ALWAYS** use the `get_api_reference` tool. This provides direct access to the official UI5 API Reference. Provide it with a path to the current project and it will provide the correct API reference for the UI5 version in use.
- **Code Validation:** To identify issues, **ALWAYS** use the `run_ui5_linter` tool. It detects deprecated APIs, accessibility issues, and other potential bugs.
- **Code Fixes:** To apply fixes suggested by the linter, always confirm with the user first. Then use the `fix` parameter of the `run_ui5_linter` tool. This will automatically correct _some_ of the identified issues. The tool can also provide context information that can be used to manually fix the remaining issues when tasked to do so.
- **Local Server Behavior:** When interacting with the UI5 CLI's development server, understand that it does **NOT** serve a default index file. You **MUST ALWAYS** reference files by their full path when using the browser (e.g., `http://localhost:8080/index.html`, not `http://localhost:8080/`).

## 3. CAP (Cloud Application Programming Model) Integration

When creating a new UI5 project within a CAP project, a specific set of rules apply to ensure seamless integration.

- **Project Location:** **ALWAYS** create UI5 projects within the `app/` directory of the CAP project root.
- **Service Information:**
  - If CDS tools are available to you, **ALWAYS** use them to get information about the definitions, services and their endpoints.
  - If no CDS tools are available to you, **ALWAYS** run `cds compile '*'` to get information about the definitions and `cds compile '*' --to serviceinfo` to get information about the services and their endpoints.
- **Service Integration:** When creating the UI5 project, **ALWAYS** provide the absolute OData V4 service URL and the target entity set when prompted by the tooling.
- **Plugin Installation:** **ALWAYS** run `npm i -D cds-plugin-ui5` in the CAP project root directory to ensure the latest version of `cds-plugin-ui5` is installed. This plugin automatically handles serving the UI5 applications.
- **Running the Server:**
    - **NEVER** run a separate `ui5 serve` or `npm start` command inside the UI5 project folder.
    - **ALWAYS** run `cds watch` (or `cds run`) from the **root** of the CAP project. This single command serves both the backend services and all UI5 applications.
- **Data Connection:**
    - **NEVER** configure a `ui5-middleware-simpleproxy` in the `ui5.yaml` file to connect to the local CAP service.
    - **Why:** The `cds watch` command ensures the UI and the service are served from the same origin (`http://localhost:4004`), making a proxy unnecessary.
- **Accessing the App:** Check the CAP launch page (typically `http://localhost:4004`) for a list of available services and links to the UI5 applications.&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P&gt;get_project_info inspects ui5.yaml and manifest to report framework, version, and libraries.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "get_project_info",
  "params": { "projectDir": "/abs/path/ui5-app" }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;The response is a bit underwhelming, as I was expecting more information about the project as described in the output format:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;{
  "projectDir": "/Users/marianzeis/DEV/mcp-sap-test-2/app/match-management",
  "projectName": "matchmanagement",
  "projectType": "application",
  "frameworkLibraries": []
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;get_version_info pulls version.json from the selected CDN to show latest and LTS.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "get_version_info",
  "params": { "framework": "OpenUI5" }
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Response:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "versions": {
    "latest": {
      "version": "1.139.0",
      "support": "Maintenance",
      "lts": false
    },
    "active": {
      "version": "1.139.0",
      "support": "Maintenance",
      "lts": false
    },
    "1.139": {
      "version": "1.139.0",
      "support": "Maintenance",
      "lts": false
    },
    "1.136": {
      "version": "1.136.8",
      "support": "Maintenance",
      "lts": true
    },
    "1.133": {
      "version": "1.133.5",
      "support": "Maintenance",
      "lts": false
    },
    "1.130": {
      "version": "1.130.11",
      "support": "Maintenance",
      "lts": false
    },
    "1.120": {
      "version": "1.120.35",
      "support": "Maintenance",
      "lts": true
    },
    "1.108": {
      "version": "1.108.45",
      "support": "Maintenance",
      "lts": true
    },
    "1.96": {
      "version": "1.96.43",
      "support": "Maintenance",
      "lts": true
    },
    "1.84": {
      "version": "1.84.54",
      "support": "Maintenance",
      "lts": true
    },
    "1.71": {
      "version": "1.71.76",
      "support": "Maintenance",
      "lts": true
    },
    "1.38": {
      "version": "1.38.65",
      "support": "Maintenance",
      "lts": true
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;{
  "versions": {
    "latest": {
      "version": "1.139.0",
      "support": "Maintenance",
      "lts": false
    },
    "active": {
      "version": "1.139.0",
      "support": "Maintenance",
      "lts": false
    },
    "1.139": {
      "version": "1.139.0",
      "support": "Maintenance",
      "lts": false
    },
    "1.136": {
      "version": "1.136.8",
      "support": "Maintenance",
      "lts": true
    },
    "1.133": {
      "version": "1.133.5",
      "support": "Maintenance",
      "lts": false
    },
    "1.130": {
      "version": "1.130.11",
      "support": "Maintenance",
      "lts": false
    },
    "1.120": {
      "version": "1.120.35",
      "support": "Maintenance",
      "lts": true
    },
    "1.108": {
      "version": "1.108.45",
      "support": "Maintenance",
      "lts": true
    },
    "1.96": {
      "version": "1.96.43",
      "support": "Maintenance",
      "lts": true
    },
    "1.84": {
      "version": "1.84.54",
      "support": "Maintenance",
      "lts": true
    },
    "1.71": {
      "version": "1.71.76",
      "support": "Maintenance",
      "lts": true
    },
    "1.38": {
      "version": "1.38.65",
      "support": "Maintenance",
      "lts": true
    }
  }
}&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P&gt;run_ui5_linter analyzes the project and can auto-fix; optionally include context information for API references, rule descriptions and migration guides.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "tool": "run_ui5_linter",
  "params": {
    "projectDir": "/abs/path/ui5-app",
    "fix": true,
    "provideContextInformation": true
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The response is a complete overview, just like when running the UI5 linter directly. The benefit is that it is fed directly into the LLM so remaining issues can be fixed.&lt;/P&gt;&lt;H2 id="toc-hId-bas" id="toc-hId-383544667"&gt;Using these servers in VS Code&lt;/H2&gt;&lt;P class=""&gt;You can run all three servers in VS Code. For CAP and Fiori, install globally or use npx and configure your MCP-capable client inside VS Code. If your client cannot be configured, you can still validate functionality by calling the server CLIs directly (for CAP) or by using the tool flows that write files and then reviewing the diffs. For quick inspection of HTTP-based MCP endpoints you can use the MCP Inspector:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npx @modelcontextprotocol/inspector&lt;/code&gt;&lt;/pre&gt;&lt;!--    Joule section folded into Final words    --&gt;&lt;H2 id="toc-hId-compare" id="toc-hId-187031162"&gt;Which MCP server when?&lt;/H2&gt;&lt;P class=""&gt;This overview helps decide which server to use first. You can run them together in one client.&lt;/P&gt;&lt;TABLE border="1"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Server&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Primary goal&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Scope&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Local project awareness&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Typical use&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Notes&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/163398"&gt;@cap&lt;/a&gt;-js/mcp-server&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Understand and change CAP models safely&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;CDS model, CAP docs&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Yes (compiled CDS)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Search entities/services, check docs before edits&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;CLI tools available&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;-ux/fiori-mcp-server&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Create/modify Fiori elements apps&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;FE app scaffolding and refactoring&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Yes (scans workspace)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Add pages, FCL, controller extensions, manifest changes&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;three-step functionality flow&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;@ui5/mcp-server&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Bootstrap and fix UI5 apps&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Templates, API, guidelines, lint fixes&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Yes (project inspection)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Create UI5 app, read API, run linter&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;&lt;A href="https://github.com/marianfoo/mcp-sap-docs" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Docs MCP&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Find the right official page, API, sample&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;SAPUI5, CAP, UI5 Tooling, OpenUI5 API, wdi5, SAP Help, SAP Community&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;No (documentation-first)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Answer questions with sources; verify changes&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Hosted endpoints available; consistent result format&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;!--    Observations folded into Final words    --&gt;&lt;H2 id="toc-hId-first-tests" id="toc-hId--9482343"&gt;First tests in Cursor&lt;/H2&gt;&lt;P class=""&gt;In an initial test with all MCP servers, the CAP server performed particularly well.&lt;BR /&gt;Based on the recommendations for the MCP server, I created a detailed rules file to better guide the MCP server and the LLM.&lt;BR /&gt;Unfortunately, the Fiori tools server did not work, otherwise the Fiori elements apps would have been generated successfully.&lt;BR /&gt;A test without the SAP MCP server successfully generated Fiori elements apps.&lt;/P&gt;&lt;P class=""&gt;I think the best way is to combine the MCP SAP Docs server with the MCP servers from SAP and control them with rules so that they work well together.&lt;/P&gt;&lt;P class=""&gt;My rules file which you can use in your project:&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# SAP Development Rules for AI Assistants

## MCP Server Usage Rules

### CAP MCP Server (@cap-js/mcp-server)
- You MUST search for CDS definitions, like entities, fields and services (which include HTTP endpoints) with cds-mcp, only if it fails you MAY read *.cds files in the project.
- You MUST search for CAP docs with cds-mcp EVERY TIME you modify CDS models or when using APIs from CAP. Do NOT propose, suggest or make any changes without first checking it.
- Always refer to @cap docs for better information about SAP CAP (Cloud Application Programming) applications.

### Fiori MCP Server (@sap-ux/fiori-mcp-server)
- When asked to create an SAP Fiori elements app check whether the user input can be interpreted as an application organized into one or more pages containing table data or forms.
- When generating or modifying SAP Fiori elements applications on top of CAP services, use the Fiori MCP server if available.
- When attempting to modify SAP Fiori elements applications like adding columns, you must NOT use screen personalization but instead modify the code of the project. First check whether an MCP server provides a suitable function.
- Follow the 3-step workflow: list-functionality → get-functionality-details → execute-functionality.

### UI5 MCP Server (@ui5/mcp-server)
- This tool MUST be called once to retrieve UI5 guidelines before working on any UI5 (SAPUI5/OpenUI5) related task or project.
- Use for UI5 linting, API reference, project information, and version details.
- Always run UI5 linter after making changes and verify no new problems are introduced.

## SAP CAP Development Rules

### Project Initialization
- Always use `cds init` and don't use `cds init projectname`
- Always create nodejs CAP based applications (don't add --add, just init is fine)
- Always add `cds lint` after generating the application
- Always enable draft for CAP applications but AVOID draft on composed entities
- Don't add random samples using `cds add sample`
- MANDATORY: Set up npm workspaces for UI5 applications in package.json:
  ```json
  {
    "workspaces": [
      "app/*"
    ]
  }
  ```

### Data Modeling
- If using cuid aspect, a default column ID is added and usually has UUIDs
- When cuid is added to entity, then ID will be uuid, so ensure sample data will have ID type uuid
- Prefer composition over association for child entities in SAP CAP
- Use cds managed aspect wherever necessary and add it to entity for it to work
- Don't use enums, prefer associated tables with preload configuration data
- For all entities in the data model provide primary keys of type UUID
- When creating sample data in CSV files, all primary keys and foreign keys MUST be in UUID format (e.g., `550e8400-e29b-41d4-a716-446655440001`)

#### CRITICAL: Draft Entity Composition Rules
- NEVER apply @odata.draft.enabled to both parent and child entities in a composition
- Only apply draft to the main/parent entity (e.g., Events but NOT Teams if Events composes Teams)
- Child entities should be managed through the parent's draft context
- ERROR EXAMPLE: Events @odata.draft.enabled + Teams @odata.draft.enabled + Events composes Teams = BUILD FAILURE

### Value Helps and Views
- For cds views use #TextOnly
- For smaller set of data, prefer fixed values (dropdown) instead of popup help - ValueListWithFixedValues: true

### Testing and Development
- Use `cds build` to find any annotation errors and fix them before testing
- Use `cds watch` to test locally
- After `cds watch`, don't call `sleep 5 or 3`, it will stop cds watch
- Use browser testing to confirm if it's working fine and UI looks good

## Fiori Application Generation

### JSON Configuration Template
Always use this configuration structure for Fiori app generation:
```json
{
    "version": "0.2",
    "floorplan": "FE_LROP",
    "project": {
        "name": "app-name",
        "targetFolder": "/path/to/project",
        "title": "App Title",
        "description": "App Description",
        "ui5Version": "1.132.1",
        "localUI5Version": "1.82.2",
        "sapux": true
    },
    "service": {
        "servicePath": "/service/path/",
        "capService": {
            "projectPath": "/path/to/project",
            "serviceName": "serviceName",
            "serviceCdsPath": "srv/service.cds"
        }
    },
    "entityConfig": {
        "mainEntity": {
            "entityName": "EntityName"
        },
        "generateFormAnnotations": true
    },
    "projectType": "FORM_ENTRY_OBJECT_PAGE",
    "telemetryData": {
        "generationSourceName": "AI Headless",
        "generationSourceVersion": "1.18.1"
    }
}
```

### Required Steps for Fiori Generation
1. First generate the JSON config file as shown above
2. Run the command: `yo @sap/fiori:headless "/path/to/config.json" --force`
3. Add necessary annotations in the generated fiori application (usually in annotations.cds file)
4. Check https://github.com/SAP-samples/fiori-elements-feature-showcase for guidance on annotations

### Package Requirements
- Always use node package "yo" with version 4.3.1
- Before installing check if yo is already installed
- Use @sap/generator-fiori for fiori app generation
- CRITICAL: Always install these UI5 dependencies to avoid startup failures:
  - `npm install -D @ui5/cli` (required for cds-plugin-ui5)
  - `npm install -D @sap/ux-ui5-tooling` (required for advanced UI5 features)
- Always install `npm install -D cds-plugin-ui5` for CAP-UI5 integration

### UI Design Guidelines
- Application typically starts with a List Report page showing data in a table
- Details of specific table row shown in ObjectPage based on the base entity
- ObjectPage can contain table sections based on to-many associations
- Ensure complete UI is generated for requirements and all UI is tested
- Add necessary annotations: Tables for compositions, labels for all fields, value helps, etc.
- Ensure the UI is complete and functional

## Project Management and Documentation

### Product Requirements Document (PRD)
- Always ensure a product requirement document is there (prd.md) with high level requirements
- Status should be "approved" before starting development
- Should be TDD based development -&amp;gt; test after every change
- If PRD is not there, take requirements and generate the PRD
- Initial status should be "pending" - only work when status is "approved"
- Don't assume anything, first ask user to verify the PRD

### PRD Structure
```markdown
# Product Requirements Document

## Status: pending/approved

## Requirements
[High level requirements]

## Development Steps
[ ] step 1
[ ] step 2  
[ ] step n
    [ ] substep 1
    [ ] substep 2
```

- Steps and substeps should be very detailed
- Ensure the whole application is complete - with UI and necessary logic
- After every step completion, mark it as completed [X], for sub and main steps

## Code Quality Rules

### Comments and Documentation
- Don't remove already existing code comments, may improve them
- Maintain existing documentation structure
- Add meaningful comments for complex logic

### Testing and Quality Assurance
- Always test after every change to ensure the outcome is correct
- Ensure complete UI is generated for the requirements
- All UI must be tested and functional
- Use browser testing MCP to confirm functionality and UI appearance

## Additional Guidelines

### Data Types and Structure
- Each property of an entity must have a proper datatype
- Data model must be suitable for SAP Fiori elements frontend applications
- Must have one main entity and one or more navigation properties to related entities

### Annotations Reference
- For annotation details check https://github.com/SAP-samples/fiori-elements-feature-showcase
- Use proper annotations for tables, labels, value helps, etc.
- Ensure UI completeness through proper annotations

#### CRITICAL: Navigation Property Syntax in Annotations
- ALWAYS use dot notation (.) for navigation properties in CDS annotations
- CORRECT: `group.groupName`, `homeTeam.teamName`, `event.name`
- WRONG: `group/groupName`, `homeTeam/teamName`, `event/name` (OData URL syntax)
- ERROR EXAMPLE: Using '/' will cause "Mismatched '/', expecting ',', '.', '}', '#'" compilation errors

### Version Specifications
- Always use UI5 versions: "ui5Version": "1.132.1", "localUI5Version": "1.82.2"
- Keep version consistency across the project

## Development Workflow
1. Create/verify PRD (status: pending → approved)
2. Initialize CAP project with `cds init`
3. Add `cds lint` to the project
4. Create data model with proper entities, compositions, and managed aspects
5. Generate sample data with UUID format for keys
6. Generate Fiori application using 3-step process
7. Add comprehensive annotations
8. Use `cds build` to check for errors
9. Test with `cds watch`
10. Verify UI functionality with browser testing
11. Mark steps as completed in PRD

Remember: Always use MCP servers for their respective domains and follow the specific guidelines for each technology stack.

## Critical Issues &amp;amp; Solutions from Real Development Experience

### UI5 Dependency Resolution Issues
**Problem**: CDS server starts but fails to mount UI5 applications with errors like:
- `Cannot find module '@ui5/cli/package.json'`
- `Cannot find module '@sap/ux-ui5-tooling/package.json'`

**Root Cause**: Fiori generator creates applications with UI5 tooling requirements not installed in project root

**MANDATORY Solution**:
1. Always install: `npm install -D @ui5/cli @sap/ux-ui5-tooling`
2. Install before generating Fiori applications
3. If applications already exist, install dependencies then restart `cds watch`

### Service Import Issues in Annotations
**Problem**: Cannot import services in annotation files with errors like:
- `Can't find local module '../srv/service-name'`

**Solution**: 
- Import services using destructuring: `using { ServiceName } from '../srv/service-file';`
- If import fails, create separate annotation files per service
- Use relative paths correctly from app/ to srv/ directory

### Draft Entity Composition Conflicts
**Problem**: Build error "Composition in draft-enabled entity can't lead to another entity with @odata.draft.enabled"

**Solution**:
- Only enable draft on parent entities in compositions
- Child entities are automatically managed through parent draft context
- Example: Events (draft enabled) → Teams (no draft) is correct

### npm Workspaces for UI5 Applications
**MANDATORY Setup**:
```json
{
  "workspaces": [
    "app/*"
  ],
  "scripts": {
    "watch-app1": "cds watch --open app1/webapp/index.html",
    "watch-app2": "cds watch --open app2/webapp/index.html"
  }
}
```

### Authorization Testing
- Protected endpoints returning "Unauthorized" is CORRECT behavior
- Test public endpoints for anonymous access
- Use different service definitions for different security levels
- @requires at service level, @restrict at entity level

### Troubleshooting Checklist
When CDS server fails to start with Fiori applications:
1. ✅ Check @ui5/cli is installed
2. ✅ Check @sap/ux-ui5-tooling is installed  
3. ✅ Check cds-plugin-ui5 is installed
4. ✅ Verify npm workspaces configuration
5. ✅ Check draft entity composition conflicts
6. ✅ Verify annotation syntax (. not / for navigation)
7. ✅ Run `npm audit fix` for security vulnerabilities

### Testing Verification Steps
1. `cds watch` starts without errors
2. http://localhost:4004 shows launch page
3. All UI5 applications listed and accessible
4. Service endpoints return data or proper authorization errors
5. Fiori preview links work for all entities&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;# SAP Development Rules for AI Assistants

## MCP Server Usage Rules

### CAP MCP Server (@cap-js/mcp-server)
- You MUST search for CDS definitions, like entities, fields and services (which include HTTP endpoints) with cds-mcp, only if it fails you MAY read *.cds files in the project.
- You MUST search for CAP docs with cds-mcp EVERY TIME you modify CDS models or when using APIs from CAP. Do NOT propose, suggest or make any changes without first checking it.
- Always refer to @cap docs for better information about SAP CAP (Cloud Application Programming) applications.

### Fiori MCP Server (@sap-ux/fiori-mcp-server)
- When asked to create an SAP Fiori elements app check whether the user input can be interpreted as an application organized into one or more pages containing table data or forms.
- When generating or modifying SAP Fiori elements applications on top of CAP services, use the Fiori MCP server if available.
- When attempting to modify SAP Fiori elements applications like adding columns, you must NOT use screen personalization but instead modify the code of the project. First check whether an MCP server provides a suitable function.
- Follow the 3-step workflow: list-functionality → get-functionality-details → execute-functionality.

### UI5 MCP Server (@ui5/mcp-server)
- This tool MUST be called once to retrieve UI5 guidelines before working on any UI5 (SAPUI5/OpenUI5) related task or project.
- Use for UI5 linting, API reference, project information, and version details.
- Always run UI5 linter after making changes and verify no new problems are introduced.

## SAP CAP Development Rules

### Project Initialization
- Always use `cds init` and don't use `cds init projectname`
- Always create nodejs CAP based applications (don't add --add, just init is fine)
- Always add `cds lint` after generating the application
- Always enable draft for CAP applications but AVOID draft on composed entities
- Don't add random samples using `cds add sample`
- MANDATORY: Set up npm workspaces for UI5 applications in package.json:
  ```json
  {
    "workspaces": [
      "app/*"
    ]
  }
  ```

### Data Modeling
- If using cuid aspect, a default column ID is added and usually has UUIDs
- When cuid is added to entity, then ID will be uuid, so ensure sample data will have ID type uuid
- Prefer composition over association for child entities in SAP CAP
- Use cds managed aspect wherever necessary and add it to entity for it to work
- Don't use enums, prefer associated tables with preload configuration data
- For all entities in the data model provide primary keys of type UUID
- When creating sample data in CSV files, all primary keys and foreign keys MUST be in UUID format (e.g., `550e8400-e29b-41d4-a716-446655440001`)

#### CRITICAL: Draft Entity Composition Rules
- NEVER apply @odata.draft.enabled to both parent and child entities in a composition
- Only apply draft to the main/parent entity (e.g., Events but NOT Teams if Events composes Teams)
- Child entities should be managed through the parent's draft context
- ERROR EXAMPLE: Events @odata.draft.enabled + Teams @odata.draft.enabled + Events composes Teams = BUILD FAILURE

### Value Helps and Views
- For cds views use #TextOnly
- For smaller set of data, prefer fixed values (dropdown) instead of popup help - ValueListWithFixedValues: true

### Testing and Development
- Use `cds build` to find any annotation errors and fix them before testing
- Use `cds watch` to test locally
- After `cds watch`, don't call `sleep 5 or 3`, it will stop cds watch
- Use browser testing to confirm if it's working fine and UI looks good

## Fiori Application Generation

### JSON Configuration Template
Always use this configuration structure for Fiori app generation:
```json
{
    "version": "0.2",
    "floorplan": "FE_LROP",
    "project": {
        "name": "app-name",
        "targetFolder": "/path/to/project",
        "title": "App Title",
        "description": "App Description",
        "ui5Version": "1.132.1",
        "localUI5Version": "1.82.2",
        "sapux": true
    },
    "service": {
        "servicePath": "/service/path/",
        "capService": {
            "projectPath": "/path/to/project",
            "serviceName": "serviceName",
            "serviceCdsPath": "srv/service.cds"
        }
    },
    "entityConfig": {
        "mainEntity": {
            "entityName": "EntityName"
        },
        "generateFormAnnotations": true
    },
    "projectType": "FORM_ENTRY_OBJECT_PAGE",
    "telemetryData": {
        "generationSourceName": "AI Headless",
        "generationSourceVersion": "1.18.1"
    }
}
```

### Required Steps for Fiori Generation
1. First generate the JSON config file as shown above
2. Run the command: `yo @sap/fiori:headless "/path/to/config.json" --force`
3. Add necessary annotations in the generated fiori application (usually in annotations.cds file)
4. Check https://github.com/SAP-samples/fiori-elements-feature-showcase for guidance on annotations

### Package Requirements
- Always use node package "yo" with version 4.3.1
- Before installing check if yo is already installed
- Use @sap/generator-fiori for fiori app generation
- CRITICAL: Always install these UI5 dependencies to avoid startup failures:
  - `npm install -D @ui5/cli` (required for cds-plugin-ui5)
  - `npm install -D @sap/ux-ui5-tooling` (required for advanced UI5 features)
- Always install `npm install -D cds-plugin-ui5` for CAP-UI5 integration

### UI Design Guidelines
- Application typically starts with a List Report page showing data in a table
- Details of specific table row shown in ObjectPage based on the base entity
- ObjectPage can contain table sections based on to-many associations
- Ensure complete UI is generated for requirements and all UI is tested
- Add necessary annotations: Tables for compositions, labels for all fields, value helps, etc.
- Ensure the UI is complete and functional

## Project Management and Documentation

### Product Requirements Document (PRD)
- Always ensure a product requirement document is there (prd.md) with high level requirements
- Status should be "approved" before starting development
- Should be TDD based development -&amp;gt; test after every change
- If PRD is not there, take requirements and generate the PRD
- Initial status should be "pending" - only work when status is "approved"
- Don't assume anything, first ask user to verify the PRD

### PRD Structure
```markdown
# Product Requirements Document

## Status: pending/approved

## Requirements
[High level requirements]

## Development Steps
[ ] step 1
[ ] step 2  
[ ] step n
    [ ] substep 1
    [ ] substep 2
```

- Steps and substeps should be very detailed
- Ensure the whole application is complete - with UI and necessary logic
- After every step completion, mark it as completed [X], for sub and main steps

## Code Quality Rules

### Comments and Documentation
- Don't remove already existing code comments, may improve them
- Maintain existing documentation structure
- Add meaningful comments for complex logic

### Testing and Quality Assurance
- Always test after every change to ensure the outcome is correct
- Ensure complete UI is generated for the requirements
- All UI must be tested and functional
- Use browser testing MCP to confirm functionality and UI appearance

## Additional Guidelines

### Data Types and Structure
- Each property of an entity must have a proper datatype
- Data model must be suitable for SAP Fiori elements frontend applications
- Must have one main entity and one or more navigation properties to related entities

### Annotations Reference
- For annotation details check https://github.com/SAP-samples/fiori-elements-feature-showcase
- Use proper annotations for tables, labels, value helps, etc.
- Ensure UI completeness through proper annotations

#### CRITICAL: Navigation Property Syntax in Annotations
- ALWAYS use dot notation (.) for navigation properties in CDS annotations
- CORRECT: `group.groupName`, `homeTeam.teamName`, `event.name`
- WRONG: `group/groupName`, `homeTeam/teamName`, `event/name` (OData URL syntax)
- ERROR EXAMPLE: Using '/' will cause "Mismatched '/', expecting ',', '.', '}', '#'" compilation errors

### Version Specifications
- Always use UI5 versions: "ui5Version": "1.132.1", "localUI5Version": "1.82.2"
- Keep version consistency across the project

## Development Workflow
1. Create/verify PRD (status: pending → approved)
2. Initialize CAP project with `cds init`
3. Add `cds lint` to the project
4. Create data model with proper entities, compositions, and managed aspects
5. Generate sample data with UUID format for keys
6. Generate Fiori application using 3-step process
7. Add comprehensive annotations
8. Use `cds build` to check for errors
9. Test with `cds watch`
10. Verify UI functionality with browser testing
11. Mark steps as completed in PRD

Remember: Always use MCP servers for their respective domains and follow the specific guidelines for each technology stack.

## Critical Issues &amp;amp; Solutions from Real Development Experience

### UI5 Dependency Resolution Issues
**Problem**: CDS server starts but fails to mount UI5 applications with errors like:
- `Cannot find module '@ui5/cli/package.json'`
- `Cannot find module '@sap/ux-ui5-tooling/package.json'`

**Root Cause**: Fiori generator creates applications with UI5 tooling requirements not installed in project root

**MANDATORY Solution**:
1. Always install: `npm install -D @ui5/cli @sap/ux-ui5-tooling`
2. Install before generating Fiori applications
3. If applications already exist, install dependencies then restart `cds watch`

### Service Import Issues in Annotations
**Problem**: Cannot import services in annotation files with errors like:
- `Can't find local module '../srv/service-name'`

**Solution**: 
- Import services using destructuring: `using { ServiceName } from '../srv/service-file';`
- If import fails, create separate annotation files per service
- Use relative paths correctly from app/ to srv/ directory

### Draft Entity Composition Conflicts
**Problem**: Build error "Composition in draft-enabled entity can't lead to another entity with @odata.draft.enabled"

**Solution**:
- Only enable draft on parent entities in compositions
- Child entities are automatically managed through parent draft context
- Example: Events (draft enabled) → Teams (no draft) is correct

### npm Workspaces for UI5 Applications
**MANDATORY Setup**:
```json
{
  "workspaces": [
    "app/*"
  ],
  "scripts": {
    "watch-app1": "cds watch --open app1/webapp/index.html",
    "watch-app2": "cds watch --open app2/webapp/index.html"
  }
}
```

### Authorization Testing
- Protected endpoints returning "Unauthorized" is CORRECT behavior
- Test public endpoints for anonymous access
- Use different service definitions for different security levels
- @requires at service level, @restrict at entity level

### Troubleshooting Checklist
When CDS server fails to start with Fiori applications:
1. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Check @ui5/cli is installed
2. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Check @sap/ux-ui5-tooling is installed  
3. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Check cds-plugin-ui5 is installed
4. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Verify npm workspaces configuration
5. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Check draft entity composition conflicts
6. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Verify annotation syntax (. not / for navigation)
7. &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Run `npm audit fix` for security vulnerabilities

### Testing Verification Steps
1. `cds watch` starts without errors
2. http://localhost:4004 shows launch page
3. All UI5 applications listed and accessible
4. Service endpoints return data or proper authorization errors
5. Fiori preview links work for all entities&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;H2 id="toc-hId-compare-logs" id="toc-hId-141258509"&gt;Quick comparison: SAP MCP servers vs SAP Docs MCP server&lt;/H2&gt;&lt;TABLE border="1"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Aspect&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Official CAP/Fiori/UI5 MCP&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;SAP Docs MCP (my server)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Startup guidance&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Project-aware; returns concrete tools and parameters&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Finds the right pages (CAP getting started, UI5 what’s new)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Model and API grounding&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;CAP: search_model/search_docs; UI5: get_api_reference&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Cross-source docs incl. SAP Help and Community posts&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Scaffolding&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;UI5: create_ui5_app; Fiori: generate flow (schema issues in test client)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;No scaffolding, documentation-first&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Quality gates&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;UI5 linter with contextual docs and migration guides&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Verify answers against official sources&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class=""&gt;Outcome in this test&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;CAP and UI5 flows helped; Fiori flow blocked by schema validation → manual FE generation produced object pages only&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P class=""&gt;Docs server supplied confirmation for versions, annotations and FE patterns&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-next" id="toc-hId--55254996"&gt;Final words&lt;/H2&gt;&lt;P class=""&gt;First of all, I want to praise my colleagues at SAP in the UI5, CAP, and Fiori tools teams. Making these MCP servers available as open source is the right decision—it enables not only developers who use BAS, but all developers, including those outside of BTP.&lt;/P&gt;&lt;P class=""&gt;For day-to-day development I prefer a local client with MCP servers. The official CAP, Fiori, and UI5 servers add project awareness and executable actions. Combined with a documentation-first server like my &lt;A href="https://github.com/marianfoo/mcp-sap-docs" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Docs MCP&lt;/A&gt;, you can cover both creation and verification without switching to Joule for Developers. You can also use MCP servers with BAS; I will cover this in another blog post.&lt;/P&gt;&lt;P class=""&gt;From my tests: the UI5 server ties linter output to API references and migration guides, closing a common gap where fixes lacked context. The cache under the data directory speeds up repeated queries, but verify version alignment via get_project_info and get_version_info before applying fixes. The Fiori server’s three-step approach makes changes explicit and reviewable, which helps keep pull requests predictable—if you automate this in CI, keep it behind a branch. The CAP server provides safe discovery over the compiled model and a docs search, reducing wrong assumptions about services and endpoints.&lt;/P&gt;&lt;P class=""&gt;It is important to note that these MCP tools were only released this week. Not everything works perfectly yet, but once you start using them, it is hard to work without them. Work with Git so any changes can be reversed if necessary.&lt;/P&gt;&lt;P class=""&gt;The MCP protocol is still new, and it is fair to ask whether it is worth the investment. I think it is promising: it can solve the problem of missing or outdated context for LLMs and, as these servers show, it is not just about context but also about executing the right actions with Fiori tools and CAP.&lt;/P&gt;&lt;H2 id="toc-hId-links" id="toc-hId--251768501"&gt;Links&lt;/H2&gt;&lt;P class=""&gt;&lt;A href="https://www.npmjs.com/package/@cap-js/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;@cap-js/mcp-server&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;@sap-ux/fiori-mcp-server&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://www.npmjs.com/package/@ui5/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;@ui5/mcp-server&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://github.com/UI5/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;UI5 MCP server repository&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/give-your-ai-agent-some-tools-introducing-the-ui5-mcp-server/ba-p/14200825" target="_blank"&gt;UI5 MCP server release post&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602" target="_blank"&gt;SAP Build introduces MCP servers&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849" target="_blank"&gt;CAP MCP server release post&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://github.com/SAP/open-ux-tools/tree/main/packages/fiori-mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;Fiori MCP server repository&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://github.com/cap-js/mcp-server" target="_blank" rel="noopener noreferrer nofollow"&gt;CAP MCP server repository&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/evaluating-sap-s-new-mcp-servers-ui5-cap-and-fiori-tools-in-practice/ba-p/14205611"/>
    <published>2025-09-04T07:00:11.016000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/enhancing-unit-testing-in-sap-cap-java-applications-with-github-copilot/ba-p/14207293</id>
    <title>Enhancing Unit Testing in SAP CAP Java Applications with GitHub Copilot</title>
    <updated>2025-09-04T13:37:40.530000+02:00</updated>
    <author>
      <name>Anjali_Pathak</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2043652</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Introduction&lt;/FONT&gt;&lt;BR /&gt;&lt;/STRONG&gt;Building upon&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/getting-started-with-unit-testing-in-sap-cap-java-applications/ba-p/14164240" target="_self"&gt;SAP's guide to unit testing in CAP Java&lt;/A&gt;,&amp;nbsp;this post explores how &lt;STRONG&gt;GitHub Copilot&lt;/STRONG&gt; can streamline and accelerate the process of writing unit tests in SAP Cloud Application Programming (CAP) Java projects.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;GitHub Copilot&lt;/STRONG&gt; is an AI-powered coding assistant developed by GitHub and OpenAI. It helps developers by suggesting code snippets, functions, and even entire test cases in real time, based on the context of what you're writing. Integrated into popular code editors, it speeds up development and reduces repetitive tasks.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;Where GitHub Copilot Helps&lt;FONT size="4"&gt;&lt;BR /&gt;&lt;/FONT&gt;GitHub Copilot&lt;/STRONG&gt; assists by:&lt;/P&gt;&lt;OL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Autocompleting test scaLolds&lt;/LI&gt;&lt;LI&gt;Suggesting assertion logic&lt;/LI&gt;&lt;LI&gt;Handling repetitive boilerplate (e.g., mocks and setup)&lt;/LI&gt;&lt;LI&gt;Speeding up TDD cycles (Red → Green → Refactor)&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;How GitHub Copilot Can Help in Writing TDD Test Cases&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In the context of &lt;STRONG&gt;SAP CAP Java,&lt;/STRONG&gt; &lt;STRONG&gt;GitHub Copilot&lt;/STRONG&gt; streamlines the process of writing unit tests, allowing developers to focus on defining behaviour and business logic.&lt;BR /&gt;Below we will demonstrate the example using a test case from&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/getting-started-with-unit-testing-in-sap-cap-java-applications/ba-p/14164240" target="_self"&gt;SAP's guide to unit testing in CAP Java&lt;/A&gt;. The test case is part of the method “validateBookAndDecreaseStock” , which was introduced and tested manually in this post.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Let’s now see how &lt;STRONG&gt;GitHub Copilot&lt;/STRONG&gt; helps implement the same scenario using a TDD approach, covering prompts, completions, and code refinements.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Scenario: Book Does Not Exist -&lt;/STRONG&gt; We want to write a test for the case where a book ID in an order does not exist in the database.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Red&lt;/STRONG&gt;&lt;/FONT&gt; – &lt;U&gt;Write the Failing Test First&lt;/U&gt;&lt;BR /&gt;&lt;P class=""&gt;&lt;STRONG&gt;Prompt Example:&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;EM&gt;"Write a JUnit 5 test for validateBookAndDecreaseStock(List&amp;lt;OrderItems&amp;gt;) when the book does not exist. Mock the persistence service to return empty result. Expect Service Exception with message – Book does not exist"&lt;BR /&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;STRONG&gt;Copilot Suggestion:&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Anjali_Pathak_0-1756984803409.png" style="width: 438px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309189iF53201249652DC40/image-dimensions/438x233/is-moderation-mode/true?v=v2" width="438" height="233" role="button" title="Anjali_Pathak_0-1756984803409.png" alt="Anjali_Pathak_0-1756984803409.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P class=""&gt;This gives us a strong starting point — the &lt;STRONG&gt;structure, mocking, and assertions&lt;/STRONG&gt; are generated instantly. We can now refine or expand it as needed.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Green&lt;/STRONG&gt;&lt;/FONT&gt; – &lt;U&gt;&lt;U&gt;Implement Minimal Code to Pass the Test&lt;BR /&gt;&lt;/U&gt;&lt;/U&gt;&lt;P class=""&gt;Once the test is in place and failing, we write just enough application code to make it pass.&lt;BR /&gt;&lt;STRONG&gt;How Copilot Helps:&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;•&lt;/SPAN&gt; Copilot can suggest the implementation stub or completion for the service method.&lt;BR /&gt;&lt;SPAN class=""&gt;•&lt;/SPAN&gt; It recognizes context (e.g., entity names like Books, usage of persistence Service, and typical CAP patterns).&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Prompt Example:&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;EM&gt;“Implement the validateBookAndDecreaseStock method so it throws a Service Exception when the book is not found.”&lt;/EM&gt;&lt;/P&gt;&lt;U&gt;&lt;BR /&gt;&lt;/U&gt;&lt;STRONG&gt;&lt;STRONG&gt;Copilot Suggestion:&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Anjali_Pathak_1-1756985058432.png" style="width: 542px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309194iEC63DA7D5181681D/image-dimensions/542x187/is-moderation-mode/true?v=v2" width="542" height="187" role="button" title="Anjali_Pathak_1-1756985058432.png" alt="Anjali_Pathak_1-1756985058432.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P class=""&gt;While still minimal, this satisfies the failing test and progresses the TDD loop.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Refactor&lt;/STRONG&gt; &lt;/FONT&gt;– &lt;U&gt;Clean and Improve Code&lt;/U&gt;&lt;P class=""&gt;Once the test passes, the code can be cleaned up. Copilot can assist by:&lt;BR /&gt;1.&amp;nbsp;Suggesting improved variable naming&lt;/P&gt;2. Identifying reusable logic (e.g., extracting methods)&lt;BR /&gt;3. Completing more idiomatic Java or CAP Java constructs&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Prompt Example:&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;EM&gt;"Refactor validateBookAndDecreaseStock to extract book lookup into a separate private method."&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;STRONG&gt;Copilot Suggestion:&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Anjali_Pathak_2-1756985317779.png" style="width: 528px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309197i9E659950079E0A48/image-dimensions/528x99/is-moderation-mode/true?v=v2" width="528" height="99" role="button" title="Anjali_Pathak_2-1756985317779.png" alt="Anjali_Pathak_2-1756985317779.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P class=""&gt;GitHub Copilot provides several other ways to improve our development workflow. Below is a table showcasing additional use cases and how it can support us throughout the process:&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="50px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Way Copilot Helps&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="50px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="105px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Prompting&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="105px"&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Provides code suggestions based on the context of your work, helping you quickly generate code snippets and complete tasks.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="105px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Auto-completion&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="105px"&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Suggests auto-completions for common code patterns like variable declarations, method signatures, or class instantiations, reducing the need to write repetitive code.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="105px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Refactoring Suggestions&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="105px"&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Suggests improvements in code structure, like method extraction or renaming variables, for cleaner and more maintainable code.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="77px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Context-Aware Suggestions&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="77px"&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Generates code that fits with the specific libraries or frameworks you're using, ensuring adherence to best practices.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="62px"&gt;&lt;P class=""&gt;&lt;STRONG&gt;Error Handling Recommendations&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="62px"&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Helps identify and handle potential exceptions or edge cases by suggesting relevant error handling and assertions.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Conclusion&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In conclusion, GitHub Copilot significantly enhances the unit testing process in SAP CAP Java applications by providing real-time code suggestions, automating repetitive tasks, and ensuring comprehensive test coverage. By streamlining the creation of test cases, mocking dependencies, and improving code structure, Copilot accelerates the TDD workflow, allowing developers to focus more on business logic and less on boilerplate code. Its ability to suggest improvements and handle edge cases ultimately leads to cleaner, more maintainable code and a more efficient development process.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Disclaimer&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The views and opinions expressed in this blog post are those of the author and do not necessarily reflect the official policy or position of SAP or its affiliates. This content is provided for informational purposes only, based on the author's personal experience and understanding.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;This blog references the use of GitHub Copilot, an AI-powered coding assistant. The suggestions generated by Copilot are not guaranteed to be accurate, complete, secure, or compliant with any specific coding standards or organizational policies. Developers are responsible for reviewing, validating, and testing all code before use in any production or sensitive environment.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;SAP makes no representations or warranties, express or implied, regarding the suitability or accuracy of the information or tools mentioned herein.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/enhancing-unit-testing-in-sap-cap-java-applications-with-github-copilot/ba-p/14207293"/>
    <published>2025-09-04T13:37:40.530000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/consuming-on-premise-service-in-cap-project-error-failed-to-load/ba-p/14208190</id>
    <title>Consuming on-Premise Service in CAP Project - Error “Failed to load destination” after deployment</title>
    <updated>2025-09-05T08:52:06.672000+02:00</updated>
    <author>
      <name>parth_</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/866502</uri>
    </author>
    <content>&lt;P&gt;Hi All,&lt;/P&gt;&lt;P&gt;I am trying to consume an on-premise service in the CAP project using the destination.&amp;nbsp;My SAP BTP Subaccount is connected to on-premise system via Cloud Connector.&lt;/P&gt;&lt;P&gt;In my existing CAP project, I have added the External Service (on-premise) by following steps as --&amp;gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;&lt;STRONG&gt;Service Center &amp;gt; Select Provider as 'SAP SYSTEM' &amp;gt; Catalog of Services as &amp;lt;my on-premise system&amp;gt; &amp;gt; Selected the service that I want &amp;gt; Selected the Entity that I&amp;nbsp;wanted to add in my existing CAP project.&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;You can find more details in the URL mentioned below.&lt;/P&gt;&lt;P&gt;URL:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-q-a/consuming-on-premise-service-in-cap-project/qaq-p/13682458" target="_blank"&gt;https://community.sap.com/t5/technology-q-a/consuming-on-premise-service-in-cap-project/qaq-p/13682458&lt;/A&gt;&lt;/P&gt;&lt;P&gt;When I run the application locally using environment variables, it works fine. However, after deployment, I am getting the following error :&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;502&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;lt;/code&amp;gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;&amp;lt;message&amp;gt;&lt;/SPAN&gt;&lt;SPAN&gt;Error during request to remote service: Failed to load destination.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;P&gt;Please guide me on how I can achieve this.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thanks in advance!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/consuming-on-premise-service-in-cap-project-error-failed-to-load/ba-p/14208190"/>
    <published>2025-09-05T08:52:06.672000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-eslint-plugin-better-cap-config-an-eslint-plugin-to-improve-cap/ba-p/14209616</id>
    <title>Introducing eslint-plugin-better-cap-config an ESLint plugin to improve CAP configuration</title>
    <updated>2025-09-08T01:24:02.584000+02:00</updated>
    <author>
      <name>mauriciolauffer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11418</uri>
    </author>
    <content>&lt;P&gt;I've created an ESLint plugin to validate the configurations in SAP CAP Node.js applications. Yes, &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt; validates JSON files containing project configuration. For now, it's basically the usage of deprecated key/value entries, but it can evolve to accommodate best practices, suggestions and autofixes just like any other ESLint plugin.&lt;/P&gt;&lt;P&gt;It's build for modern ESLint which has introduced the concept of &lt;A href="https://eslint.org/docs/latest/extend/languages" target="_blank" rel="noopener nofollow noreferrer"&gt;new languages&lt;/A&gt;. This offers proper support to more languages beyond JavaScript and TypeScript. &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt; leverages the new &lt;A href="https://www.npmjs.com/package/@eslint/json" target="_blank" rel="noopener nofollow noreferrer"&gt;JSON Language&lt;/A&gt; rather than generic regular expressions. This makes it more powerful and flexible.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1759258371"&gt;Demo time&lt;/H2&gt;&lt;P&gt;Let's assume we have a simple CAP project with the following configuration in the &lt;STRONG&gt;package.json&lt;/STRONG&gt; file.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;"cds": {
    "requires": {
      "destinations": true,
      "html5-repo": true,
      "[production]": {
        "auth": "ias"
      },
      "messaging": {
        "kind": "enterprise-messaging"
      },
      "db": {
        "kind": "sql",
        "[production]": {
          "kind": "hana"
        }
      }
    },
    "features": {
      "cds_validate": false,
      "odata_new_adapter": false
    },
    "fiori": {
      "draft_compat": true
    }
  },&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;And the following ESLint configuration:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import cds from '@sap/cds/eslint.config.mjs';
export default [ ...cds.recommended ];&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;As we can see, it's using the ESLint config that comes with &lt;STRONG&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;/cds&lt;/STRONG&gt;. The same you get from &lt;A href="https://cap.cloud.sap/docs/tools/cds-lint/#cds-add-lint" target="_blank" rel="nofollow noopener noreferrer"&gt;$ cds add lint&lt;/A&gt;. OK, let's lint the project and see what happens:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm run lint&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ESLint shows no errors" style="width: 571px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310511i47AA8FEAA8728BC2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-06 162804.png" alt="ESLint shows no errors" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;ESLint shows no errors&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Nothing. No output. No issues. No problems. Happy days, right?&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Aladdin says &amp;quot;Not so fast Jafar!&amp;quot;" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310502iAF3835BDBD4FBB57/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-07 001830.png" alt="Aladdin says &amp;quot;Not so fast Jafar!&amp;quot;" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Aladdin says "Not so fast Jafar!"&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;According to the CAP documentation, configuration like&amp;nbsp;&lt;STRONG&gt;cds.features.cds_validate = false&lt;/STRONG&gt;, &lt;SPAN&gt;&lt;STRONG&gt;cds.&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;features.odata_new_adapter = false&lt;/STRONG&gt; and &lt;SPAN&gt;&lt;STRONG&gt;cds.&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;fiori.draft_compat = true&lt;/STRONG&gt; are deprecated. For some of the deprecated config in CAP, you may get a message on the console when running the application (cds-serve, cds watch, etc). However, there are some problems with relying on those console messages:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Most of the time they go unnoticed;&lt;/LI&gt;&lt;LI&gt;If you don't upgrade &lt;A href="https://www.npmjs.com/package/@sap/cds" target="_self" rel="nofollow noopener noreferrer"&gt;@sap/cds&lt;/A&gt; and &lt;A href="https://www.npmjs.com/package/@sap/cds-dk" target="_blank" rel="noopener nofollow noreferrer"&gt;@sap/cds-dk&lt;/A&gt;, you won't get the new messages informing something has been deprecated;&lt;/LI&gt;&lt;LI&gt;No visual cues on IDEs;&lt;/LI&gt;&lt;LI&gt;Not possible to integrate to a CI/CD pipeline.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;In this example, executing &lt;STRONG&gt;cds-serve&lt;/STRONG&gt; doesn't return any warning or error messages on the console for the aforementioned deprecated configs.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1562744866"&gt;ESLint Plugin Better CAP Config to the rescue!&lt;/H2&gt;&lt;P&gt;Now, let's install and configure &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt; to see what changes. Using it is quite simple, it's just another ESLint plugin you need to add to your collection. Because it uses the JSON language, you need to install the&amp;nbsp;&lt;A href="https://www.npmjs.com/package/@eslint/json" target="_blank" rel="noopener nofollow noreferrer"&gt;@eslint/json&lt;/A&gt; package as well.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm i -D @eslint/json   eslint-plugin-better-cap-config&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Edit, the &lt;STRONG&gt;eslint.config.js&lt;/STRONG&gt; file (or whatever variation you're using, eg, *.ts or *.mjs) to include &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import cds from "@sap/cds/eslint.config.mjs";
import { defineConfig } from "eslint/config";
import json from "@eslint/json";
import capConfig from "eslint-plugin-better-cap-config";

export default defineConfig([
  {
    files: ["**/*.js"],
    extends: [cds.recommended],
  },
  {
    files: ["**/*.json"],
    plugins: {
      json,
    },
    language: "json/json",
    extends: [capConfig.configs.recommended],
  },
]);&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now, we execute ESLint just like we did before, nothing else is required.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm run lint&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ESLint shows CAP config errors" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310515i7CA852E4D420D083/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-06 165546.png" alt="ESLint shows CAP config errors" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;ESLint shows CAP config errors&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;We can see &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt; picked up a few deprecated configs that went unnoticed before.&lt;/P&gt;&lt;P&gt;Now, we fix our config:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;  "cds": {
    "requires": {
      "destinations": true,
      "html5-repo": true,
      "[production]": {
        "auth": "ias"
      },
      "messaging": {
        "kind": "enterprise-messaging"
      },
      "db": {
        "kind": "sql",
        "[production]": {
          "kind": "hana"
        }
      }
    },
    "features": {
      "cds_validate": true,
      "odata_new_adapter": true
    }
  },&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;And lint the project again:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm run lint&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ESLint shows no errors" style="width: 571px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310505i684D6E51DCC6FDB2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-06 162804.png" alt="ESLint shows no errors" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;ESLint shows no errors&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;No issues found! Hooray!!!&lt;/P&gt;&lt;P&gt;This is early days for &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt;, there are few rules implemented so far and some others cooking.&lt;/P&gt;&lt;P&gt;It works with configuration in any JSON file, such as&amp;nbsp;&lt;STRONG&gt;package.json&lt;/STRONG&gt; and&amp;nbsp;&lt;STRONG&gt;.cdsrc.json&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;CAP documentation is good, but doesn't help much when looking for deprecated stuff. A central place for that would be great. Right now, I'm going through the release notes and looking for everything that's deprecated. It's a rather tedious process...&lt;/P&gt;&lt;P&gt;As always, the project is open-source (&lt;A href="https://github.com/mauriciolauffer/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub&lt;/A&gt;) and PRs are welcome &lt;span class="lia-unicode-emoji" title=":robot_face:"&gt;🤖&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-eslint-plugin-better-cap-config-an-eslint-plugin-to-improve-cap/ba-p/14209616"/>
    <published>2025-09-08T01:24:02.584000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172</id>
    <title>Avoiding Data Loss When Loading Initial Data with CSV Files in CAP</title>
    <updated>2025-09-15T22:17:28.888000+02:00</updated>
    <author>
      <name>MioYasutake</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/789</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760058105"&gt;Introduction&lt;/H2&gt;&lt;P&gt;When you start learning CAP, running &lt;EM&gt;cds add tiny-sample&lt;/EM&gt; generates all the necessary sample artifacts, including a CSV file inside the &lt;STRONG&gt;db/data&lt;/STRONG&gt; folder. Once deployed, the data from this CSV file is loaded as initial data into SAP HANA Cloud.&lt;/P&gt;&lt;P&gt;This mechanism seems convenient for loading initial data into SAP HANA Cloud for productive applications, doesn’t it?&lt;BR /&gt;However, there’s a catch. &lt;STRONG&gt;If you change the CSV data or modify the schema, the data in SAP HANA Cloud will be reinitialized with the CSV content&lt;/STRONG&gt; — including the data entered by users! Let’s take a look at what the &lt;A href="https://cap.cloud.sap/docs/guides/databases#using-csv-files" target="_self" rel="nofollow noopener noreferrer"&gt;documentation&lt;/A&gt; says:&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;On SAP HANA, only use CSV files for configuration data that can't be changed by application users. → See &lt;EM&gt;CSV data gets overridden&lt;/EM&gt; in the SAP HANA guide for details.&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;This is exactly the point I want to highlight in this article. At the same time, I’ve also explored some alternative approaches and validated them.&lt;/P&gt;&lt;H2 id="toc-hId-1563544600"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1367031095"&gt;Case1: New Development&lt;/H2&gt;&lt;P&gt;When developing a new CAP application, you have the following options:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Option A&lt;/STRONG&gt;: Do not use CSV files to register initial data for tables that will be maintained by the application users.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Option B&lt;/STRONG&gt;:&amp;nbsp;If both initial data and user-generated data need to coexist, define filter conditions in the &lt;STRONG&gt;.hdbtabledata&lt;/STRONG&gt;&amp;nbsp;file.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Option A is the simplest, if feasible. However, in some cases — such as for master data — the ability to quickly load initial data from CSV files is attractive. Below, let’s look at Option B&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;in more detail.&lt;/P&gt;&lt;H3 id="toc-hId-1299600309"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1103086804"&gt;&lt;STRONG&gt;Option B:&amp;nbsp;&lt;/STRONG&gt;Define filter conditions in the &lt;STRONG&gt;.hdbtabledata&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;1. Add a column called &lt;EM&gt;dataCategory&lt;/EM&gt; to the table to distinguish between different types of data. (This is just an example; you can use any column as in identifier.)&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;entity Books {
  key ID    : Integer;
      title : String;
      stock : Integer;
      dataCategory: String enum {
        system = 'S';
        user = 'U';
      }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2.&amp;nbsp;Run the command &lt;EM&gt;cds build --production&lt;/EM&gt;&amp;nbsp;to generate an &lt;STRONG&gt;.hdbtabledata&lt;/STRONG&gt; file in the &lt;STRONG&gt;gen/db/src/data&lt;/STRONG&gt; folder. Copy this file to the &lt;STRONG&gt;db/src/static/csv&lt;/STRONG&gt; folder, and then add an &lt;STRONG&gt;include_filter&lt;/STRONG&gt; as shown below.&amp;nbsp; This ensures that the HDI container takes ownership only of the records specified by the filter. (Note:&amp;nbsp;&lt;SPAN&gt;The values must be strings, even if the column’s data type is numeric.)&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "format_version": 1,
  "imports": [
    {
      ...,
      "import_settings": {
        "import_columns": [
          "ID",
          "TITLE",
          "STOCK",
          "DATACATEGORY"
        ],
        "include_filter": [
          { "DATACATEGORY" : "S" }
        ]
      },
      "column_mappings": {
        "ID": "ID",
        "TITLE": "title",
        "STOCK": "stock",
        "DATACATEGORY": "dataCategory"
      }
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Move the CSV file into the &lt;STRONG&gt;db/src/static/csv&lt;/STRONG&gt; folder as well. Don't forget to set the dataCategory to "S".&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;ID,title,stock,dataCategory
1,Wuthering Heights,100,S
2,Jane Eyre,500,S&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4.&amp;nbsp;After the initial deployment, users update some of the records and insert one new entry, resulting in the following state (as shown in the result of a GET request):&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "@odata.context": "$metadata#Books",
  "value": [
    { "ID": 1, "dataCategory": "S", "stock": 100, "title": "Updated" },
    { "ID": 2, "dataCategory": "S", "stock": 500, "title": "Jane Eyre" },
    { "ID": 3, "dataCategory": "U", "stock": 10, "title": "New Book" }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5.&amp;nbsp;When schema changes or updates to the initial data are applied, records with dataCategory = "S" are overwritten, while records with dataCategory = "U" remain untouched. For example, after adding a new column newField:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;{
  "@odata.context": "$metadata#Books",
  "value": [
    { "ID": 1, "dataCategory": "S", "newField": null, "stock": 100, "title": "Wuthering Heights" },
    { "ID": 2, "dataCategory": "S", "newField": null, "stock": 500, "title": "Jane Eyre" },
    { "ID": 3, "dataCategory": "U", "newField": null, "stock": 10, "title": "New Book" }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-777490580"&gt;Case 2: Accidentally Mixed Data&lt;/H2&gt;&lt;P&gt;In some cases, custom data and pre-delivered data (from a CSV file) may accidentally end up in the same table governed by an HDI Table Data artifact (.hdbtabledata) without filter conditions to separate them.&amp;nbsp;&lt;/P&gt;&lt;P&gt;SAP Note &lt;A href="https://me.sap.com/notes/2922271/E" target="_self" rel="noopener noreferrer"&gt;2922271&lt;/A&gt; outlines how to handle this situation. Below, I’ll walk you through the steps.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;: The procedure described here applies to single-tenant applications. For multitenant scenarios, please refer to the &lt;A href="https://cap.cloud.sap/docs/get-started/troubleshooting#hana-csv" target="_self" rel="nofollow noopener noreferrer"&gt;documentation&lt;/A&gt;, as well as&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1517445"&gt;@Sekar_Somasundaram&lt;/a&gt;'s&amp;nbsp;&lt;/EM&gt;&amp;nbsp;detailed &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/handling-csv-data-deployment-in-cap-hdi-without-data-loss/ba-p/14118322" target="_self"&gt;blog post&lt;/A&gt;.&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-710059794"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-513546289"&gt;Steps at a Glance&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Delete the CSV file.&lt;/LI&gt;&lt;LI&gt;Make the &lt;STRONG&gt;.hdbtabledata&lt;/STRONG&gt; artifact subject to undeploy.&lt;/LI&gt;&lt;LI&gt;Ensure that existing data is preserved during undeploy.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-317032784"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-120519279"&gt;Current State of the Data&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The CSV file initially contains the following data:&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;ID,title,stock
1,Wuthering Heights,100
2,Jane Eyre,500&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;After the initial deployment, users update some of the records and insert one new entry, resulting in the following state:&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "@odata.context": "$metadata#Books",
  "value": [
    { "ID": 1, "stock": 100, "title": "Updated" },
    { "ID": 2, "stock": 500, "title": "Jane Eyre" },
    { "ID": 3, "stock": 10, "title": "New Book" }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--151225595"&gt;Step-by-Step: Deleting the CSV File After Initial Deployment&lt;/H3&gt;&lt;P&gt;1. Delete the CSV file.&lt;/P&gt;&lt;P&gt;2. Add "&lt;EM&gt;src/gen/**/*.hdbtabledata&lt;/EM&gt;" to &lt;STRONG&gt;db/undeploy.json &lt;/STRONG&gt;as shown below:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;[
  "src/gen/**/*.hdbview",
  "src/gen/**/*.hdbindex",
  "src/gen/**/*.hdbconstraint",
  "src/gen/**/*_drafts.hdbtable",
  "src/gen/**/*.hdbcalculationview",
  "src/gen/**/*.hdbtabledata"
]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3.&amp;nbsp;Copy &lt;STRONG&gt;gen/db/package.json&lt;/STRONG&gt; to the &lt;STRONG&gt;db&lt;/STRONG&gt; folder, and add the following parameters to the start script.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt; --undeploy src/&amp;lt;mytable&amp;gt;.hdbtabledata --path-parameter src/&amp;lt;mytable&amp;gt;.hdbtabledata:skip_data_deletion=true&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;In my example, the &lt;STRONG&gt;package.json&lt;/STRONG&gt; looks as follows:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "name": "deploy",
  "dependencies": {
    "hdb": "^0",
    "@sap/hdi-deploy": "^5"
  },
  "engines": {
    "node": "&amp;gt;=18"
  },
  "scripts": {
    "start": "node node_modules/@sap/hdi-deploy/deploy.js --use-hdb --parameter com.sap.hana.di.table/try_fast_table_migration=true --undeploy src/gen/data/my.bookshop-Books.hdbtabledata --path-parameter src/gen/data/my.bookshop-Books.hdbtabledata:skip_data_deletion=true"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4.&amp;nbsp;&lt;SPAN&gt;Deploy the project. In the db-deployer log, you will see a message indicating that the existing data was not deleted.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;[APP/TASK/deploy/0] OUT The "skip_data_deletion" make parameter is set; no data will be deleted from the target table "MY_BOOKSHOP_BOOKS"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;As a result, the updated user data remains intact.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "@odata.context": "$metadata#Books",
  "value": [
    { "ID": 1, "stock": 100, "title": "Updated" },
    { "ID": 2, "stock": 500, "title": "Jane Eyre" },
    { "ID": 3, "stock": 10, "title": "New Book" }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5.&amp;nbsp;Before the next deployment, delete the &lt;STRONG&gt;db/package.json&lt;/STRONG&gt; file to restore the original state. From this point on, even if the schema changes, the data will no longer be overridden.&lt;/P&gt;&lt;H2 id="toc-hId--54336093"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--250849598"&gt;Other Ways to Register Data&lt;/H2&gt;&lt;P&gt;Besides using CSV files during deployment, you can load data through the following approaches as well:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Insert data via HTTP requests&lt;/STRONG&gt;: Insert data after deployment using HTTP requests.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Upload CSV files through the Database Explorer&lt;/STRONG&gt;: Upload CSV files directly from the Database Explorer.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For local testing&lt;/STRONG&gt;: Place CSV files in the &lt;STRONG&gt;test/data&lt;/STRONG&gt; folder instead of &lt;STRONG&gt;db/data&lt;/STRONG&gt; (see: &lt;A href="https://cap.cloud.sap/docs/guides/databases#location-of-csv-files" target="_self" rel="nofollow noopener noreferrer"&gt;Location of CSV Files | capire&lt;/A&gt;).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--447363103"&gt;Closing&lt;/H2&gt;&lt;P&gt;A clear strategy on how to provide initial data must be defined upfront.&amp;nbsp;CSV files are convenient but must be used with caution, particularly in productive environments. Applying best practices such as separating system and user data, leveraging .hdbtabledata filters, or considering alternative loading options will help maintain data integrity and protect user input across deployments.&lt;/P&gt;&lt;H2 id="toc-hId--643876608"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--840390113"&gt;References&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://cap.cloud.sap/docs/guides/databases-hana#csv-data-gets-overridden" target="_self" rel="nofollow noopener noreferrer"&gt;CSV Data Gets Overridden (capire)&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://cap.cloud.sap/docs/get-started/troubleshooting#hana-csv" target="_self" rel="nofollow noopener noreferrer"&gt;I removed sample data (.csv file) from my project. Still, the data is deployed and overwrites existing data. (capire)&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172"/>
    <published>2025-09-15T22:17:28.888000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/learner-stories/upskilling-with-sap-alex-s-journey-into-the-sap-cloud-application/ba-p/14221585</id>
    <title>Upskilling with SAP: Alex's Journey into the SAP Cloud Application Programming Model</title>
    <updated>2025-09-18T17:08:18.646000+02:00</updated>
    <author>
      <name>Margit_Wagner</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/491</uri>
    </author>
    <content>&lt;P&gt;&lt;A href="https://community.sap.com/source-Ids-list" target="1_6jxa615j" rel="nofollow noopener noreferrer"&gt;&amp;nbsp;&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/learner-stories/upskilling-with-sap-alex-s-journey-into-the-sap-cloud-application/ba-p/14221585"/>
    <published>2025-09-18T17:08:18.646000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-september-18th-2025/ba-p/14221662</id>
    <title>SAP Developer News September 18th, 2025</title>
    <updated>2025-09-18T21:10:00.086000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1889949955"&gt;&lt;STRONG&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FT0veFdcM280%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DT0veFdcM280&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FT0veFdcM280%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="CSV Data Loss Fix in CAP, Devtoberfest, UI5con, Subscribers, CAP ESLint plugin | SAP Developer News" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-1693436450"&gt;&lt;STRONG&gt;DESCRIPTION&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;PODCAST: &lt;A href="https://podcast.opensap.info/sap-developers/2025/09/18/sap-developer-news-september-18th-2025/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://podcast.opensap.info/sap-developers/2025/09/18/sap-developer-news-september-18th-2025/&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Avoiding Data Loss When Loading Initial Data with CSV Files in CAP&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Blog post &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Developers YouTube Approaching 50k Subscribers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Subscribe to the SAP Developers YouTube: &lt;/SPAN&gt;&lt;A href="https://www.youtube.com/@sapdevs?sub_confirmation=1" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.youtube.com/@sapdevs?sub_confirmation=1&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Devtoberfest 2025&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest 2025: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-welcome/ba-p/14182817" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-welcome/ba-p/14182817&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest Calendar: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest/eb-p/devtoberfest-events?calendar=true" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest/eb-p/devtoberfest-events?calendar=true&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest Gameboard: &lt;/SPAN&gt;&lt;A href="https://devrel-tools-prod-scn-badges-srv.cfapps.eu10.hana.ondemand.com/devtoberfestContest/scnId.Here" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://devrel-tools-prod-scn-badges-srv.cfapps.eu10.hana.ondemand.com/devtoberfestContest/scnId.Here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest Playlist: &lt;/SPAN&gt;&lt;A href="https://www.youtube.com/playlist?list=PL6RpkC85SLQA4Lb9qdevEkcqoCJH2bXek" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.youtube.com/playlist?list=PL6RpkC85SLQA4Lb9qdevEkcqoCJH2bXek&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;UI5con Bengaluru 2025&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Announcement Post: &lt;/SPAN&gt;&lt;A href="https://www.linkedin.com/posts/openui5_ui5con2025bengaluru-developerconference-sapdevelopers-activity-7373981566852579328-lTDS" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.linkedin.com/posts/openui5_ui5con2025bengaluru-developerconference-sapdevelopers-activity-7373981566852579328-lTDS&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introducing eslint-plugin-better-cap-config an ESLint plugin to improve CAP configuration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Post: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-eslint-plugin-better-cap-config-an-eslint-plugin-to-improve-cap/ba-p/14209616" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-eslint-plugin-better-cap-config-an-eslint-plugin-to-improve-cap/ba-p/14209616&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;NPM Package: &lt;/SPAN&gt;&lt;A href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.npmjs.com/package/eslint-plugin-better-cap-config&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;GitHub Repo: &lt;/SPAN&gt;&lt;A href="https://github.com/mauriciolauffer/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://github.com/mauriciolauffer/eslint-plugin-better-cap-config&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1496922945"&gt;&lt;STRONG&gt;CHAPTER TITLES&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;0:00 Intro&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:10 Avoiding Data Loss When Loading Initial Data with CSV Files in CAP&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:58 50k Subscribers&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1:58 Devtoberfest&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;3:52 UI5con Bengaluru 2025&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;4:20 eslint-plugin-better-cap-config&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1300409440"&gt;&lt;STRONG&gt;TRANSCRIPTION&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Intro]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;This is the SAP Developer News for September 18th, 2025. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[DJ]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;When creating solutions with CAP and following the recommended local first development philosophy, you'll know about the immense utility of initial and sample data loading via CSV files. Some of you also may know about the things to look out for when subsequently deploying data to SAP HANA Cloud. If you don't, well, even if you do, it's definitely worth reading this blog post published recently by SAP champion MioYasutake. It serves as a reminder of the feature and the challenge and also walks through some alternative approaches. Link in the description. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Mamikee]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;We're so close to reaching a huge milestone here on the SAP Developers YouTube channel. 50K subscribers. Right now, we're sitting at about 49.8K, which means we just need a few hundred more of you to help us cross that line. Now, if you've been watching our tutorials, following the SAP developer news, participating in Devtoberfest , and all of our technical deep dives, now is the perfect time to hit that subscribe button. Subscribing doesn't just get you notified of our latest content, it makes you part of this growing global developer community. A community that's learning together, building together, and shaping the future of SAP development. here is the challenge, let's see if we can reach 50k before Devtoberfest . It's a celebration for developers around the world, and hitting this milestone together will make it even more special. So, don't wait. Click subscribe, turn on the notification, and help us celebrate the Big 50. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Tom]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Hey Devtoberfest is a little over a week away It is hard to believe, seems like just the other day we were starting to planning and preparations for the Devtoberfest , here it is, on top of us. we have all the fun and learning opportunities that you have come to know from previous years of Devtoberfest, plus a few new surprises this year. I had a look at the calendar of content on the community the other day, and it is chock full of educational sessions that I know I can't wait to attend myself. And it's going to have everything you need to help you get ready for TechEd this year. You know, TechEd, we're going to hear about lots of new AI innovations, changes in development capabilities, new functionality across the board in SAP BTP. and if you need to get up to speed on what some of these things are and how to get ready to learn about all the new innovations, Devtoberfest is the place to be. And don't forget, we'll be running the contest again this year. If you'd like an opportunity to perhaps win an all -expense-paid trip to next year's SAP TechEd in-person experience, then be sure to take part in the Devtoberfest contest. We'll have 10 winners from last year joining us in Berlin and we can't wait to see who the new winners are going to be joining us wherever TechEd is in the following year. So be on the lookout for everything DevToverFest. Check out the community calendar so you don't miss any of the sessions and join the DevToverFest community group so that you're registered for the contest. And don't forget to do all those validation tutorials and scavenger hunt and everything else where you can earn points for DevToverFest. So we look forward to bringing you another great DevToverfest this year. We'll see you all around the community and on those sessions on the SAP Developers YouTube channel. Hi everyone, and welcome to the SAP Developer News. Just a quick announcement. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Nico]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;After a six-year-long break, UI5Con is back in Bangalore, India. End of November, early December, there's no exact date yet. UI5Con will be back in India, so watch this space for more information. Very exciting. Hope to see you soon. Bye. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Tom]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Hi, I want to tell you about a nifty new little plugin supplied by one of our community members and fellow SAP employees. Mauricio has recently written a blog post about his available open source ESLint plugin. for the cloud application programming model. Now, this is part of, or taking advantage of an expanded effort for ESLint to focus on more languages and capabilities than just JavaScript and TypeScript. And he's using the JSON plugin that was already available and building on top of it to allow you to parse and check the configuration files specific to CAP, like the package a song but the additional functionality that he has added is checking for deprecated features and keys so if you think that would be a useful addition to your CAP development environment check out his blog post today and install and start using that plug-in.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-september-18th-2025/ba-p/14221662"/>
    <published>2025-09-18T21:10:00.086000+02:00</published>
  </entry>
</feed>
