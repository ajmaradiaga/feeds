<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Cloud-Application-Programming-Model-blog-posts.xml</id>
  <title>SAP Community - SAP Cloud Application Programming Model</title>
  <updated>2025-10-19T14:00:43.821260+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Cloud Application Programming Model/pd-p/9f13aee1-834c-4105-8e43-ee442775e5ce" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Cloud Application Programming Model blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-eslint-plugin-better-cap-config-an-eslint-plugin-to-improve-cap/ba-p/14209616</id>
    <title>Introducing eslint-plugin-better-cap-config an ESLint plugin to improve CAP configuration</title>
    <updated>2025-09-08T01:24:02.584000+02:00</updated>
    <author>
      <name>mauriciolauffer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11418</uri>
    </author>
    <content>&lt;P&gt;I've created an ESLint plugin to validate the configurations in SAP CAP Node.js applications. Yes, &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt; validates JSON files containing project configuration. For now, it's basically the usage of deprecated key/value entries, but it can evolve to accommodate best practices, suggestions and autofixes just like any other ESLint plugin.&lt;/P&gt;&lt;P&gt;It's build for modern ESLint which has introduced the concept of &lt;A href="https://eslint.org/docs/latest/extend/languages" target="_blank" rel="noopener nofollow noreferrer"&gt;new languages&lt;/A&gt;. This offers proper support to more languages beyond JavaScript and TypeScript. &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt; leverages the new &lt;A href="https://www.npmjs.com/package/@eslint/json" target="_blank" rel="noopener nofollow noreferrer"&gt;JSON Language&lt;/A&gt; rather than generic regular expressions. This makes it more powerful and flexible.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1759258371"&gt;Demo time&lt;/H2&gt;&lt;P&gt;Let's assume we have a simple CAP project with the following configuration in the &lt;STRONG&gt;package.json&lt;/STRONG&gt; file.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;"cds": {
    "requires": {
      "destinations": true,
      "html5-repo": true,
      "[production]": {
        "auth": "ias"
      },
      "messaging": {
        "kind": "enterprise-messaging"
      },
      "db": {
        "kind": "sql",
        "[production]": {
          "kind": "hana"
        }
      }
    },
    "features": {
      "cds_validate": false,
      "odata_new_adapter": false
    },
    "fiori": {
      "draft_compat": true
    }
  },&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;And the following ESLint configuration:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import cds from '@sap/cds/eslint.config.mjs';
export default [ ...cds.recommended ];&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;As we can see, it's using the ESLint config that comes with &lt;STRONG&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;/cds&lt;/STRONG&gt;. The same you get from &lt;A href="https://cap.cloud.sap/docs/tools/cds-lint/#cds-add-lint" target="_blank" rel="nofollow noopener noreferrer"&gt;$ cds add lint&lt;/A&gt;. OK, let's lint the project and see what happens:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm run lint&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ESLint shows no errors" style="width: 571px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310511i47AA8FEAA8728BC2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-06 162804.png" alt="ESLint shows no errors" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;ESLint shows no errors&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Nothing. No output. No issues. No problems. Happy days, right?&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Aladdin says &amp;quot;Not so fast Jafar!&amp;quot;" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310502iAF3835BDBD4FBB57/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-07 001830.png" alt="Aladdin says &amp;quot;Not so fast Jafar!&amp;quot;" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Aladdin says "Not so fast Jafar!"&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;According to the CAP documentation, configuration like&amp;nbsp;&lt;STRONG&gt;cds.features.cds_validate = false&lt;/STRONG&gt;, &lt;SPAN&gt;&lt;STRONG&gt;cds.&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;features.odata_new_adapter = false&lt;/STRONG&gt; and &lt;SPAN&gt;&lt;STRONG&gt;cds.&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;fiori.draft_compat = true&lt;/STRONG&gt; are deprecated. For some of the deprecated config in CAP, you may get a message on the console when running the application (cds-serve, cds watch, etc). However, there are some problems with relying on those console messages:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Most of the time they go unnoticed;&lt;/LI&gt;&lt;LI&gt;If you don't upgrade &lt;A href="https://www.npmjs.com/package/@sap/cds" target="_self" rel="nofollow noopener noreferrer"&gt;@sap/cds&lt;/A&gt; and &lt;A href="https://www.npmjs.com/package/@sap/cds-dk" target="_blank" rel="noopener nofollow noreferrer"&gt;@sap/cds-dk&lt;/A&gt;, you won't get the new messages informing something has been deprecated;&lt;/LI&gt;&lt;LI&gt;No visual cues on IDEs;&lt;/LI&gt;&lt;LI&gt;Not possible to integrate to a CI/CD pipeline.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;In this example, executing &lt;STRONG&gt;cds-serve&lt;/STRONG&gt; doesn't return any warning or error messages on the console for the aforementioned deprecated configs.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1562744866"&gt;ESLint Plugin Better CAP Config to the rescue!&lt;/H2&gt;&lt;P&gt;Now, let's install and configure &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt; to see what changes. Using it is quite simple, it's just another ESLint plugin you need to add to your collection. Because it uses the JSON language, you need to install the&amp;nbsp;&lt;A href="https://www.npmjs.com/package/@eslint/json" target="_blank" rel="noopener nofollow noreferrer"&gt;@eslint/json&lt;/A&gt; package as well.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm i -D @eslint/json   eslint-plugin-better-cap-config&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Edit, the &lt;STRONG&gt;eslint.config.js&lt;/STRONG&gt; file (or whatever variation you're using, eg, *.ts or *.mjs) to include &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import cds from "@sap/cds/eslint.config.mjs";
import { defineConfig } from "eslint/config";
import json from "@eslint/json";
import capConfig from "eslint-plugin-better-cap-config";

export default defineConfig([
  {
    files: ["**/*.js"],
    extends: [cds.recommended],
  },
  {
    files: ["**/*.json"],
    plugins: {
      json,
    },
    language: "json/json",
    extends: [capConfig.configs.recommended],
  },
]);&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now, we execute ESLint just like we did before, nothing else is required.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm run lint&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ESLint shows CAP config errors" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310515i7CA852E4D420D083/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-06 165546.png" alt="ESLint shows CAP config errors" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;ESLint shows CAP config errors&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;We can see &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt; picked up a few deprecated configs that went unnoticed before.&lt;/P&gt;&lt;P&gt;Now, we fix our config:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;  "cds": {
    "requires": {
      "destinations": true,
      "html5-repo": true,
      "[production]": {
        "auth": "ias"
      },
      "messaging": {
        "kind": "enterprise-messaging"
      },
      "db": {
        "kind": "sql",
        "[production]": {
          "kind": "hana"
        }
      }
    },
    "features": {
      "cds_validate": true,
      "odata_new_adapter": true
    }
  },&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;And lint the project again:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm run lint&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ESLint shows no errors" style="width: 571px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310505i684D6E51DCC6FDB2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-06 162804.png" alt="ESLint shows no errors" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;ESLint shows no errors&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;No issues found! Hooray!!!&lt;/P&gt;&lt;P&gt;This is early days for &lt;A title="ESLint Plugin Better CAP Config" href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;eslint-plugin-better-cap-config&lt;/STRONG&gt;&lt;/A&gt;, there are few rules implemented so far and some others cooking.&lt;/P&gt;&lt;P&gt;It works with configuration in any JSON file, such as&amp;nbsp;&lt;STRONG&gt;package.json&lt;/STRONG&gt; and&amp;nbsp;&lt;STRONG&gt;.cdsrc.json&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;CAP documentation is good, but doesn't help much when looking for deprecated stuff. A central place for that would be great. Right now, I'm going through the release notes and looking for everything that's deprecated. It's a rather tedious process...&lt;/P&gt;&lt;P&gt;As always, the project is open-source (&lt;A href="https://github.com/mauriciolauffer/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub&lt;/A&gt;) and PRs are welcome &lt;span class="lia-unicode-emoji" title=":robot_face:"&gt;🤖&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-eslint-plugin-better-cap-config-an-eslint-plugin-to-improve-cap/ba-p/14209616"/>
    <published>2025-09-08T01:24:02.584000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172</id>
    <title>Avoiding Data Loss When Loading Initial Data with CSV Files in CAP</title>
    <updated>2025-09-15T22:17:28.888000+02:00</updated>
    <author>
      <name>MioYasutake</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/789</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760058105"&gt;Introduction&lt;/H2&gt;&lt;P&gt;When you start learning CAP, running &lt;EM&gt;cds add tiny-sample&lt;/EM&gt; generates all the necessary sample artifacts, including a CSV file inside the &lt;STRONG&gt;db/data&lt;/STRONG&gt; folder. Once deployed, the data from this CSV file is loaded as initial data into SAP HANA Cloud.&lt;/P&gt;&lt;P&gt;This mechanism seems convenient for loading initial data into SAP HANA Cloud for productive applications, doesn’t it?&lt;BR /&gt;However, there’s a catch. &lt;STRONG&gt;If you change the CSV data or modify the schema, the data in SAP HANA Cloud will be reinitialized with the CSV content&lt;/STRONG&gt; — including the data entered by users! Let’s take a look at what the &lt;A href="https://cap.cloud.sap/docs/guides/databases#using-csv-files" target="_self" rel="nofollow noopener noreferrer"&gt;documentation&lt;/A&gt; says:&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;On SAP HANA, only use CSV files for configuration data that can't be changed by application users. → See &lt;EM&gt;CSV data gets overridden&lt;/EM&gt; in the SAP HANA guide for details.&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;This is exactly the point I want to highlight in this article. At the same time, I’ve also explored some alternative approaches and validated them.&lt;/P&gt;&lt;H2 id="toc-hId-1563544600"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1367031095"&gt;Case1: New Development&lt;/H2&gt;&lt;P&gt;When developing a new CAP application, you have the following options:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Option A&lt;/STRONG&gt;: Do not use CSV files to register initial data for tables that will be maintained by the application users.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Option B&lt;/STRONG&gt;:&amp;nbsp;If both initial data and user-generated data need to coexist, define filter conditions in the &lt;STRONG&gt;.hdbtabledata&lt;/STRONG&gt;&amp;nbsp;file.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Option A is the simplest, if feasible. However, in some cases — such as for master data — the ability to quickly load initial data from CSV files is attractive. Below, let’s look at Option B&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;in more detail.&lt;/P&gt;&lt;H3 id="toc-hId-1299600309"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1103086804"&gt;&lt;STRONG&gt;Option B:&amp;nbsp;&lt;/STRONG&gt;Define filter conditions in the &lt;STRONG&gt;.hdbtabledata&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;1. Add a column called &lt;EM&gt;dataCategory&lt;/EM&gt; to the table to distinguish between different types of data. (This is just an example; you can use any column as an identifier.)&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;entity Books {
  key ID    : Integer;
      title : String;
      stock : Integer;
      dataCategory: String enum {
        system = 'S';
        user = 'U';
      }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2.&amp;nbsp;Run the command &lt;EM&gt;cds build --production&lt;/EM&gt;&amp;nbsp;to generate an &lt;STRONG&gt;.hdbtabledata&lt;/STRONG&gt; file in the &lt;STRONG&gt;gen/db/src/data&lt;/STRONG&gt; folder. Copy this file to the &lt;STRONG&gt;db/src/static/csv&lt;/STRONG&gt; folder, and then add an &lt;STRONG&gt;include_filter&lt;/STRONG&gt; as shown below.&amp;nbsp; This ensures that the HDI container takes ownership only of the records specified by the filter. (Note:&amp;nbsp;&lt;SPAN&gt;The values must be strings, even if the column’s data type is numeric.)&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "format_version": 1,
  "imports": [
    {
      ...,
      "import_settings": {
        "import_columns": [
          "ID",
          "TITLE",
          "STOCK",
          "DATACATEGORY"
        ],
        "include_filter": [
          { "DATACATEGORY" : "S" }
        ]
      },
      "column_mappings": {
        "ID": "ID",
        "TITLE": "title",
        "STOCK": "stock",
        "DATACATEGORY": "dataCategory"
      }
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Move the CSV file into the &lt;STRONG&gt;db/src/static/csv&lt;/STRONG&gt; folder as well. Don't forget to set the dataCategory to "S".&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;ID,title,stock,dataCategory
1,Wuthering Heights,100,S
2,Jane Eyre,500,S&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4.&amp;nbsp;After the initial deployment, users update some of the records and insert one new entry, resulting in the following state (as shown in the result of a GET request):&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "@odata.context": "$metadata#Books",
  "value": [
    { "ID": 1, "dataCategory": "S", "stock": 100, "title": "Updated" },
    { "ID": 2, "dataCategory": "S", "stock": 500, "title": "Jane Eyre" },
    { "ID": 3, "dataCategory": "U", "stock": 10, "title": "New Book" }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5.&amp;nbsp;When schema changes or updates to the initial data are applied, records with dataCategory = "S" are overwritten, while records with dataCategory = "U" remain untouched. For example, after adding a new column newField:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;{
  "@odata.context": "$metadata#Books",
  "value": [
    { "ID": 1, "dataCategory": "S", "newField": null, "stock": 100, "title": "Wuthering Heights" },
    { "ID": 2, "dataCategory": "S", "newField": null, "stock": 500, "title": "Jane Eyre" },
    { "ID": 3, "dataCategory": "U", "newField": null, "stock": 10, "title": "New Book" }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-777490580"&gt;Case 2: Accidentally Mixed Data&lt;/H2&gt;&lt;P&gt;In some cases, custom data and pre-delivered data (from a CSV file) may accidentally end up in the same table governed by an HDI Table Data artifact (.hdbtabledata) without filter conditions to separate them.&amp;nbsp;&lt;/P&gt;&lt;P&gt;SAP Note &lt;A href="https://me.sap.com/notes/2922271/E" target="_self" rel="noopener noreferrer"&gt;2922271&lt;/A&gt; outlines how to handle this situation. Below, I’ll walk you through the steps.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;: The procedure described here applies to single-tenant applications. For multitenant scenarios, please refer to the &lt;A href="https://cap.cloud.sap/docs/get-started/troubleshooting#hana-csv" target="_self" rel="nofollow noopener noreferrer"&gt;documentation&lt;/A&gt;, as well as&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1517445"&gt;@Sekar_Somasundaram&lt;/a&gt;'s&amp;nbsp;&lt;/EM&gt;&amp;nbsp;detailed &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/handling-csv-data-deployment-in-cap-hdi-without-data-loss/ba-p/14118322" target="_self"&gt;blog post&lt;/A&gt;.&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-710059794"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-513546289"&gt;Steps at a Glance&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Delete the CSV file.&lt;/LI&gt;&lt;LI&gt;Make the &lt;STRONG&gt;.hdbtabledata&lt;/STRONG&gt; artifact subject to undeploy.&lt;/LI&gt;&lt;LI&gt;Ensure that existing data is preserved during undeploy.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-317032784"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-120519279"&gt;Current State of the Data&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The CSV file initially contains the following data:&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;ID,title,stock
1,Wuthering Heights,100
2,Jane Eyre,500&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;After the initial deployment, users update some of the records and insert one new entry, resulting in the following state:&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "@odata.context": "$metadata#Books",
  "value": [
    { "ID": 1, "stock": 100, "title": "Updated" },
    { "ID": 2, "stock": 500, "title": "Jane Eyre" },
    { "ID": 3, "stock": 10, "title": "New Book" }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--151225595"&gt;Step-by-Step: Deleting the CSV File After Initial Deployment&lt;/H3&gt;&lt;P&gt;1. Delete the CSV file.&lt;/P&gt;&lt;P&gt;2. Add "&lt;EM&gt;src/gen/**/*.hdbtabledata&lt;/EM&gt;" to &lt;STRONG&gt;db/undeploy.json &lt;/STRONG&gt;as shown below:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;[
  "src/gen/**/*.hdbview",
  "src/gen/**/*.hdbindex",
  "src/gen/**/*.hdbconstraint",
  "src/gen/**/*_drafts.hdbtable",
  "src/gen/**/*.hdbcalculationview",
  "src/gen/**/*.hdbtabledata"
]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3.&amp;nbsp;Copy &lt;STRONG&gt;gen/db/package.json&lt;/STRONG&gt; to the &lt;STRONG&gt;db&lt;/STRONG&gt; folder, and add the following parameters to the start script.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt; --undeploy src/&amp;lt;mytable&amp;gt;.hdbtabledata --path-parameter src/&amp;lt;mytable&amp;gt;.hdbtabledata:skip_data_deletion=true&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;In my example, the &lt;STRONG&gt;package.json&lt;/STRONG&gt; looks as follows:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "name": "deploy",
  "dependencies": {
    "hdb": "^0",
    "@sap/hdi-deploy": "^5"
  },
  "engines": {
    "node": "&amp;gt;=18"
  },
  "scripts": {
    "start": "node node_modules/@sap/hdi-deploy/deploy.js --use-hdb --parameter com.sap.hana.di.table/try_fast_table_migration=true --undeploy src/gen/data/my.bookshop-Books.hdbtabledata --path-parameter src/gen/data/my.bookshop-Books.hdbtabledata:skip_data_deletion=true"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4.&amp;nbsp;&lt;SPAN&gt;Deploy the project. In the db-deployer log, you will see a message indicating that the existing data was not deleted.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;[APP/TASK/deploy/0] OUT The "skip_data_deletion" make parameter is set; no data will be deleted from the target table "MY_BOOKSHOP_BOOKS"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;As a result, the updated user data remains intact.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "@odata.context": "$metadata#Books",
  "value": [
    { "ID": 1, "stock": 100, "title": "Updated" },
    { "ID": 2, "stock": 500, "title": "Jane Eyre" },
    { "ID": 3, "stock": 10, "title": "New Book" }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5.&amp;nbsp;Before the next deployment, delete the &lt;STRONG&gt;db/package.json&lt;/STRONG&gt; file to restore the original state. From this point on, even if the schema changes, the data will no longer be overridden.&lt;/P&gt;&lt;H2 id="toc-hId--54336093"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--250849598"&gt;Other Ways to Register Data&lt;/H2&gt;&lt;P&gt;Besides using CSV files during deployment, you can load data through the following approaches as well:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Insert data via HTTP requests&lt;/STRONG&gt;: Insert data after deployment using HTTP requests.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Upload CSV files through the Database Explorer&lt;/STRONG&gt;: Upload CSV files directly from the Database Explorer.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For local testing&lt;/STRONG&gt;: Place CSV files in the &lt;STRONG&gt;test/data&lt;/STRONG&gt; folder instead of &lt;STRONG&gt;db/data&lt;/STRONG&gt; (see: &lt;A href="https://cap.cloud.sap/docs/guides/databases#location-of-csv-files" target="_self" rel="nofollow noopener noreferrer"&gt;Location of CSV Files | capire&lt;/A&gt;).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;* For CAP Java, configuration in application.yaml is required for loading CSV files from the &lt;STRONG&gt;test/data&lt;/STRONG&gt; folder. Please find my Q&amp;amp;A below:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-q-a/cap-java-csv-data-in-the-test-data-folder-not-loaded-duirng-local-testing/qaa-p/14227290#M4927381" target="_blank"&gt;https://community.sap.com/t5/technology-q-a/cap-java-csv-data-in-the-test-data-folder-not-loaded-duirng-local-testing/qaa-p/14227290#M4927381&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--447363103"&gt;Closing&lt;/H2&gt;&lt;P&gt;A clear strategy on how to provide initial data must be defined upfront.&amp;nbsp;CSV files are convenient but must be used with caution, particularly in productive environments. Applying best practices such as separating system and user data, leveraging .hdbtabledata filters, or considering alternative loading options will help maintain data integrity and protect user input across deployments.&lt;/P&gt;&lt;H2 id="toc-hId--643876608"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--840390113"&gt;References&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://cap.cloud.sap/docs/guides/databases-hana#csv-data-gets-overridden" target="_self" rel="nofollow noopener noreferrer"&gt;CSV Data Gets Overridden (capire)&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://cap.cloud.sap/docs/get-started/troubleshooting#hana-csv" target="_self" rel="nofollow noopener noreferrer"&gt;I removed sample data (.csv file) from my project. Still, the data is deployed and overwrites existing data. (capire)&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172"/>
    <published>2025-09-15T22:17:28.888000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/learner-stories/upskilling-with-sap-alex-s-journey-into-the-sap-cloud-application/ba-p/14221585</id>
    <title>Upskilling with SAP: Alex's Journey into the SAP Cloud Application Programming Model</title>
    <updated>2025-09-18T17:08:18.646000+02:00</updated>
    <author>
      <name>Margit_Wagner</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/491</uri>
    </author>
    <content>&lt;P&gt;&lt;A href="https://community.sap.com/source-Ids-list" target="1_6jxa615j" rel="nofollow noopener noreferrer"&gt;&amp;nbsp;&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/learner-stories/upskilling-with-sap-alex-s-journey-into-the-sap-cloud-application/ba-p/14221585"/>
    <published>2025-09-18T17:08:18.646000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-september-18th-2025/ba-p/14221662</id>
    <title>SAP Developer News September 18th, 2025</title>
    <updated>2025-09-18T21:10:00.086000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1889949955"&gt;&lt;STRONG&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FT0veFdcM280%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DT0veFdcM280&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FT0veFdcM280%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="CSV Data Loss Fix in CAP, Devtoberfest, UI5con, Subscribers, CAP ESLint plugin | SAP Developer News" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-1693436450"&gt;&lt;STRONG&gt;DESCRIPTION&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;PODCAST: &lt;A href="https://podcast.opensap.info/sap-developers/2025/09/18/sap-developer-news-september-18th-2025/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://podcast.opensap.info/sap-developers/2025/09/18/sap-developer-news-september-18th-2025/&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Avoiding Data Loss When Loading Initial Data with CSV Files in CAP&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Blog post &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Developers YouTube Approaching 50k Subscribers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Subscribe to the SAP Developers YouTube: &lt;/SPAN&gt;&lt;A href="https://www.youtube.com/@sapdevs?sub_confirmation=1" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.youtube.com/@sapdevs?sub_confirmation=1&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Devtoberfest 2025&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest 2025: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-welcome/ba-p/14182817" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-welcome/ba-p/14182817&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest Calendar: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest/eb-p/devtoberfest-events?calendar=true" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest/eb-p/devtoberfest-events?calendar=true&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest Gameboard: &lt;/SPAN&gt;&lt;A href="https://devrel-tools-prod-scn-badges-srv.cfapps.eu10.hana.ondemand.com/devtoberfestContest/scnId.Here" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://devrel-tools-prod-scn-badges-srv.cfapps.eu10.hana.ondemand.com/devtoberfestContest/scnId.Here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest Playlist: &lt;/SPAN&gt;&lt;A href="https://www.youtube.com/playlist?list=PL6RpkC85SLQA4Lb9qdevEkcqoCJH2bXek" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.youtube.com/playlist?list=PL6RpkC85SLQA4Lb9qdevEkcqoCJH2bXek&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;UI5con Bengaluru 2025&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Announcement Post: &lt;/SPAN&gt;&lt;A href="https://www.linkedin.com/posts/openui5_ui5con2025bengaluru-developerconference-sapdevelopers-activity-7373981566852579328-lTDS" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.linkedin.com/posts/openui5_ui5con2025bengaluru-developerconference-sapdevelopers-activity-7373981566852579328-lTDS&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introducing eslint-plugin-better-cap-config an ESLint plugin to improve CAP configuration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Post: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-eslint-plugin-better-cap-config-an-eslint-plugin-to-improve-cap/ba-p/14209616" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-eslint-plugin-better-cap-config-an-eslint-plugin-to-improve-cap/ba-p/14209616&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;NPM Package: &lt;/SPAN&gt;&lt;A href="https://www.npmjs.com/package/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.npmjs.com/package/eslint-plugin-better-cap-config&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;GitHub Repo: &lt;/SPAN&gt;&lt;A href="https://github.com/mauriciolauffer/eslint-plugin-better-cap-config" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://github.com/mauriciolauffer/eslint-plugin-better-cap-config&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1496922945"&gt;&lt;STRONG&gt;CHAPTER TITLES&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;0:00 Intro&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:10 Avoiding Data Loss When Loading Initial Data with CSV Files in CAP&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:58 50k Subscribers&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1:58 Devtoberfest&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;3:52 UI5con Bengaluru 2025&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;4:20 eslint-plugin-better-cap-config&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1300409440"&gt;&lt;STRONG&gt;TRANSCRIPTION&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Intro]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;This is the SAP Developer News for September 18th, 2025. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[DJ]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;When creating solutions with CAP and following the recommended local first development philosophy, you'll know about the immense utility of initial and sample data loading via CSV files. Some of you also may know about the things to look out for when subsequently deploying data to SAP HANA Cloud. If you don't, well, even if you do, it's definitely worth reading this blog post published recently by SAP champion MioYasutake. It serves as a reminder of the feature and the challenge and also walks through some alternative approaches. Link in the description. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Mamikee]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;We're so close to reaching a huge milestone here on the SAP Developers YouTube channel. 50K subscribers. Right now, we're sitting at about 49.8K, which means we just need a few hundred more of you to help us cross that line. Now, if you've been watching our tutorials, following the SAP developer news, participating in Devtoberfest , and all of our technical deep dives, now is the perfect time to hit that subscribe button. Subscribing doesn't just get you notified of our latest content, it makes you part of this growing global developer community. A community that's learning together, building together, and shaping the future of SAP development. here is the challenge, let's see if we can reach 50k before Devtoberfest . It's a celebration for developers around the world, and hitting this milestone together will make it even more special. So, don't wait. Click subscribe, turn on the notification, and help us celebrate the Big 50. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Tom]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Hey Devtoberfest is a little over a week away It is hard to believe, seems like just the other day we were starting to planning and preparations for the Devtoberfest , here it is, on top of us. we have all the fun and learning opportunities that you have come to know from previous years of Devtoberfest, plus a few new surprises this year. I had a look at the calendar of content on the community the other day, and it is chock full of educational sessions that I know I can't wait to attend myself. And it's going to have everything you need to help you get ready for TechEd this year. You know, TechEd, we're going to hear about lots of new AI innovations, changes in development capabilities, new functionality across the board in SAP BTP. and if you need to get up to speed on what some of these things are and how to get ready to learn about all the new innovations, Devtoberfest is the place to be. And don't forget, we'll be running the contest again this year. If you'd like an opportunity to perhaps win an all -expense-paid trip to next year's SAP TechEd in-person experience, then be sure to take part in the Devtoberfest contest. We'll have 10 winners from last year joining us in Berlin and we can't wait to see who the new winners are going to be joining us wherever TechEd is in the following year. So be on the lookout for everything DevToverFest. Check out the community calendar so you don't miss any of the sessions and join the DevToverFest community group so that you're registered for the contest. And don't forget to do all those validation tutorials and scavenger hunt and everything else where you can earn points for DevToverFest. So we look forward to bringing you another great DevToverfest this year. We'll see you all around the community and on those sessions on the SAP Developers YouTube channel. Hi everyone, and welcome to the SAP Developer News. Just a quick announcement. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Nico]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;After a six-year-long break, UI5Con is back in Bangalore, India. End of November, early December, there's no exact date yet. UI5Con will be back in India, so watch this space for more information. Very exciting. Hope to see you soon. Bye. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Tom]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Hi, I want to tell you about a nifty new little plugin supplied by one of our community members and fellow SAP employees. Mauricio has recently written a blog post about his available open source ESLint plugin. for the cloud application programming model. Now, this is part of, or taking advantage of an expanded effort for ESLint to focus on more languages and capabilities than just JavaScript and TypeScript. And he's using the JSON plugin that was already available and building on top of it to allow you to parse and check the configuration files specific to CAP, like the package a song but the additional functionality that he has added is checking for deprecated features and keys so if you think that would be a useful addition to your CAP development environment check out his blog post today and install and start using that plug-in.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-september-18th-2025/ba-p/14221662"/>
    <published>2025-09-18T21:10:00.086000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-application-programming-model-cap-customer-roundtable-october/ba-p/14222428</id>
    <title>SAP Cloud Application Programming Model (CAP) | Customer Roundtable | October 2025</title>
    <updated>2025-09-19T14:43:26.536000+02:00</updated>
    <author>
      <name>TheSebastian</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/142742</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760894987"&gt;Slides &amp;amp; Recording&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://cap.cloud.sap/resources/events/CAP_Roundtable_10_102025.pdf" target="_self" rel="nofollow noopener noreferrer"&gt;Slides&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://youtu.be/OYNgz0htRwY" target="_self" rel="nofollow noopener noreferrer"&gt;Recording&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1564381482"&gt;-----------------&lt;/H2&gt;&lt;H2 id="toc-hId-1367867977"&gt;Customer Roundtable&lt;/H2&gt;&lt;P&gt;It's time for a new edition of the CAP Roundtable - the first one after our highlight of the year - &lt;A href="https://recap-conf.dev/" target="_blank" rel="noopener nofollow noreferrer"&gt;re&amp;gt;≡CAP 2025&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;As always we will go for a mix of recent announcements, demo, presentations as well as topics and questions raised by the CAP community.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Do you have CAP related insights, requirements, issues, challenges, topics… that you would like to share and discuss in the upcoming meeting?&lt;FONT color="#3366FF"&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;If yes, please reach-out to us so that we can add it to the agenda.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="CAP_Roundtable.png" style="width: 734px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/261956i19B673F3858FB90E/image-size/large?v=v2&amp;amp;px=999" role="button" title="CAP_Roundtable.png" alt="CAP_Roundtable.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1171354472"&gt;&lt;STRONG&gt;&amp;nbsp;Agenda&lt;/STRONG&gt;&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;re&amp;gt;≡CAP 2025 recordings&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Kyma&lt;/STRONG&gt;&amp;nbsp;runtime usage - request for short interviews (complaints, feedback, requirements)&lt;/LI&gt;&lt;LI&gt;CAP sessions at Devtoberfest &amp;amp; TechEd&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Updates from CAP Team&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;CAP/JS MCP Servers &lt;EM&gt;(David Kunz, Sebastian van Syckel)&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;Status Transition Flows with History &lt;EM&gt;(Simon Engel)&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;What's New in CAP Tools &lt;EM&gt;(Christian Georgi)&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;New Capire Samples&lt;EM&gt; (Daniel Hutzel)&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Q&amp;amp;A / Topics by the Community&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-974840967"&gt;&lt;FONT size="5"&gt;Meeting Information&lt;/FONT&gt;&lt;/H2&gt;&lt;P data-unlink="true"&gt;&lt;STRONG&gt;When:&amp;nbsp;&lt;/STRONG&gt;Wednesday,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;October 15th&lt;/STRONG&gt;, 2025, 11 AM EST | 5 PM CE(S)T&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Where:&amp;nbsp;&lt;A href="https://teams.microsoft.com/l/meetup-join/19%3ameeting_ZWY3NmFiYTYtZjU1NC00MzIyLWE4ZDItZjY1NDJlZDA0ZTE1%40thread.v2/0?context=%7b%22Tid%22%3a%2242f7676c-f455-423c-82f6-dc2d99791af7%22%2c%22Oid%22%3a%223d4d6882-45a1-41ce-9418-35a35744348f%22%7d" target="_blank" rel="nofollow noopener noreferrer"&gt;Teams Meeting&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Meeting Request Download&lt;/STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;A href="https://cap.cloud.sap/resources/events/CAP_Customer_Roundtable_October_2025.ics" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;link&lt;/STRONG&gt;&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Who: &amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;All interested&amp;nbsp;&lt;STRONG&gt;partners and stakeholders&lt;/STRONG&gt;&amp;nbsp;are invited to join: developers, enterprise architects, technical consultants…&lt;/LI&gt;&lt;LI&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP Cloud Application Programming Model&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;team&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Anyone interested&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in learning about the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP Cloud Application Programming Model&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and exchange your ideas and feedback with other users and the product team&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;Looking forward to seeing you there!&lt;BR /&gt;Check also out the new&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/resources/events" target="_blank" rel="nofollow noopener noreferrer"&gt;Events&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;page in our&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/" target="_blank" rel="nofollow noopener noreferrer"&gt;documentation&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and our&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/topics/cloud-application-programming" target="_blank"&gt;Community page&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for updates on upcoming events.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-application-programming-model-cap-customer-roundtable-october/ba-p/14222428"/>
    <published>2025-09-19T14:43:26.536000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/building-a-cap-service-with-cds-mcp-and-cline-hands-on-super-basic-guide/ba-p/14223349</id>
    <title>Building a CAP service with cds‑mcp and Cline — HANDS‑ON SUPER BASIC GUIDE [ with screenshots ] 🍌</title>
    <updated>2025-09-21T22:27:22.791000+02:00</updated>
    <author>
      <name>smarchesini</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/125739</uri>
    </author>
    <content>&lt;P&gt;&lt;BR /&gt;Everything you’re about to read started with this brilliant SAP blog: &lt;A target="_new" rel="noopener"&gt;Boost your CAP development with AI: Introducing the MCP Server for CAP&lt;/A&gt;. Think of it as the seed that grew into my little CAP + Cline + banana adventure. &lt;span class="lia-unicode-emoji" title=":banana:"&gt;🍌&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1890006599"&gt;What you’ll get&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;A friendly walkthrough to spin up a CAP service in VS Code&lt;/LI&gt;&lt;LI&gt;How to wire it to S/4HANA via a BTP Destination for local tests&lt;/LI&gt;&lt;LI&gt;A few real‑world bumps on Windows PATH and global installs&lt;/LI&gt;&lt;LI&gt;A silly “banana mode” at the end to prove handlers actually run &lt;span class="lia-unicode-emoji" title=":banana:"&gt;🍌&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1693493094"&gt;Prereqs (aka “don’t skip me”)&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;VS Code on Windows&lt;/LI&gt;&lt;LI&gt;Node.js installed and on PATH&lt;/LI&gt;&lt;LI&gt;SAP BTP subaccount with a Destination, e.g. DEVTOBERFEST_DEST to you S4H public cloud [follow my &lt;A href="https://www.youtube.com/watch?v=7m22NubgqME" target="_blank" rel="noopener nofollow noreferrer"&gt;Devtoberfest session&lt;/A&gt; for this]&lt;/LI&gt;&lt;LI&gt;Optional: Postman for poking endpoints&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1496979589"&gt;Step 1 — Tools on deck&lt;/H3&gt;&lt;P&gt;If you try to run &lt;FONT face="terminal,monaco"&gt;cds init&lt;/FONT&gt; and it's not working, follow the next steps.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_0-1758470144854.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317439i6AAD273BE7F7C538/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_0-1758470144854.png" alt="smarchesini_0-1758470144854.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;H4 id="toc-hId-1429548803"&gt;CAP dev kit&lt;/H4&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;PRE&gt;npm add -g @sap/cds-dk&lt;/PRE&gt;&lt;P&gt;If global installs act shy on Windows, add this to PATH then restart VS Code:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;C:\Users\&amp;lt;YourUser&amp;gt;\AppData\Roaming\npm&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1496979589" id="toc-hId-1103952579"&gt;Step 2 —&amp;nbsp;Cline + CAP MCP server&lt;/H3&gt;&lt;P&gt;There are a bunch of AI coding assistants out there — GitHub Copilot, Codeium, Cursor, Tabnine — so why bother with Cline and not Copilot or the others?&lt;/P&gt;&lt;P&gt;Copilot is amazing for inline coding, Cline felt like the right fit for &lt;STRONG&gt;building and testing a whole CAP service with AI in the loop&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_1-1758470196350.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317440i122E48B40A2D78EE/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_1-1758470196350.png" alt="smarchesini_1-1758470196350.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Install &lt;A href="https://marketplace.visualstudio.com/items?itemName=saoudrizwan.claude-dev&amp;amp;utm_source=website&amp;amp;utm_medium=header" target="_self" rel="nofollow noopener noreferrer"&gt;Cline from the VS Marketplace&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_2-1758470223336.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317441i8DDE7C3CA5025BDB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_2-1758470223336.png" alt="smarchesini_2-1758470223336.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_3-1758470245401.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317442i225C41439CDD285C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_3-1758470245401.png" alt="smarchesini_3-1758470245401.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Add the CAP MCP server:&lt;/LI&gt;&lt;/UL&gt;&lt;PRE&gt;npm i -g @cap-js/mcp-server&lt;/PRE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_4-1758470286552.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317443i48A3A864296E08DB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_4-1758470286552.png" alt="smarchesini_4-1758470286552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;VS Code settings (snip):&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_5-1758470320117.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317444i3ABD349E25BB21DC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_5-1758470320117.png" alt="smarchesini_5-1758470320117.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Add the MCP Server configuration to your Cline:&lt;/P&gt;&lt;PRE&gt;{
  "mcpServers": {
    "cds-mcp": { "command": "cds-mcp", "args": [], "env": {} }
  }
}&lt;/PRE&gt;&lt;P&gt;Heads‑up: &lt;A href="http://Agents.md" target="_blank" rel="noopener nofollow noreferrer"&gt;Agents.md&lt;/A&gt; wasn’t supported by Cline when I tried it; check again later.&lt;/P&gt;&lt;P&gt;Bonus guardrails, I told Cline:&lt;/P&gt;&lt;PRE&gt;- Always use cds‑mcp to look up CDS definitions before reading *.cds files.
- Always check CAP docs via cds‑mcp before proposing changes.&lt;BR /&gt;&lt;BR /&gt;&lt;/PRE&gt;&lt;P&gt;If you check on the bottom, you can find the model version:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_6-1758470378191.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317445i8DDBB09D395D061D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_6-1758470378191.png" alt="smarchesini_6-1758470378191.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Cline model picks I tried:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;anthropic/claude-sonnet-4&lt;/STRONG&gt; — great for agentic coding, supports images/browser/prompt caching.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;openai/gpt-5&lt;/STRONG&gt; — state-of-the-art for long tasks, supports images/browser, no caching.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;x-ai/grok-code-fast-1&lt;/STRONG&gt; — free (handy after I burned credits), supports prompt caching but no images/browser.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;You can see the differences between all the models, but Grok is free. After using my 10 free prompts, I switched to Grok on my daily to continue working (but not for this blog)&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-907439074"&gt;Step 3 — New CAP project&lt;/H3&gt;&lt;PRE&gt;cds init&lt;/PRE&gt;&lt;P&gt;The cds init command scaffolds a &lt;STRONG&gt;new CAP project&lt;/STRONG&gt;.&lt;BR /&gt;It creates the basic folder structure (app/, db/, srv/), adds a package.json, and sets up config files so you don’t start from scratch.&lt;/P&gt;&lt;P&gt;In short: it’s the “hello world” starter for CAP — without it, you’d have to wire everything by hand.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-710925569"&gt;Step 4 — Bring in Business Partner and scaffold&lt;/H3&gt;&lt;P&gt;After importing the EDMX file [&lt;A href="https://www.youtube.com/watch?v=7m22NubgqME" target="_blank" rel="noopener nofollow noreferrer"&gt;check my video on the Devtoberfest&lt;/A&gt;], let's try a prompt. We want to apply this prompt to Cline:&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;Extend API_BUSINESS_PARTNER.&lt;/P&gt;&lt;P&gt;Create service.cds and service.js.&lt;/P&gt;&lt;P&gt;Expose only BusinessPartner with READ and CREATE. If the name contains “banana”, throw an error.&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;Result: service.cds and service.js created. MCP caching made later calls cheaper. Nice.&lt;/P&gt;&lt;P&gt;For this blog, I bought 2$ of credit just for testing (I already used all the free ones). Let’s see how much it will be used.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_7-1758470566557.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317446i00551918E0DD1099/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_7-1758470566557.png" alt="smarchesini_7-1758470566557.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_10-1758470706094.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317447i4054FE74939CA97E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_10-1758470706094.png" alt="smarchesini_10-1758470706094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The creation seems to be working fine, and we used 82.6k credits, which is close to $1. Let’s continue the process and create the service.cds by clicking save.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_11-1758470747820.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317448iECA65DC6A46DDEF9/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_11-1758470747820.png" alt="smarchesini_11-1758470747820.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The service.js file was created correctly. We also used fewer tokens because we cached the query before sending it to the MCP server.&lt;/P&gt;&lt;P&gt;The file also seems fine. I would not expect anything else after this, but Cline is asking me that :&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;Now let me check if there's a package.json file to understand the project setup and then test the implementation. and it want to read the package.json file.&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;I want to be more specific in this case. I have a destination defined in my btp with already access to my S4HC and exposed the business partner scenario. I would like to test locally by using this destination and my new project. Let’s then correct and add new information with my prompt.&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;I would like you check the package.json and prepare the project for deploy and test locally. I have a BTP destination ready and connected with name DEVTOBERFEST_DEST&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&lt;!--            notionvc: 257f8e46-37f8-4be9-9869-3ef56c969725            --&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_13-1758470799460.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317449i1916BE772E09803E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_13-1758470799460.png" alt="smarchesini_13-1758470799460.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_14-1758470809477.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317450i53FC37C7C229A9B1/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_14-1758470809477.png" alt="smarchesini_14-1758470809477.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As a money saver, I get a little annoyed paying 3 cents to ask me to run npm install, even though I know I need to do it always.&lt;BR /&gt;It’s fine for testing and learning purposes lol.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_16-1758470928344.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317451i0A629453D9983810/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_16-1758470928344.png" alt="smarchesini_16-1758470928344.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;And another 6 cents to check and suggested me npm start. But let’s imagine we are new in this CAP world and we follow blindly Cline and the MCP.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_17-1758470944331.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317452iF27933E158A017B1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_17-1758470944331.png" alt="smarchesini_17-1758470944331.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-514412064"&gt;Step 5 — Prep for local testing with a Destination&lt;/H3&gt;&lt;P&gt;Have a BTP Destination named DEVTOBERFEST_DEST that points to the S/4HANA Business Partner API.&lt;/P&gt;&lt;P&gt;After this point, I decided to add my MTA file and the destination configuration (to connect to the system) by myself. Without using any AI tool&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;PRE&gt;cds add mta;&lt;BR /&gt;cds add xsuaa,destination,connectivity;&lt;/PRE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_18-1758471011289.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317453i2AF3B57634F0AB09/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_18-1758471011289.png" alt="smarchesini_18-1758471011289.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-317898559"&gt;Step 6 — Build, deploy, and test&lt;/H3&gt;&lt;P&gt;&lt;BR /&gt;Install all the package dependencies with&lt;/P&gt;&lt;PRE&gt;npm i&lt;/PRE&gt;&lt;P&gt;I decided to build and deploy by using Cline.&lt;BR /&gt;Something I notice differently in my usual process is the new terminal type Cline on the right.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_19-1758471059158.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317454i919195B196F92B68/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_19-1758471059158.png" alt="smarchesini_19-1758471059158.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Everything went fine, and from my postman, I can see the call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_21-1758471103480.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317455iAA360E10F188205F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_21-1758471103480.png" alt="smarchesini_21-1758471103480.png" /&gt;&lt;/span&gt;&lt;BR /&gt;This one was the first significant milestone. I think the most challenging part was to make VSCode (for me, who I am a Business Application Code user). Let's try something more fun.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-121385054"&gt;Step 7 — Banana mode (purely for fun)&lt;/H3&gt;&lt;P&gt;I asked (Because why not?):&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;When filtering by BusinessPartnerFullName for "Sebastiano Marchesini", make every field say "banana".&amp;nbsp;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_22-1758471312259.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317459i0668E427066942CA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_22-1758471312259.png" alt="smarchesini_22-1758471312259.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This request took the MCP multiple steps and ended with $0.89 in expenses.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_23-1758471366190.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317461i22F8239C314448F0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="smarchesini_23-1758471366190.png" alt="smarchesini_23-1758471366190.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Not bad for banana mode, but it didn’t fully understand my request. The code set everything to ‘banana’ whenever it found one in the result.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="smarchesini_24-1758471404885.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317463i8E4CA6D95AE0F4D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="smarchesini_24-1758471404885.png" alt="smarchesini_24-1758471404885.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This still teaches a big truth about our development: we cannot leave everything to the AI, but we need to take care of our code and pay attention to what we produce.&amp;nbsp;&lt;BR /&gt;Now....&lt;BR /&gt;Send to prod? Absolutely not. Demo at parties? Maybe.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-143043187"&gt;Token Cost Breakdown &lt;span class="lia-unicode-emoji" title=":money_bag:"&gt;💰&lt;/span&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Current Usage:&lt;/STRONG&gt; ?? / 256K tokens I used in 3 sessions to prepare this blog.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Estimated Cost:&lt;/STRONG&gt; $2.45 USD&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Per 1K tokens:&lt;/STRONG&gt; $0.004 - $0.011&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--346873325"&gt;Quick fixes when things go sideways&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Global CLI not found → fix PATH and restart VS Code&lt;/LI&gt;&lt;LI&gt;npm start explodes → run npm i in the project root&lt;/LI&gt;&lt;LI&gt;Destination calls fail → ensure destination + connectivity are added and bound in BTP&lt;/LI&gt;&lt;LI&gt;401/403 after deploy → check xsuaa&amp;nbsp; and use the client id and secret only from Postman&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--543386830"&gt;Copy‑paste corner&lt;/H3&gt;&lt;PRE&gt;# Global tools
npm add -g @sap/cds-dk
npm i -g @cap-js/mcp-server

# Project
cds init
# import EDMX as needed

# BTP integration
cds add mta
cds add xsuaa,destination,connectivity
npm i

# Local run
npm start
# or
cds watch

# Build &amp;amp; deploy
npm run build
npm run deploy&lt;/PRE&gt;&lt;H2 id="toc-hId--446497328"&gt;Final questions and next steps&lt;/H2&gt;&lt;H6 id="toc-hId--1816622861"&gt;Did you try with other tools? How did you feel?&amp;nbsp; &lt;span class="lia-unicode-emoji" title=":eyes:"&gt;👀&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;Next blog, I want to try the integration with SAPui5 MCP and Copilot.&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":sparkler:"&gt;🎇&lt;/span&gt;&amp;nbsp;&lt;/H6&gt;&lt;P&gt;&lt;!--            notionvc: 979ccd25-475f-459c-85a9-c149ec09e7bf            --&gt;&lt;/P&gt;&lt;P&gt;&lt;!--            notionvc: 9641f12f-0fc4-4029-b2e2-6e2a4a53ead0            --&gt;&lt;/P&gt;&lt;P&gt;&lt;!--            notionvc: a39c14df-2664-454e-8914-64da4ae0aa23            --&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/building-a-cap-service-with-cds-mcp-and-cline-hands-on-super-basic-guide/ba-p/14223349"/>
    <published>2025-09-21T22:27:22.791000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/from-rest-to-datasphere-a-cap-based-integration-approach/ba-p/14218922</id>
    <title>From REST to Datasphere: A CAP-based Integration Approach</title>
    <updated>2025-09-30T08:30:00.053000+02:00</updated>
    <author>
      <name>christian_willi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/678327</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1631072292"&gt;From REST to Datasphere: A CAP-based Integration Approach&lt;/H1&gt;&lt;P&gt;We recently wrote a blog about how we integrate data from a REST service into SAP Datasphere. For that we deployed a small service on SAP BTP, which used the OPEN SQL schema and FastAPI to write this data directly into Datasphere. That service could also be triggered via REST endpoint from SAP Datasphere directly (&lt;A href="https://www.zpartner.eu/streamlining-rest-api-integrations-in-sap-datasphere-with-task-chains-and-fastapi-microservices-on-sap-btp/" target="_blank" rel="nofollow noopener noreferrer"&gt;ZPARTNER Link&lt;/A&gt;, &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/streamlining-rest-api-integrations-in-sap-datasphere-with-task-chains-and/ba-p/14169273" target="_blank"&gt;SAP Community Link)&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;In this blog we now choose a different setup to retrieve data and consume it into SAP Dataphere.&lt;/P&gt;&lt;P&gt;We Created a CAP Application on SAP BTP.&lt;/P&gt;&lt;P&gt;This CAP service connects to the SCIM API of SAP Datasphere, extracts users and roles, and makes the data consumable for analytics. It uses the following BTP services:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;HDI Container&lt;/STRONG&gt;&lt;BR /&gt;To persist our data from the REST calls. The HDI container is deployed to the HANA Cloud instance of our Datasphere tenant, so the data can be consumed directly.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BTP Credential Store&lt;/STRONG&gt;&lt;BR /&gt;We store the credentials for the SCIM API in the BTP Credential Store and retrieve them in our CAP application securely.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;XSUAA Authorization and Trust Management&lt;/STRONG&gt;&lt;BR /&gt;To secure our REST endpoints and enforce token-based access control.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Foundry Space&lt;/STRONG&gt;&lt;BR /&gt;Provides the runtime environment for deploying the CAP application.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_0-1758034031474.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315296i7682A0680123DAA5/image-size/large?v=v2&amp;amp;px=999" role="button" title="christian_willi_0-1758034031474.png" alt="christian_willi_0-1758034031474.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1434558787"&gt;Use Case&lt;/H1&gt;&lt;P&gt;In our use case, we extract user information from SAP Datasphere’s own SCIM API.&lt;/P&gt;&lt;P&gt;We retrieve:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;the list of users,&lt;/LI&gt;&lt;LI&gt;all available roles, and&lt;/LI&gt;&lt;LI&gt;the assignments between users and roles.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This can be helpful for reporting on the number of users in a tenant and their corresponding roles. However, the same setup can be reused to extract and process any other REST API data into SAP Datasphere.&lt;/P&gt;&lt;H1 id="toc-hId-1238045282"&gt;Credential Store&lt;/H1&gt;&lt;P&gt;We create a dedicated namespace in the Credential Store and store four secrets for the SCIM API authentication flow:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;dsp-scim-token-url&lt;/LI&gt;&lt;LI&gt;dsp-scim-base-url&lt;/LI&gt;&lt;LI&gt;dsp-scim-client-id&lt;/LI&gt;&lt;LI&gt;dsp-scim-client-secret&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The CAP application retrieves these secrets at runtime, ensuring no credentials are hardcoded.&lt;/P&gt;&lt;H1 id="toc-hId-1041531777"&gt;XSUAA Authorization and Trust Management Service&lt;/H1&gt;&lt;P&gt;We create a dedicated xsuaa service to get a Token URL and credentials. This service is bound to our CAP application so that every incoming request is authorized and protected.&lt;/P&gt;&lt;H1 id="toc-hId-845018272"&gt;HDI Container&lt;/H1&gt;&lt;P&gt;We create an HDI container where the database artifacts (tables and associations) are deployed. This container is provisioned in our SAP Datasphere tenant, making the synchronized data directly available for consumption.&lt;/P&gt;&lt;H1 id="toc-hId-648504767"&gt;CAP Application&lt;/H1&gt;&lt;P&gt;The heart of the solution is the CAP service DSPUsers.&lt;/P&gt;&lt;P&gt;It exposes two kinds of endpoints:&lt;/P&gt;&lt;H2 id="toc-hId-581073981"&gt;Virtual Views (live from SCIM)&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;GET /data/UsersVH → List of users with profile info.&lt;/LI&gt;&lt;LI&gt;GET /data/RolesVH → Roles with aggregated user counts.&lt;/LI&gt;&lt;LI&gt;GET /data/UserRolesVH → Which users have which roles.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These views are always fresh, since they query SCIM directly.&lt;/P&gt;&lt;H2 id="toc-hId-384560476"&gt;Persistent Entities (stored in HDI)&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;GET /data/Users → Users persisted in HANA.&lt;/LI&gt;&lt;LI&gt;GET /data/Roles → Roles persisted in HANA.&lt;/LI&gt;&lt;LI&gt;GET /data/UserRoles → User-to-role assignments persisted in HANA.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-188046971"&gt;Actions (to sync SCIM → HDI)&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;POST /data/SyncUsersVHToUsers → Upserts SCIM users into the Users table.&lt;/LI&gt;&lt;LI&gt;POST /data/SyncRolesFromSCIM → Stores aggregated roles in the Roles table.&lt;/LI&gt;&lt;LI&gt;POST /data/SyncUserRolesFromSCIM → Refreshes both Roles and UserRoles.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This design lets you both query SCIM data live and persist snapshots into HANA for modeling in Datasphere.&lt;/P&gt;&lt;P&gt;The complete CAP service code is available here: &lt;A href="https://github.com/zpartner/cap-scim-handler-dsp" target="_blank" rel="nofollow noopener noreferrer"&gt;Link to GitHub Repository&lt;/A&gt;.&lt;/P&gt;&lt;H1 id="toc-hId--137549253"&gt;SAP Datasphere&lt;/H1&gt;&lt;P&gt;Once deployed, the HDI container is automatically integrated with our SAP Datasphere tenant. This allows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Consuming the Users, Roles, and UserRoles tables directly in Datasphere,&lt;/LI&gt;&lt;LI&gt;Building reporting scenarios on top of user and role data,&lt;/LI&gt;&lt;LI&gt;Joining with other business data to enrich analytics.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;To consume the entities, we need to add the HDI Container to a specific space. Also, we can now create a generic HTTP Connection. This enables to call the Endpoints for sync in a Task Chain.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_1-1758034059841.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315297i9C02A86C7A1B379C/image-size/large?v=v2&amp;amp;px=999" role="button" title="christian_willi_1-1758034059841.png" alt="christian_willi_1-1758034059841.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-435677325"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;The integration of a CAP-based service into SAP Datasphere showcases how SAP BTP services (HDI Container, Credential Store, XSUAA, Cloud Foundry) can be combined to securely retrieve and persist data from external REST APIs. By consuming SAP Datasphere’s own SCIM API, we demonstrated how to expose both live views for real-time insights and persistent tables for analytical modeling, all within a lightweight and extensible architecture.&lt;/P&gt;&lt;P&gt;Looking ahead, this framework can be reused for any REST API integration into SAP Datasphere, opening the door to richer reporting scenarios, advanced data modeling, and seamless orchestration with Task Chains. With this foundation, organizations gain a simple but powerful pattern for bridging external services with Datasphere while maintaining enterprise-grade security and governance.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/from-rest-to-datasphere-a-cap-based-integration-approach/ba-p/14218922"/>
    <published>2025-09-30T08:30:00.053000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/tooling-sap-build-blog-posts/what-s-new-in-sap-build-q3-2025-release-highlights/ba-p/14231783</id>
    <title>What’s New in SAP Build – Q3 2025 Release Highlights</title>
    <updated>2025-09-30T16:14:25.210000+02:00</updated>
    <author>
      <name>EsmeeX</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/8621</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Zoom Webinar Banner (3) (1).png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321661i10CB0B180F5894FB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Zoom Webinar Banner (3) (1).png" alt="Zoom Webinar Banner (3) (1).png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In Q3, we delivered several innovations across AI-powered development, ABAP project creation, modernized SAPUI5&amp;nbsp;and advanced mobile capabilities. SAP Build also reached a significant milestone with the introduction of &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;MCP servers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, allowing developers to boost productivity further with AI agents.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Check these out in our Top 10 Release Highlights from Q3 2025!&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#333399"&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI-powered development&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;1. Empowering developers with MCP Tools for SAP Build&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Model Context Protocol (MCP) servers&amp;nbsp;are now available for the following technologies: SAP Cloud Application Programming Model (CAP), SAPUI5 and SAP Fiori. This is a huge step forward for developers working with popular IDEs and coding assistants like GitHub Copilot, Cursor and more. With these MCP servers,&amp;nbsp;we’re now providing a comprehensive set of tools designed to optimize your development workflow across various SAP technologies.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Learn more in the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602" target="_blank"&gt;&lt;I&gt;&lt;SPAN&gt;blog post.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;2. SAP HANA Cloud SQL Statement Generation in Joule&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Directly in SAP Build Code, the Joule panel now offers the new command &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;/hana-sql-gen,&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;which enables the generation of SQL statements from natural language directly in the panel. The generated statements can be reviewed and refined in the Joule panel. Suitable SQL statements can be either copied to a SQL console or directly executed inside the Joule panel after selecting a database connection on which to run the statement.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="hana cloud.png" style="width: 727px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321675i984EF7EF189C674B/image-dimensions/727x365?v=v2" width="727" height="365" role="button" title="hana cloud.png" alt="hana cloud.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;3. Expanded AI-powered capabilities in SAP Build Work Zone&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Build Work Zone continues to expand its AI capabilities, bringing new built-in features to an intelligent workspace with accelerated decision-making and improved employee experiences:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration of Joule in SAP Build Work Zone, advanced edition: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;By bringing Joule into SAP Build Work Zone, advanced edition, users can now enjoy the power of Joule within their digital workplace. This eliminates the hassle of system-hopping, reduces time wasted on searching for information, and allows employees to focus on what is important. (Note: Available in early October)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI-powered text and comment generation: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;This enables employees to quickly create, summarize, and engage with workplace content. For example, project managers can generate project status updates in minutes, ensuring their team members stay aligned.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Learn more in the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-work-zone-gets-even-more-powerful-with-ai-powered-capabilities/ba-p/14180971" target="_blank"&gt;&lt;I&gt;&lt;SPAN&gt;blog post.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="WZ joule.jpg" style="width: 728px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321676i619CA9786FB4BA73/image-dimensions/728x384?v=v2" width="728" height="384" role="button" title="WZ joule.jpg" alt="WZ joule.jpg" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/I&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#333399"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Enhanced App Development &amp;amp; Automation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;4. Availability of SAPUI5 1.136.x-legacy-free with deprecated code removed&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAPUI5 1.136.x-legacy-free with deprecated code removed is now available via cloud access. This means app developers can test their UI code for compliance to SAPUI5 best practices. This helps to future-proof an SAP Fiori app for future SAPUI5 versions and work on deprecated/outdated code. Developers can also provide feedback to the UI5 team.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Learn more in the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/explore-sapui5-openui5-1-136-x-legacy-free/ba-p/14103271" target="_blank"&gt;&lt;I&gt;&lt;SPAN&gt;blog post.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;5. Create full-stack ABAP projects in SAP Build&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can now create full-stack ABAP projects or open an existing ABAP CSN as a project in SAP Build. You can also model your application using the CDS Graphical Modeler and generate ABAP development objects. By leveraging high productivity tools, this significantly accelerates time-to-market, improves collaboration and provides a standardized, compliant approach to building extensions.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Learn more in the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://help.sap.com/docs/bas/developing-full-stack-abap-application-in-sap-business-application-studio-40adaba361e2469493d47bf9757e87c7/developing-full-stack-abap-application-in-sap-business-application-studio?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;&lt;I&gt;&lt;SPAN&gt;Help Portal.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;I&gt;&lt;SPAN&gt;&amp;nbsp;..And stay tuned! We’ll share more about this topic at &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110615653001ATih" target="_blank" rel="noopener noreferrer"&gt;&lt;I&gt;&lt;SPAN&gt;SAP TechEd 2025.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;6. Maintenance project for released process automation projects&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For process automation, we’ve introduced the ability to create dedicated project versions based on an existing released version. This allows process owners to maintain parallel editable versions while keeping the latest version in place, enabling teams to focus on solving a problem without redoing everything from scratch.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Learn more in the &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://help.sap.com/docs/build-process-automation/sap-build-process-automation/manage-business-process-projects?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;&lt;I&gt;&lt;SPAN&gt;Help Portal.&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;7. Outbox functionality for tasks in SAP Task Center&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Task Center, which provides a seamless user experience for&amp;nbsp;accessing open tasks, now lets you view completed tasks in an outbox. This provides a complete view of historical data while reducing support requests and efforts around process automation instances.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#333399"&gt;&lt;STRONG&gt;&lt;SPAN&gt;New innovations for mobile&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;8. UI enhancements available for mobile development&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The latest release of SAP Mobile Development Kit (MDK) is now available to customers, bringing with it multiple enhancements for UI creation. Developers can add a date range to their calendar controls, enable a read-only state, add required fields to forms, and much more.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Learn more in the latest &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-9/ba-p/14227370" target="_blank"&gt;blog post.&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;9. Support for new site experience in SAP Build Work Zone, advanced edition&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Employees accessing their workspace content via SAP Mobile Start can now enjoy a new view mode with a more flexible structuring of content. They can quickly view workspace updates, company news or project dashboards, making it easier to organize and consume information in a personalized way. (Note: Available in early October)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mobile start document AI.png" style="width: 302px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321677iF375AB4D9A89D5E6/image-dimensions/302x302?v=v2" width="302" height="302" role="button" title="mobile start document AI.png" alt="mobile start document AI.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mobile start 2.png" style="width: 369px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321678iC54A3157B190A318/image-dimensions/369x303?v=v2" width="369" height="303" role="button" title="mobile start 2.png" alt="mobile start 2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;10. Updates to SAP Mobile Start&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As the native mobile entry point to all SAP business apps and content, SAP Mobile Start has released several new innovations that simplify employee tasks and optimize their user experience:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Document AI integration: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Allows users to upload documents and photos for automated processing. This streamlines document handling, cuts down manual work and ensures data accuracy throughout operations.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Enhanced push notifications with more detailed information: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Load and display context-specific details directly in the push notification, providing more meaningful and informative messages.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Simplified onboarding via deep link: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;IT teams can invite users to onboard to SAP Mobile Start via an email or message and provide a deep link that the users can use to initiate a simplified onboarding process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Top news on start screen: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Shows the most important news in a larger format on top of the Start screen.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Learn more in the latest &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-mobile-start-v2-4-sap-document-ai-integration-and-much-more-release/ba-p/14170599" target="_blank"&gt;&lt;I&gt;&lt;SPAN&gt;blog post&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;I&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;/I&gt;&lt;A href="https://help.sap.com/docs/SAP_MOBILE_START/386859cc981742f3b6bb31f7e0d8a168?locale=en-US&amp;amp;state=PRODUCTION&amp;amp;version=2.4" target="_blank" rel="noopener noreferrer"&gt;&lt;I&gt;&lt;SPAN&gt;Help Portal&lt;/SPAN&gt;&lt;/I&gt;&lt;/A&gt;&lt;I&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/I&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#333399"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Ready to see these in action?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Join us for the next &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;What’s New in SAP Build Webinar&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; on October 8&lt;/SPAN&gt;&lt;SPAN&gt;th&lt;/SPAN&gt;&lt;SPAN&gt; as we dive deeper into MCP servers in CAP, SAP Mobile Start innovations, and much more!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="whats new.jpeg" style="width: 569px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321673iBA7A6B90719D2F62/image-dimensions/569x298?v=v2" width="569" height="298" role="button" title="whats new.jpeg" alt="whats new.jpeg" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Sign up today for your preferred option:&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;&lt;STRONG&gt;October 8th, 9:00-10:00am CEST&lt;/STRONG&gt; (EMEA/APJ friendly):&amp;nbsp;&lt;A href="https://sap-se.zoom.us/webinar/register/3517592411496/WN_HjxF9s5sRSevFRe3kFzRDQ" target="_blank" rel="noopener nofollow noreferrer"&gt;Register here&lt;/A&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;&lt;STRONG&gt;October 8th, 5:00-6:00pm CEST&lt;/STRONG&gt; (Americas friendly):&amp;nbsp;&lt;A href="https://sap-se.zoom.us/webinar/register/2017592412254/WN_hj7isBlESOuvEKzNL6AYdg" target="_blank" rel="noopener nofollow noreferrer"&gt;Register here&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/tooling-sap-build-blog-posts/what-s-new-in-sap-build-q3-2025-release-highlights/ba-p/14231783"/>
    <published>2025-09-30T16:14:25.210000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/building-saas-products-on-sap-btp/ba-p/14231929</id>
    <title>Building SaaS Products on SAP BTP</title>
    <updated>2025-09-30T17:53:09.293000+02:00</updated>
    <author>
      <name>michal_majer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/160961</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1632710804"&gt;Building SaaS Products on SAP BTP&lt;/H1&gt;&lt;P&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt; This article was inspired by SAP's work on modern cloud development, particularly the blog "&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/how-sap-s-abap-cloud-partner-reference-app-simplifies-multi-tenant-side-by/ba-p/14223705" target="_blank"&gt;How SAP's ABAP Cloud Partner Reference App simplifies multi-tenant side-by-side extensions&lt;/A&gt;," and is intended to explore these critical architectural topics further.&lt;/P&gt;&lt;P&gt;SAP is undergoing its largest transformation in decades—moving from &lt;STRONG&gt;on-premise monoliths to cloud-native architecture&lt;/STRONG&gt;. Products like Datasphere, Analytics Cloud, and Business Data Cloud exist only in the cloud. Yet despite this fundamental shift, most software vendors still treat SAP like it’s 2010.&lt;/P&gt;&lt;P&gt;Let me explain why this gap is a massive &lt;STRONG&gt;opportunity for disruption&lt;/STRONG&gt;—and why mastering the &lt;STRONG&gt;SAP Business Technology Platform (BTP)&lt;/STRONG&gt; is much harder than the marketing suggests.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1565280018"&gt;The Architectural Divide: From Monolith to Node&lt;/H2&gt;&lt;P&gt;To understand the &lt;STRONG&gt;BTP challenge&lt;/STRONG&gt;, we must first recognize the dramatic shift in enterprise architecture.&lt;/P&gt;&lt;H3 id="toc-hId-1497849232"&gt;The Old World: SAP as the Center of Gravity&lt;/H3&gt;&lt;P&gt;For decades, &lt;STRONG&gt;SAP ECC&lt;/STRONG&gt; was the undisputed heart of enterprise data. Every system pointed inward. CRM, warehouse management, custom applications—everything fed data into one central, tightly coupled system.&lt;/P&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;External&amp;nbsp;Systems&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;⟶&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP&amp;nbsp;ECC&amp;nbsp;Monolith&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;⟶&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Single&amp;nbsp;Source&amp;nbsp;of&amp;nbsp;Truth&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;P&gt;This architecture made building SAP-integrated products deceptively straightforward:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Write &lt;STRONG&gt;ABAP code&lt;/STRONG&gt; directly inside the SAP system.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Deploy via Transport Requests.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Access everything natively (tables, function modules, full transaction control).&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;I've seen incredibly sophisticated, high-performance solutions built entirely in ABAP. But notice this: many of these established ABAP vendors are slow to build cloud-native versions on BTP. This hesitation tells you something profound about the real challenges involved.&lt;/P&gt;&lt;H3 id="toc-hId-1301335727"&gt;The New Reality: S/4HANA as Just Another Node&lt;/H3&gt;&lt;P&gt;In today's distributed architecture, &lt;STRONG&gt;S/4HANA is simply one system among many&lt;/STRONG&gt;. It sits alongside Salesforce, Workday, custom applications, and SAP’s own cloud products—all communicating through &lt;STRONG&gt;SAP BTP as the critical integration, extension, and application layer&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;This fundamental change means you can no longer rely on deep, internal access to the core. It forces a complete overhaul of how you design and build &lt;STRONG&gt;SaaS products&lt;/STRONG&gt; for the SAP ecosystem.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-975739503"&gt;The BTP Reality: Why It's Harder Than It Looks&lt;/H2&gt;&lt;P&gt;The core challenge lies in bridging the gap between the &lt;STRONG&gt;ABAP world's capabilities&lt;/STRONG&gt; and the &lt;STRONG&gt;modern cloud platform’s constraints&lt;/STRONG&gt;.&lt;/P&gt;&lt;H3 id="toc-hId-908308717"&gt;The ABAP Advantage (What You Lose)&lt;/H3&gt;&lt;P&gt;When you build directly in ABAP (on-premise), you gain:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Direct access&lt;/STRONG&gt; to all SAP objects and processes.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Standardized integration patterns (BAPIs, Function Modules).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Full &lt;STRONG&gt;transactional control&lt;/STRONG&gt; and deep customization hooks.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;30+ years of accumulated frameworks and access methods.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-711795212"&gt;The BTP Reality (What You Are Limited To)&lt;/H3&gt;&lt;P&gt;On BTP, you are limited to officially sanctioned external access methods:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;APIs (REST, OData)&lt;/STRONG&gt; – when they exist and are complete.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;RFC Calls/Web Services&lt;/STRONG&gt; – (The "legacy" or "sidecar" approach).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Custom ABAP Extensions&lt;/STRONG&gt; – (The fallback when APIs fail).&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The Technical Truth: Many older, niche, or newly migrated SAP modules do not have complete &lt;STRONG&gt;API coverage&lt;/STRONG&gt; for every critical workflow step. This is not a criticism of SAP; it's the reality of a massive platform in transition. Building true SaaS products on BTP requires mapping your entire solution against the &lt;STRONG&gt;SAP API Business Hub&lt;/STRONG&gt; before writing any code.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-386198988"&gt;The Compelling Reason to Build SaaS on BTP&lt;/H2&gt;&lt;P&gt;Despite the integration complexity, the strategic advantages of BTP are too significant for modern vendors to ignore. &lt;STRONG&gt;BTP is the enforcement mechanism for SAP's Clean Core strategy.&lt;/STRONG&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;Strategic Advantage&lt;/TD&gt;&lt;TD&gt;Why it Matters&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;1. Leverage SAP Objects Without Core Modification&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Use SAP &lt;STRONG&gt;CAP&lt;/STRONG&gt; (Cloud Application Programming Model) or &lt;STRONG&gt;RAP&lt;/STRONG&gt; (ABAP RESTful Application Programming Model) to extend key SAP objects (Business Partners, Sales Orders, Materials) with custom fields and logic. This ensures your solution aligns with the &lt;STRONG&gt;Clean Core&lt;/STRONG&gt; approach.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;2. Instant User Management and Security&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Integrate with BTP's &lt;STRONG&gt;XSUAA service&lt;/STRONG&gt;. You instantly inherit customer's users, &lt;STRONG&gt;SSO integration&lt;/STRONG&gt;, saving months of development and operational overhead on identity management.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;3. Customer-Specific Extensions via Multitenancy&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Ship one product while allowing customer-specific configurations and extensions. BTP's native &lt;STRONG&gt;multitenancy&lt;/STRONG&gt; handles the data and configuration isolation, dramatically lowering codebase maintenance costs compared to the old world of branched ABAP code.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;4. Modern Deployment and Operations&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Deploy globally without hardware investment. Scale automatically based on demand. Use modern &lt;STRONG&gt;DevOps&lt;/STRONG&gt; practices and CI/CD pipelines to update all customers simultaneously—a logistical nightmare with on-premise solutions.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-189685483"&gt;Two Strategic Approaches to BTP SaaS&lt;/H2&gt;&lt;P&gt;Your product's architecture should align with its core purpose:&lt;/P&gt;&lt;H3 id="toc-hId-122254697"&gt;Approach 1: Extend SAP Objects&lt;/H3&gt;&lt;P&gt;Your product becomes a natural, value-add extension of core SAP functionality, leveraging the data models customers already use and understand.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Best for:&lt;/STRONG&gt; Solutions that enhance existing SAP processes (advanced analytics, specialized compliance requirements, industry-specific workflows).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Technical Focus:&lt;/STRONG&gt; Heavy reliance on &lt;STRONG&gt;CAP/RAP&lt;/STRONG&gt; to extend standard entities and leverage the existing SAP transactional context.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--149490177"&gt;Approach 2: Build Independent with SAP Integration (Loosely Coupled)&lt;/H3&gt;&lt;P&gt;Create your own data model using modern frameworks (CAP/Node.js, Java) and integrate with SAP only as needed for master data and transactional exchange.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Best for:&lt;/STRONG&gt; Products that could exist standalone but gain significant value from SAP integration (planning tools, specialized industry solutions, asset management).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Technical Focus:&lt;/STRONG&gt; Strong emphasis on the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; and &lt;STRONG&gt;Event Mesh&lt;/STRONG&gt; for asynchronous, reliable communication.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--52600675"&gt;The Common Pitfalls I've Observed&lt;/H2&gt;&lt;P&gt;Architectural success on BTP is often defined by avoiding these common traps:&lt;/P&gt;&lt;H3 id="toc-hId--542517187"&gt;1. The API Gap Surprise&lt;/H3&gt;&lt;P&gt;Teams design beautiful cloud-native architecture assuming APIs exist for everything. When they discover a critical workflow is missing an API, they are forced to write custom ABAP in the S/4HANA core to create a needed OData service.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;The Lesson:&lt;/STRONG&gt; This creates a &lt;STRONG&gt;Custom ABAP Sidecar&lt;/STRONG&gt;—it defeats the purpose of the BTP-native, Clean Core approach for that use case, complicating deployment and creating system-specific dependencies. &lt;STRONG&gt;Map your integration requirements against actual API availability before committing to architecture.&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--739030692"&gt;2. The Custom Integration Trap&lt;/H3&gt;&lt;P&gt;A company builds its first SAP integration for Customer A, which takes six months. Customer B has different middleware, a different S/4HANA version, and unique customizations. Three years later, the company has five customers but five completely different integrations with no reusable product.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;The Lesson:&lt;/STRONG&gt; Design for product &lt;STRONG&gt;reusability&lt;/STRONG&gt; from day one. Use &lt;STRONG&gt;BTP as the standard integration hub&lt;/STRONG&gt; for all customers. Your product should treat the S/4HANA backend as an interchangeable service, not a monolithic dependency.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--935544197"&gt;3. The Deployment Complexity&lt;/H3&gt;&lt;P&gt;The product itself might be excellent, but if every customer implementation requires weeks of external SAP consulting to set up roles, connect services, and configure the integration, the deployment model doesn't scale economically.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;The Lesson:&lt;/STRONG&gt; Design your solution to be simple. Aim for a solution that can be deployed and configured by the customer’s existing SAP team in days, not months, using automated scripts and minimal manual steps.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--838654695"&gt;My Strategic Focus&lt;/H2&gt;&lt;P&gt;My focus is clear: to master the architecture required to build and commercialize a &lt;STRONG&gt;CAP template SaaS solution&lt;/STRONG&gt;. By leveraging the best practices of the &lt;STRONG&gt;Cloud Application Programming Model (CAP)&lt;/STRONG&gt; and designing for &lt;STRONG&gt;native multitenancy&lt;/STRONG&gt;, I aim to provide a production-ready, clean-core blueprint that accelerates the time-to-market for modern SAP solutions. This is the strategic direction for dominating the next era of the SAP ecosystem.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/building-saas-products-on-sap-btp/ba-p/14231929"/>
    <published>2025-09-30T17:53:09.293000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-cap-blog-posts/building-custom-authentication-in-sap-cap/ba-p/14232992</id>
    <title>Building Custom Authentication in SAP CAP</title>
    <updated>2025-10-01T21:25:29.143000+02:00</updated>
    <author>
      <name>michal_majer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/160961</uri>
    </author>
    <content>&lt;P&gt;This guide presenets practical example to implement custom authentication in SAP CAP (Node.js). I hav&lt;/P&gt;&lt;H2 id="toc-hId-1761823524"&gt;Project Setup&lt;/H2&gt;&lt;H3 id="toc-hId-1694392738"&gt;Configuration Entry Point&lt;/H3&gt;&lt;P&gt;The key to enabling custom authentication in CAP is the &lt;STRONG&gt;&lt;CODE&gt;auth&lt;/CODE&gt; configuration in &lt;CODE&gt;package.json&lt;/CODE&gt;&lt;/STRONG&gt;. This tells the CAP runtime to use your custom middleware handler for all incoming requests, allowing you to control the identity verification process.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "cds": {
    "requires": {
      "auth": {
        "impl": "auth/basic-auth.ts"
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1368796514"&gt;Implementation: Core Components&lt;/H2&gt;&lt;H3 id="toc-hId-1301365728"&gt;1. Security Best Practices&lt;/H3&gt;&lt;P&gt;When handling passwords, &lt;STRONG&gt;security must be the top priority&lt;/STRONG&gt;. The following code demonstrates secure handling, specifically addressing the &lt;STRONG&gt;timing attack&lt;/STRONG&gt; vector, which is often overlooked.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// auth/basic-auth.ts
import crypto from 'crypto';

const PASSWORD_PEPPER = process.env.PASSWORD_PEPPER || ""; 

// Timing-safe comparison prevents timing attacks
function secureCompare(a: string, b: string): boolean {
  // Ensure we compare strings of the same length
  if (a.length !== b.length) return false; 
  // crypto.timingSafeEqual is CRITICAL for password security
  return crypto.timingSafeEqual(Buffer.from(a, 'utf8'), Buffer.from(b, 'utf8'));
}

function hashPassword(password: string): string {
  if (!password) {
    throw new Error("Password cannot be empty");
  }
  // NOTE: SHA-256 is used here ONLY for simplicity in a Basic Auth example.
  // DO NOT use SHA-256 in production. Use bcrypt or argon2.
  return crypto
    .createHash('sha256')
    .update(password + PASSWORD_PEPPER)
    .digest('hex');
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-1233934942"&gt;Key Security Features:&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;CODE&gt;&lt;SPAN class=""&gt;crypto.timingSafeEqual()&lt;/SPAN&gt;&lt;/CODE&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;: Guarantees constant-time comparison, preventing attackers from using timing measurements to guess password characters.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Password Pepper&lt;/STRONG&gt;: An extra layer of security beyond salting.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Production Note&lt;/STRONG&gt;: In a production system, &lt;STRONG&gt;always use &lt;CODE&gt;bcrypt&lt;/CODE&gt; or &lt;CODE&gt;argon2&lt;/CODE&gt;&lt;/STRONG&gt; instead of simple hash functions.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-908338718"&gt;2. Database Schema&lt;/H3&gt;&lt;P&gt;The user schema must be designed to support both local password-based authentication (for Basic Auth) and future external OAuth integrations.&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;// db/schema.cds
entity Users {
  key ID          : UUID;
      email       : String(255) @assert.unique;
      username    : String(100) @assert.unique;
      passwordHash: String(255);
      firstName   : String(100);
      lastName    : String(100);
      provider    : String(50);   // 'local', 'google', 'oidc'
      providerId  : String(255);  // ID from external provider (for OAuth)
      isActive    : Boolean default true;
}&lt;/code&gt;&lt;/pre&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-711825213"&gt;3. Authentication Logic&lt;/H3&gt;&lt;P&gt;This core function handles credential verification against the database.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const credentialsAuthentication = async ({ 
  email, 
  password 
}: { 
  email: string, 
  password: string 
}) =&amp;gt; {
  const { Users } = cds.entities;
  try {
    // 1. Validate Input
    if (!email || !password) {
      return { success: false, message: "Email and password are required", user: null };
    }
    
    // Normalize email for consistent lookups
    const normalizedEmail = email.trim().toLowerCase();
    
    // 2. Query User
    const user = await SELECT.one
      .from(Users)
      .where({ 
         email: normalizedEmail, 
         isActive: true 
       });
       
    // 3. Security Check: Prevent User Enumeration Attack
    // Use the same error message whether the user is missing or the password is wrong.
    if (!user) {
      return { success: false, message: "Invalid credentials", user: null };
    }
    
    // 4. Secure Password Verification
    const passwordHash = hashPassword(password);
    const isPasswordValid = secureCompare(user.passwordHash, passwordHash); 
    
    if (!isPasswordValid) {
      return { success: false, message: "Invalid credentials", user: null };
    }
          
    return {
      success: true,
      message: 'Login successful',
      user: {
        id: user.ID,
        email: user.email,
        username: user.username,
        firstName: user.firstName,
        lastName: user.lastName,
      }
    };
  } catch (err) {
    cds.log('auth').error('Authentication error:', err);
    return { success: false, message: "Authentication failed", user: null };
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-644394427"&gt;Key Technical Points:&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Preventing User Enumeration&lt;/STRONG&gt;: Using the generic &lt;I&gt;"Invalid credentials"&lt;/I&gt; message.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Email Normalization&lt;/STRONG&gt;: Ensures query consistency.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-318798203"&gt;4. Express Middleware Integration&lt;/H3&gt;&lt;P&gt;The authentication handler is implemented as &lt;STRONG&gt;Express Middleware&lt;/STRONG&gt;. It parses the &lt;CODE&gt;Basic Auth&lt;/CODE&gt; header and creates the essential &lt;STRONG&gt;CAP-compatible user object&lt;/STRONG&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import { Request, Response, NextFunction } from 'express';
import cds from '@sap/cds';
// ... import credentialsAuthentication ... (from section 3)

export default async function custom_auth(
  req: Request, 
  res: Response, 
  next: NextFunction
) {
  try {
    const authHeader = req.headers.authorization;
    
    // Allow requests without Basic Auth header to proceed. 
    if (!authHeader || !authHeader.startsWith('Basic ')) {
      return next();
    }
    
    // Parse Basic Auth header
    const base64Credentials = authHeader.split(' ')[1];
    const credentials = Buffer
      .from(base64Credentials, 'base64')
      .toString('utf-8');
      
    const [email, password] = credentials.split(':', 2);
    
    if (!email?.trim() || !password) {
      res.status(401).json({ error: 'Invalid credentials format' });
      return;
    }
    
    const auth = await credentialsAuthentication({ email, password });
    const { success, user } = auth;
    
    if (success &amp;amp;&amp;amp; user) {
      // CRITICAL: Create the CAP-compatible user object
      const roles = user.roles.length &amp;gt; 0 ? user.roles : ['authenticated'];
      
      const capUser = new cds.User({
        id: user.id,
        attr: {
          email: user.email,
          username: user.username,
          firstName: user.firstName,
          lastName: user.lastName
        }
      });
      
      // Set the user context in both CAP and Express
      cds.context.user = capUser;
      req.user = capUser;
      next();
    } else {
      res.status(401).json({ error: auth.message });
    }
  } catch (error) {
    cds.log('auth').error('Unexpected authentication error:', error);
    res.status(401).json({ error: 'Unauthorized' });
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-251367417"&gt;Critical Implementation Details:&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The user context must be set in both &lt;STRONG&gt;&lt;CODE&gt;cds.context.user&lt;/CODE&gt;&lt;/STRONG&gt; (for CAP Services) and &lt;STRONG&gt;&lt;CODE&gt;req.user&lt;/CODE&gt;&lt;/STRONG&gt; (for Express-based middleware).&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--149460176"&gt;5. Service-Level Authorization&lt;/H3&gt;&lt;P&gt;With the custom handler successfully establishing the user context, you can immediately leverage CAP's built-in authorization features:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// srv/test-service.cds
service TestService @(requires: 'authenticated-user') { 
   entity Products as projection on template.Products;
}&lt;/code&gt;&lt;/pre&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--52570674"&gt;Testing Your Implementation&lt;/H2&gt;&lt;H3 id="toc-hId--542487186"&gt;Basic Authentication Test&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;Bash&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;CODE&gt;&lt;SPAN class=""&gt;# 1. Base64 encode your credentials (email:password)&lt;/SPAN&gt;
&lt;SPAN class=""&gt;echo&lt;/SPAN&gt; -n &lt;SPAN class=""&gt;'john.doe@example.com:password'&lt;/SPAN&gt; | base64

&lt;SPAN class=""&gt;# 2. Test the endpoint using the encoded value in the Authorization header&lt;/SPAN&gt;
curl -X GET http://localhost:4004/odata/v4/&lt;SPAN class=""&gt;test&lt;/SPAN&gt;/Products \
  -H &lt;SPAN class=""&gt;"Authorization: Basic am9obi5kb2VAZXhhbXBsZS5jb206cGFzc3dvcmQ="&lt;/SPAN&gt;
&lt;/CODE&gt;&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;Expected:&lt;/STRONG&gt; &lt;CODE&gt;200 OK&lt;/CODE&gt; with product data.&lt;/P&gt;&lt;H3 id="toc-hId--739000691"&gt;Unauthorized Access Test&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;Bash&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;CODE&gt;&lt;SPAN class=""&gt;# Test without the Authorization header&lt;/SPAN&gt;
curl -X GET http://localhost:4004/odata/v4/&lt;SPAN class=""&gt;test&lt;/SPAN&gt;/Products&lt;/CODE&gt;&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;Expected:&lt;/STRONG&gt; &lt;CODE&gt;401 Unauthorized&lt;/CODE&gt;.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--642111189"&gt;When to Use Custom Authentication vs. Standard SAP Solutions&lt;/H2&gt;&lt;P&gt;It's crucial to acknowledge that using &lt;STRONG&gt;XSUAA&lt;/STRONG&gt;, &lt;STRONG&gt;IAS (Identity Authentication Service)&lt;/STRONG&gt;, or standard JWT-based authentication is the &lt;STRONG&gt;recommended and preferred approach&lt;/STRONG&gt; for the vast majority of SAP CAP applications. These services offer enterprise-grade security, compliance, and integration with the SAP ecosystem.&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;However, the SAP CAP intentionally provides mechanisms for custom authentication.&lt;/SPAN&gt; This approach is necessary when:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;B2C Applications:&lt;/STRONG&gt; Requiring fully custom registration and login user experiences.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Legacy System Migration:&lt;/STRONG&gt; Integrating existing applications with established user databases and authentication logic.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If your use case aligns with standard enterprise authentication, &lt;STRONG&gt;you should prioritize XSUAA or IAS.&lt;/STRONG&gt; Custom authentication should be a deliberate, technically driven choice.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--838624694"&gt;What's Next?&lt;/H2&gt;&lt;P&gt;This guide provides the robust foundation for custom Basic Authentication in SAP CAP. Stay tuned for the next parts of this series, where we will extend this implementation.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The journey continues!&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/sap-cap-blog-posts/building-custom-authentication-in-sap-cap/ba-p/14232992"/>
    <published>2025-10-01T21:25:29.143000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631</id>
    <title>Creating a Hybrid CAP (Node.js) Profile with PostgreSQL on BTP from Business Application Studio</title>
    <updated>2025-10-02T17:44:09.830000+02:00</updated>
    <author>
      <name>valentincadart</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/786198</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this blog post, I’ll walk you through how to configure a hybrid testing profile in a Node.js-based CAP project, using a PostgreSQL database hosted on BTP, and running it locally from Business Application Studio.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;While setting up hybrid profiles in CAP is a common task, using them with PostgreSQL on BTP introduces a few challenges, mainly the need to connect via SSH tunneling to access the remote database from your local BAS workspace.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For more information on hybrid testing in CAP: &lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/advanced/hybrid-testing" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://cap.cloud.sap/docs/advanced/hybrid-testing&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This blog summarizes the approach I followed to solve a real-world issue raised in the SAP Community (&lt;A href="https://community.sap.com/t5/technology-q-a/cap-hybrid-testing-using-postgresql-on-sap-btp-hyperscaler-option-cloud/qaq-p/14037087" target="_self"&gt;original Q&amp;amp;A here&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;). Thanks to &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/789" target="_blank"&gt;&lt;SPAN&gt;@MioYasutake&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/139578" target="_blank"&gt;&lt;SPAN&gt;@Willem_Pardaens&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; for their help. Worth noting, &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/789" target="_blank"&gt;&lt;SPAN&gt;@MioYasutake&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; has published a great blog covering a complete Java-based CAP example, which you’ll find linked in the &lt;A href="https://community.sap.com/t5/technology-q-a/cap-java-how-to-connect-to-postgresql-on-btp-from-bas/qaq-p/14003400" target="_self"&gt;answer of this thread&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Table of contents:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;ul =""&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1890932964"&gt;Prerequisites and Sample Project&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1694419459"&gt;PostgreSQL specificity on BTP&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1497905954"&gt;Creating the Hybrid Profile&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1301392449"&gt;Enable SSH&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1104878944"&gt;Secure Connection via SSH Tunnel&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-908365439"&gt;Launch the Application&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-711851934"&gt;In case of "ResourceRequest timed out" error&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-515338429"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1890932964"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Prerequisites and Sample Project&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;In this tutorial, I’ll be using a sample CAP project that was previously created and publicly available on &lt;A href="https://github.com/ValentinCadart/CAPHybridTestingWithPostgres" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;If you prefer to start from scratch, you can follow the official setup guide here:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/guides/deployment/to-cf" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://cap.cloud.sap/docs/guides/deployment/to-cf&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Just make sure to replace HANA Cloud with PostgreSQL by running the following command:&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add postgres --for production&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Note: The cds add postgres command automatically adds a PostgreSQL resource to your mta.yaml file, using the development service plan by default. However, this plan is not available on BTP trial accounts. If you're using a trial account, simply replace development with trial in the mta.yaml as shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;- name: bookshop-postgres
  type: org.cloudfoundry.managed-service
  parameters:
    service: postgresql-db
    service-plan: trial&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Once the project is deployed to BTP, you’ll see five service instances created:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;One instance for authorization (XSUAA)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;One for the destination service&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Two related to the HTML5 application repository (host and runtime)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;And one for the PostgreSQL database&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;This setup represents a standard CAP deployment on Cloud Foundry with an HTML5 UI module.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="valentincadart_0-1759418082183.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322347i21B48A475FBCECBB/image-size/large?v=v2&amp;amp;px=999" role="button" title="valentincadart_0-1759418082183.png" alt="valentincadart_0-1759418082183.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Additionally, in your Cloud Foundry space, you will find two deployed applications:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;One for the PostgreSQL database&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;And another for the backend service of your application (the -srv module)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="valentincadart_1-1759418100619.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322348i2A9FFF905F5C4C73/image-size/large?v=v2&amp;amp;px=999" role="button" title="valentincadart_1-1759418100619.png" alt="valentincadart_1-1759418100619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With the basic configuration set up on BTP, we can now move on to implementing hybrid testing from Business Application Studio.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1694419459"&gt;&lt;STRONG&gt;PostgreSQL specificity on BTP&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;EM&gt;- Correction added on 03/10/2025 following feedback from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/52838"&gt;@antoniojmnunes&lt;/a&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The PostgreSQL service on SAP BTP now includes features that allow access from outside the BTP environment. This includes support for &lt;A href="https://help.sap.com/docs/postgresql-on-sap-btp/postgresql-on-sap-btp-hyperscaler-option/public-ip-access-in-postgresql-instances?locale=en-US" target="_self" rel="noopener noreferrer"&gt;public IPs&lt;/A&gt;, which enable connections from external systems, as well as the &lt;A href="https://help.sap.com/docs/postgresql-on-sap-btp/postgresql-on-sap-btp-hyperscaler-option/instance-sharing?locale=en-US" target="_self" rel="noopener noreferrer"&gt;instance sharing&lt;/A&gt; feature, which allows you to share a PostgreSQL instance across different subaccounts.&lt;/P&gt;&lt;P&gt;For more details, you can refer to the following blog posts:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/postgresql-on-sap-btp-how-to-access-instances-via-public-ips/ba-p/13868169" target="_self"&gt;PostgreSQL on SAP BTP - How-to access instances via public IPs&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/postgresql-on-sap-btp-instance-sharing-reference-service-plan/ba-p/13794791" target="_self"&gt;PostgreSQL on SAP BTP - Instance sharing | 'reference' service plan&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you’re interested in more official blog posts about PostgreSQL on BTP, check out this index:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/postgresql-on-sap-btp-are-you-looking-for-official-blog-posts-blog-index/ba-p/13788533" target="_self"&gt;PostgreSQL on SAP BTP - Are you looking for official blog posts? Blog INDEX&lt;/A&gt;&lt;/P&gt;&lt;P&gt;However, in our specific use case, we are unable to make use of these features. This limitation is due to the nature of our current setup, where these options do not allow us to achieve this in practice. As a workaround, we will create an SSH tunnel between Business Application Studio and our Cloud Foundry application.&lt;/P&gt;&lt;H3 id="toc-hId-1497905954"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Creating the Hybrid Profile&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;To set up the hybrid profile, you need to modify or create the .cdsrc.json (or .cdsrv-private.json) file at the root of your CAP project. This file defines launch profiles and specific options for the cds command.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "cds": {
    "requires": {
      "[hybrid]": {
        "db": {
          "kind": "postgres",
          "credentials": {
            "host": "127.0.0.1",
            "port": 63306,
            "user": "&amp;lt;user&amp;gt;",
            "password": "&amp;lt;password&amp;gt;",
            "database": "&amp;lt;dbname&amp;gt;",
            "sslcert": "-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----",
            "sslrootcert": "-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----"
          },
          "pool": {
            "acquireTimeoutMillis": 2000
          }
        }
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Replace the placeholders &lt;CODE&gt;&amp;lt;user&amp;gt;&lt;/CODE&gt;, &lt;CODE&gt;&amp;lt;password&amp;gt;&lt;/CODE&gt;, &lt;CODE&gt;&amp;lt;database&amp;gt;&lt;/CODE&gt;, as well as the &lt;CODE&gt;&amp;lt;sslcert&amp;gt;&lt;/CODE&gt; and &lt;CODE&gt;&amp;lt;sslrootcert&amp;gt;&lt;/CODE&gt; fields with the credentials provided by your PostgreSQL instance hosted on BTP. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="valentincadart_2-1759418191865.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322349iD823E1883D84B021/image-size/large?v=v2&amp;amp;px=999" role="button" title="valentincadart_2-1759418191865.png" alt="valentincadart_2-1759418191865.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Direct access to the remote PostgreSQL database is restricted for security reasons. By creating an SSH tunnel, a local port (e.g., 63306) on your BAS environment is securely forwarded to the remote database, so connecting to 127.0.0.1:63306 effectively accesses the remote PostgreSQL instance through this tunnel.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1301392449"&gt;&lt;SPAN&gt;Enable SSH&lt;BR /&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Before you can connect via SSH to your Cloud Foundry app, you need to enable this feature first by running:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf enable-ssh bookshop-srv
cf restart bookshop-srv&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;If you encounter any issues, refer to the official Cloud Foundry SSH documentation:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://docs.cloudfoundry.org/devguide/deploy-apps/ssh-apps.html" target="_blank" rel="noopener nofollow noreferrer"&gt;https://docs.cloudfoundry.org/devguide/deploy-apps/ssh-apps.html&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1104878944"&gt;&lt;STRONG&gt;Secure Connection via SSH Tunnel&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Open a terminal in Business Application Studio and run the following command:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf ssh -L 63306:&amp;lt;host_from_service_key&amp;gt;:&amp;lt;port_from_service_key&amp;gt; &amp;lt;application_name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Replace &lt;CODE&gt;&amp;lt;host_from_service_key&amp;gt;&lt;/CODE&gt; and &lt;CODE&gt;&amp;lt;port_from_service_key&amp;gt;&lt;/CODE&gt; with the values from your PostgreSQL service key on BTP (create one if it doesn’t exist). Also replace &lt;CODE&gt;&amp;lt;application_name&amp;gt;&lt;/CODE&gt; with the name of your Cloud Foundry application (e.g., bookshop-srv).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="valentincadart_3-1759418309506.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322350i6083D44CC7B8CA8B/image-size/large?v=v2&amp;amp;px=999" role="button" title="valentincadart_3-1759418309506.png" alt="valentincadart_3-1759418309506.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This command creates an SSH tunnel that forwards local port 63306 to the remote PostgreSQL database through the Cloud Foundry app.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-908365439"&gt;&lt;STRONG&gt;Launch the Application&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;In a second terminal, run the following command to start your application using the hybrid profile:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds watch --profile hybrid&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;You should see a message in the console confirming the connection to PostgreSQL on localhost, for example:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;[cds] - connect to db &amp;gt; postgres {
  host: '127.0.0.1',
  port: 63306,
  ...
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Your application now runs locally in Business Application Studio but using the real data from the PostgreSQL database hosted on your BTP account.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-711851934"&gt;&lt;STRONG&gt;In case of "ResourceRequest timed out" error&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;If you see the following error:&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;&amp;lt;message&amp;gt;ResourceRequest timed out&amp;lt;/message&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;It likely means that:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The SSH tunnel is not active&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The SSL certificate is not loaded properly&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The timeout is too short (hence the importance of the acquireTimeoutMillis setting)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-515338429"&gt;Conclusion&lt;/H3&gt;&lt;P&gt;Once set up, this configuration lets you develop locally from Business Application Studio while testing your application with real data from PostgreSQL. This way, you avoid redeploying the app after every change and fully leverage CAP’s hybrid testing capabilities.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631"/>
    <published>2025-10-02T17:44:09.830000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/why-clients-say-no-to-btp-and-how-to-change-their-mind/ba-p/14237359</id>
    <title>Why Clients Say No to BTP – and How to Change Their Mind</title>
    <updated>2025-10-07T18:10:07.654000+02:00</updated>
    <author>
      <name>michal_majer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/160961</uri>
    </author>
    <content>&lt;P&gt;Hey BTP Community! Do you know that feeling? You walk into a meeting with an innovative idea, and the client—just hearing "&lt;STRONG&gt;SAP BTP&lt;/STRONG&gt;"—immediately rejects it. &lt;I&gt;"I don't want BTP implementation!"&lt;/I&gt; – they exclaim, with a look of weariness in their eyes.&lt;/P&gt;&lt;P&gt;Too many times, innovation, instead of solving problems, becomes... a hot potato.&lt;/P&gt;&lt;P&gt;Sure, there are companies boasting a full migration to BTP, but the truth is, most organizations have concerns. Concerns about the new, about the cost, about too much detachment from the stable, &lt;STRONG&gt;"on-premise"&lt;/STRONG&gt; world.&lt;/P&gt;&lt;P&gt;But today, I'll show you how to turn that "No" into &lt;STRONG&gt;"Why didn't we do this sooner?"&lt;/STRONG&gt; I'm presenting a true case that proves, in certain scenarios, BTP is not just better; it's the only sensible and secure solution.&lt;/P&gt;&lt;H3 id="toc-hId-1891049315"&gt;End Customers Straight into S/4HANA&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Problem Analysis: When On-Premise "Knowledge and Familiarity" Becomes the Biggest Risk.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Imagine a typical scenario: A client needs a portal where their end customers (&lt;STRONG&gt;B2C/B2B&lt;/STRONG&gt;) can verify the status of their service requests (or other object/s existing in the S/4HANA).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;On-premise decision:&lt;/STRONG&gt; We create external user accounts directly in the &lt;STRONG&gt;S/4HANA&lt;/STRONG&gt; system. We define roles just like for internal users. We have advanced control and know the system inside out. Sounds good, right?&lt;/P&gt;&lt;P&gt;This approach, while familiar, introduces critical risks and burdens:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Security Risk:&lt;/STRONG&gt; This is my biggest headache. An external user, even with the most restrictive role, works on the same system as critical business processes and your internal employees. There is a risk (or its perception) that the user will gain access to data they shouldn't. This discomfort is a real threat to your company.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Performance Issues:&lt;/STRONG&gt; Suddenly, your customers start working on the same system as your business processes! Increased traffic, planned jobs, mass status verifications... all of this burdens &lt;STRONG&gt;S/4HANA&lt;/STRONG&gt;. Planning for increased resource consumption is required.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Additional Team Workload:&lt;/STRONG&gt; Every request regarding access problems, passwords, or end-customer permissions lands on your Security/Basis team's desk. This burdens them, diverting them from key maintenance and development tasks.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1694535810"&gt;The "SAP Plumber" Architecture: Why Are Customers Waiting in the Dark?&lt;/H3&gt;&lt;P&gt;This scenario was further complicated by inefficient integration processes:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;The Customer creates a request in an old, external &lt;STRONG&gt;Legacy System&lt;/STRONG&gt; (Success - 200 - Request Created in the Lagacy System).&lt;/LI&gt;&lt;LI&gt;The request is saved in the Legacy Database (Status: "Staging").&lt;/LI&gt;&lt;LI&gt;The Legacy System processes requests and transfers them (via API) to &lt;STRONG&gt;S/4HANA&lt;/STRONG&gt; at intervals.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;And here the drama begins:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;S/4HANA REJECTS&lt;/STRONG&gt; some requests for various reasons (business rules, technical errors, missing data).&lt;/LI&gt;&lt;LI&gt;The client receives &lt;STRONG&gt;no feedback&lt;/STRONG&gt;. They just wait. And then they wait some more.&lt;/LI&gt;&lt;LI&gt;Finally, the request lands on the servisk desk of... System Maintenance Experts! (Our &lt;STRONG&gt;"SAP Plumber"&lt;/STRONG&gt; &lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;). They painstakingly verify errors, push through messages, and waste valuable time on tasks that should be automated.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The result? Low customer satisfaction, increased pressure, and prioritization of requests that were never even processed in the first place!&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1498022305"&gt;&amp;nbsp;The Solution You Need: Client Portal on SAP BTP&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Isolation, Visibility, Scalability – The Three True Benefits of BTP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Client portals are an ideal, canonical use case for &lt;STRONG&gt;SAP BTP&lt;/STRONG&gt;!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;How does it work, technically and business-wise?&lt;/STRONG&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1430591519"&gt;1. Isolation and Security&amp;nbsp;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;We deploy a new &lt;STRONG&gt;Portal Application&lt;/STRONG&gt; (e.g., based on &lt;STRONG&gt;SAP CAP&lt;/STRONG&gt; in Node.js or Fiori/UI5) on &lt;STRONG&gt;SAP BTP&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;End customers log in &lt;STRONG&gt;ONLY to BTP&lt;/STRONG&gt;. Their accounts, users, and traffic are completely isolated from the critical S/4HANA system&lt;/LI&gt;&lt;LI&gt;Key logic and statuses are handled outside the ERP, in a &lt;STRONG&gt;secure BTP environment&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="unnamed (1).jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324121iB199A3665184F954/image-size/medium?v=v2&amp;amp;px=400" role="button" title="unnamed (1).jpg" alt="unnamed (1).jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1234078014"&gt;2. Full Request Status Visibility&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The BTP application integrates with the Legacy system. Since SAP CAP is Node.js, we can:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;Consume existing Legacy APIs.&lt;/LI&gt;&lt;LI&gt;Or, if no API exists, connect directly to the Legacy Database (using the appropriate driver).&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;From the moment a request is created, the client sees its &lt;STRONG&gt;FULL and CURRENT status&lt;/STRONG&gt;, directly in the BTP application.&lt;/LI&gt;&lt;LI&gt;(Such app is also helpfull for technical persons)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;S/4HANA Integration:&lt;/STRONG&gt; If necessary, we use secure &lt;STRONG&gt;OData APIs&lt;/STRONG&gt; from S/4HANA (read-only or controlled write access) to fetch additional, approved information (e.g., invoice number, agent name). Controlled APIs are your gateway, not an open door!&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1037564509"&gt;3. Unleashing Data Potential&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;A bonus that is often overlooked: If we decide to use &lt;STRONG&gt;HANA DB on BTP&lt;/STRONG&gt;, we automatically gain the ability to easily consume and analyze data from the Client Portal in analytical tools such as &lt;STRONG&gt;SAP DataSphere&lt;/STRONG&gt;, &lt;STRONG&gt;SAP Analytics Cloud (SAC)&lt;/STRONG&gt;, or &lt;STRONG&gt;Business Data Cloud (BDC)&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Creating reports, tracking progress, measuring satisfaction, and identifying bottlenecks becomes trivially simple.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-711968285"&gt;Break Client Resistance. Turn "No" into "I Need This."&lt;/H3&gt;&lt;P&gt;A client who says &lt;STRONG&gt;"No to BTP"&lt;/STRONG&gt; is actually saying:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;"I don't want additional costs."&lt;/LI&gt;&lt;LI&gt;"I don't want complications."&lt;/LI&gt;&lt;LI&gt;"I don't understand how this will help me."&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;My answer:&lt;/STRONG&gt;&lt;BR /&gt;"BTP is not an end goal; BTP is a tool that eliminates critical architectural and business risks."&lt;/P&gt;&lt;P&gt;When integration is so strongly tied to the SAP S/4HANA ecosystem, and the requirements are &lt;STRONG&gt;data isolation&lt;/STRONG&gt; and &lt;STRONG&gt;scalability&lt;/STRONG&gt; —&amp;nbsp;&amp;nbsp;SAP BTP is good choice.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Leave Kudos if You like it &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/why-clients-say-no-to-btp-and-how-to-change-their-mind/ba-p/14237359"/>
    <published>2025-10-07T18:10:07.654000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/integrating-sap-document-information-extraction-document-ai-with-sap-cap/ba-p/14235024</id>
    <title>Integrating SAP Document Information Extraction (Document AI) with SAP CAP – Step by Step</title>
    <updated>2025-10-09T12:50:17.556000+02:00</updated>
    <author>
      <name>furkan5</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2115025</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="4"&gt;Introduction :&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In the SAP ecosystem, extracting meaningful data from documents such as invoices, contracts, or delivery notes—especially in accounting, finance, and operational processes—is often a manual and time-consuming task.Since these documents are usually in PDF or scanned image formats, using traditional data processing methods to identify fields is both error-prone and unsustainable in the long run.This is where SAP Document AI comes into play.By leveraging AI-powered models, Document AI can automatically analyze documents and extract key fields such as invoice number, date, currency, supplier–customer information, and line items.This eliminates the need for manual data entry, making the overall process faster, more reliable, and significantly more efficient.In this blog post, I will walk you through the step-by-step process of enabling SAP Document AI on SAP BTP and integrating it with a CAP (Cloud Application Programming) project.Starting from service activation, we’ll cover creating a service key, performing authentication (token retrieval), defining actions in CAP, uploading files, and storing the extracted Document AI results in a database.By the end of this guide, you’ll have a fully functional CAP endpoint that can be tested via Postman.You’ll learn how to send real PDF invoice files to Document AI and receive structured data in return—a foundation you can later extend with UI5 interfaces or workflow integrations.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;BR /&gt;Step &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;1 — Creating the Document AI Service in SAP BTP&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;First, we need to enable the Document AI service in SAP BTP. To do this:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Log in to your SAP BTP subaccount.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Open &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Service Marketplace&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Find &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the SAP Document AI Trial&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; service under &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Artificial Intelligence&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; category .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_0-1759664486213.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322910iF81D4AB95DE1798C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_0-1759664486213.png" alt="furkan5_0-1759664486213.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;On the service details page, you'll see &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Overview&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; and &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Service Plans tabs. Click &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Create&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; to create a service instance &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Select the &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;default&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; plan . This plan enables basic API access in a trial environment and creates the instance your CAP project needs to connect to the Document AI service.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_1-1759664694730.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322911i78197B4CDDE308E1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_1-1759664694730.png" alt="furkan5_1-1759664694730.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Fill out the form below:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Service:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; SAP Document AI Trial Version &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ We will be using this service. Since it is a trial version, we will use the free trial quota.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Plan:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; default &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ Only the &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;default&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; plan is available in the trial environment. It is sufficient for basic use.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Runtime Environment:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Cloud Foundry &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ Defines where the service will run. Cloud Foundry is often chosen for integration with CAP projects.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Domain:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; dev &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ Select the Cloud Foundry domain where your project is located (for example, dev, test).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Instance Name:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; DocAI &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ You can give the service instance any name you want. This makes it easier to connect later (you can use lowercase, for example &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;docai&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;After filling in all the fields, you can click &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Next button&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; to proceed to the confirmation screens and complete the sample creation process.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Once the instance has been successfully created, the next step is to generate &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;a Service Key for it&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; . This key contains the authentication information needed for your CAP project to connect to the Document AI service.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Click the ellipsis ( … ) &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;on the far right of your sample row &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Select Create Service Key&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; from the menu &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In the dialog box:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_2-1759665251951.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322912i292D746AFAAFA8A6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_2-1759665251951.png" alt="furkan5_2-1759665251951.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In the Name&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; field, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;enter a meaningful name such as &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;DocAIKey&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;You can leave the other settings at their default values.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Then&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; click Create &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Once the Service Key is generated, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;click on its row to open the &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;detail page.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ChatGPT Image 5 Eki 2025 15_02_16.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322913i9A734DF3DA76B3AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ChatGPT Image 5 Eki 2025 15_02_16.png" alt="ChatGPT Image 5 Eki 2025 15_02_16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;After copying the JSON:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Adding Service Key details to the file To access &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Document&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; AI service, we need to define credentials in our CAP project. To do this, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;you can add a structure like the following to the file located in your project's root directory:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Correct the highlighted errors and try again.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Unsupported HTML code has been removed from your message. The HTML has been updated. Please review the message and send it when you are satisfied.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "DOCAI_CLIENT_ID": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "DOCAI_CLIENT_SECRET": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "DOCAI_TOKEN_URL": "https://39c50baetrial.authentication.us10.hana.ondemand.com/oauth/token",
  "DOCAI_URL": "https://aiservices-trial-dox.cfapps.us10.hana.ondemand.com/document-information-extraction/v1"
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In real projects&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; , instead of manually adding these details to the file &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, service keys are &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;automatically&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; linked to the application. This way, the application reads credentials from environment variables ( ) and is managed more securely. Automatic linking can also be achieved during deployment via &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;MTA&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; or &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;manifest&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; files &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;VCAP_SERVICES&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;CODE&gt;service.cds&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Action Definition &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;in File&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;using { app as db } from '../db/schema';

service InvoiceService {
  entity Invoices as projection on db.Invoices;
  entity InvoiceItems as projection on db.InvoiceItems;

  action analyzeAndSave(file : LargeBinary, filename : String) returns {
     documentNumber : String(60);    
    documentDate   : Date;           
    currencyCode   : String(3);      
    senderName     : String(255);    
    receiverName   : String(255);   
    netAmount      : Decimal(15,2);  
    taxName        : String(40);     
    taxRate        : Decimal(5,2);   
    taxAmount      : Decimal(15,2);  
    grossAmount    : Decimal(15,2);  

  };
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;First, we define &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;a CAP Action to send the PDF to the Document AI service and retrieve the result&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; . This action can be triggered from the frontend or from tools like Postman.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;For example, let's define an action with the following name &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;CODE&gt;analyzeAndSave&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;CODE&gt;file&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;field:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Retrieves PDF file content in Base64 format.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;CODE&gt;filename&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;field:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Contains the file name.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;CODE&gt;returns&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;section:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Returns key invoice fields from the AI ​​service (for example, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;documentNumber&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;documentDate&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;currencyCode&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, etc.).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;This step creates the backend point that will trigger access to the Document AI service.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;At this point, we need to listen for the action we defined &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;in the backend &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;. To do this , we add &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;an &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;event handler&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; to . When the action is triggered, this handler sends the file to the Document AI service, retrieves the analysis result, and saves it to the database. The entire flow is managed within this function.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;analyzeAndSave&lt;/CODE&gt;&lt;CODE&gt;service.cds&lt;/CODE&gt;&lt;CODE&gt;srv/service.js&lt;/CODE&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;module.exports = cds.service.impl(function () {
  this.on("analyzeAndSave", async (req) =&amp;gt; {
    // We define the **helper functions required for the Document AI integration**.

  });
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Obtaining a Token (Authentication)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Now that we've defined the service credentials in the file&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, we need to obtain an access token to send requests to the Document AI service.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;We'll add the following sample function&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;to our file&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;CODE&gt;getToken&lt;/CODE&gt;&lt;CODE&gt;srv/service.js&lt;/CODE&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const axios = require("axios");

async function getToken() {
  const r = await axios.post(
    process.env.DOCAI_TOKEN_URL,
    new URLSearchParams({
      grant_type: "client_credentials",
      client_id: process.env.DOCAI_CLIENT_ID,
      client_secret: process.env.DOCAI_CLIENT_SECRET,
    }),
    { headers: { "Content-Type": "application/x-www-form-urlencoded" } }
  );
  return r.data.access_token;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;This function &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;access_token&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;returns a value from the SAP Document AI service using the information in the file. This token &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;will be used in subsequent API calls within the &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;Authorization&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; header .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In real projects, this step is often automated through &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;target+service binding&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; . The CAP application reads the necessary information &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;VCAP_SERVICES&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;from environment variables to obtain the token .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In this step, we retrieve the schemas defined in Document AI and&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;select the appropriate one for invoices. This allows the model to determine which fields to extract (e.g., Invoice ID, Date, Currency, etc.).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const schemas = await fetchSchemas(base, token);
console.log("[DocAI] schemas count =", schemas.length);

const chosen = pickInvoiceSchema(schemas);
if (!chosen) return req.error(500, "No invoice-related schema available in DOX");
console.log("[DocAI] chosen =", chosen);&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;fetchSchemas:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Retrieves the schema list from DOX using the access token.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;pickInvoiceSchema:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Selects the schema whose name is invoice or &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;contains &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the invoice&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;documentType&lt;/CODE&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;If none are found, return &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;500&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; (an obvious error to the developer).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Base64 → Buffer conversion (prepare the file)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The PDF file received from the client (UI5/Postman) may be in Base64 format. If it is a Data URL (for example,&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;data&amp;amp;colon;application/pdf;base64,...&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;), remove the prefix and convert it to a true binary buffer.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;let b64 = Buffer.isBuffer(file) ? null : String(file);
if (b64 &amp;amp;&amp;amp; b64.startsWith("data:")) {
  const i = b64.indexOf("base64,");
  if (i &amp;gt; -1) b64 = b64.slice(i + "base64,".length);
}
const buffer = Buffer.isBuffer(file) ? file : Buffer.from(b64 || file, "base64");
console.log("[CHECK] filename=", filename, "buffer length=", buffer?.length);
if (!buffer?.length) return req.error(400, "Empty or invalid base64 file");&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The field we will send via &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;HTTP form-data needs &lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;to be&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; binary &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;; therefore &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;we convert the Base64 payload into a &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;buffer&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;CODE&gt;file&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;We return 400&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; (client error) &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;for an &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;empty or corrupt&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; file .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Create a job (submit with &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;schemaId&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; We provide&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; the selected schema&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; and&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; document type&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; in&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt; , then&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; submit the file&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt; to DocAI&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; to start&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;CODE&gt;options&lt;/CODE&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const options = {
  clientId: "default",
  schemaId: chosen.id,
  documentType: chosen.documentType || "invoice",
};
console.log("[DocAI] submit options =", options);

const submitted = await submitJob(base, token, buffer, filename || "invoice.pdf", options);
const jobId = submitted?.id;
if (!jobId) throw new Error(`Job submit failed: ${JSON.stringify(submitted)}`);
console.log("[DocAI] jobId =", jobId);&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;schemaId: &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;chosen.id&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ we use a dynamic schema id.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;If successful, it returns a &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;jobId&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;; we use this ID to track the status of the job.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;If &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;filename&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;not provided the default value is &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;"invoice.pdf"&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Question the work and get results&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The job runs in the background.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; We poll at intervals until the status is COMPLETED &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Once the process is complete, the extracted areas become available under &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;CODE&gt;extraction&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const result = await pollJob(base, token, jobId, 60000, 1500);
console.log("[DocAI] status DONE, extraction keys =", Object.keys(result?.extraction || {}));&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;CODE&gt;pollJob(base, token, jobId, 60000, 1500)&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;60 sec timeout / 1.5 sec interval&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Below &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;and &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;result.extraction&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;you get &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;CODE&gt;headerFields&lt;/CODE&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;CODE&gt;lineItems&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;NOW LET'S GO TO TESTING:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;First, ...&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;cds watch --profile hybrid &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Let's start our CAP project with the following command. (I started it this way &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;because I chose &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;HANA&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; as the database .)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Sample Invoice PDF file:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_7-1759670250574.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322915i32530D5E1CCE4274/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_7-1759670250574.jpeg" alt="furkan5_7-1759670250574.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Above&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; is a sample PDF file we sent to the SAP Document AI service. The service automatically analyzes the invoice and extracts fields such as the invoice number, date, currency, supplier-customer information, and item information.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Testing with Postman:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Now that everything is ready on the backend, we can test the CAP action integrated with the Document AI service. To do this, use a REST client like Postman and send the following request:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_6-1759670015598.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322914iA652EA031F5674AB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_6-1759670015598.jpeg" alt="furkan5_6-1759670015598.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Method:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; POST&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;URL:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;CODE&gt;&lt;A href="http://localhost:4004/odata/v4/invoice/analyzeAndSave" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:4004/odata/v4/invoice/analyzeAndSave&lt;/A&gt;&lt;/CODE&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Body (JSON):&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;file name:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Name of the PDF file to be uploaded&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;file:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; PDF file content in &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Base64&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; format&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In this answer:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The fields extracted by Document AI match &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;exactly&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; the action return types defined in &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;service.cds&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;These values ​​are also &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;automatically&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; saved to the HANA database in the background.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In real projects,&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; this setup isn't written manually. Instead, the Document AI service &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;automatically connects to the CAP application via &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;service binding&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; . The application reads the necessary credentials directly &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;from environment variables, and token acquisition is performed automatically in the background. This not only increases security (sensitive data like client secrets aren't visible in the code or repository) but also &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;allows the application to run across different environments (dev, test, production) &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;without additional configuration . During deployment, binding is provided via &lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;MTA&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; or &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;manifest&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; files, and the application continues to run seamlessly with the same approach when deployed to production.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;STRONG&gt;&lt;CODE&gt;VCAP_SERVICES&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Optional: Storing Raw Document AI JSON for Debugging:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ekran görüntüsü 2025-10-05 170414.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322919i67EE420641065A4C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ekran görüntüsü 2025-10-05 170414.png" alt="Ekran görüntüsü 2025-10-05 170414.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In the Invoices&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; entity of the schema &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, I defined a field called to store the original response returned by the Document AI service. This field &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;is of type &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;LargeString&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; and holds all the header and line item data returned by Document AI in JSON format.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;RawJson&lt;/CODE&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The purpose of this area:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Debug/Trace&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; : Easily inspect the data returned by Document AI during development.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Extensibility&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; : If I later want to add new fields or change the mapping structure, I can access the original source.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Data Traceability&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; : Store raw invoice data so it can be reprocessed when necessary.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;For example, when an invoice is processed, all the extraction data returned by Document AI is stored in this column. You can then open this data and clearly see which fields Document AI has recognized.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;In this article, we explored how to enable SAP Document AI on SAP BTP and integrate it end-to-end with a CAP project. Each step—from creating the service instance and generating the service key to authenticating, defining CAP actions, and processing documents—represents a fundamental building block of a real-world backend automation setup.With this integration, you can now automatically process invoices or similar business documents without manual data entry. The extracted fields can be stored in your HANA database and then used for reporting, process automation, or analytics. This approach not only speeds up financial and operational workflows but also reduces human error and increases overall process reliability.In production environments, this setup is typically secured and automated through &lt;STRONG&gt;service binding&lt;/STRONG&gt;, allowing applications to read credentials from environment variables without manual configuration. This ensures smooth operation across development, test, and production landscapes.As a next step, you can extend this backend integration with a &lt;STRONG&gt;SAP UI5 dashboard&lt;/STRONG&gt; or management panel, enabling users to upload, view, validate, and approve invoices in real time. By doing so, you’ll move from a simple technical integration to a &lt;STRONG&gt;fully functional end-to-end intelligent document processing solution&lt;/STRONG&gt;.&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/integrating-sap-document-information-extraction-document-ai-with-sap-cap/ba-p/14235024"/>
    <published>2025-10-09T12:50:17.556000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/implementing-custom-audit-logging-in-sap-cap-applications/ba-p/14239283</id>
    <title>Implementing Custom Audit Logging in SAP CAP Applications</title>
    <updated>2025-10-09T13:22:32.172000+02:00</updated>
    <author>
      <name>gopalanand</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/126694</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1762025304"&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/H2&gt;&lt;DIV&gt;&lt;SPAN&gt;While SAP Cloud Application Programming (CAP) provides automatic audit logging through annotations, there are scenarios where you need more granular control over what gets logged. Custom audit logging becomes essential when you want to capture specific security events, such as unauthorised access attempts or track custom business logic violations.&lt;/SPAN&gt;&lt;DIV&gt;&amp;nbsp;&lt;DIV&gt;&lt;SPAN&gt;&lt;SPAN&gt;In this blog post, we'll explore how to implement custom audit logging in your CAP application to capture 403 Forbidden events when users attempt to access resources without proper authorisation.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;DIV&gt;This blog contains information from the SAP BTP Developer's Guide:&amp;nbsp;&lt;A href="https://github.com/SAP-samples/btp-developer-guide-cap/tree/main/documentation" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-samples/btp-developer-guide-cap/tree/main/documentation&lt;/A&gt;&lt;H4 id="toc-hId-1823677237"&gt;&lt;SPAN&gt;Why Custom Audit Logging?&lt;/SPAN&gt;&lt;/H4&gt;&lt;DIV&gt;&lt;SPAN&gt;Enterprise applications often require tracking security events beyond data access. Consider these scenarios:&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;-&amp;nbsp;&lt;STRONG&gt;Security Monitoring&lt;SPAN&gt;: Log unauthorised access attempts&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;- &lt;STRONG&gt;Compliance Requirements&lt;SPAN&gt;: Track specific business rule violations &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;- &lt;STRONG&gt;Custom Events&lt;SPAN&gt;: Capture application-specific audit trails&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;Custom audit logging fills these gaps by giving developers the flexibility to log any event deemed critical for security or compliance.&lt;/SPAN&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;H4 id="toc-hId-1627163732"&gt;&lt;SPAN&gt;Setting Up Custom Audit Logging&lt;/SPAN&gt;&lt;/H4&gt;&lt;DIV&gt;&lt;SPAN&gt;CAP provides powerful event handlers that allow you to intercept requests and responses. Here's how to implement custom audit logging for security events:&lt;/SPAN&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Step 1: Create the Server Extension&lt;/STRONG&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Create a &lt;STRONG&gt;server.js&lt;SPAN&gt;&amp;nbsp;file at the root of your CAP application and implement the custom audit logging logic:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const cds = require('@sap/cds')

let audit

cds.on('served', async () =&amp;gt; {
  audit = await cds.connect.to('audit-log')
})

const audit_log_403 = (resource, ip) =&amp;gt; {
  // we need to start our own tx because the default tx may be burnt
  audit.tx(async () =&amp;gt; {
    await audit.log('SecurityEvent', {
      data: {
        user: cds.context.user?.id || 'unknown',
        action: `Attempt to access restricted resource "${resource}" with insufficient authority`
      },
      ip
    })
  })
}

// log for non-batch requests
cds.on('bootstrap', app =&amp;gt; {
  app.use((req, res, next) =&amp;gt; {
    req.on('close', () =&amp;gt; {
      if (res.statusCode == 403) {
        const { originalUrl, ip } = req
        audit_log_403(originalUrl, ip)
      }
    })
    next()
  })
})

// log for batch subrequests
cds.on('serving', srv =&amp;gt; {
  if (srv instanceof cds.ApplicationService) {
    srv.on('error', (err, req) =&amp;gt; {
      if (err.code == 403) {
        const { originalUrl, ip } = req.http.req
        if (originalUrl.endsWith('/$batch')) audit_log_403(originalUrl.replace('/$batch', req.req.url), ip)
      }
    })
  }
})

module.exports = cds.server​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Understanding the Implementation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The implementation consists of three key components:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Audit Connection: Establishes a connection to the audit-log service when CAP is served&lt;/LI&gt;&lt;LI&gt;Custom Audit Function: Creates security event entries with user context and resource information&lt;/LI&gt;&lt;LI&gt;Event Handlers: Captures 403 errors for both regular and batch requests&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;The code handles two scenarios:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- Non-batch requests: Uses Express middleware to capture response status codes&lt;/P&gt;&lt;P&gt;- Batch requests: Leverages CAP's error handling for OData batch operations&lt;/P&gt;&lt;H4 id="toc-hId-1430650227"&gt;Testing Your Custom Audit Logging&lt;/H4&gt;&lt;P&gt;To verify your implementation works correctly:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Start your CAP server with &lt;STRONG&gt;cds watch&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Modify user permissions: Remove the `&lt;STRONG&gt;admin&lt;/STRONG&gt;` role from user `&lt;STRONG&gt;alice&lt;/STRONG&gt;` in your `&lt;STRONG&gt;package.json&lt;/STRONG&gt;`&lt;/LI&gt;&lt;LI&gt;Send a test request: Use the following HTTP request to trigger a 403 error&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;GET {{server}}/odata/v4/admin/Customers
Authorization: Basic {{username}}:{{password}}
​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Check the console output: You should see a custom audit log entry like this:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;[audit-log] - SecurityEvent: {
     data: {
       user: 'alice',
       action: 'Attempt to access restricted resource "/odata/v4/admin/Customers" with insufficient authority'
     },
     ip: '::ffff:127.0.0.1',
     uuid: '1109134c-64db-42f8-a780-2dde61cf6821',
     tenant: undefined,
     user: 'alice',
     time: 2025-05-28T04:59:43.653Z
   }
​&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-1105054003"&gt;Conclusion&lt;/H3&gt;&lt;P&gt;Custom audit logging in CAP applications provides the flexibility needed for comprehensive security monitoring and compliance. By leveraging CAP's event system and audit logging infrastructure, you can create robust audit trails that go beyond standard data access logging.&lt;/P&gt;&lt;P&gt;The implementation shown here focuses on security events, but the same principles apply to any custom audit logging requirements in your enterprise applications.&lt;BR /&gt;Learn more about SAP BTP Developer's Guide and More concepts:&amp;nbsp;&lt;A href="https://help.sap.com/docs/btp/btp-developers-guide/btp-developers-guide" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/btp/btp-developers-guide/btp-developers-guide&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Note: The views and opinions expressed in this post are my own.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/implementing-custom-audit-logging-in-sap-cap-applications/ba-p/14239283"/>
    <published>2025-10-09T13:22:32.172000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/developer-news/sap-developer-news-october-9th-2025/ba-p/14239602</id>
    <title>SAP Developer News October 9th, 2025</title>
    <updated>2025-10-09T21:10:00.023000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F7kAbhWcSBFg%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D7kAbhWcSBFg&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F7kAbhWcSBFg%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="Devtoberfest, CAP Customer Roundtable, ES5 Decommissioned &amp;amp; Scavenger Hunt Clue | SAP Developer News" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1891111618"&gt;&lt;SPAN&gt;DESCRIPTION&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;PODCAST:&lt;/STRONG&gt;&amp;nbsp;&lt;A href="https://podcast.opensap.info/sap-developers/2025/10/09/sap-developer-news-october-9th-2025/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://podcast.opensap.info/sap-developers/2025/10/09/sap-developer-news-october-9th-2025/&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Devtoberfest Week 3&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/devtoberfest/gh-p/Devtoberfest" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest/gh-p/Devtoberfest&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;ES5 Decommissioned &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Andre Fischer's blog post: &lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-gateway-demo-system-will-be-de-commissioned/bc-p/13353604" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-gateway-demo-system-will-be-de-commissioned/bc-p/13353604&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;CAP Customer Roundtable 15 Oct 2025&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;All details including agenda: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-application-programming-model-cap-customer-roundtable-october/ba-p/14222428" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-application-programming-model-cap-customer-roundtable-october/ba-p/14222428&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Scavenger Hunt Clue #7&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Scavenger Hunt Main blog post: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/fun-for-week-1-the-devtoberfest-scavenger-hunt/ba-p/14183972" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest-blog-posts/fun-for-week-1-the-&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;devtoberfest-scavenger-hunt/ba-p/14183972&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Discovery Center: &lt;/SPAN&gt;&lt;A href="https://discovery-center.cloud.sap/index.html" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://discovery-center.cloud.sap/index.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Architecture Center: &lt;/SPAN&gt;&lt;A href="https://architecture.learning.sap.com/" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://architecture.learning.sap.com/&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Week 3 Puzzles blog post: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/fun-for-week-3-puzzles-puzzles-puzzles/ba-p/14234936" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest-blog-posts/fun-&lt;/SPAN&gt;&lt;/A&gt; &lt;SPAN&gt;for-week-3-puzzles-puzzles-puzzles/ba-p/14234936&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Links to the 4 Puzzles:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-sap-crossword.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://developers.sap.com/tutorials/devtoberfest2025-sap-crossword.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-sap-crossword-bonus.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://developers.sap.com/tutorials/devtoberfest2025-sap-crossword-bonus.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-fun-scramble-codejam.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://developers.sap.com/tutorials/devtoberfest2025-fun-scramble-codejam.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-fun-scramble-languages.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://developers.sap.com/tutorials/devtoberfest2025-fun-scramble-languages.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1694598113"&gt;&lt;SPAN&gt;CHAPTER TITLES&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;0:00 Intro&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:10 &lt;/SPAN&gt;&lt;SPAN&gt;Devtoberfest Week 3&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:51&lt;/SPAN&gt; &lt;SPAN&gt;ES5 Decommissioned&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1:29 &lt;/SPAN&gt;&lt;SPAN&gt;CAP Customer Roundtable 15 Oct 2025&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;2:09 Scavenger Hunt Clue #7&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1498084608"&gt;&lt;SPAN&gt;TRANSCRIPTION&lt;/SPAN&gt;&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Intro]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;This is the SAP Developer News for October 9th, 2025. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Mamikee]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Hi, everyone. Can you believe we're already wrapping up week two of Devtoberfest? It's been such a fun week, tons of coding, learning, and connecting with the community. But don't slow down just yet because week three is right around the corner and we've gotten some really exciting stuff planned. So if you want to find out what's coming up next, the challenges, the sessions, all the surprises, make sure to head over to the Devtoberfest group on communities.sap. This is where you'll find all updates on all the sessions that's going on. Check it out and keep earning your points. We'll see you in week three. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Rainey]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Howdy, SAP developers. If you're a user of the SAP developer tutorial system, there's an important migration that's been underway that you'll want to know about. We've been gradually migrating content from an older NetWeaver system called ES5 over to S/4HANA. And we're happy to say that that migration is largely complete today. As one of the final touches in this, Andre Fisher, a product manager for ABAP, has published a blog post outlining the decommissioning of the older system. You can click on a link below and get access to that information. Happy S4ing, folks. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[DJ]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;On Wednesday next week that's Wednesday the 15th of October 5pm CEST is the next installment of the CAP roundtable so it's on the horizon so I did that if you are a CAP aficionado a user a developer anybody involved in the CAP ecosphere this meeting is for you topics to discuss requirements, things to highlight, insights you want to share, then join this roundtable next Wednesday, 15th of October. See you there.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Shrini]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt; Hello, everybody. Are you ready for today's scavenger and clue? Today's clue is hidden right here in the Discovery Center. The SAP Discovery Center is packed with a lot of useful resources. You will find a mission catalog with missions to help you implement your use cases on SAP BTP. A guidance framework which gives you a clear and structured path with best practices and developer guide. Plus a service catalog for SAP BTP and AI services where you can check pricing, see available regions and explore the related missions. here is what to look for. In the Mission Catalog, search for the mission title, Setup Joule Studio with SAP Built in BTP Enterprise account. Once you open this mission, you will find the first three hexadecimal numbers of the clue. The next half of the clue can be found in the Architecture Center. Architecture Center was recently launched by SAP to showcase, share, and collaborate on reference solution architectures with the developers and architects. It has a sleek card style overview page. Head over to the tile named Exchange Joule with Joule's Toolbook. Once you land on the page, you might notice something out of place there. The next three hexadecimal numbers might be hiding there. As a part of fun activities for week 3, we have 4 brand new puzzles. Check it out in this blog post by Daniel. You can find links to all the resources in the description. Let us know about your hunt in the comments.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/developer-news/sap-developer-news-october-9th-2025/ba-p/14239602"/>
    <published>2025-10-09T21:10:00.023000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-cloud-application-programming-model-september-2025/ba-p/14242646</id>
    <title>What's new in SAP Cloud Application Programming Model – September 2025</title>
    <updated>2025-10-14T09:43:07.148000+02:00</updated>
    <author>
      <name>BirgitS</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/41902</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Dear SAP Community,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;I’m happy to announce that the September release of SAP Cloud Application Programming Model (CAP) is available. It’s packed with many great new features! &lt;SPAN&gt;This blog post highlights some of the new features&lt;/SPAN&gt;. It presents a range of exciting new capabilities, such as the new MCP servers or the integration with Application Frontend service. In addition, we collected &lt;SPAN&gt;some informative blog posts delving into various aspects of CAP and give you an overview on upcoming events.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Check out the details of what's new!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Enabling Agentic Development with MCP Servers&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The&amp;nbsp;&lt;A href="https://modelcontextprotocol.io/docs/getting-started/intro" target="_blank" rel="noopener nofollow noreferrer"&gt;Model Context Protocol (MCP)&lt;/A&gt; is an open standard&amp;nbsp;that bridges the gap between large language models (LLMs) and external resources such as services, tools, data, and workflows, so models can fetch context, take actions, and deliver more accurate results. MCP is already supported by clients such as Claude, Cline, Cursor, and VS Code.&lt;/P&gt;&lt;P&gt;Beginning of September, SAP introduced MCP servers for &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849" target="_blank"&gt;CAP&lt;/A&gt;&lt;/SPAN&gt;, &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-update-first-release-of-the-sap-fiori-mcp-server-for/ba-p/14204694" target="_blank"&gt;SAP Fiori elements&lt;/A&gt;&lt;/SPAN&gt;, and &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/give-your-ai-agent-some-tools-introducing-the-ui5-mcp-server/ba-p/14200825" target="_blank"&gt;SAPUI5&lt;/A&gt;&lt;/SPAN&gt;. These MCP servers are designed specifically for building enterprise-grade SAP business applications taking into account proven best practices and providing recommendations tailored to SAP Business Technology Platform.&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="BirgitS_0-1760368014256.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326856i59D5FACBBE59F6FD/image-size/large?v=v2&amp;amp;px=999" role="button" title="BirgitS_0-1760368014256.png" alt="BirgitS_0-1760368014256.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;Welcome to cap-js/mcp-server&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;For further information, I highly recommend you to read this blog post: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602" target="_blank"&gt;SAP Build introduces new MCP Servers to enable agentic development for Enterprise Applications&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Easily Integrate with Application Frontend Service &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/application-frontend-service" target="_blank" rel="noopener noreferrer"&gt;Application Frontend service&lt;/A&gt;&lt;/SPAN&gt; is a SaaS application on SAP Business Technology Platform (BTP), which serves as a single entry point for hosting, serving and operating frontend applications. It is part of SAP Build, SAP’s unified solution for application development and process automation. By consolidating all aspects of UI application management under one managed service, Application Frontend service simplifies the development experience and enhances custom application operations. For an introduction to Application Frontend service, please read &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-application-frontend-service/ba-p/14091408" target="_blank"&gt;this blog post&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;With our latest CAP release it is now possible to &lt;SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/releases/sep25#cds-add-app-frontend" target="_blank" rel="noopener nofollow noreferrer"&gt;easily integrate the Application Frontend service&lt;/A&gt;&lt;/SPAN&gt;. All you have to do is use the command &lt;EM&gt;cds add app-frontend&lt;/EM&gt;. This adds all the needed configuration to your project providing you access to Application Frontend’s cool features. No additional work for you to do!&lt;/P&gt;&lt;P&gt;Please note: The support for this service is currently limited to single-tenant applications.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Integration with SAP Integration Suite, Advanced Event Mesh now Generally Available &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform/integration-suite/advanced-event-mesh.html" target="_blank" rel="noopener noreferrer"&gt;SAP Integration Suite, advanced event mesh&lt;/A&gt;&lt;/SPAN&gt;&amp;nbsp;enables real-time, asynchronous communication. It works across hybrid, multi-cloud, and edge environments. The advanced event mesh integrates SAP and non-SAP systems into your event-driven architecture and allows you to form meshes of event brokers. You can publish and subscribe to business events from all kinds of SAP and non-SAP event sources. As a result, event-driven architecture and advanced event mesh keep systems and users up to date when critical changes occur. Advanced event mesh allows to manage, monitor, and visualize decentralized event streaming across your landscape.&lt;/P&gt;&lt;P&gt;In May, we released the &lt;SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/releases/archive/2025/may25#aem" target="_blank" rel="noopener nofollow noreferrer"&gt;beta version of our integration with advanced event mesh&lt;/A&gt;&lt;/SPAN&gt;. After a successful test and evaluation phase, we are now happy to tell you that both open-source plugins (for Node.js and for Java) are now&amp;nbsp;&lt;A href="https://cap.cloud.sap/docs/releases/sep25#sap-integration-suite-advanced-event-mesh-ga" target="_blank" rel="noopener nofollow noreferrer"&gt;generally available&lt;/A&gt; (GA). The GA release comes with a notable addition: the support for cross-subaccount broker validation, allowing you to share advanced event mesh instances between multiple subaccounts.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Additional details can be found&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/plugins/#advanced-event-mesh" target="_blank" rel="noopener nofollow noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Translated Error Messages in CAP Node.js&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For a better user experience, error messages that appear on the UI should be translated into the same language as the rest of their application. Therefore, &lt;A href="https://cap.cloud.sap/docs/releases/sep25#translated-error-messages" target="_blank" rel="noopener nofollow noreferrer"&gt;CAP Node.js delivers translations for annotation-based input validations&lt;/A&gt; out of the box in all CAP-supported languages. For a list of the messages that are currently translated, see the &lt;A href="https://cap.cloud.sap/docs/node.js/events#translations-for-validation-errors" target="_blank" rel="noopener nofollow noreferrer"&gt;documentation&lt;/A&gt;.&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="BirgitS_1-1760368014280.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326857i7EC4C47075310316/image-size/large?v=v2&amp;amp;px=999" role="button" title="BirgitS_1-1760368014280.png" alt="BirgitS_1-1760368014280.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;Screenshot: Translation of error codes to German language&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;To learn more about error handling in Node.js, please read the following &lt;A href="https://cap.cloud.sap/docs/node.js/events#req-reject" target="_blank" rel="noopener nofollow noreferrer"&gt;section in the documentation&lt;/A&gt;. For additional information about internationalization in Node.js, check out &lt;A href="https://cap.cloud.sap/docs/node.js/cds-i18n" target="_blank" rel="noopener nofollow noreferrer"&gt;this section&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;For those of you, who use CAP Java: translated error messages are also &lt;SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/releases/archive/2025/jan25#default-runtime-messages-bundle" target="_blank" rel="noopener nofollow noreferrer"&gt;supported there&lt;/A&gt;&lt;/SPAN&gt;. Please look at the &lt;SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/java/event-handlers/indicating-errors#messages" target="_blank" rel="noopener nofollow noreferrer"&gt;documentation&lt;/A&gt;&lt;/SPAN&gt;, to gain further insights.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Further Readings &amp;amp; Events&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Avoiding Data Loss When Loading Initial Data with CSV Files in CAP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using CSV files to load initial data or sample data is convenient but you must be careful when deploying data to SAP S/4HANA Cloud as you might risk losing data. In his blog post&lt;SPAN&gt; &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/avoiding-data-loss-when-loading-initial-data-with-csv-files-in-cap/ba-p/14215172" target="_blank"&gt;Avoiding Data Loss When Loading Initial Data with CSV Files in CAP,&lt;/A&gt;&lt;/SPAN&gt; SAP Champion Mio Yasutake explains alternative approaches how to avoid data loss.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Providing Feedback on CAP Documentation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Your feedback is crucial for us to improve. Thus, we would like to ask you to share your feedback on our CAP documentation. There are many ways to provide us your feedback. In his blog post&lt;SPAN&gt; &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/multiple-ways-to-give-feedback-on-cap-documentation/ba-p/14199559" target="_blank"&gt;Multiple Ways to Give Feedback on CAP Documentation&lt;/A&gt;, &lt;/SPAN&gt;my colleague Rene guides you through the different options.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Cloud Application Programming Model Customer Roundtable &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The next CAP Customer Roundtable is just around the corner. If you are interested in an overview of the recent features, demos, presentations and questions raised by the CAP community, mark your calendar for October 15th, 2025, 11 AM EST | 5 PM CE(S)T. Find further details (including the agenda and dial in data) &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-application-programming-model-cap-customer-roundtable-october/ba-p/14222428?emcs_t=S2h8ZW1haWx8dG9waWNfc3Vic2NyaXB0aW9ufE1GWFNRMFVIVjRFMUwxfDE0MjIyNDI4fFNVQlNDUklQVElPTlN8aEs" target="_blank"&gt;in this blog post&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Devtoberfest 2025&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest/gh-p/Devtoberfest" target="_blank"&gt;Devtoberfest 2025&lt;/A&gt;&lt;/SPAN&gt; already started. In 2025, the event is taking place from September 29th until October 24th. But you can still consume the content. Devtoberfest is a virtual event giving SAP developers a great opportunity to get ready for SAP TechEd. It is packed with enablement sessions around topics in the area of CAP, ABAP, Tooling and Frontend, Integration, Data and AI, combined with a lot of fun. For further information, read the &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-welcome/ba-p/14182817" target="_blank"&gt;Devtoberfest 2025 Welcome!&lt;/A&gt;&lt;/SPAN&gt; blog post and join &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest/gh-p/Devtoberfest?sap-outbound-id=C5C40C877E97CD6101872ADE15DCDDA2A45F79F2" target="_blank"&gt;the Devtoberfest group&lt;/A&gt;&lt;/SPAN&gt; in SAP Community to take part in this great event!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP TechEd 2025&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;From November 4–6, 2025 &lt;SPAN&gt;&lt;A href="https://www.sap.com/events/teched.html" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd&lt;/A&gt;&lt;/SPAN&gt; takes place providing you the opportunity to learn about the latest innovations and advancements in SAP technologies and to connect with the community. In 2025, SAP TechEd will be a hybrid event combining the best of both worlds: the in-person event in Berlin and the virtual event. Both events are taking place in parallel. Make sure to save the date and register now for &lt;SPAN&gt;&lt;A href="https://www.sap.com/germany/events/teched/berlin.html" target="_blank" rel="noopener noreferrer"&gt;Berlin&lt;/A&gt;&lt;/SPAN&gt;&amp;nbsp;or&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://www.sap.com/germany/events/teched/virtual.html" target="_blank" rel="noopener noreferrer"&gt;virtual&lt;/A&gt;&lt;/SPAN&gt;!&lt;/P&gt;&lt;P&gt;The session catalogs for the &lt;SPAN&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog" target="_blank" rel="noopener noreferrer"&gt;in-person&lt;/A&gt;&lt;/SPAN&gt; and the &lt;SPAN&gt;&lt;A href="https://www.sap.com/events/teched/virtual/flow/sap/tev25/catalog-virtual/page/catalog" target="_blank" rel="noopener noreferrer"&gt;virtual&lt;/A&gt;&lt;/SPAN&gt; event are now live, featuring a wide range of topics across various tracks, where you'll find many sessions on the SAP Cloud Application Programming Model.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For further information on new features, please have a look at the &lt;SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/releases/" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Cloud Application Programming Model Release Notes&lt;/A&gt;&lt;/SPAN&gt;&lt;STRONG&gt;. If you want to stay up-to-date with news, learning resources, and product and strategy updates for CAP:&amp;nbsp;&lt;/STRONG&gt;follow our&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/c-khhcw49343/SAP+Cloud+Application+Programming+Model/pd-p/9f13aee1-834c-4105-8e43-ee442775e5ce" target="_blank"&gt;tag&lt;/A&gt; &lt;/SPAN&gt;in the SAP Community.&lt;/P&gt;&lt;P&gt;We look forward to seeing how you use these new capabilities to create innovative solutions and drive your projects forward. Stay tuned for more updates and happy coding! &lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-cloud-application-programming-model-september-2025/ba-p/14242646"/>
    <published>2025-10-14T09:43:07.148000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/establishing-connectivity-between-a-local-cap-runtime-and-on-premise/ba-p/14219908</id>
    <title>Establishing connectivity between a local CAP runtime and on-premise systems</title>
    <updated>2025-10-15T10:30:03.571000+02:00</updated>
    <author>
      <name>vLeonkev</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/629751</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;SAP Business Technology Platform (BTP) offers a complete suite of tools and services to access on-premise systems such as SAP S/4HANA, SAP HANA On-Premise, any OData service, generic HTTP services, or any other service supporting the TCP/IP protocol.  The &lt;A title="SAP Cloud Application Programming Model (CAP)" href="https://cap.cloud.sap/docs/" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Cloud Application Programming Model (CAP)&lt;/A&gt; provides tools and guidance for developing and &lt;A href="https://cap.cloud.sap/docs/advanced/hybrid-testing" target="_self" rel="nofollow noopener noreferrer"&gt;testing&lt;/A&gt; cloud services, prioritizing local development. The challenge of integrating on-premise services with a local CAP application development setup is where CAP’s value truly shines. The following blog serves as a comprehensive guide, detailing the steps to achieve this integration.&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV&gt;&lt;H2 id="toc-hId-1760184746"&gt;&lt;SPAN&gt;Install and configure the Cloud Connector&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;To establish a secure connection to on-premise services, it is essential to install the &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector" target="_self" rel="noopener noreferrer"&gt;Cloud Connector&lt;/A&gt; within your local network environment.&amp;nbsp;&lt;SPAN&gt;Ensure that the target on-premise system is accessible from this network, as the Cloud Connector will facilitate communication between your cloud applications and the on-premise services.&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;H3 id="toc-hId-1692753960"&gt;&lt;SPAN&gt;Cloud Connector installation&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;The Cloud Connector can be installed on variety of operating systems as described &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/installation" target="_self" rel="noopener noreferrer"&gt;here&lt;/A&gt;. &lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1496240455"&gt;&lt;SPAN&gt;Cloud Connector configuration&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;To facilitate the initial setup of connectivity between SAP BTP and the Cloud Connector, the authentication information has already been prepared. Download the authentication data file from your SAP BTP subbaccount:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;open your SAP BTP subaccount in&amp;nbsp;your favourite browser&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;navigate to "Cloud Connectors"&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;press the&amp;nbsp;button "Download Authentication Data"&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;Establish connection between Cloud Connector and your SAP BTP subaccount:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;open the Cloud Connector administration panel:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://localhost:8443/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://localhost:8443/&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector-initial-configuration#log-on-to-the-cloud-connector" target="_self" rel="noopener noreferrer"&gt;login&lt;/A&gt; with the default username and password: Administrator/manage, when prompted &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector-initial-configuration#initial-setup" target="_self" rel="noopener noreferrer"&gt;change the password&lt;/A&gt; following the instructions&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;choose installation type:&amp;nbsp;Master (Primary Installation) and provide description of your choice&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;press "&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector-initial-configuration#adding-the-first-subaccount" target="_self" rel="noopener noreferrer"&gt;Add Subaccount&lt;/A&gt;" to connect to yout SAP BTP subaccount&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;provide the internet proxy configuration if applicable and press "Next"&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;choose "Configure using authentication data" and press "Next"&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;choose "Add subaccount authentication data from file"&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;press "Browse" and provide the previously downloaded&amp;nbsp;authentication data file from your SAP BTP subaccount then press "Next"&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;in the last dialog fill in the required information of your choice and press "Finish"&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;Your &lt;STRONG&gt;Cloud Connector is now available&lt;/STRONG&gt;&amp;nbsp;to your SAP BTP subaccount.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Let's &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/configure-access-control-http#expose-intranet-systems" target="_self" rel="noopener noreferrer"&gt;expose the resources&lt;/A&gt; that need to be made visible in your SAP BTP subaccount:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;in the Cloud Connector Administration panel navigate to the connected subaccount&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;choose "Cloud to On-Premise"&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;in the "Access Control" tab press the Plus "+" button located in the header of the table "Mapping Virtual to Internal System"&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;choose the type of the system to be exposed. In this guide a CAP OData endpoint will be used - choose "Non-SAP System"&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;choose the appropriate protocol, in the current example it is "HTTP"&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;provide internal host and port to expose, for example: "localhost" and "4004"&amp;nbsp;and press "Next"&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;choose "Allow Principal Propagation" if applicable&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;select the Principal type, which is "Kerberos" by default&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;choose which host to provide in the request header&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;provide a description of your choice&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;press "Finish"&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;The exposed&amp;nbsp;&lt;EM&gt;host:port&lt;/EM&gt; combination is &lt;STRONG&gt;now available&lt;/STRONG&gt;, in addition resources must be &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/configure-access-control-http#activate-or-suspend-resources" target="_self" rel="noopener noreferrer"&gt;exposed&lt;/A&gt;:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;in the Cloud Connector Administration panel navigate to the connected subaccount&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;choose "Cloud to On-Premise"&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;switch to tab "Access Control" in case it is not already selected by default&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;in the table "Resources of localhost:4004" press the Plus "+"&amp;nbsp; to add new resource&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;provide the URL to expose, for example: "/" - the root path of the web server&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;choose the "Access Policy", for example ""Path and All Sub-Paths" will allow access to any URL on that server&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;press "Save"&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;The configuration is now complete. By checking the 'Cloud Connectors' in the relevant SAP BTP subaccount, you should see the already configured Cloud Connector and the exposed backend system, for example, 'localhost:4004'.&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;H1 id="toc-hId-1041561512"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H2 id="toc-hId-974130726"&gt;&lt;SPAN&gt;CAP Application setup&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;To access an on-premise backend system, the CAP application must utilize the destination and connectivity services provided by SAP BTP. If you don't already have a CAP application, you can easily set up a new one with the following command:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds init sample --add sample &amp;amp;&amp;amp; cd sample&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Enable both destination and connectivity, and also &lt;A href="https://cap.cloud.sap/docs/guides/deployment/to-cf#add-mta-yaml" target="_self" rel="nofollow noopener noreferrer"&gt;deployment via mta&lt;/A&gt; with the following command:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add destination,connectivity,xsuaa,mta&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Subsequent deployment will automatically create the required SAP BTP instances for the destination and connectivity services.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you prefer to manually instantiate the destination and connectivity services, you can do so with the following commands:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;destination service&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf create-service destination lite sample-destination
cf create-service-key sample-destination sample-destination-key&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;connectivity service&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf create-service connectivity lite sample-connectivity
cf create-service-key sample-connectivity sample-connectivity-key&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;To access the SAP BTP services locally in a hybrid development environment, &lt;A href="https://cap.cloud.sap/docs/advanced/hybrid-testing#bind-to-cloud-services" target="_self" rel="nofollow noopener noreferrer"&gt;bind&lt;/A&gt; the necessary SAP BTP services. For connectivity, set the proxy host to&amp;nbsp;&lt;EM&gt;localhost&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN&gt;, as it defaults to an internally accessible SAP BTP hostname (see &lt;A href="https://cap.cloud.sap/docs/advanced/hybrid-testing#overwriting-service-credentials" target="_self" rel="nofollow noopener noreferrer"&gt;Overwrite Cloud Service Credentials&lt;/A&gt;)&lt;/SPAN&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npx cds bind --to sample-connectivity --credentials "{ \"onpremise_proxy_host\": \"localhost\" }"
npx cds bind --to sample-destination
npx cds bind --to sample-auth&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Accessing systems via the connectivity service requires a destination with proxy type OnPremise. The destination can be either on subaccount level or instance based and can be created either via &lt;EM&gt;mta&lt;/EM&gt; or manually in the SAP BTP destination service UI by providing the following parameters, where the &lt;EM&gt;host:port&lt;/EM&gt; must be the same as the previously configured Cloud Connector (localhost:4004) :&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;Name: 'on-prem-dest'
Type: 'HTTP'
Authentication: 'NoAuthentication'
URL: 'http://localhost:4004'
ProxyType: 'OnPremise'
Description: 'on-premise destination'&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Destinations can be created alternatively programmatically utilizing the &lt;A href="https://api.sap.com/api/SAP_CP_CF_Connectivity_Destination/resource/Destinations_on_Service_Instance_Subscription_Level" target="_self" rel="noopener noreferrer"&gt;Destination REST API&lt;/A&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;install the Cloud SDK http client, xsenv and xssec packages required to create the destination&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm i -D "@sap-cloud-sdk/http-client"
npm i -D "@sap/xsenv"
npm i -D "@sap/xssec"&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;create a new file named&amp;nbsp;&lt;SPAN&gt;createNewDestination.js with the following content:&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;(async () =&amp;gt; {
const xsenv = require('@sap/xsenv')
const xssec = require('@sap/xssec')
const destinationCredentials = xsenv.serviceCredentials({ tag: 'destination' })
const xsuaaService = new xssec.XsuaaService(destinationCredentials)
const token = await xsuaaService.fetchClientCredentialsToken()
const { executeHttpRequest } = require('@sap-cloud-sdk/http-client')
const destinationName = 'on-prem-dest'
const data = JSON.stringify({
  Name: destinationName,
  Type: 'HTTP',
  Description: 'on-prem destination',
  URL: 'http://linux:4004',
  ProxyType: 'OnPremise',
  Authentication: 'NoAuthentication'
})
try {
  const response = await executeHttpRequest({
    url: destinationCredentials.uri + "/destination-configuration/v1/instanceDestinations" },{
    method: 'POST',headers: {
    "Authorization": "Bearer " + token.access_token,
    'X-CSRF-Token': 'None'},
    data
  })
  console.log("Create destination", destinationName, response.status, response.statusText)
} catch(e) {
  console.log("Failed to create destination", destinationName, e.status, e.response?.data)
}
})()&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;run the newly created script file with SAP BTP service &lt;A href="https://cap.cloud.sap/docs/advanced/hybrid-testing#run-arbitrary-commands-with-service-bindings" target="_self" rel="nofollow noopener noreferrer"&gt;bindings&lt;/A&gt;&amp;nbsp;using the command:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds bind --exec node createNewDestination.js&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In order to use that destination in a CAP application, a new service needs to be defined with the destination specified as parameter. Add the following configuration to your package.json file providing the name of the already created destination:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;"cds": {
  "requires": {
    "OnPremService": {
      "kind": "odata",
      "credentials": {
        "destination": "on-prem-dest"
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The connectivity proxy port should be forwarded to SAP BTP via a &lt;A href="https://cli.cloudfoundry.org/en-US/v6/ssh.html" target="_self" rel="nofollow noopener noreferrer"&gt;ssh tunnel&lt;/A&gt;. In order to open a ssh connection to SAP BTP an already deployed microservice is required. In case you do not have one then an initial deployment can be performed via the following command:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds up&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In case there is no current CAP application to deploy, a newly created CAP app can serve that purpose:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;cds init sample --add sample,xsuaa &amp;amp;&amp;amp; cd sample &amp;amp;&amp;amp; npx cds up&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Open a &lt;A href="https://cli.cloudfoundry.org/en-US/v6/ssh.html" target="_self" rel="nofollow noopener noreferrer"&gt;ssh tunnel&lt;/A&gt; to the SAP BTP microservice with the connectivity proxy port forwarded with the command:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf ssh sample-srv -L 20003:connectivityproxy.internal.cf.eu12.hana.ondemand.com:20003&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;The created destination was configured as an HTTP endpoint with port 4004. To test the destination, ensure the CAP service is running locally on port 4004. Start the CAP service with the SAP BTP services bound by executing the following command in the root directory of your CAP project:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;PORT=4004 cds bind --exec cds-serve --profile hybrid&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Perform an initial destination check via the Destinations UI in SAP BTP by selecting the destination and then pressing the 'Check Destination' button.&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-648534502"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H2 id="toc-hId-581103716"&gt;&lt;SPAN&gt;Setup validation&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;With the Cloud Connector instance running locally and connected to your SAP BTP subaccount, a reachable SAP BTP destination, the tunneled connectivity proxy, and the locally running CAP service, you can perform the final validation of the setup.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Create a new file named&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;testOnPremSystem.js&lt;/EM&gt;&lt;SPAN&gt;&lt;EM&gt;&amp;nbsp;&lt;/EM&gt;with the following content. Adapt the service name and resource path in the&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;get&lt;/EM&gt;&lt;SPAN&gt;&lt;EM&gt;&amp;nbsp;&lt;/EM&gt;method to match your specific case:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;  (async () =&amp;gt; {
  const cds = require ('@sap/cds')
  const onPremService = await cds.connect.to("OnPremService")
  try {
    let res = await onPremService.get("/odata/v4/test/OnPremService")
    console.log(res)
  } catch(e) {
    console.log(e)
  }
  })()&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Run the test with service bindings:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;cds bind --exec node testOnPremService.js&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;With everything configured and running, the CAP application can be extended with functionality to access an on-premise system.&lt;/P&gt;&lt;P&gt;An already preconfigured and functional example containing scripts to ease the validation of the scenario is available on &lt;EM&gt;github&lt;/EM&gt; in the following repository: &lt;A href="https://github.com/vl-leon/on-prem-connectivity-example" target="_self" rel="nofollow noopener noreferrer"&gt;github: on-prem-connectivity-example&lt;/A&gt;&amp;nbsp;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/establishing-connectivity-between-a-local-cap-runtime-and-on-premise/ba-p/14219908"/>
    <published>2025-10-15T10:30:03.571000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-developer-s-guide-extending-fiori-elements-with-the-flexible/ba-p/14242403</id>
    <title>SAP BTP Developer's Guide: Extending Fiori Elements with the Flexible Programming Model</title>
    <updated>2025-10-15T10:31:07.489000+02:00</updated>
    <author>
      <name>Navin_Krishnan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/44464</uri>
    </author>
    <content>&lt;DIV&gt;&lt;SPAN&gt;Are you leveraging the full potential of SAP Fiori Elements' Flexible Programming Model in your enterprise applications? While this powerful capability has been available for sometime now, many developers are still discovering how to effectively implement its extension points, building blocks, and controller extensions to solve real-world business requirements.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;If you've been curious about extending your Fiori elements applications beyond standard floorplans but weren't sure where to start, the&amp;nbsp;&lt;A href="https://help.sap.com/docs/btp/btp-developers-guide/btp-developers-guide?version=Cloud" target="_self" rel="noopener noreferrer"&gt;SAP BTP Developer's Guide&lt;/A&gt;&amp;nbsp;offers a comprehensive learning path that covers this and much more.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H1 id="toc-hId-1633659243"&gt;&lt;SPAN&gt;What is the Flexible Programming Model ?&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;The &lt;A href="https://sapui5.hana.ondemand.com/test-resources/sap/fe/core/fpmExplorer/index.html#/overview/introduction" target="_blank" rel="noopener nofollow noreferrer"&gt;Flexible Programming Model&lt;/A&gt; offers an extensive toolkit for extending Fiori elements applications beyond standard floorplans. It provides multiple ways to customize and enhance your applications while maintaining enterprise standards and framework compliance.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;The Flexible Programming Model encompasses four main areas:&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Extension Points:&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;including custom sections, actions, columns, header facets, dialogs, form elements, filters, pages, views, and KPI tags.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Building Blocks&lt;/STRONG&gt;:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;reusable fields such as forms, tables, charts, filter bars, and specialized controls that maintain framework compliance. These are consistently orchestrated by the framework, ensuring you automatically benefit from SAP Fiori compliance and standard application behavior like draft handling and side effects.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Controller Extensions&lt;/STRONG&gt;:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;for customizing edit flows, state handling, routing, navigation, and message handling - allowing you to override specific methods to enable more flexibility while preserving framework functionality.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP Fiori Elements Advanced Features:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;including sophisticated capabilities like Side Effects for dynamic UI behavior, UI.Hidden annotations for conditional visibility, UI.PartOfPreview annotations for optimized data loading, and enhanced Value Help configurations for improved user experience.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;When using the Flexible Programming Model to extend your Fiori elements applications, you automatically preserve all the enterprise-ready features that SAP Fiori Elements provides out of the box:&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;UL class="lia-list-style-type-square"&gt;&lt;LI&gt;&lt;SPAN&gt;Accessibility&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Internationalization&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Mobile Compatibility&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Performance Optimizations&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Integration&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Security&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Lifecycle Stability&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Test Automation Support&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;UX Consistency&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;and much more ...&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;The key advantage is that the Flexible Programming Model allows you to add custom functionality while maintaining all these enterprise features that would otherwise require significant manual implementation and ongoing maintenance in freestyle development.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;H3 id="toc-hId-1695311176"&gt;&lt;SPAN&gt;Complementary Development Approaches&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&lt;SPAN&gt;The &lt;A href="https://help.sap.com/docs/btp/btp-developers-guide/btp-developers-guide" target="_self" rel="noopener noreferrer"&gt;SAP BTP Developer's Guide&lt;/A&gt; provides clear recommendations for building Fiori applications that balance rapid development with flexibility needs. Rather than viewing these as competing alternatives, the guide positions them as complementary approaches that work together to deliver consistent, enterprise-grade solutions.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="fpm-options.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325597iA4676FB41FA8BC38/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="fpm-options.png" alt="fpm-options.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;FONT color="#333333"&gt;&lt;STRONG&gt;Use SAP Fiori elements for OData V4&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;to benefit from a presentation of a common UI and UX. This approach provides the foundation for rapid development while ensuring consistency across your application portfolio. Personalization and theming are automatically supported, giving users the flexibility they need without additional development effort.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;FONT color="#333333"&gt;&lt;STRONG&gt;For more flexibility, use SAP Fiori element's Flexible Programming Model&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;with or without SAPUI5 Freestyle. This approach allows you to extend beyond standard capabilities while maintaining the benefits of the Fiori elements framework. The Flexible Programming Model serves as the bridge between standard floorplans and complete customization.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;FONT color="#333333"&gt;&lt;STRONG&gt;SAP Fiori elements and SAPUI5 help you present one consistent solution experience&lt;/STRONG&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;to your customers, and you benefit from the upcoming designs and UX improvements automatically. This means your applications evolve with the platform without requiring manual updates to maintain modern standards.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;STRONG&gt;Important consideration&lt;/STRONG&gt;&lt;SPAN&gt;: Remember that even the simplest UI components or more complex ones like geographic maps have compliance requirements like accessibility and theming. When extending beyond standard Fiori elements capabilities, these requirements must be carefully maintained to ensure enterprise-grade applications.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;H3 id="toc-hId-1498797671"&gt;&lt;SPAN&gt;Enterprise-Grade Development on SAP BTP&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;The SAP BTP Developer's Guide serves as the comprehensive starting point for developing business applications on SAP Business Technology Platform. It provides essential recommendations and best practices that help developers navigate the complexities of enterprise application development.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Within this guide, the mission &lt;/SPAN&gt;&lt;A href="https://discovery-center.cloud.sap/missiondetail/4431/" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;SPAN&gt;Develop an Enterprise-Grade CAP Application Following the SAP BTP Developer's Guide&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;offers hands-on experience with critical enterprise development topics, including Change Tracking, Audit Logging, Attachments, Freestyle SAPUI5, Flexible Programming model and more.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;While the mission covers multiple enterprise development aspects, the Flexible Programming Model section provides particularly valuable insights for developers looking to extend Fiori elements applications.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;The learning scenarios are built around the &lt;/SPAN&gt;&lt;STRONG&gt;Incident Management application,&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;a practical business application where organizations can maintain and track incidents on behalf of their customers. This application already features a complete UI based on the SAP Fiori elements List Report Page floorplan, providing the perfect foundation to demonstrate how the Flexible Programming Model can enhance existing standard implementations.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;The mission showcases several key extension capabilities that go beyond standard Fiori elements floorplans:&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Extension Points: Custom Column&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Learn to extend the Incidents table in the List Report Page with a custom column. This custom column demonstrates the integration of the &lt;/SPAN&gt;&lt;A href="https://sapui5.hana.ondemand.com/#/api/sap.suite.ui.commons.MicroProcessFlow" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;SPAN&gt;MicroProcessFlow&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;control, allowing processors to track incident progress directly within the table view.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="intro-custom-column.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326648iA1E277FD2202C593/image-size/large?v=v2&amp;amp;px=999" role="button" title="intro-custom-column.png" alt="intro-custom-column.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Extension Points: Custom Header Facet&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Discover how to enhance the header section in the Object Page by adding a custom header facet. This implementation showcases the &lt;/SPAN&gt;&lt;A href="https://sapui5.hana.ondemand.com/#/api/sap.suite.ui.commons.MicroProcessFlow" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;MicroProcessFlow&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;control in the header area, providing processors with immediate visibility into incident progress.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="intro-custom-header.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326651i7B53E28408D56C8E/image-size/large?v=v2&amp;amp;px=999" role="button" title="intro-custom-header.png" alt="intro-custom-header.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Extension Points: Custom Action&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Implement a custom &lt;/SPAN&gt;&lt;STRONG&gt;Location&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;action in the Object Page that demonstrates practical integration of the &lt;/SPAN&gt;&lt;A href="https://sapui5.hana.ondemand.com/#/api/sap.ui.vbm.GeoMap" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;SPAN&gt;GeoMap&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;control. This custom action opens a dialog displaying customer locations, showing how to integrate specialized controls for business-specific functionality.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="intro-custom-action.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326652iAB3AAEBF3079B425/image-size/large?v=v2&amp;amp;px=999" role="button" title="intro-custom-action.png" alt="intro-custom-action.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Extension Points: Custom Section&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Add a comprehensive &lt;/SPAN&gt;&lt;STRONG&gt;Process Flow&lt;/STRONG&gt;&lt;SPAN&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;custom section to the Object Page. This section demonstrates the implementation of the &lt;/SPAN&gt;&lt;A href="https://sapui5.hana.ondemand.com/#/api/sap.suite.ui.commons.ProcessFlow" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;SPAN&gt;ProcessFlow&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;control, providing detailed visualization of incident workflows and status transitions.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="intro-custom-section.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326653iF00F609BC88704A7/image-size/large?v=v2&amp;amp;px=999" role="button" title="intro-custom-section.png" alt="intro-custom-section.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Controller Extension&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Learn to extend the Fiori Elements Object Page controller to customize standard behaviors. This section demonstrates how to override the edit flow while maintaining framework compliance and enterprise standards.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="intro-edit-flow.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326654i726A2A9BA2C63984/image-size/large?v=v2&amp;amp;px=999" role="button" title="intro-edit-flow.png" alt="intro-edit-flow.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;H1 id="toc-hId-1044118728"&gt;&lt;SPAN&gt;Conclusion&lt;/SPAN&gt;&lt;/H1&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;SPAN&gt;The mission&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;A href="https://discovery-center.cloud.sap/missiondetail/4431/" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;SPAN&gt;Develop an Enterprise-Grade CAP Application Following the SAP BTP Developer's Guide&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;provides a comprehensive learning experience that goes beyond traditional tutorials. By combining Flexible Programming Model techniques with other essential enterprise development skills, you'll be equipped to build applications that meet real-world business requirements while maintaining the highest standards of enterprise software development.&lt;/SPAN&gt;&lt;DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;SPAN&gt;Whether you're looking to extend existing Fiori elements applications or planning new enterprise solutions, this mission offers the practical, hands-on experience you need to master the art of enterprise application development on SAP BTP.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Happy Learning !&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-developer-s-guide-extending-fiori-elements-with-the-flexible/ba-p/14242403"/>
    <published>2025-10-15T10:31:07.489000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-teched-berlin-2025-da262-enabling-clean-core-development-with-sap-hana/ba-p/14244488</id>
    <title>SAP TechEd Berlin 2025: DA262-Enabling clean core development with SAP HANA Cloud and SAP Build Code</title>
    <updated>2025-10-15T11:51:18.065000+02:00</updated>
    <author>
      <name>shraddhashetty</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/44579</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;A couple of words about me:&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;My name is Shraddha Shetty and I’m a&amp;nbsp;Product Manager on the SAP HANA Product Management team, with a focus on Developer Experience. I began my journey at SAP in 2021 as a Developer and later transitioned into Product Management.&lt;/FONT&gt;&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Join My &lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1750944208146001fQIb" target="_self" rel="noopener noreferrer"&gt;Session&lt;/A&gt;!&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;DA262 | Enabling Clean Core Development with SAP HANA Cloud and SAP Build Code&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":spiral_calendar:"&gt;🗓&lt;/span&gt;&lt;STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;️ Wednesday, Nov 5 | 3:30 PM – 5:30 PM CET&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;What you will learn about:&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Join our hands-on workshop &lt;STRONG&gt;DA262 | Enabling Clean Core Development with SAP HANA Cloud and SAP Build Code&lt;/STRONG&gt; to explore how side-by-side extensions can help you innovate without compromising your clean core.&lt;/FONT&gt;&lt;/P&gt;
&lt;P&gt;In this hands-on session, you’ll explore how SAP HANA Cloud, the SAP Cloud Application Programming Model (CAP), and SAP Build Code work together to simplify and accelerate development. Through guided exercises, participants will learn to create full-stack applications, integrate business services, and extend SAP solutions with agility and intelligence. You’ll also get hands-on experience exploring HANA Cloud features such as adding native artifacts, and accessing data lake files to build smarter, data-driven applications.&lt;/P&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;By the end of the workshop, you’ll gain practical insights and skills to confidently build scalable, cloud-ready applications while maintaining a clean and extensible core. Don’t miss this opportunity to enhance your developer experience and unlock the full potential of SAP HANA Cloud and SAP Build Code.&lt;/FONT&gt;&lt;/P&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Co-speakers&lt;/STRONG&gt;:&lt;/FONT&gt;&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Thomas Hammer &amp;nbsp;– Lead Product Manager, SAP HANA Cloud, SAP SE&lt;/FONT&gt;&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Christoph Morgen – Senior Product Manager, SAP HANA Cloud AI, SAP SE&lt;/FONT&gt;&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Roman Belosludtsev – Product Manager, SAP HANA Cloud, SAP SE&lt;/FONT&gt;&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;&lt;STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Other related sessions I recommend:&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1750942224655001QASw" target="_self" rel="noopener noreferrer"&gt;DA261 | Unlocking AI-Driven Insights from Your Business Data in SAP HANA Cloud&lt;/A&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Hands-on Workshop&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;When: Tue, Nov 4 | 12:30 PM – 2:30 PM CET&lt;/FONT&gt;&lt;/P&gt;
&lt;HR /&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749162361982001F4ao" target="_self" rel="noopener noreferrer"&gt;DA200 | Help Future-Proof Your Database Landscape with SAP HANA Cloud&lt;/A&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Deep Dive&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;When: Wed, Nov 5 | 10:15 AM – 11:00 AM CET&lt;/FONT&gt;&lt;/P&gt;
&lt;HR /&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749163148352001SQuW" target="_self" rel="noopener noreferrer"&gt;DA202 | Extensibility at Scale: Build Intelligent Applications with SAP HANA Cloud&lt;/A&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Deep Dive&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;When: Wed, Nov 5 | 1:15 PM – 2:00 PM CET&lt;/FONT&gt;&lt;/P&gt;
&lt;HR /&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749152727860001w9vr" target="_self" rel="noopener noreferrer"&gt;ST115 | SAP HANA Cloud: The Database for Business AI&lt;/A&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Strategy Talk&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;When: Wed, Nov 5 | 2:15 PM – 2:40 PM CET&lt;/FONT&gt;&lt;/P&gt;
&lt;HR /&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749162869410001srCl" target="_self" rel="noopener noreferrer"&gt;DA201 | Accelerating Your AI Strategy with SAP HANA Cloud&lt;/A&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Deep Dive&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;When: Thu, Nov 6 | 9:00 AM – 9:45 AM CET&lt;/FONT&gt;&lt;/P&gt;
&lt;HR /&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1753711419407001DDdJ" target="_self" rel="noopener noreferrer"&gt;DA263 | SAP HANA Cloud: Advisors and Automation&lt;/A&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Hands-on Workshop&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;When: Thu, Nov 6 | 9:00 AM – 11:00 AM CET&lt;/FONT&gt;&lt;/P&gt;
&lt;HR /&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749153071344001t73s" target="_self" rel="noopener noreferrer"&gt;DA817 | What's Next for SAP HANA Cloud: Road Map and Innovation Highlights&lt;/A&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Road Map&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;When: Thu, Nov 6 | 1:30 PM – 1:55 PM CET&lt;/FONT&gt;&lt;/P&gt;
&lt;HR /&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1753711750909001NoWH" target="_self" rel="noopener noreferrer"&gt;DA904 | SAP HANA Cloud: A Database for SAP Business AI&lt;/A&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Demo Station&lt;/FONT&gt;&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif" size="3"&gt;Related community topic pages:&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/best-practice-collection-working-with-business-application-studio-bas-and/ba-p/13542813" target="_blank"&gt;Best Practice collection working with Business Application Studio(BAS) and HANA Deployment Infrastructure(HDI)&lt;/A&gt;&lt;/FONT&gt;&lt;/P&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Looking forward to seeing you! &lt;/FONT&gt;&lt;span class="lia-unicode-emoji" title=":waving_hand:"&gt;👋&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":sparkles:"&gt;✨&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/P&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Don’t miss this opportunity to get hands-on with SAP HANA Cloud and SAP Build Code, and learn how to extend your SAP landscape while keeping your core clean. Join us to gain practical skills, connect with experts, and see firsthand how to accelerate innovation in your applications. &lt;A href="https://www.sap.com/events/teched/berlin.html" target="_self" rel="noopener noreferrer"&gt;Register&lt;/A&gt; and be part of this interactive workshop.&lt;/FONT&gt;&lt;/P&gt;
&lt;H3 id="toc-hId-1891884516"&gt;&lt;FONT face="arial,helvetica,sans-serif" size="3"&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;Now let’s hear from you:&lt;/FONT&gt;&lt;/H3&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;As you gear up for SAP TechEd 2025, we’d love to hear your thoughts and experiences with SAP HANA Cloud and clean core development. Share your insights, ideas, and challenges with us:&lt;/FONT&gt;&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;When building full-stack applications, do you prefer CAP services or other development approaches? Why?&lt;/FONT&gt;&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;How do you currently manage data modeling and business logic in your SAP HANA Cloud applications&lt;/FONT&gt;&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;What are your expectations for SAP TechEd 2025, and which hands-on topics excite you the most?&lt;/FONT&gt;&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;&lt;STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Drop your thoughts in the comments below&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-teched-berlin-2025-da262-enabling-clean-core-development-with-sap-hana/ba-p/14244488"/>
    <published>2025-10-15T11:51:18.065000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/developer-news/sap-developer-news-16th-october-2025/ba-p/14246092</id>
    <title>SAP Developer News 16th October, 2025</title>
    <updated>2025-10-16T21:10:00.025000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1891940279"&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F9NHkJWfJskg%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D9NHkJWfJskg&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F9NHkJWfJskg%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="Devtoberfest, Gen AI Hub, Scavenger Hunt, CAP Sep Rel &amp;amp; Cust Influence Reqs | SAP Developer News" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-1695426774"&gt;&lt;SPAN&gt;DESCRIPTION&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;PODCAST:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; &lt;A href="https://podcast.opensap.info/sap-developers/2025/10/16/sap-developer-news-16th-october-2025/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://podcast.opensap.info/sap-developers/2025/10/16/sap-developer-news-16th-october-2025/&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Devtoberfest 2025 – Week 4&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Link 1 description: &lt;/SPAN&gt;&lt;A href="https://blogs.sap.com/2022/07/05/my-first-steps-with-btp-destinations-s-4hana-in-appgyver/" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://blogs.sap.com/2022/07/05/my-first-steps-with-btp-destinations-s-4hana-in-appgyver/&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Generative AI Hub basic trial available&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Basic trial link: &lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/artificial-intelligence/generative-ai-hub-trial.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://www.sap.com/products/artificial-intelligence/generative-ai-hub-trial.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Scavenger Hunt Final Mission&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Scavenger Hunt Blog Post: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/fun-for-week-1-the-devtoberfest-scavenger-hunt/ba-p/14183972" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest-blog-posts/fun-for-week-1-the-devtoberfest-scavenger-hunt/ba-p/14183972&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Fiori Design Principles: &lt;/SPAN&gt;&lt;A href="https://www.sap.com/design-system/fiori-design-web/discover/sap-design-system/vision-and-mission/design-principles" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://www.sap.com/design-system/fiori-design-web/discover/sap-design-system/vision-and-mission/design-principles&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Scavenger Hunt Tutorial: &lt;/SPAN&gt;&lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-scavenger-hunt..html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://developers.sap.com/tutorials/devtoberfest2025-scavenger-hunt..html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;CAP September 2025 Release&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Release notes &lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/releases/sep25" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://cap.cloud.sap/docs/releases/sep25&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Related blog post &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-cloud-application-programming-model-september-2025/ba-p/14242646" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-cloud-application-programming-model-september-2025/ba-p/14242646&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Customer Influence Requests&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Cross-Global Account Customer Registry Support for Subscriptions on SAP BTP: &lt;/SPAN&gt;&lt;A href="https://influence.sap.com/sap/ino/#/idea/357376/?section=sectionDetails" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://influence.sap.com/sap/ino/#/idea/357376/?section=sectionDetails&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1498913269"&gt;&lt;SPAN&gt;CHAPTER TITLES&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;0:00 Intro&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:10 Devtoberfest 2025 – Week 4&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:55 Generative AI Hub basic trial available&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1:56 Scavenger Hunt Final Mission&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;3:24 CAP September 2025 Release&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;8:04 Customer Influence Requests&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302399764"&gt;&lt;SPAN&gt;TRANSCRIPTION&lt;/SPAN&gt;&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Intro]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;This is the SAP Developer News for October 16th, 2025.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Kevin]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Hey everybody, week three of Devtoberfest is over and we're heading strong into the last week of Devtoberfest. So get ready for one more week packed with content, amazing talks, amazing sessions, more fun activities and a special treat for you on Friday next week. with the developer advocates sitting together, talking tech, making jokes. So watch out for the content for next week. Head over to the community and join us for the contest, for fun and for a lot of great education. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Nora]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;I have good news for everyone who wants to try out all the different Large language models out there. We have a free trial of SAP AI Launchpad connected to an AI core instance with generative AI hub access. That means you can in this free trial try out 26 different models of all the different large-Language model providers that we partner with. Now that includes models like GPT-5, O3, Gemini 2.5 and Cloud Sonnet 4. Now just as a reminder if you only want to try out SAP AI Core and Gen AI hub those are pay-per-use only anyway but if you want to have a chance to look at SAP AI Launchpad, which is essentially the UI of AI Core and Gen AI Hub, then this is your chance. The trial is activated for 30 days, and it lets you use the chat functionality, the prompt editor, the grounding module of the orchestration service, and obviously the orchestration service itself. So you can try it all the different features that we have available. And I'm going to link everything you need to know in the description. Make sure you try it out. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Daniel]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;we've reached the end of the devtoberfest scavenger hunt and after today you'll be able to solve for the secret phrase so here is the 10th and final mission take the 37x digits that you've collected so far and in the order you've collected them so far and you need to multiply them by a certain number that number is the number of fiori design principles that there are. I'll leave a link to the Fiori design page where you can find that answer, or you can Google it, or you can ask ChatGPT. Once you've done that, you will now have 38 hex digits, and you will be able to convert those using ASCII to the secret phrase. From there, you can win the 3,000 points by entering that phrase in the scavenger hunt tutorial. It's case sensitive and also space sensitive. So put it in exactly how you created it. I want to give a special shout out to my colleague, Srini, who's helped me all along the way, you might've seen him in previous developer news segments. And I've had a tremendous amount of fun creating the scavenger hunt and talking with you in the community. And I hope you've enjoyed completing it. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[DJ]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;greetings all you cap pirates i'm coming to you from a tunnel which reminds me sort of a cross between two films one from the late 60s and one from the 70s let us know in the comments to this video what you think those two films might be in my brain anyway another month another great CAP release September 2025 with CAP node.js at 9.4 now and CAP Java at 4.4 plenty of updates let me share some of the highlights of those updates in this release i'll start with the node.js runtime out of the box there are now default translations of error messages specifically for annotation based validations like assert mandatory for example there's been an improvement to streaming which was announced in the previous release this improvement simplifies the API somewhat and the implementation and documentation for Fiori support especially in the area of handler registration has been revised and improved now there's lots of cool stuff for the Java runtime too CAP Java and jdk25 are now happily together jdk is an lts a long-term support version that's jdk25 and you can configure SAP machine SAP machine for that by following the example in the release notes incidentally the cds services archetype supports creation of new CAP Java projects with jdk25 as the target runtime staying with Java for a second in the context of treating queries as first class citizens and embracing that best practice of push down to the database you can now aggregate values of associated entities directly in your CQL queries. How awesome is that? There are also some changes to the way CDS models are made available to a project into which they've been imported, making it easier and cleaner to use them. There are also plenty of other improvements for CAP Java. Check them out in the miscellaneous section there in CapEye. In the tools category, there are also some changes and additions. Now hybris one you need to pay particular attention to. When importing an EDMX-based API definition with CDS import, EDM.string type properties that don't have length restrictions are now mapped to CDS's string type rather than CDS's large string type as before. So you need to check whether your data still fits and be ready to change the type length or the type itself back to large string again the new SAP BTP application frontend service is now supported in the classic CAP way all you need to do is run cds add app front end and have all the heavy lifting done for you. Now, this phrase, it's annotations all the way down, came to me when I first learned about annotating annotations. The great thing is that now there's improved editor support for this. If you need it, you need it. And on the plugin front, the plugins for SAP Integration Suite, comma advanced event mesh for node.js and Java runtimes are now g8 generally available the culmination of a lot of hard work well done folks and last but not least the release notes themselves now contain a summary of capire updates earlier this month the devtoberfest session on the cap documentation given by Rene and Mahati told us, or Rene and Mahati themselves, announced that they were going to include a summary of updates to CAPire in the monthly release notes, because you've been asking for that, and they've delivered. So you can check out what's changed to the CAPire documentation in this new section of the release notes. Fantastic. So you can read all the details and more in the release notes themselves, available in the usual place, in Capire. Link in the description. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;FONT face="Arial" size="3" color="black"&gt;&lt;SPAN&gt;[Nico]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;FONT face="Arial" color="black"&gt;&lt;SPAN&gt;Hi, everyone, and welcome to the SAP Developer News. This is just a quick reminder to frequently check out the customer influence requests that are out there on influence.sap.com, and with your vote, or your own request, shape the future of SAP products. there's one request in particular I'd like to point out it's about cross global account subscriptions on BTP which is very useful for multi-tenant apps and if you think that one deserves a little more attention give it your upvote and I hope to talk to you soon bye.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/developer-news/sap-developer-news-16th-october-2025/ba-p/14246092"/>
    <published>2025-10-16T21:10:00.025000+02:00</published>
  </entry>
</feed>
