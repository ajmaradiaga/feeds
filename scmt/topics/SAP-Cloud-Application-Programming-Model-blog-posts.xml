<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Cloud-Application-Programming-Model-blog-posts.xml</id>
  <title>SAP Community - SAP Cloud Application Programming Model</title>
  <updated>2025-09-03T08:01:56.632139+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Cloud Application Programming Model/pd-p/9f13aee1-834c-4105-8e43-ee442775e5ce" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Cloud Application Programming Model blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/uploading-attachment-with-cap-js-attachment-plugins-but-via-external-app/ba-p/14147330</id>
    <title>Uploading attachment with cap-js/attachment plugins but via External App/Postman</title>
    <updated>2025-07-24T09:08:43.209000+02:00</updated>
    <author>
      <name>chrisobar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/845878</uri>
    </author>
    <content>&lt;P&gt;If anyone here are struggling uploading attachments via external app to &lt;STRONG&gt;cap-js/attachments&lt;/STRONG&gt;, I am writing this blog to showcase how to upload attachments on the plugins via external applications.&lt;/P&gt;&lt;P&gt;The blog shall include:&lt;/P&gt;&lt;P&gt;1. Pre-requisites&lt;/P&gt;&lt;P&gt;2. Example 1. via Postman&lt;/P&gt;&lt;P&gt;3. Example 2. via External App (React)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Pre-requisites: cap-js/attachment&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You have extended your current entity for example:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_0-1751980368296.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284030i3E65DD76A2FC1CE5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_0-1751980368296.png" alt="chrisobar_0-1751980368296.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Attachment entity accepts the following field below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_1-1751980478628.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284031iD0E50B9FD39F02D2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_1-1751980478628.png" alt="chrisobar_1-1751980478628.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The fields above are important and to be used for your JSON Body parameters (can leave status as blank as it uses '&lt;STRONG&gt;Unscanned&lt;/STRONG&gt;' as default). See below sample scenarios on how we can upload attachment:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Example 1. (via Postman)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;**Other API tools are doable&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In this case, we require an existing entry in our table/fiori app.&lt;/P&gt;&lt;P&gt;Here are the steps:&lt;/P&gt;&lt;P&gt;1. Retrieve a single entry from your entity, copy the link and add /YourAttachmentEntity that you extended. (On my case, discount_attachment)&lt;/P&gt;&lt;P&gt;Ex:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_3-1751981390255.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284056iBE13F1B966BBFC55/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_3-1751981390255.png" alt="chrisobar_3-1751981390255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. Follow the entity fields then replicate it, then attach your desired parameters on the body as raw - JSON format&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_4-1751981481494.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284061i18F93B46BA174AFC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_4-1751981481494.png" alt="chrisobar_4-1751981481494.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;(Convert your file to base64. In my case I attached an image, png format)&lt;/P&gt;&lt;P&gt;3. Send the request, you will see that it responded successfully. Go back to your Fiori app to verify if the attachment reflected:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_5-1751981587156.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284062i392735186A50F1A7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_5-1751981587156.png" alt="chrisobar_5-1751981587156.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_8-1751981935102.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284070i0538D102CDCD1200/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_8-1751981935102.png" alt="chrisobar_8-1751981935102.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_7-1751981734557.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284064iA81690ED011DFFEC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_7-1751981734557.png" alt="chrisobar_7-1751981734557.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Example 2. (External App)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I have developed a React App for POC purposes. In this scenario, the data should be created first, then update that same entry using the ID, then upload the attachment via HTTP POST.&amp;nbsp; Let's breakdown:&lt;/P&gt;&lt;P&gt;1. Upload attachment as input='file', bind it in form data including all the parameters:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_9-1751982052158.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284071iA0F0CE6822C0130A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_9-1751982052158.png" alt="chrisobar_9-1751982052158.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. Build your logic for your initial creation.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_10-1751982176378.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284073iE2AFE797AA5B9623/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_10-1751982176378.png" alt="chrisobar_10-1751982176378.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; My .ENV variable contains the base odata URL (/odata/v4/......, not the whole http url)&lt;/P&gt;&lt;P&gt;3. Convert the file from input='file' to base64 via JS logic, then bind the OData URL with your entity keys and the HTTP body parameters (refer to Attachment Entity fields and Postman example above).&amp;nbsp; then proceed OData call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_15-1751982778767.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284082i20CC907D75921644/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_15-1751982778767.png" alt="chrisobar_15-1751982778767.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;My form will display a successful message and it should reflect on the database/fiori app as well.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_13-1751982513662.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284080i196C2C1646A41D1A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_13-1751982513662.png" alt="chrisobar_13-1751982513662.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chrisobar_14-1751982541889.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284081i48304E0EF638EEFE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="chrisobar_14-1751982541889.png" alt="chrisobar_14-1751982541889.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This blog demonstrates how SAP CAP can interface seamlessly with external apps to enhance attachment handling across varied use cases. By abstracting the upload and retrieval logic via an API layer, the approach supports modular features in both admin dashboards and customer-facing applications. Despite initial challenges around payload structuring and authorization, the solution remains scalable, secure, and adaptable to different frontend contexts.&lt;/P&gt;&lt;P&gt;Let me know if you have any further questions or wish to communicate, just comment below the comment section.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/uploading-attachment-with-cap-js-attachment-plugins-but-via-external-app/ba-p/14147330"/>
    <published>2025-07-24T09:08:43.209000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-fix-npm-error-notarget-sap-hdi-deploy-when-you-create-a-cap-app-in/ba-p/14163890</id>
    <title>How to fix npm error notarget @sap/hdi-deploy when you create a CAP app in BAS</title>
    <updated>2025-07-28T05:04:05.688000+02:00</updated>
    <author>
      <name>Ryota_Ito</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1390198</uri>
    </author>
    <content>&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Update (July&amp;nbsp;2025):&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; Good news —&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;@sap/hdi-deploy@5.5.0&lt;/EM&gt;&lt;SPAN&gt; is now available on npm, so this &lt;/SPAN&gt;&lt;SPAN&gt;&lt;EM&gt;specific&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN&gt; error may have disappeared.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;&lt;STRONG&gt;But keep reading!&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; The root cause — a dependency pointing to a version that isn’t published yet—can happen again with future releases. The steps below show how to unblock yourself whenever npm throws a &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;notarget&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; error for an &lt;/SPAN&gt;&lt;EM&gt;@sap/hdi-deploy&lt;/EM&gt;&lt;SPAN&gt;&amp;nbsp;package.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1735993764"&gt;When do you see this error?&lt;/H2&gt;&lt;P&gt;1. In &lt;STRONG&gt;SAP Business Application Studio (BAS)&lt;/STRONG&gt; click &lt;STRONG&gt;File&lt;/STRONG&gt; → &lt;STRONG&gt;New Project from Template&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;2. Choose &lt;STRONG&gt;CAP Project&lt;/STRONG&gt; and fill in the project name, runtime (Node.js), database (HANA Cloud), etc.&lt;/P&gt;&lt;P&gt;3. Open the terminal and run:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add mta   # create files for Cloud Foundry / Kyma deploy
npm i         # install dependencies​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4.&lt;EM&gt; npm i&lt;/EM&gt; stops with this message:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm error code ETARGET
npm error notarget No matching version found for @sap/hdi-deploy@5.5.0.​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Even if you force "&lt;EM&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;/hdi-deploy": "5.4.2&lt;/EM&gt;" in &lt;EM&gt;package.json&lt;/EM&gt;, the error still appears.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="画像.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292368iE1A5C8AE579BC64F/image-size/large?v=v2&amp;amp;px=999" role="button" title="画像.png" alt="画像.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1539480259"&gt;Why does it happen?&lt;/H2&gt;&lt;P&gt;&lt;EM&gt;cds add mta&lt;/EM&gt; adds this line to &lt;STRONG&gt;devDependencies&lt;/STRONG&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;"@sap/cds-dk": "&amp;gt;=8"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;/cds-dk&lt;/EM&gt; version &lt;STRONG&gt;8.x&lt;/STRONG&gt; asks for &lt;EM&gt;&lt;STRONG&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;/hdi-deploy@5.5.0&lt;/STRONG&gt;&lt;/EM&gt;, but 5.5.0 is &lt;STRONG&gt;not yet published on npm&lt;/STRONG&gt;. So npm cannot find it and throws &lt;STRONG&gt;ETARGET&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1342966754"&gt;The 3‑line fix&lt;/H2&gt;&lt;P&gt;1.&amp;nbsp; (Optional) clean old modules and cache:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;rm -rf node_modules package-lock.json
npm cache clean --force&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2.&amp;nbsp;Install the latest &lt;STRONG&gt;cds-dk&lt;/STRONG&gt; (today it is 9.1.3):&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm install -D @sap/cds-dk@latest&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3.&amp;nbsp;Install the rest:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;cds-dk &lt;STRONG&gt;9.x&lt;/STRONG&gt;&lt;/EM&gt; points to &lt;EM&gt;@sap/hdi-deploy &lt;STRONG&gt;5.4.2&lt;/STRONG&gt;&lt;/EM&gt;, which exists, so the install succeeds.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1146453249"&gt;Example package.json&lt;/H2&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "scripts": {
    "start": "cds run"
  },
  "dependencies": {
    "@sap/cds": "^7",
    "@sap/hana-client": "^2",
    "@sap/xssec": "^3"
  },
  "devDependencies": {
    "@sap/cds-dk": "^9.1.3"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-949939744"&gt;More Information&lt;/H2&gt;&lt;P&gt;SAP Community Q&amp;amp;A (same issue): &lt;A href="https://community.sap.com/t5/technology-q-a/generate-cap-project-in-bas-with-error-sap-hdi-deploy-5-4-2-not-match/qaq-p/14062673" target="_blank"&gt;https://community.sap.com/t5/technology-q-a/generate-cap-project-in-bas-with-error-sap-hdi-deploy-5-4-2-not-match/qaq-p/14062673&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-753426239"&gt;Wrap‑up&lt;/H2&gt;&lt;P&gt;Next time you hit the &lt;EM&gt;@sap/hdi-deploy &lt;/EM&gt;&lt;STRONG&gt;notarget&lt;/STRONG&gt; error, just remember: &lt;STRONG&gt;upgrade &lt;EM&gt;@sap/cds-dk&lt;/EM&gt;&lt;/STRONG&gt; and you are done.&lt;/P&gt;&lt;P&gt;If this post helped you, please give Kudos and leave a comment! &lt;span class="lia-unicode-emoji" title=":raising_hands:"&gt;🙌&lt;/span&gt;&lt;/P&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-fix-npm-error-notarget-sap-hdi-deploy-when-you-create-a-cap-app-in/ba-p/14163890"/>
    <published>2025-07-28T05:04:05.688000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/getting-started-with-unit-testing-in-sap-cap-java-applications/ba-p/14164240</id>
    <title>Getting Started with Unit Testing in SAP CAP Java Applications</title>
    <updated>2025-07-28T11:15:44.566000+02:00</updated>
    <author>
      <name>Anjali_Pathak</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2043652</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Understanding SAP CAP and SAP CAP Java Framework&lt;BR /&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;SAP Cloud Application Programming (CAP)&lt;/STRONG&gt; is a full-stack framework for building enterprise cloud apps with Java or Node.js, using CDS for modeling and offering built-in persistence, APIs, security, and seamless SAP BTP deployment.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The &lt;STRONG&gt;SAP CAP Java&lt;/STRONG&gt; &lt;STRONG&gt;Framework&lt;/STRONG&gt;, based on Spring Boot, enables Java developers to create CDS models, auto-generate services, and implement business logic, supporting multitenancy, messaging, and flexible database integration.&lt;BR /&gt;&lt;BR /&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Target Audience&lt;BR /&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;This article is for developers, partners, and customers building &lt;STRONG&gt;SAP CAP Java&lt;/STRONG&gt; applications, focusing on unit testing with &lt;STRONG&gt;Test-Driven Development (TDD)&lt;/STRONG&gt; to ensure robust, test-first best practices.&lt;/P&gt;&lt;P class=""&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Understanding Unit Testing and Test-Driven Development&lt;BR /&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Unit Testing&lt;/STRONG&gt; involves verifying individual components or functions of a program in isolation to ensure they work correctly. It helps catch bugs early, supports safe code changes, and boosts overall reliability. Automated and fast, unit tests are fundamental to test-driven development and continuous integration.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Test-Driven Development (TDD)&lt;/STRONG&gt; is a software development approach where we write tests before writing the actual code. We first create a failing test (Red), then write just enough code to pass it (Green), and finally refactor the code for improvement (Refactor). This cycle ensures better code quality, design, and test coverage from the start.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Benefits:&lt;BR /&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Catches bugs early&lt;/LI&gt;&lt;LI&gt;Improves code quality&lt;/LI&gt;&lt;LI&gt;Simplifies maintenance&lt;/LI&gt;&lt;LI&gt;Boosts developer confidence&lt;/LI&gt;&lt;LI&gt;Speeds up delivery&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Getting Started with Test-Driven Development (TDD)&lt;BR /&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;Consider a system with three services:&lt;BR /&gt;&lt;STRONG&gt;Books Service:&lt;/STRONG&gt; Read-only catalog of books and authors for end users.&lt;BR /&gt;&lt;STRONG&gt;Orders Service:&lt;/STRONG&gt; Manage orders—view, create, delete.&lt;BR /&gt;&lt;STRONG&gt;Admin Service:&lt;/STRONG&gt; Full CRUD for products, authors, and categories.&lt;/P&gt;&lt;P class=""&gt;Each service is focused on a single responsibility, making them ideal for TDD.&lt;/P&gt;&lt;P class=""&gt;For detailed guidance on creating the above described SAP CAP Java application, please&amp;nbsp;&lt;SPAN class=""&gt;refer to the tutorial:&amp;nbsp;&lt;A href="https://developers.sap.com/mission.cap-java-app.html" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/mission.cap-java-app.html&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;In&lt;STRONG&gt; Test-Driven Development (TDD)&lt;/STRONG&gt;, we start by clearly defining the expected behaviour of a feature through test cases before writing any production code. This means we write tests that initially fail because the functionality doesn’t exist yet.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;For example, &lt;STRONG&gt;when adding stock validation and reduction in the Orders Service&lt;/STRONG&gt;, we begin by outlining key scenarios as test cases:&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;STRONG&gt;Book Does Not Exist:&lt;/STRONG&gt; The test verifies that the system throws an error if an order contains a non-existent book.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Insufficient Stock:&lt;/STRONG&gt; The test ensures an error is raised when the requested quantity exceeds available stock.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Successful Stock Update:&lt;/STRONG&gt; The test confirms that stock is properly updated when the order is valid.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;The test class below uses &lt;STRONG&gt;JUnit&lt;/STRONG&gt; and &lt;STRONG&gt;Mockito&lt;/STRONG&gt; to define above mentioned expected behaviour for the "&lt;STRONG&gt;validateBookAndDecreaseStock"&lt;/STRONG&gt; method in the &lt;STRONG&gt;Orders Service&lt;/STRONG&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;package customer.bookstore.handlers;

import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.Arrays;
import java.util.Optional;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import com.sap.cds.Result;
import com.sap.cds.ql.cqn.CqnSelect;
import com.sap.cds.ql.cqn.CqnUpdate;
import com.sap.cds.services.ServiceException;
import com.sap.cds.services.persistence.PersistenceService;

import cds.gen.ordersservice.OrderItems;
import cds.gen.sap.capire.bookstore.Books;

class OrdersServiceTest {

	@Mock
	private PersistenceService db;

	@InjectMocks
	private OrdersService ordersService;

	@BeforeEach
	void setUp() {
		MockitoAnnotations.openMocks(this);
	}

	@Test
	void testValidateBookAndDecreaseStock_BookDoesNotExist() {
		// Arrange
		OrderItems item = OrderItems.create();
		item.setBookId("book1");
		item.setAmount(2);

		Result result = mock(Result.class);
		when(db.run(any(CqnSelect.class))).thenReturn(result);

		// Act &amp;amp; Assert
		ServiceException exception = assertThrows(ServiceException.class, () -&amp;gt; {
			ordersService.validateBookAndDecreaseStock(Arrays.asList(item));
		});

		assertEquals("Book does not exist", exception.getMessage());
	}

	@Test
	void testValidateBookAndDecreaseStock_NotEnoughStock() {
		// Arrange
		OrderItems item = OrderItems.create();
		item.setBookId("book1");
		item.setAmount(5);

		Books book = Books.create();
		book.setStock(3);

		Result result = mock(Result.class);
		when(db.run(any(CqnSelect.class))).thenReturn(result);
		when(result.first(Books.class)).thenReturn(Optional.of(book));

		// Act &amp;amp; Assert
		ServiceException exception = assertThrows(ServiceException.class, () -&amp;gt; {
			ordersService.validateBookAndDecreaseStock(Arrays.asList(item));
		});

		assertEquals("Not enough books on stock", exception.getMessage());
	}

	@Test
	void testValidateBookAndDecreaseStock_SuccessfulStockUpdate() {
		// Arrange
		OrderItems item = OrderItems.create();
		item.setBookId("book1");
		item.setAmount(2);

		Books book = Books.create();
		book.setStock(5);

		Result result = mock(Result.class);
		when(db.run(any(CqnSelect.class))).thenReturn(result);
		when(result.first(Books.class)).thenReturn(Optional.of(book));

		// Act
		assertDoesNotThrow(() -&amp;gt; ordersService.validateBookAndDecreaseStock(Arrays.asList(item)));

		// Assert
		assertEquals(3, book.getStock());
		verify(db, times(1)).run(any(CqnUpdate.class));
	}
	
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Initially, the test cases will fail (as shown in the image below) as we have not implemented the functionality yet.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Anjali_Pathak_0-1753693277839.png" style="width: 443px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292502i8440DFC03D519972/image-dimensions/443x162?v=v2" width="443" height="162" role="button" title="Anjali_Pathak_0-1753693277839.png" alt="Anjali_Pathak_0-1753693277839.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Now, let us make the test cases work by writing the functional logic.&lt;BR /&gt;The following method is implemented based on the previously defined test cases, completing the TDD cycle by writing just enough logic to make all tests pass.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;package customer.bookstore.handlers;

import java.util.List;

import org.springframework.stereotype.Component;

import com.sap.cds.ql.Select;
import com.sap.cds.ql.Update;
import com.sap.cds.ql.cqn.CqnSelect;
import com.sap.cds.ql.cqn.CqnUpdate;
import com.sap.cds.services.ErrorStatuses;
import com.sap.cds.services.ServiceException;
import com.sap.cds.services.cds.CqnService;
import com.sap.cds.services.handler.EventHandler;
import com.sap.cds.services.handler.annotations.Before;
import com.sap.cds.services.handler.annotations.ServiceName;
import com.sap.cds.services.persistence.PersistenceService;

import cds.gen.ordersservice.OrderItems;
import cds.gen.ordersservice.OrderItems_;
import cds.gen.ordersservice.OrdersService_;
import cds.gen.sap.capire.bookstore.Books;
import cds.gen.sap.capire.bookstore.Books_;
@Component
@ServiceName(OrdersService_.CDS_NAME)
public class OrdersService implements EventHandler {

	private final PersistenceService db;

	OrdersService(PersistenceService db) {
		this.db = db;
	}

	@Before(event = CqnService.EVENT_CREATE, entity = OrderItems_.CDS_NAME)
	public void validateBookAndDecreaseStock(List&amp;lt;OrderItems&amp;gt; items) {
		for (OrderItems item : items) {
			String bookId = item.getBookId();
			Integer amount = item.getAmount();

			// check if the book that should be ordered is existing
			CqnSelect sel = Select.from(Books_.class).columns(b -&amp;gt; b.stock()).where(b -&amp;gt; b.ID().eq(bookId));
			Books book = db.run(sel).first(Books.class)
					.orElseThrow(() -&amp;gt; new ServiceException(ErrorStatuses.NOT_FOUND, "Book does not exist"));

			// check if order could be fulfilled
			int stock = book.getStock();
			if (stock &amp;lt; amount) {
				throw new ServiceException(ErrorStatuses.BAD_REQUEST, "Not enough books on stock");
			}

			// update the book with the new stock, means minus the order amount
			book.setStock(stock - amount);
			CqnUpdate update = Update.entity(Books_.class).data(book).where(b -&amp;gt; b.ID().eq(bookId));
			db.run(update);
		}
	}
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;We can now re-run the test cases to ensure the implementation satisfies all defined scenarios and that all tests pass successfully.&lt;BR /&gt;As per the TDD cycle, this is also the stage to &lt;STRONG&gt;refactor&lt;/STRONG&gt; the code, improving readability and structure without changing behaviour.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Anjali_Pathak_1-1753693552451.png" style="width: 451px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292511iE7B20357BFF49ED8/image-dimensions/451x159?v=v2" width="451" height="159" role="button" title="Anjali_Pathak_1-1753693552451.png" alt="Anjali_Pathak_1-1753693552451.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Testing the Code Coverage&lt;BR /&gt;&lt;/STRONG&gt;&lt;/FONT&gt;Following the implementation of the logic using the TDD methodology, code coverage has been assessed using the JaCoCo plugin, as illustrated in the image below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Anjali_Pathak_2-1753693678632.png" style="width: 689px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292514i2F39A2CD8304E5EA/image-dimensions/689x166?v=v2" width="689" height="166" role="button" title="Anjali_Pathak_2-1753693678632.png" alt="Anjali_Pathak_2-1753693678632.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Conclusion&lt;BR /&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class=""&gt;This guide helps you in getting started with writing and organizing tests, mocking dependencies, and enhancing code reliability in SAP CAP Java applications. With these core practices in place, you're well-prepared to develop and maintain robust, testable SAP CAP Java solutions.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/getting-started-with-unit-testing-in-sap-cap-java-applications/ba-p/14164240"/>
    <published>2025-07-28T11:15:44.566000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-look-back-at-codeconnect-2025/ba-p/14161110</id>
    <title>A Look Back At CodeConnect 2025</title>
    <updated>2025-07-28T14:30:39.741000+02:00</updated>
    <author>
      <name>SimonVLaursen</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/119538</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1606844488"&gt;A Look Back At CodeConnect 2025&lt;/H1&gt;&lt;P&gt;&lt;EM&gt;It's been almost 2 weeks now since I participated in the 2025 CodeConnect event, which was actually my first in-person CodeConnect ever.&lt;/EM&gt;&lt;BR /&gt;&lt;EM&gt;I would've participated in person sooner, but getting tickets is akin to trying to get the most popular item on Black Friday, it requires speed, precision and luck!&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;But enough rambling about the tickets! Let's take a look back at my journey to CodeConnect 2025.&lt;/EM&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1539413702"&gt;UI5Con 2025&lt;/H2&gt;&lt;P&gt;I'm going to skip the very first day of CodeConnect, mainly due to it being spent in a car for 16 hours, as me and my colleagues made the journey from the northern part of Jutland to St. Leon Rot.&lt;BR /&gt;So for us, the conference didn't start until day 2 with UI5Con, and that was some start.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image (5).jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290732i8A23A75D2E4027DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image (5).jpeg" alt="Image (5).jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Upon arrival at the building, it was straight into networking and trying to decide what sessions were most interesting to participate in.&lt;BR /&gt;We ended up doing a divide and conquer strategy in our group to get the most out of the day, with of course a focus on getting to the hands-on sessions.&lt;/P&gt;&lt;P&gt;My day quickly became side-tracked as I caught up with both old and new faces in my effort to connect with all the other developers present at the event.&lt;BR /&gt;Which, to be honest, for a mostly backend/cloud guy like me wasn't all bad. While I do enjoy a tango with the frontend from time to time, my heart belongs to what goes on behind the scenes.&lt;/P&gt;&lt;P&gt;But I did catch a lot of good talks still; so here are my take-aways from the first real day at CodeConnect:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Ownership of styling is slowly being handed back to the developer, meaning we can now make proper custom components for UI5 that style correctly with the themes such as Horizon.&lt;/LI&gt;&lt;LI&gt;Still no clear release date for UI5 v2, but we do have a legacy free 1.136 out there now that we can utilize and prepare with&lt;/LI&gt;&lt;LI&gt;Promise for UI5 developers that keep in line with the UI5 Linter, that their code will be lift and shift (i.e. go use the linter asap!)&lt;/LI&gt;&lt;LI&gt;The UI5 repository has completed its moving phase and is now living in its own repository&lt;/LI&gt;&lt;LI&gt;Accessibility, much like everywhere else in the developer space at the moment, is the talk of the town, and SAP is doing a lot of improvements on this front&lt;/LI&gt;&lt;LI&gt;2 test runners were presented as the replacements for the deprecated Karma runner. I know that I am leaning the most towards the WDI5 route due to it working as a more complete suite.&lt;/LI&gt;&lt;LI&gt;Webcomponents are the main focus going forward, and even though there is no timestamp on it, it seems like it will replace many of our current components going forward&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;That was pretty much my experience and take-aways for the first day there, and with it we wrapped up the UI5Con with some great food before heading back to the hotel.&lt;BR /&gt;The next for me, I knew would be something special.&lt;/P&gt;&lt;H2 id="toc-hId-1342900197"&gt;reCAP 2025&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image (4).jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290725i12EDCA87F0BC4BA9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image (4).jpeg" alt="Image (4).jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Second day for me at CodeConnect started out with a great opening key note by Daniel Hutzel. Although he ran out of time by the end, I wish we could've listened to him for just a little while longer.&lt;/P&gt;&lt;P&gt;The key take-away of this keynote however, was extremely clear. Over the last year, the focus by the CAP team has really been on minimizing the footprint of the CAP/CDS install while optimizing and improving the feature set of the framework.&lt;BR /&gt;And from what we were presented, that definitely looked like it came out as a success. As a developer that uses CAP on a daily basis, both for plugin development and end-user projects, I can definitely say that I have enjoyed the improvements so far.&lt;/P&gt;&lt;P&gt;So a kudos to the CAP team is definitely in order on this! (Now we just need it to be open source!)&lt;/P&gt;&lt;P&gt;Unfortunately, I did not have as much time to participate in the many sessions of this day, as much like the day before, the event became more of a networking experience.&lt;BR /&gt;The sessions I did catch however, were absolutely great and definitely something that you should catch up on if you have the chance;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Both sessions by Mike Zaschka (just always a good listen and everybody loves open source!)&lt;/LI&gt;&lt;LI&gt;CAP Tools session by Christian Georgi (because you cannot be a good developer without knowing your tools)&lt;/LI&gt;&lt;LI&gt;Server-side Pre-rendering by Volker Buzek and Wouter Lemaire (a great session with insights into another great open source initiative)&lt;/LI&gt;&lt;LI&gt;CAP Best vs Bad Practices by Daniel Hutzel&lt;/LI&gt;&lt;LI&gt;Gain a superpower by learning how to harness the CDS REPL by DJ Adams (seriously, learn REPL)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;While these were the only sessions I managed to catch, I did however experience something extremely important during the reCAP event, and that was the community.&lt;/P&gt;&lt;P&gt;I got to connect with so many great people and talk about the passion of this side of the industry, and the love we all share for opens source technologies.&lt;/P&gt;&lt;P&gt;I even got the chance to appear on the &lt;A href="https://youtu.be/0PUDy-TkpiQ" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Developer News&lt;/A&gt; to share my own open source contribution (&lt;A href="https://www.linkedin.com/posts/simon-vestergaard-laursen-7b98406a_im-excited-to-announce-the-cap-mcp-plugin-activity-7345337883202879488-NAhN?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAAA63yH0BMm6ssu6DfY9QWAt5VYMMUO0YUu4" target="_self" rel="nofollow noopener noreferrer"&gt;MCP Plugin for CAP&lt;/A&gt;).&lt;/P&gt;&lt;P&gt;And that is something I wouldn't trade for anything.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image (3).jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290724iB2E249D2662D9D4C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image (3).jpeg" alt="Image (3).jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1146386692"&gt;You Should Attend&lt;/H2&gt;&lt;P&gt;I hope it is clear from my post here that going to CodeConnect is an experience, no matter how you plan it. It is an event filled with great people and some great discussions around the subjects we all work with on a daily basis.&lt;/P&gt;&lt;P&gt;Never in a million years would I have imagined that going to CodeConnect would have resulted in me getting to participate in the SAP Developer News, nor that I would get to have great open discussions with other open source contributors.&lt;BR /&gt;It is definitely worth it, so if you get the chance I highly recommend that you participate!&lt;/P&gt;&lt;P&gt;Hopefully I will get the chance to contribute to the speakers list next year!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image (2).jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290722iE880761F19A2E83E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image (2).jpeg" alt="Image (2).jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-look-back-at-codeconnect-2025/ba-p/14161110"/>
    <published>2025-07-28T14:30:39.741000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/writing-sap-cap-services-in-kotlin/ba-p/14165709</id>
    <title>Writing SAP CAP services in Kotlin</title>
    <updated>2025-07-30T12:22:46.312000+02:00</updated>
    <author>
      <name>sam_devlin67</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/243259</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1606969396"&gt;Introduction&lt;/H1&gt;&lt;P&gt;SAP CAP has become a very popular way to write BTP services &amp;amp; is available in &lt;A href="https://cap.cloud.sap/docs/node.js/" target="_blank" rel="noopener nofollow noreferrer"&gt;Node.js&lt;/A&gt; and &lt;A href="https://cap.cloud.sap/docs/java/getting-started" target="_blank" rel="noopener nofollow noreferrer"&gt;Java&lt;/A&gt; flavours. I became curious recently if anyone had tried to write a CAP service using &lt;A href="https://kotlinlang.org/" target="_blank" rel="noopener nofollow noreferrer"&gt;Kotlin&lt;/A&gt;, a JetBrains developed language which also runs on the JVM. Kotlin supports &lt;A href="https://www.baeldung.com/kotlin/java-interoperability" target="_blank" rel="noopener nofollow noreferrer"&gt;interoperability with Java&lt;/A&gt;, which in theory should mean that we can write our CAP service code in Kotlin, right?&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1410455891"&gt;Setting up our test service&lt;/H1&gt;&lt;P&gt;Let's start by running the CAP Java Maven archectype provided in the &lt;A href="https://cap.cloud.sap/docs/java/getting-started#run-the-cap-java-maven-archetype" target="_blank" rel="noopener nofollow noreferrer"&gt;getting started documentation&lt;/A&gt;, using the following command. When this command is run, we will be prompted for a 'groupId' and an 'artefactId'. I used 'com.sap.test' and 'ktcap', but feel free to use whatever values you want.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;mvn archetype:generate -DarchetypeArtifactId="cds-services-archetype" -DarchetypeGroupId="com.sap.cds" -DarchetypeVersion="RELEASE" -DinteractiveMode=true&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once the process has completed you should see a new CAP Java project contained within a subfolder, but if you open it in an IDE you'll notice that we don't have any code or schema definitions. Luckily the getting started docs also provide us with a CDS Maven plugin to give us a simple bookstore example.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;mvn com.sap.cds:cds-maven-plugin:add -Dfeature=TINY_SAMPLE&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now we should have some entities defined in the &lt;FONT face="courier new,courier"&gt;db/data-model.cds&lt;/FONT&gt; file, as well as a handler Java file at &lt;FONT face="courier new,courier"&gt;srv/src/java/.../handlers/CatalogServiceHandler.java&lt;/FONT&gt;. Let's try to build &amp;amp; run the code to make sure we have a working service.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;mvn spring-boot:run&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Your code should build successfully &amp;amp; once you see the following log, your server is started.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;INFO 81621 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Navigate to &lt;A href="http://localhost:8080" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080&lt;/A&gt;&amp;nbsp;in your browser and click on the "Books" OData endpoint. You should see some data, similar to the below screenshot. &lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-07-29 at 15.34.17.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293413i192F8C5765E11770/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-29 at 15.34.17.png" alt="Screenshot 2025-07-29 at 15.34.17.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1343025105"&gt;A Quick note for IntelliJ users&lt;/H2&gt;&lt;P&gt;You may notice when you try to look at the handler code in IntelliJ that you are seeing a lot of errors, similar to the screenshot below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-07-29 at 15.38.36.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293416iDB9A547FC9E643E1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-29 at 15.38.36.png" alt="Screenshot 2025-07-29 at 15.38.36.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When the CAP build happens (which it does as part of our previous maven command) it generates a lot of new java files located in the src/gen folder. Because IntelliJ doesn't know about this, it doesn't understand all of the references in our source code. You can easily resolve this issue by going to the &lt;FONT face="courier new,courier"&gt;src/gen/java&lt;/FONT&gt; folder in the "Project" panel of IntelliJ, right clicking the folder and selecting "Mark Directory as" &amp;gt; "Generated sources root".&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-07-29 at 15.43.15.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293419i447D6BD585327CE9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-29 at 15.43.15.png" alt="Screenshot 2025-07-29 at 15.43.15.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1017428881"&gt;Inspecting the handler code&lt;/H1&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;@Component
@ServiceName(CatalogService_.CDS_NAME)
public class CatalogServiceHandler implements EventHandler {

	@After(event = CqnService.EVENT_READ)
	public void discountBooks(Stream&amp;lt;Books&amp;gt; books) {
		books.filter(b -&amp;gt; b.getTitle() != null &amp;amp;&amp;amp; b.getStock() != null)
		.filter(b -&amp;gt; b.getStock() &amp;gt; 200)
		.forEach(b -&amp;gt; b.setTitle(b.getTitle() + " (discounted)"));
	}

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The sample handler code CAP gave us is pretty straightforward. Basically what we need to know is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The class is annotated as a "&lt;A href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Component.html" target="_blank" rel="noopener nofollow noreferrer"&gt;Component&lt;/A&gt;", which will enable the class to be automatically detected and registered as a spring bean in the Spring Application Context.&lt;/LI&gt;&lt;LI&gt;The class implements an interface &lt;FONT face="courier new,courier"&gt;EventHandler&lt;/FONT&gt;&amp;nbsp;which enables CAP to distinguish the spring bean as one that may contain event handler methods.&lt;/LI&gt;&lt;LI&gt;It is also annotated with &lt;FONT face="courier new,courier"&gt;@ServiceName&lt;/FONT&gt;. This tells CAP for which service the handler functions should be registered. In our case we have only defined one service; &lt;FONT face="courier new,courier"&gt;CatalogService&lt;/FONT&gt;, in the srv folder.&lt;/LI&gt;&lt;LI&gt;Finally we have a function which appends "(discounted)" to any book with more than 200 copies in stock. This function is marked with the&amp;nbsp;&lt;FONT face="courier new,courier"&gt;@After&lt;/FONT&gt; annotation, which registers the function as a handler to be executed after the &lt;FONT face="courier new,courier"&gt;On&lt;/FONT&gt; handlers.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Let's try to do something similar in Kotlin.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-820915376"&gt;Basic Kotlin Handler&lt;/H1&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;// src/main/java/com/sap/test/ktcap/handlers/TestKotlinHandler.kt

package com.sap.test.ktcap.handlers

import cds.gen.catalogservice.Books
import cds.gen.catalogservice.CatalogService_
import com.sap.cds.services.cds.CqnService
import com.sap.cds.services.handler.EventHandler
import com.sap.cds.services.handler.annotations.After
import com.sap.cds.services.handler.annotations.ServiceName
import org.springframework.stereotype.Component
import java.util.stream.Stream

@Component
@ServiceName(CatalogService_.CDS_NAME)
class TestKotlinHandler: EventHandler {

    @After(event = [CqnService.EVENT_READ])
    fun appendKotlinStr(books: Stream&amp;lt;Books&amp;gt;){
        books.forEach { b -&amp;gt; b.title += " was processed by Kotlin handler" }
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Here is a basic Kotlin handler implementation that should simply append some text to the title field of all books returned to the client. When you create this Kotlin file, IntelliJ will detect that we do not have Kotlin configured in our project. Click "configure" on the warning to handle this automatically or alternatively you can manually add kotlin as a dependency in the &lt;FONT face="courier new,courier"&gt;pom.xml&lt;/FONT&gt;. With kotlin configured for our project, we can build &amp;amp; run the CAP service as before and navigate to the Books endpoint.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-07-29 at 16.31.52.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293448i63D2D81B6F904928/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-29 at 16.31.52.png" alt="Screenshot 2025-07-29 at 16.31.52.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Looks like our handler ran as expected! Inspecting the logs we can also see that the handler was registered to the Cds Runtime as expected.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;INFO 89519 --- [  restartedMain] c.s.c.s.impl.runtime.CdsRuntimeImpl      : Registered handler class com.sap.test.ktcap.handlers.TestKotlinHandler&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;With this first handler we have proven that our Kotlin class could be registered as a Spring Bean, a handler in the Cds Runtime and that it can exist alongside other Java code in our service.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-624401871"&gt;Replacing the Java Handler with Kotlin&lt;/H1&gt;&lt;P&gt;If you look closer at our previous handler, you may notice there is one issue with our implementation; The handler is still accepting&amp;nbsp;&lt;FONT face="courier new,courier"&gt;Stream&amp;lt;Books&amp;gt;&lt;/FONT&gt;&amp;nbsp;, a &lt;EM&gt;Java&lt;/EM&gt; steam. So although we have implemented our handler in Kotlin, we are not yet using the Kotlin standard library structures to process the data. Let's see if we can achieve the original Java handler functionality by re-writing our Kotlin handler.&lt;/P&gt;&lt;P&gt;As per the CAP documentation, we don't actually need to accept a stream in our function signature - we can accept any Collection or a singular cds type (if we know we are only dealing with one item). So let's try to use a Kotlin List and see if the handler behaves as it did before.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;@After(event = [CqnService.EVENT_READ])
fun appendKotlinStr(books: MutableList&amp;lt;Books&amp;gt;)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Recompiling &amp;amp; running the code gives us the same behaviour as before, so we should be able to continue using collections from the Kotlin standard library in our final implementation.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;package com.sap.test.ktcap.handlers

import cds.gen.catalogservice.Books
import cds.gen.catalogservice.CatalogService_
import com.sap.cds.services.cds.CqnService
import com.sap.cds.services.handler.EventHandler
import com.sap.cds.services.handler.annotations.After
import com.sap.cds.services.handler.annotations.ServiceName
import org.springframework.stereotype.Component

@Component
@ServiceName(CatalogService_.CDS_NAME)
class TestKotlinHandler: EventHandler {

    @After(event = [CqnService.EVENT_READ])
    fun appendKotlinStr(books: MutableList&amp;lt;Books&amp;gt;){
        books
            .filter { b -&amp;gt; b.title != null &amp;amp;&amp;amp; b.stock != null }
            .filter { b -&amp;gt; b.stock &amp;gt; 200 }
            .forEach { b -&amp;gt; b.title += " was processed by Kotlin handler" }
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp; And a final compile &amp;amp; run to check that we get the result we expect..&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-07-30 at 11.02.13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293815i9BC3BA995CF6FAE9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-30 at 11.02.13.png" alt="Screenshot 2025-07-30 at 11.02.13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Nice! Our handler is now affecting only the records with more than 200 copies in stock, just like the original Java handler. The only difference is that we are not using a stream, which we can easily introduce by changing line 17 to &lt;FONT face="courier new,courier"&gt;books.asSequence()&lt;/FONT&gt; and then chaining our filters as normal, if desired.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-427888366"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;What we have proven with the above PoC is that Kotlin/Java interoperability works pretty nicely within an SAP CAP application, at least in this basic scenario. We were able to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Implement a working Kotlin handler&lt;/LI&gt;&lt;LI&gt;Register the class as a spring bean within a Spring Java Application&lt;/LI&gt;&lt;LI&gt;Register the handler within the CdsRuntime&lt;/LI&gt;&lt;LI&gt;Process the generated Java "Books" class within a Kotlin data structure&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Now we know that we can do it, the question is - should we? Well, Kotlin gives us some pretty nice language features that are not available in Java, for example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://kotlinlang.org/docs/extensions.html" target="_blank" rel="noopener nofollow noreferrer"&gt;Extensions&lt;/A&gt;, the ability to extend classes from 3rd party packages without inheriting from them&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Compile time &lt;A href="https://kotlinlang.org/docs/null-safety.html" target="_blank" rel="noopener nofollow noreferrer"&gt;nullability&lt;/A&gt; checks&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://kotlinlang.org/docs/async-programming.html#coroutines" target="_blank" rel="noopener nofollow noreferrer"&gt;Coroutines&lt;/A&gt;, an asynchronous programming technique similar to Go's goroutines&lt;/LI&gt;&lt;LI&gt;A more concise, intuitive syntax&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;However, given that we are writing our Kotlin code within two frameworks (CAP &amp;amp; Spring) which were written specifically for Java, there is a risk that differences between how the languages implement null checking, reflection or asynchronocity could result in adverse behaviour at runtime. Even in these cases, it's nice to know that we can fall back to a pure Java class within the same project if needed.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/writing-sap-cap-services-in-kotlin/ba-p/14165709"/>
    <published>2025-07-30T12:22:46.312000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-use-cloud-sdk-for-ai-in-an-existing-cap-nodejs-project-in-commonjs/ba-p/14169098</id>
    <title>How to use Cloud SDK for AI in an existing CAP NodeJS Project in CommonJS</title>
    <updated>2025-08-01T10:03:01.242000+02:00</updated>
    <author>
      <name>Jacky_Liu1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/132085</uri>
    </author>
    <content>&lt;P&gt;I have an existing SAP Cloud Application Program Project in CommonJs. I want to add custom AI function in it . So need to use &lt;A href="https://sap.github.io/ai-sdk/docs/js/overview-cloud-sdk-for-ai-js" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Cloud SDK for AI&amp;nbsp;&lt;/A&gt;in my project. But SAP Cloud SDK for AI only support native ESM.&amp;nbsp; Convert my existing project into ESM? I think it is too risky.&amp;nbsp; I need to use the ESM module in the CommonJs project.&amp;nbsp; At last, it works. Let me share the steps which maybe be helpful for you.&lt;/P&gt;&lt;H4 id="toc-hId-1994330268"&gt;Steps:&lt;/H4&gt;&lt;H5 id="toc-hId-1926899482"&gt;1,&amp;nbsp; Install&amp;nbsp;&lt;SPAN&gt;esbuild in the root path of my project:&lt;/SPAN&gt;&lt;/H5&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm i esbuild&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId-1730385977"&gt;2.&amp;nbsp; Create&amp;nbsp; folder named &lt;U&gt;&lt;EM&gt;esm&lt;/EM&gt;&lt;/U&gt; under&amp;nbsp; &lt;U&gt;&lt;EM&gt;srv&lt;/EM&gt;&lt;/U&gt;, then create a file named &lt;U&gt;&lt;EM&gt;index.js&lt;/EM&gt;&lt;/U&gt; under folder &lt;U&gt;&lt;EM&gt;esm&lt;/EM&gt;&lt;/U&gt; with the following code .&lt;/H5&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import { OrchestrationClient, buildAzureContentSafetyFilter } from '@sap-ai-sdk/orchestration';
import { AzureOpenAiEmbeddingClient } from '@sap-ai-sdk/langchain'

export { OrchestrationClient, buildAzureContentSafetyFilter, AzureOpenAiEmbeddingClient };&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId-1533872472"&gt;3.&amp;nbsp; Add following script in my package.json file in project root path.&lt;/H5&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt; "deps": "esbuild --platform=node srv/esm/index.js --bundle --outfile=srv/esm/bundle.js"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jacky_Liu1_0-1754034389278.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295028iDF153B0500979B79/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jacky_Liu1_0-1754034389278.png" alt="Jacky_Liu1_0-1754034389278.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1337358967"&gt;4.&amp;nbsp; Run the following command in the project root path in terminal.&lt;/H5&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm run deps&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jacky_Liu1_0-1754035312369.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295041i01BDB7AACC94EFE6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jacky_Liu1_0-1754035312369.png" alt="Jacky_Liu1_0-1754035312369.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1140845462"&gt;5.&amp;nbsp; Adjust the code of importing the module of &lt;U&gt;&lt;EM&gt;SAP Cloud SDK for AI &lt;/EM&gt;&lt;/U&gt;as the following.&lt;/H5&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// const { OrchestrationClient, buildAzureContentSafetyFilter } = require('@sap-ai-sdk/orchestration');
const { OrchestrationClient, buildAzureContentSafetyFilter } = require('../esm/bundle');
// const { AzureOpenAiEmbeddingClient } = require('@sap-ai-sdk/langchain');
const { AzureOpenAiEmbeddingClient } = require('../esm/bundle');&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The ends!&lt;/P&gt;&lt;P&gt;Thanks for your time!&lt;/P&gt;&lt;P&gt;Jacky Liu&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-use-cloud-sdk-for-ai-in-an-existing-cap-nodejs-project-in-commonjs/ba-p/14169098"/>
    <published>2025-08-01T10:03:01.242000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-community-escape-house-for-august-fiori-element-with-flexible/ba-p/14167685</id>
    <title>SAP Community Escape House for August - Fiori Element with Flexible Programming Model</title>
    <updated>2025-08-04T10:10:14.915000+02:00</updated>
    <author>
      <name>AmarUbhe</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/163102</uri>
    </author>
    <content>&lt;P&gt;The &lt;STRONG&gt;eighth edition of the SAP Developer Challenge 2025&lt;/STRONG&gt; has officially kicked off!&amp;nbsp; A brand-new room has opened its doors inside the &lt;A title="SAP Community Escape House" href="https://sap-community-escape-house.cfapps.us10.hana.ondemand.com/" target="_self" rel="noopener noreferrer"&gt;&lt;STRONG&gt;SAP Community Escape House&lt;/STRONG&gt;&lt;/A&gt;.&amp;nbsp; Hope you all escaped alive from the SAP Application Event Hub room last month.&amp;nbsp;&lt;/P&gt;&lt;P&gt;In this developer challenge, we are focusing on &lt;STRONG&gt;SAP Fiori&lt;/STRONG&gt;&amp;nbsp;&lt;STRONG&gt;Element&lt;/STRONG&gt; and the &lt;STRONG&gt;Flexible Programming Model&lt;/STRONG&gt;. We are going to cover topics like:&lt;/P&gt;&lt;P&gt;FPM - Extension Points&lt;/P&gt;&lt;P&gt;FPM - Building Block&lt;/P&gt;&lt;P&gt;FPM - Controller Extension&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1607028261"&gt;Prerequisite&lt;/H1&gt;&lt;P&gt;You have to clone the repository from:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A class="" href="https://github.com/SAP-samples/fiori-elements-fpm-exercises-codejam.git" target="_new" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-samples/fiori-elements-fpm-exercises-codejam.git&lt;/A&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;For this challenge, you will be working in the &lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;finished-bookshop&lt;/STRONG&gt;&lt;/FONT&gt; folder. This folder contains a completed CAP project that serves as the starting point for exploring extensibility using the &lt;STRONG&gt;Flexible Programming Model&lt;/STRONG&gt; with &lt;STRONG&gt;SAP Fiori Elements&lt;/STRONG&gt;.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;All extension tasks, including UI enhancements and controller customizations, will be implemented on top of this &lt;STRONG&gt;CAP project&lt;/STRONG&gt;. Inside this project, there is an existing &lt;STRONG&gt;Fiori Elements List Report application&lt;/STRONG&gt; named &lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;bookshop-ui&lt;/STRONG&gt;&lt;/FONT&gt;, which serves as the foundation for this challenge.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;You will extend this application using the &lt;STRONG&gt;Flexible Programming Model&lt;/STRONG&gt;, applying techniques such as &lt;STRONG&gt;Fiori extension points&lt;/STRONG&gt;, &lt;STRONG&gt;building blocks&lt;/STRONG&gt;, and &lt;STRONG&gt;controller extensions&lt;/STRONG&gt; to tailor the UI and behavior according to developer challenge.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1604971530" id="toc-hId-1410514756"&gt;How to participate&lt;/H1&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;Visit the&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://sap-community-escape-house.cfapps.us10.hana.ondemand.com/" target="_blank" rel="noopener noreferrer"&gt;SAP Community Escape House&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;and enter your&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;numeric&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;SAP Community user ID.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP Community Escape House" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294502iD7D2B0DE57B525D6/image-size/large?v=v2&amp;amp;px=999" role="button" title="EscapeHouseLogin.png" alt="SAP Community Escape House" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;SAP Community Escape House&lt;/span&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;If you're unsure of your user ID, you can find it on your user settings page url.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Goto&amp;nbsp;&lt;A href="https://community.sap.com/" target="_blank"&gt;SAP Community Page.&amp;nbsp;&lt;/A&gt;Click on &lt;STRONG&gt;Account&lt;/STRONG&gt;&lt;SPAN&gt; and then select &lt;/SPAN&gt;&lt;STRONG&gt;My content&lt;/STRONG&gt;&lt;SPAN&gt;.&amp;nbsp;You can find the community user ID in the web page URL.&amp;nbsp;Once you see the SAP Community Escape House, select the SAP Fiori Element room and start exploring it.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-04_12-46-25.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295893i23ED69E595E5DFC1/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-04_12-46-25.png" alt="2025-08-04_12-46-25.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-04_12-52-54.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295894i166823321F4BC64A/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-04_12-52-54.png" alt="2025-08-04_12-52-54.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-04_12-57-20.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295895i1820808AC4717E2C/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-04_12-57-20.png" alt="2025-08-04_12-57-20.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;The user interface of an escape room includes the room itself as well as a terminal. You can click the objects in the room to receive tips.&amp;nbsp;Like in a real (physical) escape room, you will have to try out a few things and explore the room until you receive helpful tips and, eventually, instructions. These tips and instructions are printed in the terminal next to the room.&amp;nbsp;The terminal is also used to submit solutions to tasks. Read the instructions you receive carefully to understand how.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmarUbhe_0-1753958354704.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294531i139DAD5126DEE294/image-size/large?v=v2&amp;amp;px=999" role="button" title="AmarUbhe_0-1753958354704.png" alt="AmarUbhe_0-1753958354704.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;If you successfully escape the room (you will know when that happens), you will receive a badge in the SAP Community.&amp;nbsp;We will assign the badges once the challenge closes.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1408458025" id="toc-hId-1214001251"&gt;The schedule&lt;/H1&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The SAP Fiori room will be unlocked on August 4th and will stay unlocked until the end of the year. However, the challenge closes on August 31st, so you must escape the room until then to qualify for a badge. Unlike the previous year, this SAP Developer Challenge does not consist of weekly sub-challenges. The next room (next challenge) will be unlocked in September.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1376249370" id="toc-hId-1017487746"&gt;Useful links for the challenge&lt;/H1&gt;&lt;UL&gt;&lt;LI&gt;Flexible Programming Model :&amp;nbsp;&lt;A title="Flexible Programming Model" href="https://sapui5.hana.ondemand.com/test-resources/sap/fe/core/fpmExplorer/index.html#/overview/introduction" target="_self" rel="nofollow noopener noreferrer"&gt;https://sapui5.hana.ondemand.com/test-resources/sap/fe/core/fpmExplorer/index.html#/overview/introduction&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Fiori Element OData V4 :&amp;nbsp;&lt;A href="https://developers.sap.com/group.fiori-tools-odata-v4-incident.html" target="_self" rel="noopener noreferrer"&gt;https://developers.sap.com/group.fiori-tools-odata-v4-incident.html&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;FPM Code Jam :&amp;nbsp;&lt;A href="https://github.com/SAP-samples/fiori-elements-fpm-exercises-codejam/tree/main?tab=readme-ov-file" target="_self" rel="nofollow noopener noreferrer"&gt;https://github.com/SAP-samples/fiori-elements-fpm-exercises-codejam/tree/main?tab=readme-ov-file&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Good luck and happy escaping!&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-community-escape-house-for-august-fiori-element-with-flexible/ba-p/14167685"/>
    <published>2025-08-04T10:10:14.915000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AEcap-java%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%8B%E3%82%89%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88-odata-api-%E3%81%B8%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E6%89%8B%E9%A0%86/ba-p/14172974</id>
    <title>ローカルのCAP Javaプロジェクトからリモート OData API へ接続する手順</title>
    <updated>2025-08-11T08:29:06.785000+02:00</updated>
    <author>
      <name>Umezuki</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/841332</uri>
    </author>
    <content>&lt;DIV&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-call-a-remote-odata-api-from-your-local-cap-java-project/ba-p/14177098" target="_self"&gt;English Version&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1736888397"&gt;目的&lt;/H2&gt;&lt;P&gt;ローカルの CAP Java プロジェクトから、SAP S/4HANA の Sandbox OData API を呼び出してデータを取得する手順の一例をまとめます。最終的には、以下のURLにアクセスしてBusiness Partnersを取得することをゴールとします。&lt;/P&gt;&lt;P&gt;&lt;A href="http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;H2 id="toc-hId-1540374892"&gt;1. 検証時の環境&lt;/H2&gt;&lt;DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&amp;nbsp;SAP BTP トライアル環境&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;SAP Business Accelerator Hub の Sandbox 環境&lt;/LI&gt;&lt;LI&gt;開発環境: Visual Studio Code&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Maven&amp;nbsp; 3.9&lt;/LI&gt;&lt;LI&gt;OpenJDK 21&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;H2 id="toc-hId-1343861387"&gt;2. プロジェクトの作成&lt;/H2&gt;&lt;P&gt;2.1. CAP Javaプロジェクトの初期化&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds init cap-java-remote-api --add destination,xsuaa --java&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;初期化後、以下のようなプロジェクトフォルダーが作成されます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.08.10.png" style="width: 420px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298811iBF8B4C6F08704B7A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.08.10.png" alt="Screenshot 2025-08-09 at 16.08.10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.2. プロジェクトをVisual Studio Code で開く&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;code cap-java-remote-api&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.06.25.png" style="width: 305px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298812i23214A6D24A7A3C9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.06.25.png" alt="Screenshot 2025-08-09 at 16.06.25.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1147347882"&gt;3. ライブラリの追加&lt;/H2&gt;&lt;P&gt;リモート OData API に接続するには、SAP Cloud SDK と リモート OData用のライブラリが必要です。&lt;/P&gt;&lt;P&gt;3.1. ルートディレクトリのpom.xml に SAP Cloud SDK の最新のバージョンをプロパティとして追加し、dependencyManagement に sdk-bom を追加します。&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;properties&amp;gt;
    ...
    &amp;lt;!-- 最新のSDKのバージョンに置き換える --&amp;gt;
    &amp;lt;cloud-sdk.version&amp;gt;5.20.0&amp;lt;/cloud-sdk.version&amp;gt;
&amp;lt;/properties&amp;gt;
...
&amp;lt;dependencyManagement&amp;gt;
	&amp;lt;dependencies&amp;gt;
        ...
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.sap.cloud.sdk&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;sdk-bom&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${cloud-sdk.version}&amp;lt;/version&amp;gt;
            &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;
            &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
	&amp;lt;/dependencies&amp;gt;
&amp;lt;/dependencyManagement&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3.2. srv/pom.xmlに以下のライブラリを追加します。&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;
    ...
    &amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;com.sap.cds&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;cds-feature-remote-odata&amp;lt;/artifactId&amp;gt;
		&amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
	&amp;lt;/dependency&amp;gt;

	&amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;com.sap.cloud.sdk&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;sdk-core&amp;lt;/artifactId&amp;gt;
	&amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-950834377"&gt;4. ODataメタデータの取得とCSNの生成&lt;/H2&gt;&lt;P&gt;OData API を使うには、ODataのエンティティやプロパティ情報を記載したメタデータファイル(EDMX)から、CAP内部の共通モデル表現として役割を果たす、CSN形式に変換した上で、CDSでのモデリングを行う必要があります。&lt;/P&gt;&lt;P&gt;4.1. SAP&amp;nbsp;Business Accelerator HubのBusiness Partner (A2X)からEDMXをダウンロード&lt;/P&gt;&lt;P&gt;&lt;A href="https://api.sap.com/api/API_BUSINESS_PARTNER/overview" target="_blank" rel="noopener noreferrer"&gt;https://api.sap.com/api/API_BUSINESS_PARTNER/overview&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 13.31.37.png" style="width: 779px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299183iF693C036A176C0D3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 13.31.37.png" alt="Screenshot 2025-08-11 at 13.31.37.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.2. ルートディレクトリの配下に.edmxファイルを格納&lt;/P&gt;&lt;P&gt;4.3. .edmxから.csn を生成&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds import API_BUSINESS_PARTNER.edmx&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.23.04.png" style="width: 889px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298813i6925F272B6BEFB45/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.23.04.png" alt="Screenshot 2025-08-09 at 16.23.04.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;実行後、 srv/external フォルダに .edmx と .csn ファイルが生成されます。&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.23.32.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298814iD2927F42D196A41B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.23.32.png" alt="Screenshot 2025-08-09 at 16.23.32.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;加えて、application.yaml に Destination Service のテンプレート設定が追加されます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.26.16.png" style="width: 412px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298815iCE79C4F7F4E7C32C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.26.16.png" alt="Screenshot 2025-08-09 at 16.26.16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-754320872"&gt;5. 接続設定&lt;/H2&gt;&lt;P&gt;S/4HANA のような外部システムと接続する際に、他サービスからの再利用性も高く、接続先や認証情報を設定できるBTP の Destination Service を利用します。今回はSandbox 環境のため、APIKeyでの認証を行い、.envファイルにその情報を格納しますが、実運用環境では他の適切な認証方式を使用してください。&lt;/P&gt;&lt;P&gt;5.1. BTP Destination Service に S/4HANA Sandbox の情報を登録&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Name: S4Sandbox&lt;/LI&gt;&lt;LI&gt;Type: HTTP&lt;/LI&gt;&lt;LI&gt;ProxyType: Internet&lt;/LI&gt;&lt;LI&gt;URL: &lt;A href="https://sandbox.api.sap.com/s4hanacloud" target="_blank" rel="noopener noreferrer"&gt;https://sandbox.api.sap.com/s4hanacloud&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Authentication: NoAuthentication&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;Sandbox環境のため、ここではNoAuthenticationを選択し、後続のapplication.yamlにてAPIKeyを.env経由で渡します。&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 15.19.55.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298809i5D4884B8945AB664/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 15.19.55.png" alt="Screenshot 2025-08-09 at 15.19.55.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.2. .envにAPIKeyを設定&lt;/P&gt;&lt;P&gt;APIキーはBusiness Accelerator Hubから取得できます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 12.05.52.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299169iA9BA4CBFB4C9144A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 12.05.52.png" alt="Screenshot 2025-08-11 at 12.05.52.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;APIKey=&amp;lt;Business Accelerator Hubで取得したAPIキー&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5.3. application.yamlで接続先の設定&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds:
  remote:
    services:
      API_BUSINESS_PARTNER:
        destination:
          # 対象のDestination Serviceで登録したDestination名を記載する
          name: S4Sandbox
        http:
          suffix: /sap/opu/odata/sap
          # Sandbox APIを使用する場合には、APIKeyをHTTPヘッダーに入れる必要がある
          headers:
            # 環境変数のAPIKeyを参照する
            APIKey: ${APIKey}
        type: odata-v2&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-557807367"&gt;6. サービスモデルとハンドラの実装&lt;/H2&gt;&lt;P&gt;6.1 srv/business-partner-service.cdsにサービスモデルを実装&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;using {API_BUSINESS_PARTNER as bp} from './external/API_BUSINESS_PARTNER';

service BusinessPartnerService @(requires: 'any') {
    entity BusinessPartner as projection on bp.A_BusinessPartner {
        key A_BusinessPartner.BusinessPartner,
            A_BusinessPartner.BusinessPartnerName,
            A_BusinessPartner.BusinessPartnerFullName
    };
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;先ほど作成した .csn に含まれる API_BUSINESS_PARTNER を投影し、サービスモデルのエンティティ BusinessPartner を定義します。また、セキュリティについては範囲外としますので、requires部分は'any'としています。&lt;/P&gt;&lt;P&gt;6.2. srv/src/main/java/customer/cap_java_remote_api/handlers/BusinessPartnerHandler.javaにハンドラを実装&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;package customer.cap_java_remote_api.handlers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.sap.cds.Result;
import com.sap.cds.services.cds.CdsReadEventContext;
import com.sap.cds.services.handler.EventHandler;
import com.sap.cds.services.handler.annotations.On;
import com.sap.cds.services.handler.annotations.ServiceName;

import cds.gen.api_business_partner.ApiBusinessPartner;
import cds.gen.businesspartnerservice.BusinessPartner_;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Component
@ServiceName("BusinessPartnerService")
public class BusinessPartnerHandler implements EventHandler {

    @Autowired
    ApiBusinessPartner remoteBp;

    private static final Logger logger = LoggerFactory.getLogger(BusinessPartnerHandler.class);
    // このブログサービスの仕様でアットマークとそれに付随する文字列が消えてしまいます。下記のコードに置き換えてください。
    (entity = BusinessPartner_.CDS_NAME)
    public Result readBusinessPartner(CdsReadEventContext context) {
        try {
            logger.info("Reading Business Partner data from S/4HANA with CQN: {}", context.getCqn());
            return remoteBp.run(context.getCqn());
        } catch (Exception e) {
            logger.error("Error while reading Business Partner data from S/4HANA.", e);
            throw new RuntimeException(e);
        }
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;上記でコメントした行をこちらに置き換えてください。&lt;/P&gt;&lt;P&gt;'@On(entity = BusinessPartner_.CDS_NAME)'&lt;/P&gt;&lt;P&gt;また、CQNを使用する際は、CqnServiceを継承したインターフェイスを使用します。今回でいうと、remoteBpのインターフェイスであるApiBusinessPartnerは、CqnServiceを継承しています。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 12.12.57.png" style="width: 552px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299173i326FDDD8D81D45EE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 12.12.57.png" alt="Screenshot 2025-08-11 at 12.12.57.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-361293862"&gt;7. デプロイ準備&lt;/H2&gt;&lt;P&gt;ローカルで開発したCAP JavaアプリケーションをSAP BTPのCloud Foundry環境へデプロイするための準備を行います。&lt;/P&gt;&lt;P&gt;7.1. MTAファイルの作成&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add mta&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;mta.yamlが生成されますが、modulesに記載のcap-java-remote-api-srvが生成されただけではなく、プロジェクト初期化の際にaddオプションでつけた、xsuaaとdestinationがそれぞれバッキングサービスとしてresourcesに記載されていることが確認できます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 12.41.58.png" style="width: 686px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299179iB3A160479CC7927D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 12.41.58.png" alt="Screenshot 2025-08-11 at 12.41.58.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;加えて、srv/pom.xmlに以下のライブラリが追加されます。&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;
    ...
    &amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;com.sap.cds&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;cds-starter-cloudfoundry&amp;lt;/artifactId&amp;gt;
		&amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
	&amp;lt;/dependency&amp;gt;

	&amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;spring-boot-starter-actuator&amp;lt;/artifactId&amp;gt;
	&amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7.2. ビルド&amp;amp;ローカルリポジトリへのインストール&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;mvn clean install&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-164780357"&gt;8. BTPへデプロイ&lt;/H2&gt;&lt;P&gt;8.1. mtarファイルの作成&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;mbt build --mtar archive
#  CAPを扱う際には、前回のビルド成果物を削除したいケースが多いので、
# 下記のコマンドを叩くことが多いです。
# rm -rf mta_archives &amp;amp;&amp;amp; mbt build --mtar archive&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.2. 対象のCloud Foundry環境を選択&lt;/P&gt;&lt;P&gt;BTP CockpitのサブアカウントページからAPI Endpointを取得できます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.29.40.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299029i1200738CD3FE787D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.29.40.png" alt="Screenshot 2025-08-10 at 20.29.40.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf api &amp;lt;対象のCFエンドポイント&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.3. Cloud Foundryにログイン&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf login&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.4. Cloud Foundryにデプロイ&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf deploy mta_archives/archive.mtar
# デプロイが失敗した時には三度のリトライがデフォルトで実施されますが、
# 一度だけで済ませても問題ないケースが多いので、時間短縮のために、下記のコマンドをよく使います。
# cf deploy mta_archives/archive.mtar --retries 1&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;8.5. BTP Cockpitでデプロイ結果を確認&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.36.06.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299032i81C64DCDA2B57375/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.36.06.png" alt="Screenshot 2025-08-10 at 20.36.06.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--31733148"&gt;9. ローカルからリモートAPIへアクセス&lt;/H2&gt;&lt;P&gt;最後に、ローカル環境からリモートOData APIにアクセスします。そのためには、BTPにデプロイしたバッキングサービスをローカルにバインドする必要があります。&lt;/P&gt;&lt;P&gt;9.1. BTP上のxsuaaとdestinationをローカルにバインド&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds bind auth --to cap-java-remote-api-auth
cds bind destination --to cap-java-remote-api-destination&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;このバインドにより、ハイブリッド環境用のバッキングサービスの設定が行えます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.50.26.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299035iD96558F42CFCFD43/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.50.26.png" alt="Screenshot 2025-08-10 at 20.50.26.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9.2. Hybrid Testing&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds bind --exec -- mvn spring-boot:run&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9.3. 対象エンドポイントにて、結果を確認&lt;/P&gt;&lt;P&gt;&lt;A href="http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.48.22.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299034i2089150842E7A939/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.48.22.png" alt="Screenshot 2025-08-10 at 20.48.22.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;CAP Javaプロジェクトのお役に立てれば幸いです！&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AEcap-java%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%8B%E3%82%89%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88-odata-api-%E3%81%B8%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E6%89%8B%E9%A0%86/ba-p/14172974"/>
    <published>2025-08-11T08:29:06.785000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-call-a-remote-odata-api-from-your-local-cap-java-project/ba-p/14177098</id>
    <title>How to Call a Remote OData API from Your Local CAP Java Project</title>
    <updated>2025-08-11T08:29:09.172000+02:00</updated>
    <author>
      <name>Umezuki</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/841332</uri>
    </author>
    <content>&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AEcap-java%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%8B%E3%82%89%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88-odata-api-%E3%81%B8%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E6%89%8B%E9%A0%86/ba-p/14172974" target="_self"&gt;Japanese version&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1737028769"&gt;Objective&lt;/H2&gt;&lt;P&gt;This post walks you through how to call the SAP S/4HANA sandbox OData API from a local CAP Java project.&lt;BR /&gt;The final goal is to call the following endpoint and retrieve a list of business partners:&lt;BR /&gt;&lt;A href="http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1540515264"&gt;1. Testing Environment&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;SAP BTP Trial&lt;/LI&gt;&lt;LI&gt;SAP Business Accelerator Hub – Sandbox&lt;/LI&gt;&lt;LI&gt;IDE: Visual Studio Code&lt;/LI&gt;&lt;LI&gt;Maven 3.9&lt;/LI&gt;&lt;LI&gt;OpenJDK 21&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1344001759"&gt;2. Project Setup&amp;nbsp;&lt;/H2&gt;&lt;P&gt;2.1 Initialize a CAP Java project&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds init cap-java-remote-api --add destination,xsuaa --java&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The command creates the following folder structure:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.08.10.png" style="width: 420px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298811iBF8B4C6F08704B7A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.08.10.png" alt="Screenshot 2025-08-09 at 16.08.10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.2 Open the project in VS Code&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;code cap-java-remote-api&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.06.25.png" style="width: 305px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298812i23214A6D24A7A3C9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.06.25.png" alt="Screenshot 2025-08-09 at 16.06.25.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1147488254"&gt;3. Add Required Libraries&lt;/H2&gt;&lt;P&gt;To call a remote OData service you need both the SAP Cloud SDK and the CAP library for remote OData.&lt;/P&gt;&lt;P&gt;3.1 Add the&amp;nbsp; latest SDK version to the properties and the Cloud SDK BOM to the root pom.xml&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;properties&amp;gt;
    ...
    &amp;lt;!-- Replace with the latest SDK version --&amp;gt;
    &amp;lt;cloud-sdk.version&amp;gt;5.20.0&amp;lt;/cloud-sdk.version&amp;gt;
&amp;lt;/properties&amp;gt;
...
&amp;lt;dependencyManagement&amp;gt;
	&amp;lt;dependencies&amp;gt;
        ...
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.sap.cloud.sdk&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;sdk-bom&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${cloud-sdk.version}&amp;lt;/version&amp;gt;
            &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;
            &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
	&amp;lt;/dependencies&amp;gt;
&amp;lt;/dependencyManagement&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3.2 Add the following dependencies to srv/pom.xml&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;
    ...
    &amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;com.sap.cds&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;cds-feature-remote-odata&amp;lt;/artifactId&amp;gt;
		&amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
	&amp;lt;/dependency&amp;gt;

	&amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;com.sap.cloud.sdk&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;sdk-core&amp;lt;/artifactId&amp;gt;
	&amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-950974749"&gt;4. Fetch OData Metadata and Generate CSN&lt;/H2&gt;&lt;P&gt;CAP needs a CSN file, so you must first download the EDMX file and convert it.&lt;/P&gt;&lt;P&gt;4.1 Download the Business Partner (A2X) EDMX from the SAP Business Accelerator Hub&lt;BR /&gt;&lt;A href="https://api.sap.com/api/API_BUSINESS_PARTNER/overview" target="_blank" rel="noopener noreferrer"&gt;https://api.sap.com/api/API_BUSINESS_PARTNER/overview&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 13.31.37.png" style="width: 779px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299183iF693C036A176C0D3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 13.31.37.png" alt="Screenshot 2025-08-11 at 13.31.37.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.2 Place the .edmx file in the project’s root folder.&lt;/P&gt;&lt;P&gt;4.3 Generate a .csn file from the .edmx&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds import API_BUSINESS_PARTNER.edmx&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.23.04.png" style="width: 889px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298813i6925F272B6BEFB45/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.23.04.png" alt="Screenshot 2025-08-09 at 16.23.04.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After execution, both the .edmx and .csn files appear in srv/external.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.23.32.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298814iD2927F42D196A41B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.23.32.png" alt="Screenshot 2025-08-09 at 16.23.32.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;A template for the Destination Service is also added to application.yaml.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 16.26.16.png" style="width: 412px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298815iCE79C4F7F4E7C32C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 16.26.16.png" alt="Screenshot 2025-08-09 at 16.26.16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-754461244"&gt;5. Connectivity Configuration&lt;/H2&gt;&lt;P&gt;You will use the BTP Destination Service to store the connectivity settings such as the URL and authentication. Because you are calling the sandbox, authentication is done via an API Key stored in a local .env file. In a productive scenario you would switch to a more secure authentication method.&lt;/P&gt;&lt;P&gt;5.1 Create a destination in BTP&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Name: S4Sandbox&lt;/LI&gt;&lt;LI&gt;Type: HTTP&lt;/LI&gt;&lt;LI&gt;ProxyType: Internet&lt;/LI&gt;&lt;LI&gt;URL: &lt;A href="https://sandbox.api.sap.com/s4hanacloud" target="_blank" rel="noopener noreferrer"&gt;https://sandbox.api.sap.com/s4hanacloud&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Authentication: NoAuthentication&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-09 at 15.19.55.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298809i5D4884B8945AB664/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-09 at 15.19.55.png" alt="Screenshot 2025-08-09 at 15.19.55.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.2 Store the API Key in .env&lt;/P&gt;&lt;P&gt;You can get the API Key on Business Accelerator Hub.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 12.05.52.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299169iA9BA4CBFB4C9144A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 12.05.52.png" alt="Screenshot 2025-08-11 at 12.05.52.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;APIKey=&amp;lt;your-API-key-from-Business-Accelerator-Hub&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5.3 Configure the destination in application.yaml&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds:
  remote:
    services:
      API_BUSINESS_PARTNER:
        destination:
          # Name of the destination you just created
          name: S4Sandbox
        http:
          suffix: /sap/opu/odata/sap
          # The sandbox requires the API Key in a header
          headers:
            # Read from the env file
            APIKey: ${APIKey}
        type: odata-v2&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-557947739"&gt;6. Service Model and Handler&lt;/H2&gt;&lt;P&gt;6.1 Define the service model in srv/business-partner-service.cds&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;using {API_BUSINESS_PARTNER as bp} from './external/API_BUSINESS_PARTNER';

service BusinessPartnerService @(requires: 'any') {
    entity BusinessPartner as projection on bp.A_BusinessPartner {
        key A_BusinessPartner.BusinessPartner,
            A_BusinessPartner.BusinessPartnerName,
            A_BusinessPartner.BusinessPartnerFullName
    };
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Project the API_BUSINESS_PARTNER definition from the .csn file you just created and use it to define the BusinessPartner entity in your service model. You can ignore the security perspectives on this tutorial, so you just need to add 'any' to the requires value.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;6.2 Implement the handler in&lt;BR /&gt;srv/src/main/java/customer/cap_java_remote_api/handlers/BusinessPartnerHandler.java&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;package customer.cap_java_remote_api.handlers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.sap.cds.Result;
import com.sap.cds.services.cds.CdsReadEventContext;
import com.sap.cds.services.handler.EventHandler;
import com.sap.cds.services.handler.annotations.On;
import com.sap.cds.services.handler.annotations.ServiceName;

import cds.gen.api_business_partner.ApiBusinessPartner;
import cds.gen.businesspartnerservice.BusinessPartner_;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Component
@ServiceName("BusinessPartnerService")
public class BusinessPartnerHandler implements EventHandler {

    @Autowired
    ApiBusinessPartner remoteBp;

    private static final Logger logger = LoggerFactory.getLogger(BusinessPartnerHandler.class);
    // This blogging platform strips out the “@” symbol and 'On' that follows it, so please replace the above line with the code shown below.
    (entity = BusinessPartner_.CDS_NAME)
    public Result readBusinessPartner(CdsReadEventContext context) {
        try {
            logger.info("Reading Business Partner data from S/4HANA with CQN: {}", context.getCqn());
            return remoteBp.run(context.getCqn());
        } catch (Exception e) {
            logger.error("Error while reading Business Partner data from S/4HANA.", e);
            throw new RuntimeException(e);
        }
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Please replace the commented line above with the following code:&lt;/P&gt;&lt;P&gt;'@On(entity = BusinessPartner_.CDS_NAME)'&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When you work with CQN, use an interface that extends CqnService. In this case, the interface for remoteBp, ApiBusinessPartner, does exactly that: it extends CqnService.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 12.12.57.png" style="width: 552px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299173i326FDDD8D81D45EE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 12.12.57.png" alt="Screenshot 2025-08-11 at 12.12.57.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-361434234"&gt;7. Prepare for Deployment&lt;/H2&gt;&lt;P&gt;7.1 Generate an MTA descriptor&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add mta&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The generated mta.yaml now contains a module (cap-java-remote-api-srv) and the backing services (xsuaa, destination) that you added during init.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-11 at 12.41.58.png" style="width: 686px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299179iB3A160479CC7927D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-11 at 12.41.58.png" alt="Screenshot 2025-08-11 at 12.41.58.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The following dependencies are also auto-added to srv/pom.xml:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;
    ...
    &amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;com.sap.cds&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;cds-starter-cloudfoundry&amp;lt;/artifactId&amp;gt;
		&amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
	&amp;lt;/dependency&amp;gt;

	&amp;lt;dependency&amp;gt;
		&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;spring-boot-starter-actuator&amp;lt;/artifactId&amp;gt;
	&amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7.2 Build the project and install to your local Maven repo&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;mvn clean install&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-164920729"&gt;8. Deploy to BTP&lt;/H2&gt;&lt;P&gt;8.1 Create an .mtar file&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;mbt build --mtar archive
# It is often useful to clean old artifacts:
# rm -rf mta_archives &amp;amp;&amp;amp; mbt build --mtar archive&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.2 Target the correct Cloud Foundry org/space&lt;/P&gt;&lt;P&gt;You can obtain the targeted Endpoint from the BTP Cockpit:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.29.40.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299029i1200738CD3FE787D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.29.40.png" alt="Screenshot 2025-08-10 at 20.29.40.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf api &amp;lt;your Cloud Foundry endpoint&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.3 Log in to Cloud Foundry&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf login&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.4 Deploy to Cloud Foundry&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf deploy mta_archives/archive.mtar
# Skip the default 3 retries to save time:
# cf deploy mta_archives/archive.mtar --retries 1&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.5 Verify the deployment in the BTP Cockpit&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.36.06.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299032i81C64DCDA2B57375/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.36.06.png" alt="Screenshot 2025-08-10 at 20.36.06.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--31592776"&gt;9. Access the Remote API from Your Local Environment&lt;/H2&gt;&lt;P&gt;Because the backing services live on BTP, you need to bind them locally for hybrid testing.&lt;/P&gt;&lt;P&gt;9.1 Bind xsuaa and destination locally&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds bind auth --to cap-java-remote-api-auth
cds bind destination --to cap-java-remote-api-destination&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.50.26.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299035iD96558F42CFCFD43/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.50.26.png" alt="Screenshot 2025-08-10 at 20.50.26.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9.2 Run the application in hybrid mode&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds bind --exec -- mvn spring-boot:run&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9.3 Open the endpoint&lt;/P&gt;&lt;P&gt;&lt;A href="http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:8080/odata/v4/BusinessPartnerService/BusinessPartner&lt;/A&gt;&lt;/P&gt;&lt;P&gt;You should now see the list of business partners fetched from the SAP S/4HANA sandbox.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-10 at 20.48.22.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299034i2089150842E7A939/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-10 at 20.48.22.png" alt="Screenshot 2025-08-10 at 20.48.22.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I hope this helps you kick-start your CAP Java project!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-call-a-remote-odata-api-from-your-local-cap-java-project/ba-p/14177098"/>
    <published>2025-08-11T08:29:09.172000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/create-cds-views-and-expose-through-odata-service-in-capm/ba-p/14173298</id>
    <title>Create CDS Views and expose through OData service in CAPM</title>
    <updated>2025-08-11T11:58:32.804000+02:00</updated>
    <author>
      <name>VenkateshMundru</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/44269</uri>
    </author>
    <content>&lt;P&gt;Hi, in this blog I’m going to explain how to create CDS Views and expose through OData service in CAPM.&lt;/P&gt;&lt;P&gt;Here we have discussion about to create CDS views and expose through OData service&amp;nbsp;&lt;SPAN&gt;on SAP Business Application Studio with Cloud Application Programming Model (CAPM).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;Step-1:&lt;/U&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;We have to create a CAPM application with Business Application Studio.&amp;nbsp;&lt;/SPAN&gt;Create a new folder in workspace with name "zviewcreation".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VenkateshMundru_0-1754475868584.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297104i06C2219543BC783F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="VenkateshMundru_0-1754475868584.png" alt="VenkateshMundru_0-1754475868584.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-2:&amp;nbsp;&lt;/STRONG&gt;Open terminal and enter "cds init" to initialize the cap application. You can see db, srv and app folders are created.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VenkateshMundru_1-1754475934865.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297105iC2791D8CEDE9C1D7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="VenkateshMundru_1-1754475934865.png" alt="VenkateshMundru_1-1754475934865.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-3:&lt;/STRONG&gt; Now create new file in db folder as "data-model.cds" and add entities "products" and "orderitems" as below.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;namespace zviewcreation.db;

entity products {
    key ID            : UUID;
        PRODUCT_ID    : String(30);
        PRODUCT_NAME  : String(250);
        CATEGORY      : String(32);
        CURRENCY_CODE : String(4);
        PRICE         : Decimal(15, 2);
        orderitem     : Association to one orderitems;
}

entity orderitems {
    key NODE_KEY   : UUID;
        ORDER_ID   : String(30);
        ORDER_DATE : Date;
        products   : Association to many products
                         on products.orderitem = $self;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step-4:&lt;/STRONG&gt;&amp;nbsp;Now create new file in db folder as "cdsview.cds" and add views "Product" and "productsOrders" as below.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;namespace zviewcreation.dbview;

using {zviewcreation.db} from './data-model';

define view ![Product] as
    select from db.products {
        PRODUCT_ID         as ![ProductId],
        PRODUCT_NAME       as ![ProductName],
        PRICE              as ![Price],
        CURRENCY_CODE      as ![Currency],
        orderitem.NODE_KEY as ![OrderKey]

    }

define view ![ProductsOrders] as
    select from db.orderitems
    mixin {
        PRODUCTS : Association[ * ] to Product
                       on PRODUCTS.OrderKey = $projection.OrderKey
    }
    into {
        NODE_KEY   as ![OrderKey],
        ORDER_ID   as ![OrderId],
        ORDER_DATE as ![OrderDate],
        PRODUCTS   as ![Products]

    }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step-5:&lt;/STRONG&gt;&amp;nbsp;Create new file in srv folder with name "catservice.cds" and expose our cds view as entity set.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;using { zviewcreation.dbview } from '../db/cdsview';

service MyService @(path: 'ProductsSrv') {

    entity ProductsOrdersSet as projection on dbview.ProductsOrders;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step-6:&lt;/STRONG&gt;&amp;nbsp;Install node modules using "npm install" in terminal.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 940px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297118iF747D536B1A37099/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-7:&lt;/STRONG&gt;&amp;nbsp;Now run the application using "cds watch" .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 940px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297120iCA23E0EC88F28ACF/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-8:&amp;nbsp;&lt;/STRONG&gt;You will be able to see our OData service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 938px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297123i36077E34983154E0/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-9:&lt;/STRONG&gt;&amp;nbsp;You can add data to our entities by doing "cds add data" in terminal. As a result 2 files will be added in data folder in db folder in the format of "&amp;lt;your namespace&amp;gt;-&amp;lt;entity name&amp;gt;.csv".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 932px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297124i3EF5533C34AADF7E/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-10:&lt;/STRONG&gt;&amp;nbsp;Add some sample data to both files as below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 940px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297125i047D3DA1CCCB9BB0/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 940px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297126iCD8D14B238B906E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-11:&lt;/STRONG&gt;&amp;nbsp;Now again do "cds watch" and select "ProductsOrdersSet" to see the data.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 932px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297127i744E3ABA0CC3260B/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-12:&lt;/STRONG&gt;&amp;nbsp;Now you can able to see ProductsOrdersSet data.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 932px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297128iF65929A29FA5ECE9/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-13:&lt;/STRONG&gt;&amp;nbsp;Add "?$expand=Products" at end of the url and you will able to see all the data of orders with respective products.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 932px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297129iBCE5E324FA3247E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;That’s it!!!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/create-cds-views-and-expose-through-odata-service-in-capm/ba-p/14173298"/>
    <published>2025-08-11T11:58:32.804000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cap-with-local-app-previews-tips-for-smooth-development/ba-p/14182208</id>
    <title>CAP with Local App Previews – Tips for Smooth Development</title>
    <updated>2025-08-16T23:18:43.039000+02:00</updated>
    <author>
      <name>MioYasutake</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/789</uri>
    </author>
    <content>&lt;P&gt;UI5 has recently introduced Virtual Endpoints, eliminating the need for sandbox files and reducing maintenance effort in local previews. For details, please read the blog post below:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-local-app-previews-virtual-endpoints-for-seamless-development/ba-p/14155498" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-local-app-previews-virtual-endpoints-for-seamless-development/ba-p/14155498&lt;/A&gt;&lt;/P&gt;&lt;P&gt;I have tried virtual endpoints with CAP Node.js, and would like to share a few things I noticed.&lt;/P&gt;&lt;H2 id="toc-hId-1737804978"&gt;TypeScript as a prerequisite&lt;/H2&gt;&lt;P&gt;By default, you will not see the "Use virtual endpoints for local preview" option. This option becomes available once you enable TypeScript.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MioYasutake_1-1755378123535.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301676i9C15CBFE7B00C3BA/image-size/large?v=v2&amp;amp;px=999" role="button" title="MioYasutake_1-1755378123535.png" alt="MioYasutake_1-1755378123535.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1541291473"&gt;Select the #app-preview endpoint for testing the app inside Fiori Launchpad&lt;/H2&gt;&lt;P&gt;When you start the server with `cds watch`, you will see several options for opening the app. The &lt;STRONG&gt;#app-preview&lt;/STRONG&gt; option is optimal choice for testing the app inside the Fiori Launchpad (sandbox).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MioYasutake_2-1755378271155.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301677i97D3522689B30B7C/image-size/large?v=v2&amp;amp;px=999" role="button" title="MioYasutake_2-1755378271155.png" alt="MioYasutake_2-1755378271155.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1344777968"&gt;Reinstall dependencies after build&lt;/H2&gt;&lt;P&gt;After building the MTA, you will not see the virtual endpoints anymore. This is due to the `&lt;STRONG&gt;npm ci&lt;/STRONG&gt;` command executed during the build (I haven't dug deeper into the cause). To enable the virtual endpoints again, simply run `&lt;STRONG&gt;npm install&lt;/STRONG&gt;`.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MioYasutake_3-1755378833726.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301678i8AD1EF823485958D/image-size/large?v=v2&amp;amp;px=999" role="button" title="MioYasutake_3-1755378833726.png" alt="MioYasutake_3-1755378833726.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;That's it. I hope this post is useful.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cap-with-local-app-previews-tips-for-smooth-development/ba-p/14182208"/>
    <published>2025-08-16T23:18:43.039000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-business-technology-platform-blue-green-deployment-approach-in-sap-btp/ba-p/14179173</id>
    <title>SAP Business Technology Platform Blue-Green Deployment Approach in SAP BTP Cloud foundry</title>
    <updated>2025-08-22T14:05:01.013000+02:00</updated>
    <author>
      <name>anmolbhatia003</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/681888</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;What is Blue-Green Deployment?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Blue-Green Deployment in &lt;STRONG&gt;SAP BTP Cloud Foundry&lt;/STRONG&gt; is a reliable strategy for updating applications with &lt;STRONG&gt;zero downtime&lt;/STRONG&gt; and minimal risk. The concept revolves around maintaining two identical environments:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Blue&lt;/STRONG&gt; – the current live environment actively serving users.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Green&lt;/STRONG&gt; – the new version of the application, deployed in parallel for testing and validation.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;While end-users continue working in the &lt;STRONG&gt;Blue&lt;/STRONG&gt; environment, developers can safely deploy and verify the updated application in &lt;STRONG&gt;Green&lt;/STRONG&gt;. This allows for functional testing, performance checks, and integration validation without affecting live operations.&lt;/P&gt;&lt;P&gt;Once the &lt;STRONG&gt;Green&lt;/STRONG&gt; environment is confirmed to be stable and fully functional, traffic is seamlessly redirected from &lt;STRONG&gt;Blue&lt;/STRONG&gt; to &lt;STRONG&gt;Green&lt;/STRONG&gt;, making it the new production environment. If any issues arise after the switch, rollback is straightforward—traffic can quickly be pointed back to &lt;STRONG&gt;Blue&lt;/STRONG&gt;, ensuring business continuity.&lt;/P&gt;&lt;P&gt;SAP BTP supports this deployment approach through the &lt;STRONG&gt;Cloud Foundry CLI&lt;/STRONG&gt; and &lt;STRONG&gt;Multi-Target Application (MTA) deployment tools&lt;/STRONG&gt;, making it particularly well-suited for rolling out updates to mission-critical business applications where even a few minutes of downtime is unacceptable. This method not only improves release reliability but also enhances user confidence in the stability of new updates.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Key Advantages:&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Zero Downtime Deployments&lt;/LI&gt;&lt;LI&gt;Quick Rollback&lt;/LI&gt;&lt;LI&gt;Improved Business Continuity&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Restriction&lt;/STRONG&gt;&lt;/FONT&gt;:&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;EM&gt;&lt;STRONG&gt;Blue Green deployment is supported only for cloud foundry application. It is not supported for there bounded services, such as workflow content and HTM5 repository content and others.&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;I assume that you have knowledge of:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;BR /&gt;1. Knowledge of SAP BTP CAPM development.&lt;BR /&gt;2. SAP BTP Cloud Foundry&lt;BR /&gt;3. Basic Postman&lt;BR /&gt;4. OData API understanding.&lt;/P&gt;&lt;P&gt;Demonstration:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Assume you're working on a BTP CAPM project that has already been deployed in the Cloud Foundry environment. Below is a screenshot of a basic CAPM project containing two entities:&lt;BR /&gt;Books and Authors&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="anmolbhatia003_1-1755059812771.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300104iE15B0C45F3EBFF06/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_1-1755059812771.png" alt="anmolbhatia003_1-1755059812771.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Below is a screenshot of Cloud Foundry Space, showing the live services&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_2-1755059828675.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300105iC6AD1060A2D4BF89/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_2-1755059828675.png" alt="anmolbhatia003_2-1755059828675.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Below is a screenshot of calling the service using Postman:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_3-1755059847296.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300106iAE0271D833F09787/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_3-1755059847296.png" alt="anmolbhatia003_3-1755059847296.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_4-1755059858085.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300107i9E83267063D37D79/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_4-1755059858085.png" alt="anmolbhatia003_4-1755059858085.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;The above CAP project has been built and deployed in the Cloud Foundry environment. A new requirement has now been introduced to create an additional entity named 'E-Books'&lt;/P&gt;&lt;P&gt;Modify the entity and service .cds file as below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_5-1755059890453.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300108i34808528754FDC3E/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_5-1755059890453.png" alt="anmolbhatia003_5-1755059890453.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can test the services locally by executing Command: “cds watch”&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_6-1755059900518.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300109iBC1E8621B632D7C4/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_6-1755059900518.png" alt="anmolbhatia003_6-1755059900518.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now, we build the project using&lt;BR /&gt;1.CLI: cds build –production. OR&lt;BR /&gt;2.Right Click MTA file and build.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_7-1755059914867.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300110i9E19CB655FF81B78/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_7-1755059914867.png" alt="anmolbhatia003_7-1755059914867.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The Build will start:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_8-1755059923214.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300111iE556B21AF5585629/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_8-1755059923214.png" alt="anmolbhatia003_8-1755059923214.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;After the build is finished, change the directory to "mta_archives", using command:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;gt;&amp;gt;&amp;gt;&amp;nbsp; cd mta_archives&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_9-1755059932869.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300112iD18B38FE44626C95/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_9-1755059932869.png" alt="anmolbhatia003_9-1755059932869.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We will now use the Blue-Green deployment strategy to carry out testing before promoting the changes to the live environment.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Please note we need to make use of CLI to use the strategy.&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Command format:&lt;BR /&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; cf deploy &amp;lt;your-mta-archive-v2&amp;gt; --strategy blue-green&lt;/P&gt;&lt;P&gt;Actual Command (for the project):&lt;BR /&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;nbsp; cf deploy BlueGreenDemo_v1_1.0.0.mtar --strategy blue-green&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_10-1755059950313.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300113iA9FFD676D16064D2/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_10-1755059950313.png" alt="anmolbhatia003_10-1755059950313.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The deployment process will begin shortly. You can monitor its progress—a new service instance with the suffix -idle will be created as part of the Blue-Green deployment strategy&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_11-1755059960238.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300114iA592FA5E5DEE001B/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_11-1755059960238.png" alt="anmolbhatia003_11-1755059960238.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_12-1755059965699.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300115i3850D2950AD80204/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_12-1755059965699.png" alt="anmolbhatia003_12-1755059965699.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Finally, the service are now deployed.&lt;/P&gt;&lt;P&gt;Save the following commands, as this specifies the process ID’s of blue green deployment.&lt;BR /&gt;Use "cf deploy -i 2355087a-572f-11f0-aeea-eeee0a8c175e -a abort" to abort the process.&lt;BR /&gt;Use "cf deploy -i 2355087a-572f-11f0-aeea-eeee0a8c175e -a resume" to resume the process.process.&lt;BR /&gt;Hint: Use the "--skip-testing-phase" option of the deploy command to skip this phase.&lt;/P&gt;&lt;P&gt;Hint: Incase the above process id is lost because of terminal closed. You can get the process id using command&lt;BR /&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; cf mta-ops&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_13-1755059979972.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300116i3BE41F3BA669D7F1/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_13-1755059979972.png" alt="anmolbhatia003_13-1755059979972.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_14-1755059987254.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300117iD4F0E71362B23F9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_14-1755059987254.png" alt="anmolbhatia003_14-1755059987254.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Also, the above shows the status that action is required for MTA to either be aborted or resumed.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 9:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Check under the cloud foundry dev space in SAP BTP:&lt;BR /&gt;As seen in the screenshot below:&lt;BR /&gt;We have and Idle and live services running.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_15-1755060018835.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300118iA232B5B20654F532/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_15-1755060018835.png" alt="anmolbhatia003_15-1755060018835.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 10:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Check the service status using CLI :&lt;BR /&gt;Command: cf apps&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_16-1755060031256.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300119iA28AC53FEE9963CC/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_16-1755060031256.png" alt="anmolbhatia003_16-1755060031256.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let’s test the idle service using postman:&lt;BR /&gt;The Idle service has 3 entities defined in it:&lt;BR /&gt;1.Books&lt;BR /&gt;2.Authors&lt;BR /&gt;3.Ebooks&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_17-1755060042182.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300120iCA75EE8D91B072D8/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_17-1755060042182.png" alt="anmolbhatia003_17-1755060042182.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let’s check the live services as of now:&lt;BR /&gt;The live services are still showing 2 entities:&lt;BR /&gt;1.Authors&lt;BR /&gt;2.Books&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_18-1755060055553.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300121i20AE51E531ECC1CE/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_18-1755060055553.png" alt="anmolbhatia003_18-1755060055553.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 11:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Let check the commands that were saved during the deployment:&lt;BR /&gt;Use "cf deploy -i 2355087a-572f-11f0-aeea-eeee0a8c175e -a abort" to abort the process.&lt;/P&gt;&lt;P&gt;The above command is used to abort the deployment process. This is typically done when the changes deployed to the idle service do not meet the requirements. In such cases, the deployment process can be safely aborted without affecting the live environment, thereby preventing unintended changes from being promoted to production and preventing the effort of reverting the changes.&lt;BR /&gt;However please note:&lt;BR /&gt;This action does not perform a rollback, and the state of apps, routes and services remains unchanged. Depending on your needs, you might want to remove the new app versions and the temporary routes.&lt;BR /&gt;Let’s use the command to see the effects of:&lt;BR /&gt;As soon as you use the command, the process is aborted:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_19-1755060072766.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300122i6CB4C3B97D1E3484/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_19-1755060072766.png" alt="anmolbhatia003_19-1755060072766.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;However, the idle routes are still available and active&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_20-1755060081670.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300123iEC4396D4FE8FD2C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_20-1755060081670.png" alt="anmolbhatia003_20-1755060081670.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Use "cf deploy -i 2355087a-572f-11f0-aeea-eeee0a8c175e -a resume" to resume the process&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_21-1755060092064.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300124i30037448A850EF0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_21-1755060092064.png" alt="anmolbhatia003_21-1755060092064.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The deployment starts again:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_22-1755060099645.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300125iFF1AED954415CB2D/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_22-1755060099645.png" alt="anmolbhatia003_22-1755060099645.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Checking in the Cloud foundry the idle and live service are not removed and a live service is activated.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anmolbhatia003_23-1755060109172.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300126i35FCA63F6AA7BD78/image-size/large?v=v2&amp;amp;px=999" role="button" title="anmolbhatia003_23-1755060109172.png" alt="anmolbhatia003_23-1755060109172.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;EM&gt;&lt;STRONG&gt;References:&lt;/STRONG&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;1.&amp;nbsp;&lt;A href="https://learning.sap.com/learning-journeys/developing-applications-on-sap-btp-cloud-foundry-runtime/implementing-blue-green-deployment-with-sap-btp-cloud-foundry-runtime-for-zero-downtime-updates" target="_self" rel="noopener noreferrer"&gt;Implementing Blue-Green Deployment with SAP BTP, Cloud Foundry Runtime for Zero Downtime Updates&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;2.&amp;nbsp;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/blue-green-deployment-strategy?q=blue+green+deployment" target="_self" rel="noopener noreferrer"&gt;Blue-Green-Deployment-strategy&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-business-technology-platform-blue-green-deployment-approach-in-sap-btp/ba-p/14179173"/>
    <published>2025-08-22T14:05:01.013000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/multiple-ways-to-give-feedback-on-cap-documentation/ba-p/14199559</id>
    <title>Multiple Ways to Give Feedback on CAP Documentation</title>
    <updated>2025-08-29T16:06:20.583000+02:00</updated>
    <author>
      <name>Ren</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13759</uri>
    </author>
    <content>&lt;P&gt;At CAP, we believe great documentation is a collaborative effort. That's why we've built multiple channels for you to share feedback, report issues, and contribute improvements. Whether you spot a typo, need clarification, or want to suggest new content, we've got you covered.&lt;/P&gt;&lt;H2 id="toc-hId-1738940075"&gt;Quick Feedback: "Was This Page Helpful?&lt;/H2&gt;&lt;P&gt;The fastest way to give feedback is right at the bottom of every documentation page.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ren_0-1756475138757.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306632i4C198466E0AC59CC/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Ren_0-1756475138757.png" alt="Ren_0-1756475138757.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Our "Was This Page Helpful?" widget lets you:&lt;/P&gt;&lt;P&gt;• Give a quick &lt;span class="lia-unicode-emoji" title=":thumbs_up:"&gt;👍&lt;/span&gt; or &lt;span class="lia-unicode-emoji" title=":thumbs_down:"&gt;👎&lt;/span&gt; rating.&lt;BR /&gt;• Add optional comments (up to 140 characters, dialog opens after you gave a rating).&lt;BR /&gt;• Track sentiment without leaving the page.&lt;/P&gt;&lt;P&gt;This feedback is collected anonymously through Matomo analytics and helps us identify which pages need attention. It's perfect for quick reactions and brief improvement suggestions.&lt;/P&gt;&lt;H2 id="toc-hId-1542426570"&gt;Targeted Survey Feedback&lt;/H2&gt;&lt;P&gt;For more structured feedback, click the survey icon in the top navigation bar.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ren_1-1756475306967.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306633iEF5559457CFCF34D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Ren_1-1756475306967.png" alt="Ren_1-1756475306967.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This links to our comprehensive SAP Insights survey where you can:&lt;/P&gt;&lt;P&gt;• Rate different aspects of the documentation.&lt;BR /&gt;• Suggest specific improvements.&lt;BR /&gt;• Share your overall experience with CAP.&lt;BR /&gt;• Provide demographic information to help us understand our audience.&lt;/P&gt;&lt;P&gt;The survey typically takes 5-10 minutes and gives us deeper insights into what's working and what needs improvement. Not only for capire but also for CAP overall.&lt;/P&gt;&lt;H2 id="toc-hId-1345913065"&gt;Issues &amp;amp; Bug Reports: GitHub Issues&lt;/H2&gt;&lt;P&gt;Found a problem? Have a feature request? Head to our &lt;A href="https://github.com/capire/docs/issues" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub Issues&lt;/A&gt; page.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ren_2-1756475432584.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306638iA1B9A311CE4C759D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Ren_2-1756475432584.png" alt="Ren_2-1756475432584.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This is ideal for:&lt;/P&gt;&lt;P&gt;• Bug reports: Broken links, incorrect code examples, outdated information&lt;BR /&gt;• Content requests: Missing documentation, unclear explanations&lt;BR /&gt;• Technical issues: Problems with the website functionality&lt;BR /&gt;• Enhancement suggestions: Ideas for improving existing content&lt;/P&gt;&lt;P&gt;GitHub Issues provide full transparency - you can see what others have reported and track progress on fixes.&lt;/P&gt;&lt;H2 id="toc-hId-1149399560"&gt;Direct Contributions: Edit This Page&lt;/H2&gt;&lt;P&gt;See something that needs a quick fix? At the bottom of every page is an "Edit this page" link that takes you directly to GitHub.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ren_3-1756475486227.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306639i719294297F34DAE2/image-size/small/is-moderation-mode/true?v=v2&amp;amp;px=200" role="button" title="Ren_3-1756475486227.png" alt="Ren_3-1756475486227.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;There you can:&lt;/P&gt;&lt;P&gt;• Fix typos and formatting issues.&lt;BR /&gt;• Update code examples.&lt;BR /&gt;• Add clarifications.&lt;BR /&gt;• Improve explanations.&lt;/P&gt;&lt;P&gt;This leverages GitHub's collaborative features. The process is as follows:&lt;/P&gt;&lt;P&gt;1. Fork the repository&lt;BR /&gt;2. Make your changes&lt;BR /&gt;3. Submit a pull request&lt;BR /&gt;4. Get your improvements reviewed and merged&lt;/P&gt;&lt;H2 id="toc-hId-952886055"&gt;Learning Resources &amp;amp; Community Contributions&lt;/H2&gt;&lt;P&gt;We maintain a curated collection of community learning resources. You can nominate blog posts, tutorials, and other content that helped you learn CAP through &lt;A href="https://github.com/capire/docs/issues/new" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub Issues&lt;/A&gt;. Tag your issue with suggestions for the learning resources page.&lt;/P&gt;&lt;H2 id="toc-hId-756372550"&gt;Contributing to Open Source Projects&lt;/H2&gt;&lt;P&gt;Many CAP components are open source with their own feedback channels:&lt;/P&gt;&lt;P&gt;• &lt;A href="https://github.com/cap-js/cds-dbs" target="_blank" rel="noopener nofollow noreferrer"&gt;CDS Database Services&lt;/A&gt;: Feature requests and bug reports for database connectors&lt;BR /&gt;• &lt;A href="https://github.com/cap-js/cds-types" target="_blank" rel="noopener nofollow noreferrer"&gt;CDS Types&lt;/A&gt;: TypeScript declaration improvements&lt;BR /&gt;• &lt;A href="https://github.com/cap-js/cds-intellij" target="_blank" rel="noopener nofollow noreferrer"&gt;IntelliJ Plugin&lt;/A&gt;: IDE integration feedback&lt;/P&gt;&lt;H2 id="toc-hId-559859045"&gt;Which Channel Should You Use?&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Use the page widget when:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;• You want to quickly rate a page.&lt;BR /&gt;• You have brief suggestions (under 140 characters).&lt;BR /&gt;• You don't need to track the response.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Use the survey when:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;• You want to provide comprehensive feedback.&lt;BR /&gt;• You have time for a detailed questionnaire.&lt;BR /&gt;• You want to influence our documentation strategy.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Use GitHub Issues when:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;• You found a bug or technical problem.&lt;BR /&gt;• You need to include screenshots or code examples.&lt;BR /&gt;• You want to track progress on your request.&lt;BR /&gt;• You're suggesting new content or major changes.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Use "Edit this page" when:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;• You can fix the issue yourself.&lt;BR /&gt;• The change is straightforward (typos, small clarifications).&lt;BR /&gt;• You want to contribute directly to the codebase.&lt;/P&gt;&lt;H2 id="toc-hId-363345540"&gt;What Happens Next?&lt;/H2&gt;&lt;P&gt;Your feedback doesn't go into a black hole! Here's how we process it:&lt;/P&gt;&lt;P&gt;1. Page ratings are monitored weekly to identify problematic content.&lt;BR /&gt;2. Survey responses inform our quarterly documentation roadmap.&lt;BR /&gt;3. GitHub Issues are triaged and assigned to subject matter experts if needed.&lt;BR /&gt;4. Pull requests are reviewed by maintainers and merged when appropriate.&lt;BR /&gt;5. Community contributions are highlighted in our release notes.&lt;/P&gt;&lt;H2 id="toc-hId-166832035"&gt;Get Involved!&lt;/H2&gt;&lt;P&gt;The CAP documentation is a community effort. Whether you're fixing a typo or contributing a comprehensive guide, every improvement helps thousands of developers worldwide.&lt;/P&gt;&lt;P&gt;Ready to contribute? Start with something small - maybe rate this blog post or leave us a comment. Every&lt;BR /&gt;contribution makes CAP better for everyone.&lt;/P&gt;&lt;P&gt;Have ideas for improving our feedback mechanisms? We'd love to hear them! Use any of the channels above to let us know.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/multiple-ways-to-give-feedback-on-cap-documentation/ba-p/14199559"/>
    <published>2025-08-29T16:06:20.583000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/effective-axios-error-logging-for-robust-sap-integrations/ba-p/14201836</id>
    <title>Effective Axios Error Logging for Robust SAP Integrations</title>
    <updated>2025-08-31T16:50:12.285000+02:00</updated>
    <author>
      <name>Sahil2508</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1527875</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1888104746"&gt;&lt;BR /&gt;&lt;SPAN&gt;Comparing Error Responses: Which One Aids Debugging Better?&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Suppose we have executed an HTTP request using CAP and it fails. Below are two logged error responses:&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;1st Scenario:&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Axios-Error.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307021i73987CAA32F7D95A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Axios-Error.png" alt="Axios-Error.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;EM&gt;&lt;STRONG&gt;2nd Scenario:&lt;/STRONG&gt;&lt;/EM&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Axios-Error-Handling.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307048iF2FA4DAA41B8AA6E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Axios-Error-Handling.png" alt="Axios-Error-Handling.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;It’s immediately clear which version is easier to debug and helps us quickly identify the reason for the failure.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;When building SAP extensions or integrations, developers often rely on &lt;STRONG&gt;Axios&lt;/STRONG&gt; for handling HTTP requests. While Axios simplifies API communication, error handling can quickly become a challenge—especially when debugging complex integration scenarios.&lt;/P&gt;&lt;P&gt;In many projects, errors are either logged with too little detail (just a generic message) or with too much raw data, making debugging time-consuming. To improve maintainability and speed up root cause analysis, we need a &lt;STRONG&gt;structured error logging mechanism&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1691591241"&gt;Why Structured Error Logging Matters&lt;/H3&gt;&lt;P&gt;In enterprise scenarios like SAP SuccessFactors or SAP BTP service integrations, requests often involve multiple systems. Without detailed error insights, you might only see:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;Error: Request failed with status code 400&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;But what you really need is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Which &lt;STRONG&gt;endpoint&lt;/STRONG&gt; failed?&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;What &lt;STRONG&gt;payload&lt;/STRONG&gt; was sent?&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;What was the &lt;STRONG&gt;response from the server&lt;/STRONG&gt;?&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Was there any &lt;STRONG&gt;custom error code&lt;/STRONG&gt; attached?&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This is where a structured error handling approach becomes invaluable.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1495077736"&gt;Implementation: A Structured Axios Error Logger&lt;/H3&gt;&lt;P&gt;Here’s a reusable utility function you can plug into your Node.js / TypeScript projects:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;public getAxiosErrorObject(error: any) {
  if (error.isAxiosError) {
    const errorObj = {
      message: error.message || 'An error occurred during the request.',
      code: error.code || 'UNKNOWN',
      status: error.response ? error.response.status : 'No Status',
      statusText: error.response ? error.response.statusText : 'No Status Text',
      requestData: error.config ? error.config.data : 'No Request Data',
      requestMethod: error.config ? error.config.method : 'No Request Method',
      requestUrl: error.config ? error.config.url : 'No Request URL',
      responseData: error.response ? error.response.data : 'No Response Data'
    };
    return errorObj;
  }
  return {
    message: error.message || 'An unknown error occurred',
    stack: error.stack || 'No Stack Trace'
  };
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1298564231"&gt;How It Works&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Checks if it’s an Axios error&lt;/STRONG&gt;&lt;BR /&gt;Axios sets error.isAxiosError = true. This allows us to distinguish between HTTP request errors and other runtime issues.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Captures request details&lt;/STRONG&gt;&lt;BR /&gt;The request URL, method, and payload are logged, which is crucial for reproducing and debugging issues.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Captures response details&lt;/STRONG&gt;&lt;BR /&gt;If the server responded, we extract the &lt;STRONG&gt;status code&lt;/STRONG&gt;, &lt;STRONG&gt;status text&lt;/STRONG&gt;, and &lt;STRONG&gt;response body&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Fallback for non-Axios errors&lt;/STRONG&gt;&lt;BR /&gt;In cases where the error didn’t come from Axios (e.g., runtime exceptions), we still log a meaningful message and stack trace.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1102050726"&gt;Example Usage&lt;BR /&gt;&lt;BR /&gt;&lt;/H3&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;try {
  const response = await axios.post('/api/employees', { name: 'Sahil M' });
  console.log(response.data);
} catch (error) {
  const structuredError = this.getAxiosErrorObject(error);
  console.error('API Error:', structuredError);
}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-905537221"&gt;Example Output &amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/H3&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;{
  "message": "Request failed with status code 400",
  "code": "ERR_BAD_REQUEST",
  "status": 400,
  "statusText": "Bad Request",
  "requestData": "{\"name\":\"Sahil M\"}",
  "requestMethod": "post",
  "requestUrl": "/api/employees",
  "responseData": {
    "error": "Invalid employee data"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-709023716"&gt;Best Practices&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Avoid logging sensitive data&lt;/STRONG&gt;&lt;BR /&gt;When logging request payloads, ensure no confidential fields (e.g., passwords, tokens) are exposed.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Integrate with monitoring tools&lt;/STRONG&gt;&lt;BR /&gt;Forward structured error logs to tools like &lt;STRONG&gt;SAP Cloud Logging&lt;/STRONG&gt;&amp;nbsp;for central monitoring.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Normalize error structure&lt;/STRONG&gt;&lt;BR /&gt;Use this function as a single source of truth for error logging across your project, ensuring consistent logs.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Enhance with correlation IDs&lt;/STRONG&gt;&lt;BR /&gt;In SAP integrations, add &lt;STRONG&gt;transaction or correlation IDs&lt;/STRONG&gt; to quickly trace requests across systems.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/effective-axios-error-logging-for-robust-sap-integrations/ba-p/14201836"/>
    <published>2025-08-31T16:50:12.285000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/devtoberfest-blog-posts/introducing-the-devtoberfest-scavenger-hunt-coming-soon/ba-p/14183972</id>
    <title>Introducing the Devtoberfest Scavenger Hunt 🔨🪙 ... COMING SOON</title>
    <updated>2025-09-01T08:09:22.994000+02:00</updated>
    <author>
      <name>Dan_Wroblewski</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/72</uri>
    </author>
    <content>&lt;P&gt;Welcome to the&amp;nbsp;&lt;STRONG&gt;Devtoberfest Scavenger Hunt&lt;/STRONG&gt;, a chase around important SAP developer-related tools/sites, a challenge to construct a secret phrase, and a chance to win 1000s of points toward the Devtoberfest &lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-grand-prize-trip-faq/ba-p/13781581" target="_self"&gt;grand prize&lt;/A&gt;.&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;The hunt officially starts &lt;STRONG&gt;Sept. 25&lt;/STRONG&gt;, with the release of the first clue during that day's &lt;STRONG&gt;SAP Developer News&lt;/STRONG&gt;, and you have until the end of Devtoberfest, &lt;STRONG&gt;Oct. 24&lt;/STRONG&gt;, to complete it.&lt;/P&gt;&lt;TABLE border="2" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;To get all the clues make sure to &lt;STRONG&gt;SUBSCRIBE TO THIS POST!!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Dan_Wroblewski_0-1756392968630.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306022iE4681CFA8F3E546E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Dan_Wroblewski_0-1756392968630.png" alt="Dan_Wroblewski_0-1756392968630.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Learn more about the&amp;nbsp; entire Devtoberfest event in&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1423549"&gt;@KevinR&lt;/a&gt;'s post&amp;nbsp;&lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-welcome/ba-p/14182817" target="_self"&gt;Devtoberfest 2025 Welcome!&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="frame0004-Photoroom" style="width: 222px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303712iDEFAB5049DFD4CE1/image-dimensions/222x145/is-moderation-mode/true?v=v2" width="222" height="145" role="button" title="frame0004-Photoroom" alt="frame0004-Photoroom" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1737841707"&gt;What you need to find&lt;/H2&gt;&lt;P&gt;We have hidden a special phrase, which you need to figure out using the clues in the next section. Along your journey you will do the following:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Visit about 10 different locations related to SAP developers, mostly web sites that are designed to help you in your daily SAP development.&lt;/LI&gt;&lt;LI&gt;At each location, you will discover a set of hexadecimal digits.&lt;/LI&gt;&lt;LI&gt;Concatenate the digits together (in the order of the missions) to get one, 37-digit hexadecimal number.&lt;/LI&gt;&lt;LI&gt;Multiply that hexadecimal number by another secret number, for which we will give a clue.&lt;/LI&gt;&lt;LI&gt;Take the resulting 38-digit hexadecimal product, and convert it into the secret phrase, using each pair of digits as ASCII characters.&lt;/LI&gt;&lt;LI&gt;Enter the phrase, exactly (case-sensitive, no extra spaces), into the &lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-scavenger-hunt.html" target="_self" rel="noopener noreferrer"&gt;Scavenger Hunt tutorial&lt;/A&gt;.‌&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Not until the SAP Developer News of Oct. 16 will you have all the pieces to be able to complete the phrase.&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1670410921"&gt;Example Mission&lt;/H3&gt;&lt;P&gt;As an example of what you will have to do, here's a short sample mission (just a warm-up, no points will be earned).&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;Mission&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;No. Digits&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;SAP Web Property&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Instructions&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="289px"&gt;1&lt;/TD&gt;&lt;TD width="10%" height="289px"&gt;7&lt;/TD&gt;&lt;TD width="30%" height="289px"&gt;&lt;P&gt;&lt;FONT color="#7C484A"&gt;&lt;STRONG&gt;SAP Developers YouTube Channel&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="289px"&gt;&lt;P&gt;Go to our &lt;A href="https://www.youtube.com/@sapdevs/videos" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Developer YouTube channel&lt;/A&gt;.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Open &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/156020"&gt;@Rekha_DR&lt;/a&gt;'s video "&lt;A href="https://youtu.be/1vElTfSxGWM?si=VO5Asnf6paocjKru" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Build Process Automation (Part 1): Build your very first process&lt;/A&gt;". Watch it and find the secret 7-digit hexadecimal number in one of the info cards.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_1-1756706383435.png" style="width: 580px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307154i7E73F36E50823BD8/image-dimensions/580x300/is-moderation-mode/true?v=v2" width="580" height="300" role="button" title="Dan_Wroblewski_1-1756706383435.png" alt="Dan_Wroblewski_1-1756706383435.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;2&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;6&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&lt;FONT color="#7C484A"&gt;&lt;STRONG&gt;SAP Community&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;P&gt;Use the Developer Tools on your browser to inspect the words "SAP Community" in the previous column and find the 6-digit ASCII code for the color of the text.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_0-1756706325713.png" style="width: 565px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307152i1D8D7FDEE95C1713/image-dimensions/565x202/is-moderation-mode/true?v=v2" width="565" height="202" role="button" title="Dan_Wroblewski_0-1756706325713.png" alt="Dan_Wroblewski_0-1756706325713.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;3&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;None (directly)&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;P&gt;Concatenate the 2 sets of hexadecimal digits, in order, and multiply the resulting hexadecimal number by the number of original SAP founders (you can easily find the number on the &lt;A href="https://en.wikipedia.org/wiki/SAP" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Wikipedia page&lt;/A&gt;).&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Convert the resulting hexadecimal number into a phrase, converting each pair of digits into a character using ASCII codes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Post a comment/picture&amp;nbsp;about the phrase -- but NOT the phrase itself&amp;nbsp; (like your experiences with or opinion about the phrase, or a picture of something belonging to you that reminds you of the phrase) -- you won't get any points, but it will be fun and you will be ready for the real scavenger hunt. If you have any trouble with this example mission, post in the comments.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;REMINDER:&lt;/STRONG&gt; The above is just an example of how the real scavenger hunt will work. The real scavenger hunt instructions will be described in the rest of this blog post, as clues become available.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1344814697"&gt;The (real) mission&lt;/H2&gt;&lt;P&gt;Below are the instructions for finding the hexadecimal digits for the actual scavenger hunt. We will release clues as follows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the SAP Developer News of &lt;STRONG&gt;Sept. 25&lt;/STRONG&gt;, &lt;STRONG&gt;Oct. 2&lt;/STRONG&gt;, &lt;STRONG&gt;Oct. 9&lt;/STRONG&gt;, and &lt;STRONG&gt;Oct. 16&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;In this blog &lt;STRONG&gt;each Monday during the first 3 weeks of Devtoberfest&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;To be notified when a new clue is released,&amp;nbsp;&lt;STRONG&gt;SUBSCRIBE TO THIS POST!!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="rule.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295882i3E2967613A5D1256/image-size/large?v=v2&amp;amp;px=999" role="button" title="rule.png" alt="rule.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;‌ &lt;SPAN&gt;When you find the secret phase, just enter it into this &lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-scavenger-hunt.html" target="_self" rel="noopener noreferrer"&gt;Devtoberfest tutorial&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_0-1756261779255.png" style="width: 1009px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305319iF03452ECEE94B400/image-dimensions/1009x185/is-moderation-mode/true?v=v2" width="1009" height="185" role="button" title="Dan_Wroblewski_0-1756261779255.png" alt="Dan_Wroblewski_0-1756261779255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To guide you, we have created a &lt;A href="http://developers.sap.com/tutorials/devtoberfest2025-scavenger-hunt-checking.html" target="_self" rel="noopener noreferrer"&gt;second tutorial&lt;/A&gt; -- you do not have to use it, nor do you get any points from it. But you can enter the 1 to 6 digits from each mission to check if you received the correct digits for that mission.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_1-1756261827758.png" style="width: 984px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305320i6D6063DA1D7F3A96/image-dimensions/984x185/is-moderation-mode/true?v=v2" width="984" height="185" role="button" title="Dan_Wroblewski_1-1756261827758.png" alt="Dan_Wroblewski_1-1756261827758.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="rule.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295882i3E2967613A5D1256/image-size/large?v=v2&amp;amp;px=999" role="button" title="rule.png" alt="rule.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1406466630"&gt;Here are your missions:&lt;/H4&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;Mission&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;No. Digits&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;SAP Web Property&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Instructions&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;1&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;2&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&lt;P&gt;&lt;STRONG&gt;SAP Developer News&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.youtube.com/playlist?list=PL6RpkC85SLQAVBSQXN9522_1jNvPavBgg" target="_self" rel="nofollow noopener noreferrer"&gt;The Developer News&lt;/A&gt; comes out each Thursday with the latest about ABAP, CAP, BTP, SAP Build, UI5, Fiori, AI, and all your favorite SAP developer topics. All delivered by some of your favorite Developer Advocates, like DJ, Shilpa Shankar, Thomas Jung, Antonio Maradiaga, Nora von Thenen and the rest of the gang.&lt;/P&gt;&lt;P&gt;Most episodes about 5 minutes. Also available as a &lt;A href="https://podcast.opensap.info/sap-developers/" target="_self" rel="nofollow noopener noreferrer"&gt;Podcast&lt;/A&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Watch the Developer News of Sept. 25&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;2&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;6&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;To be released Sept. 29&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;3&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;4&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;To be released Sept. 29&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;4&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;2&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Watch the Developer News of Oct. 2&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;5&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;4&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;To be released Oct. 6&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;6&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;6&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;To be released Oct. 6&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;7&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;6&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Watch the Developer News of Oct. 9&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;8&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;6&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;To be released Oct. 13&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;9&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;1&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;To be released Oct. 13&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10%" height="30px"&gt;10&lt;/TD&gt;&lt;TD width="10%" height="30px"&gt;None (directly)&lt;/TD&gt;&lt;TD width="30%" height="30px"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Watch the Developer News of Oct. 16&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Good luck!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":grinning_cat_face_with_smiling_eyes:"&gt;😸&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/devtoberfest-blog-posts/introducing-the-devtoberfest-scavenger-hunt-coming-soon/ba-p/14183972"/>
    <published>2025-09-01T08:09:22.994000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/tree-table-support-in-cap-is-now-generally-available/ba-p/14202772</id>
    <title>Tree-Table Support in CAP is Now Generally Available</title>
    <updated>2025-09-01T11:31:42.912000+02:00</updated>
    <author>
      <name>BirgitS</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/41902</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Since July, the Tree-Table Support in the SAP Cloud Programming Model (CAP) is generally available. This exciting milestone represents the culmination of months of dedicated work. Our journey began in February with the initial release of &lt;A href="https://cap.cloud.sap/docs/releases/archive/2025/feb25#hierarchy-maintenance-in-tree-table" target="_blank" rel="noopener nofollow noreferrer"&gt;Hierarchy Maintenance in the Tree Table for Java&lt;/A&gt;, followed in March by &lt;A href="https://cap.cloud.sap/docs/releases/archive/2025/mar25#recursive-hierarchies-and-fiori-tree-table-support" target="_blank" rel="noopener nofollow noreferrer"&gt;Recursive Hierarchies and Fiori Tree Table support for Node.js&lt;/A&gt; in beta. Since then, we’ve consistently rolled out new features in beta, leading up to July 2025 when we officially announced that CAP's tree view support has exited beta and &lt;A href="https://cap.cloud.sap/docs/releases/july25#fiori-tree-views-ga" target="_blank" rel="noopener nofollow noreferrer"&gt;is now generally available&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Features&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Hierarchical Entities Definition&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Use standard OData/Fiori annotations to define hierarchical entities.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Hierarchical Queries&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Hierarchical queries from the underlying &lt;A href="https://www.sap.com/design-system/fiori-design-web/ui-elements/tree-table/?external" target="_blank" rel="noopener noreferrer"&gt;SAPUI5 Tree Table&lt;/A&gt; components are generically served by CAP runtimes.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Read-Only Usage&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Hierarchical entities can be used in read-only mode in List Views and Value Helps, including expanding/collapsing of an entire tree or separate nodes as well as sort, filter, and search functionalities on hierarchical data.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="TreeTables1.png" style="width: 540px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307285iD479D795CD0BD6BC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="TreeTables1.png" alt="TreeTables1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Modification Capabilities for&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/advanced/fiori#draft-support" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;draft enabled&lt;/STRONG&gt;&lt;/A&gt;&lt;STRONG&gt;&amp;nbsp;entities:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Node Operations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Create new nodes, add them as root or child nodes, modify and delete nodes, and change a parent of a child node (node movement).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="TreeTables2.png" style="width: 403px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307287i237D10B3F09CDA4D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="TreeTables2.png" alt="TreeTables2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Hierarchy Management&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Deleting a node will cascade the deletion to its descendant nodes if they are in a composition relationship with the deleted node.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Object Page Support&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: The same set of modifications is supported on the Object Page, with the main difference, that all nodes on the List View have their own drafts, but all nodes on the Object Page belong to the same draft.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Database Support&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;/LI&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;For&lt;STRONG&gt; Java&lt;/STRONG&gt; we already support SAP HANA and H2, with PostgreSQL to follow.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;For&lt;STRONG&gt; Node.js&lt;/STRONG&gt; we support SAP HANA, SQLite, and PostgreSQL.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Current Limitations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We want to keep you informed about what’s not (yet) supported so you can plan accordingly:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Interception and modification of hierarchical queries in custom handlers &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Arbitrary OData query options other than the ones served today for SAPUI5 Tree Table&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Get Started&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Demo&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Check out our demo session recording from &lt;A href="https://recap-conf.dev/" target="_blank" rel="noopener nofollow noreferrer"&gt;reCAP 2025&lt;/A&gt;:&amp;nbsp;&lt;A href="https://www.youtube.com/watch?v=qZpWvwayIP8&amp;amp;list=PLJDFklpD_2cTjReIS8xQ2L0HnfjoxPUxd&amp;amp;index=11" target="_blank" rel="noopener nofollow noreferrer"&gt;TreeTables Support in CAP&lt;/A&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Try it out&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Explore the new features in our bookshop sample apps for&amp;nbsp;&lt;A href="https://github.com/SAP-samples/cloud-cap-samples-java" target="_blank" rel="noopener nofollow noreferrer"&gt;CAP Java&lt;/A&gt;&amp;nbsp;and&amp;nbsp;&lt;A href="https://github.com/capire/samples" target="_blank" rel="noopener nofollow noreferrer"&gt;CAP Node.js&lt;/A&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The general availability of Tree-Table Support in CAP opens up a wealth of opportunities to streamline hierarchical data management. We encourage you to dive in, explore the capabilities, and share your experiences with the community. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Happy coding!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/tree-table-support-in-cap-is-now-generally-available/ba-p/14202772"/>
    <published>2025-09-01T11:31:42.912000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/leveraging-sap-reference-architecture-for-event-driven-application-in/ba-p/14204897</id>
    <title>Leveraging SAP Reference Architecture for Event-Driven Application in Missing Part Fulfilment Busine</title>
    <updated>2025-09-02T18:15:58.170000+02:00</updated>
    <author>
      <name>Cocquerel</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/754</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the era of Industry 4.0, the ability to respond to real-time events in industrial production is crucial for operational efficiency. This blog outlines a proof of concept (PoC) that demonstrates how Airbus leveraged SAP Business Technology Platform (BTP), SAP Build Process Automation (BPA), and Events-to-Business Actions Framework to automate and orchestrate the missing part fulfillment process within production operations. The solution leverages an event-driven architecture to automate business processes based on missing part fulfillment in real-time.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This architecture is highly repeatable and can be applied to a wide range of SAP scenarios such as plant maintenance, purchase requisitions, inventory updates, and more, making it a valuable reference for enterprises looking to scale event-driven integrations.&lt;/SPAN&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Engagement&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Cocquerel_0-1756829031891.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308081i7565797D7242D648/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Cocquerel_0-1756829031891.png" alt="Cocquerel_0-1756829031891.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The outcome described in this article was facilitated by custom adaptation of the Events-to-Business-Actions Framework by Airbus and was supported by SAP OCTO Team under &lt;/SPAN&gt;&lt;A href="https://www.linkedin.com/in/pavankumarpvn/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;PVN Pavankumar&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Business Scenario : Missing Part Fulfilment in Production&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The use case centres on streamlining the missing part fulfilment process within Airbus production operations. It begins when a missing part is detected for a work order reservation in the SAP ECC backend, which supports day-to-day production activities. From that initial identification, the process continues all the way through to the confirmation of the work order operation.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Throughout this journey, the workflow leverages an event-driven architecture (EDA) to track progress in real time, integrating seamlessly with backend systems. SAP Build Process Automation (BPA) orchestrates collaboration between all involved actors by sending out forms and notifications, gathering approvals, and automating decisions based on predefined business rules. Additionally, the PoC highlights the real-time monitoring and dashboarding features of SAP Build Process Automation, ensuring end-to-end visibility across the process.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This PoC showcases how we made that happen.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Solution Architecture&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below is the architecture diagram representing the technical landscape for the missing part fulfilment process.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Cocquerel_1-1756829031891.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308082i8B4EA8BC88B1E716/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Cocquerel_1-1756829031891.png" alt="Cocquerel_1-1756829031891.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Figure 1: End-to-end architecture of the Airbus missing part fulfillment solution using SAP BTP, Advanced Event Mesh, E2B Framework, and custom Node.js applications.&lt;/SPAN&gt;&lt;/I&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Technical Implementation&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This architecture leverages key components across SAP BTP, Advanced Event Mesh, and custom applications to create a robust event-to-action pipeline: The Solution Architecture is illustrated in Figure 1, and the important components along with their connectivity are explained below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt; &lt;/SPAN&gt;&lt;STRONG&gt;Business events are triggered:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Different actors interact with the SAP backend (supporting production operations). Transactions such as work order reservations, purchase orders, or outbound deliveries generate relevant business events.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt; &lt;/SPAN&gt;&lt;STRONG&gt;Events are routed to SAP Integration Suite, Advanced Event Mesh (AEM):&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;These events are sent to SAP Integration Suite, Advanced Event Mesh—either directly or via Solace event brokers in Airbus Private Cloud, especially if events need to be shared with other platforms.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;Event-specific queues manage the flow:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Within SAP Integration Suite, Advanced Event Mesh, specific queues collect events related to predefined topics, pushing them into the Events to Business Actions (E2B) framework.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;Business logic and workflows are triggered:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;E2B calls SAP Build Process Automation (BPA) APIs to:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Apply decision rules and determine what business action should occur based on the event payload,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Launch new workflow instances,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Update waiting tasks on running workflows,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Push events to visibility scenarios for process monitoring.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;Backend queries for richer context:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;E2B also calls backend APIs to fetch more information related to business objects—such as:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Details of a reservation linked to a purchase order,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The specific station tied to a work order reservation,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The list of actors involved, leveraging Responsibility Management in SAP S/4HANA based on attributes like station.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;Traceability with PartsNow:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;PartsNow, is a custom SAP Cloud Application Programming (CAP,Node.js) application, used to persist the relationship between workflow instance IDs and related work order reservation IDs. E2B registers new workflow instances and can retrieve instance details as needed via PartsNow APIs.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;Unified user experience in SAP Build Workzone:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;SAP Build Workzone serves as the entry point for business actors, providing:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;My Inbox&lt;/SPAN&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;SPAN&gt; For completing tasks such as form fills or approvals,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;My Processes&lt;/SPAN&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;SPAN&gt; For real-time workflow monitoring,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Process Visibility Dashboard&lt;/SPAN&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;SPAN&gt; To track KPIs and process efficiency,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Studio Home&lt;/SPAN&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;SPAN&gt; Where process specialists can manage BPA decision rules.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;-&amp;gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;Automated notifications and integration points:&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Finally, SAP BPA calls remote APIs to:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Inform the PartsNow app about workflow instance completion,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Send email notifications to relevant actors via an SMTP server.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Developer Insights&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As a developer building this PoC, a few key learnings stand out:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Loose coupling using SAP Integration Suite, Advanced Event Mesh and queues ensures resiliency and scalability.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Decision capability in SAP Build Process Automation allowed us to externalize complex logic from the app code, making it easier to maintain and extend.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Using SAP BTP Destinations and Service Bindings helped standardize secure backend access across environments.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Deployment Steps&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Follow this &lt;/SPAN&gt;&lt;A href="https://github.com/SAP-samples/btp-events-to-business-actions-framework/tree/main/scenarios/Integration-with-AWS/IoTSiteWise" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;GitHub documentation&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;for detailed steps for configuration and deployment.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Closing Remarks&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We hope this blog has inspired new ideas for applying event-driven automation to your own business processes.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Refer to &lt;/SPAN&gt;&lt;A href="https://architecture.learning.sap.com/docs/ref-arch/fbdc46aaae" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Architecture Centre&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;A href="https://github.com/SAP-samples/btp-events-to-business-actions-framework/tree/main" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;Events-to-Business-Actions Framework Repository&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; for implementation details.&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Thanks to colleagues from SAP OCTO Team &lt;/SPAN&gt;&lt;A href="https://www.linkedin.com/in/praveenkumarpadegal/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;Praveen Kumar Padegal&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;A href="https://www.linkedin.com/in/swati-maste/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;Swati Maste&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; for their support.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/leveraging-sap-reference-architecture-for-event-driven-application-in/ba-p/14204897"/>
    <published>2025-09-02T18:15:58.170000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849</id>
    <title>Boost your CAP Development with AI: Introducing the MCP Server for CAP</title>
    <updated>2025-09-03T09:45:05.665000+02:00</updated>
    <author>
      <name>BirgitS</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/41902</uri>
    </author>
    <content>&lt;P&gt;Imagine the following: You are an experienced developer, working on SAP Cloud Application Programming Model (CAP) projects. You use AI agents, such as Claude Code, opencode, or GitHub Copilot, to support you in your daily work. Wouldn't it be cool if the used LLM can help you develop CAP applications? With our new MCP server for CAP, we can provide more context about your project as well as relevant CAP examples to steer the LLM in doing the right thing.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is an MCP Server?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;An MCP (&lt;A href="https://modelcontextprotocol.io/docs/getting-started/intro" target="_blank" rel="noopener nofollow noreferrer"&gt;Model Context Protocol&lt;/A&gt;) server is designed to manage and deliver capabilities to Large Language Models (LLMs) via AI agents. It bridges the gap between LLMs and external resources such as services, tools, and data, enabling LLMs to interact with these resources. The newly introduced MCP server for CAP transforms AI agents into CAP development experts. It provides context-focused tools that aim to help the AI agent to answer questions such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Which CDS (Core Data Services) services does my project expose and where are they served?&lt;/LI&gt;&lt;LI&gt;What are the entities about and how do they relate to each other?&lt;/LI&gt;&lt;LI&gt;How do I add columns to a select statement in CAP Node.js?&lt;/LI&gt;&lt;LI&gt;How can I register custom READ handlers in CAP Java?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The MCP Server for CAP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the context of the assisted development introduced in the beginning, this means: You might ask the LLM to add, for example, a bound action `setToCompleted` to the entity `Orders`. Without our new MCP server for CAP, the LLM would hallucinate and could invent a new syntax and do a lot of file searches to find the relevant file. With the help of our new MCP server for CAP the LLM behaves as intended. To do so, the LLM generates a tool call to check the Orders entity and relevant information is returned, such as its elements and file location. It also generates a tool call to check the CAP documentation for bound actions. Based on the results, it generates the correct CDS code to add the bound action. This, of course, is just one example. We designed our MCP server for CAP to help you with arbitrary tasks instead of focusing on single commands.&lt;/P&gt;&lt;P&gt;For this purpose, our newly introduced MCP server for CAP provides the following two tools for AI-assisted development of CAP applications:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;search_model&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This tool allows the AI model to perform a fuzzy search for CDS definitions (entities, services, actions) within a unified compiled CDS model of all your&amp;nbsp;.cds&amp;nbsp;files. This CDS model includes the model structure and relationships, annotations and metadata, and the generated HTTP endpoints.&lt;/P&gt;&lt;P&gt;The fuzzy search algorithm matches definition names and supports partial matches, making it easy to find entities such as "Books" even when searching for "book".&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;search_docs&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This tool enables the AI model to perform a semantic search through the preprocessed&amp;nbsp; &lt;A href="https://cap.cloud.sap/" target="_blank" rel="noopener nofollow noreferrer"&gt;CAP documentation&lt;/A&gt;, which is stored locally as embeddings. The search query is converted to an embedding vector. Finally, a similarity search is performed to find the relevant parts of the documentation, which have the highest semantic similarity to your query even if the exact keywords are not used.&lt;/P&gt;&lt;P&gt;Please note: These tools are meant to be used by AI models and do not constitute a stable API. But for experimental purposes, you can also use the tools directly from the command line as documented here: &lt;A href="https://github.com/cap-js/mcp-server?tab=readme-ov-file#cli-usage" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP server for AI-assisted development of CAP applications&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Try it out&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Are you excited to try it out? Detailed instructions can be found here: &lt;A href="https://github.com/cap-js/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP server for AI-assisted development of CAP applications&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Important: Our MCP Server for CAP is designed to support professional developers in their daily work. As with all AI-generated information, you should check the generated results carefully to avoid unintended side effects.&lt;/P&gt;&lt;P&gt;We are excited to announce that the MCP Server for CAP is an open-source project, licensed under the Apache-2.0 license. Learn more about &lt;A href="https://opensource.sap.com/" target="_blank" rel="noopener noreferrer"&gt;open source at SAP&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;We are very curious to see what you will do with our &lt;A href="https://npmjs.com/package/@cap-js/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP s&lt;U&gt;e&lt;/U&gt;&lt;U&gt;rver for CAP&lt;/U&gt;&lt;/A&gt;! Please don't hesitate to provide your feedback here or report any issues in our &lt;A href="https://github.com/cap-js/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub repository&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Beyond CAP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We also offer a &lt;A href="https://github.com/UI5/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;UI5 MCP server&lt;/A&gt; and an &lt;A href="https://github.com/SAP/open-ux-tools/tree/main/packages/fiori-mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP server for SAP Fiori&lt;/A&gt;, ensuring that you have a comprehensive suite of tools to enhance your development workflow across various SAP technologies. You can find the packages here: &lt;A href="https://www.npmjs.com/package/@ui5/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;UI5 MCP server&lt;/A&gt; and &lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP server for SAP Fiori&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;The introduction of the MCP servers for CAP, SAPUI5 and SAP Fiori marks a significant step forward in leveraging AI to enhance developer productivity.&lt;/P&gt;&lt;P&gt;Stay tuned for more updates. Happy coding!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849"/>
    <published>2025-09-03T09:45:05.665000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-update-first-release-of-the-sap-fiori-mcp-server-for/ba-p/14204694</id>
    <title>SAP Fiori Tools Update – First Release of the SAP Fiori MCP Server for Agentic AI Workflows</title>
    <updated>2025-09-03T09:45:49.103000+02:00</updated>
    <author>
      <name>Christoph_Gollmick</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/14530</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;We’re excited to announce the &lt;STRONG&gt;release of the SAP Fiori MCP server&lt;/STRONG&gt;, a new capability that lets AI coding assistants directly create and edit &lt;/SPAN&gt;&lt;SPAN&gt;SAP Fiori applications. This marks the next milestone in our AI journey, following the &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/from-idea-to-app-using-ai-powered-project-accelerator-to-develop-sap-fiori/ba-p/14095300" target="_blank"&gt;Project Accelerator&lt;/A&gt; introduced earlier this year. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What is MCP — and why it matters?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The &lt;STRONG&gt;Model Context Protocol (MCP)&lt;/STRONG&gt; is an &lt;A href="https://modelcontextprotocol.io/docs/getting-started/intro" target="_blank" rel="noopener nofollow noreferrer"&gt;open standard&lt;/A&gt; that standardizes how applications provide context to large language models. MCP is already supported by clients such as Claude, Cline, Cursor, and VS Code allowing AI-powered workflows to interact seamlessly with developer tools.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introducing the SAP Fiori MCP server&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The SAP Fiori MCP server (&lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;@sap-ux/fiori-mcp-server&lt;/A&gt;) is an open-source node.js module delivered as part of the &lt;STRONG&gt;open-ux-tools &lt;/STRONG&gt;&lt;A href="https://github.com/SAP/open-ux-tools/" target="_self" rel="nofollow noopener noreferrer"&gt;repository&lt;/A&gt;. It enables developers using AI coding assistants to generate and adapt SAP Fiori elements applications with precision and context awareness. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It is not the only MCP server published by SAP. The &lt;STRONG&gt;CAP MCP server&lt;/STRONG&gt; (&lt;A href="https://www.npmjs.com/package/@cap-js/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;@cap-js/mcp-server&lt;/A&gt;) provides tools to create and modify CAP node.js projects, and the &lt;STRONG&gt;UI5 MCP server&lt;/STRONG&gt; (&lt;A href="https://www.npmjs.com/package/@ui5/mcp-server" target="_blank" rel="noopener nofollow noreferrer"&gt;@ui5/mcp-server&lt;/A&gt;)&lt;/SPAN&gt;&lt;SPAN&gt; allows AI assistants to write SAPUI5&lt;/SPAN&gt;&lt;SPAN&gt; code. Together, these servers provide complementary entry points into different areas of SAP application development, so that AI assistants can seamlessly &lt;/SPAN&gt;&lt;SPAN&gt;data models, SAP Fiori applications, and SAPUI5 code.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With the MCP servers in place, you can already try out scenarios such as:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;“Please add an SAP Fiori elements list report app to my CAP project.”&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;“Generate a new CAP project and SAP Fiori app based on my_sketch.png.”&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;“Add Flexible Column Layout to the app.”&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;“Enable initial load for the SAP Fiori app.”&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;⚠&lt;SPAN&gt;️ &lt;EM&gt;Note: The SAP Fiori MCP server is currently released in &lt;STRONG&gt;experimental state&lt;/STRONG&gt; and subject to rapid change and enhancements.&lt;/EM&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI assistants can discover and act on SAP Fiori projects&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The first release comes with a set of capabilities designed to let AI assistants both discover and act on SAP Fiori projects. The SAP Fiori MCP server provides tools to generate SAP Fiori elements applications for CAP node.js projects, finds SAP Fiori applications in the workspace, and allows to edit applications and pages inside applications. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To ensure that the AI produces correct results, we propose rules that guide the LLM’s behavior (see &lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server#rules" target="_blank" rel="noopener nofollow noreferrer"&gt;rules&lt;/A&gt;). These rules cover important aspects such as using proper SAP Fiori elements application patterns, ensuring data models are valid with UUID primary keys, generating sample data consistently, and preferring code-based modifications over screen personalization. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can configure the server to be directly called with npx or install it globally via npm (see &lt;A href="https://www.npmjs.com/package/@sap-ux/fiori-mcp-server#usage" target="_blank" rel="noopener nofollow noreferrer"&gt;usage&lt;/A&gt;). In both cases, it integrates easily into an MCP-enabled client such as Cline.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Example how the SAP Fiori MCP server is used in Cline." style="width: 765px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308017iA55B99B19DAD23CD/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Christoph_Gollmick_1-1756821532142.png" alt="Example how the SAP Fiori MCP server is used in Cline." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Example how the SAP Fiori MCP server is used in Cline.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Developers can build apps more quickly using MCP servers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;By connecting directly into SAP Fiori projects through MCP, developers gain a much more cost-effective way to experiment with AI support. They can let LLMs execute complex tasks in context—while the built-in functions and rules ensure adherence to SAP Fiori best practices. This reduces the risk of hallucinations, accelerates prototyping, and makes it easier to iterate quickly on new ideas. Since the SAP Fiori MCP server is &lt;/SPAN&gt;&lt;SPAN&gt;with other MCP servers like UI5 and CAP, developers can benefit from a consistent AI-driven experience across different parts of the development process.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;This is the first step on the MCP journey&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The current release is just the first step. We are already working on extending the server with a &lt;STRONG&gt;document search feature&lt;/STRONG&gt; that will make guidance from SAP documentation, tutorials, and examples directly available to the LLM. This means that the AI assistant won’t just follow rules embedded in the server but can also draw from the wealth of published learning content.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In addition, the &lt;STRONG&gt;generator functionality&lt;/STRONG&gt;, which in the first release is limited to CAP node.js projects, will be expanded to support &lt;STRONG&gt;any suitable OData source&lt;/STRONG&gt;. This will significantly broaden the scenarios in which the SAP Fiori MCP server can be applied, giving developers much more flexibility in how they use AI to create and adapt applications.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Try the SAP Fiori MCP server at SAP TechEd 2025&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can experience the SAP Fiori MCP server live at &lt;STRONG&gt;SAP TechEd Berlin&lt;/STRONG&gt;. In session &lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749126322451001Fcbi" target="_blank" rel="noopener noreferrer"&gt;CA261 – Create great UX with AI, SAP Design System, SAP Fiori elements, and SAPUI5&lt;/A&gt;, we’ll guide you through using AI and MCP to generate applications, adapt them, and extend them with SAPUI5. It’s a hands-on workshop designed to show how these new capabilities come together in practice.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Closing&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This release marks the start of a new era in SAP Fiori development, where AI assistants can not only suggest but also execute tasks reliably. With upcoming enhancements like doc search and broader generator support, we’re laying the groundwork for &lt;STRONG&gt;smarter, faster, and more flexible AI-driven development&lt;/STRONG&gt;. As an open-source project we also welcome your contributions. We encourage you to report any issues you encounter. Your feedback is invaluable to us.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We can’t wait to see how you experiment with it—and we look forward to meeting you at TechEd!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-update-first-release-of-the-sap-fiori-mcp-server-for/ba-p/14204694"/>
    <published>2025-09-03T09:45:49.103000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602</id>
    <title>SAP Build introduces new MCP Servers to enable agentic development for Enterprise Applications</title>
    <updated>2025-09-03T10:00:34.225000+02:00</updated>
    <author>
      <name>YuvalA</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/172240</uri>
    </author>
    <content>&lt;P&gt;Agentic AI application development is fundamentally reshaping the way business applications are designed, developed, and delivered. AI-powered assistants and copilots are rapidly becoming an integral part of the development process, helping teams to boost productivity, reduce errors, and innovate faster than ever.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Meeting Developers Where They Are&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP is committed to meeting developers where they’re at – that means no matter where or how you code, you have the freedom to choose the environment that best suits your needs and access to the tools that maximize your productivity and impact.&lt;/P&gt;&lt;P&gt;To that end, I’m excited to share that &lt;STRONG&gt;SAP is introducing &lt;/STRONG&gt;&lt;STRONG&gt;Model Context Protocol (MCP)&lt;/STRONG&gt; &lt;STRONG&gt;servers&lt;/STRONG&gt; to boost development with the following technologies:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/boost-your-cap-development-with-ai-introducing-the-mcp-server-for-cap/ba-p/14202849" target="_blank"&gt;Cloud Application Programming Model (CAP)&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-tools-update-first-release-of-the-sap-fiori-mcp-server-for/ba-p/14204694" target="_blank"&gt;SAP Fiori Elements&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/give-your-ai-agent-some-tools-introducing-the-ui5-mcp-server/ba-p/14200825" target="_self"&gt;SAPUI5&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;By adopting these new MCP standards, developers can seamlessly extend SAP’s development capabilities into multiple environments, ensuring flexibility and choice. SAP Build now enhances popular IDEs and AI coding assistants such as Cursor, Windsurf, Github Copilot, Cline and Claude Code.&lt;/P&gt;&lt;P&gt;We are also excited to share that the &lt;STRONG&gt;MCP Server for CAP&lt;/STRONG&gt; is being released as an &lt;STRONG&gt;open-source project&lt;/STRONG&gt;, licensed under the &lt;STRONG&gt;Apache-2.0 license&lt;/STRONG&gt;. This marks another step in our commitment to openness and community-driven innovation. &lt;EM&gt;Learn more about &lt;/EM&gt;&lt;A href="https://www.sap.com/about/company/innovation/open-source.html" target="_blank" rel="noopener noreferrer"&gt;&lt;EM&gt;Open Source at SAP&lt;/EM&gt;&lt;/A&gt;&lt;EM&gt;.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is an MCP?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;A href="https://modelcontextprotocol.io/docs/getting-started/intro" target="_blank" rel="noopener nofollow noreferrer"&gt;MCP&lt;/A&gt; is an emerging open standard that allows AI models and tools to interact in a structured, secure, and consistent way. MCP acts as a universal bridge between an AI coding assistant with an LLM and external tools, data, and workflows — so the model can seamlessly fetch context, take actions, and deliver more accurate, useful results. MCP gives developers the ability to integrate their tools with the broader AI ecosystem while receiving the right assistance, at the right time, without switching contexts.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The Value of SAP MCP Tools&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;While many AI tools generate code, SAP takes this a step further by ensuring that what’s generated provides a solid foundation for building enterprise-grade applications. The MCP tools delivered by SAP are backed by our technology teams and designed specifically for SAP Business Applications. This means:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Best Practices Built-In:&amp;nbsp;&lt;/STRONG&gt;Generated code with CAP, UI5 and Fiori elements code already provides you with the right starting point for reaching SAP standards and proven design guidelines.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Guided Development: &lt;/STRONG&gt;Developers receive recommendations and guardrails tailored to SAP Business Technology Platform (BTP).&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;&lt;STRONG&gt;Consistency: &amp;nbsp;&lt;/STRONG&gt;SAP’s MCP tools are and will be reused across our tooling portfolio, ensuring consistent developer experience and outcomes wherever you build SAP applications. Whether you’re generating backend services, UIs, or business logic, you can rely on the same quality, structure, and compliance.&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Scaling AI Agents with SAP Expertise&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;One of the most powerful aspects of MCP adoption is the ability to upscale AI agent chat capabilities with deep SAP application development expertise. This means that AI copilots and agents can go beyond generic code suggestions to provide context-aware, SAP-specific guidance. Whether you are working with Vibe Coding tools on the web or coding directly in your IDE of choice, MCP brings value to everyone — from casual and junior developers to senior professionals. It enables you to build enterprise-grade SAP applications with confidence, while seamlessly combining AI-driven assistance with SAP’s trusted frameworks, best practices, and tooling to maximize productivity.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Looking Ahead&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;These are exciting times to be a developer. The combination of AI and open standards like MCP is rewriting the rules of software development. At SAP, we are committed to keeping our developer community at the forefront of innovation. By investing in AI-powered tools and standards, we ensure that you—our developers—have everything you need to build, scale, and innovate with confidence. &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-introduces-new-mcp-servers-to-enable-agentic-development-for/ba-p/14205602"/>
    <published>2025-09-03T10:00:34.225000+02:00</published>
  </entry>
</feed>
