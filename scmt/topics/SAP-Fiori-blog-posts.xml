<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Fiori-blog-posts.xml</id>
  <title>SAP Community - SAP Fiori</title>
  <updated>2025-10-16T08:01:10.176910+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Fiori/pd-p/73554900100700000977" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Fiori blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-use-messagemanager-in-sapui5-step-by-step-guide/ba-p/14195567</id>
    <title>How to use MessageManager in SAPUI5 - Step-by-Step Guide</title>
    <updated>2025-09-15T08:17:51.279000+02:00</updated>
    <author>
      <name>Myvizhipriya_Thangaraj_2810</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1477011</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1867903659"&gt;&lt;STRONG&gt;What is MessageManager?&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;The MessageManager in SAPUI5 helps us to manage and display messages like errors, warnings, or informational notes in our application. These messages often appear in a MessagePopover or directly next to form fields, giving users real-time feedback.&lt;/P&gt;&lt;P&gt;Let’s go through step by step to understand how we can use MessageManager effectively in our SAPUI5 app.&lt;/P&gt;&lt;H3 id="toc-hId-1671390154"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1474876649"&gt;&lt;STRONG&gt;Step 1: Register the View with MessageManager&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Before displaying any messages, we need to register our view with the MessageManager. This tells SAPUI5 to monitor form fields and automatically bind any messages to the right controls.&lt;/P&gt;&lt;P&gt;Add this line in the init function of our Component.js (or) Main.view.xml:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.getCore().getMessageManager().registerObject(this.getView(), true);&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Myvizhipriya_Thangaraj_2810_0-1756320915938.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305651iDDEE6B1C47D89553/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Myvizhipriya_Thangaraj_2810_0-1756320915938.png" alt="Myvizhipriya_Thangaraj_2810_0-1756320915938.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;STRONG&gt;&lt;EM&gt;Screenshot 1.1&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Please Note:&lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt; If&amp;nbsp; we're using &lt;STRONG&gt;manifest.json&lt;/STRONG&gt;, there's also a declarative way to register it, but for simplicity, we’re going with manual registration here.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1278363144"&gt;&lt;STRONG&gt;Step 2: Add a MessagePopover Control&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;To show the messages visually, add a MessagePopover in our view. We can do this in XML or JavaScript.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;XML Example:&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Button text="Show Messages" press="onOpenMessagePopover" /&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Myvizhipriya_Thangaraj_2810_1-1756320915940.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305652i66D7969866954CEE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Myvizhipriya_Thangaraj_2810_1-1756320915940.png" alt="Myvizhipriya_Thangaraj_2810_1-1756320915940.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;STRONG&gt;&lt;EM&gt;Screenshot 1.2.1&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Please Note:&lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt; Just for your understanding, as per the screenshot, I have used Main.view.xml for button which could trigger the validation based on the user input on this form fields.&lt;/EM&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;MessagePopover id="messagePopover" items="{ path: '/messages' }"&amp;gt;
    &amp;lt;items&amp;gt;
        &amp;lt;MessageItem type="{type}" title="{message}" 
            description="{description}" /&amp;gt;
    &amp;lt;/items&amp;gt;
&amp;lt;/MessagePopover&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Myvizhipriya_Thangaraj_2810_2-1756320915942.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305653iDF906319B8C981FA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Myvizhipriya_Thangaraj_2810_2-1756320915942.png" alt="Myvizhipriya_Thangaraj_2810_2-1756320915942.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;STRONG&gt;&lt;EM&gt;Screenshot 1.2.2&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Please Note:&lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt; Just for your understanding, as per the screenshot, I have used separate fragment for for MessagePopover which could pop up when while validation has been called off.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1081849639"&gt;&lt;STRONG&gt;Step 3: Add Messages to the MessageManager&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Whenever we want to show a message (e.g., an error if a form field is empty), use the addMessages() method:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.getCore().getMessageManager().addMessages(
    new sap.ui.core.message.Message({
        message: "Please fill all required fields.",
        type: sap.ui.core.MessageType.Error,
        target: "/field", // Optional: bind to a specific field
        processor: this.getView().getModel()
    })
);&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Myvizhipriya_Thangaraj_2810_3-1756320915944.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305654i63DB42E3A8A585C5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Myvizhipriya_Thangaraj_2810_3-1756320915944.png" alt="Myvizhipriya_Thangaraj_2810_3-1756320915944.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;&lt;EM&gt;Screenshot 1.3&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Please Note:&lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt; Just for your understanding, as per the screenshot, I have used separate method as addErrorMessage to add dynamic error messages for multiple forms.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Available Message Types:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Error&lt;/LI&gt;&lt;LI&gt;Warning&lt;/LI&gt;&lt;LI&gt;Success&lt;/LI&gt;&lt;LI&gt;Information&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;H3 id="toc-hId-885336134"&gt;&lt;STRONG&gt;Step 4: Open the MessagePopover&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;When the user clicks the button (or at the right moment in our flow), open the MessagePopover:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;onOpenMessagePopover: function (oEvent) {
    if (!this._oMessagePopover) {
        this._oMessagePopover = this.byId("messagePopover");
    }
    this._oMessagePopover.openBy(oEvent.getSource());
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Myvizhipriya_Thangaraj_2810_4-1756320915947.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305656iE95119E5C3E7D873/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Myvizhipriya_Thangaraj_2810_4-1756320915947.png" alt="Myvizhipriya_Thangaraj_2810_4-1756320915947.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;STRONG&gt;&lt;EM&gt;Screenshot 1.4&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Please Note:&lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt; Just for your understanding, as per the screenshot, I have used separate fragment for for MessagePopover which could pop up when Button has been triggered. (ex. while user clicks the submit button without filling the mandatory fields)&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;&amp;nbsp;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;H3 id="toc-hId-688822629"&gt;&lt;STRONG&gt;Step 5: Clear Messages&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;If needed (e.g., after a successful save), we can clear all messages like this:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.getCore().getMessageManager().removeAllMessages();&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Myvizhipriya_Thangaraj_2810_5-1756320915949.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305655i0A9C4A3EA9EB0226/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Myvizhipriya_Thangaraj_2810_5-1756320915949.png" alt="Myvizhipriya_Thangaraj_2810_5-1756320915949.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;STRONG&gt;&lt;EM&gt;Screenshot 1.5&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Please Note:&lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt; Just for your understanding, as per the screenshot, I have used separate method as removeErrorMessage to remove dynamic error messages.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-492309124"&gt;&lt;STRONG&gt;Complete Flow - &lt;/STRONG&gt;Here’s the full flow in a nutshell:&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Register&lt;/STRONG&gt; our view with the MessageManager&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Add&lt;/STRONG&gt; a MessagePopover control&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Insert&lt;/STRONG&gt; messages into the MessageManager&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Trigger&lt;/STRONG&gt; the MessagePopover on user interaction&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Clear&lt;/STRONG&gt; messages when appropriate&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-295795619"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-99282114"&gt;Complete Code: (For Reference)&lt;/H3&gt;&lt;H4 id="toc-hId--465865767"&gt;MessageManager.controller.js&lt;/H4&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
  "./BaseController",
  "sap/ui/core/message/Message",
  "sap/ui/core/Fragment"
],

  function (BaseController, Message, Fragment) {
    "use strict";

    return BaseController.extend("testapp.controller.MessageManager", {
      onInit: function () {
        var oMessageManager, oView;
        oView = this.getView();

        oMessageManager = sap.ui.getCore().getMessageManager();
        oView.setModel(oMessageManager.getMessageModel(), "message");

        oMessageManager.registerObject(oView, true);
      },

      onOpenMessagePopover: function (oEvent) {
        var oSource = oEvent.getSource();

        this._createMessagePopover().then(function (oMessagePopover) {
          oMessagePopover.openBy(oSource);
        });
      },

      _createMessagePopover: function (oEvent) {

        var oView = this.getView();

        if (!this._pMessagePopover) {
          this._pMessagePopover = Fragment.load({
            id: oView.getId(),
            name: "testapp.fragment.MessagePopover"
          }).then(function (oMessagePopover) {
            oView.addDependent(oMessagePopover);
            return oMessagePopover;
          });
        }
        return this._pMessagePopover;
      },

      addErrorMessage: function (sMessage, sTarget) {
        var oMessage = new Message({
          message: sMessage,
          type: MessageType.Error,
          target: sTarget,
          processor: this.oModel,
          activeTitle: true
        });
        sap.ui.getCore().getMessageManager().addMessages(oMessage);
      },

      removeErrorMessages: function () {
        sap.ui.getCore().getMessageManager().removeAllMessages(
          new Message({
            target: "/uiDataInput",
            processor: this.oModel
          })
        );
      },

      onContinue: function (oEvent) {
        const oSource = oEvent.getSource();
        if (!this.uiOrderFieldValidation()) {
          oSource.setBusy(true);
          Promise.resolve().finally(() =&amp;gt; {
            oSource.setBusy(false);
          });
        }
      },

      uiOrderFieldValidation: function () {
        let bOrderHasErrors = false;
        this.removeErrorMessages();
        const oResourceBundle = this.getOwnerComponent().getModel("i18n").getResourceBundle();

        var sErrorMessage = oResourceBundle.getText("ORDER_FORM_ERROR_MESSAGE_GENERAL");
        const sFirstName = this.oModel.getProperty("/uiDataInput/firstname");
        if (!sFirstName || sFirstName.trim().length === 0) {
          const sNameErrorMessage = oResourceBundle.getText("ORDER_FORM_ERROR_MESSAGE_USER_FIRSTNAME");
          this.addErrorMessage(sNameErrorMessage, "/uiDataInput/firstName");
          sErrorMessage = sNameErrorMessage;
          bOrderHasErrors = true;
        }

        const sLastName = this.oModel.getProperty("/uiDataInput/lastName");
        if (!sLastName || sLastName.trim().length === 0) {
          const sLastNameErrorMessage = oResourceBundle.getText("ORDER_FORM_ERROR_MESSAGE_USER_LASTNAME");
          this.addErrorMessage(sLastNameErrorMessage, "/uiDataInput/lastName");
          sErrorMessage = sLastNameErrorMessage;
          bOrderHasErrors = true;
        }

        //Similarly you can check for all the remaining fields

        return bOrderHasErrors;
      }

    });
  });&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--662379272"&gt;&amp;nbsp;&lt;/H4&gt;&lt;H4 id="toc-hId--858892777"&gt;MessageManager.view.xml&lt;/H4&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;mvc:View controllerName="testapp.controller.MessageManager"
    xmlns:mvc="sap.ui.core.mvc" displayBlock="true"
    xmlns:core="sap.ui.core"
    xmlns:l="sap.ui.layout"
    xmlns:u="sap.ui.table"
    xmlns:f="sap.ui.layout.form"
    xmlns="sap.m"&amp;gt;
    &amp;lt;Page class="sapUiSizeCompact sapUiContentPadding" showHeader="false"&amp;gt;
        &amp;lt;Panel headerText="Validation check using Message Manager" backgroundDesign="Transparent"
            class="sapUiSmallMarginBottom"&amp;gt;
            &amp;lt;f:SimpleForm backgroundDesign="Transparent" editable="true"
                layout="ResponsiveGridLayout" labelSpanL="3" labelSpanM="3"
                labelSpanS="12" adjustLabelSpan="true" emptySpanXL="0" emptySpanL="0" emptySpanM="0"
                emptySpanS="0" columnsL="1" columnsM="1"
                singleContainerFullSize="false"&amp;gt;

                &amp;lt;f:content&amp;gt;
                    &amp;lt;Label text="First Name" required="true" /&amp;gt;
                    &amp;lt;Input type="Text" width="18.5em" maxLength="30"
                        value="{path: 'globalModel&amp;gt;/uiDataInput/firstName', 
                                    type: 'sap.ui.model.type.String', 
                                    constraints: { minLength: 1, maxLength: 30 }}" /&amp;gt;

                    &amp;lt;Label text="Last Name" required="true" /&amp;gt;
                    &amp;lt;Input type="Text" width="18.5em" maxLength="30"
                        value="{path: 'globalModel&amp;gt;/uiDataInput/lastName', 
                                    type: 'sap.ui.model.type.String', 
                                    constraints: { minLength: 1, maxLength: 30 }}" /&amp;gt;
                    &amp;lt;/HBox&amp;gt;
                    &amp;lt;Label text="Contact Number" required="true" /&amp;gt;
                    &amp;lt;HBox&amp;gt;
                        &amp;lt;HBox width="27em" justifyContent="End"&amp;gt;
                            &amp;lt;Input type="Number" width="25em" maxLength="30"
                                value="{path: 'globalModel&amp;gt;/uiDataInput/contactNumber', 
                                        type: 'sap.ui.model.type.String', 
                                        constraints: { minLength: 1, maxLength: 30 }}" /&amp;gt;
                        &amp;lt;/HBox&amp;gt;
                    &amp;lt;/HBox&amp;gt;
                    &amp;lt;Label text="Email Address" /&amp;gt;
                    &amp;lt;HBox&amp;gt;
                        &amp;lt;HBox width="27em" justifyContent="End"&amp;gt;
                            &amp;lt;Input width="25em" maxLength="241"
                                value="{path: 'globalModel&amp;gt;/uiDataInput/emailID', 
                                        type: 'sap.ui.model.type.String', 
                                        constraints: { minLength: 1, maxLength: 241 }}" /&amp;gt;
                        &amp;lt;/HBox&amp;gt;
                    &amp;lt;/HBox&amp;gt;
                    &amp;lt;Label text="Address" /&amp;gt;
                    &amp;lt;TextArea height="7em"
                        value="{globalModel&amp;gt;/uiDataInput/address}"
                        rows="3"
                        width="25em"
                        liveChange="onTextAreaLiveChange"
                    /&amp;gt;
                &amp;lt;/f:content&amp;gt;
            &amp;lt;/f:SimpleForm&amp;gt;
        &amp;lt;/Panel&amp;gt;


        &amp;lt;Toolbar&amp;gt;
            &amp;lt;Button text="BACK" visible="false"
                class="sapUiSmallMarginBegin sapUiMediumMarginTopBottom"
                type="Emphasized" press=".navToOverview" /&amp;gt;
            &amp;lt;ToolbarSpacer /&amp;gt;
            &amp;lt;Button
                icon="sap-icon://alert"
                text="{= ${message&amp;gt;/}.length }"
                visible="{= ${message&amp;gt;/}.length &amp;gt; 0 }"
                type="Emphasized"
                press=".onOpenMessagePopover" /&amp;gt;
            &amp;lt;Button text="NEXT"
                class="sapUiTinyMarginEnd sapUiMediumMarginTopBottom"
                type="Emphasized" press="onContinue" /&amp;gt;
        &amp;lt;/Toolbar&amp;gt;
    &amp;lt;/Page&amp;gt;
&amp;lt;/mvc:View&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--1055406282"&gt;&amp;nbsp;&lt;/H4&gt;&lt;H4 id="toc-hId--1251919787"&gt;MessagePopover.fragment.xml&lt;/H4&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;core:FragmentDefinition
    xmlns="sap.m"
    xmlns:core="sap.ui.core"&amp;gt;
    &amp;lt;MessagePopover
        items="{message&amp;gt;/}"
        initiallyExpanded="true"
        activeTitlePress=".onActiveTitlePressed"&amp;gt;
        &amp;lt;MessageItem
            activeTitle="true"
            type="{message&amp;gt;type}"
            title="{message&amp;gt;message}"
            subtitle="{message&amp;gt;additionalText}"
            description="{message&amp;gt;description}"/&amp;gt;
    &amp;lt;/MessagePopover&amp;gt;
&amp;lt;/core:FragmentDefinition&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--1155030285"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--1351543790"&gt;&lt;STRONG&gt;Real World Scenario&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Let’s say a user submits a form without filling all the required fields:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;You &lt;STRONG&gt;add error messages&lt;/STRONG&gt; to the MessageManager.&lt;/LI&gt;&lt;LI&gt;The messages automatically link to the empty fields.&lt;/LI&gt;&lt;LI&gt;When the user clicks &lt;STRONG&gt;Show Messages&lt;/STRONG&gt;, the MessagePopover displays all the issues clearly.&lt;/LI&gt;&lt;LI&gt;After correcting the errors, you can &lt;STRONG&gt;clear all messages&lt;/STRONG&gt; and proceed.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Thank you for taking the time to read this blog!&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you found this helpful, feel free to &lt;STRONG&gt;share your thoughts, feedback or questions&lt;/STRONG&gt; in the comments! Let's keep learning and growing together.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Dear &lt;STRONG&gt;experts&lt;/STRONG&gt;, I’m new to blogging, please feel free to &lt;STRONG&gt;correct me&lt;/STRONG&gt; if any information is inaccurate.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-use-messagemanager-in-sapui5-step-by-step-guide/ba-p/14195567"/>
    <published>2025-09-15T08:17:51.279000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/reducing-weeks-to-minutes-ai-abap-and-low-code-in-sap-development/ba-p/14221758</id>
    <title>Reducing Weeks to Minutes: AI, ABAP, and Low-Code in SAP Development</title>
    <updated>2025-09-18T20:55:01.913000+02:00</updated>
    <author>
      <name>rogeriobalassiano</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/718349</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760868172"&gt;Introduction&lt;/H2&gt;
&lt;P&gt;The creation of SAP applications has always required a combination of technical and functional knowledge. In many scenarios, ABAP developers need to master SAPUI5 to deliver modern, SAP Fiori-style applications that meet end-user expectations.&lt;/P&gt;
&lt;P&gt;However, the integration of &lt;STRONG&gt;Artificial Intelligence (AI) tools&lt;/STRONG&gt; with &lt;STRONG&gt;low-code platforms&lt;/STRONG&gt; opens a new path: enabling ABAP developers to build complete applications without needing SAPUI5 knowledge, while still allowing continuous maintenance in a simple and secure way.&lt;/P&gt;
&lt;P&gt;Tachyonix has developed an innovative approach that transforms business specifications into technical specifications through specialized AI tools, significantly accelerating the development process and drastically reducing delivery time.&lt;/P&gt;
&lt;H2 id="toc-hId-1564354667"&gt;Architecture&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Slide1.PNG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316673iA6727980214CE4C6/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide1.PNG" alt="Slide1.PNG" /&gt;&lt;/span&gt;&lt;/H2&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;Flow with LLM&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Slide2.PNG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316674iC5429CCDF4A117EA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide2.PNG" alt="Slide2.PNG" /&gt;&lt;/span&gt;&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;Flow with Tachyonix Builder&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId-1367841162"&gt;How ABAP Integration with AI Works&lt;/H2&gt;
&lt;P&gt;The flow begins with a specification provided by the user. For example: &lt;EM&gt;“I need a report that shows pending sales orders.”&lt;/EM&gt;&lt;/P&gt;
&lt;P&gt;From this request, different AI tools are triggered (these are some examples):&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;ABAP Package Tool&lt;/STRONG&gt;: identifies the correct technical package where the application will be created.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Data Source Tool&lt;/STRONG&gt;: selects the best source of data, indicating one or more relevant CDS Views.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Field Retrieval Tool&lt;/STRONG&gt;: suggests the most appropriate fields to compose the application’s main list, based on the user’s description.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Floorplan Tool&lt;/STRONG&gt;: recommends the visual structure of the application (for example, &lt;EM&gt;Master-Detail&lt;/EM&gt;).&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;After these agents work together, a consolidated &lt;STRONG&gt;JSON&lt;/STRONG&gt; containing the full technical specification is generated. This artifact is then used by the application creation agent:&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Application Creation Tool&lt;/STRONG&gt;: automatically builds the application according to the selected floorplan and the technical specifications provided by the other tools.&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;This flow allows complete applications to be created without manual programming, while still adhering to SAP best practices and design standards.&lt;/P&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId-1171327657"&gt;Integration with the Tachyonix Low-Code Platform&lt;/H2&gt;
&lt;P&gt;The main differentiator lies in the integration of this automation with the Tachyonix low-code platform. The generated application is not delivered as rigid, hard-to-maintain source code. On the contrary — it remains fully editable and extensible, allowing ABAP developers to continue evolving the solution without dealing directly with SAPUI5 or JavaScript.&lt;/P&gt;
&lt;P&gt;This approach differs from what is sometimes called &lt;EM&gt;vibe-coding&lt;/EM&gt;, in which an LLM directly generates source code. In the Tachyonix model, the LLM does not generate code. Instead, it produces structured technical specifications, which are then processed by a creation agent. This design ensures:&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Security and predictability&lt;/STRONG&gt; of the result.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Ease of maintenance and customization.&lt;/STRONG&gt;&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;No risks&lt;/STRONG&gt; associated with unreadable or unsupportable generated code.&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;H2 id="toc-hId-974814152"&gt;Practical Advantages&lt;/H2&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Speed&lt;/STRONG&gt;: a process that could take weeks is reduced to minutes.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Productivity&lt;/STRONG&gt;: developers spend only a few hours making final adjustments and personalizations.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Accessibility&lt;/STRONG&gt;: even without SAPUI5 expertise, ABAP developers can deliver modern applications.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Flexibility&lt;/STRONG&gt;: applications evolve continuously within the low-code platform, without technical barriers.&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId-778300647"&gt;Knowledge Graph as AI Support&lt;/H2&gt;
&lt;P&gt;At the time of writing this article, SAP Joule does not yet provide a public API for external consumption. For this reason, Tachyonix developed its own &lt;STRONG&gt;Knowledge Graph&lt;/STRONG&gt;, which brings together SAP business scenarios.&lt;/P&gt;
&lt;P&gt;This repository is used as a &lt;STRONG&gt;Retrieval-Augmented Generation (RAG)&lt;/STRONG&gt; mechanism, ensuring that the LLM always has access to reliable, contextual information throughout the process.&lt;/P&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId-581787142"&gt;Conclusion&lt;/H2&gt;
&lt;P&gt;The combination of &lt;STRONG&gt;ABAP tools&lt;/STRONG&gt; with a &lt;STRONG&gt;low-code platform&lt;/STRONG&gt; represents a significant step forward for the ABAP community. This approach does not replace the developer — it empowers them. With it, value can be delivered faster, more securely, and more sustainably, even without SAPUI5 knowledge.&lt;/P&gt;
&lt;P&gt;In a market where &lt;STRONG&gt;time is a competitive advantage&lt;/STRONG&gt;, solutions like Tachyonix reduce development cycles from weeks to minutes and establish a new paradigm for SAP application development.&lt;BR /&gt;&lt;BR /&gt;As we are discussing AI, I leveraged HeyGen, an AI-based video creator, to demonstrate the process&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/reducing-weeks-to-minutes-ai-abap-and-low-code-in-sap-development/ba-p/14221758"/>
    <published>2025-09-18T20:55:01.913000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-teched-blog-posts/sap-teched-2025-go-mobile/ba-p/14223700</id>
    <title>SAP TechEd 2025 - Go Mobile!!!</title>
    <updated>2025-09-25T13:30:00.035000+02:00</updated>
    <author>
      <name>ThiloBerndt</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165819</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched.html" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd in 2025&lt;/A&gt;&lt;/STRONG&gt; kicks off on November 4th in Berlin, and preparations are in full swing! This premier tech conference is perfect for developers, IT professionals, business experts, and tech visionaries to deepen their knowledge of SAP solutions and connect with peers and SAP experts.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We have prepared an exciting offering of &lt;STRONG&gt;mobile sessions&lt;/STRONG&gt; for you: Strategic Talks, Roadmap and Hands-on sessions on &lt;STRONG&gt;Mobile Apps&lt;/STRONG&gt;, &lt;STRONG&gt;Mobile Design&lt;/STRONG&gt; and &lt;STRONG&gt;Mobile Technology&lt;/STRONG&gt;. &lt;/SPAN&gt;&lt;SPAN&gt;Furthermore, we will have a demo booth where you can explore our apps an Mobile Joule on your own.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Certainly &lt;STRONG&gt;Mobile AI&lt;/STRONG&gt;, is the focus topics this year.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here are some of the sessions I’m most looking forward to this year:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749125350426001FplJ" target="_blank" rel="noopener noreferrer"&gt;CA200&lt;/A&gt; | An overview of our AI-enhanced mobile products across SAP Business Suite -&amp;nbsp;&lt;/STRONG&gt;Deep Dive&lt;BR /&gt;View demos of selected apps and learn how the latest mobile apps from SAP make it easier for your users to leverage SAP Business Suite on the go. You can build your own mobile apps the same way we do—start by exploring how we use SAP Design System for mobile apps as well as the latest technologies such as the Joule copilot and SAP Build solutions.&amp;nbsp;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749124796213001k8GQ" target="_blank" rel="noopener noreferrer"&gt;ST112&lt;/A&gt; | AI and the future of product and user experience on the web and mobile -&amp;nbsp;&lt;/STRONG&gt;Strategy Talk&lt;BR /&gt;Discover how the Joule copilot and embedded AI are transforming UX as well as how you can use AI to enhance and extend the UX for SAP Business Suite. See our strategy for giving users access to all they need and enabling them to provide feedback, wherever they are, through the web and on mobile, including applications and central services.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749125066259001P578" target="_blank" rel="noopener noreferrer"&gt;CA811&lt;/A&gt; | User and product experience innovations by SAP—on the web and mobile -&amp;nbsp;&lt;/STRONG&gt;Road Map&lt;BR /&gt;Have a look at the latest user and product experience innovations across our suite of applications, along with cool innovations coming soon—on the web and mobile. Also, check out selected highlights from UI technologies.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1750411628629001DsH7" target="_blank" rel="noopener noreferrer"&gt;AD170&lt;/A&gt; | Build scalable enterprise mobile solutions with SAP Build -&amp;nbsp;&lt;/STRONG&gt;Hands-on Workshop&lt;BR /&gt;Dive into the technical details of building scalable, cross-platform mobile solutions with SAP. Get a hands-on overview of integrating SAP Build solutions and our mobile development kit to streamline your development process and deliver high-quality apps.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749126071945001BoPB" target="_blank" rel="noopener noreferrer"&gt;CA260&lt;/A&gt; | Learn how to build your own app and use it in SAP Mobile Start -&amp;nbsp;&lt;/STRONG&gt;Hands-on Workshop&lt;BR /&gt;Build an application on SAP BTP using SAP Build Code and SAP Cloud Application Programming Model that integrates with SAP Mobile Start. Accelerate development with development productivity tools in SAP Business Application Studio. Learn how to make the app accessible and send push notifications for relevant business events directly to your users.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749126203112001bccw" target="_blank" rel="noopener noreferrer"&gt;CA201&lt;/A&gt; | Creating AI-enhanced UX for your own applications with SAP Design System -&amp;nbsp;&lt;/STRONG&gt;Deep Dive&lt;BR /&gt;Discover how AI is changing the idea of what an application is—and what this means for you. Learn about how to create AI-enhanced UX for your applications by using SAP Design System (SAP Fiori UX for web and mobile), and see how building applications is made easier through our AI UI technologies for web and mobile apps.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1750411539143001N66Q" target="_blank" rel="noopener noreferrer"&gt;AD109&lt;/A&gt; | Bridging the gap: Build your enterprise mobile strategy -&amp;nbsp;&lt;/STRONG&gt;Deep Dive&lt;BR /&gt;Are your employees struggling to find critical company data on the go? The SAP Mobile Start app solves that challenge by connecting them to SAP Build Work Zone and enabling custom mobile solutions. Find out how to create a powerful, integrated mobile journey for increased productivity.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749826917453001Qb8u" target="_blank" rel="noopener noreferrer"&gt;AI166&lt;/A&gt; | Mobile projects with SAP Joule for Consultants and SAP Joule for Developers -&amp;nbsp;&lt;/STRONG&gt;Hands-on Workshop&lt;BR /&gt;&lt;SPAN&gt;Learn how SAP Joule for Consultants accelerates execution of mobile projects and cloud transformation by simplifying knowledge access and offering expert guidance. Also, explore SAP Joule for Developers and its mobile development kit AI capabilities—including code suggestions, explanations, test generation, and more—to boost development efficiency.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749125243833001V7mT" target="_blank" rel="noopener noreferrer"&gt;CA914&lt;/A&gt; | AI-based user and product experience innovations on the web and mobile -&amp;nbsp;&lt;/STRONG&gt;Demo Station&lt;BR /&gt;Experience the latest user and product experience innovations by SAP, including the Joule copilot on mobile devices and AI-embedded scenarios. Learn how you can leverage SAP Design System and our UI technologies to build your own apps.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Join&amp;nbsp;our live Mobile AI&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/join-sap-usability-testing-sessions-at-sap-teched-berlin-influence-your/ba-p/14196924" target="_self"&gt;&lt;STRONG&gt;usability testing&lt;/STRONG&gt;&lt;/A&gt; session:&amp;nbsp;&lt;STRONG&gt;Exploring Joule and voice – understanding mobile AI in your daily work&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;Usability testing offers a unique opportunity for SAP users to engage directly with SAP product and development teams. In a focused 60-minute one-on-one session, you’ll interact with product screens and evaluate whether the buttons, terminology, and features meet your expectations and workflow needs.&amp;nbsp;&lt;SPAN&gt;This session focuses on how AI on mobile is used in everyday work and what users envision for the future.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Do not miss this opportunity and join us in Berlin. &lt;STRONG&gt;Register now&lt;/STRONG&gt;&lt;SPAN&gt;!&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":calendar:"&gt;📅&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;November 4 - 6, 2025&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/germany/events/teched/berlin.html" target="_blank" rel="noopener noreferrer"&gt;Berlin&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;We look forward to meeting and interacting with you!&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/germany/events/teched/berlin.html" target="_self" rel="noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="TechEd Banner.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317712i6541A09AE2A44257/image-size/large?v=v2&amp;amp;px=999" role="button" title="TechEd Banner.png" alt="TechEd Banner.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/sap-teched-blog-posts/sap-teched-2025-go-mobile/ba-p/14223700"/>
    <published>2025-09-25T13:30:00.035000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/mastering-the-essentials-your-journey-into-sap-s-4hana-starts-here/ba-p/14229489</id>
    <title>🚀 Mastering the Essentials: Your Journey into SAP S/4HANA Starts Here!</title>
    <updated>2025-09-27T10:26:56.943000+02:00</updated>
    <author>
      <name>mickaelquesnot</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/150004</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;The Ultimate Guide to SAP S/4HANA: From Core Concepts to End-to-End Processes&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Welcome to your all-in-one guide to navigating and mastering SAP S/4HANA! &lt;span class="lia-unicode-emoji" title=":waving_hand:"&gt;👋&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This guide is designed for everyone, from absolute beginners (&lt;STRONG&gt;Dummies&lt;/STRONG&gt; and &lt;STRONG&gt;End Users&lt;/STRONG&gt;) getting their first look at SAP, to &lt;STRONG&gt;Key Users&lt;/STRONG&gt; who need to understand processes more deeply, and even &lt;STRONG&gt;Consultants&lt;/STRONG&gt; looking for a clear, process-driven overview.&lt;/P&gt;&lt;P&gt;We'll start with the basics of logging in and navigating the system, build a solid understanding of the foundational structures and master data, and then walk through complete, real-world business scenarios from start to finish. We will focus on the modern SAP Fiori user experience, which provides a simple and intuitive interface, while also providing the classic SAP GUI transaction codes for those who need them.&lt;/P&gt;&lt;P&gt;Let's begin our journey to mastering SAP S/4HANA! &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Part 1: Getting Started with SAP S/4HANA&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This first part covers the essential skills you need to interact with the system. We'll explore the modern user interface, learn how to log in securely, and understand the different ways to navigate to the tasks you need to perform.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Chapter 1: The SAP S/4HANA User Experience&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP S/4HANA offers two primary ways to interact with the system: the modern, web-based &lt;STRONG&gt;SAP Fiori Launchpad&lt;/STRONG&gt; and the classic &lt;STRONG&gt;SAP Graphical User Interface (GUI)&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Fiori Launchpad&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Fiori Launchpad is the recommended and most modern way to use SAP S/4HANA. It’s a role-based, personalized, and real-time user experience.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Role-Based:&lt;/STRONG&gt; You only see the applications (called "apps" or "tiles") relevant to your job. A purchasing agent will see apps for creating purchase orders, while an accountant will see apps for managing financial journals.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Intuitive Tiles:&lt;/STRONG&gt; Apps are represented by tiles, which can display live information. For example, a tile might show "20 Open Invoices" without you even having to open the app. * &lt;STRONG&gt;Web-Based:&lt;/STRONG&gt; You can access it from any device with a web browser, making it highly flexible.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;SAP Graphical User Interface (GUI)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The SAP GUI is the classic interface that has been used for decades. While Fiori is the future, many advanced tasks and configuration activities are still performed in the GUI. It's a powerful tool, and understanding it is still very valuable.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Transaction Codes:&lt;/STRONG&gt; The primary way to navigate is by using short, four-character "transaction codes" (T-codes).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Structured Menus:&lt;/STRONG&gt; It uses a traditional folder-based menu structure.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Configuration Hub:&lt;/STRONG&gt; The IMG (Implementation Guide), accessed via transaction code SPRO, is the central point for system customization and is accessed through the SAP GUI.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For the rest of this guide, we will provide both the &lt;STRONG&gt;Fiori App Name&lt;/STRONG&gt; and the &lt;STRONG&gt;SAP GUI T-Code&lt;/STRONG&gt; where applicable.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Chapter 2: Your First Logon and System Navigation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let's get you into the system. The process is straightforward and secure.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Before you can log on, your system administrator must provide you with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Your&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;User ID&lt;/STRONG&gt; (e.g., JSMITH)&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;An initial&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Password&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Client&lt;/STRONG&gt; number (a three-digit number that represents a self-contained unit in the system, like 100)&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;First-Time Logon Process&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The first time you log in, you will be required to change your initial password. This ensures your account is secure.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Launch SAP Logon:&lt;/STRONG&gt; Double-click the "SAP Logon" icon on your desktop. This opens a window listing the available SAP systems.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Select System:&lt;/STRONG&gt; Choose the correct system (e.g., S/4HANA Production) and click "Log On."&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Enter Credentials:&lt;/STRONG&gt; On the logon screen, enter the &lt;STRONG&gt;Client&lt;/STRONG&gt;, your &lt;STRONG&gt;User ID&lt;/STRONG&gt;, and the initial &lt;STRONG&gt;Password&lt;/STRONG&gt; you were given.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Language:&lt;/STRONG&gt; You can specify a language using a two-character code (e.g., EN for English).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Press Enter.&lt;/STRONG&gt; A dialog box will appear, prompting you to create a new password.&lt;/LI&gt;&lt;/OL&gt;&lt;OL&gt;&lt;LI&gt;&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Set New Password:&lt;/STRONG&gt; Enter your chosen new password in the New Password field and repeat it in the Repeat password field to confirm. Click&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Confirm&lt;/STRONG&gt;.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Copyright &amp;amp; System Messages:&lt;/STRONG&gt; You may see a copyright notice or system messages from your administrator. Click&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Continue&lt;/STRONG&gt; to proceed.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Result:&lt;/STRONG&gt; You are now logged into the SAP S/4HANA system! You will be greeted by the SAP Fiori Launchpad or the SAP Easy Access screen if using the GUI.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Password Rules &lt;/STRONG&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":locked:"&gt;🔒&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;When creating a new password, you must follow specific rules for security:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Length:&lt;/STRONG&gt; It must be between 3 and 8 characters long.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Characters:&lt;/STRONG&gt; You can use letters (a-z), numbers (0-9), and punctuation.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Restrictions:&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Cannot start with&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;? or !.&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Cannot start with three identical characters (e.g.,&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;111PASSWORD).&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Cannot be one of your last five passwords.&lt;/LI&gt;&lt;LI&gt;Cannot be&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;PASS or INIT.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Chapter 3: Finding Your Way - Apps, T-Codes, and Menus&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now that you're in, how do you get to the right screen to do your work?&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using the Fiori Launchpad&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Search Bar:&lt;/STRONG&gt; The most powerful tool is the global search bar at the top of the page. You can search for apps, business objects (like a specific purchase order number), or transactions.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Groups:&lt;/STRONG&gt; Apps are organized into groups on your homepage, such as "Sales Order Management" or "Supplier Invoices."&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;App Finder:&lt;/STRONG&gt; If you have the permissions, you can use the App Finder to search the entire catalog of available apps and add them to your homepage.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Using SAP GUI Transaction Codes (T-Codes)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;A T-code is a shortcut to any task in the system.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Command Field:&lt;/STRONG&gt; The Command Field is the white input box at the top left of the SAP GUI screen. This is where you enter T-codes. * &lt;STRONG&gt;How to Use T-Codes:&lt;/STRONG&gt;&lt;/LI&gt;&lt;OL&gt;&lt;LI&gt;Place your cursor in the&lt;/LI&gt;&lt;/OL&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Command Field&lt;/STRONG&gt;.&lt;/P&gt;&lt;UL&gt;&lt;OL&gt;&lt;LI&gt;Type the T-code (e.g., ME21N to create a purchase order).&lt;/LI&gt;&lt;LI&gt;Press &lt;STRONG&gt;Enter&lt;/STRONG&gt;. The system will take you directly to that task's screen.&lt;/LI&gt;&lt;/OL&gt;&lt;LI&gt;&lt;STRONG&gt;Helpful Command Prefixes:&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;/n + T-code: Ends your &lt;EM&gt;current&lt;/EM&gt; task and opens the new one in the same window. (e.g., /nVA01).&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Use this to avoid having too many windows open.&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;/o + T-code: Opens the new task in a &lt;EM&gt;new window&lt;/EM&gt; (session), keeping your current one open.&lt;/LI&gt;&lt;LI&gt;/nend: Logs you out of SAP after a confirmation prompt.&lt;/LI&gt;&lt;LI&gt;/nex: Logs you out immediately without a prompt. Be careful with this one!&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;How to Find a Transaction Code&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;If you are on a screen and want to know its T-code:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Navigate to the menu path:&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;System -&amp;gt; Status...&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;A pop-up window will appear. The "Transaction" field in the "SAP Data" section shows the T-code for the current screen.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Part 2: The Enterprise Structure - The Backbone of Your Business&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Before any transactions can happen, a company must be digitally mapped in SAP. This digital map is called the &lt;STRONG&gt;Enterprise Structure&lt;/STRONG&gt;. It's the framework that represents your legal, logistical, and financial organization.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Chapter 4: What is the Enterprise Structure?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Think of it like the blueprint of your company. It defines how different parts of your business relate to each other. For example, it defines which plants belong to which legal entity, which sales teams can sell from which warehouses, and how everything is tracked for accounting purposes. A well-defined structure is critical for smooth operations and accurate reporting.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Chapter 5: Key Organizational Units in S/4HANA&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here are the most important building blocks you will encounter. The examples below are based on the configuration data provided.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Client:&lt;/STRONG&gt; The highest level in an SAP system. It's a self-contained unit with its own set of master data and transactional data. You select this when you log in.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Company Code (CoCd):&lt;/STRONG&gt; A legal entity for which a separate set of financial statements (like a balance sheet and P&amp;amp;L statement) is created. It is the central organizational unit in Financial Accounting.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt; Company Code 1000 - SAP Best Practices.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Controlling Area (CO Area):&lt;/STRONG&gt; An organizational unit used for cost accounting. It can include one or more company codes, allowing for cross-company cost management.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt; Controlling Area 1000 is set up for cross-company-code cost accounting.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Plant:&lt;/STRONG&gt; A physical location where products are produced, stored, or services are provided. It can be a factory, a distribution center, a warehouse, or a regional office. A plant is always assigned to a single company code.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Examples:&lt;/STRONG&gt; Plant 1000 (Factory 1), Plant 1100 (Factory 2). Both are assigned to Company Code&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Storage Location (SLoc):&lt;/STRONG&gt; A specific area within a plant where materials are stored. A plant can have multiple storage locations.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt; Plant 1000 has storage locations 1010 (Warehouse), 1020 (Workshop), 1060 (Returns), etc.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Sales Organization (SOrg):&lt;/STRONG&gt; Responsible for the sale and distribution of goods and services. It represents a selling unit and is responsible for product liability and customer claims.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Examples:&lt;/STRONG&gt; 1000 (Domestic Sales Org.), 1100 (International Sales Org.).&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Distribution Channel (DChl):&lt;/STRONG&gt; The way in which products or services reach the customer. It defines how you sell.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Examples:&lt;/STRONG&gt; 10 (Direct Sales), 20 (Wholesale).&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Division (Dv):&lt;/STRONG&gt; Used to group materials or services. It represents a product line.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Examples:&lt;/STRONG&gt; 10 (Product Division 10), 20 (Product Division 20).&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Sales Area:&lt;/STRONG&gt; The unique combination of a &lt;STRONG&gt;Sales Organization&lt;/STRONG&gt;, a &lt;STRONG&gt;Distribution Channel&lt;/STRONG&gt;, and a &lt;STRONG&gt;Division&lt;/STRONG&gt;. Customer-specific agreements and pricing are often set at this level.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt; S.Org 1000 + Dist. Channel&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;10 + Division 10 is one sales area.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Shipping Point:&lt;/STRONG&gt; A physical location in a plant from which goods are shipped.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt; Plant 1000 is assigned Shipping Points 1000 and 100R (for returns).&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Purchasing Organization (POrg):&lt;/STRONG&gt; Responsible for procuring materials and services for one or more plants. It negotiates pricing and conditions with vendors.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt; Purchasing Organization 1000.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Purchasing Group:&lt;/STRONG&gt; An individual or group of individuals responsible for certain purchasing activities. They are the main point of contact for suppliers.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Examples:&lt;/STRONG&gt; 100 (Group 100), 101 (Group 101).&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Chapter 6: A Look at Configuration (For Key Users &amp;amp; Consultants)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;How are all these units created and linked together? This is done through configuration.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;On-Premise/Private Cloud: SPRO - The Implementation Guide (IMG)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For traditional S/4HANA deployments, configuration is done using transaction SPRO. This opens the IMG, a hierarchical tree of all the activities needed to customize the system.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Navigation:&lt;/STRONG&gt; You navigate through the tree structure to find the specific activity you need.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt; To define a plant, the path is SPRO -&amp;gt; Enterprise Structure -&amp;gt; Definition -&amp;gt; Logistics - General -&amp;gt; Define, copy, delete, check plant.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Assignment:&lt;/STRONG&gt; After defining the organizational units, you must assign them to each other.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt; The path to assign a plant to a company code is SPRO -&amp;gt; Enterprise Structure -&amp;gt; Assignment -&amp;gt; Logistics - General -&amp;gt; Assign Plant to Company Code.&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Public Cloud: Central Business Configuration (CBC)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the SAP S/4HANA Public Cloud, configuration is managed through a web-based tool called &lt;STRONG&gt;Central Business Configuration (CBC)&lt;/STRONG&gt;.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Guided Procedures:&lt;/STRONG&gt; CBC uses a scope-based, guided approach. You select pre-configured business processes (called Scope Items), and the system helps you configure them.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Project-Based:&lt;/STRONG&gt; Configuration is done within a project, allowing for better tracking and management of changes.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Self-Service:&lt;/STRONG&gt; It is designed to be more user-friendly, enabling customers to manage more of their own configuration.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Part 3: Master Data - The Foundation of All Processes&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;If the Enterprise Structure is the blueprint of your house, Master Data is the furniture and the people in it. It is the core information about your business entities that is used across all transactions. It's created once and used repeatedly.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Chapter 7: Business Partner (BP) - The New Standard&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This is one of the most important changes in SAP S/4HANA. Previously, you had separate objects for Customers (XD01) and Vendors (XK01). Now, both are created as a single object: the &lt;STRONG&gt;Business Partner&lt;/STRONG&gt;.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Single Point of Truth:&lt;/STRONG&gt; A company that is both your customer and your supplier can be represented by a single BP number, eliminating data redundancy.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Roles:&lt;/STRONG&gt; You create a general BP with a name and address, and then extend it to different &lt;STRONG&gt;BP Roles&lt;/STRONG&gt;.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;General Role (000000):&lt;/STRONG&gt; Basic information like name, address, bank details.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Customer Role (FLCU00):&lt;/STRONG&gt; Contains financial accounting data (company code level).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Customer (Sales) Role (FLCU01):&lt;/STRONG&gt; Contains sales data (sales area level).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Supplier Role (FLVN00):&lt;/STRONG&gt; Contains financial accounting data (company code level).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Supplier (Purchasing) Role (FLVN01):&lt;/STRONG&gt; Contains purchasing data (purchasing organization level).&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Manage Business Partner Master Data&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; BP&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Chapter 8: Material Master - The Heart of Logistics&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Material Master contains all information about a material (a product or service). This data is organized into different "views," each corresponding to a different business function.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Create Material / Manage Product Master Data&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;GUI T-Code:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; MM01 (Create), MM02 (Change), MM03 (Display) &lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Key Material Types:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;ROH (Raw Materials):&lt;/STRONG&gt; Purchased externally, used in production.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;HALB (Semi-finished Goods):&lt;/STRONG&gt; Produced in-house, used to make other products.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;FERT (Finished Goods):&lt;/STRONG&gt; Produced in-house, sold to customers.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;HAWA (Trading Goods):&lt;/STRONG&gt; Purchased externally and resold without any change.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Key Views to Maintain:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Basic Data 1 &amp;amp; 2:&lt;/STRONG&gt; General data like material number, description, unit of measure, and weight.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Sales Views:&lt;/STRONG&gt; Data for selling the material, like the delivering plant and tax information.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Purchasing View:&lt;/STRONG&gt; Data for procuring the material, like the purchasing group.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;MRP Views (1-4):&lt;/STRONG&gt; Data for material requirements planning (MRP), like how the material is planned (e.g., MRP vs. consumption-based).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Accounting 1 &amp;amp; 2:&lt;/STRONG&gt; Valuation data, such as the price control (standard or moving average) and the valuation class, which links the material to financial accounts.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Chapter 9: Other Key Master Data&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pricing Condition Records:&lt;/STRONG&gt; This master data determines prices automatically in sales orders and purchase orders. It includes base prices, discounts, surcharges, freight, and taxes.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Manage Prices - Sales&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; VK11 (Create Sales), MEK1 (Create Purchasing)&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Bill of Materials (BOM):&lt;/STRONG&gt; A structured list of all the components needed to produce a parent product. It's the "recipe" for manufacturing.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Maintain Bill of Material&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;GUI T-Code:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; CS01 (Create), CS02 (Change), CS03 (Display)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Work Center:&lt;/STRONG&gt; A location within a plant where production operations are performed. It contains data about scheduling, capacity, and costing related to an operation.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Manage Work Center&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;GUI T-Code:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; CR01 (Create)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Part 4: Core Business Processes - An End-to-End Journey&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now we'll put the structure and master data to work by walking through the three fundamental end-to-end scenarios in a typical business.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Scenario 1: The Procure-to-Pay (P2P) Process&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This process covers all activities from needing a material to paying the supplier for it.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Process Flow:&lt;/STRONG&gt; Purchase Requisition -&amp;gt; Purchase Order -&amp;gt; Goods Receipt -&amp;gt; Invoice Verification -&amp;gt; Outgoing Payment&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Create Purchase Requisition (Optional):&lt;/STRONG&gt; A user formally requests a material. This is an internal document.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Create Purchase Requisition&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; ME51N&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Create Purchase Order:&lt;/STRONG&gt; The requisition is converted into a Purchase Order (PO), a legal document sent to a supplier to procure goods or services.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Manage Purchase Orders&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; ME21N&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Post Goods Receipt:&lt;/STRONG&gt; When the materials arrive at the plant, the warehouse clerk records the receipt against the PO. This increases inventory.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Post Goods Receipt for Purchase Order&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; MIGO&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Financial Impact:&lt;/STRONG&gt; Inventory Account (Debit) | GR/IR Clearing Account (Credit)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;EWM Integration:&lt;/STRONG&gt; In a warehouse-managed scenario, this step triggers the creation of an inbound delivery in the Extended Warehouse Management (EWM) system, which then manages the putaway process.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Enter Supplier Invoice:&lt;/STRONG&gt; The accounting department receives the invoice from the supplier and enters it into the system, referencing the PO.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Create Supplier Invoice&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; MIRO&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Financial Impact:&lt;/STRONG&gt; GR/IR Clearing Account (Debit) | Vendor Payables Account (Credit)&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Post Outgoing Payment:&lt;/STRONG&gt; The final step is to pay the supplier.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Manage Outgoing Payments&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; F-53&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Financial Impact:&lt;/STRONG&gt; Vendor Payables Account (Debit) | Bank Account (Credit)&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Scenario 2: The Order-to-Cash (O2C) Process&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This process covers all activities from a customer placing an order to receiving payment for the goods.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Process Flow:&lt;/STRONG&gt; Sales Order -&amp;gt; Outbound Delivery -&amp;gt; Picking -&amp;gt; Goods Issue -&amp;gt; Billing -&amp;gt; Incoming Payment&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Create Sales Order:&lt;/STRONG&gt; A sales representative receives an order from a customer and creates a sales order in the system.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Create Sales Orders&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; VA01&lt;/LI&gt;&lt;LI&gt;The system performs an &lt;STRONG&gt;Availability Check (ATP)&lt;/STRONG&gt; to confirm if the goods can be delivered on the requested date.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Create Outbound Delivery:&lt;/STRONG&gt; The shipping department creates a delivery document, which is the trigger for all subsequent shipping activities.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Manage Outbound Deliveries&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; VL01N&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;TM/LE Integration:&lt;/STRONG&gt; This step is the starting point for Transportation Management (TM) or Logistics Execution (LE). A transportation requirement is created, which is then used to plan freight, select a carrier, and tender the shipment.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pick the Goods:&lt;/STRONG&gt; The warehouse operator picks the goods from the storage location.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; LT03 (Create Transfer Order for the Delivery)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;EWM Integration:&lt;/STRONG&gt; The outbound delivery is replicated to EWM, which creates a warehouse task. Operators use mobile devices to execute this task, and upon completion, the information is sent back to S/4HANA.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;HUM Integration:&lt;/STRONG&gt; If Handling Unit Management (HUM) is active, materials are packed into handling units (e.g., boxes on a pallet), each with a unique number for detailed tracking.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Post Goods Issue:&lt;/STRONG&gt; This is the final step in shipping. It legally transfers ownership of the goods, reduces inventory, and updates the sales order status.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Post Goods Issue for Delivery&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; VL02N&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Financial Impact:&lt;/STRONG&gt; Cost of Goods Sold (Debit) | Inventory Account (Credit)&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Create Billing Document (Invoice):&lt;/STRONG&gt; The billing department creates an invoice for the customer.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Create Billing Documents&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; VF01&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Financial Impact:&lt;/STRONG&gt; Customer Receivables Account (Debit) | Sales Revenue Account (Credit)&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Post Incoming Payment:&lt;/STRONG&gt; When the customer pays, the finance team posts the payment, clearing the open receivable.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Post Incoming Payments&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; F-28&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Financial Impact:&lt;/STRONG&gt; Bank Account (Debit) | Customer Receivables Account (Credit)&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Scenario 3: The Plan-to-Produce (P2P) Process&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This process covers all activities from forecasting demand to producing finished goods.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Process Flow:&lt;/STRONG&gt; Demand Planning -&amp;gt; MRP -&amp;gt; Production Order -&amp;gt; Goods Issue -&amp;gt; Confirmation -&amp;gt; Goods Receipt&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Create Planned Independent Requirements (PIRs):&lt;/STRONG&gt; The planning department creates a forecast of demand for a finished product.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Maintain PIRs&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; MD61&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Run Material Requirements Planning (MRP) Live:&lt;/STRONG&gt; MRP Live runs on the in-memory HANA database, exploding the demand down through the BOM and calculating what raw materials need to be purchased and what semi-finished goods need to be produced, and when.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Schedule MRP Runs&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; MD01N&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Result:&lt;/STRONG&gt; The system generates &lt;STRONG&gt;Planned Orders&lt;/STRONG&gt; (for in-house production) and &lt;STRONG&gt;Purchase Requisitions&lt;/STRONG&gt; (for external procurement).&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Convert Planned Order to Production Order:&lt;/STRONG&gt; The production planner reviews the planned orders and converts them into firm Production Orders, which is the official instruction to the shop floor to start manufacturing.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Manage Planned Orders or Convert Planned Orders&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; CO40 (Individual), CO41 (Collective)&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Issue Goods to Production Order:&lt;/STRONG&gt; The warehouse provides the raw materials/components listed in the order to the shop floor.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Post Goods Movement&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;GUI T-Code:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; MIGO (Movement Type 261)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Financial Impact:&lt;/STRONG&gt; Consumption Expense Account (Debit) | Raw Material Inventory (Credit)&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Confirm Production Order:&lt;/STRONG&gt; The shop floor operators confirm the work they have done (time, quantities, etc.). This updates the order status.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Confirm Production Order&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; CO11N&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;CS/PM Integration:&lt;/STRONG&gt; If a piece of equipment used in production requires maintenance, a notification can be created from the production order, triggering a process in Customer Service (CS) or Plant Maintenance (PM).&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Post Goods Receipt from Production:&lt;/STRONG&gt; Once the finished product is complete, it is received into inventory from the production order.&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Fiori App:&lt;/STRONG&gt; Post Goods Receipt for Production Order&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;GUI T-Code:&lt;/STRONG&gt; MIGO (Movement Type 101) or MB31&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Financial Impact:&lt;/STRONG&gt; Finished Goods Inventory (Debit) | Production Output/Settlement Account (Credit)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;QM Integration:&lt;/STRONG&gt; If Quality Management (QM) is active, this goods receipt can automatically create an inspection lot. The goods are posted to "Quality Inspection" stock and cannot be used until a QM technician inspects them and records a usage decision.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Part 5: The Comprehensive Test Plan&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This test plan is designed to allow you, whether you are an End User, Key User, or Consultant, to practice and validate the core S/4HANA functionalities in a structured way. Use this plan to build confidence and ensure the system works as expected.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Introduction to Testing&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The goal of this test plan is to simulate real business operations from start to finish. For each test case, follow the steps, use the provided test data, and record your actual results against the expected outcomes.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Test Scenario 1: Master Data Creation (The Foundation)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Objective:&lt;/STRONG&gt; To ensure that fundamental master data can be created correctly, forming the basis for all subsequent transactional tests.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Test Case ID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;TS-MD-01: Create a Business Partner (Supplier)&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Objective&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Create a new supplier (vendor) master record using the Business Partner transaction.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;You have the necessary authorizations to create Business Partners.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Test Steps&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;1. Go to Fiori App &lt;STRONG&gt;Manage Business Partner Master Data&lt;/STRONG&gt; or T-Code &lt;STRONG&gt;BP&lt;/STRONG&gt;. 2. Click on "Create" and select "Organization." 3. Select the BP Role &lt;STRONG&gt;Supplier (FI) (FLVN00)&lt;/STRONG&gt;. Click Create. 4. Enter a Name (e.g., Global Raw Materials Inc.), Address (Street, City, Country, Postal Code), and Language (EN). 5. Click "Save." Note the BP Number generated. 6. Re-open the BP in change mode. 7. Switch to BP Role &lt;STRONG&gt;Supplier (Purchasing) (FLVN01)&lt;/STRONG&gt;. 8. Go to the "Purchasing" tab. Enter Purchasing Org. 1000. 9. Enter the Order Currency (USD) and Payment Terms (0001). 10. Save your changes.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Test Data&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;BP Name: Global Raw Materials Inc. Purchasing Org: 1000&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Expected Result&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;A Business Partner is created with both general data and purchasing-specific data. The system saves without errors.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Actual Result&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;(To be filled by the tester)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Pass/Fail&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;(To be filled by the tester)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Export to Sheets&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Test Case ID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;TS-MD-02: Create a Finished Good Material&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Objective&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Create a new material master record for a product that will be produced and sold.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Enterprise Structure (Plant, Sales Org, etc.) is configured.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Test Steps&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;1. Go to Fiori App &lt;STRONG&gt;Create Material&lt;/STRONG&gt; or T-Code &lt;STRONG&gt;MM01&lt;/STRONG&gt;. 2. Enter a Material Number (e.g., FG-PUMP-1000) and Industry Sector Mechanical engineering. 3. Select Material Type FERT (Finished Good). 4. In the "Select View(s)" pop-up, choose: Basic Data 1 &amp;amp; 2, Sales Org. Data 1 &amp;amp; 2, Sales: General/Plant, MRP 1, Accounting 1. Click Enter. 5. Enter Organizational Levels: Plant 1000, Sales Org 1000, Dist. Channel 10. 6. &lt;STRONG&gt;Basic Data:&lt;/STRONG&gt; Enter Description High-Pressure Water Pump, Base Unit PC, Material Group 001, Weight details. 7. &lt;STRONG&gt;Sales Views:&lt;/STRONG&gt; Enter Delivering Plant 1000, Tax Classification (e.g., 1 for all tax types). 8. &lt;STRONG&gt;MRP 1 View:&lt;/STRONG&gt; Enter MRP Type PD (MRP), MRP Controller 001. 9. &lt;STRONG&gt;Accounting 1 View:&lt;/STRONG&gt; Enter Valuation Class 7920 (Finished Goods), Price Control S (Standard), and enter a Standard Price (e.g., 250.00). 10. Save the material.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Test Data&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Material Number: FG-PUMP-1000 Plant: 1000 Material Type: FERT&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Expected Result&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;The material master is created successfully and is available for use in planning, production, and sales processes.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Actual Result&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;(To be filled by the tester)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Pass/Fail&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;(To be filled by the tester)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Export to Sheets&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Test Scenario 2: End-to-End Procure-to-Pay (P2P) Flow&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Objective:&lt;/STRONG&gt; To test the entire purchasing cycle, from creating a purchase order to paying the supplier.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Test Case ID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;TS-P2P-01: Standard Procurement Process&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Objective&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Procure a trading good, receive it into inventory, and process the invoice and payment.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;A supplier (Business Partner) exists (use TS-MD-01). A trading good material exists (create one with type HAWA, e.g., HAWA-SCREW-KIT).&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Test Steps&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;1. &lt;STRONG&gt;Create PO:&lt;/STRONG&gt; Go to Fiori App &lt;STRONG&gt;Manage Purchase Orders&lt;/STRONG&gt; (or ME21N). - Enter the Supplier number from TS-MD-01. - In the item overview, enter Material HAWA-SCREW-KIT, Quantity 100 PC, Plant 1000. - Enter Net Price (e.g., 5.00 USD). - Save the PO and note the number. 2. &lt;STRONG&gt;Post Goods Receipt:&lt;/STRONG&gt; Go to Fiori App &lt;STRONG&gt;Post Goods Receipt for Purchase Order&lt;/STRONG&gt; (or MIGO). - Select "Goods Receipt" and "Purchase Order." - Enter the PO number. The data should populate. - Check the "Item OK" box and Post. Note the Material Document number. &lt;EM&gt;Check Point:&lt;/EM&gt; Use Fiori App &lt;STRONG&gt;Display Stock Overview&lt;/STRONG&gt; (or MMBE) to confirm that stock for HAWA-SCREW-KIT has increased by 100 in Plant 1000. 3. &lt;STRONG&gt;Enter Invoice:&lt;/STRONG&gt; Go to Fiori App &lt;STRONG&gt;Create Supplier Invoice&lt;/STRONG&gt; (or MIRO). - Enter Invoice Date. Enter the PO number in the reference field. - The amount should match the PO value (100 * 5.00 = 500.00). Enter this in the Amount field. - Simulate and Post the invoice. 4. &lt;STRONG&gt;Post Payment:&lt;/STRONG&gt; Go to Fiori App &lt;STRONG&gt;Manage Outgoing Payments&lt;/STRONG&gt; (or F-53). - Enter bank data, amount, and the supplier number. - Process the open item corresponding to your invoice. - Post the payment.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Test Data&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Supplier: Global Raw Materials Inc. Material: HAWA-SCREW-KIT Quantity: 100 Price: 5.00 USD&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Expected Result&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;The process completes without financial errors. The PO history is fully updated. The vendor's account balance is cleared. Inventory is correctly updated.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Actual Result&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;(To be filled by the tester)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Pass/Fail&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;(To be filled by the tester)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Export to Sheets&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Test Scenario 3: End-to-End Order-to-Cash (O2C) Flow&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Objective:&lt;/STRONG&gt; To test the entire sales cycle, from receiving a customer order to collecting the payment.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Test Case ID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;TS-O2C-01: Standard Sales Process&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Objective&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Sell a finished good from stock, ship it to the customer, and process the billing and payment.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;A customer (Business Partner) exists (create one with customer roles). The finished good from TS-MD-02 (FG-PUMP-1000) exists and has stock (you can add stock using MIGO with movement type 561).&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Test Steps&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;1. &lt;STRONG&gt;Create Sales Order:&lt;/STRONG&gt; Go to Fiori App &lt;STRONG&gt;Create Sales Orders&lt;/STRONG&gt; (or VA01). - Enter Order Type OR (Standard Order). - Enter your Customer number, a PO Number (e.g., CUST-PO-123). - In the items, enter Material FG-PUMP-1000 and Quantity 5 PC. - Save the Sales Order and note the number. 2. &lt;STRONG&gt;Create Delivery:&lt;/STRONG&gt; Go to Fiori App &lt;STRONG&gt;Manage Outbound Deliveries&lt;/STRONG&gt; (or VL01N). - Enter Shipping Point 1000 and the Sales Order number. - The system creates the delivery document. Save it and note the number. 3. &lt;STRONG&gt;Post Goods Issue:&lt;/STRONG&gt; Open the delivery in change mode (&lt;STRONG&gt;Fiori: Change Outbound Delivery&lt;/STRONG&gt;, VL02N). - Go to the "Picking" tab, enter picked quantity as 5. - Click the &lt;STRONG&gt;Post Goods Issue&lt;/STRONG&gt; button. &lt;EM&gt;Check Point:&lt;/EM&gt; Check the stock overview (MMBE). Stock for FG-PUMP-1000 should be reduced by 5. Check the Document Flow in the sales order (VA03) to see all related documents. 4. &lt;STRONG&gt;Create Invoice:&lt;/STRONG&gt; Go to Fiori App &lt;STRONG&gt;Create Billing Documents&lt;/STRONG&gt; (or VF01). - Enter the Delivery document number and press Enter. - The invoice details are displayed. Save the billing document. 5. &lt;STRONG&gt;Post Payment:&lt;/STRONG&gt; Go to Fiori App &lt;STRONG&gt;Post Incoming Payments&lt;/STRONG&gt; (or F-28). - Enter bank details, amount, and the customer number. - Process the open item for your invoice. Post the payment.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Test Data&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Customer: (Your created customer) Material: FG-PUMP-1000 Quantity: 5&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Expected Result&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;The entire O2C cycle is completed. The Document Flow is complete from order to invoice clearing. Inventory and financial accounts (AR, Revenue, COGS) are correctly updated.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Actual Result&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;(To be filled by the tester)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Pass/Fail&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;(To be filled by the tester)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/mastering-the-essentials-your-journey-into-sap-s-4hana-starts-here/ba-p/14229489"/>
    <published>2025-09-27T10:26:56.943000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-change-a-git-commit-message-safely/ba-p/14229646</id>
    <title>How to change a git commit message safely</title>
    <updated>2025-09-27T21:40:50.318000+02:00</updated>
    <author>
      <name>Myvizhipriya_Thangaraj_2810</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1477011</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1761105506"&gt;Introduction:&lt;/H2&gt;&lt;P&gt;In Git, may be sometimes when we might want to change a commit message, whether it's to correct a typo or provide a more meaningful description or simply fix something we missed. Fortunately, git provides powerful tools to help with this.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1822757439"&gt;Changing a commit message depends on the context:&lt;/H4&gt;&lt;OL&gt;&lt;LI&gt;When the commit is the most recent&lt;/LI&gt;&lt;LI&gt;When the commit is older&lt;/LI&gt;&lt;LI&gt;When you want to keep the same message but add more changes to the commit&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1497161215"&gt;&lt;STRONG&gt;1. Change the Most Recent Commit Message:&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;If you just committed and haven’t pushed yet:&amp;nbsp;&lt;STRONG&gt;git commit --amend -m "New commit message"&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;git commit --amend -m "New commit message"&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;This updates the last commit message.&lt;/LI&gt;&lt;LI&gt;Alternatively, If you omit the -m flag, git will open your default editor so you can edit the message there.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Image 1.png" style="width: 834px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320772iA5C151379233C3E4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image 1.png" alt="Image 1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&amp;nbsp;&lt;STRONG&gt;Screenshot: 1.1&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1300647710"&gt;&lt;STRONG&gt;2. Change an Older Commit Message&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;To change a commit message further back in history, use &lt;STRONG&gt;interactive rebase&lt;/STRONG&gt;:&amp;nbsp;&lt;STRONG&gt;git rebase -i HEAD~n&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;git rebase -i HEAD~1&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Replace n with the number of commits you want to go back (e.g., HEAD~1)&lt;/LI&gt;&lt;LI&gt;In the editor that appears, change pick to reword for the commit(s) whose message you want to update&lt;/LI&gt;&lt;LI&gt;git will then prompt you to enter a new message for each selected commit, modify it and save it (Refer screenshot 2.2 &amp;amp; 2.3)&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Image 2.png" style="width: 588px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320775i5D060AFA19F3376B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image 2.png" alt="Image 2.png" /&gt;&lt;/span&gt;&lt;EM&gt;&amp;nbsp;&lt;STRONG&gt;Screenshot: 2.1&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Image 22.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320774i63A8CC867E7BD4DA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image 22.png" alt="Image 22.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;&lt;STRONG&gt;Screenshot: 2.2&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Image 222.png" style="width: 647px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320773i2E21874AFA53C1D9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image 222.png" alt="Image 222.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&amp;nbsp;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;&lt;STRONG&gt;Screenshot: 2.3&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1104134205"&gt;&lt;STRONG&gt;3. Most Recent Commit Without Changing Its Message&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;To update the files or staging of your last commit while keeping the original message:&amp;nbsp;&lt;STRONG&gt;git commit --amend --no-edit&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;git commit --amend --no-edit&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;This preserves the previous commit message, but lets you include new changes (e.g., add forgotten files - means stage the files, then run the above comment)&lt;/LI&gt;&lt;LI&gt;Useful when you've made minor updates and don't want to touch the commit message&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Image 3.png" style="width: 741px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320777iC5D65A07313FE286/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image 3.png" alt="Image 3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&amp;nbsp;&lt;EM&gt;&lt;STRONG&gt;Screenshot 3.1&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;H3 id="toc-hId-907620700"&gt;&lt;STRONG&gt;Please Note:&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Use &lt;STRONG&gt;--force&lt;/STRONG&gt; only if you're sure — this can impact collaborators on the branch.&lt;/LI&gt;&lt;LI&gt;If you’ve already pushed&lt;STRONG&gt;, &lt;/STRONG&gt;changing commit messages &lt;STRONG&gt;rewrites history&lt;/STRONG&gt;: &lt;STRONG&gt;git push --force&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;git push --force&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Understanding how to change Git commit messages is essential for good version control, always use these commands carefully, especially on shared branches and communicate with your team before rewriting history.&lt;/P&gt;&lt;P&gt;Thank you for taking the time to read this blog! I hope this helps you improve your commit messages. If you found this helpful, please feel free to share your thoughts, feedback, or questions in the comments. Let's keep learning and growing together!&lt;/P&gt;&lt;P&gt;Stay tuned for more Git-related commands in future blogs. Happy coding!&lt;/P&gt;&lt;P&gt;Dear experts, I’m new to blogging, please feel free to correct me if any information is inaccurate.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-change-a-git-commit-message-safely/ba-p/14229646"/>
    <published>2025-09-27T21:40:50.318000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/join-sapui5-sessions-at-sap-teched-2025/ba-p/14227900</id>
    <title>Join SAPUI5 Sessions at SAP TechEd 2025</title>
    <updated>2025-09-29T07:44:29.744000+02:00</updated>
    <author>
      <name>OliverGraeff</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4124</uri>
    </author>
    <content>&lt;P&gt;Dear UI5 enthusiasts,&lt;/P&gt;&lt;P&gt;SAP TechEd 2025 is where UI5 developers meet to enhance their knowledge and get hands-on experience. This is the type of content you like to see: Understand the strategy, see highlights and try out latest capabilities around SAPUI5 and SAP Fiori elements.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="SAPUI5_orange_horizontal.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319879i0844AEB7DCB617E8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SAPUI5_orange_horizontal.png" alt="SAPUI5_orange_horizontal.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched.html" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd in 2025&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;kicks off on the 4th of November 2025, and preparations&amp;nbsp;are in full swing in SAP.&amp;nbsp;&lt;/SPAN&gt;As you probably know, SAP TechEd is the leading tech conference for all developers, IT professionals, business experts, eager to gain in-depth knowledge of SAP’s technologies. It also offers &lt;SPAN&gt;an excellent opportunity to network and connect with peers and SAP experts.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Picture 1.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319877i3C5B1667281CB5A6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture 1.png" alt="Picture 1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/sap-teched-blog-posts/sap-teched-2025-registration-is-live-check-out-our-brand-new-hybrid/ba-p/14107573" target="_blank"&gt;SAP TechEd 2025: Registration is live – check out our brand new hybrid experience!&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Access the full SAP TechEd 2025 session catalogs: &amp;nbsp;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd Berlin&lt;/A&gt;&amp;nbsp;and&amp;nbsp;&lt;A href="https://www.sap.com/germany/events/teched/virtual.html" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd Virtual&lt;/A&gt; and see my shortlist here:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1631965958"&gt;&lt;STRONG&gt;Keynote&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1755527936875001jfGl" target="_blank" rel="noopener noreferrer"&gt;KEY100 | Beyond the hype: How SAP is supercharging developers for what's next&lt;/A&gt;&lt;SPAN&gt;&lt;BR /&gt;Some experts argue there’s a developer shortage. Others will say developers are no longer needed due to AI. Let’s get real: developers, architects, and technologists are here to stay, and their roles are more important than ever.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1435452453"&gt;&lt;STRONG&gt;Strategy Talks&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749723196132001T2Gq" target="_blank" rel="noopener noreferrer"&gt;ST117 | SAP’s user experience strategy with SAP Build&lt;/A&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;An intuitive user experience is essential for every business user. Examine SAP’s strategy for evolving SAP Build Work Zone to empower a streamlined digital workplace, and for building efficient SAP Fiori apps with SAPUI5. Hear how SAP is advancing with Joule, our AI copilot, now embedded across SAP Build solutions.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749722686293001POLV" target="_blank" rel="noopener noreferrer"&gt;ST116 | SAP Build for all: A shift toward AI-assisted developer-centric tools&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;- also available virtually as &lt;A href="https://www.sap.com/events/teched/virtual/flow/sap/tev25/catalog-virtual/page/catalog/session/1752171998192001r6Q2" target="_blank" rel="noopener noreferrer"&gt;ST116v&lt;/A&gt;&lt;BR /&gt;&lt;/SPAN&gt;Explore the most recent innovations in SAP Build solutions that help developers to create extensions, applications, and automations. Learn how enhancements in the development environment, SAP Cloud Application Programming Model, and Joule copilot empower customers and partners to build extensions efficiently at scale.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1238938948"&gt;&lt;STRONG&gt;Deep Dives&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749120324490001V4gx" target="_blank" rel="noopener noreferrer"&gt;AD106 | The art and science of SAPUI5 in SAP Build&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;- also available virtually as &lt;A href="https://www.sap.com/events/teched/virtual/flow/sap/tev25/catalog-virtual/page/catalog/session/1752166265407001r3vW" target="_blank" rel="noopener noreferrer"&gt;AD106v&lt;/A&gt;&lt;BR /&gt;&lt;/SPAN&gt;Discover what’s new in SAPUI5 development with SAP Build solutions. Learn to build modern SAP Fiori apps across ABAP and the cloud using new developer tools, Joule technology integration, and proven SAPUI5 capabilities. Get insights into SAP’s UI strategy with SAP Web Components and see how you can benefit. Elevate your UI with SAPUI5 in SAP Build.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749722922001001vBgc" target="_blank" rel="noopener noreferrer"&gt;AD203 | Fact-checking UI extensibility on cloud and ABAP: What's in it for you&lt;/A&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;SAPUI5 flexibility lets you extend SAP Fiori apps in a clean core approach. Key users use drag-and-drop tools while developers add custom code with visual editors and the Joule copilot. See how SAP Cloud Application Programming Model and ABAP RESTful application programming model help extend data models and add custom logic in SAP Build solutions.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1748962788551001QkBk" target="_blank" rel="noopener noreferrer"&gt;AD100 | Joule for developers: How AI can boost your development in SAP Build&lt;/A&gt;&lt;BR /&gt;The Joule for developers add-on combines all the AI capabilities in SAP Build solutions. Learn about AI-driven development and how developer productivity can be increased. Developers can use our productivity tools to make their lives easier when engaging in SAP Cloud Application Programming Model and UI development.&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1750839413578001LMH0" target="_blank" rel="noopener noreferrer"&gt;CA105 | Intelligent app development at scale with AI and SAP Fiori elements&lt;/A&gt;&lt;/P&gt;&lt;P&gt;With exciting updates to building blocks, a streamlined entry page, and powerful generative AI in SAP Fiori tools, developers can build applications faster than ever. Get a first look at how we integrate MCP to orchestrate AI capabilities across SAP Fiori tools and SAP Fiori elements for faster app development.&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110615653001ATih" target="_blank" rel="noopener noreferrer"&gt;AD201 | Explore ABAP Cloud in SAP Build: What's in it for ABAP developers&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Understand the importance of our strategic approach of integrating ABAP Cloud into SAP Build solutions. Find out how you can benefit from this for SAP Fiori app development and how the graphical modeler helps you to create ABAP core data services models conveniently. Finally, get insight into our future direction.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1042425443"&gt;&lt;STRONG&gt;Roadmap Sessions&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749724635699001LeeG" target="_blank" rel="noopener noreferrer"&gt;AD818 | Explore the road map for user experience with SAP Build &lt;/A&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;SAP Build solutions feature many new and upcoming user experience capabilities. Find out how SAP Build Work Zone delivers a connected, intuitive digital workplace, including the SAP Mobile Start app. Understand SAP's road map for building SAP Fiori apps with SAPUI5. See how the Joule copilot supports user and developer productivity.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749725274909001arjs" target="_blank" rel="noopener noreferrer"&gt;AD820 | Future of app dev in SAP Build: Simplifying clean core and LoB extensions&lt;/A&gt;&lt;SPAN&gt; - also available virtually as &lt;A href="https://www.sap.com/events/teched/virtual/flow/sap/tev25/catalog-virtual/page/catalog/session/1752166275661001rDNm" target="_blank" rel="noopener noreferrer"&gt;AD820v&lt;/A&gt;&lt;BR /&gt;&lt;/SPAN&gt;Check out upcoming enhancements to SAP Build solutions involving SAP’s professional developer tools, the Joule copilot, SAP Cloud Application Programming Model, SAPUI5, and SAP Fiori apps. These updates boost developer productivity, support clean core, and improve extensibility for line-of-business (LoB) apps, advancing enterprise app development.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-845911938"&gt;&lt;STRONG&gt;Hands-on Workshops&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749120606929001fEIj" target="_blank" rel="noopener noreferrer"&gt;AD166 | Taking UI to the next level: Develop SAPUI5 with SAP Build&lt;/A&gt;&lt;BR /&gt;Use SAP Build solutions to develop a modern app with SAPUI5. Explore latest best practices, including the UI5 linter and TypeScript to build a future-proof app. Get to know SAP Web Components and leverage them in your SAPUI5 app. Gain hands-on experience, ask questions, and see how Joule technology supports you with AI-based SAPUI5 magic.&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749723016864001j4id" target="_blank" rel="noopener noreferrer"&gt;AD260 | UI extensibility on top of cloud and ABAP: What's in it for you&lt;/A&gt;&lt;BR /&gt;SAPUI5 flexibility lets you extend SAP Fiori apps with a clean core approach. Key users and developers can add custom code with visual editors and Joule technology. See how SAP Cloud Application Programming Model and the ABAP RESTful application programming model support extending data models and adding custom logic in the SAP Build solution.&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749026440693001OGfF" target="_blank" rel="noopener noreferrer"&gt;AD160 | Get hands-on with Joule: Boost your SAP Build development with AI&lt;/A&gt;&lt;BR /&gt;The Joule for developers add-on brings AI capabilities directly into SAP Build solutions to support your development process. Get hands-on experience using AI-driven tools to boost your productivity in SAP Cloud Application Programming Model and UI development, with features designed to simplify your workflow and help you build faster and smarter.&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749126322451001Fcbi" target="_blank" rel="noopener noreferrer"&gt;CA261 | Create great UX with AI, SAP Design System, SAP Fiori elements, and SAPUI5&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Learn how to create new SAP applications with great UX and AI using the reusable components, patterns, and floor plans in SAP Design System. Design with the SAP Fiori for Web UI kit from Figma, harness AI and the MCP protocol for automated app generation and real-time adaptation of SAP Fiori elements, and extend freestyle in SAPUI5.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749111362893001Nrqs" target="_blank" rel="noopener noreferrer"&gt;AD163 | Fusion development with ABAP Cloud in SAP Build&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Practice fusion development of ABAP Cloud in SAP Build solutions by creating an ABAP Cloud project from the lobby for SAP Build to develop an ABAP RESTful application programming model business object, including an SAP Fiori app on top.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;It sounds awesome, right? I KNOW!&lt;/STRONG&gt;&lt;BR /&gt;See you there...&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/join-sapui5-sessions-at-sap-teched-2025/ba-p/14227900"/>
    <published>2025-09-29T07:44:29.744000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/a-hitchhiker-s-guide-to-sap-fiori-user-experience-and-its-technologies-2025/ba-p/14230556</id>
    <title>A Hitchhiker's Guide to SAP Fiori User Experience and its Technologies – 2025 edition</title>
    <updated>2025-09-29T15:17:43.845000+02:00</updated>
    <author>
      <name>OliverGraeff</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4124</uri>
    </author>
    <content>&lt;P&gt;I’m sure you’ve heard of SAP Fiori, the design system for all SAP products. SAP Fiori covers the design itself, the SAP Fiori applications delivered by SAP, but also technologies and tools to run those apps, to extend standard SAP apps or even to develop your own custom apps.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Are you looking for a high-level understanding of SAP Fiori and its technologies and tools?&lt;/LI&gt;&lt;LI&gt;Would you like to get an overview to see how all of this fits together?&lt;/LI&gt;&lt;LI&gt;Do you know which role SAP Build plays?&lt;/LI&gt;&lt;LI&gt;You have an ABAP / on-prem background and want to learn about how SAP Business Technology Platform (SAP BTP) / cloud is used for SAP Fiori?&lt;/LI&gt;&lt;LI&gt;Do you want to leverage entry points for your own practical learning, e.g. recommended tutorials?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Look no further. This 2-part webinar helps and provides entry points for your hands-on learning.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-29 at 15.06.47.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321173iF866687AD1F8C2EB/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-29 at 15.06.47.png" alt="Screenshot 2025-09-29 at 15.06.47.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1761759978"&gt;&lt;STRONG&gt;Agenda Part 1&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;SAP Fiori is the User Experience of SAP Business Suite that changes the way you work. In this overview you’ll get a first understanding of SAP Fiori: The SAP Fiori design system and how it is realized with the related UI technologies and tools, for business users, key users, and developers. This part covers the main environments like SAP S/4HANA and SAP Business Technology Platform. The overview extends to the actual productive usage of SAP Fiori business applications via an SAP Fiori launchpad, and the essential UI frameworks.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The SAP Fiori Design system&lt;/LI&gt;&lt;LI&gt;An overview of Technologies and Tools for SAP Fiori&lt;/LI&gt;&lt;LI&gt;The entry point to SAP Fiori: SAP Build Work Zone&lt;/LI&gt;&lt;LI&gt;The strategic UI frameworks SAPUI5 and SAP Fiori elements&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1565246473"&gt;&lt;STRONG&gt;Agenda Part 2&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In the second part we’ll cover SAP Build for AI–based application development and, of course, look at ABAP development tools. This leads us to the important scenario of extensibility and how you can easily add custom extension to standard SAP apps. Mobile technologies and a Q&amp;amp;A section close the second part.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The SAP Build development environment and ABAP Development Tools in Eclipse&lt;/LI&gt;&lt;LI&gt;Extending standard SAP applications with Clean Core principles&lt;/LI&gt;&lt;LI&gt;Technologies for a mobile experience&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1368732968"&gt;&lt;STRONG&gt;Who Should Attend?&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This overview session is for everyone, from executives to software developers. It is a complete run-through of SAPs user experience technologies, ranging from end user personalization to developer tools, from creating an initial project to productively using an app. This content is especially useful if you have an ABAP background and need a sound overview understanding of SAP Fiori and its tools and technologies. The webinar has a focus on providing the full picture and entry points into further learnings.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&amp;nbsp;Join me for this 2-part webinar, live on&amp;nbsp;&lt;STRONG&gt;October 28. and 30., 17:00 – 18:00 CET&amp;nbsp;&lt;/STRONG&gt;on&lt;STRONG&gt;&amp;nbsp;YouTube&amp;nbsp;&lt;A href="https://www.youtube.com/live/_0Cc5dMvp7I" target="_blank" rel="noopener nofollow noreferrer"&gt;Part 1&lt;/A&gt; and &lt;A href="https://www.youtube.com/live/FU_mIbcYLpc" target="_blank" rel="noopener nofollow noreferrer"&gt;Part 2&lt;/A&gt;.&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/a-hitchhiker-s-guide-to-sap-fiori-user-experience-and-its-technologies-2025/ba-p/14230556"/>
    <published>2025-09-29T15:17:43.845000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/unlocking-sap-fiori-and-other-business-content-on-mobile-a-practical-guide/ba-p/14230532</id>
    <title>Unlocking SAP Fiori and other business content on Mobile: A Practical Guide</title>
    <updated>2025-10-01T11:43:30.288000+02:00</updated>
    <author>
      <name>shabeer_jameela</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/256946</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1632677193"&gt;Introduction: Accessing SAP business content on mobile&lt;/H1&gt;&lt;P&gt;While analysing the recent search queries from users around “the use of SAP on mobile” we came across the below examples.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;is there an app for SAP Fiori?&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;can I access SAP Fiori from mobile?&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;how to use SAP Fiori on iPhone?&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;can SAP be used in mobile?&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;how to open SAP on mobile?&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;what SAP business content is available on mobile?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;There were also questions around how SAP Mobile Start fit into the picture with the standard set of mobile apps for each of the cloud solutions from SAP; for e.g. SAP SuccessFactors mobile.&lt;/P&gt;&lt;P&gt;Providing clarity on these kinds of questions served as the motivation for writing this blog. We will also look at the broader set of business content that can be accessed from mobile as standard or via configuration.&lt;/P&gt;&lt;H2 id="toc-hId-1565246407"&gt;Is SAP Fiori Client still relevant?&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;The SAP Fiori Client mobile app provided a native runtime environment for SAP Fiori apps on iOS and Android devices.&amp;nbsp; It was removed from the&amp;nbsp;Apple App Store and Google Play Store on&amp;nbsp;March 31st, 2022. (&lt;/SPAN&gt;Refer to SAP Note &lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/2992772" target="_blank" rel="noopener noreferrer"&gt;2992772&lt;/A&gt;&lt;/SPAN&gt;).&lt;/P&gt;&lt;P&gt;While the above SAP note does recommend the users of SAP Fiori to transition to SAP Mobile Start, the above search queries gave the impression that customers probably could do with bit more guidance on the overall strategy and approach around accessing SAP business content including SAP Fiori apps from mobile.&lt;/P&gt;&lt;H3 id="toc-hId-1497815621"&gt;&lt;SPAN&gt;Decision tree for alternatives to SAP Fiori Client&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;As mentioned in the &lt;/SPAN&gt;SAP Note &lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/2992772" target="_blank" rel="noopener noreferrer"&gt;2992772,&lt;/A&gt; one of the options is for the users of&amp;nbsp;SAP Fiori Client to transition to SAP Mobile Start.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Here’s a visual representation of the decision tree for customers who are still using SAP Fiori Client as covered in &lt;A href="https://dam.sap.com/mac/u/a/ro6aZqu?rc=10&amp;amp;doi=SAP1038843" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori Client successor recommendations&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="decision tree.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321536iF003A7DEAD5C198F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="decision tree.jpg" alt="decision tree.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1172219397"&gt;&lt;SPAN&gt;Product positioning of SAP Mobile Start&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://pages.community.sap.com/topics/mobile-experience/start" target="_self" rel="noopener noreferrer"&gt;SAP Mobile Start&lt;/A&gt; is positioned as the mobile native entry point for business applications, processes and business data from SAP and non-SAP solutions. SAP Mobile Start was initially released for iOS (iPhone and iPad) in&amp;nbsp;September 2021 and the Android version was later released in June 2022.&amp;nbsp;This also signified a change in mobile strategy for SAP by moving away from the hybrid world to native app approach.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SMS1.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321552iDE9F77822012354D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="SMS1.jpg" alt="SMS1.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1104788611"&gt;The mobile app for SAP's central entry point solutions&lt;/H3&gt;&lt;P&gt;SAP Mobile Start brings the content that is deployed on SAP’s &lt;STRONG&gt;central entry point&lt;/STRONG&gt; solutions to mobile users.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="CEP options.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321539i787CB9092EF6DB75/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="CEP options.jpg" alt="CEP options.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Once the business content is deployed on these solutions, you can enable the power of mobile to the end-users with a &lt;A href="https://help.sap.com/docs/mobile-start/mobile-start-administration-guide/offboarding?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;QR code scan&lt;/A&gt; at almost no additional implementation effort or deploy using &lt;A href="https://help.sap.com/docs/mobile-start/mobile-start-administration-guide/mobile-device-management-mdm?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Mobile Device Management (MDM)&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-650109668"&gt;Accessing SAP business content from mobile&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;Now let’s dive deeper into how the following types of business content can be deployed and consumed via SAP Mobile Start.&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;standard business content from SAP S/4HANA that is mobile enabled&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;custom SAP Fiori apps created using SAP Build&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;custom native apps created using SAP mobile services&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;other SAP business solutions content&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-582678882"&gt;1. SAP S/4HANA standard business content on mobile&lt;/H2&gt;&lt;P&gt;Let’s address the question on how to access SAP S/4HANA business content (SAP Fiori roles and apps) via mobile.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/#/home" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Fiori Apps Reference library&lt;/A&gt;&lt;/SPAN&gt; can provide a list of SAP Fiori apps that are optimized for mobile phone and tablet. For e.g. you can discover apps “by Line of Business”; for e.g. Finance, Sourcing and Procurement etc.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="FAL.jpg" style="width: 850px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321541i6E8B90DF71A98DEC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="FAL.jpg" alt="FAL.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;You need to implement SAP Fiori roles and apps for your chosen processes on your SAP Fiori launchpad on SAP S/4HANA; refer to &lt;A href="https://learning.sap.com/courses/how-to-deliver-a-great-user-experience-with-sap-s-4hana?url_id=text-former-openSAP-course" target="_self" rel="noopener noreferrer"&gt;How to Deliver a Great User Experience with SAP S/4HANA&lt;/A&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;You can then federate and bring the &lt;/SPAN&gt;business content (SAP Fiori roles and apps) to one of the central entry point solutions mentioned above. Refer to the learning journey: &lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/Setting-Up-SAP-Build-Work-Zone-standard-edition-and-SAP-Mobile-Start-with-SAP-S-4HANA/introducing-sap-mobile-start-1_def2eae5-999d-463e-a8b6-7b870beb4480" target="_blank" rel="noopener noreferrer"&gt;Setting up SAP Mobile Start with SAP S/4HANA on SAP Build Work Zone&lt;/A&gt;&lt;/SPAN&gt; which explains how to do this using SAP Build Work Zone and bring it to mobile.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;You can also refer to below assets:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/documents/2018/02/f0148939-f27c-0010-82c7-eda71af511fa.html" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori Deployment Options and System Landscape Recommendations&lt;/A&gt; is the reference document for all consultants, partners and customers who implement SAP Fiori. Do note that it also mentions the use of SAP Build Work Zone as a central entry point deployment option.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-fiori-deployment-in-2025-embedded-vs-work-zone-standard-vs-advanced/ba-p/14144003" target="_blank"&gt;SAP Fiori Deployment in 2025: Embedded vs. Work Zone Standard vs. Advanced Edition&lt;/A&gt; also gives some insights into comparing various deployment options.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-386165377"&gt;2. Creating and consuming custom SAP Fiori apps&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform/build.html" target="_blank" rel="noopener noreferrer"&gt;SAP Build&lt;/A&gt; is a unified application development and process automation solution, enabling personalization and efficiency at scale. You can create custom SAP Fiori apps, using &lt;STRONG&gt;SAP Build Apps&amp;nbsp;(for low-code development)&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;SAP Build Code&amp;nbsp;(for pro-code development)&lt;/STRONG&gt;. You can connect to your&amp;nbsp;SAP S/4HANA&amp;nbsp;or other backend system, use visual tools to define data models and UI elements, and leverage generative AI with tools like&amp;nbsp;Joule&amp;nbsp;to accelerate development. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;SAP Build Work Zone&lt;/STRONG&gt; can act as the central entry point to consume these custom apps as well as the federated (standard) business content from SAP S/4HANA.&amp;nbsp;&lt;STRONG&gt;SAP Mobile Start&lt;/STRONG&gt; can consume the content that is deployed on SAP Build Work Zone.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-189651872"&gt;3. Creating custom mobile apps that follows SAP Fiori guidelines&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Some customers may have use cases for which they might want to create custom native mobile applications that meets the following requirements:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;utilize the native capabilities offered by the respective operating systems &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;while also following the SAP Fiori design guidelines&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;and maintaining the same user-experience as that of the business solutions from SAP&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;This is where &lt;A href="https://www.sap.com/uk/products/technology-platform/mobile-services.html" target="_blank" rel="noopener noreferrer"&gt;SAP Mobile Services&lt;/A&gt; comes into picture. It is an open standard based service on SAP Business Technology Platform that enables simple mobile application development, configuration, and management. &lt;/SPAN&gt;It offers:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Mobile Development kit which is a metadata driven tool that can allow you to develop cross platform applications.&lt;/LI&gt;&lt;LI&gt;Or SAP BTP SDKs for iOS as well as Android for those who want more flexibility beyond what the above metadata driven approach can provide.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These SDKs follow SAP Fiori design guidelines to preserve the familiarity of both the native operating system experience as well the SAP Fiori app experience; refer to &lt;SPAN&gt;&lt;A href="https://help.sap.com/doc/f53c64b93e5140918d676b927a3cd65b/Cloud/en-US/docs-en/guides/features/fiori-ui/overview.html" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori mobile design guidelines&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;Any custom native app that you create can of course be launched from SAP Mobile Start via a native tile; refer to &lt;SPAN&gt;&lt;A href="https://blogs.sap.com/2021/09/05/sap-mobile-start-adding-native-apps-to-your-content/" target="_blank" rel="noopener noreferrer"&gt;add native apps to your content&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;H2 id="toc-hId--6861633"&gt;4. Other SAP business solutions content&lt;/H2&gt;&lt;P&gt;To be a true native entry point, SAP Mobile Start app also needs to bring the business content and key capabilities from other SAP business solutions to a mobile user.&amp;nbsp; Let's have a closer look at the possibilities.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP S/4HANA (as explained above)&lt;UL&gt;&lt;LI&gt;mobile enabled apps from SAP S/4HANA SAP Fiori launchpad via content federation&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;workflow notifications and situations&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/task-center/sap-task-center/destinations-to-task-providers?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SAP Task Center integration&lt;/A&gt;&lt;/SPAN&gt; for &lt;STRONG&gt;tasks; &lt;/STRONG&gt;for e.g. Purchase Order approval from SAP S/4HANA.&amp;nbsp;Also tasks from SAP Ariba , SAP SuccessFactors, SAP Cloud for Customer, SAP Concur, SAP Fieldglass, SAP Field Service Management, SAP Marketing Cloud, SAP Workflow Service, 3rd party providers&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/mobile-start/mobile-start-administration-guide/ui-integration-cards?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;UI integration&lt;/A&gt;&lt;/SPAN&gt; cards&lt;SPAN&gt; displaying&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/mobile-start/mobile-start-administration-guide/insights?locale=en-US&amp;amp;state=PRODUCTION&amp;amp;version=2.4" target="_blank" rel="noopener noreferrer"&gt;Insights&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;and custom &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/mobile-start/mobile-start-administration-guide/cards?locale=en-US&amp;amp;state=PRODUCTION&amp;amp;version=2.4" target="_blank" rel="noopener noreferrer"&gt;cards&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;URL tile&amp;nbsp;to Cloud solutions from SAP e.g. SAP Concur web&lt;/LI&gt;&lt;LI&gt;Analytical story from SAP Analytics Cloud&lt;/LI&gt;&lt;LI&gt;Native app tile to launch specialised app from the respective SAP Cloud solution&lt;UL&gt;&lt;LI&gt;e.g. SAP Concur mobile&lt;/LI&gt;&lt;LI&gt;or deep links where SAP Cloud solution supports the same; e.g. using SAP &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/successfactors-platform/using-deep-links/list-of-sap-successfactors-deep-links?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SuccessFactors deep link&lt;/A&gt;&lt;/SPAN&gt; to directly launch Compensation details&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;SAP Document AI &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/new-in-sap-mobile-start-v2-4-integrate-and-launch-sap-document-ai-on-mobile/ba-p/14162770" target="_self"&gt;integration&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-437282226"&gt;Big picture on SAP’s mobile portfolio&lt;/H1&gt;&lt;P&gt;To complete the picture on SAP’s mobile portfolio, we must also talk about the dedicated mobile apps that comes with each of the cloud solutions from SAP ; for e.g. SAP SuccessFactors mobile, SAP Analytics Cloud mobile, SAP Concur mobile etc and how SAP Mobile Start fits into the picture.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP Mobile Portfolio.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321923iF645F25B82586389/image-size/large?v=v2&amp;amp;px=999" role="button" title="SAP Mobile Portfolio.jpg" alt="SAP Mobile Portfolio.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--52634286"&gt;SAP Mobile Start in the context of other SAP mobile apps&lt;/H2&gt;&lt;P&gt;SAP Mobile Start is not intended to provide the ability for the end users to access all mobile enabled capabilities from all the cloud solutions from SAP. It is meant to be a native entry point from where the following can be done.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;the most valuable capabilities and content from the business solutions can be accessed as described above.&lt;/LI&gt;&lt;LI&gt;and the specialised mobile apps provided by each of these cloud solutions from SAP can be launched.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-44255216"&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;In summary&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Mobile Start is the &lt;STRONG&gt;mobile native entry point&lt;/STRONG&gt; into SAP universe for a mobile user.&lt;/LI&gt;&lt;LI&gt;Administrators can deploy the most critical content from various business solutions from SAP as outlined above on SAP's &lt;STRONG&gt;central entry point solutions&lt;/STRONG&gt; and bring them to SAP Mobile Start.&lt;/LI&gt;&lt;LI&gt;The end-users can further use the specialised &lt;STRONG&gt;standard&lt;/STRONG&gt; SAP mobile apps.&lt;/LI&gt;&lt;LI&gt;SAP Mobile Services provides a choice of SAP BTP SDKs that can be used to create &lt;STRONG&gt;custom native apps&lt;/STRONG&gt; when end-user needs go beyond the standard set of apps provided by SAP while also maintaining the familiarity of the respective operating system as well as SAP Fiori design guidelines.&lt;/LI&gt;&lt;LI&gt;The users of SAP Fiori Client are &lt;STRONG&gt;encouraged to move&lt;/STRONG&gt; to SAP Mobile Start.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;We look forward to hearing your experience with setting up these solutions in your landscape. We are keen to hear about mobile personas and use-cases you have taken advantage of. Please do share your thoughts and comments below.&lt;BR /&gt;&lt;BR /&gt;Stay up to date with latest news and post your questions or feedback about SAP Mobile Start in the Q&amp;amp;A area. Start by visiting your&amp;nbsp;&lt;A href="https://community.sap.com/topics/mobile-applications" target="_blank"&gt;SAP Mobile Experience community page&lt;/A&gt;&amp;nbsp;and click “follow”. We’ll be publishing more informative blog posts.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/unlocking-sap-fiori-and-other-business-content-on-mobile-a-practical-guide/ba-p/14230532"/>
    <published>2025-10-01T11:43:30.288000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/5-tips-for-getting-started-with-the-sap-fiori-for-web-ui-kit/ba-p/14232902</id>
    <title>5 Tips for Getting Started with the SAP Fiori for Web UI Kit</title>
    <updated>2025-10-01T19:09:28.210000+02:00</updated>
    <author>
      <name>SiyanaDicheva</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13344</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="5Tips_WebUIKit_Header.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322072i5B1C4FF52755F523/image-size/large?v=v2&amp;amp;px=999" role="button" title="5Tips_WebUIKit_Header.png" alt="5Tips_WebUIKit_Header.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;The &lt;/SPAN&gt;&lt;A href="mailto:https://www.figma.com/community/file/1494295794601744471" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;SAP Fiori for Web UI Kit&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; is your go-to resource for creating consistent, efficient, and accessible user interfaces. The kit helps you design faster without starting from scratch.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Here are five helpful tips to get started and design with confidence:&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1890905964"&gt;&lt;STRONG&gt;&lt;SPAN&gt;1. Explore the full component library first&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Before jumping into design work, begin with the&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt; design foundations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; separately, such as color, typography, and shadows. Understanding these basics early on will help you make better, more consistent decisions throughout your work. You’ll also find &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP icons&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;product illustrations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; integrated directly into the kit.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="5Tips_WebUIKit_Content01.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322078iB8978EBBC8FF8391/image-size/large?v=v2&amp;amp;px=999" role="button" title="5Tips_WebUIKit_Content01.png" alt="5Tips_WebUIKit_Content01.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Once you're familiar with the foundations, take time to explore the full set of components included in the file. The UI kit provides a wide range of ready-made elements, scalable and fully aligned with SAP’s design principles, all in one place.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1694392459"&gt;&lt;STRONG&gt; 2.&amp;nbsp;Use variables to switch between themes easily&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;In the SAP Fiori for Web UI Kit, variables control core style properties such as colors, typography, and spacing.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The kit includes support for multiple themes that reflect SAP’s visual language in different environments. The default light theme is called &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Morning Horizon&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, and for low-light settings, the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Evening Horizon&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; theme provides a dark mode alternative.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="5Tips_WebUIKit_Content02.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322069i2C6CF2201FE6BB30/image-size/large?v=v2&amp;amp;px=999" role="button" title="5Tips_WebUIKit_Content02.png" alt="5Tips_WebUIKit_Content02.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Using variables, you can switch between these themes easily within your Figma file. This lets you preview how your designs will look across different user preferences without rebuilding components from scratch.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1497878954"&gt;&lt;STRONG&gt;3.&amp;nbsp;Use the Slot for content placement&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Some components, such as Dialogs or Cards, include a Slot&amp;nbsp;-&amp;nbsp;a clearly marked area (highlighted in orange) where you can insert your own content, like text, icons, or buttons, while keeping the original structure and behavior intact.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To use it, simply select the Slot layer in the component and replace it with your own content using the &lt;STRONG&gt;“Swap instance”&lt;/STRONG&gt; option in the right-hand panel. There’s no need to detach the component, your changes will stay consistent and maintain the design integrity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="5Tips_WebUIKit_Content03.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322070iBFB622F8BACC8071/image-size/large?v=v2&amp;amp;px=999" role="button" title="5Tips_WebUIKit_Content03.png" alt="5Tips_WebUIKit_Content03.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Using the Slot keeps your designs flexible, editable, and easy to maintain.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1301365449"&gt;&lt;SPAN&gt;&lt;STRONG&gt;4. &lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;Keep your file organized and use naming conventions&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Maintaining a well-organized file helps you and your team navigate and manage designs efficiently. Use &lt;STRONG&gt;clear naming conventions&lt;/STRONG&gt; for frames, components, and layers so it’s easy to find and update elements later. This practice saves time and reduces errors, especially as your designs grow in complexity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="5Tips_WebUIKit_Content04.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322071i669EF16CE856E273/image-size/large?v=v2&amp;amp;px=999" role="button" title="5Tips_WebUIKit_Content04.png" alt="5Tips_WebUIKit_Content04.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1104851944"&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;5.&amp;nbsp;Stay in sync with releases&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;The SAP Fiori for Web UI Kit is actively maintained and regularly improved with new components, updates, and refinements based on user feedback. To stay up to date, keep an eye on official announcements and communications from the SAP Design team.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;You can find the&lt;STRONG&gt; latest releases&lt;/STRONG&gt; &lt;STRONG&gt;and enhancements&lt;/STRONG&gt; on our SAP Design System Portal &lt;/SPAN&gt;&lt;A href="https://www.sap.com/design-system/fiori-design-web/v1-136/discover/whats-new?external" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;“What’s New” page&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The SAP Fiori for Web UI Kit gives you more than a set of components, it provides a solid foundation for building enterprise-ready designs that scale.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/5-tips-for-getting-started-with-the-sap-fiori-for-web-ui-kit/ba-p/14232902"/>
    <published>2025-10-01T19:09:28.210000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/adding-captcha-feature-in-sap-fiori-launchpad/ba-p/14235095</id>
    <title>Adding CAPTCHA feature in SAP Fiori Launchpad</title>
    <updated>2025-10-05T20:35:46.741000+02:00</updated>
    <author>
      <name>Ashutosh_Rai1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1573670</uri>
    </author>
    <content>&lt;P&gt;In this blog , we will go through step by step process to modify SAP Fiori Launchpad logon page (specifically adding CAPTCHA feature in SAP Private Cloud/on-prem System).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;(1)&amp;nbsp;&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;Setup SAP backend system in ADT.&amp;nbsp; You can refer this learning journey for the same&amp;nbsp;&lt;A href="https://developers.sap.com/tutorials/abap-create-project..html" target="_blank" rel="noopener noreferrer"&gt;Create an ABAP Project in ABAP Development Tools (ADT) | SAP Tutorials&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;(2)&lt;/STRONG&gt;&amp;nbsp; Once setup is completed create a new development package in ADT , for that follow below steps:&lt;/P&gt;&lt;P&gt;&amp;nbsp; (a) Right click on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Favorite Packages&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;STRONG&gt;-&amp;gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;New -&amp;gt; ABAP Package&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_0-1759677217972.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322935i6CC8C56A28BAD438/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_0-1759677217972.png" alt="Ashutosh_Rai1_0-1759677217972.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; (b) Enter values as highlighted below in screenshots :&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_2-1759677844383.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322939iBB7F8230317CA2FA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_2-1759677844383.png" alt="Ashutosh_Rai1_2-1759677844383.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_3-1759677938301.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322941iB2D286C26AF1A3C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_3-1759677938301.png" alt="Ashutosh_Rai1_3-1759677938301.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_5-1759678270579.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322943i8AA7EE30219695D5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_5-1759678270579.png" alt="Ashutosh_Rai1_5-1759678270579.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;(3)&lt;/STRONG&gt; We will now create a custom BSP application so that we can try-out our custom logon screen without impacting end-users. For this follow below steps :&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;(a) Right click on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ZFIORI_CUSTOM_LOGON&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;STRONG&gt;-&amp;gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;New -&amp;gt; Other ABAP Repository Object&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_6-1759678638968.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322944i00842977EC097AD7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_6-1759678638968.png" alt="Ashutosh_Rai1_6-1759678638968.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; (b) Search for "BSP" keyword and select "&lt;STRONG&gt;BSP Application&lt;/STRONG&gt;"&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_8-1759678969335.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322946i19A70B911F9D36CC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_8-1759678969335.png" alt="Ashutosh_Rai1_8-1759678969335.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;(c) Give the BSP object name , this will be used for testing&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_9-1759679081620.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322948i1F114FC242EC5D63/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_9-1759679081620.png" alt="Ashutosh_Rai1_9-1759679081620.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; (d) Activate the newly created BSP page , by clicking on &lt;STRONG&gt;Activate&lt;/STRONG&gt;&amp;nbsp;button&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_10-1759679396638.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322949i24FB694E0F897578/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_10-1759679396638.png" alt="Ashutosh_Rai1_10-1759679396638.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;(e) Go to "sicf" tcode to test service&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_11-1759679608722.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322950i4280201F4685B2C2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_11-1759679608722.png" alt="Ashutosh_Rai1_11-1759679608722.png" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_12-1759679668295.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322951iF89CC40FB01DDFE1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_12-1759679668295.png" alt="Ashutosh_Rai1_12-1759679668295.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; (f) You might get Authorization error like below , please note that as of now we just want to test if the object is active or not&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_14-1759681153769.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322953i99940B5A6D3BE5AB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_14-1759681153769.png" alt="Ashutosh_Rai1_14-1759681153769.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;(4)&lt;/STRONG&gt; Now we will create a custom class in order to redefine standard logon class. In order to procced , follow below steps :&lt;/P&gt;&lt;P&gt;&amp;nbsp;(a) Create a new class inside the same package&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_15-1759684262826.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322958iFE2128C3BB585AD4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_15-1759684262826.png" alt="Ashutosh_Rai1_15-1759684262826.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; (b) Give below details and click Next&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_16-1759684614081.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322959iC35A48A66AFAF8ED/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_16-1759684614081.png" alt="Ashutosh_Rai1_16-1759684614081.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;(c) Give TR details and click on Finish&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_18-1759684853540.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322961iC18B7B5A0B874A07/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_18-1759684853540.png" alt="Ashutosh_Rai1_18-1759684853540.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;(5)&lt;/STRONG&gt; Copy this code snippet and paste it in our custom &lt;STRONG&gt;ZCL_CUSTOM_FIORI_LOGIN&lt;/STRONG&gt; class :&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_custom_fiori_login DEFINITION
  PUBLIC
  INHERITING FROM /ui2/cl_fiori3_login
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.


CLASS zcl_custom_fiori_login IMPLEMENTATION.
  
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;(6)&lt;/STRONG&gt; We will now create custom JavaScript file which will be called during logon page load by following below steps :&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;(a) Create a file "zlogin_ext.js" and paste this code snippet :&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;/*!
 * SAP Fiori login - add CAPTCHA along with Refresh button for the same
*/

document.addEventListener( 'DOMContentLoaded', (event) =&amp;gt; {
  const w = "white";
   if (document.getElementById("LOGIN_LINK") !== null) {
   document.getElementById("CHANGE_PASSWORD_LINK").style.color = w;
   
    // Function to get the CAPTCHA name
  function getCaptchaValue() {

	var alpha = new Array("A", "B", "C", "D", "E", "F", "G","H", "I", "J", 
        	              "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", 
                	      "U", "V", "W","X", "Y", "Z", "a", "b", "c", "d", 
        	              "e", "f", "g", "h", "i", "j", "k", "l", "m", "n",
       		              "o", "p", "q", "r", "s", "t", "u", "v", "w", "x",
		     "y", "z");
	var i;
	for (i = 0; i &amp;lt; 6; i++) {
		var a = alpha[Math.floor(Math.random() * alpha.length)];
        	var b = Math.ceil(Math.random() * 10) + "";
		var c = alpha[Math.floor(Math.random() * alpha.length)];
		var d = alpha[Math.floor(Math.random() * alpha.length)];
		var e = Math.ceil(Math.random() * 10) + "";
		var f = alpha[Math.floor(Math.random() * alpha.length)];
		var g = alpha[Math.floor(Math.random() * alpha.length)];
	}
	var code = a + " " + b + " " + " " + c + " " + d + " " + e + " " + f + " " + g;
	var bCode = code.split(" ").join("");
  	return bCode;


  }

  const captchaLabel = document.createElement("text");
  captchaLabel.textContent = getCaptchaValue();
  captchaLabel.setAttribute("for", "captchaField");
  captchaLabel.style.fontSize = '24px';


  const captchaInput = document.createElement("input");
  captchaInput.setAttribute("type", "text");
  captchaInput.setAttribute("id", "captchaField");
  captchaInput.setAttribute("name", "CAPTCHA"); 
  captchaInput.setAttribute("required", "true"); 
  captchaInput.setAttribute("placeholder", "Please enter Captcha");
  captchaInput.style.width = "280px";
  captchaInput.style.fontSize = '15px';
  captchaInput.style.height = "35px";
  
  

  const passwordBlock = document.getElementById("PASSWORD_BLOCK");

  const captchaBlock = document.createElement("div");
  captchaBlock.id = "CAPTCHA_BLOCK"; 
  
  const captchaLabelWrapper = document.createElement("div");
  captchaLabelWrapper.style.display = "flex";
  captchaLabelWrapper.style.alignItems = "center"; 
  captchaLabelWrapper.appendChild(captchaLabel);
  captchaLabelWrapper.style.marginBottom = "20px"; 
  captchaLabelWrapper.style.marginTop = "20px"; 
   

  const refreshButton = document.createElement("button");
  refreshButton.innerHTML = "&amp;amp;#x21BB;"; // Unicode refresh icon (clockwise arrows)
  refreshButton.style.marginLeft = "50px"; 
  refreshButton.style.padding = "5px 10px";
  refreshButton.style.cursor = "pointer";
  refreshButton.style.backgroundColor = "#5CACEE"; 
  refreshButton.style.color = "white";
  refreshButton.style.border = "none";
  refreshButton.style.borderRadius = "3px";
  refreshButton.style.fontSize = "30px"; 
  captchaLabelWrapper.appendChild(refreshButton);

  captchaBlock.appendChild(captchaLabelWrapper);
  captchaBlock.appendChild(captchaInput);
  passwordBlock.insertAdjacentElement('afterend', captchaBlock); 
  
  const messageDiv = document.createElement("div");
  messageDiv.id = "captchaMessage";
  messageDiv.style.color = "red"; 
  messageDiv.style.marginTop = "5px"; 
  captchaBlock.appendChild(messageDiv); 

  let displayedCaptcha = captchaLabel.textContent; 
  const userEnteredCaptcha = captchaInput.value;
 
  
  const loginButton = document.getElementById("LOGIN_LINK"); 
  loginButton.disabled = true; 
  
  function updateCaptcha() {
    captchaLabel.textContent = getCaptchaValue();
    displayedCaptcha = captchaLabel.textContent;
    captchaInput.value = ""; 
    loginButton.disabled = true; 
    messageDiv.textContent = "";
  }
  
  refreshButton.addEventListener('click', () =&amp;gt; {
    updateCaptcha();
  });
  
  captchaInput.addEventListener('input', () =&amp;gt; { 
    
  	if (document.getElementById("captchaField").value === displayedCaptcha) {
        	loginButton.disabled = false; 
        	messageDiv.textContent = ""; 
    	} else {
        	loginButton.disabled = true;  
        	messageDiv.textContent = "Please enter correct Captcha and click on Logon again"; 
    	}
    
  });
 
   
  //Event listener to enable or disable Standard Login button based on CAPTCHA validation
  loginButton.addEventListener('click', (e) =&amp;gt; { 
        
   
  	if (displayedCaptcha === document.getElementById("captchaField").value) {
  		loginButton.closest('form').submit(); 
                messageDiv.textContent = "";
                
   	} else {
                e.preventDefault();
                messageDiv.textContent = "Please enter correct Captcha"; 
                                
  	}
  })

  }

})&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;(b) The above JavaScript code snippet will basically create a "CAPTCHA" label and input field. Catpcha text will be displayed in the label. Along with that there will be additional "Refresh" button to get new Captcha. It also display error message&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; (c) Goto "se80" tcode and import this "zlogin_ext.js"&amp;nbsp;&lt;SPAN&gt;&amp;nbsp;file as a new&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;MIME object&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;in path&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP -&amp;gt; PUBLIC -&amp;gt; BC -&amp;gt; UI2 -&amp;gt; logon -&amp;gt; fiori3 -&amp;gt; js&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_19-1759686903005.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322962i0E5ADF8940A856F3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_19-1759686903005.png" alt="Ashutosh_Rai1_19-1759686903005.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;(7)&lt;/STRONG&gt; Now we need to call this custom "zlogin_ext.js" JavaScript file in our custom&amp;nbsp;&lt;STRONG&gt;ZCL_CUSTOM_FIORI_LOGIN&lt;/STRONG&gt;&amp;nbsp;ABAP class , for that update this ABAP class code as below&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_custom_fiori_login DEFINITION
  PUBLIC
  INHERITING FROM /ui2/cl_fiori3_login
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
  PROTECTED SECTION.
    METHODS init_default_properties REDEFINITION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_custom_fiori_login IMPLEMENTATION.
   METHOD init_default_properties.

    super-&amp;gt;init_default_properties( context ).
    m_properties-&amp;gt;set( name = 'extra_js' value = '/sap/public/bc/ui2/logon/fiori3/js/zlogin_ext.js' ).

  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;(8)&lt;/STRONG&gt; Now we can test our Logon screen by going to "SICF" tcode and running our custom service "ZCUSTOM_FIORI_L" which we have created for testing :&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_20-1759687271957.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322964i5FE6CC73503721A9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_20-1759687271957.png" alt="Ashutosh_Rai1_20-1759687271957.png" /&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_21-1759687314369.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322965i1A15FFB49D45FB11/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_21-1759687314369.png" alt="Ashutosh_Rai1_21-1759687314369.png" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_22-1759687411132.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322966i5D6A20C5DD65D4D9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_22-1759687411132.png" alt="Ashutosh_Rai1_22-1759687411132.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;(9)&lt;/STRONG&gt; Now we need to configure this in Standard Fiori Launchpad, for that follow below steps :&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;(a) Goto "SICF" tcode and in "&lt;STRONG&gt;Service Name&lt;/STRONG&gt;" enter&amp;nbsp;&lt;STRONG&gt;"FLP"&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;and double click on the entry&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_23-1759687581143.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322967i61D237ED4703B80E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_23-1759687581143.png" alt="Ashutosh_Rai1_23-1759687581143.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;(b) Switch to &lt;STRONG&gt;Edit&lt;/STRONG&gt; mode&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_24-1759687693057.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322968i77A26178E1FE5343/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_24-1759687693057.png" alt="Ashutosh_Rai1_24-1759687693057.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;(c)&amp;nbsp;Navigate to &lt;STRONG&gt;Error pages&lt;/STRONG&gt;, activate the &lt;STRONG&gt;System Logon&lt;/STRONG&gt; radio button and click on &lt;STRONG&gt;Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_25-1759687773654.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322969i1CC472BBB288FA82/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_25-1759687773654.png" alt="Ashutosh_Rai1_25-1759687773654.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; (d)&amp;nbsp;In the &lt;STRONG&gt;System Logon Configuration&lt;/STRONG&gt; menu, activate radio button: &lt;STRONG&gt;Define Service-Specific Settings&lt;/STRONG&gt; followed by activating radio button &lt;STRONG&gt;Custom Implementation&lt;/STRONG&gt; and entering the name of your custom class (in our case it is ZCL_CUSTOM_FIORI_LOGIN). Once done, click on &lt;STRONG&gt;Ok&lt;/STRONG&gt; button and accept all messages.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashutosh_Rai1_26-1759687919053.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322970i868F7DE23E3A35E4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashutosh_Rai1_26-1759687919053.png" alt="Ashutosh_Rai1_26-1759687919053.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;(e)&amp;nbsp;Once changes have been done, click on &lt;STRONG&gt;Save&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; NOTE&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;- You will be prompted for a transport request&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;(10)&lt;/STRONG&gt;&amp;nbsp;Logon to the Fiori Launchpad(or you can directly use "&lt;STRONG&gt;/n/ui2/flp&lt;/STRONG&gt;" tcode), you should now see the same new custom logon page which is been shown in &lt;STRONG&gt;step 8&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/adding-captcha-feature-in-sap-fiori-launchpad/ba-p/14235095"/>
    <published>2025-10-05T20:35:46.741000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-sap-fiori-for-android-ios-25-8-innovative-enhancements-for/ba-p/14227276</id>
    <title>Introducing SAP Fiori for Android/iOS 25.8: Innovative Enhancements for Android and iOS</title>
    <updated>2025-10-07T10:45:01.820000+02:00</updated>
    <author>
      <name>EmilVoutta</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/40656</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;SAP Fiori continues to advance its technological offerings with the release of SAP BTP SDK version 25.8, featuring exciting updates for both Android and iOS. This release introduces a suite of new capabilities as well as upgrades to current features, enhancing user experiences on business apps.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1761042173"&gt;&lt;SPAN&gt;New in SAP Fiori for Android 25.8&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;In the following section, we’ll give you a brief overview about everything that’s new in SAP Fiori for Android 25.8.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1693611387"&gt;&lt;SPAN&gt;Circular In-Place Progress Indicator&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;The circular in-place progress indicator displays the status of ongoing processes when loading is initiated by a button. An indicator within the button shows the loading state. The progress indicator has been enhanced to allow customization of the icon button so that once loading is finished, the icon button can be changed to a different icon.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For more information, check out the &lt;A href="https://www.sap.com/design-system/fiori-design-android/components/progress-indicators/circular-progress-indicator/" target="_blank" rel="noopener noreferrer"&gt;Circular Progress Indicator&lt;/A&gt; article in the SAP Fiori for Android design guidelines.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Object cell with a circular progress indicator" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322045iA91482E7C6CFD88F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Circular Progress Indicator.png" alt="Object cell with a circular progress indicator" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Object cell with a circular progress indicator&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1497097882"&gt;&lt;SPAN&gt;Illustrated Message&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;The illustrated message component, which helps communicate empty, error, and success states through a combination of engaging illustrations, solution-oriented messages, and a conversational tone, has been updated with new illustration assets.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To learn more about this component, refer to &lt;A href="https://www.sap.com/design-system/fiori-design-android/components/feedback/illustrated-message/" target="_blank" rel="noopener noreferrer"&gt;Illustrated Message&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Illustrated message with the new “empty task” illustration" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321604i212F1FE6D38787E4/image-size/large?v=v2&amp;amp;px=999" role="button" title="IllustratedMessage25.8_Android_Thumbnail.png" alt="Illustrated message with the new “empty task” illustration" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Illustrated message with the new “empty task” illustration&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1300584377"&gt;&lt;SPAN&gt;Native File Viewer&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;The native file viewer, which allows users to preview files, now supports viewing password-protected PDFs by prompting them to enter a password in a dialog before the file is displayed, expanding accessibility and document control within apps.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For more information, check out &lt;A href="https://www.sap.com/design-system/fiori-design-android/patterns/native-file-viewer/" target="_blank" rel="noopener noreferrer"&gt;Native File Viewer&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Password-protected PDF files in native file viewer" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321605iCC8D4D7009C11100/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="25.08_Enter_Password_PDF_Native_File.png" alt="Password-protected PDF files in native file viewer" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Password-protected PDF files in native file viewer&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1104070872"&gt;&lt;SPAN&gt;Picker Form Cell&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;The picker form cell, used for making date and time-based selections, is now available for Jetpack Compose.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;See &lt;A href="https://www.sap.com/design-system/fiori-design-android/components/input-and-selection/time-picker-form-cell/" target="_blank" rel="noopener noreferrer"&gt;Date and Time Picker Form Cell&lt;/A&gt; for more information.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Date picker form cell with Horizon tonal color option" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321607i6A8CAC5B2922EAFC/image-size/large?v=v2&amp;amp;px=999" role="button" title="25.8_TimePicker_DurationSelection.png" alt="Date picker form cell with Horizon tonal color option" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Date picker form cell with Horizon tonal color option&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-907557367"&gt;&lt;SPAN&gt;Stepper Form Cell&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;The stepper form cell and the nested stepper control, which allow users to incrementally increase or decrease a select value, are now available for Jetpack Compose.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Check out the &lt;A href="https://www.sap.com/design-system/fiori-design-android/components/input-and-selection/stepper-form-cell/" target="_blank" rel="noopener noreferrer"&gt;Stepper Form Cell&lt;/A&gt; guideline article to learn more.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Stepper form cell in horizontal layout (top) and vertical layout (bottom)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321609iE84FC1128C2740BC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Stepper_Variations2_Android25.8.png" alt="Stepper form cell in horizontal layout (top) and vertical layout (bottom)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Stepper form cell in horizontal layout (top) and vertical layout (bottom)&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-711043862"&gt;&lt;SPAN&gt;Text Input Form Cell&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Text input form cells have been enhanced to provide currency support, allowing users to enter currency values in single property form cells. &amp;nbsp;The form cells now feature ISO codes &amp;nbsp;that automatically format the text input with the corresponding currency symbol.&lt;/P&gt;&lt;P&gt;For more information, refer to &lt;A href="https://www.sap.com/design-system/fiori-design-android/components/input-and-selection/text-inputs/%20" target="_self" rel="noopener noreferrer"&gt;Text Inputs&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Textinput_25.8_variation_4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322043iD06BC249F8B8C1FF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Textinput_25.8_variation_4.png" alt="Textinput_25.8_variation_4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;H2 id="toc-hId-385447638"&gt;&lt;SPAN&gt;New in SAP Fiori for iOS 25.8&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Check out what's new in SAP Fiori for Android 25.8.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-318016852"&gt;&lt;SPAN&gt;Illustrated Message&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Just like the Android equivalent, the illustrated message component has been updated with new illustration assets to help communicate empty, error, and success states with engaging illustrations.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Learn more about this component in the &lt;A href="https://www.sap.com/design-system/fiori-design-ios/components/feedback/illustrated-message/" target="_self" rel="noopener noreferrer"&gt;Illustrated Message&lt;/A&gt; SAP Fiori for iOS guideline article.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Illustrated message in different containers" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321614i78199FE5D1FCBB0C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Variations_IllustratedMessageSuccess_iOS.png" alt="Illustrated message in different containers" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Illustrated message in different containers&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-121503347"&gt;&lt;SPAN&gt;Modals and Sheets&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;We have added&amp;nbsp;new guideline articles for modality and sheets that cover all types of modals and sheets, including but not limited to full-screen modals, non-modal sheets, action sheets, popovers, and form sheets.&lt;/P&gt;&lt;P&gt;For more information, refer to &lt;A href="https://www.sap.com/design-system/fiori-design-ios/patterns/modality/" target="_self" rel="noopener noreferrer"&gt;Modality&lt;/A&gt;&amp;nbsp;and &lt;A href="https://www.sap.com/design-system/fiori-design-ios/components/sheets/" target="_self" rel="noopener noreferrer"&gt;Sheets&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Modal sheet" style="width: 589px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322044i5C47E215970CCA98/image-size/large?v=v2&amp;amp;px=999" role="button" title="25.8 Sheets.png" alt="Modal sheet" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Modal sheet&lt;/span&gt;&lt;/span&gt; &lt;/P&gt;&lt;H3 id="toc-hId--150241527"&gt;&lt;SPAN&gt;Pickers&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;The date range picker is now supported as a picker form cell, enabling the triggering of the date range selection component.&lt;/P&gt;&lt;P&gt;Take a look at the &lt;A href="https://www.sap.com/design-system/fiori-design-ios/components/input-and-selection/pickers/" target="_self" rel="noopener noreferrer"&gt;Pickers&lt;/A&gt; guideline article for more information. &lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Date range picker" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322046i538BB2B71F9E6EB3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Date Range Picker.png" alt="Date range picker" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Date range picker&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--346755032"&gt;&lt;SPAN&gt;Text Inputs&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Text inputs now come with currency support via a new view modifier, enabling display of the ISO code in the text input label, showing the currency symbol after editing, and applying localized formatting using native Apple APIs and formatters.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Check out &lt;A href="https://www.sap.com/design-system/fiori-design-ios/components/input-and-selection/text-input/" target="_self" rel="noopener noreferrer"&gt;Text Inputs&lt;/A&gt; to view more details.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Text input - single property form cell with currency field support" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321619i51A05E0F8839B79D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Textinput_25.8_variation_4.png" alt="Text input - single property form cell with currency field support" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Text input - single property form cell with currency field support&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--249865530"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1391159556" id="toc-hId--446379035"&gt;&lt;STRONG&gt;Resources&lt;/STRONG&gt;&lt;/H2&gt;&lt;H3 id="toc-hId--1712892377" id="toc-hId--936295547"&gt;Design Guidelines&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="dianaklukas_0-1759244280546.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321700i61E06A2D4B59776A/image-size/large?v=v2&amp;amp;px=999" role="button" title="dianaklukas_0-1759244280546.jpeg" alt="dianaklukas_0-1759244280546.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;A detailed documentation on component anatomy, behavior, and interactions allows you to use components that match your use case. Crosslinks to Google’s Material Design Guidelines for Android and Apple’s Human Interface Guidelines for iOS, as well as links to development documentation, help you navigate to these resources. Additionally, you can find a feedback function on each guideline article that allows you to provide feedback.&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/design-system/fiori-design-android/" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori for Android Design Guidelines&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://www.sap.com/design-system/fiori-design-ios/" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori for iOS Design Guidelines&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1909405882" id="toc-hId--1132809052"&gt;UI Kits for Figma&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP Fiori for Android and iOS UIKit" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321701iC7596F4B5AE93D54/image-size/large?v=v2&amp;amp;px=999" role="button" title="dianaklukas_1-1759244280324.jpeg" alt="SAP Fiori for Android and iOS UIKit" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;SAP Fiori for Android and iOS UIKit&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;With the updated SAP Fiori for Android and iOS Design Kits, it’s now easier than ever to use the latest components and patterns in your mobile design. By using the Design Kits, you can quickly create a consistent user experience that enables app implementations at scale.&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/design-system/fiori-design-android/resources/design-kit" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori for Android 25.8 UI Kits&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://www.sap.com/design-system/fiori-design-ios/resources/design-kit" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori for iOS 25.8 UI Kits&lt;/A&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-sap-fiori-for-android-ios-25-8-innovative-enhancements-for/ba-p/14227276"/>
    <published>2025-10-07T10:45:01.820000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-check-fiori-apps-related-authorization-object-mass/ba-p/14233292</id>
    <title>How to Check Fiori Apps Related Authorization Object Mass</title>
    <updated>2025-10-07T10:51:37.890000+02:00</updated>
    <author>
      <name>MehmetSaidDemir</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1459016</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1761846588"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In SAP implementations, understanding the underlying authorization objects associated with each app is crucial for secure and compliant access management. However, manually identifying these objects for multiple apps can be time-consuming and error-prone. This article presents a structured approach to mass-check authorization objects related to Fiori apps using backend SAP tables and metadata.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1565333083"&gt;&lt;STRONG&gt;Objective&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;To extract and analyze the authorization objects linked to multiple Fiori apps by leveraging the relationship between Fiori App IDs, OData services, and SAP authorization tables.&lt;/P&gt;&lt;H2 id="toc-hId-1368819578"&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;Step-by-Step Process&lt;/STRONG&gt;&lt;/H2&gt;&lt;H3 id="toc-hId-1301388792"&gt;&lt;STRONG&gt;1. Extract Fiori App ID – OData Service Mapping&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Start by retrieving the mapping between Fiori App IDs and their corresponding OData services. This can be done using the SAP Fiori Apps Library or via internal documentation if available.&lt;/P&gt;&lt;P&gt;Each Fiori app typically has one or more OData services that it consumes. This mapping is essential for tracing the backend logic and authorization.&lt;/P&gt;&lt;H3 id="toc-hId-1104875287"&gt;&lt;STRONG&gt;2. Match OData Services with Authorization Hashes (Table: &lt;CODE&gt;USOBHASH&lt;/CODE&gt;)&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Once you have the list of OData services, use the &lt;CODE&gt;USOBHASH&lt;/CODE&gt; table to find the corresponding hash values. These hash values represent the technical linkage between services and their authorization metadata.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Key Fields&lt;/STRONG&gt;:&lt;UL&gt;&lt;LI&gt;&lt;CODE&gt;PGMID&lt;/CODE&gt; (usually 'R3TR')&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;OBJECT&lt;/CODE&gt; (e.g., 'IWSG' for OData services)&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;OBJ_NAME&lt;/CODE&gt; (OData service name)&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;HASH&lt;/CODE&gt; (authorization hash)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This step helps you identify which hash is associated with each OData service.&lt;/P&gt;&lt;H3 id="toc-hId-908361782"&gt;&lt;STRONG&gt;3. Retrieve Authorization Objects via Hash (Table: &lt;CODE&gt;USOBTC&lt;/CODE&gt;)&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Using the hash values obtained from &lt;CODE&gt;USOBHASH&lt;/CODE&gt;, query the &lt;CODE&gt;USOBTC&lt;/CODE&gt; table to extract the actual authorization objects.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Key Fields&lt;/STRONG&gt;:&lt;UL&gt;&lt;LI&gt;&lt;CODE&gt;HASH&lt;/CODE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;AUTH_OBJ&lt;/CODE&gt; (e.g., &lt;CODE&gt;S_SERVICE&lt;/CODE&gt;, &lt;CODE&gt;S_RFC&lt;/CODE&gt;, etc.)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This table provides the list of authorization objects that are checked when the corresponding OData service is executed.&lt;/P&gt;&lt;H2 id="toc-hId-582765558"&gt;&lt;STRONG&gt;Example Workflow&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Let’s say you want to analyze the authorization objects for a set of Fiori apps used in the Procurement module:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Extract App IDs and OData services from the Fiori Apps Library.&lt;/LI&gt;&lt;LI&gt;Query &lt;CODE&gt;USOBHASH&lt;/CODE&gt; to get the hash values for each OData service.&lt;/LI&gt;&lt;LI&gt;Use those hash values to query &lt;CODE&gt;USOBTC&lt;/CODE&gt; and retrieve the related authorization objects.&lt;/LI&gt;&lt;LI&gt;Compile the results into a report (e.g., Excel or JSON) for further analysis or role design.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Note: Some Fiori applications do not have an odata service. Therefore, those with a transaction code are already found in USOBTC as transaction codes. For others, e.g., webdynpro applications, I couldn't find a quick method. I added the catalog to the role, got the hash code, and manually placed it in an Excel file. Only 5 out of 300 Fiori applications worked this way.&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H2 id="toc-hId-386252053"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;By leveraging the relationship between Fiori App IDs, OData services, and SAP authorization tables (&lt;CODE&gt;USOBHASH&lt;/CODE&gt;, &lt;CODE&gt;USOBTC&lt;/CODE&gt;), consultants and security teams can efficiently perform mass analysis of authorization objects. This method supports better role design, compliance audits, and secure Fiori app deployments.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-check-fiori-apps-related-authorization-object-mass/ba-p/14233292"/>
    <published>2025-10-07T10:51:37.890000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/step-by-step-guide-enabling-standard-f4-help-for-custom-field-created-using/ba-p/14236626</id>
    <title>Step-by-Step Guide: Enabling Standard F4 Help for Custom Field created using SAP CFL App</title>
    <updated>2025-10-07T12:39:52.075000+02:00</updated>
    <author>
      <name>bhawna-v_16</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/144085</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Overview: &lt;/STRONG&gt;In SAP, &lt;STRONG&gt;CFL refers to Custom Fields and Logic&lt;/STRONG&gt;. It is not a standalone application; rather, it is a Fiori application provided by SAP as a component of S/4HANA Extensibility. The application allows users to incorporate new fields and business logic into standard SAP applications without coding. In this section, we will locate the &lt;STRONG&gt;Custom Fields&lt;/STRONG&gt; and &lt;STRONG&gt;Custom Logic&lt;/STRONG&gt; tab. Within the &lt;STRONG&gt;Custom Fields tab&lt;/STRONG&gt;, we can add our custom fields, while the &lt;STRONG&gt;Custom Logic tab&lt;/STRONG&gt; is designated for BAdI implementation, which is currently not in use. For custom logic, we have an additional Fiori application named as&amp;nbsp;&lt;STRONG&gt;Custom Logic&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Introduction: &lt;/STRONG&gt;In this blog, we will explore how to add a custom field using the &lt;STRONG&gt;Custom Fields and Logic&lt;/STRONG&gt; Fiori application, as well as how to implement standard search help (F4 Help) within that custom field using the SAP Screen Layout of custom created Sub-screen or Main Screen.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-by-Step Process:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1 -&lt;/STRONG&gt; Open Custom Fields and logic Fiori App.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_4-1759832929063.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323657iA5572660DF5A7A5A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_4-1759832929063.png" alt="bhawnav_16_4-1759832929063.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2 -&lt;/STRONG&gt; Press the&lt;STRONG&gt; “+” button&lt;/STRONG&gt;&lt;SPAN&gt; located at the top right.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_5-1759832960481.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323658i2C28E636B7B5C7FC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_5-1759832960481.png" alt="bhawnav_16_5-1759832960481.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3 -&lt;/STRONG&gt; After clicking the “+” button, a pop-up will appear prompting you to enter the appropriate Business Context Id&lt;STRONG&gt; (MM_PURREQN_ITEM) &lt;/STRONG&gt;for the corresponding SAP module along with any other necessary fields.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_6-1759832992282.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323659iE6D3423A01128774/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_6-1759832992282.png" alt="bhawnav_16_6-1759832992282.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4 -&lt;/STRONG&gt; Please choose the correct type from the dropdown menu (such as &lt;STRONG&gt;Text, Code List&lt;/STRONG&gt;&lt;SPAN&gt;, etc.). The &lt;/SPAN&gt;&lt;STRONG&gt;Text&lt;/STRONG&gt;&lt;SPAN&gt; option is solely for input purposes, while the &lt;/SPAN&gt;&lt;STRONG&gt;Code List&lt;/STRONG&gt;&lt;SPAN&gt; should be used if you wish to assign any fixed values to your field, as other types serve different functions.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_7-1759833025549.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323661i197DDCAC3419CE97/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_7-1759833025549.png" alt="bhawnav_16_7-1759833025549.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5 -&lt;/STRONG&gt; Give desired length to the field and click on &lt;STRONG&gt;“Create”&lt;/STRONG&gt; Button.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_8-1759833065197.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323665iD8D1FD0CA5665B46/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_8-1759833065197.png" alt="bhawnav_16_8-1759833065197.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6 -&lt;/STRONG&gt; It will appear like this on &lt;STRONG&gt;“Home Page”&lt;/STRONG&gt;&lt;SPAN&gt; of the App.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_9-1759833095462.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323666i761D7D2A809BB2B9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_9-1759833095462.png" alt="bhawnav_16_9-1759833095462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7 -&lt;/STRONG&gt; Provide the field label to the field and click on &lt;STRONG&gt;“Save”&lt;/STRONG&gt; and &lt;STRONG&gt;“Publish”&lt;/STRONG&gt; Button.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_10-1759833125878.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323667iA079ED8647DCE976/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_10-1759833125878.png" alt="bhawnav_16_10-1759833125878.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8 -&lt;/STRONG&gt; In the other tabs, you will find the &lt;STRONG&gt;UI specifications&lt;/STRONG&gt;, names of&lt;STRONG&gt; CDS Views&lt;/STRONG&gt;, details of the &lt;STRONG&gt;Odata Service&lt;/STRONG&gt;, &lt;STRONG&gt;API information&lt;/STRONG&gt;, and &lt;STRONG&gt;more&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_11-1759833156444.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323668iD4DF284EBB3F0918/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_11-1759833156444.png" alt="bhawnav_16_11-1759833156444.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 9 -&lt;/STRONG&gt; Once you publish your field, it will be incorporated into the standard table of the relevant business context. In my situation, it will appear in the EBAN table with a name that begins with "ZZ1" under an Append Structure.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 10 -&lt;/STRONG&gt; Custom sub-screen as a &lt;STRONG&gt;Customer Data&lt;/STRONG&gt; tab has been created in the &lt;STRONG&gt;ME51N T-code&lt;/STRONG&gt; (&lt;STRONG&gt;Create Purchase Requisition&lt;/STRONG&gt; Fiori App) where I have added that custom field.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_12-1759833203804.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323670iE6837B9855D02DC8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_12-1759833203804.png" alt="bhawnav_16_12-1759833203804.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 11 -&lt;/STRONG&gt; Open the Screen Layout of the corresponding screen via path &lt;STRONG&gt;System &amp;gt; status &amp;gt; Program Name &amp;gt; Screen &amp;gt; Screen Layout&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_13-1759833232578.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323672i2B422BF61C7DD7AD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_13-1759833232578.png" alt="bhawnav_16_13-1759833232578.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 12 - Double click&lt;/STRONG&gt; on the input field and Properties pop-up will appear.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_14-1759833262306.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323675iBD8A415D130DB156/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_14-1759833262306.png" alt="bhawnav_16_14-1759833262306.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 13 -&lt;/STRONG&gt; Enter the &lt;STRONG&gt;standard search help name&lt;/STRONG&gt; in the search help field of the property pop-up, and you will notice the F4 help added in the custom field.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_15-1759833293253.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323677i6EF8683A7870188E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_15-1759833293253.png" alt="bhawnav_16_15-1759833293253.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 14 -&lt;/STRONG&gt; Search Help Window.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhawnav_16_16-1759833314139.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323678i2D0AD53A56D67DB5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="bhawnav_16_16-1759833314139.png" alt="bhawnav_16_16-1759833314139.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion: &lt;/STRONG&gt;Using the &lt;STRONG&gt;Custom Fields and Logic app&lt;/STRONG&gt; in SAP Fiori, we can easily extend standard applications like ME51N by creating custom fields tailored to business needs. By integrating standard search helps into these fields and placing them on a custom sub screen, we enhance usability while maintaining consistency with SAP’s native behavior. This approach ensures flexibility, upgrade safety, and a smooth user experience—all without needing deep technical development.&lt;/P&gt;&lt;P&gt;This approach will work when you have custom screen, for standard screen we have an alternative option to utilize CDS views F4 help during the creation of fields via Custom fields and logic Fiori App.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/step-by-step-guide-enabling-standard-f4-help-for-custom-field-created-using/ba-p/14236626"/>
    <published>2025-10-07T12:39:52.075000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-sap-fiori-development-portal-your-gateway-to-rapid-sap/ba-p/14236768</id>
    <title>Introducing the SAP Fiori Development Portal: Your Gateway to Rapid SAP Fiori App Creation (1 of 6)</title>
    <updated>2025-10-07T14:04:32.843000+02:00</updated>
    <author>
      <name>katrin_polloczek</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/188039</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Welcome to the first post in our mini-series exploring the SAP Fiori development portal - a new hub designed to empower every member of your project team to decide efficiently and collaboratively on the SAP Fiori app you want to add to your portfolio. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="katrin_polloczek_0-1759836738854.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323715iEAEF8865FBBD3C74/image-size/large?v=v2&amp;amp;px=999" role="button" title="katrin_polloczek_0-1759836738854.png" alt="katrin_polloczek_0-1759836738854.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Before we demonstrate how you can explore and use the SAP Fiori development portal, this first post sets you up on what SAP Fiori elements for OData V4 really is, why it has become the UI framework of choice for SAP Fiori app development, and how our building block approach is changing the game for developers, designers, and business experts alike&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Why SAP Fiori Elements?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Fiori elements for OData V4 is more than just a UI framework - it’s a metadata-driven approach that leverages the &lt;A href="https://www.sap.com/design/design-system" target="_blank" rel="noopener noreferrer"&gt;SAP Design System&lt;/A&gt; as its guiding principle. By listening to input from partners, customers, and SAP product teams, we ensure that the most relevant design system options are available in the framework at runtime. This means you can create applications that are not only consistent and enterprise-ready but also tailored to your unique requirements.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Whenever you create a &lt;A href="https://pages.community.sap.com/topics/fiori-elements" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori elements&lt;/A&gt; app, you automatically get the SAP Fiori design. SAP Fiori is the design concept framework for SAP applications, setting the standard for harmonized, user-centric experiences across the enterprise. SAP Fiori elements for OData V4 is the key enabler to implement and consume this harmonized experience, providing you with options to use standard floorplans for recurring layouts or building blocks for creative, custom layouts. In both cases, you can always extend further with&lt;/SPAN&gt;&lt;SPAN&gt; freestyle &lt;A href="https://pages.community.sap.com/topics/ui5" target="_blank" rel="noopener noreferrer"&gt;SAPUI5&lt;/A&gt; to address unique requirements and add custom features.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Building Blocks: The Foundation of Flexibility&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Over the past few years, we’ve worked hard to break down SAP Fiori elements into a set of reusable building blocks. These building blocks - such as tables, forms, filter bars, and charts - are orchestrated by SAP Fiori elements and form the basis of every OData V4 application. They provide standardized layouts and interaction patterns, ensuring UI consistency and boosting developer productivity. For SAP Fiori elements for OData V4, we set up the building blocks as our center of gravity. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When you select a classic SAP Fiori elements floorplan, you’re choosing a predefined combination of these building blocks, optimized for standard use cases. This is the ultimate developer productivity solution. But if your project requires something different, you can use the same building blocks to create custom layouts, combining them as needed for maximum creativity and flexibility - all while retaining the benefits of an annotation-driven UI.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="katrin_polloczek_1-1759836738858.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323713i1DC2F9956D8AF4F2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="katrin_polloczek_1-1759836738858.png" alt="katrin_polloczek_1-1759836738858.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Two Paths, One Powerful Framework&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Whether you choose a standard floorplan or a custom layout, you benefit from all the work we’ve put into these building blocks: rapid app creation, consistent UI, and enterprise-ready features like personalization, key user support, and internationalization&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="katrin_polloczek_2-1759836738862.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323714i21252E9ECF834C32/image-size/large?v=v2&amp;amp;px=999" role="button" title="katrin_polloczek_2-1759836738862.png" alt="katrin_polloczek_2-1759836738862.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;The SAP Fiori development portal: Your One-Stop Shop&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To help you choose the right path for your project, we’re introducing the SAP Fiori development portal where you can explore options, collaborate, and make informed decisions at every step. This portal aims to provide all project team members—business analysts, designers, developers, and users - with the information and tools they need to define a joint target picture and efficiently build SAP Fiori apps based on SAP Fiori elements for OData V4. Once the target picture of the SAP Fiori app is clear, you can easily create the app by using &lt;A href="https://pages.community.sap.com/topics/fiori-tools" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori tools&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Endless Possibilities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The SAP Fiori development portal supports you in real-time exploration, and we’re eager to hear your feedback to make the portal even better. Thank you for joining us on this journey. We’re excited to see how you’ll harness the full potential of SAP Fiori elements and the SAP Fiori development portal. Who knows - you might be the next speaker at our &lt;A href="https://tinyurl.com/elementsroundtable" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Fiori development roundtables&lt;/A&gt;! &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Stay tuned for the next post, where we’ll dive deeper how you can use the SAP development portal to derive your path of rapid, flexible SAP Fiori app development. &lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Get familiar with SAP Fiori development portal and the power of the building blocks (2 of 6) &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Explore the potential of SAP Fiori development portal using complex building blocks (3 of 6)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Use SAP Fiori development portal to understand extension options for standard floorplans (4 of 6)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Prepare building custom pages by using SAP Fiori development portal (5 of 6)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Bringing the SAP Fiori development portal and its use to the next level (6 of 6)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;We first announced our work on the SAP Fiori development portal at UI5con 2025 in July and are now happy to report its first delivery with SAPUI5 1.141. Further enhancements are already in preparation as you read this, continuing our commitment to improving the SAP Fiori development &lt;/SPAN&gt;&lt;SPAN&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;EM&gt;After exploring the building blocks, their use in standard floorplans and custom pages, and how the SAP Fiori development portal supports your workflow, we’re now introducing its soft launch.&amp;nbsp;&lt;BR /&gt;&lt;/EM&gt;&lt;EM&gt;The &lt;SPAN&gt;&lt;A href="https://ui5.sap.com/1.141.0/test-resources/sap/fe/core/fpmExplorer/index.html#/" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori development portal&lt;/A&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;EM&gt; will for now be available only via a dedicated link for SAPUI5 version 1.141. Starting with SAPUI5 1.142 it will be directly integrated into the UI5 demo kit - no separate version or link required. Stay tuned for the updated access details with SAPUI5 1.142.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-sap-fiori-development-portal-your-gateway-to-rapid-sap/ba-p/14236768"/>
    <published>2025-10-07T14:04:32.843000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/configuration-of-fiori-app-state-for-sharing/ba-p/14240470</id>
    <title>Configuration of Fiori app state for sharing</title>
    <updated>2025-10-13T12:29:01.636000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633599875"&gt;1. Introduction&lt;/H1&gt;&lt;P&gt;When using Fiori apps in business settings, users often enter search conditions such as specific date ranges or company codes, adjust the order of lists, and then share the app URL with other users via the “Share” button—either by email or chat. However, when the recipient opens the shared URL, the filters may be reset or the sorting order may revert, so the sender’s screen cannot be reproduced. This behavior occurs when accessing from different browsers (e.g., Chrome to Edge), different devices (PC to smartphone), or different sessions. As a result, the recipient may have to ask for the filter conditions again or manually restore the conditions by comparing with screenshots, which can slow down reviews, approvals, or troubleshooting. The cause of this issue lies in the default settings of Fiori Launchpad. By default, the application state (such as filters, sorting, and pagination) is stored in the browser’s temporary storage, so simply sharing the URL will not reflect the filter conditions and other settings. Therefore, even if you open the URL in a different environment, the information saved in the sender’s browser is not referenced, and even if the “sap-iapp-state” parameter is included in the URL, the screen cannot be reproduced. This blog introduces how to configure the system so that information such as filter conditions and table column order can be shared across different browsers or devices.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="0-1760099721811.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325599i8A78D03E4EE9394F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760099721811.png" alt="hironobu_nakayama_0-1760099721811.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1437086370"&gt;2. Mechanism for Sharing App State&lt;/H1&gt;&lt;P&gt;The state of the app is managed by Application State data. Application State data is the "app appearance and filtering state" in Fiori Launchpad.This is the data that handles the data. When a user sets filter conditions or adjusts the order and display columns of the table, the state is recorded as a collective "snapshot" and restored later. For apps that use Fiori elements and SmartFilterBar, the app state is stored and loaded through this Application State data. The Fiori app uses the reference key ("sap-iapp-state" parameter) given to the URL to reproduce the state of the app. The handling method of Application State data in Fiori Launchpad is defined in the Launchpad configuration parameter: APPSTATE_TRANSIENT, and the following two types of parameters are provided.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;true (default)&lt;P&gt;It is a method of maintaining state in a temporary area in the browser (transient). Only the same browser and the same session are maintained, so they cannot be reproduced in different browsers or devices.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;false&lt;P&gt;Save the state of the app on the front-end server. Therefore, it is possible to refer to the data stored on the front-end server, allowing the app to be reproduced across different browsers and devices.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1240572865"&gt;3. How to set it up&lt;/H1&gt;&lt;P&gt;In one of the following transactions, set the Launchpad configuration parameter: APPSTATE_TRANSIENT (value: true / false).&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;T-cd: /UI2/FLP_CUS_CONF(For client-dependent settings)&lt;/LI&gt;&lt;LI&gt;T-cd: /UI2/FLP_SYS_CONF(For client-independent settings)&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="1-1760100174572.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325602i970BBAE86C2B35AF/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760100174572.png" alt="hironobu_nakayama_1-1760100174572.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1044059360"&gt;4. Notes&lt;/H1&gt;&lt;P&gt;Launchpad configuration parameters: If the APPSTATE_TRANSIENT is set to false, the Application State data is stored on the server, so regular cleanup is required in terms of server load and performance. Data cleanup can be performed from Cleanup Layered Repository Files (T-cd: /UIF/CLEAN_LREP). The cleanup run requires the following parameter settings: (You can't access the cleaned up Application State data.)&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Maximum number of times read：The maximum number of accesses to the Application State data to be deleted (If set to 0, data that has never been accessed is included.)&lt;/LI&gt;&lt;LI&gt;Minimum number of days not accessed：The minimum number of days since the last access (if set to 30, data that has not been accessed in 30 days is eligible.)&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="4-1760100765266.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325606iCB2CC919D7D0AD22/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_4-1760100765266.png" alt="hironobu_nakayama_4-1760100765266.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;For more information:&amp;nbsp;SAP Help: &lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/a7b390faab1140c087b8926571e942b7/ffb437e68f464478bbd723ca144a22d7.html" target="_blank" rel="noopener noreferrer"&gt;Cleanup of Expired Application State&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-847545855"&gt;5. Summary&lt;/H1&gt;&lt;P&gt;Launchpad configuration parameters: You can set the APPSTATE_TRANSIENT to false to share the state of the app (filter criteria, sorting, pagination, etc.) between different browsers and devices. On the other hand, if the APPSTATE_TRANSIENT is set to false, the Application State data is stored on the server, which requires regular cleanup in terms of server load and performance.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="3-1760100497133.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325605iB73824D0CEDF51C9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_3-1760100497133.png" alt="hironobu_nakayama_3-1760100497133.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-651032350"&gt;6. References&lt;/H1&gt;&lt;P&gt;SAP Help: &lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/a7b390faab1140c087b8926571e942b7/6107ee41f89a43c9af0aa279fe039cca.html" target="_blank" rel="noopener noreferrer"&gt;Launchpad Configuration Parameters&lt;/A&gt;&lt;BR /&gt;SAP KBA: &lt;A href="https://me.sap.com/notes/3260742" target="_blank" rel="noopener noreferrer"&gt;3260742 - Fiori appstate is not persisted across browser sessions&lt;/A&gt;&lt;BR /&gt;SAP Help: &lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/a7b390faab1140c087b8926571e942b7/ffb437e68f464478bbd723ca144a22d7.html" target="_blank" rel="noopener noreferrer"&gt;Cleanup of Expired Application State&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/configuration-of-fiori-app-state-for-sharing/ba-p/14240470"/>
    <published>2025-10-13T12:29:01.636000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/file-upload-for-items-in-fiori-elements-list-report/ba-p/14240957</id>
    <title>File upload for items in Fiori Elements List Report</title>
    <updated>2025-10-13T12:30:19.100000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633604625"&gt;1. Introduction&lt;/H1&gt;&lt;P&gt;In this blog, we'll show you how to upload, browse, and delete files on a row-by-line basis by having each row (item) have an item like an "attachment" in the SAP Fiori Elements List Report.&lt;BR /&gt;The data source for the List Report covers OData V4 services developed using the ABAP RESTful Application Programming Model (RAP) framework, and provides information about the implementation required to achieve file upload in RAP development.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437091120"&gt;2. Key points for implementing file upload&lt;/H1&gt;&lt;P&gt;In the file upload implementation, two points are required: (1) define the table items required for file storage, and (2) provide appropriate annotations for file object storage fields and file type storage fields.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Defining the table items required to store files&lt;P&gt;Set the following three fields in the custom table (the field names are samples).&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;File object storage field (abap.rawstring(0) if file size is not specified)&lt;UL&gt;&lt;LI&gt;example：attachment: abap.rawstring(0);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Field for file name&lt;UL&gt;&lt;LI&gt;example：filename: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Field for file Type&lt;UL&gt;&lt;LI&gt;example：mimetype: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Proper Annotation of File Object and File Type Fields in CDS View&lt;UL&gt;&lt;LI&gt;File object storage field&lt;UL&gt;&lt;LI&gt;example：&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Semantics.largeObject : {
mimeType: 'Mimetype',
fileName: 'Filename',
contentDispositionPreference: #INLINE
}​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Field for file Type&lt;UL&gt;&lt;LI&gt;@Semantics.mimeType: true&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1240577615"&gt;3. Implementation sample&lt;/H1&gt;&lt;P&gt;In this blog, we will use the RAP Generator to simplify RAP development. RAP Generator is a tool that allows you to generate RAP objects such as CDS View and Behavior Definition from custom tables using only wizard settings. When using the RAP Generator to generate a RAP object, a service is generated that supports the Managed Runtime with a draft function. Therefore, the table definition must define the required fields for drafting functions and update processing. For more information about RAP Generator, please check the following SAP Help.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/generating-rap-business-service-with-generate-abap-repository-objects-wizard" target="_blank" rel="noopener noreferrer"&gt;Generating a RAP Business Service with the Generate ABAP Repository Objects Wizards&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This blog is an example implementation based on the &lt;SPAN&gt;SAP Help: &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/example-rap-business-service-generation" target="_blank" rel="noopener noreferrer"&gt;Example: OData UI Service Generation Based on a Database Table&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302229548"&gt;1. Create a package to store objects by the RAP Generator.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="0-1760157013761.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325823iFF67EF8A7D119B10/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760157013761.png" alt="hironobu_nakayama_0-1760157013761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1105716043"&gt;2. Create a custom table inside the package you created in 1.&lt;/H3&gt;&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="1-1760157057491.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325824i82D4DF7B553C56CD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_1-1760157057491.png" alt="hironobu_nakayama_1-1760157057491.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_2-1760157071905.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325825i0DDC00E4250B93BB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_2-1760157071905.png" alt="hironobu_nakayama_2-1760157071905.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Custom Table for file upload test'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zpt_file_upload {

  key client            : abap.clnt not null;
  key customer_id       : /dmo/customer_id not null;
  first_name            : /dmo/first_name;
  last_name             : /dmo/last_name;
  title                 : /dmo/title;
  street                : /dmo/street;
  postal_code           : /dmo/postal_code;
  city                  : /dmo/city;
  country_code          : land1;
  phone_number          : /dmo/phone_number;
  email_address         : /dmo/email_address;
  attachment            : abap.rawstring(0);
  filename              : abap.char(128);
  mimetype              : abap.char(128);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-909202538"&gt;3. Run the RAP Generator and follow the wizard to configure it.&lt;/H3&gt;&lt;P&gt;Right-click on the target custom table → run it with "Generate ABAP Repository Objects..."&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="3-1760157422206.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325826iC928155A8BCFAE9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_3-1760157422206.png" alt="hironobu_nakayama_3-1760157422206.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Selecting a Service Type&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="4-1760157441952.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325827iF0BB085AA624F8A4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_4-1760157441952.png" alt="hironobu_nakayama_4-1760157441952.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Selecting a package for storing generated objects&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="5-1760157464387.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325828iCA1BEBBB2C283DDC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_5-1760157464387.png" alt="hironobu_nakayama_5-1760157464387.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Review the generated object and rename or alias it as needed&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="6-1760157482071.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325829i0F2526AA45703F9D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_6-1760157482071.png" alt="hironobu_nakayama_6-1760157482071.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_7-1760157495656.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325830i9C6952F5528E2BD6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_7-1760157495656.png" alt="hironobu_nakayama_7-1760157495656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712689033"&gt;4. Add annotations for file upload to the generated data model (CDS View) and enable the CDS View.&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #CHECK
@EndUserText.label: '##GENERATED ZPT_FILE_UPLOAD'
define root view entity ZR_PT_FILE_UPLOAD
  as select from zpt_file_upload
{
  key customer_id           as CustomerID,
      first_name            as FirstName,
      last_name             as LastName,
      title                 as Title,
      street                as Street,
      postal_code           as PostalCode,
      city                  as City,
      country_code          as CountryCode,
      phone_number          as PhoneNumber,
      email_address         as EmailAddress,
      @Semantics.largeObject : {
            mimeType: 'Mimetype',
            fileName: 'Filename',
            contentDispositionPreference: #INLINE
          }
      attachment            as Attachment,
      filename              as Filename,
      @Semantics.mimeType: true
      mimetype              as Mimetype,
      @Semantics.user.createdBy: true
      local_created_by      as LocalCreatedBy,
      @Semantics.systemDateTime.createdAt: true
      local_created_at      as LocalCreatedAt,
      @Semantics.user.localInstanceLastChangedBy: true
      local_last_changed_by as LocalLastChangedBy,
      @Semantics.systemDateTime.localInstanceLastChangedAt: true
      local_last_changed_at as LocalLastChangedAt,
      @Semantics.systemDateTime.lastChangedAt: true
      last_changed_at       as LastChangedAt

}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-516175528"&gt;5. Publish the service binding.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="8-1760157523686.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325831i4F5DCB4410845F5A/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_8-1760157523686.png" alt="hironobu_nakayama_8-1760157523686.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-319662023"&gt;6. Select the entity and preview it.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="9-1760157563744.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325832iC927D9BEF8566E34/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_9-1760157563744.png" alt="hironobu_nakayama_9-1760157563744.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-123148518"&gt;7. From the "Create" button, perform data registration and file upload.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="10-1760157593131.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325833i2D10826CA744794B/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_10-1760157593131.png" alt="hironobu_nakayama_10-1760157593131.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="11-1760157628831.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325834iCBF6028E63ADA10C/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_11-1760157628831.png" alt="hironobu_nakayama_11-1760157628831.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="12-1760157647311.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325835iC7286B9648C140C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_12-1760157647311.png" alt="hironobu_nakayama_12-1760157647311.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="13-1760157663896.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325836i33B8FE451D47FCBE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_13-1760157663896.png" alt="hironobu_nakayama_13-1760157663896.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="14-1760157681275.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325837i22D13F546974AC37/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_14-1760157681275.png" alt="hironobu_nakayama_14-1760157681275.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="15-1760157702526.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325838iBABEDFAC843FB59D/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_15-1760157702526.png" alt="hironobu_nakayama_15-1760157702526.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="16-1760157721073.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325839i9A80962EABEC37F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_16-1760157721073.png" alt="hironobu_nakayama_16-1760157721073.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-438209658"&gt;4. Summary&lt;/H1&gt;&lt;P&gt;By implementing the above, using the OData V4 service using the ABAP RESTful Application Programming Model (RAP), you can use the "Attachment" for each row (item) in the SAP Fiori Elements List Report. It is possible to upload, read, and delete files on a line-by-line basis. Please take advantage of it.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-241696153"&gt;References&lt;/H1&gt;&lt;P&gt;SAPUI5 Document: &lt;A href="https://sapui5.hana.ondemand.com/#/topic/b236d32d48b74304887b3dd5163548c1" target="_blank" rel="noopener nofollow noreferrer"&gt;Enabling Stream Support&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/file-upload-for-items-in-fiori-elements-list-report/ba-p/14240957"/>
    <published>2025-10-13T12:30:19.100000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/frontend-ui5-sap-fiori-blog-posts/how-to-speed-up-ui-development-process-using-ui5-web-components/ba-p/14243159</id>
    <title>How to speed up UI development process using UI5 web components</title>
    <updated>2025-10-14T10:44:12.002000+02:00</updated>
    <author>
      <name>Roberto_Urban</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/15636</uri>
    </author>
    <content>&lt;P&gt;In the past few weeks I was asked to build a React application to be deployed on BTP. The application needs to be integrated with authentication and destinations to connect to a backend OData API.&lt;/P&gt;&lt;P&gt;I started with the templates available in Build Code to create an application skeleton with these capabilities, and it worked fine. The app communicated via a destination to an OData service deployed in my BTP subaccount; it required authentication. So, at first glance, my job was done.&lt;/P&gt;&lt;P&gt;Then I decided to change the app layout and began modifying the generated components. At that point I realized testing the changes was not straightforward. Running the app locally was possible, but to get the latest changes I had to rebuild the app completely, and that procedure takes time (almost 1 minute).&lt;/P&gt;&lt;P&gt;I wanted a leaner workflow to make changes and test them locally without a full rebuild every time.&lt;/P&gt;&lt;P&gt;Since I’m not an expert in React development, I asked a colleague, &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/33824"&gt;@rpagni&lt;/a&gt;, for help. He has solid experience with the framework and said, “I’ve faced this problem before — let me show you how I solved it.” His idea was great: use a modern React build tool for faster builds and use the app router to handle both dev and prod versions. That way the app router can easily integrate authentication and backend communication via destinations.&lt;/P&gt;&lt;P&gt;Looking for examples I found this tutorial: &lt;A class="" href="https://developers.sap.com/mission.react-spa.html" target="_new" rel="noopener noreferrer"&gt;https://developers.sap.com/mission.react-spa.html&lt;/A&gt;. It uses React and Vite, but unfortunately it doesn’t connect to a backend service and isn’t integrated with a multitarget application (MTA).&lt;/P&gt;&lt;P&gt;So, together with &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/33824"&gt;@rpagni&lt;/a&gt; we decided to document the solution step by step to share our experience. We described every aspect of what we did and explained the choices we made.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="steps-to-create-a-react-application-deployable-in-btp-and-using-uaa-and-destination-services" id="toc-hId-1633686312"&gt;Steps to create a React application deployable in BTP and using UAA and Destination services&lt;/H1&gt;&lt;H2 id="create-basic-multitarget-application" id="toc-hId-1566255526"&gt;Create Basic Multitarget Application&lt;/H2&gt;&lt;P&gt;Open the template wizard and start creating a Multitarget Application project. Assing to the project your preferred name.&lt;/P&gt;&lt;H2 id="create-an-approuter-module" id="toc-hId-1369742021"&gt;Create an Approuter module&lt;/H2&gt;&lt;P&gt;In the MTA project create an app router module. To do that:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;right click on the mta.yaml file and select &lt;STRONG&gt;Create MTA module from Template&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;select Approuter Configuration module&lt;/LI&gt;&lt;LI&gt;configure the following screen with these values:&lt;UL&gt;&lt;LI&gt;Application Runtime: Standalone Approuter&lt;/LI&gt;&lt;LI&gt;Add Authentication: Yes&lt;/LI&gt;&lt;LI&gt;Plan to add UI: Yes&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;if you want to change the app router module name, change the name to the created folder and change, in the mta.yaml file, any reference to the previous folder name with the new name assigned&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="change-xs-security-json-to-allow-the-local-app-router-to-manage-authentication" id="toc-hId-1302311235"&gt;Change xs-security.json to allow the local app-router to manage authentication&lt;/H3&gt;&lt;P&gt;When you run the application, either in dev mode or in production mode, it could happen to get the error:&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;OpenID provider cannot process the request because the redirect_uri does not match the configuration. Please contact your system administrator.&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;This is an error related to the authentication process. The app router redirects the user session to the authetication service and this raises an error. The reason is about the fact that the expected redirect URI, provided as parameter to the authentication service, it is not part of the allowed redirect URIs. To solve this issue, add to the xs-security.json the following allowed URIs patterns. Add the following object property to the configuration (adapt the patterns to your specific subaccount URLs):&lt;/P&gt;&lt;PRE&gt;&lt;CODE&gt;,
  &lt;SPAN class=""&gt;"oauth2-configuration"&lt;/SPAN&gt;: {
      &lt;SPAN class=""&gt;"redirect-uris"&lt;/SPAN&gt;: [
          &lt;SPAN class=""&gt;"https://*.cfapps.eu10-004.hana.ondemand.com/login/callback"&lt;/SPAN&gt;,
          &lt;SPAN class=""&gt;"https://*.cfapps.eu10.hana.ondemand.com/login/callback"&lt;/SPAN&gt;,
          &lt;SPAN class=""&gt;"https://*.applicationstudio.cloud.sap/login/callback"&lt;/SPAN&gt;
      ]
  }&lt;/CODE&gt;&lt;/PRE&gt;&lt;H2 id="crate-a-react-vite-project" id="toc-hId-976715011"&gt;Crate a React Vite project&lt;/H2&gt;&lt;P&gt;Create a React project with your preferred build tool, in this case we use Vite template &lt;A href="https://developers.sap.com/tutorials/ui5-webcomponents-react-introduction..html" target="_blank" rel="noopener noreferrer"&gt;see an example here.&lt;/A&gt; This template will create a React project using the SAPUI5 web components&lt;/P&gt;&lt;P&gt;Open terminal, navigate to the project root folder and run the commands (events-app is the folder name):&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;npx degit UI5/webcomponents-react/templates/vite-ts#main events-app&lt;/P&gt;&lt;P&gt;cd events-app&lt;/P&gt;&lt;P&gt;npm i&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;H3 id="properly-setup-vite-project" id="toc-hId-909284225"&gt;Properly setup Vite project&lt;/H3&gt;&lt;P&gt;In the Vite project perform these activities:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;change the vite.config.ts with this content:&lt;PRE&gt;&lt;CODE&gt;import { defineConfig } from "vite"; import react from "@vitejs/plugin-react"; import path from "path";
&lt;SPAN class=""&gt;export&lt;/SPAN&gt; &lt;SPAN class=""&gt;default&lt;/SPAN&gt; &lt;SPAN class=""&gt;defineConfig&lt;/SPAN&gt;({ &lt;BR /&gt;&lt;SPAN class=""&gt;  plugins&lt;/SPAN&gt;: [&lt;SPAN class=""&gt;react&lt;/SPAN&gt;()], &lt;BR /&gt;  server: { &lt;BR /&gt;    hmr: { port: &lt;SPAN class=""&gt;5174&lt;/SPAN&gt;, }, &lt;BR /&gt;  }, &lt;BR /&gt;&lt;SPAN class=""&gt;  build&lt;/SPAN&gt;: { &lt;BR /&gt;&lt;SPAN class=""&gt;    outDir&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"../test-react-approuter/dist"&lt;/SPAN&gt;, &lt;BR /&gt;    emptyOutDir: true, &lt;BR /&gt;  }, &lt;BR /&gt;&lt;SPAN class=""&gt;  resolve&lt;/SPAN&gt;: { &lt;BR /&gt;&lt;SPAN class=""&gt;    alias&lt;/SPAN&gt;: { &lt;BR /&gt;&lt;SPAN class=""&gt;     "@"&lt;/SPAN&gt;: path.&lt;SPAN class=""&gt;resolve&lt;/SPAN&gt;(__dirname, &lt;SPAN class=""&gt;"./src"&lt;/SPAN&gt;), &lt;BR /&gt;    }, &lt;BR /&gt;  }, &lt;BR /&gt;}); &lt;/CODE&gt;&lt;/PRE&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;purpose of this code is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;setup a fixed port (5174) for the preview service&lt;/LI&gt;&lt;LI&gt;define the build directory: once the project is built, this is the place where to store the built files. This config defines to store the /dist folder within the app router folder, this is needed later on when the routes are defined in the xs-app.json&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;set an alias on the subfolders contained within the react project source folder&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;import the path library typing the command&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;npm i path -s&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;in the tsconfig.json add, in the compilerOptions ojects, the 2 properties&lt;/P&gt;&lt;PRE&gt;&lt;CODE&gt; &lt;SPAN class=""&gt;"baseUrl"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"."&lt;/SPAN&gt;,
 &lt;SPAN class=""&gt;"paths"&lt;/SPAN&gt;: {
     &lt;SPAN class=""&gt;"@/*"&lt;/SPAN&gt;: [&lt;SPAN class=""&gt;"./src/*"&lt;/SPAN&gt;]
 }&lt;/CODE&gt;&lt;/PRE&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="edit-mta-yaml-file" id="toc-hId-583688001"&gt;Edit mta.yaml file&lt;/H2&gt;&lt;P&gt;The purpose of this edting is to add a resource declaration to define a destination service instance, once the mta will be deployed and add a reference to this service to the app router module. The need of this setting is to allow the app router to access the destination service and connect, via a destination reported withint the xs-app.json, to the backend service needed to consume the corresponding APIs (in my case the APIs managing events data). For doing that proceed as defined here:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;in the resources section (end of the file) add a resource defining a destination service instance. For example:&lt;PRE&gt;&lt;CODE&gt;&lt;SPAN class=""&gt; - name:&lt;/SPAN&gt; dest_events-react-app
&lt;SPAN class=""&gt; type:&lt;/SPAN&gt; org.cloudfoundry.managed-service
&lt;SPAN class=""&gt; parameters:&lt;/SPAN&gt;
&lt;SPAN class=""&gt;     service:&lt;/SPAN&gt; destination
&lt;SPAN class=""&gt;     service-name:&lt;/SPAN&gt; dest_events-react-app
&lt;SPAN class=""&gt;     service-plan:&lt;/SPAN&gt; lite&lt;/CODE&gt;&lt;/PRE&gt;&lt;/LI&gt;&lt;LI&gt;in the app router module definition, add a reference to such a resource in the requires section:&lt;PRE&gt;&lt;CODE&gt; requires:
   -&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;name:&lt;/SPAN&gt; events-react-app_html_repo_runtime&lt;/SPAN&gt; &lt;BR /&gt;   -&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;name:&lt;/SPAN&gt; uaa_events-react-app&lt;/SPAN&gt; &lt;BR /&gt;   -&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;name:&lt;/SPAN&gt; dest_events-react-app&lt;/SPAN&gt;
&lt;/CODE&gt;&lt;/PRE&gt;&lt;/LI&gt;&lt;LI&gt;remove the deployer module: having selected the &lt;STRONG&gt;standalone app router&lt;/STRONG&gt; as application runtime, the wizard creates.&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-516257215"&gt;Build and deploy the project&lt;/H3&gt;&lt;P&gt;With this activity the aim is to deploy the mtar file corresponding to this project. The goal is not to have a productive version of the app, but simply to let the deployment process to istantiate the declared xsuaa and destination services. Later you will download the corresponding env data realted to them.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;right click on the mta.yaml file and select the build command&lt;/LI&gt;&lt;LI&gt;once the build is finished, find the generated mtar file, right click on it and select to deploy (be sure to be authenticated to any valid BTP subaccount and space with some available runtime resources assigned).&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Once deployed, check in the space applications to find an app named as the app router module.&lt;/P&gt;&lt;H2 id="setup-the-app-router-module-to-manage-both-the-productive-and-the-development-app-execution" id="toc-hId-190660991"&gt;Setup the app router module to manage both the productive and the development app execution&lt;/H2&gt;&lt;P&gt;The goal of this step is to properly structure the app router module in order to let the user both test locally the application without any need of code rebuild and having the application working productively, as well.&lt;/P&gt;&lt;H3 id="create-a-dev-folder-in-the-module" id="toc-hId-123230205"&gt;Create a dev folder in the module&lt;/H3&gt;&lt;P&gt;The purpose of this folder is to define a developer configuration for the app router. The content of this folder is used to serve the application during the development phase and not require any application build process.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;create a folder called (for example) &lt;STRONG&gt;dev&lt;/STRONG&gt; in the &lt;STRONG&gt;app-approuter&lt;/STRONG&gt; folder&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;open the &lt;STRONG&gt;package.json&lt;/STRONG&gt; and change the script &lt;STRONG&gt;start-local&lt;/STRONG&gt; with this command:&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;node node_modules/@sap/approuter/approuter.js --workingDir dev&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;this commanda runs the app router with the configuration defined in the next steps in folder &lt;STRONG&gt;dev&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;move to folder &lt;STRONG&gt;dev&lt;/STRONG&gt; and copy and paste the &lt;STRONG&gt;xs-app.json&lt;/STRONG&gt; file, available in the &lt;STRONG&gt;app-approuter&lt;/STRONG&gt; folder&lt;/LI&gt;&lt;LI&gt;create a &lt;STRONG&gt;default-env.json&lt;/STRONG&gt; file in the &lt;STRONG&gt;dev&lt;/STRONG&gt; folder. This file will be used by the @sap/approuter library to connect to the xsuaa and destination services available in BTP. In this way, during the development phase, the developer can test the authetication/authorization (for example checking whether the assigned scopes are working properly) and the destination connectivity as per the productive version of the app. To create the file:&lt;OL&gt;&lt;LI&gt;open BTP cockpit and navigate to the space applications page. Here identify the deployed app router application and click on it&lt;/LI&gt;&lt;LI&gt;in the menu on the left side click on the item &lt;STRONG&gt;Environment Variables&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;copy the whole content in the area called &lt;STRONG&gt;System Provided&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;paste the content into the file &lt;STRONG&gt;default-env.json&lt;/STRONG&gt; then perform these actions:&lt;UL&gt;&lt;LI&gt;delete the whole json object containing the property &lt;STRONG&gt;VCAP_APPLICATION&lt;/STRONG&gt;, just keep the one containing the &lt;STRONG&gt;VCAP_SERVICES&lt;/STRONG&gt; property&lt;/LI&gt;&lt;LI&gt;in the object VCAP_SERVICES delete the following properties: &lt;STRONG&gt;destination&lt;/STRONG&gt; and &lt;STRONG&gt;html5-apps-repo&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;add a property named &lt;STRONG&gt;destinations&lt;/STRONG&gt; at the same level of the property &lt;STRONG&gt;VCAP_SERVICES&lt;/STRONG&gt;. Its value must be:&lt;PRE&gt;&lt;CODE&gt;  &lt;SPAN class=""&gt;"destinations"&lt;/SPAN&gt;:[
      {
          &lt;SPAN class=""&gt;"name"&lt;/SPAN&gt;:&lt;SPAN class=""&gt;"EventsBooking-app-srv2"&lt;/SPAN&gt;,
          &lt;SPAN class=""&gt;"url"&lt;/SPAN&gt;:&lt;SPAN class=""&gt;"https://EventsBooking-app-srv2.dest"&lt;/SPAN&gt;,
          &lt;SPAN class=""&gt;"proxyHost"&lt;/SPAN&gt;:&lt;SPAN class=""&gt;"http://127.0.0.1"&lt;/SPAN&gt;,
          &lt;SPAN class=""&gt;"proxyPort"&lt;/SPAN&gt;:&lt;SPAN class=""&gt;"8887"&lt;/SPAN&gt;
      },{
          &lt;SPAN class=""&gt;"name"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"vite-dev-server"&lt;/SPAN&gt;,
          &lt;SPAN class=""&gt;"url"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"http://localhost:5174"&lt;/SPAN&gt;
      }
  ]&lt;/CODE&gt;&lt;/PRE&gt;In this section you have to add all the destionations the react app will use to get data out of external APIs. In the example above there are declared 2 destinations:&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;EventsBooking-app-srv2&lt;/STRONG&gt;: it is the BTP destination targeting the Events Management APIs, will be used by the app to get/store events data. Pay attention to the url parameter, it declares to use the URL defined at BTP destination level, so you don't need to hard code it. Leave the proxy parameters as in the example. These provide to BAS the way to communicate with BTP&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;vite-dev-server&lt;/STRONG&gt;: it is the destination targeting the URL of the local running react app. The port reported in the URL is the one defined in the file &lt;STRONG&gt;vite.config.ts&lt;/STRONG&gt;. This destination let the local app router to forward the local react app calls to the running vite preview execution&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Adjust the &lt;STRONG&gt;xs-app.json&lt;/STRONG&gt; file in the &lt;STRONG&gt;dev&lt;/STRONG&gt; folder: this activity has the aim to define all the local app router configurations, like for example the welcome page, the routes etc. In this case the configuration is as follow:&lt;/P&gt;&lt;PRE&gt;&lt;CODE&gt; {
     &lt;SPAN class=""&gt;"welcomeFile"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"index.html"&lt;/SPAN&gt;,
     &lt;SPAN class=""&gt;"authenticationMethod"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"route"&lt;/SPAN&gt;,
     &lt;SPAN class=""&gt;"routes"&lt;/SPAN&gt;: [
         {
             &lt;SPAN class=""&gt;"authenticationType"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"xsuaa"&lt;/SPAN&gt;,
             &lt;SPAN class=""&gt;"csrfProtection"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;false&lt;/SPAN&gt;,
             &lt;SPAN class=""&gt;"source"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"^/EventsBooking-app-srv2/(.*)$"&lt;/SPAN&gt;,
             &lt;SPAN class=""&gt;"destination"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"EventsBooking-app-srv2"&lt;/SPAN&gt;,
             &lt;SPAN class=""&gt;"target"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"$1"&lt;/SPAN&gt;
         },
         {
             &lt;SPAN class=""&gt;"source"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"^/user-api(.*)"&lt;/SPAN&gt;,
             &lt;SPAN class=""&gt;"target"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"$1"&lt;/SPAN&gt;,
             &lt;SPAN class=""&gt;"service"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"sap-approuter-userapi"&lt;/SPAN&gt;
         },
         {
             &lt;SPAN class=""&gt;"source"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"^(.*)$"&lt;/SPAN&gt;,
             &lt;SPAN class=""&gt;"target"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"/$1"&lt;/SPAN&gt;,
             &lt;SPAN class=""&gt;"destination"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"vite-dev-server"&lt;/SPAN&gt;,
             &lt;SPAN class=""&gt;"authenticationType"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"none"&lt;/SPAN&gt;
         }
     ],
     &lt;SPAN class=""&gt;"compression"&lt;/SPAN&gt;: {
         &lt;SPAN class=""&gt;"enabled"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;false&lt;/SPAN&gt;
     }
 }&lt;/CODE&gt;&lt;/PRE&gt;&lt;P&gt;the most important part is the routes array. In this array you have to define all the routes the local app router must use. Rember that the routes are processed from the top (array element 0) to the bottom (array element N). The first that matches is the one executed. In this case the meaning of the routes are:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;forward to the destinantion &lt;STRONG&gt;EventsBooking-app-srv2&lt;/STRONG&gt; all the app calls to URL path starting with the prefix &lt;STRONG&gt;/EventsBooking-app-srv2&lt;/STRONG&gt;. All these calls are defined in the app as the once to interact with the events managment OData service&lt;/LI&gt;&lt;LI&gt;forward all the calls with URL path starting with &lt;STRONG&gt;/user-api&lt;/STRONG&gt; to the standard &lt;STRONG&gt;sap-approuter-userapi&lt;/STRONG&gt; user api service. This service provides data about current logged in user, like user name and authorization scopes assigned &lt;A href="https://www.npmjs.com/package/@sap/approuter#user-api-service" target="_blank" rel="noopener nofollow noreferrer"&gt;see here for more info&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;this route forwards all the local api calls to the vite preview service running. Each and every time the react app needs to donwload an asset, a css, js, etc files these requests are routed to the preview service. this is the route that makes the magic happens, that allows the developer to test the changes without fully rebuilding the application.&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="adjust-the-xs-app-json-for-the-productive-usage" id="toc-hId--148514669"&gt;Adjust the xs-app.json for the productive usage&lt;/H3&gt;&lt;P&gt;In the previous paragraph you setup the environment for the development phase, but once the app will be built and deployed this doesn't served the productive code. For this reason it is needed to setup the xs-app.json in the app router folder module.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;open the &lt;STRONG&gt;xs-app.json&lt;/STRONG&gt; file contained in the root folder of the app router module.&lt;/LI&gt;&lt;LI&gt;setup its content as expected for the prodcutive usage. In this example its content is:&lt;PRE&gt;&lt;CODE&gt;{
 &lt;SPAN class=""&gt;"authenticationMethod"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"route"&lt;/SPAN&gt;,
 &lt;SPAN class=""&gt;"welcomeFile"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"index.html"&lt;/SPAN&gt;,
 &lt;SPAN class=""&gt;"routes"&lt;/SPAN&gt;: [
     {
         &lt;SPAN class=""&gt;"authenticationType"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"xsuaa"&lt;/SPAN&gt;,
         &lt;SPAN class=""&gt;"csrfProtection"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;false&lt;/SPAN&gt;,
         &lt;SPAN class=""&gt;"source"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"^/EventsBooking-app-srv2/(.*)$"&lt;/SPAN&gt;,
         &lt;SPAN class=""&gt;"destination"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"EventsBooking-app-srv2"&lt;/SPAN&gt;,
         &lt;SPAN class=""&gt;"target"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"$1"&lt;/SPAN&gt;
     },
     {
         &lt;SPAN class=""&gt;"source"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"^/user-api(.*)"&lt;/SPAN&gt;,
         &lt;SPAN class=""&gt;"target"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"$1"&lt;/SPAN&gt;,
         &lt;SPAN class=""&gt;"service"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"sap-approuter-userapi"&lt;/SPAN&gt;
     },
     {
         &lt;SPAN class=""&gt;"source"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"^(.*)$"&lt;/SPAN&gt;,
         &lt;SPAN class=""&gt;"target"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"$1"&lt;/SPAN&gt;,
         &lt;SPAN class=""&gt;"localDir"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"dist"&lt;/SPAN&gt;,
         &lt;SPAN class=""&gt;"cacheControl"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;"no-cache, no-store, must-revalidate"&lt;/SPAN&gt;
     }
 ],
 &lt;SPAN class=""&gt;"compression"&lt;/SPAN&gt;: {
     &lt;SPAN class=""&gt;"enabled"&lt;/SPAN&gt;: &lt;SPAN class=""&gt;false&lt;/SPAN&gt;
 }
}&lt;/CODE&gt;&lt;/PRE&gt;the difference with the &lt;STRONG&gt;dev&lt;/STRONG&gt; version of the same file is in the third route. This route says to the app router to route all the react app calls, which not have the prefixes defined by the first two ones, to the local folder called &lt;STRONG&gt;dist&lt;/STRONG&gt;. This is the folder, set in the &lt;STRONG&gt;vite.config.ts&lt;/STRONG&gt;, where the full build process will store the output of the build procedure. In other words, it is the folder containing the productive version of the react app code.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Once the app will be deployed and running, every local app call for downloading assets, files (like css, js, etc) will be forwarded to the content of that folder.&lt;/P&gt;&lt;H2 id="optimize-the-mta-building-procedure" id="toc-hId--51625167"&gt;Optimize the mta building procedure&lt;/H2&gt;&lt;P&gt;To optimize the mta building procedure proceed as described below:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;create a script in the package.json contained in the app router folder with this name and command:&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;"build": "cd ../events-app &amp;amp;&amp;amp; npm run build"&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;this command allows to trigger che building of the react app as soon as the app router module build is triggered (see next paragraphs). The script move the context to the react app folder and run the build script contained there&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;change the mta.yaml file as following:&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;in the app router module append the following configuration:&lt;/P&gt;&lt;PRE&gt;&lt;CODE&gt; &lt;SPAN class=""&gt;build-parameters&lt;/SPAN&gt;:
     &lt;SPAN class=""&gt;ignore&lt;/SPAN&gt;:
     - node_modules
     &lt;SPAN class=""&gt;builder&lt;/SPAN&gt;: custom
     &lt;SPAN class=""&gt;commands&lt;/SPAN&gt;:
     - npm run build&lt;/CODE&gt;&lt;/PRE&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;this configuration avoid to include, in the final mtar file, any node_modules folder and, before build the module, runs the script &lt;STRONG&gt;build&lt;/STRONG&gt; created beforehand to trigger the vite build command for the react app&lt;/P&gt;&lt;H2 id="test-the-app-in-dev-mode" id="toc-hId--248138672"&gt;Test the app in dev mode&lt;/H2&gt;&lt;P&gt;To test the app in dev mode proceed as following:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;open a terminal window&lt;/LI&gt;&lt;LI&gt;move to the react app folder&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;run the command&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;npm run dev&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;this command starts the application in dev mode on port 5174, as per app configuration. No need to rebuild the app the see the changes&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;open a new terminal window and move in the approuter folder&lt;/LI&gt;&lt;LI&gt;run the script &lt;STRONG&gt;start-local&lt;/STRONG&gt;, this run the app router using the config stored in the &lt;STRONG&gt;dev&lt;/STRONG&gt; folder.&lt;/LI&gt;&lt;LI&gt;run a preview of the app on the port 5000&lt;/LI&gt;&lt;LI&gt;make any change in the code, refresh the app preview and check whether the change is replicated properly&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId--444652177"&gt;Test the app in productive mode&lt;/H2&gt;&lt;P&gt;To test the app in productive mode, simply bluid the mta.yaml file and deploy the generated mtar.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;ATTENTION&lt;/STRONG&gt;: if you deploy on the same space where you perfomed the first deployment, you need to get again the environment variables of the app, copy just the property &lt;STRONG&gt;xsuaa&lt;/STRONG&gt; and used it to replace the same property in the &lt;STRONG&gt;defaul-env.json&lt;/STRONG&gt; file. Remind to stop and restart the local running app router to make the change available&lt;/P&gt;&lt;P&gt;If you don't want to overwrite the value of the property &lt;STRONG&gt;xsuaa&lt;/STRONG&gt;, deploy the app in a different space of a different account.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/frontend-ui5-sap-fiori-blog-posts/how-to-speed-up-ui-development-process-using-ui5-web-components/ba-p/14243159"/>
    <published>2025-10-14T10:44:12.002000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-enable-batch-input-in-fiori-inside-the-system-s-services/ba-p/14240261</id>
    <title>How to Enable Batch Input in Fiori inside the System’s Services</title>
    <updated>2025-10-15T09:43:08.990000+02:00</updated>
    <author>
      <name>soumiya_suresh2</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1655733</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In this Blog, I will explain the complete process of enabling Batch input option inside the system’s Services.&lt;/P&gt;&lt;H2 id="toc-hId-1762680642"&gt;Why is Batch Input needed? &amp;nbsp;What are the Features of Batch Input?&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;A&amp;nbsp;&lt;STRONG&gt;Batch Input Session&lt;/STRONG&gt;&amp;nbsp;in SAP is a method used to automate data entry by recording and processing transactions. It involves creating a session that contains a sequence of steps to execute transactions, which can then be processed in either foreground or background mode.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;Features&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Synchronous Processing in database update.&lt;/LI&gt;&lt;LI&gt;Transfer data for more than one transaction.&lt;/LI&gt;&lt;LI&gt;Batch input processing log will be generated.&lt;/LI&gt;&lt;LI&gt;During processing, no transaction is started until the previous transaction has been written to the database.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1566167137"&gt;How to add this Batch input option in Fiori Screen?&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&amp;nbsp;To activate the Batch input option, you need to add the authorization object inside the respective role which is&amp;nbsp; S_Develop.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Picture...png" style="width: 854px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325506i8BB6A3EE5033095D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Picture...png" alt="Picture...png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1369653632"&gt;How to add this object in Fiori?&lt;/H2&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Step 1: Navigate to &lt;STRONG&gt;pfcg&lt;/STRONG&gt; Tcode&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Step 2: Find the Exact role&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Step 3:&amp;nbsp; Navigate to authorization tab, Find the &lt;STRONG&gt;S_develop&lt;/STRONG&gt; tcode using Ctrl+F or else use&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Manually add option&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Step 4: Maintain the Required Authorization values&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;OBJTYPE = DEBUG&lt;/LI&gt;&lt;LI&gt;OBJNAME = * (or restrict to specific programs)&lt;/LI&gt;&lt;LI&gt;ACTIVITY = 03 or 02 (Access to Display or Access to Change)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Step 5: Save and Generate the Authorization profile.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Step 6: Assign the role to user using the SU01 tcode.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="authorization1.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325504i95CF1C134F307BDA/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="authorization1.png" alt="authorization1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1173140127"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-976626622"&gt;&lt;STRONG&gt;Result:&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Once refresh the Fiori Screen, the system will automatically add Batch Input under System-Services- Batch Input&lt;/P&gt;&lt;P&gt;Note:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Avoid Giving Broad Access (*) in production for S_Develop object.&lt;/LI&gt;&lt;LI&gt;Always validate with your Security team before adding authorization objects.&lt;/LI&gt;&lt;LI&gt;Provide only necessary activities alone (eg. Display)&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="pic0.1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325503iED0ECA897B393E83/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="pic0.1.png" alt="pic0.1.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-left lia-indent-padding-left-30px" style="text-align : left; padding-left : 30px;"&gt;With these steps Batch input is enabled under the system’s services and accessible in Fiori Screen.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-enable-batch-input-in-fiori-inside-the-system-s-services/ba-p/14240261"/>
    <published>2025-10-15T09:43:08.990000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/adaptation-project-how-to-make-filter-items-mandatory-for-sap-standard/ba-p/14241736</id>
    <title>Adaptation Project: How to make filter items mandatory for SAP standard Fiori apps</title>
    <updated>2025-10-15T18:00:00.032000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633632431"&gt;1. Introduction&lt;/H1&gt;&lt;P&gt;SAP standard Fiori apps are used as important tools to support business processes using S/4HANA, and many apps are available that use the implementation technology of the Fiori Elements framework. However, to fully address the company's specific business requirements and specific user needs, it may be necessary to customize the standard app.&lt;BR /&gt;Several techniques are offered for Fiori app customization, including metadata extension and UI adaptation. However, if the object to be extended does not support metadata extension, or there may be business requirements that cannot be met by UI adaptation changes. In such cases, a more flexible UI extension method is the Adaptation Project (Developer Adaptation). With Adaptation Project, you can extend standard SAP Fiori elements applications without modification. This means that new application variants can be created and customized to meet unique requirements without modifying the original application.&lt;/P&gt;&lt;P&gt;Adaptation Project: how to change the mandatory input filter in SAP standard Fiori AppAdaptation Project: how to change mandatory input filter in SAP standard Fiori App&amp;gt;In this blog, we will create an Adaptation Project using SAP Business Application Studio to create an Adaptation Project for the requirements that filter field (Plant) defined as mandatory in the SAP Standard Fiori app (&lt;SPAN&gt;&lt;A href="https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/#/detail/Apps('F0842A')/S27OP" target="_blank" rel="noopener nofollow noreferrer"&gt;F0842A: Manage Purchase Orders&lt;/A&gt;&lt;/SPAN&gt;). We'll walk you through the specific steps to add Annotation to customize your standard app.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437118926"&gt;2. Implementation method&lt;/H1&gt;&lt;H3 id="toc-hId-1498770859"&gt;1. Access SAP Business Application Studio and open the dev space of SAP Fiori.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_0-1760331133373.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326266iA151DD70BF922A56/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760331133373.png" alt="hironobu_nakayama_0-1760331133373.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302257354"&gt;2. Open Folder to access the Projects folder (/home/user/projects/).&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760331133375.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326265iC32F0A4B652EC797/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760331133375.png" alt="hironobu_nakayama_1-1760331133375.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_2-1760331133375.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326264iCB9E2B79A42C8FD5/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_2-1760331133375.png" alt="hironobu_nakayama_2-1760331133375.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1105743849"&gt;3. Open New Project from Template from file and select SAPUI5 Adaptation Project.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_3-1760331133376.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326267i869AF48765B6976E/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_3-1760331133376.png" alt="hironobu_nakayama_3-1760331133376.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_4-1760331133380.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326268i053CB956C29E02F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_4-1760331133380.png" alt="hironobu_nakayama_4-1760331133380.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-909230344"&gt;4. In System and Application Selection, enter the following, and then click Next to proceed with the settings.&lt;/H3&gt;&lt;P&gt;System: Destination to S/4HANA for the extended application&lt;BR /&gt;Application: Extended apps (for this blog, Manage Purchase Orders)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_5-1760331133382.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326269i8690E3F9EA24DB55/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_5-1760331133382.png" alt="hironobu_nakayama_5-1760331133382.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712716839"&gt;5. Enter the following information in Project Attributes:&lt;/H3&gt;&lt;P&gt;Project Name: Any project name&lt;BR /&gt;Application Title: Any app title&lt;BR /&gt;Namespace: Auto-generated based on the project name you enter (can be changed if necessary).&lt;BR /&gt;Project Folder Path:P auto-populates the path to the rojects folder (you can change it if needed).&lt;BR /&gt;SAPUI5 Version: Auto-populates the latest SAPUI5 version (here, you can't change it. If you want to change to the SAPUI5 version installed on S/4HANA, you will need to change the ui5.yaml file after the project is generated. For more information, see SAP KBA:&lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/3095848" target="_blank" rel="noopener noreferrer"&gt;3095848 - How to change SAPUI5 version if problems occur for Adaptation Project in BAS&lt;/A&gt;&lt;/SPAN&gt;.&lt;BR /&gt;Add Deployment Configuration: Yes&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_29-1760332189174.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326296i731558E067D10508/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_29-1760332189174.png" alt="hironobu_nakayama_29-1760332189174.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-516203334"&gt;6. After entering the following information in the Deployment Configuration, click the Finish button to generate the project.&lt;/H3&gt;&lt;P&gt;Destination: Auto-populates the Destination selected in System and Application Selection (you can change it if necessary).&lt;BR /&gt;Select How You Want to Enter the Package: Choose either Enter Manually / Choose from Existing to select the package for deployment.&lt;BR /&gt;Package: Select the package for deployment (screenshot shows a local package as an example).&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_30-1760332250588.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326297i20C1A0A44E96C413/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_30-1760332250588.png" alt="hironobu_nakayama_30-1760332250588.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_31-1760332287074.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326298i69E8607D560A1856/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_31-1760332287074.png" alt="hironobu_nakayama_31-1760332287074.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-319689829"&gt;7. Right-click on the generated project to generate an annotation file from Add Local Annotation File (also available from the Add Local Annotation File button in Application Information).&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_32-1760332319780.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326299iC92EB2678ABB9FAC/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_32-1760332319780.png" alt="hironobu_nakayama_32-1760332319780.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_33-1760332350642.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326300i6B15A6AB47CB5407/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_33-1760332350642.png" alt="hironobu_nakayama_33-1760332350642.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-123176324"&gt;8. In the Add Local Annotation File, enter the following information:&lt;/H3&gt;&lt;P&gt;Target OData Service: mainService (Autofill)&lt;BR /&gt;Annotation XML: Create local annotation file from template (if creating a new one) / Select annotation file from workspace (When referencing an existing annotation file)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_34-1760332378102.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326301iD296A29A1AE462B3/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_34-1760332378102.png" alt="hironobu_nakayama_34-1760332378102.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--148568550"&gt;9. A new annotation file will be created under webapp/changes/annotations in the project folder, so it will be opened.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_35-1760332410027.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326303i4DFE4D10BAEC725B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_35-1760332410027.png" alt="hironobu_nakayama_35-1760332410027.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--345082055"&gt;10. Add the following annotation implementation to the annotation file (details of the implementation are described in the next section):&lt;/H3&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;edmx:Edmx xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx" Version="4.0"&amp;gt;
    &amp;lt;edmx:Reference Uri="https://sap.github.io/odata-vocabularies/vocabularies/Common.xml"&amp;gt;
        &amp;lt;edmx:Include Namespace="com.sap.vocabularies.Common.v1" Alias="Common"/&amp;gt;
    &amp;lt;/edmx:Reference&amp;gt;
    &amp;lt;edmx:Reference Uri="https://sap.github.io/odata-vocabularies/vocabularies/UI.xml"&amp;gt;
        &amp;lt;edmx:Include Namespace="com.sap.vocabularies.UI.v1" Alias="UI"/&amp;gt;
    &amp;lt;/edmx:Reference&amp;gt;
    &amp;lt;edmx:Reference Uri="https://sap.github.io/odata-vocabularies/vocabularies/Communication.xml"&amp;gt;
        &amp;lt;edmx:Include Namespace="com.sap.vocabularies.Communication.v1" Alias="Communication"/&amp;gt;
    &amp;lt;/edmx:Reference&amp;gt;
    &amp;lt;edmx:Reference Uri="/sap/opu/odata/sap/MM_PUR_PO_MAINT_V2_SRV/$metadata"&amp;gt;
        &amp;lt;edmx:Include Namespace="MM_PUR_PO_MAINT_V2_SRV"/&amp;gt;
    &amp;lt;/edmx:Reference&amp;gt;
    &amp;lt;edmx:Reference Uri="/sap/opu/odata/iwfnd/catalogservice;v=2/Vocabularies(TechnicalName='%2FIWBEP%2FVOC_CAPABILITIES',Version='0001',SAP__Origin='')/$value"&amp;gt;
          &amp;lt;edmx:Include Namespace="Org.OData.Capabilities.V1" Alias="Capabilities"/&amp;gt;
    &amp;lt;/edmx:Reference&amp;gt;
    &amp;lt;edmx:DataServices&amp;gt;
        &amp;lt;Schema xmlns="http://docs.oasis-open.org/odata/ns/edm" Namespace="local_1760320506713"&amp;gt;
            &amp;lt;Annotations Target="MM_PUR_PO_MAINT_V2_SRV.MM_PUR_PO_MAINT_V2_SRV_Entities/C_PurchaseOrderTP"&amp;gt; 
                &amp;lt;Annotation Term="Capabilities.FilterRestrictions"&amp;gt; 
                    &amp;lt;Record&amp;gt; 
                        &amp;lt;PropertyValue Property="RequiresFilter" Bool="true"/&amp;gt; 
                        &amp;lt;PropertyValue Property="RequiredProperties"&amp;gt; 
                            &amp;lt;Collection&amp;gt; 
                                &amp;lt;PropertyPath&amp;gt;Plant&amp;lt;/PropertyPath&amp;gt; 
                            &amp;lt;/Collection&amp;gt; 
                        &amp;lt;/PropertyValue&amp;gt; 
                    &amp;lt;/Record&amp;gt; 
                &amp;lt;/Annotation&amp;gt; 
            &amp;lt;/Annotations&amp;gt;
        &amp;lt;/Schema&amp;gt;
    &amp;lt;/edmx:DataServices&amp;gt;
&amp;lt;/edmx:Edmx&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_36-1760332433315.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326304i503E759801C2F9AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_36-1760332433315.png" alt="hironobu_nakayama_36-1760332433315.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--541595560"&gt;11. Add definitions for your app to reference the app's additional annotations in the manifest.appdescr_variant file.&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_37-1760332461630.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326305iA909D8AC5F52ED2E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_37-1760332461630.png" alt="hironobu_nakayama_37-1760332461630.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "fileName": "manifest",
  "layer": "CUSTOMER_BASE",
  "fileType": "appdescr_variant",
  "reference": "ui.ssuite.s2p.mm.pur.po.manage.st.s1",
  "id": "customer.zapp.f0842a",
  "namespace": "apps/ui.ssuite.s2p.mm.pur.po.manage.st.s1/appVariants/customer.zapp.f0842a/",
  "version": "0.1.0",
  "content": [
    {
      "changeType": "appdescr_ui5_addNewModelEnhanceWith",
      "content": {
        "modelId": "i18n"
      },
      "texts": {
        "i18n": "i18n/i18n.properties"
      }
    },
    {
      "changeType": "appdescr_ui5_addNewModelEnhanceWith",
      "content": {
        "modelId": "@i18n"
      },
      "texts": {
        "i18n": "i18n/i18n.properties"
      }
    },
    {
      "changeType": "appdescr_ui5_addNewModelEnhanceWith",
      "content": {
        "modelId": "i18n|sap.suite.ui.generic.template.ListReport|C_PurchaseOrderTP"
      },
      "texts": {
        "i18n": "i18n/ListReport/C_PurchaseOrderTP/i18n.properties"
      }
    },
    {
      "changeType": "appdescr_ui5_addNewModelEnhanceWith",
      "content": {
        "modelId": "i18n|sap.suite.ui.generic.template.ObjectPage|C_PurchaseOrderTP"
      },
      "texts": {
        "i18n": "i18n/ObjectPage/C_PurchaseOrderTP/i18n.properties"
      }
    },
    {
      "changeType": "appdescr_ui5_addNewModelEnhanceWith",
      "content": {
        "modelId": "i18n|sap.suite.ui.generic.template.ObjectPage|C_PurchaseOrderItemTP"
      },
      "texts": {
        "i18n": "i18n/ObjectPage/C_PurchaseOrderItemTP/i18n.properties"
      }
    },
    {
      "changeType": "appdescr_ui5_addNewModelEnhanceWith",
      "content": {
        "modelId": "i18n|sap.suite.ui.generic.template.ObjectPage|C_PurchaseOrderLimitItemTP"
      },
      "texts": {
        "i18n": "i18n/ObjectPage/C_PurchaseOrderLimitItemTP/i18n.properties"
      }
    },
    {
      "changeType": "appdescr_ui5_setMinUI5Version",
      "content": {
        "minUI5Version": "1.114.9"
      }
    },
    {
      "changeType": "appdescr_app_setTitle",
      "content": {},
      "texts": {
        "i18n": "i18n/i18n.properties"
      }
    },
    { 
      "changeType": "appdescr_app_addAnnotationsToOData", 
      "content": { 
        "dataSourceId": "mainService", 
        "annotations": [ "customer.myAnno" ], 
        "annotationsInsertPosition": "END", 
        "dataSource": { 
          "customer.myAnno": { 
            "uri": "changes/annotations/annotation_1760320506713.xml", 
            "type": "ODataAnnotation" 
          } 
        } 
      } 
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_38-1760332486033.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326306iDDAB0978F959C6A4/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_38-1760332486033.png" alt="hironobu_nakayama_38-1760332486033.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--738109065"&gt;12. Right-click on the webapp &amp;gt; preview the app from the Preview Application (also from the Preview Application button in the Application Information).&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_39-1760332507199.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326307iC488CF0A81F507E2/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_39-1760332507199.png" alt="hironobu_nakayama_39-1760332507199.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_40-1760332536575.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326308iDEE5D242FAB6AE31/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_40-1760332536575.png" alt="hironobu_nakayama_40-1760332536575.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--934622570"&gt;13. Verify that the plant field is a required field.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_41-1760332585801.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326309iA071FCC743A3432C/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_41-1760332585801.png" alt="hironobu_nakayama_41-1760332585801.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--1131136075"&gt;14. Deploy the app from Deploy Application by right-clicking on the webapp (also from the Deploy button in Application Information).&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_42-1760332605990.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326310i1368B068986FDE56/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_42-1760332605990.png" alt="hironobu_nakayama_42-1760332605990.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_43-1760332613906.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326311i9ADB17FBB3C42AB9/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_43-1760332613906.png" alt="hironobu_nakayama_43-1760332613906.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_44-1760332641377.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326312i671D0CD4120F0C92/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_44-1760332641377.png" alt="hironobu_nakayama_44-1760332641377.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--1327649580"&gt;15. Deployed apps (app variants) can be used by end users by defining Semantic objects, semantic actions, SAPUI5 Components, tiles, etc. in the Fiori technical catalog and referencing them from the business catalog and business roles.&lt;/H3&gt;&lt;P&gt;Semantic Object: Any semantic Object&lt;BR /&gt;Action: Any semantic action&lt;BR /&gt;SAPUI5 Component ID: Namespace when generating a project in Step.5&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_45-1760332664314.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326313iE7BB266A0872EA2C/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_45-1760332664314.png" alt="hironobu_nakayama_45-1760332664314.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--937357071"&gt;3. Explanation of implementation details&lt;/H1&gt;&lt;H3 id="toc-hId--1720676590"&gt;1. Local Annotation file（&lt;SPAN&gt;annotation_xxx.xml&lt;/SPAN&gt;）&lt;/H3&gt;&lt;P&gt;A local annotation file is a file that implements annotated extensions to the OData service used by standard Fiori apps. The description in the file is based on the syntax of OData, and there are the following restrictions (some excerpts).&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;edmx:Edmx&lt;UL&gt;&lt;LI&gt;It is the root element, and between &amp;lt;edmx:Edmx&amp;gt; ~ &amp;lt;/edmx:Edmx&amp;gt;, it writes the syntax. The definition of &amp;lt;edmx:Edmx&amp;gt; must include a description of Version and &amp;lt;edmx:DataServices&amp;gt; element.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;edmx:Reference&lt;UL&gt;&lt;LI&gt;Specifies an external Common Schema Definition Language (CSDL) document that is referenced in the annotation file. The child element edmx:Reference must contain a description of the Uri (the referenced URI) and at least one edmx:Include element.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;edmx:Include&lt;UL&gt;&lt;LI&gt;Specifies the schema under the CSDL document to be referenced. Namespace. You can also specify Alias.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;edmx:Dataservices&lt;UL&gt;&lt;LI&gt;An element that describes the properties of the Annotation, etc., and must contain a single Schema element. Write annotations in the Schema element.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Annotations&lt;UL&gt;&lt;LI&gt;Specify the target attribute that contains the EntitySet name of the OData service you want to extend. It must contain at least one Annotation element.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;According to these syntax, we have implemented that the filter field of the plant must be entered.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Identifying Targets for Expansion&lt;BR /&gt;The implementation of this blog requires the following Target information:&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Target：&lt;SPAN&gt;MM_PUR_PO_MAINT_V2_SRV.MM_PUR_PO_MAINT_V2_SRV_Entities/C_PurchaseOrderTP&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;OData Service Name: MM_PUR_PO_MAINT_V2_SRV&lt;/LI&gt;&lt;LI&gt;EntityContainer Name: MM_PUR_PO_MAINT_V2_SRV_Entities&lt;/LI&gt;&lt;LI&gt;EntitySet Name: C_PurchaseOrderTP (*Not EntityType Name)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;PropertyPath：&lt;SPAN&gt;Plant&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;OData Service Name: SAP Fiori Apps Reference Library（&lt;SPAN&gt;&lt;A href="https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/#&lt;/A&gt;&lt;/SPAN&gt;) to search for the Fiori app you want to expand. The OData used in the Fiori app is listed in the OData Service under "Configuration" in the "IMPLEMENTATION INFORMATION" tab of the app's page.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_46-1760332724248.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326314i3B6FDC589EA135B2/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_46-1760332724248.png" alt="hironobu_nakayama_46-1760332724248.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4. EntityContainer Name&lt;BR /&gt;Check the metadata of the OData service using the app (https://&amp;lt;IP Adress&amp;gt;:&amp;lt;Port Number&amp;gt;/sap/opu/odata/sap/ MM_PUR_PO_MAINT_V2_SRV/$metadata)。&lt;BR /&gt;You can find the EntityContainer name by searching for EntityContainer.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_47-1760332750003.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326315iC4BD34A1B7FC68B3/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_47-1760332750003.png" alt="hironobu_nakayama_47-1760332750003.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;5. EntitySet name&lt;BR /&gt;When you start the Fiori app "Manage Purchase Orders", if you check the Preview/Response of the request to manifest.appdescr in the browser's developer tools, the entity set used for the List Report is "C_ PurchaseOrderTP".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_48-1760332764564.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326316i63BA7E90FF5C2D6C/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_48-1760332764564.png" alt="hironobu_nakayama_48-1760332764564.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6. PropertyPath&lt;BR /&gt;You can identify the item name (PropertyPath) by checking the definition of the target entity set in the metadata of the target OData service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_49-1760332785799.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326317iC6431943D193EEF7/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_49-1760332785799.png" alt="hironobu_nakayama_49-1760332785799.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Setting Extension Target and Annotation Change Properties&lt;OL&gt;&lt;LI&gt;&amp;nbsp;manifest.json load the metadata of the OData service "MM_PUR_PO_MAINT_V2_SRV" used for "Purchase Order Management" and set the CDS View with the field to be extended by annotation to Target.&lt;/LI&gt;&lt;LI&gt;The implementation uses FilterRestrictions to change the properties "RequiresFilter" and "RequiredProperties", so that the FilterRestrictions are included in "Org.OData.Capabilities.V1". vocabulary is referenced by the specified alias.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_50-1760332818091.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326318iCA45BBCED45EF764/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_50-1760332818091.png" alt="hironobu_nakayama_50-1760332818091.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--1917190095"&gt;2. manifest.appdescr_variant.json&lt;/H3&gt;&lt;P&gt;manifest.appdescr_variant.json is a file that describes the objects available in the original app, and many settings refer to the manifest information of the standard app. If you want to add a local annotation file, set the following properties:&lt;BR /&gt;&lt;BR /&gt;"dataSourceId": A property that specifies the OData service of interest, in this scenario it is "mainService".&lt;BR /&gt;"annotations": Specify the name of the annotation for the OData data source "mainService" that you specified. The name must start with "customer" (for example, "customer.myAnno").&lt;BR /&gt;"annotationsInsertPosition": "END". If not, they may be disabled by the server user and have no effect at all.&lt;BR /&gt;"dataSource": "Specify the annotation name that starts with "customer". If you specify a local annotation file created with "uri" and add "type" to OData, it will be "ODataAnnotation".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_51-1760332861409.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326319i986989B718EC8E63/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_51-1760332861409.png" alt="hironobu_nakayama_51-1760332861409.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1358713895"&gt;4. Summary&lt;/H1&gt;&lt;P&gt;In this article, we have shown you how to create an Adaptation Project in SAP Business Application Studio and add Local Annotation to make filter fields mandatory. In addition to making filters mandatory, the Adaptation Project allows you to extend your annotation implementation, extend your controller, and add custom XML fragments. For more information about the Adaptation Project, please refer to the documentation in the References section.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1555227400"&gt;References&lt;/H1&gt;&lt;P&gt;SAP Help: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/SAP%20Business%20Application%20Studio/584e0bcbfd4a4aff91c815cefa0bce2d/9d2028f106d44424a0f4637541b6e25f.html" target="_blank" rel="noopener noreferrer"&gt;Extending an SAP Fiori Application for an SAP S/4HANA or SAP S/4HANA Cloud Private Edition&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Blog: &lt;SPAN&gt;&lt;A href="https://blogs.sap.com/2022/01/26/extending-sap-delivered-sap-fiori-elements-apps-using-adaptation-projects-to-create-sap-s-4hana-app-variants/" target="_blank" rel="noopener noreferrer"&gt;Extending SAP-delivered SAP Fiori elements apps using adaptation projects to create SAP S/4HANA app variants&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP KBA: &lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/3285957" target="_blank" rel="noopener noreferrer"&gt;https://me.sap.com/notes/3285957&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/adaptation-project-how-to-make-filter-items-mandatory-for-sap-standard/ba-p/14241736"/>
    <published>2025-10-15T18:00:00.032000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/a-developer-s-guide-to-building-hybrid-transactional-fiori-apps-with-rap/ba-p/14245208</id>
    <title>A Developer’s Guide to Building Hybrid Transactional Fiori Apps with RAP and Analytical features</title>
    <updated>2025-10-16T01:11:17.894000+02:00</updated>
    <author>
      <name>VijayCR</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/38084</uri>
    </author>
    <content>&lt;P&gt;In many SAP S/4HANA implementations, particularly those involving Fiori List Reports, business users often require a unified experience that combines &lt;STRONG&gt;transactional capabilities ,&lt;/STRONG&gt;such as executing actions on records ,with &lt;STRONG&gt;analytical insights&lt;/STRONG&gt; like grouping, subtotals, and totals. This is especially relevant in operational reporting scenarios where decisions are made directly from the data view.&lt;BR /&gt;These hybrid use cases are common in operational reporting, where users need to analyze data and take immediate action within the same interface.However, when using &lt;STRONG&gt;analytical CDS views&lt;/STRONG&gt; (annotated with &lt;CODE&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/15206"&gt;@analytics&lt;/a&gt;.query: true&lt;/CODE&gt;), SAP RAP imposes architectural constraints that prevent the direct definition of &lt;STRONG&gt;actions&lt;/STRONG&gt; within the same view. This limitation can be a bottleneck when designing intelligent, user-centric applications.&lt;/P&gt;&lt;P&gt;To overcome this challenge, the following approach is recommended:&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Separate OData Services for Analytics and Transactions&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Analytical Service&lt;/STRONG&gt;: Built using a CDS view with &lt;CODE&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/15206"&gt;@analytics&lt;/a&gt;.query: true&lt;/CODE&gt;, enabling features like grouping, subtotals, and totals.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Transactional Service&lt;/STRONG&gt;: Developed using RAP with behavior definitions to support actions, determinations, and validations. This view excludes analytical annotations to maintain RAP compatibility.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;UI5 Extension Logic for Action Integration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Use &lt;STRONG&gt;SAPUI5 extensions&lt;/STRONG&gt; to wire up action buttons in the Fiori List Report.&lt;/LI&gt;&lt;LI&gt;These buttons trigger transactional logic from the RAP-based service, even though the data is displayed via the analytical service.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Workaround for Filtering on Aggregated Fields&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Since analytical views often aggregate fields (e.g., total amounts), filtering directly on these fields may not work as expected.&lt;/LI&gt;&lt;LI&gt;Introduce &lt;STRONG&gt;dummy fields&lt;/STRONG&gt; or helper logic to enable meaningful filtering in the UI.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This approach allows developers to deliver &lt;STRONG&gt;intelligent Fiori applications&lt;/STRONG&gt; that combine the best of both worlds: &lt;STRONG&gt;real-time analytical insights&lt;/STRONG&gt; and &lt;STRONG&gt;direct transactional capabilities&lt;/STRONG&gt;. It supports business scenarios such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Mass approvals with KPI-based filtering&lt;/LI&gt;&lt;LI&gt;Sales performance analysis with direct follow-up actions&lt;/LI&gt;&lt;LI&gt;Inventory grouping with replenishment triggers&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;By decoupling analytics and actions at the service level and integrating them at the UI layer, you can build scalable, maintainable, and user-friendly applications that align with SAP’s clean core principles.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Analytical CDS View (OData V2 or V4)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;You’ve correctly defined analytical views such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;CODE&gt;Z_I_APPRREQ_TOTAL&lt;/CODE&gt;: Aggregates planned costs using &lt;CODE&gt;sum(bpja.wtjhr)&lt;/CODE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;Z_I_APPRREQ_COSTS&lt;/CODE&gt;: Joins totals with individual cost records&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;Z_I_APPROPRIATEREQUEST&lt;/CODE&gt;: Combines investment request data with ledger and object info&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Appropriate Request Ledger Details.'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
define view entity Z_I_APPRREQ_LEDGER as select from tka01
inner join tbp0l on tbp0l.waers = tka01.waers
and tbp0l.periv = tka01.lmona
{

key tka01.kokrs as Kokrs,
tbp0l.periv as Periv,
tbp0l.waers as Waers,
tbp0l.lednr as Lednr

}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Appropriate Request Costs Details.'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
define view entity Z_I_APPRREQ_COSTS
as select from bpja
inner join Z_I_APPRREQ_TOTAL on Z_I_APPRREQ_TOTAL.Ledger = bpja.lednr
and Z_I_APPRREQ_TOTAL.ObjectNumber = bpja.objnr

{


key bpja.lednr as Ledger,
key bpja.objnr as ObjectNumber,
key bpja.gjahr as FiscalYear,
// @semantics.currencycode
bpja.twaer as Currency,
@Semantics.amount.currencyCode : 'Currency'
bpja.wtjhr as PlancostsYear,
Z_I_APPRREQ_TOTAL.Currency as Currency_Code,
@Semantics.amount.currencyCode : 'Currency_Code'
Z_I_APPRREQ_TOTAL.PlancostsYear as PlancostsTotal
}

where
bpja.wrttp = '40';&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Appropriate Request Costs Details.'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
define view entity Z_I_APPRREQ_TOTAL as select from bpja

{

key bpja.lednr as Ledger,
key bpja.objnr as ObjectNumber,

bpja.twaer as Currency ,
@Semantics.amount.currencyCode : 'Currency'
sum(bpja.wtjhr) as PlancostsYear

}
where bpja.wrttp = '40'
group by lednr,objnr,bpja.twaer;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'IMAK Details'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
@Analytics.dataCategory: #CUBE
define view entity Z_I_APPROPRIATEREQUEST
as select from imak
association [0..1] to imakpi on imakpi.posnr = imak.posnr
association [0..1] to imakt on imakt.posnr = imak.posnr
association [0..1] to imav on imav.posnr = imak.posnr
association [0..1] to Z_I_APPRREQ_LEDGER on Z_I_APPRREQ_LEDGER.Kokrs = imak.vkokrs
{
key
cast(imak.posnr as abap.char( 12 )) as Appr_Request,
imak.abukrs as CompanyCode,
imak.gjahr as FiscalYear,
imakpi.izwek as Izwek,
imakt.txt50 as Txt50,
imav.objnr as ObjectNumber,
Z_I_APPRREQ_LEDGER.Lednr as Ledger,
concat('IQ',imak.posnr) as IQOBJNR,

erdat as Erdat

}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-2020994856"&gt;&amp;nbsp;&lt;STRONG&gt;Consumption CDS View&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;This consumption view is designed to support a &lt;STRONG&gt;Fiori List Report&lt;/STRONG&gt; that displays investment request data with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Aggregated planned costs per fiscal year and overall&lt;/LI&gt;&lt;LI&gt;Currency semantics for proper formatting&lt;/LI&gt;&lt;LI&gt;Additional Filters for amounts as the original ones does not support in analytical views.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Bericht zur Freigabe der Maßnahmenanforderungen'

@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED

@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
@UI.headerInfo.typeName: 'Freigabeliste'
@UI.headerInfo.typeNamePlural: 'Freigabeliste'


define root view entity ZAPPR_APPRLLIST_MAIL
as select from Z_I_APPROPRIATEREQUEST
association [0..1] to Z_I_APPRREQ_COSTS as Investcosts on Investcosts.Ledger = Z_I_APPROPRIATEREQUEST.Ledger
and Investcosts.ObjectNumber = Z_I_APPROPRIATEREQUEST.ObjectNumber
and Investcosts.FiscalYear = Z_I_APPROPRIATEREQUEST.FiscalYear

{
@UI.facet : [
{
id : 'AppropRequest',
purpose : #STANDARD,
type : #IDENTIFICATION_REFERENCE,
label : 'Maßnahmenanforderung',
position : 10 }
]

@UI : {
lineItem : [{position: 10} ],

identification : [{position: 10 }],
selectionField : [{position: 10}]
}
@EndUserText: { label: 'Investitionsantragsnummer'}
key Z_I_APPROPRIATEREQUEST.Appr_Request,
@UI : {
lineItem : [{position: 20}],
identification : [{ position: 20 }],
selectionField : [{position: 20}]
}
@EndUserText: { label: 'Buchungskreis'}
Z_I_APPROPRIATEREQUEST.CompanyCode,

@UI : {
lineItem : [{position: 50}],
identification : [{position: 50}],
selectionField : [{position: 50}]
}
@EndUserText: { label: 'Bezeichnung'}
Z_I_APPROPRIATEREQUEST.Txt50,



Investcosts.Currency,
@UI : {
lineItem : [{position: 60}],
identification : [{position: 60}],
selectionField : [{position: 60}] }
@EndUserText: { label: 'Geplante Kosten [aktuelles GJ] in EUR'}
@Semantics.amount.currencyCode : 'Currency'
@Aggregation.default : #SUM
Investcosts.PlancostsYear as TotalPlancostsYear,
@UI : {
// lineItem : [{position: 70}],
identification : [{position: 70}],
selectionField : [{position: 70}] }
@EndUserText: { label: 'Geplante Kosten [aktuelles GJ] in EUR '}
@Semantics.amount.currencyCode : 'Currency'

Investcosts.PlancostsYear as TotalPlancostsYear1,


Investcosts.Currency_Code,
@UI : {
lineItem : [{position: 80}],
identification : [{position: 80}],
selectionField : [{position: 80}] }
@Semantics.amount.currencyCode : 'Currency_Code'
@EndUserText: { label: 'Geplante Kosten [GESAMT] in EUR'}
@Aggregation.default : #SUM
Investcosts.PlancostsTotal as PlancostsTotalSum,
@UI : {

identification : [{position: 90}],
selectionField : [{position: 90}] }
@Semantics.amount.currencyCode : 'Currency_Code'
@EndUserText: { label: 'Geplante Kosten [GESAMT] in EUR '}

Investcosts.PlancostsTotal as PlancostsTotalSum1,
@UI : {
selectionField : [{position: 100}] }
@Consumption.filter.selectionType: #INTERVAL

Z_I_APPROPRIATEREQUEST.Erdat

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once done create a Service Behaviour and Definition for the above CDS Entity .&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;CDS entity with Action Service&lt;/STRONG&gt;&lt;BR /&gt;RAP-Based CDS View with Behavior Definition with Action&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_appr_appremail unique;
strict ( 1 );

define behavior for ZAPPR_APPREMAIL //alias &amp;lt;alias_name&amp;gt;
persistent table ZAPPR_APPREMAIL
lock master
authorization master ( instance )

{
action Email parameter Z_APPROVER3 result [1] $self;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Abstract entity for the comments&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Approval 3 Input Details'
define abstract entity Z_APPROVER3
// with parameters parameter_name : parameter_type
{
comments : char255;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Behavior Definition code:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zappr_appremail DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.
    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zappr_appremail RESULT result.
    METHODS email FOR MODIFY
      IMPORTING keys FOR ACTION zappr_appremail~email RESULT result.
ENDCLASS.

CLASS lhc_zappr_appremail IMPLEMENTATION.
  METHOD get_instance_authorizations.
  ENDMETHOD.
  METHOD email.
 READ ENTITIES OF zappr_appremail IN LOCAL MODE
  ENTITY zappr_appremail
    FIELDS ( appr_request )
  WITH CORRESPONDING #( keys )
  RESULT DATA(lt_app_data).
    DATA: lv_recipient TYPE adr6-smtp_addr.
    DATA: lv_subject TYPE string.
    DATA: lv_content TYPE string.
    DATA : email_template_name TYPE smtg_tmpl_id VALUE 'ZEMAIL_APPROVAL'.
    DATA(email_api) =
  cl_smtg_email_api=&amp;gt;get_instance(
          iv_template_id = email_template_name  ).
    DATA(lv_html_text) = VALUE string( ).

    DATA(i_cds_key) = VALUE if_smtg_email_template=&amp;gt;ty_gt_data_key( ).
  " Get the RawHTML Content and Replace the palceholder with the INV Details in the email
    email_api-&amp;gt;render( EXPORTING
                                iv_language = sy-langu
                                  it_data_key =  i_cds_key
                              IMPORTING
                                ev_subject = DATA(lv_subject_tmp)
                                ev_body_html = DATA(lv_body_html) ).

    LOOP AT keys INTO DATA(appdetails) .
   lv_content = |{ appdetails-%param-comments }|.
    exit.
  endloop.

REPLACE 'ZCOMMENTS' WITH lv_content INTO lv_body_html.
lv_subject = lv_subject_tmp.
 DATA(lv_body_html_soli) = cl_bcs_convert=&amp;gt;string_to_soli( lv_body_html ).  " Build HTML for Sending
    DATA(lo_multipart_ref) = NEW cl_gbt_multirelated_service( ).
    lo_multipart_ref-&amp;gt;set_main_html(
        EXPORTING
          content     = lv_body_html_soli
          description = '' ).


TRY.

DATA(o_document) = cl_document_bcs=&amp;gt;create_document( i_type    = 'HTM'
 i_text    = lv_body_html_soli
 i_subject = CONV so_obj_des( lv_subject ) ).
* Sendrequest erzeugen
        DATA(o_send_request) = cl_bcs=&amp;gt;create_persistent( ).
* Email-Subject festlegen, ip_subject ist vom Typ String
        o_send_request-&amp;gt;set_message_subject( ip_subject = lv_subject ).
* Die Mail an den Sendrequest hängen
        o_send_request-&amp;gt;set_document( o_document ).
        o_send_request-&amp;gt;set_sender( o_sender ).
        DATA o_recipient TYPE REF TO cl_cam_address_bcs .
        LOOP AT recipients ASSIGNING FIELD-SYMBOL(&amp;lt;fs_email_recipient&amp;gt;).
          o_send_request-&amp;gt;add_recipient( i_recipient  = cl_cam_address_bcs=&amp;gt;create_internet_address( &amp;lt;fs_email_recipient&amp;gt;-email ) i_express = abap_true ).
        ENDLOOP.
* Sofort senden
        o_send_request-&amp;gt;set_send_immediately( abap_true ).
* Dokument senden
        IF o_send_request-&amp;gt;send( i_with_error_screen = abap_true ) = abap_true.
        ELSE.
        ENDIF.
      CATCH cx_root INTO DATA(e_text).
    ENDTRY.
  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now create CDS Entity with Annotation for action to Trigger transactional actions (e.g., sending approval emails) directly from the report&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Bericht zur Freigabe der Maßnahmenanforderungen'

@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED

@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
@UI.headerInfo.typeName: 'Freigabeliste'
@UI.headerInfo.typeNamePlural: 'Freigabeliste'
define root view entity ZAPPR_APPREMAIL
as select from Z_I_APPROPRIATEREQUEST
association [0..1] to Z_I_APPRREQ_COSTS as Investcosts on Investcosts.Ledger = Z_I_APPROPRIATEREQUEST.Ledger
and Investcosts.ObjectNumber = Z_I_APPROPRIATEREQUEST.ObjectNumber
and Investcosts.FiscalYear = Z_I_APPROPRIATEREQUEST.FiscalYear
association [0..1] to Z_I_APPRREQ_STATUS as ApprStatus on ApprStatus.Objnr = Z_I_APPROPRIATEREQUEST.IQOBJNR
and ApprStatus.spras = $session.system_language

{
@UI.facet : [
{
id : 'AppropRequest',
purpose : #STANDARD,
type : #IDENTIFICATION_REFERENCE,
label : 'Maßnahmenanforderung',
position : 10 }
]

@UI : {
lineItem : [{position: 10} ,{ type: #FOR_ACTION , dataAction: 'Email' ,label: 'FraigabeListe Email Senden' , invocationGrouping: #CHANGE_SET
}],

identification : [{position: 10 }],
selectionField : [{position: 10}]
}
@EndUserText: { label: 'Investitionsantragsnummer'}
key Z_I_APPROPRIATEREQUEST.Appr_Request,
@UI : {
lineItem : [{position: 20}],
identification : [{ position: 20 }],
selectionField : [{position: 20}]
}
@EndUserText: { label: 'Buchungskreis'}
Z_I_APPROPRIATEREQUEST.CompanyCode,



@UI : {
lineItem : [{position: 30}],
identification : [{position: 50}],
selectionField : [{position: 50}]
}
@EndUserText: { label: 'Bezeichnung'}
Z_I_APPROPRIATEREQUEST.Txt50,

@UI : {
lineItem : [{position: 40}],
identification : [{position: 40}],
selectionField : [{position: 40}] }
@EndUserText: { label: 'Status'}
ApprStatus.txt30 as Statustext,

Investcosts.Currency,
@UI : {
lineItem : [{position: 50}],
identification : [{position: 50}],
selectionField : [{position: 50}] }
@EndUserText: { label: 'Geplante Kosten [aktuelles GJ] in EUR'}
@Semantics.amount.currencyCode : 'Currency'
// @DefaultAggregation: #SUM
Investcosts.PlancostsYear as TotalPlancostsYear,
Investcosts.Currency_Code,
@UI : {
lineItem : [{position: 60}],
identification : [{position: 60}],
selectionField : [{position: 60}] }
@Semantics.amount.currencyCode : 'Currency_Code'
@EndUserText: { label: 'Geplante Kosten [GESAMT] in EUR'}
// @Aggregation.default : #SUM
Investcosts.PlancostsTotal as PlancostsTotalSum,
@UI : {
selectionField : [{position: 70}] }
Z_I_APPROPRIATEREQUEST.Erdat

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now genrate the Service definition and service&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1695398632"&gt;&lt;STRONG&gt;Create the Fiori List Report App&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-1627967846"&gt;In SAP Business Application Studio:&lt;/H4&gt;&lt;OL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;Create a new project from template&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;List Report Object Page&lt;/STRONG&gt;&amp;nbsp; with &lt;STRONG&gt;analytical table&lt;/STRONG&gt; and select the Odata entity generated from the &lt;STRONG&gt;aggregated Service&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;In the Manifest.json add additional Odata Service or use guided development&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="VijayCR_0-1760567958925.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328101i733541505FD7047B/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="VijayCR_0-1760567958925.png" alt="VijayCR_0-1760567958925.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Using the&amp;nbsp;guided development&amp;nbsp; add a action as shwon below .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VijayCR_1-1760568663616.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328106i00D01431AC68CC78/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="VijayCR_1-1760568663616.png" alt="VijayCR_1-1760568663616.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;core:FragmentDefinition xmlns:core='sap.ui.core'
    xmlns='sap.m'&amp;gt;

 &amp;lt;Dialog class="sapUiSizeCompact"
        xmlns="sap.m"
        xmlns:ca="sap.ca.ui"
        xmlns:layout="sap.ui.layout"
        xmlns:form="sap.ui.layout.form"
        xmlns:core="sap.ui.core"
        xmlns:unified="sap.ui.unified" title="{i18n&amp;gt;remarks}" contentWidth="200px" id="idremarks"&amp;gt;
        &amp;lt;content &amp;gt;
            &amp;lt;form:SimpleForm columnsL="1" columnsM="1" maxContainerCols="1" layout="ResponsiveGridLayout" id="formexlstat" editable="true"&amp;gt;
                &amp;lt;form:content &amp;gt;
                    &amp;lt;Label id="remarkslabel" text="{i18n&amp;gt;remarks}"/&amp;gt;
                    &amp;lt;Input id="idremarksinput" type="Text"/&amp;gt;
                &amp;lt;/form:content&amp;gt;
            &amp;lt;/form:SimpleForm&amp;gt;
        &amp;lt;/content&amp;gt;
        &amp;lt;beginButton &amp;gt;
            &amp;lt;Button text="{i18n&amp;gt;idEmail}" press="._onSend" id="idEmail"/&amp;gt;
        &amp;lt;/beginButton&amp;gt;
        &amp;lt;endButton&amp;gt;
            &amp;lt;Button text="{i18n&amp;gt;Cancel}" press="._onCancel" id="idcancelbtn"/&amp;gt;
        &amp;lt;/endButton&amp;gt;
    &amp;lt;/Dialog&amp;gt;
&amp;lt;/core:FragmentDefinition&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Handle the action using the below controller code&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
    "sap/m/MessageToast"
], function(MessageToast) {
    'use strict';
    return {
        onInit: function(){
           this.loadDialogFragment();
            this.AnalyticalTable = this.getView().byId('apprsendemail::sap.suite.ui.generic.template.ListReport.view.ListReport::apprListEmail--analyticalTable') 
            //this.getView(this.getView().getContent()[0].getContent().getItems()[0].getId())
        },
            _onCancel: function(oEvent){
        
            var oModel = this.getView().getModel();
            this._oDialog.close();
            if (this._oDialog) {
                this._oDialog.destroy();
                this._oDialog = null; // Important to nullify the reference
            }
          
          
               
        },
        _onSend: function (oEvent) {
            //var oInput = this.byId("inputParam");
           // var sValue = oInput.getValue();
        
            // Get selected items from the Analytical List Table
            var oTable = this.getView().byId("apprsendemail::sap.suite.ui.generic.template.ListReport.view.ListReport::apprListEmail--analyticalTable"); // Replace with your table ID
            var aSelectedIndices = oTable._getSelectionPlugin().getSelectedIndices();
            var aSelectedItems = [];
        
            aSelectedIndices.forEach(function (iIndex) {
                var oContext = oTable.getContextByIndex(iIndex);
                aSelectedItems.push(oContext.getObject());
            });
        
            // Call the backend action with the selected items and parameter
            this._callBackendAction(aSelectedItems);
            oTable.getModel().refresh(true);
            // Close the dialog
            this._oDialog.close();
            if (this._oDialog) {
                this._oDialog.destroy();
                this._oDialog = null; // Important to nullify the reference
            }
        },
        sendEmailList: function(oEvent) {
 //            MessageToast.show("Custom handler invoked.");
            if (!this._oDialog) {
                this._oDialog = sap.ui.xmlfragment("apprsendemail.ext.fragment.EmailListDialog", this);
                this.getView().addDependent(this._oDialog);
            }
            this._oDialog.open();
        },
        loadDialogFragment: function(){
            if (!this.ReleaseListDialog) {
                this.oDialog = this.loadFragment({
                    name: "apprsendemail.ext.fragment.EmailListDialog",
                    controller: this
                });
            }
        },
        _callBackendAction:  async function (aSelectedItems) {
            var oModel = this.getOwnerComponent().getModel("emailAction");

            var sPath = "/Email"; // Adjust the path as needed
            var mParameters = {
                batchGroupId: "myChangeset",
                changeSetId: "myChangeset"
            };
           
            var comments =     sap.ui.getCore().byId("idremarksinput").getValue();
            // Example of calling the backend for each selected item
            aSelectedItems.forEach(function (oItem) {
                oModel.callFunction(sPath, {
                    method: "POST",
                    mParameters: mParameters,
                    urlParameters: {
                        "Appr_Request": oItem.Appr_Request,
                        "comments" : comments,
                    },
                  
                });
            });
            //Submitting the function import batch call
oModel.submitChanges({
	batchGroupId: "myChangeset", //Same as the batch group id used previously

    success: function (oData) {
  
//      var  oTable = this.getView().byId("releaseapprreq::sap.suite.ui.generic.template.ListReport.view.ListReport::appropriatelist--analyticalTable");
 //       oTable._getSelectionPlugin().getModel().refresh(true);
        // Handle success
        MessageToast.show("E-Mail erfolgreich gesendet");
    }.bind(this),
    error: function (oError) {
        // Handle error
        MessageToast.show("E-Mail wurde nicht erfolgreich gesendet");
    }

});
        },
        
    };
});
    &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once done deploy the app and this will be available in the Workzone and you see the app showing totals and also actions as shown below :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VijayCR_2-1760569240360.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328109iC19213226438FE29/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="VijayCR_2-1760569240360.png" alt="VijayCR_2-1760569240360.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VijayCR_3-1760569271440.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328110i8A0D61FCD51356BE/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="VijayCR_3-1760569271440.png" alt="VijayCR_3-1760569271440.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The approach outlined in this guide demonstrates how to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Leverage CDS view annotations for &lt;STRONG&gt;grouping, subtotals, and totals&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Integrate &lt;STRONG&gt;status tracking&lt;/STRONG&gt; and multilingual support&lt;/LI&gt;&lt;LI&gt;Enable &lt;STRONG&gt;transactional actions&lt;/STRONG&gt; like sending approval emails via RAP behavior&lt;/LI&gt;&lt;LI&gt;Maintain a clean architecture by &lt;STRONG&gt;decoupling analytics and actions&lt;/STRONG&gt; at the service level and integrating them at the UI layer&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This design not only enhances &lt;STRONG&gt;user productivity&lt;/STRONG&gt; but also aligns with SAP’s &lt;STRONG&gt;clean core principles&lt;/STRONG&gt;, ensuring scalability, maintainability, and future readiness of your S/4HANA applications.&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/a-developer-s-guide-to-building-hybrid-transactional-fiori-apps-with-rap/ba-p/14245208"/>
    <published>2025-10-16T01:11:17.894000+02:00</published>
  </entry>
</feed>
