<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/API-Management-blog-posts.xml</id>
  <title>SAP Community - API Management</title>
  <updated>2025-08-06T23:10:06.060784+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/API Management/pd-p/67838200100800006828" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>API Management blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/api-resource-level-access-restriction-in-sap-api-management/ba-p/14091618</id>
    <title>API Resource Level Access Restriction in SAP API Management</title>
    <updated>2025-05-05T10:50:20.357000+02:00</updated>
    <author>
      <name>himangshu1995</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/419757</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1580990713"&gt;Business Use Case&lt;/H1&gt;&lt;P&gt;OrganizationABC is an API provider who has published an API which is having two operations such as sales order creation &amp;amp; purchase order creation. Another two different organizations (CompanyA &amp;amp; CompanyB) will be consuming this API&amp;nbsp;where CompanyA is responsible for posting sales order to backend application whereas CompanyB is responsible for post purchase order to the backend application. So, CompanyA shouldn’t have access to the resource /PurchaseOrderCreation and similarly, CompanyB shouldn’t have access to /SalesOrderCreation. In this blog, we will be discussing one of the custom approaches to achieve this feature in SAP API Management.&lt;/P&gt;&lt;H1 id="toc-hId-1384477208"&gt;Technical Approach&lt;/H1&gt;&lt;H2 id="toc-hId-1317046422"&gt;Prerequisites&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;Create an API Proxy with multiple resources. (Example: /SalesOrderCreation, /PurchaseOrderCreation)&lt;/LI&gt;&lt;LI&gt;Publish a product for the above API Proxy to Developer Portal.&lt;/LI&gt;&lt;LI&gt;Create two different applications using the above product in Developer Portal.&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1120532917"&gt;Steps to be followed&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;Add a custom attribute (Attribute Name: Scope) in each of application which is subscribed to this API in Developer portal.&lt;BR /&gt;Here, I have created an application named APP_CompanyA and maintained the Scope attribute with the value as “Demo_API-POST-/SalesOrderCreation”.&lt;BR /&gt;Here, I have defined the Scope in a custom attribute with the combination of &amp;lt;API Proxy Name&amp;gt;-&amp;lt;Method&amp;gt;-&amp;lt;Resource Name to which it should have access&amp;gt;&lt;BR /&gt;Demo_API:&amp;nbsp;API Proxy name&lt;BR /&gt;POST: Method&lt;BR /&gt;This application should have access to /SalesOrderCreation only. Hence the Scope value has been defined as “Demo_API-POST-/SalesOrderCreation”.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="himangshu1995_0-1746156581932.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256961iBE756FDFFBA80199/image-size/large?v=v2&amp;amp;px=999" role="button" title="himangshu1995_0-1746156581932.png" alt="himangshu1995_0-1746156581932.png" /&gt;&lt;/span&gt;&lt;P&gt;Similarly, I have created another application for CompanyB and defined the Scope as a custom attribute:&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="himangshu1995_1-1746156653872.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256962i0B5081657F25C3A5/image-size/large?v=v2&amp;amp;px=999" role="button" title="himangshu1995_1-1746156653872.png" alt="himangshu1995_1-1746156653872.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Add “Access Entity” policy at the PreFlow(Incoming Request) of ProxyEndpoint to retrieve the profile data for applications during API proxy message processing. Add the below content inside the policy:&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;&amp;lt;!-- this policy can be used to retrieve all details of an entity(application, API Product, company, company developer, consumer key and developer) --&amp;gt;
&amp;lt;AccessEntity async="true" continueOnError="false" enabled="true" xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;!-- the name of the type of entity to be retrieved --&amp;gt;
	&amp;lt;EntityType value="app"/&amp;gt;
	&amp;lt;!-- The value that identifies the specific entity whose profile should be retrieved. The ref attribute identifies the variable that provides the source of the identifier. 
	The type identifies the EntityType populated by the referenced variable --&amp;gt;
	&amp;lt;EntityIdentifier ref="client_id" type="consumerkey"/&amp;gt;
	&amp;lt;!-- used when EntityIdentifier is not gaurenteed unique --&amp;gt;
&amp;lt;/AccessEntity&amp;gt;​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Add Extract Variable policy at PreFlow(Incoming Request) of ProxyEndpoint to retrieve the value of Scope defined as a custom attribute into a variable. You can add the below content to the policy:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;&amp;lt;!-- Extract content from the request or response messages, including headers, URI paths, JSON/XML payloads, form parameters, and query parameters --&amp;gt;
&amp;lt;ExtractVariables async="true" continueOnError="false" enabled="true" xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;!-- the source variable which should be parsed --&amp;gt;
	&amp;lt;Source&amp;gt;AccessEntity.ExtractAtributes&amp;lt;/Source&amp;gt;
	&amp;lt;!-- Specifies the XML-formatted message from which the value of the variable will be extracted --&amp;gt;
	&amp;lt;XMLPayload&amp;gt;
		&amp;lt;!-- Specifies variable to which the extracted value will be assigned --&amp;gt;
		&amp;lt;Variable name="scope" type="string"&amp;gt;
			&amp;lt;!-- Specifies the XPath defined for the variable --&amp;gt;
			&amp;lt;XPath&amp;gt;/App/Attributes/Attribute[2]/Value&amp;lt;/XPath&amp;gt;
		&amp;lt;/Variable&amp;gt;
	&amp;lt;/XMLPayload&amp;gt;
&amp;lt;/ExtractVariables&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Add a JavaScript policy at the PreFlow(Incoming Request) of ProxyEndpoint to frame a combination of &amp;lt;API proxy name&amp;gt;-&amp;lt;API method&amp;gt;-&amp;lt;Resource Name&amp;gt; during API proxy message processing runtime and check if that includes into the variable which we have set in the previous policy. Based on this check, we will be setting another variable named “GrantAccess” which contains the value as true/false. JavaScript is as below:&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;var GrantAccess = ""
var scope = context.getVariable('scope')
var proxypathsuffix = context.getVariable('proxy.pathsuffix')
var proxyverb = context.getVariable('request.verb')
var proxyname = context.getVariable('apiproxy.name')
var APIDetails = proxyname + "-" + proxyverb + "-" + proxypathsuffix
var GrantAccess = scope.includes(APIDetails)
context.setVariable('GrantAccess', GrantAccess);&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Add Raise Fault policy at PreFlow(Incoming Request) of ProxyEndpoint to raise a custom response message in case the "GrantAccess" variable value is false. Policy content would be as below:&lt;BR /&gt;Condition String:&amp;nbsp;&lt;STRONG&gt;GrantAccess = 'false'&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;&amp;lt;RaiseFault async="true" continueOnError="false" enabled="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;
	&amp;lt;!-- Defines the response message returned to the requesting client --&amp;gt;
	&amp;lt;FaultResponse&amp;gt;
		&amp;lt;Set&amp;gt;
		   &amp;lt;Payload contentType="application/json" variablePrefix="@" variableSuffix="#"&amp;gt;
		     {
		        "successful": false,
		        "status": 500,
		        "error": "Restricted resource access",
		        "Response": "You don't have access to the API resource which you are trying to access. Please contact the system administrator to define the scope."
		     }
		  &amp;lt;/Payload&amp;gt;
		&amp;lt;StatusCode&amp;gt;500&amp;lt;/StatusCode&amp;gt;
		&amp;lt;ReasonPhrase&amp;gt;Undefined Scope&amp;lt;/ReasonPhrase&amp;gt;
	&amp;lt;/Set&amp;gt;
	&amp;lt;/FaultResponse&amp;gt;
	&amp;lt;IgnoreUnresolvedVariables&amp;gt;true&amp;lt;/IgnoreUnresolvedVariables&amp;gt;
&amp;lt;/RaiseFault&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H1 id="toc-hId-794936693"&gt;Testing&lt;/H1&gt;&lt;H2 id="toc-hId-727505907"&gt;Scenario - 1&lt;/H2&gt;&lt;P&gt;Using the Client ID &amp;amp; Client Secret of CompanyB and trying to access “/SalesOrderCreation” API resource.&lt;/P&gt;&lt;P&gt;Expected Outcome:&amp;nbsp;This should throw an exception as CompanyB is responsible only for purchase order creation.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="himangshu1995_2-1746157510557.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256963iC9EAD3B42BCBC11E/image-size/large?v=v2&amp;amp;px=999" role="button" title="himangshu1995_2-1746157510557.png" alt="himangshu1995_2-1746157510557.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-530992402"&gt;Scenario - 2&lt;/H2&gt;&lt;P&gt;Using the Client ID &amp;amp; Client Secret of CompanyA and trying to access “/PurchaseOrderCreation” API resource.&lt;/P&gt;&lt;P&gt;Expected Outcome:&amp;nbsp;This should throw an exception as CompanyA is responsible only for sales order creation.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="himangshu1995_3-1746158639220.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256964iC4171ED486A1CF82/image-size/large?v=v2&amp;amp;px=999" role="button" title="himangshu1995_3-1746158639220.png" alt="himangshu1995_3-1746158639220.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-205396178"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In summary, exploring "API Resource Level Access Restriction in SAP API Management" has provided us with valuable insights and a deeper understanding of its significance in our lives.&amp;nbsp;As we move forward, let us take these lessons to heart and apply them in our everyday experiences. I appreciate you taking the time to read this blog, and I invite you to share your thoughts and reflections&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;in the comments below. Together, we can continue to learn and grow.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Happy Learning!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/api-resource-level-access-restriction-in-sap-api-management/ba-p/14091618"/>
    <published>2025-05-05T10:50:20.357000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-apim-custom-dashboard-for-monitoring/ba-p/14094263</id>
    <title>SAP APIM Custom Dashboard for Monitoring</title>
    <updated>2025-05-06T14:02:23.814000+02:00</updated>
    <author>
      <name>Muniyappan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/163801</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="5"&gt;Introduction&lt;/FONT&gt;&lt;/P&gt;&lt;P class=""&gt;During development, testing, and support, we ask the following questions to understand what happened during an API call:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;How many calls succeeded or failed?&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;What HTTP method was used (GET, POST, PUT, etc.)?&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;What is the resource path for the failed or successful calls?&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;However, it is often difficult to extract detailed information such as the HTTP method used and the response codes for each failed API call. When you open a proxy, you can see calls listed, but they are often not helpful, especially in error cases.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;FONT size="4"&gt;&lt;!--                     notionvc: d8f3d86a-c786-4918-b6e7-88e2dc2f4fcb                     --&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_1-1746524755447.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258017i8A7A81B330A670C1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_1-1746524755447.png" alt="Muniyappan_1-1746524755447.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;P&gt;&lt;FONT size="4"&gt;Standard monitoring tiles do not have any filters to see these information and you can only see upto 25 proxies and rest is flagged as others. &lt;A href="https://help.sap.com/docs/sap-api-management/sap-api-management/analytics-dashboard?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Analytics Dashboard&lt;/A&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_2-1746524767801.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258018i764FCDA73DFB67CA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_2-1746524767801.png" alt="Muniyappan_2-1746524767801.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Proxy Creation Types&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="4"&gt;We need to understand what are the ways to create proxies before jumpint into monitoring. There are variety of ways to create API proxies. Though it is easier to monitor proxies which fall under option 2, still custom dashboad can help to clearly see what was called.&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Without any resource (&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/api-masking-api-routing-via-sap-api-management-a-step-by-step-guide/ba-p/13788205" target="_blank"&gt;Masking&lt;/A&gt;)&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;One resource but one method&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Multiple resource and multiple methods&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Multiple target endpoints&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/DIV&gt;&lt;P&gt;&lt;FONT size="4"&gt;For demonstration purpose I will make use of Northwind API&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://services.odata.org/northwind/northwind.svc/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://services.odata.org/northwind/northwind.svc/&lt;/A&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;I will show you only masking and multiple resources with multiple methods type proxies for the sake of domonstration.&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Masking&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;DIV class=""&gt;Here you dont define any fixed resources, hence client can any resources with any methods.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_3-1746524788907.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258019i7B964AAE34DB5C8A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_3-1746524788907.png" alt="Muniyappan_3-1746524788907.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_4-1746524802479.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258020i1142A58A8B9B1D41/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_4-1746524802479.png" alt="Muniyappan_4-1746524802479.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_5-1746524811739.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258021iA101162E4EF93879/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_5-1746524811739.png" alt="Muniyappan_5-1746524811739.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/DIV&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Proxy with multiple resources and methods&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_6-1746524823581.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258022i9202D70D66C1C21E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_6-1746524823581.png" alt="Muniyappan_6-1746524823581.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;I have created proxy with two Resources paths called Customers and Products with various methods&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_7-1746524830948.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258023iD077E83E45BF926B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_7-1746524830948.png" alt="Muniyappan_7-1746524830948.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Custom Dashboard&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;Let us build custom Dashboard. First create custom view&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_0-1746530778972.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258083i719B64AC0BC7ECA2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_0-1746530778972.png" alt="Muniyappan_0-1746530778972.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_0-1746525179660.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258025i880FF9618BFCB3EE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_0-1746525179660.png" alt="Muniyappan_0-1746525179660.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;Create a Chart&lt;/SPAN&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_1-1746525200128.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258026iF75817C3704FB89C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_1-1746525200128.png" alt="Muniyappan_1-1746525200128.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_2-1746525214989.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258027i53254E61C8DF8151/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_2-1746525214989.png" alt="Muniyappan_2-1746525214989.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_3-1746525227438.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258028iA981B7368BE5F91D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_3-1746525227438.png" alt="Muniyappan_3-1746525227438.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;You can see your charts now.&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_0-1746525367133.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258029i7EFB58D5202B39EC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_0-1746525367133.png" alt="Muniyappan_0-1746525367133.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Testing&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let us use postman to trigger some API calls for monitoring.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_1-1746525398317.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258030iFD2E85A38D0455C3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_1-1746525398317.png" alt="Muniyappan_1-1746525398317.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_2-1746525415538.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258031i05AAA0E84FE5E82A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_2-1746525415538.png" alt="Muniyappan_2-1746525415538.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Monitoring&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;Let us navigate to Analyze —&amp;gt;Custom Dashboard&lt;/SPAN&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_0-1746525565989.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258032i5FD0AB75D48C5C89/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_0-1746525565989.png" alt="Muniyappan_0-1746525565989.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can select your proxy here if you see it, else make use of filter option to select the needed proxy&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_1-1746525578479.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258033i7075E3D1B9091D9A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_1-1746525578479.png" alt="Muniyappan_1-1746525578479.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;P&gt;Filter option—&amp;gt; We can add one or more filters&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_2-1746525593844.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258034i92126DD7C88260AC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_2-1746525593844.png" alt="Muniyappan_2-1746525593844.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;Let us select Masking Proxy and find out the calls details&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_3-1746525614034.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258035i57726C2093FA8C63/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_3-1746525614034.png" alt="Muniyappan_3-1746525614034.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;P&gt;You can select Get and see the response codes&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_4-1746525632677.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258036iB72A9152488BBE77/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_4-1746525632677.png" alt="Muniyappan_4-1746525632677.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;You can similarly monitor multiple resources with multiple methods proxy&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_5-1746525642420.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258037iF150B948CEA4312F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_5-1746525642420.png" alt="Muniyappan_5-1746525642420.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;References&lt;/DIV&gt;&lt;DIV class=""&gt;1.&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-api-logging-log-error-message-using-custom-charts/ba-p/13547402" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/sap-api-logging-log-error-message-using-custom-charts/ba-p/13547402&lt;/A&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;!--                        notionvc: 580d1def-3bfa-4398-a677-054c2d68f139                        --&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-apim-custom-dashboard-for-monitoring/ba-p/14094263"/>
    <published>2025-05-06T14:02:23.814000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-apim-external-logging-using-new-relic/ba-p/14088399</id>
    <title>SAP APIM external Logging using New Relic</title>
    <updated>2025-05-07T14:47:24.738000+02:00</updated>
    <author>
      <name>Muniyappan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/163801</uri>
    </author>
    <content>&lt;P&gt;In this blog, we'll dive into using Newrelic as an external logging server. Logging requests and responses is simple, and I'll guide you through logging all proxy exceptions to the Newrelic server.&lt;/P&gt;&lt;P&gt;I have used rest api call for sending the logs to new relic similar to&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/splunk-part-1-sap-apim-logging-monitoring/ba-p/13444151" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/splunk-part-1-sap-apim-logging-monitoring/ba-p/13444151&lt;/A&gt;&lt;/P&gt;&lt;P&gt;You can check here for payload format and limitations&amp;nbsp;&lt;A href="https://docs.newrelic.com/docs/logs/log-api/introduction-log-api/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://docs.newrelic.com/docs/logs/log-api/introduction-log-api/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Newrelic trial account setup&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;You can create new relic account here.&lt;A href="https://newrelic.com/welcome-back" target="_self" rel="noopener noreferrer nofollow"&gt;https://newrelic.com/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Create an application key&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_0-1745843724269.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/255572i54E6ACE7BB9777C3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_0-1745843724269.png" alt="Muniyappan_0-1745843724269.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_1-1745843760402.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/255573iB3665AA6283CB479/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_1-1745843760402.png" alt="Muniyappan_1-1745843760402.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Copy your and check the logging functionality by testing from postman. Url is different for US and EU. I am using EU url.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://docs.newrelic.com/docs/logs/log-api/introduction-log-api/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://docs.newrelic.com/docs/logs/log-api/introduction-log-api/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Curl&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl --location 'https://log-api.eu.newrelic.com/log/v1' \
--header 'Api-Key: YourKey' \
--header 'Content-Type: application/json' \
--data '{
    "message": "Postman Testing",
    "Proxyname": "SAP SCN Blogs",
    "level": "Error"
}'&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_0-1746539635441.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258131i4A7B8D74B53E0C24/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_0-1746539635441.png" alt="Muniyappan_0-1746539635441.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Message in Relic logs. Filter the mesasges logs based on the timeline. New Relic account setup is done and next is to send the logs from api proxy.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_1-1746539700451.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258133i77833866A0994680/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_1-1746539700451.png" alt="Muniyappan_1-1746539700451.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_2-1746539719218.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258134i8100A7D8C33495B5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_2-1746539719218.png" alt="Muniyappan_2-1746539719218.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;API Proxy Configuration&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For demonstration purposes, we will log only when there is an error during proxy execution. To achieve this, the policies are placed within the FaultRule. No condition is specified in the FaultRule, ensuring that the policies are triggered for all errors. Placing the policies inside the FaultRule allows us to perform specific actions when an exception occurs.&lt;/P&gt;&lt;P&gt;API has one policy in the pre flow that is verify API key. During testing we will try to call the API without API key to produce exception.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_0-1746535541594.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258105i1D5018A07872DD9E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_0-1746535541594.png" alt="Muniyappan_0-1746535541594.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Faultrule&lt;/FONT&gt;&lt;/STRONG&gt;&lt;BR /&gt;Two policies are created for sending the logs to Relic. You can attach these policies to any flow and delete it so that policies can be used only in faultrule. Make sure&amp;nbsp;&lt;STRONG&gt;continueOnError="true"&lt;/STRONG&gt; is set.&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Js script to format the log paylod.&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- this policy allows us to execute java script code during execution of an API Proxy --&amp;gt;
&amp;lt;Javascript async="false" continueOnError="true" enabled="true" timeLimit="200" xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;!-- contains reference to any library scripts that help the main code file --&amp;gt;

	&amp;lt;!-- contains the name of the main code file --&amp;gt;
	&amp;lt;ResourceURL&amp;gt;jsc://generateLoggingPayload.js&amp;lt;/ResourceURL&amp;gt;
&amp;lt;/Javascript&amp;gt; ​&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;var error_content = context.getVariable("error.content");
var proxy_name = context.getVariable("apiproxy.name");
var messageid = context.getVariable("messageid");
var response_content = context.getVariable("response.content");
var response_code = context.getVariable("error.status.code");
var request_method = context.getVariable("request.verb");
var state = context.getVariable("error.state");
var proxy_url = context.getVariable("request.uri");
var target_url = context.getVariable("request.url");
//
// Build the payload with the stringified input
var payload = {
    
   "message": proxy_name,
    "level": "Error",
    "error_content" : error_content,
    "messageid" : messageid,
    "response_content" : response_content,
    "response_code" : response_code,
    "method": request_method,
    "state":state,
    "proxy_url": proxy_url,
    "target_url" : target_url
    
};

// Set the stringified payload for New Relic
context.setVariable("newRelicPayload", JSON.stringify(payload));&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;ServiceCallout to make http api all to post payload&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- this policy lets you call to an external service from your API flow --&amp;gt;
&amp;lt;ServiceCallout async="true" continueOnError="true" enabled="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;
	&amp;lt;!-- The request that gets sent from the API proxy flow to the external service --&amp;gt;
&amp;lt;Request clearPayload="false" variable="newRelicRequest"&amp;gt;
        &amp;lt;Set&amp;gt;
            &amp;lt;Headers&amp;gt;
                &amp;lt;Header name="X-License-Key"&amp;gt;Your-API-Key&amp;lt;/Header&amp;gt;
                &amp;lt;Header name="Content-Type"&amp;gt;application/json&amp;lt;/Header&amp;gt;
            &amp;lt;/Headers&amp;gt;
         
           &amp;lt;Payload contentType="application/json"&amp;gt;{newRelicPayload}&amp;lt;/Payload&amp;gt;
            &amp;lt;Verb&amp;gt;POST&amp;lt;/Verb&amp;gt;
        &amp;lt;/Set&amp;gt;
    &amp;lt;/Request&amp;gt;
    &amp;lt;Response&amp;gt;newRelicResponse&amp;lt;/Response&amp;gt;
    &amp;lt;HTTPTargetConnection&amp;gt;
        &amp;lt;URL&amp;gt;https://log-api.eu.newrelic.com/log/v1&amp;lt;/URL&amp;gt;
    &amp;lt;/HTTPTargetConnection&amp;gt;
&amp;lt;/ServiceCallout&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Next we have to attach these two policies in the fault rule&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_1-1746535847561.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258106i7D526F20BE48C6B9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_1-1746535847561.png" alt="Muniyappan_1-1746535847561.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Unfortunately, we cannot attach any policy to a FaultRule using the UI. To add policies to a FaultRule manually, please follow the instructions provided in this blog&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-api-management-handling-faults-using-faultrules-and-defaultfaultrule/ba-p/13423702" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/sap-api-management-handling-faults-using-faultrules-and-defaultfaultrule/ba-p/13423702&lt;/A&gt;&lt;/P&gt;&lt;P&gt;We need to download proxy and unzip and edit the Proxyendpoint and Proxytargeendpoint xmls.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_0-1746617440714.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258438i1FDC373FFF0D8788/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_0-1746617440714.png" alt="Muniyappan_0-1746617440714.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;ProxyEndpoint&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&amp;gt;
&amp;lt;ProxyEndPoint default="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;
    &amp;lt;name&amp;gt;default&amp;lt;/name&amp;gt;
    &amp;lt;base_path&amp;gt;/nortwind/Products&amp;lt;/base_path&amp;gt;
    &amp;lt;properties/&amp;gt;
    &amp;lt;routeRules&amp;gt;
        &amp;lt;routeRule&amp;gt;
            &amp;lt;name&amp;gt;default&amp;lt;/name&amp;gt;
            &amp;lt;targetEndPointName&amp;gt;default&amp;lt;/targetEndPointName&amp;gt;
            &amp;lt;sequence&amp;gt;1&amp;lt;/sequence&amp;gt;
            &amp;lt;faultRules/&amp;gt;
        &amp;lt;/routeRule&amp;gt;
    &amp;lt;/routeRules&amp;gt;
    &amp;lt;faultRules&amp;gt;
        &amp;lt;faultRule&amp;gt;
            &amp;lt;name&amp;gt;LogErrors&amp;lt;/name&amp;gt;
            &amp;lt;condition&amp;gt;&amp;lt;/condition&amp;gt;
            &amp;lt;steps&amp;gt;
                &amp;lt;step&amp;gt;
                    &amp;lt;policy_name&amp;gt;generateLoggingPayload&amp;lt;/policy_name&amp;gt;
                    &amp;lt;condition&amp;gt; &amp;lt;/condition&amp;gt;
                    &amp;lt;sequence&amp;gt;1&amp;lt;/sequence&amp;gt;
                &amp;lt;/step&amp;gt;
                &amp;lt;step&amp;gt;
                    &amp;lt;policy_name&amp;gt;sendLogsRelic&amp;lt;/policy_name&amp;gt;
                    &amp;lt;condition&amp;gt; &amp;lt;/condition&amp;gt;
                    &amp;lt;sequence&amp;gt;2&amp;lt;/sequence&amp;gt;
                &amp;lt;/step&amp;gt;
            &amp;lt;/steps&amp;gt;
        &amp;lt;/faultRule&amp;gt;
    &amp;lt;/faultRules&amp;gt;
    &amp;lt;preFlow&amp;gt;
        &amp;lt;name&amp;gt;PreFlow&amp;lt;/name&amp;gt;
        &amp;lt;request&amp;gt;
            &amp;lt;isRequest&amp;gt;true&amp;lt;/isRequest&amp;gt;
            &amp;lt;steps&amp;gt;
                &amp;lt;step&amp;gt;
                    &amp;lt;policy_name&amp;gt;verifyAPIKey&amp;lt;/policy_name&amp;gt;
                    &amp;lt;condition&amp;gt;&amp;lt;/condition&amp;gt;
                    &amp;lt;sequence&amp;gt;1&amp;lt;/sequence&amp;gt;
                &amp;lt;/step&amp;gt;
            &amp;lt;/steps&amp;gt;
        &amp;lt;/request&amp;gt;
    &amp;lt;/preFlow&amp;gt;
    &amp;lt;postFlow&amp;gt;
        &amp;lt;name&amp;gt;PostFlow&amp;lt;/name&amp;gt;
    &amp;lt;/postFlow&amp;gt;
    &amp;lt;conditionalFlows/&amp;gt;
&amp;lt;/ProxyEndPoint&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;TargetEndPoint xml configuration.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&amp;gt;
&amp;lt;TargetEndPoint xmlns="http://www.sap.com/apimgmt"&amp;gt;
    &amp;lt;name&amp;gt;default&amp;lt;/name&amp;gt;
    &amp;lt;url&amp;gt;https://services.odata.org/northwind/northwind.svc/Productss&amp;lt;/url&amp;gt;
    &amp;lt;provider_id&amp;gt;NONE&amp;lt;/provider_id&amp;gt;
    &amp;lt;additionalAPIProviders/&amp;gt;
    &amp;lt;isDefault&amp;gt;true&amp;lt;/isDefault&amp;gt;
    &amp;lt;properties/&amp;gt;
    &amp;lt;faultRules&amp;gt;
        &amp;lt;faultRule&amp;gt;
            &amp;lt;name&amp;gt;LogErrors&amp;lt;/name&amp;gt;
            &amp;lt;condition&amp;gt;&amp;lt;/condition&amp;gt;
            &amp;lt;steps&amp;gt;
                &amp;lt;step&amp;gt;
                    &amp;lt;policy_name&amp;gt;sendLogsRelic&amp;lt;/policy_name&amp;gt;
                    &amp;lt;condition&amp;gt; &amp;lt;/condition&amp;gt;
                    &amp;lt;sequence&amp;gt;2&amp;lt;/sequence&amp;gt;
                &amp;lt;/step&amp;gt;
                &amp;lt;step&amp;gt;
                    &amp;lt;policy_name&amp;gt;generateLoggingPayload&amp;lt;/policy_name&amp;gt;
                    &amp;lt;condition&amp;gt; &amp;lt;/condition&amp;gt;
                    &amp;lt;sequence&amp;gt;1&amp;lt;/sequence&amp;gt;
                &amp;lt;/step&amp;gt;
            &amp;lt;/steps&amp;gt;
        &amp;lt;/faultRule&amp;gt;
    &amp;lt;/faultRules&amp;gt;
    &amp;lt;preFlow&amp;gt;
        &amp;lt;name&amp;gt;PreFlow&amp;lt;/name&amp;gt;
        &amp;lt;request&amp;gt;
            &amp;lt;isRequest&amp;gt;true&amp;lt;/isRequest&amp;gt;
            &amp;lt;steps/&amp;gt;
        &amp;lt;/request&amp;gt;
    &amp;lt;/preFlow&amp;gt;
    &amp;lt;postFlow&amp;gt;
        &amp;lt;name&amp;gt;PostFlow&amp;lt;/name&amp;gt;
    &amp;lt;/postFlow&amp;gt;
    &amp;lt;conditionalFlows/&amp;gt;
    &amp;lt;loadBalancerConfigurations&amp;gt;
        &amp;lt;isRetry&amp;gt;false&amp;lt;/isRetry&amp;gt;
        &amp;lt;healthMonitor&amp;gt;
            &amp;lt;isEnabled&amp;gt;false&amp;lt;/isEnabled&amp;gt;
        &amp;lt;/healthMonitor&amp;gt;
    &amp;lt;/loadBalancerConfigurations&amp;gt;
&amp;lt;/TargetEndPoint&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you are using mac or linux, use this command for zipping the proxy.&amp;nbsp;&lt;A href="https://docs.apigee.com/api-platform/reference/api-proxy-configuration-reference" target="_blank" rel="noopener nofollow noreferrer"&gt;https://docs.apigee.com/api-platform/reference/api-proxy-configuration-reference&lt;/A&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;zip my-new-proxy.zip -r .&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;After making the necessary changes, compress the files into a ZIP archive and re-import them into the proxy.&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Testing&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;APIProxyEndpointError&lt;/P&gt;&lt;P&gt;Send reqeust without Api key to produce APIProxyend errors.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_1-1746622510265.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258458iD5701804053ED55E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_1-1746622510265.png" alt="Muniyappan_1-1746622510265.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Logs&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_1-1746618687116.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258441iECF2888A6A01B520/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_1-1746618687116.png" alt="Muniyappan_1-1746618687116.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;APITargetEndpointError&lt;/P&gt;&lt;P&gt;add wrong url to produce proxy endpoint errors.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_0-1746616836482.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258434iE762B30341D03573/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_0-1746616836482.png" alt="Muniyappan_0-1746616836482.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_0-1746622465402.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258457i7DB03A7025E2B32F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_0-1746622465402.png" alt="Muniyappan_0-1746622465402.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Muniyappan_0-1746618660462.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/258440i17B8CAE008E937F6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Muniyappan_0-1746618660462.png" alt="Muniyappan_0-1746618660462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;You can try out this approach and check if this can fulfil into your needs.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Also, if you look closely at the error details, the error appears in SAP API Management and is also available on the client side. If the client system is already logging the errors, then there's no need to perform logging in API Management, as it would be a duplication of effort. So avoid duplicate logging.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Relic has limitations regarding payload size; therefore, it's important to consider this when sending request and response payloads&lt;/P&gt;&lt;P&gt;API proxy file is kept here&amp;nbsp;&lt;A href="https://github.com/user18283/sap-blogs/tree/main/apim/Northwind_Product_SCN_Blog" target="_blank" rel="nofollow noopener noreferrer"&gt;https://github.com/user18283/sap-blogs/tree/main/apim/Northwind_Product_SCN_Blog&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;References&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/sap-api-management/sap-api-management/variable-references?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/sap-api-management/sap-api-management/variable-references?version=Cloud&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-apim-external-logging-using-new-relic/ba-p/14088399"/>
    <published>2025-05-07T14:47:24.738000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/developer-hub-now-displays-swagger-security-definitions/ba-p/14098607</id>
    <title>Developer Hub Now Displays Swagger Security Definitions</title>
    <updated>2025-05-12T06:45:06.761000+02:00</updated>
    <author>
      <name>Nyna_Rao</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/177690</uri>
    </author>
    <content>&lt;P&gt;SAP API Management is a comprehensive solution that facilitates the effective management and integration of APIs across various systems and applications. One of the most valuable assets within SAP API Management is the Developer Hub, a centralized catalog of APIs and Events that has previously been known as API Business Hub Enterprise. Developer Hub serves as a marketplace where organizations can publish their APIs, making them easily discoverable and accessible to developers worldwide. Today, we are excited to announce a significant enhancement that further bolsters the Developer Hub’s capabilities: the rendering of security definitions in the Swagger renderer of the API references.&lt;/P&gt;&lt;H1 id="toc-hId-1581199218"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-1384685713"&gt;What is Developer Hub?&lt;/H1&gt;&lt;P&gt;For those unfamiliar, Developer Hub is a one-stop catalog offering from SAP API Management, where application developers can discover, search for, and consume APIs published by the organization.It provides a comprehensive list of APIs and Events, along with detailed documentation and code examples, enabling developers to seamlessly integrate different systems and applications.&lt;/P&gt;&lt;H1 id="toc-hId-1188172208"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-991658703"&gt;Introducing Security Definitions in Swagger&lt;/H1&gt;&lt;P&gt;Swagger, now known as the OpenAPI Specification, is a broadly adopted standard for defining and documenting RESTful APIs. It not only simplifies API documentation but also makes it easier for developers to understand and integrate APIs into their applications. With the latest enhancement, the Developer Hub now renders security definitions directly within the Swagger renderer of the API references.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nyna_Rao_0-1747024880499.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259888i866718311200A08C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Nyna_Rao_0-1747024880499.png" alt="Nyna_Rao_0-1747024880499.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-795145198"&gt;Why This Enhancement Matters?&lt;/H1&gt;&lt;H2 id="toc-hId-727714412"&gt;1. Enhanced Security Transparency&lt;/H2&gt;&lt;P&gt;One of the primary benefits of rendering security definitions within the Swagger renderer is the increased transparency it provides. Developers can now easily view the security requirements and authentication mechanisms directly within the API documentation. This clarity reduces the risk of misunderstandings and ensures that developers are aware of the security protocols they need to comply with.&lt;/P&gt;&lt;H2 id="toc-hId-531200907"&gt;2. Streamlined Development Process&lt;/H2&gt;&lt;P&gt;By integrating security details into the Swagger renderer, developers no longer need to toggle between different documentation resources to understand the security requirements. Everything they need is consolidated in one place, streamlining the development process and saving valuable time.&lt;/P&gt;&lt;H2 id="toc-hId-334687402"&gt;3. Easy Generation of OAuth Tokens&lt;/H2&gt;&lt;P&gt;The enhanced Swagger renderer in the Developer Hub now supports the easy generation of OAuth tokens without the need to use other applications like Postman. This simplifies the authentication process and enables developers to quickly test and validate API calls, thereby speeding up the development cycle.&lt;/P&gt;&lt;H1 id="toc-hId-9091178"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId--187422327"&gt;Current Limitations&lt;/H1&gt;&lt;P&gt;It is important to note that the rendering of security definitions in the Swagger renderer in Developer Hub is currently supported only at the root level and not at the individual resource levels. While this limitation exists, we are actively working to expand this functionality to cover resource-level security definitions in future updates.&lt;/P&gt;&lt;H1 id="toc-hId-385804251"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-189290746"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;The enhancement of rendering security definitions in the Swagger renderer is a testament to SAP’s commitment to continuously improving the Developer Hub and the overall integration experience. By making security information more accessible and transparent, SAP not only simplifies the development process but also ensures that integrated solutions are secure and compliant with best practices.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Stay tuned for more updates and enhancements as we continue to evolve the SAP API Management to better serve the needs of developers and enterprises alike. Happy integrating!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/developer-hub-now-displays-swagger-security-definitions/ba-p/14098607"/>
    <published>2025-05-12T06:45:06.761000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/the-apiverse-developer-hub-now-renders-swagger-security/ba-p/14098618</id>
    <title>The APIVERSE – Developer Hub Now Renders Swagger Security!</title>
    <updated>2025-05-12T07:14:32.250000+02:00</updated>
    <author>
      <name>Kasturi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/25297</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;The OpenAPI Specification has become the go-to way to describe and document RESTful APIs. It eliminates the guesswork in API integration, making life a lot easier for developers. With the latest upgrade, Developer Hub in SAP Integration Suite now displays security definitions directly within the Swagger view—no more searching, no hassle—just everything you need in one place, making it much easier for developers to work with APIs. For more insights, check out the blog: &lt;A class="" title="https://community.sap.com/t5/technology-blog-posts-by-sap/developer-hub-now-displays-swagger-security-definitions/ba-p/14098607" href="https://community.sap.com/t5/technology-blog-posts-by-sap/developer-hub-now-displays-swagger-security-definitions/ba-p/14098607" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/developer-hub-now-displays-swagger-security-definitions/ba-p/14098607&lt;/A&gt;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Slide1.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259892i8DC3CA4F0A802A0A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Slide1.JPG" alt="Slide1.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/the-apiverse-developer-hub-now-renders-swagger-security/ba-p/14098618"/>
    <published>2025-05-12T07:14:32.250000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/mitigating-owasp-and-other-api-security-threats-with-sap-integration-suite/ba-p/14105741</id>
    <title>Mitigating OWASP and Other API Security Threats with SAP Integration Suite, API Management</title>
    <updated>2025-05-19T17:58:09.518000+02:00</updated>
    <author>
      <name>Chaim_Bendelac</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/194397</uri>
    </author>
    <content>&lt;P&gt;Hello everybody,&lt;/P&gt;&lt;P&gt;APIs power seamless integration and driving innovative, AI-driven workflows. Unfortunately, this role also casts APIs as prime targets for a growing number of security threats. For API administrators, understanding and effectively mitigating these risks is paramount, and this topic regularly comes up in conversations with our customers.&lt;/P&gt;&lt;P&gt;That's why I'm thrilled to announce our new security guide: &lt;STRONG&gt;"&lt;/STRONG&gt;&lt;EM&gt;Mitigating OWASP and other API Security Threats with SAP Integration Suite, API Management&lt;/EM&gt;."&lt;/P&gt;&lt;P&gt;This 30-page guide is specifically designed for API Administrators with a working knowledge of security principles and who would like to leverage the power of SAP Integration Suite, API Management.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why is this guide relevant to you?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As organizations increasingly rely on APIs, the API Management capability within SAP Integration Suite emerges as a critical shield, offering tools and techniques to govern, monitor, and crucially, &lt;EM&gt;secure&lt;/EM&gt; your API ecosystem. This guide dives deep into how you can harness the built-in policies of API Management to effectively address prevalent security threats.&lt;/P&gt;&lt;P&gt;Inside this guide, you'll discover strategies to mitigate:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Lack of Security Awareness:&lt;/STRONG&gt; Understand the critical API risks and how API Management best practices can enhance your security posture.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Forbidden Traffic:&lt;/STRONG&gt; Learn how to prevent unwanted access and resource consumption using API Management policies.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Unauthorized Access:&lt;/STRONG&gt; Explore robust techniques for authentication and authorization to ensure only legitimate entities can access your APIs.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Input Attacks:&lt;/STRONG&gt; Discover how to leverage API Management to defend against injections, cross-site scripting, and other malicious input manipulations.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data Exposure:&lt;/STRONG&gt; Implement measures within API Management to prevent the leakage of sensitive information.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We closely align with the renowned &lt;STRONG&gt;OWASP Top 10 API&lt;/STRONG&gt; and other significant security risks, providing practical guidance on how to apply API Management policies to counter these threats. While OWASP offers a valuable framework, this guide also emphasizes a broader perspective on essential security principles.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Here's a peek at the table of contents:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Introduction&lt;/LI&gt;&lt;LI&gt;The role of API Management&lt;/LI&gt;&lt;LI&gt;Lack of security awareness&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;OWASP-8: Security Misconfiguration&lt;/LI&gt;&lt;LI&gt;OWASP-9 Improper Inventory Management&lt;/LI&gt;&lt;LI&gt;Insufficient Logging &amp;amp; Monitoring (OWASP-10 2019)&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;Forbidden traffic&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;OWASP-4 Unrestricted Resource consumption&lt;/LI&gt;&lt;LI&gt;Man-in-the-middle&lt;/LI&gt;&lt;LI&gt;OWASP-6 Unrestricted Access, e.g., with forbidden origin&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;Unauthorized Access&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;OWASP-2: Broken Authentication&lt;/LI&gt;&lt;LI&gt;OWASP-1: Broken Object Level Authorization&lt;/LI&gt;&lt;LI&gt;OWASP-5: Broken Function Level Authorization&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;Input attacks&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Injections (OWASP-8 2019)&lt;/LI&gt;&lt;LI&gt;Remote File Inclusion (RFI)&lt;/LI&gt;&lt;LI&gt;Mass Assignment (OWASP-6 2019)&lt;/LI&gt;&lt;LI&gt;Web policy violation&lt;/LI&gt;&lt;LI&gt;Cross-Site request Forgery (CSRF)&lt;/LI&gt;&lt;LI&gt;Cross-Site Scripting (XSS)&lt;/LI&gt;&lt;LI&gt;OWASP-7: Server-side request forgery (SSRF)&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;Data Exposure&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Sensitive Data Exposure (OWASP-3 2019)&lt;/LI&gt;&lt;LI&gt;Excessive Data exposure (OData $batch)&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;Appendix: Sample OAS validation policy&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;We provide a structured approach to identifying relevant security risks and offer actionable insights into leveraging the built-in security policies of SAP Integration Suite, API Management, to mitigate them effectively.&lt;/P&gt;&lt;P&gt;Here is the &lt;A href="https://d.dam.sap.com/a/P1Msqu1/SAP%20APIM%20support%20for%20OWASP%20API%20threats.pdf?rc=10&amp;amp;inline=true&amp;amp;doi=SAP1205573" target="_blank" rel="noopener noreferrer"&gt;link&lt;/A&gt; to the downloadable guide.&lt;/P&gt;&lt;P&gt;I recommend this guide to all API Administrators working with SAP Integration Suite. By understanding the principles and applying the techniques outlined, you can significantly strengthen your API ecosystem against a wide range of security threats.&lt;/P&gt;&lt;P&gt;Happy reading &lt;span class="lia-unicode-emoji" title=":grinning_face:"&gt;😀&lt;/span&gt;!&lt;BR /&gt;--&lt;BR /&gt;Chaim&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/mitigating-owasp-and-other-api-security-threats-with-sap-integration-suite/ba-p/14105741"/>
    <published>2025-05-19T17:58:09.518000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-%E5%88%86%E6%9E%90%E4%BA%91%E5%BB%BA%E6%A8%A1%E6%89%A9%E5%B1%95%E4%B8%8E%E9%9B%86%E6%88%90-2025-%E5%B9%B4-qrc2-%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E5%86%85%E5%AE%B9/ba-p/14108577</id>
    <title>SAP 分析云建模扩展与集成 2025 年 QRC2 版本更新内容</title>
    <updated>2025-05-22T04:24:08.791000+02:00</updated>
    <author>
      <name>mike688</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1921121</uri>
    </author>
    <content>&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_0-1747879119788.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264652iC0D4F61BA668043A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_0-1747879119788.png" alt="mike688_0-1747879119788.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;目的&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;亲爱的SAP社区同事们：&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;在2025年QRC2版本中，SAP 分析云的“建模”中推出了一系列令人兴奋的新功能，现已正式上线！&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;概览&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;了解更多新功能详情：&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;用户管理的单位换算&lt;/LI&gt;&lt;LI&gt;货币汇率表迁移到文件资源库&lt;/LI&gt;&lt;LI&gt;数据导入API——允许导入和API访问切换&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4" color="#800080"&gt;1. 用户管理的单位换算&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;标准单位换算功能已得到增强，允许用户在“标准单位表”中创建、编辑或删除单位和单位组。&lt;/P&gt;&lt;P&gt;新的“单位说明表”使得单位在SAP 分析云的其他功能（如图表和表格）中能够以更有意义的方式显示。该表还支持多达40种语言的单位语言转换。请参阅SAP Note &lt;A href="https://i7p.wdf.sap.corp/sap(bD1lbiZjPTAwMQ==)/bc/bsp/sno/ui_entry/entry.htm?param=69765F6D6F64653D3030312669765F7361706E6F7465735F6E756D6265723D3335333137313126" target="_self" rel="nofollow noopener noreferrer"&gt;3531711 - SAP 分析云中标准单位换算支持的语言&lt;/A&gt;列表，了解其所支持的语言。&lt;/P&gt;&lt;P&gt;“标准单位表”和“单位说明表”可以通过建模器的“换算”选项卡访问。&lt;/P&gt;&lt;P&gt;扩展的数据导出和数据导入 API 支持此自定义单位功能，以便于更新后端中的单位表。&lt;/P&gt;&lt;P&gt;自定义单位也可以由拥有 Datasphere 工作区的 SAC 建模人员和计划人员维护。&lt;/P&gt;&lt;P&gt;查看我们新的&lt;A href="https://education.hana.ondemand.com/education/wa/s4/index.html?library=library.txt&amp;amp;show=book!BO_6A2F6FCD1AF9F996#slide!SL_3DD32A89C2D4029C" target="_self" rel="nofollow noopener noreferrer"&gt;标准单位换算教程&lt;/A&gt;，了解如何在 SAP 分析云中创建单位换算度量。&lt;/P&gt;&lt;P&gt;&lt;A href="https://education.hana.ondemand.com/education/pub/s4/index.html?show=project!PR_B65B8B27B99BD7A2:uebung#2" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_7-1747879756030.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264663iE3662EE7AEB11E5E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_7-1747879756030.png" alt="mike688_7-1747879756030.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#808080"&gt;&lt;EM&gt;&lt;FONT size="2"&gt;单位换算教程&lt;/FONT&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;要了解在SAP 分析云中设置和创建单位换算的完整工作流程，请参考Amanda的“&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/working-with-unit-conversion-in-sap-analytics-cloud/ba-p/13989927" target="_self"&gt;在SAP 分析云中使用单位换算&lt;/A&gt;”博客。&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4" color="#800080"&gt;2. 货币汇率表迁移到文件资源库&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;货币汇率表已集成到 SAP 分析云的文件资源库区域。&lt;/P&gt;&lt;P&gt;以下部分概述了在使用货币汇率表时可以看到的更改的位置。&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;EM&gt;&lt;FONT color="#008000"&gt;货币与我的文件&lt;/FONT&gt;&lt;/EM&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;现在可以创建并将货币汇率表保存到文件资源库中，这些文件夹可以在“我的文件”中看到。&lt;/P&gt;&lt;P&gt;在这里，也可以根据需要选择、移动、更改授权或删除货币汇率表。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_1-1747879179894.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264654iF609BA1217226406/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_1-1747879179894.png" alt="mike688_1-1747879179894.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#808080"&gt;&lt;EM&gt;&lt;FONT size="2"&gt;从“我的文件”导航到“货币换算”&lt;/FONT&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;现有的货币汇率表可以在“文件/我的文件/公用/ Currency Conversions”文件夹中找到。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_2-1747879191934.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264655i2B579ED23CE9A0F6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_2-1747879191934.png" alt="mike688_2-1747879191934.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2" color="#808080"&gt;&lt;EM&gt;迁移后的货币汇率表文件夹&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;EM&gt;&lt;U&gt;货币与换算选项卡&lt;/U&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;在“建模器”的“换算”选项卡中，列出了最近使用的货币汇率表及其文件夹结构位置。&lt;/P&gt;&lt;P&gt;保存新创建的表时，会提供一个导航面板，供您选择要将货币汇率表保存到何处。&lt;/P&gt;&lt;P&gt;这包括为具有相关权限的用户保存到 Datasphere 中的工作区。&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;U&gt;&lt;FONT color="#008000"&gt;货币和导入数据/计划作业&lt;/FONT&gt;&lt;/U&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;您仍然可以使用“导入”按钮将货币数据从文件或远程数据源导入到汇率表中。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_3-1747879214409.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264656iDE52854C23E1AA89/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_3-1747879214409.png" alt="mike688_3-1747879214409.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;可以从远程数据源（例如从 BPC、Google Drive、HANA 或 BW）导入作业，并且可以在货币汇率表的数据管理工作区中进行查看和计划。&lt;/P&gt;&lt;P&gt;可以从下拉菜单中选择一个汇率表，该菜单包括其目录结构或Datasphere工作区位置。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_4-1747879229222.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264657i03A101DF2E9CF8B7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_4-1747879229222.png" alt="mike688_4-1747879229222.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;FONT size="2" color="#808080"&gt;从首选位置选择货币汇率表&lt;/FONT&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;EM&gt;&lt;U&gt;货币与 BPC&lt;/U&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;BPC 的工作流程已更改。已移除“使用BPC创建货币汇率表”选项。用户应创建并保存其货币汇率表，然后使用导入按钮从 BPC 导入数据。BPC现在与其他货币数据源工作流流程相同。&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;U&gt;&lt;FONT color="#008000"&gt;模型中的货币&lt;/FONT&gt;&lt;/U&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;在模型的“模型首选项”部分中，在“货币换算”设置中选择货币汇率表时，会显示货币汇率表名称及其目录结构位置。&lt;/P&gt;&lt;P&gt;货币换算度量的创建保持不变。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_5-1747879243868.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264658i19DD28F76182DB09/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_5-1747879243868.png" alt="mike688_5-1747879243868.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2" color="#808080"&gt;&lt;EM&gt;从模型首选项选择货币汇率表&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;U&gt;&lt;FONT color="#008000"&gt;货币与安全&lt;/FONT&gt;&lt;/U&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;在“安全/角色”中，货币不再显示一个下拉箭头来列出所有货币汇率表。可以通过角色为所有汇率表分配读取权限。&lt;/P&gt;&lt;P&gt;在“安全/团队”中，作为迁移过程的一部分，新的汇率角色（RateRoles）已自动创建。根据用户在其租户上分配的现有角色，用户将自动包含在这些角色中。例如，具有BI_Content_Creator角色的用户将自动分配到RateRole_BI_Content_Creator团队。&lt;/P&gt;&lt;P&gt;可以进一步从“我的文件”管理个别汇率表的权限。&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;U&gt;&lt;FONT color="#008000"&gt;货币与传输&lt;/FONT&gt;&lt;/U&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;在SAP 分析云的“传输”部分，用户现在可以在导出和导入功能的公用文件夹中查看货币汇率表。&lt;/P&gt;&lt;P&gt;用户也可以单独导出或导入这些表，为用户提供了更多的灵活性。&lt;/P&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;EM&gt;&lt;U&gt;货币换算性能提升&lt;/U&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;在将源货币单位换算为目标货币单位时，性能也得到了改进，2025年还将计划进一步优化。&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;U&gt;&lt;FONT color="#008000"&gt;货币汇率表与Datasphere&lt;/FONT&gt;&lt;/U&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;我们继续投资 SAP Datasphere 无缝集成计划。新创建的货币汇率表可以保存到Datasphere工作区中建模者或计划人员偏好的文件夹中。&lt;/P&gt;&lt;P&gt;当具有Datasphere访问权限的SAP 分析云用户遇到Datasphere工作区被锁定时，将无法更新该工作区内的任何货币汇率表，直到工作区解锁。&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4" color="#800080"&gt;3. 数据导入API——允许通过API进行导入&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;迄今为止，数据导入API可以通过2-legged（机器对机器）或3-legged（授权用户）连接将数据导入任何模型，没有任何限制。&lt;/P&gt;&lt;P&gt;通过在模型中引入“支持通过数据导入 API 进行导入”复选框，现在可以控制在使用数据导入API时是否可以将数据导入到特定模型。这种控制也可以应用于存储在Datasphere工作区环境中的SAP分析云模型。&lt;/P&gt;&lt;P&gt;在模型首选项“访问权限和隐私”部分中，现在有一个名为“支持通过数据导入 API 进行导入”的新选项。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_6-1747879265734.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/264659i7BCC229856B43E44/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_6-1747879265734.png" alt="mike688_6-1747879265734.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2"&gt;&lt;EM&gt;&lt;FONT color="#808080"&gt;选中复选框以允许通过数据导入API导入数据&lt;/FONT&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;当复选框被选中时，允许通过数据导入API导入数据；当复选框未被选中时，限制导入。&lt;/P&gt;&lt;P&gt;如果用户在未选中API选项的情况下尝试执行导入操作，将返回一条提示消息，提示该模型被限制导入。&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;结论&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;总结来说，作为2025年QRC2版本的一部分，SAP 分析云的建模扩展与集成领域引入了以下新功能和更新。&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;随着“用户管理”的单位换算功能的推出，客户可以在“标准单位表”和“单位说明表”中管理自己的自定义单位和单位组。支持多达40种语言的单位翻译。对于使用Datasphere工作区的客户，也提供了单位处理的支持。&lt;/LI&gt;&lt;LI&gt;客户可以管理其货币汇率表的首选项和授权，包括保存到 Datasphere 工作区。迁移后的表位于/我的文件/公用/ Currency Conversions。&lt;/LI&gt;&lt;LI&gt;现在，客户可以通过在模型偏好设置中选择“支持通过数据导入 API 进行导入”选项，来管理特定模型（包括存储在Datasphere工作区中的模型）的数据导入。&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;如果您有任何疑问，请随时在下方留言或在我们的&lt;A href="https://pages.community.sap.com/topics/cloud-analytics?ct=qa&amp;amp;lng=en&amp;amp;tab=content" target="_self" rel="noopener noreferrer"&gt;SAP 分析云问答论坛&lt;/A&gt;中提问。&lt;/P&gt;&lt;P&gt;如果您想了解更多关于FastTrack和季度发布周期（QRC）发布的信息，请查看这篇&lt;A href="https://userapps.support.sap.com/sap/support/knowledge/E/2728183" target="_self" rel="noopener noreferrer"&gt;SAP知识库文章&lt;/A&gt;。&lt;/P&gt;&lt;P&gt;如需进一步了解，请访问我们的&lt;A href="https://pages.community.sap.com/topics/cloud-analytics?ct=qa&amp;amp;lng=en&amp;amp;tab=content" target="_self" rel="noopener noreferrer"&gt;SAP 分析云社区&lt;/A&gt;页面，以获取更多产品信息、最佳实践等内容。&lt;/P&gt;&lt;P&gt;关于QRC发布日期的更多信息，请参阅&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-analytics-cloud-tenants-on-quarterly-release-cycle-qrc-updates-in-2025/ba-p/14000629" target="_self"&gt;2025年SAP分析云季度发布周期（QRC）更新&lt;/A&gt;。&lt;/P&gt;&lt;P&gt;查看我们的&lt;A href="https://roadmaps.sap.com/board?PRODUCT=67838200100800006884&amp;amp;amp;range=CURRENT-LAST&amp;amp;range=CURRENT-LAST#Q2%202025" target="_self" rel="noopener noreferrer"&gt;SAP产品路线图&lt;/A&gt;，以了解SAP 分析云的更多即将推出的功能。&lt;/P&gt;&lt;P&gt;感谢您的阅读！&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;原文作者：Amanda&lt;/P&gt;&lt;P&gt;原文链接：&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-analytics-cloud-modeling-extensions-amp-integration-qrc2/ba-p/14028056" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-analytics-cloud-modeling-extensions-amp-integration-qrc2/ba-p/14028056&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-%E5%88%86%E6%9E%90%E4%BA%91%E5%BB%BA%E6%A8%A1%E6%89%A9%E5%B1%95%E4%B8%8E%E9%9B%86%E6%88%90-2025-%E5%B9%B4-qrc2-%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E5%86%85%E5%AE%B9/ba-p/14108577"/>
    <published>2025-05-22T04:24:08.791000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-basic-trial/ba-p/14112484</id>
    <title>SAP Integration Suite Basic Trial</title>
    <updated>2025-05-27T16:41:46.615000+02:00</updated>
    <author>
      <name>chris_bezuidenhout2</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/182811</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1731342497"&gt;&lt;STRONG&gt;Ready to Transform Your Integration Strategy?&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Kick off your &lt;STRONG&gt;30-day SAP Integration Suite Basic Trial&lt;/STRONG&gt; and follow our step-by-step guide to seamlessly connect your hybrid landscape—including &lt;STRONG&gt;SAP S/4HANA Cloud&lt;/STRONG&gt; and 3rd-party cloud-based databases.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Build a Digital Integration Hub on SAP Business Technology Platform (BTP)&lt;/LI&gt;&lt;LI&gt;Leverage advanced integration services to unify diverse systems&lt;/LI&gt;&lt;LI&gt;Apply the &lt;STRONG&gt;Integration Solution Advisory Methodology (ISAM)&lt;/STRONG&gt; to model, manage, and adapt APIs with ease&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With clear, guided instructions, you’ll experience how to streamline application, data, and process integration across your ecosystem.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Sign up for a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform/integration-suite/trial.html" target="_self" rel="noreferrer noopener"&gt;free Basic Trial&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and follow the easy registration steps.&lt;/LI&gt;&lt;LI&gt;Access the guided workbook to walk through real-world use cases.&lt;/LI&gt;&lt;LI&gt;Publish applications and test APIs in &lt;STRONG&gt;SAP Developer Hub&lt;/STRONG&gt; .&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-1663911711"&gt;The architecture&lt;/H3&gt;&lt;P&gt;The architecture is designed to retrieve and consolidate maintenance orders associated with products that have been purchased. The overall objective is to enable a unified view of maintenance obligations linked to each product, regardless of the system in which they were generated or processed.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Source System - SAP S/4HANA Cloud Public Edition. Product purchase orders are initially processed within SAP S/4HANA Cloud Public Edition.&lt;/LI&gt;&lt;LI&gt;PostgreSQL Application Database -&amp;nbsp;Maintenance Data&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Architecture.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266378i1EFCC7096D88DBBF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Architecture.png" alt="Architecture.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The step-by-step guide covers the following important topics:&lt;/P&gt;&lt;H3 id="toc-hId-1467398206"&gt;&lt;STRONG&gt;Integration Assessment Overview&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Implement the Integration Solution Advisory Methodology to support the definition of the integration landscape. It helps to define integration patterns and to ensure consistent usage of the integration technology. Integration Assessment provides users with a guided approach to assess their integration strategy and recommends the appropriate technologies for their business.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Assesment_process_1.png" style="width: 384px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266371iC46E824F67B25A4F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Assesment_process_1.png" alt="Assesment_process_1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1270884701"&gt;&lt;STRONG&gt;Create the integration flow&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Implement an integration flow that maps sales orders from SAP S4/HANA Cloud with maintenance orders from a cloud based maintenance order database&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chap_1_IFlowCompleteImport_10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266386i016C85FEF3194A46/image-size/large?v=v2&amp;amp;px=999" role="button" title="Chap_1_IFlowCompleteImport_10.png" alt="Chap_1_IFlowCompleteImport_10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1074371196"&gt;Create and deploy API&lt;/H3&gt;&lt;DIV class=""&gt;Publish, promote, and oversee APIs in a secure and scalable environment with SAP API Management. During the unit, you will secure and publish an API. This API can then be used by any developer - internal or external - in a secure way, to build integrations or applications.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chap_3_APIConfig022_1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266401i0FDCF56D4037BD0C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Chap_3_APIConfig022_1.png" alt="Chap_3_APIConfig022_1.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;Use SAP Developers Hub:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chap_3_APIConfig044.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266402i5F1CEA8A385531C9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Chap_3_APIConfig044.png" alt="Chap_3_APIConfig044.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement Application Key policies:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chap_3_APIConfig050.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266403i8DF13CC07D1C48FD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Chap_3_APIConfig050.png" alt="Chap_3_APIConfig050.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-877857691"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-681344186"&gt;Test you application deployment&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chap_3_APIConfig051_1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266405iE346AD25563EEA86/image-size/large?v=v2&amp;amp;px=999" role="button" title="Chap_3_APIConfig051_1.png" alt="Chap_3_APIConfig051_1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chap_3_APIConfig052_1.png" style="width: 957px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266406i14B61762A52B0D52/image-size/large?v=v2&amp;amp;px=999" role="button" title="Chap_3_APIConfig052_1.png" alt="Chap_3_APIConfig052_1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-484830681"&gt;&lt;SPAN&gt;Important:&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;The basic trial only offers a selected subset of the overall functionality of SAP Integration Suite. Key user capabilities and administration rights for customization, master data management, or integration are not offered in this trial.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-basic-trial/ba-p/14112484"/>
    <published>2025-05-27T16:41:46.615000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/data-export-api-getting-started-with-bruno/ba-p/14120240</id>
    <title>Data Export API: Getting started with Bruno</title>
    <updated>2025-06-10T14:36:27.778000+02:00</updated>
    <author>
      <name>Danelle_Pillay</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2133132</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Introduction&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT size="3"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The Data Export Service is an open API that enables data retrieval from SAP Analytics Cloud for integration with tools like SAP Datasphere, SAP BW, SAP HANA. It has no user interface and works by retrieving data from providers (planning models).&amp;nbsp;&lt;A href="https://help.sap.com/docs/SAP_ANALYTICS_CLOUD/14cac91febef464dbb1efce20e3f1613/db62fd76514b48f8b71d695360320f4a.html)" target="_self" rel="noopener noreferrer"&gt;See more&lt;/A&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Bruno is a lightweight, open-source API client built for developers who want a fast, privacy focused, and Git-friendly way to work with APIs. Unlike traditional API tools, Bruno saves all your requests and configurations as plain files. This makes it easy to track changes, collaborate through version control, and work offline. &lt;/SPAN&gt;&lt;SPAN class=""&gt;It’s&lt;/SPAN&gt;&lt;SPAN class=""&gt; designed to be simple, efficient, and seamlessly &lt;/SPAN&gt;&lt;SPAN class=""&gt;integrate&lt;/SPAN&gt;&lt;SPAN class=""&gt; into your development workflow.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;In Bruno, requests can be sent via &lt;/SPAN&gt;&lt;SPAN class=""&gt;2 legged&lt;/SPAN&gt;&lt;SPAN class=""&gt; (for non-&lt;/SPAN&gt;&lt;SPAN class=""&gt;browser based&lt;/SPAN&gt;&lt;SPAN class=""&gt; application access to the REST API technical user) or &lt;/SPAN&gt;&lt;SPAN class=""&gt;3 legged&lt;/SPAN&gt;&lt;SPAN class=""&gt; (for non-&lt;/SPAN&gt;&lt;SPAN class=""&gt;browser based&lt;/SPAN&gt;&lt;SPAN class=""&gt; application access to the REST API business user) authentication through Public API Service. &lt;/SPAN&gt;&lt;SPAN class=""&gt;In order to&lt;/SPAN&gt;&lt;SPAN class=""&gt; get the most out of Bruno, an environment should be created for each tenant.&lt;/SPAN&gt;&lt;BR /&gt;&lt;A href="https://www.usebruno.com/downloads" target="_self" rel="nofollow noopener noreferrer"&gt;Download Bruno&lt;/A&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Overview&lt;BR /&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Prerequisites&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Steps to Set up an OAUTH Client&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;How to get Started in Bruno&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Creating Environments with Respective Variables&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;How to Send External API Requests&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Sending 2 Legged Requests&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Sending 3 Legged Requests&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Troubleshooting&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1. Prerequisites&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT size="5"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;FONT size="3"&gt;1.1.&amp;nbsp;&lt;SPAN class=""&gt;Have an OAUTH Client set up for &lt;/SPAN&gt;&lt;SPAN class=""&gt;2 legged&lt;/SPAN&gt;&lt;SPAN class=""&gt; Authentication.&lt;/SPAN&gt;&lt;BR /&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1.2.&amp;nbsp;&lt;SPAN class=""&gt;Have an OAUTH Client set up for &lt;/SPAN&gt;&lt;SPAN class=""&gt;3 legged&lt;/SPAN&gt;&lt;SPAN class=""&gt; Authentication.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;2. Steps&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to Set up an OAUTH Client&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT size="3"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;2.1. Log onto the tenant.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;2.2. Select Administration Menu.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Danelle_Pillay_0-1749128096959.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270157iD69147B950F6D610/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Danelle_Pillay_0-1749128096959.png" alt="Danelle_Pillay_0-1749128096959.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;FONT size="2" color="#808080"&gt;&lt;EM&gt;SAC Homepage&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;2.3. &lt;SPAN class=""&gt;Select App Integra&lt;/SPAN&gt;&lt;SPAN class=""&gt;tion.&lt;BR /&gt;H&lt;/SPAN&gt;&lt;SPAN class=""&gt;ere&lt;/SPAN&gt;&lt;SPAN class=""&gt; you &lt;/SPAN&gt;&lt;SPAN class=""&gt;can find the Authorization URL and Token URL for the tenant. Click &lt;/SPAN&gt;&lt;SPAN class=""&gt;add&lt;/SPAN&gt;&lt;SPAN class=""&gt; a &lt;/SPAN&gt;&lt;SPAN class=""&gt;new&lt;/SPAN&gt;&lt;SPAN class=""&gt; OAuth Client.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Danelle_Pillay_4-1749129345920.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270164iC32DFF9461F7C8C9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Danelle_Pillay_4-1749129345920.png" alt="Danelle_Pillay_4-1749129345920.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;FONT size="2" color="#808080"&gt;&lt;EM&gt;App Integration&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT size="3" color="#000000"&gt;2.4.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Fill out OAUTH Client details:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For the &lt;/SPAN&gt;&lt;SPAN class=""&gt;2 legged&lt;/SPAN&gt;&lt;SPAN class=""&gt; OAUTH Client, ensure:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;- Purpose is set to &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;API Access&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Danelle_Pillay_5-1749129500615.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270166iE25A3D981B49D4CA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Danelle_Pillay_5-1749129500615.png" alt="Danelle_Pillay_5-1749129500615.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;EM&gt;&lt;FONT size="2" color="#808080"&gt;2 Legged OAUTH Client Configuration&lt;BR /&gt;&lt;BR /&gt;&lt;/FONT&gt;&lt;/EM&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For the &lt;/SPAN&gt;&lt;SPAN class=""&gt;3 Legged&lt;/SPAN&gt;&lt;SPAN class=""&gt; OAUTH Client, ensure:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;- Purpose is set to &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Interactive Usage&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;- Set the redirect URL to - &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;A href="https://oauth.pstmn.io/v1/callback" target="_blank" rel="noopener nofollow noreferrer"&gt;https://oauth.pstmn.io/v1/callback&lt;/A&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Danelle_Pillay_6-1749129667528.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270169i56F7F8FEF310B372/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Danelle_Pillay_6-1749129667528.png" alt="Danelle_Pillay_6-1749129667528.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;EM&gt;&lt;FONT size="2" color="#808080"&gt;3 Legged OAUTH Client Configuration&lt;BR /&gt;&lt;BR /&gt;&lt;/FONT&gt;&lt;/EM&gt;&lt;FONT color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Note that secrets can only be copied during client creation. If you &lt;/SPAN&gt;&lt;SPAN class=""&gt;don't&lt;/SPAN&gt;&lt;SPAN class=""&gt; have a copy of the secret, &lt;/SPAN&gt;&lt;SPAN class=""&gt;delete&lt;/SPAN&gt;&lt;SPAN class=""&gt; the OAuth client, and then add it again to generate a new secret. Ensure that you have a copy of the &lt;/SPAN&gt;&lt;SPAN class=""&gt;client&lt;/SPAN&gt;&lt;SPAN class=""&gt; secret when creating this new OAUTH Client.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;2.5.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Obtain the Client ID and Client Secret. Do not share the Client Secret.&lt;BR /&gt;2.6. &lt;FONT color="#000000"&gt;Y&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;ou now should have:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;OAuth Client ID&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;OAuth Client Secret&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Authorization URL&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Token URL&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;For a more detailed step-by-step overview, see &lt;/SPAN&gt;&lt;SPAN class=""&gt;associated&lt;/SPAN&gt;&lt;SPAN class=""&gt; post:&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/getting-authenticated-with-data-export-and-data-import-api-s/bc-p/14115433" target="_self"&gt;Getting Authenticated with Data Export and Data Import APIs&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;3. How&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to get Started in Bruno&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN&gt;A collection in Bruno is a structured folder that contains your API requests, environment variables, and other configuration files. Each request is saved as a plain text file, allowing you to organise and manage your API workflows in a version controlled format.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN&gt;You want to first open the collection in Bruno rather than importing the .json file. By opening the collection folder instead of importing the .json file, we have source control over the collection and don't have to export and import the .json file every time a change is made.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;FONT size="3"&gt;&lt;SPAN&gt;3.1. Select the three dots on the left.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;SPAN&gt;3.2.&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;SPAN&gt;Select "Open Collection".&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;&lt;FONT color="#000000"&gt;3.3.&lt;/FONT&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Select the folder for the collection you want to open.&lt;/SPAN&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN&gt;This is what you should see:&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Danelle_Pillay_7-1749130021297.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270170iAACC6B898E86AAA7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Danelle_Pillay_7-1749130021297.png" alt="Danelle_Pillay_7-1749130021297.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;SPAN&gt;&lt;FONT color="#808080"&gt;&lt;EM&gt;&lt;FONT size="2"&gt;Opening Collection in Bruno&lt;/FONT&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#000000"&gt;&lt;STRONG&gt;4. Creating Environments with Respective Variables&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN&gt;Now, create a template in the environments dropdown for External API Requests.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;External API requests made to your SAP Analytics Cloud tenant will have the following variables:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Danelle_Pillay_8-1749130144030.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270172iF91FF760B1783290/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Danelle_Pillay_8-1749130144030.png" alt="Danelle_Pillay_8-1749130144030.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;&lt;EM&gt;&lt;FONT color="#808080"&gt;External API Request Template&lt;BR /&gt;&lt;BR /&gt;&lt;/FONT&gt;&lt;/EM&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;This environment should &lt;/SPAN&gt;&lt;SPAN class=""&gt;contain&lt;/SPAN&gt;&lt;SPAN class=""&gt; values for each variable respective to your specific tenant.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT size="5" color="#000000"&gt;5. How to Send External API Requests&lt;BR /&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="3" color="#000000"&gt;Sending External API Requests - GET 2 and 3 Legged Authentication Request&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;Before sending External API Requests, you have to generate an access token. This is done with a seperate. GET Request. One for 2 legged requests - "GET 2 Legged Authentication" and one for 3 legged requests - "GET 3 Legged Authentication". These GET requests generate the access token and automatically place it in the BearerToken environment variable:&amp;nbsp;&lt;BR /&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Danelle_Pillay_9-1749130389588.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270173i9F1E431251BB93FD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Danelle_Pillay_9-1749130389588.png" alt="Danelle_Pillay_9-1749130389588.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;FONT size="2" color="#808080"&gt;&lt;EM&gt;External API Request Sample Template&lt;BR /&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN&gt;Note that ClientID_2 and ClientSecret_2 is for 2 legged requests, and ClientID_3 and ClientSecret_3 is for 3 legged requests.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN&gt;This is what the "GET 2 Legged Authentication" Request looks like (under the Auth tab):&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Danelle_Pillay_11-1749130676986.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270176i7221CE085DA6E3F0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Danelle_Pillay_11-1749130676986.png" alt="Danelle_Pillay_11-1749130676986.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;FONT color="#808080"&gt;&lt;EM&gt;&lt;FONT size="2"&gt;GET 2 Legged Authentication Request Configuration&lt;BR /&gt;&lt;BR /&gt;&lt;/FONT&gt;&lt;/EM&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;This is what the "GET &lt;/SPAN&gt;&lt;SPAN class=""&gt;3 Legged&lt;/SPAN&gt;&lt;SPAN class=""&gt; Authentication" Request looks like (under the Auth tab):&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Danelle_Pillay_12-1749130772437.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270177i95152436DA1E6EED/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Danelle_Pillay_12-1749130772437.png" alt="Danelle_Pillay_12-1749130772437.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;FONT color="#808080"&gt;&lt;EM&gt;&lt;FONT size="2"&gt;GET 3 Legged Authentication Request Configuration&lt;BR /&gt;&lt;BR /&gt;&lt;/FONT&gt;&lt;/EM&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN class=""&gt;To send External API Requests, there are variables present in the "External API Requests" environment that you fill in with your respective tenant information/&lt;/SPAN&gt;&lt;SPAN class=""&gt;credentials(&lt;/SPAN&gt;&lt;SPAN class=""&gt;ClientID, &lt;/SPAN&gt;&lt;SPAN class=""&gt;ClientSecret&lt;/SPAN&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;SPAN class=""&gt;AuthURL&lt;/SPAN&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;SPAN class=""&gt;CallBackURL&lt;/SPAN&gt; &lt;SPAN class=""&gt;etc&lt;/SPAN&gt;&lt;SPAN class=""&gt;). If you want to have multiple External API environments configured for different tenants, you can easily follow the same template for other tenants (with each tenant's respective credentials). These credentials are already pre-set in the different environments &lt;/SPAN&gt;&lt;SPAN class=""&gt;and that&lt;/SPAN&gt;&lt;SPAN class=""&gt; by changing the environment, the credentials for that specific environment/tenant will be populated automatically.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN&gt;Ensure that you save the information once filled in. Note the AuthURL environment variable is used for the authorization URL and the access token URL, as seen in the GET 2 and 3 Legged Authentication screenshots above.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN&gt;Authorization URL: {{AuthURL}}/oauth/authorize&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN&gt;Access Token URL: {{AuthURL}}/oauth/token&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN&gt;The Auth tab for each 2 or 3 legged request will be set to &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Inherit&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (from Bearer Token):&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Danelle_Pillay_13-1749130912278.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270178iCFA6FD9803BE9912/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Danelle_Pillay_13-1749130912278.png" alt="Danelle_Pillay_13-1749130912278.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;FONT size="2" color="#808080"&gt;&lt;EM&gt;Auth tab configuration for 2 &amp;amp; 3 Legged Requests&lt;BR /&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT color="#000000"&gt;6. Sending 2 Legged Requests&lt;BR /&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;If you want to send 2 legged requests, &lt;/SPAN&gt;&lt;SPAN class=""&gt;locate&lt;/SPAN&gt;&lt;SPAN class=""&gt; the "2 Legged Authentication" GET Request. Generate an access token via the &lt;/SPAN&gt;&lt;SPAN class=""&gt;2 Legged&lt;/SPAN&gt;&lt;SPAN class=""&gt; Authentication GET Request. &lt;/SPAN&gt;&lt;SPAN class=""&gt;Ensure&lt;/SPAN&gt;&lt;SPAN class=""&gt; grant type is "&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Client Credentials&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;". This access token is automatically placed in the &lt;/SPAN&gt;&lt;SPAN class=""&gt;BearerToken&lt;/SPAN&gt;&lt;SPAN class=""&gt; environment variable in the "External API Requests" environment. Start sending requests.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT color="#000000"&gt;&lt;BR /&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2" color="#808080"&gt;&lt;FONT size="5"&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&lt;FONT color="#000000"&gt;&lt;FONT size="5"&gt;7. Sending 3 Legged Requests&lt;/FONT&gt;&lt;BR /&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;FONT color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;If you want to send 3 legged requests, &lt;/SPAN&gt;&lt;SPAN class=""&gt;locate&lt;/SPAN&gt;&lt;SPAN class=""&gt; the "&lt;/SPAN&gt;&lt;SPAN class=""&gt;3 Legged&lt;/SPAN&gt;&lt;SPAN class=""&gt; Authentication" GET Request. Generate an access token via the &lt;/SPAN&gt;&lt;SPAN class=""&gt;3 Legged&lt;/SPAN&gt;&lt;SPAN class=""&gt; Authentication GET Request. Ensure grant type is "&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Authorization Code&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;". This access token is automatically placed in the &lt;/SPAN&gt;&lt;SPAN class=""&gt;BearerToken&lt;/SPAN&gt;&lt;SPAN class=""&gt; environment variable in the "External API Requests" environment. Start sending requests.&lt;BR /&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Important:&lt;/STRONG&gt; When switching between environments/tenants as per folder, ensure that you get a new access token. This new access token will overwrite the old value in the &lt;SPAN class=""&gt;BearerToken&lt;/SPAN&gt; environment variable.&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;8. Troubleshooting&lt;BR /&gt;&lt;/STRONG&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;If you find that the login dialog to put in your credentials for that tenant, is not displaying when requesting a &lt;/SPAN&gt;&lt;SPAN class=""&gt;3 legged&lt;/SPAN&gt;&lt;SPAN class=""&gt; access token, ensure that you clear the cache and &lt;/SPAN&gt;&lt;SPAN class=""&gt;delete&lt;/SPAN&gt;&lt;SPAN class=""&gt; cookies when generating a new access token:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Danelle_Pillay_14-1749131322830.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270205i8F44164BDEF334ED/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Danelle_Pillay_14-1749131322830.png" alt="Danelle_Pillay_14-1749131322830.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;FONT size="2" color="#808080"&gt;&lt;EM&gt;Clearing cache and cookies&lt;BR /&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#000000"&gt;&lt;STRONG&gt;Conclusion&lt;BR /&gt;&lt;/STRONG&gt;&lt;FONT size="3"&gt;&lt;SPAN class=""&gt;Bruno is a fast, Git-friendly API client that simplifies testing and managing API requests across multiple tenants. With support for 2 legged and &lt;/SPAN&gt;&lt;SPAN class=""&gt;3 legged&lt;/SPAN&gt;&lt;SPAN class=""&gt; authentication, environment templates, and version-controlled collections, it fits seamlessly into any &lt;/SPAN&gt;&lt;SPAN class=""&gt;developer's&lt;/SPAN&gt;&lt;SPAN class=""&gt; workflow. &lt;/SPAN&gt;&lt;SPAN class=""&gt;It's&lt;/SPAN&gt;&lt;SPAN class=""&gt; an efficient tool built for modern API development.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;STRONG&gt;Useful&lt;/STRONG&gt; &lt;STRONG&gt;Links&lt;/STRONG&gt;&lt;BR /&gt;&lt;FONT size="3"&gt;&lt;FONT color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Download Bruno: &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;A href="https://www.usebruno.com/downloads" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.usebruno.com/downloads&lt;/A&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;More on Data Export Service:&amp;nbsp;&lt;BR /&gt;&lt;A class="" href="https://help.sap.com/docs/SAP_ANALYTICS_CLOUD/14cac91febef464dbb1efce20e3f1613/db62fd76514b48f8b71d695360320f4a.html)" target="_blank" rel="noreferrer noopener"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;https://help.sap.com/docs/SAP_ANALYTICS_CLOUD/14cac91febef464dbb1efce20e3f1613/db62fd76514b48f8b71d695360320f4a.html)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&amp;nbsp;&lt;BR /&gt;&lt;SPAN class=""&gt;Step-by-step overview on setting up OAUTH Clients&lt;/SPAN&gt;&lt;SPAN class=""&gt; for authentication&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;BR /&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/getting-authenticated-with-data-export-and-data-import-api-s/bc-p/14115433" target="_blank"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/getting-authenticated-with-data-export-and-data-import-api-s/bc-p/14115433&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2" color="#808080"&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2" color="#808080"&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/data-export-api-getting-started-with-bruno/ba-p/14120240"/>
    <published>2025-06-10T14:36:27.778000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-btp-api-proxy-to-work-with-basic-authentication-or-oauth-2-0/ba-p/14126742</id>
    <title>SAP BTP API Proxy to Work with Basic Authentication or OAuth 2.0</title>
    <updated>2025-06-13T16:16:55.746000+02:00</updated>
    <author>
      <name>RameshVaranganti</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/51927</uri>
    </author>
    <content>&lt;H6 id="toc-hId--2046248481"&gt;Introduction&lt;/H6&gt;&lt;P&gt;&lt;FONT size="2"&gt;In modern SAP integration landscapes, organizations often face diverse authentication requirements. Some external consumers may depend on Basic Authentication due to legacy system constraints or simplicity, while others are required to use OAuth 2.0 to comply with enterprise security policies.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;In this blog post, we’ll explore how to configure a single SAP BTP API Management proxy that supports both Basic Authentication and OAuth 2.0, ensuring flexibility for a range of API consumers without compromising on security standards&lt;/FONT&gt;&lt;/P&gt;&lt;H6 id="toc-hId-2052205310"&gt;Business Scenario&lt;/H6&gt;&lt;P&gt;&lt;FONT size="2"&gt;In complex enterprise environments, particularly federated organizations:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Legacy systems or subsidiaries may still utilize Basic Authentication.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Corporate IT may mandate OAuth 2.0 for cloud and mobile integrations.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Maintaining separate API proxies for each authentication method is undesirable due to increased complexity and maintenance.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="2"&gt;Objective: Implement a unified API proxy in SAP BTP that dynamically supports both authentication methods based on the incoming request.&lt;/FONT&gt;&lt;/P&gt;&lt;H6 id="toc-hId-1855691805"&gt;Solution Architecture&lt;/H6&gt;&lt;P&gt;&lt;FONT size="2"&gt;Here's how the solution works:&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2"&gt;API Consumer --&amp;gt; SAP BTP API Proxy (auth policy check) --&amp;gt; SAP Backend (e.g., S/4HANA)&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="RameshVaranganti_0-1749768201572.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273794i1E57205C60534F78/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RameshVaranganti_0-1749768201572.png" alt="RameshVaranganti_0-1749768201572.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="2"&gt;Various consumers, such as Legacy, Cloud, or Mobile applications, may utilize the same proxy endpoint with either Basic or OAuth2.0 authentication. The proxy inspects the request for:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Authorization: If "Basic", it validates via Basic Authentication.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Authorization: If "Bearer", it validates via the OAuth 2.0 token.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Upon successful authentication, the request is routed to the backend.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;If authentication fails, a response is sent back.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H6 id="toc-hId-1659178300"&gt;Implementation Steps&lt;/H6&gt;&lt;UL class="lia-list-style-type-square"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Develop an API Proxy in SAP BTP API Management, ensuring to establish the backend SAP connection for oData services.&lt;/FONT&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="RameshVaranganti_0-1749769689171.png" style="width: 520px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273804iACA8E9F67BFAAF23/image-dimensions/520x372?v=v2" width="520" height="372" role="button" title="RameshVaranganti_0-1749769689171.png" alt="RameshVaranganti_0-1749769689171.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify lia-indent-padding-left-30px" style="text-align : justify; padding-left : 30px;"&gt;&lt;FONT size="2"&gt;Required Parameters will be entered.&lt;/FONT&gt;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;API Basepath:&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Target Endpoint:&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="2"&gt;API Provider: SAP (or any provider)&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;&lt;SPAN&gt;URL: Odata path (or any URL)&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-square"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Add Pre-Flow Policies with condition routing.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="RameshVaranganti_1-1749769712255.png" style="width: 612px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273805i03A9C893F6BF37BB/image-dimensions/612x100?v=v2" width="612" height="100" role="button" title="RameshVaranganti_1-1749769712255.png" alt="RameshVaranganti_1-1749769712255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;FONT size="2"&gt;Please refer to the following for more detailed information on each step.&lt;/FONT&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;&lt;STRONG&gt;RaiseFault&lt;/STRONG&gt;: This step checks if authentication is used and raises a fault if neither Basic nor OAuth is applied.&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Condtion String&amp;nbsp; &lt;STRONG&gt;request.header.authorization&amp;nbsp;=&amp;nbsp;null&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Policy String:&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-90px" style="padding-left : 90px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="RameshVaranganti_2-1749769763241.png" style="width: 625px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273806i24A2D3D4C4379819/image-dimensions/625x202?v=v2" width="625" height="202" role="button" title="RameshVaranganti_2-1749769763241.png" alt="RameshVaranganti_2-1749769763241.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;&lt;STRONG&gt;oAuthVerify&lt;/STRONG&gt;: This function verifies oAuth credentials when a bearer token is provided.&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Condition String&amp;nbsp;&lt;STRONG&gt; request.header.Authorization ~ "Bearer*"&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Policy String:&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="RameshVaranganti_3-1749769825137.png" style="width: 579px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273807iDA53948108BEC24D/image-dimensions/579x272?v=v2" width="579" height="272" role="button" title="RameshVaranganti_3-1749769825137.png" alt="RameshVaranganti_3-1749769825137.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;&lt;STRONG&gt;decodebasicAuth&lt;/STRONG&gt;: Decodes Basic Authentication.&lt;/FONT&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Condition String :&amp;nbsp;&lt;STRONG&gt;request.header.Authorization ~ "Basic*".&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Policy String :&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="RameshVaranganti_0-1749770235448.png" style="width: 558px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273808iD45A416D7F474282/image-dimensions/558x209?v=v2" width="558" height="209" role="button" title="RameshVaranganti_0-1749770235448.png" alt="RameshVaranganti_0-1749770235448.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;&lt;STRONG&gt;verifyKey: &lt;/STRONG&gt;This will check if the key is associated with this API Product APP key.&lt;/FONT&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Consdition String : &lt;STRONG&gt;request.header.Authorization !~ "Bearer*"&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Policy String :&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="RameshVaranganti_1-1749770287457.png" style="width: 549px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273809iB0841275466E7A91/image-dimensions/549x183?v=v2" width="549" height="183" role="button" title="RameshVaranganti_1-1749770287457.png" alt="RameshVaranganti_1-1749770287457.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;&lt;STRONG&gt;invalidCredentials&lt;/STRONG&gt;: This fault exception occurs when credential validation fails.&lt;/FONT&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Condition String : &lt;STRONG&gt;(verifyapikey.Verify-API-Key.failed = true) or (varanganti.clientSecret != verifyapikey.verifyKey.client_secret)&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Policy String:&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="RameshVaranganti_2-1749770369086.png" style="width: 660px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273810i40E52A0FF5F46215/image-dimensions/660x235?v=v2" width="660" height="235" role="button" title="RameshVaranganti_2-1749770369086.png" alt="RameshVaranganti_2-1749770369086.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;&lt;STRONG&gt;RemoveHeader (Optional): &lt;/STRONG&gt;This function removes the API headers post-authorization, as they are no longer necessary for targeting the application once authorization is successful. The necessity of this step depends on subsequent procedures.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;&lt;STRONG&gt;Readkey (Optional): &lt;/STRONG&gt;Since I am accessing an OData service on the backend, credentials for Key Vault Manager (KVM) are being read.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;&lt;STRONG&gt;Basic (Optional): &lt;/STRONG&gt;Include a Basic Header for the target application if necessary. This depends on how the target key is being accepted.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;&lt;STRONG&gt;scCSRF (Optional): &lt;/STRONG&gt;This parameter is used to set the CSRF token, as is required by my target application.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;&lt;STRONG&gt;setSCParsms (Optional) :&amp;nbsp;&lt;/STRONG&gt; Follow-up step for SCRF to call backend application.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-square"&gt;&lt;LI&gt;Configure Credential Aliases&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;FONT size="2"&gt;In the API Developer Hub, create an application to obtain credentials. These will be utilized for basic authentication or OAuth Authentication.&lt;/FONT&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-square"&gt;&lt;LI&gt;Testing the Proxy&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Cas1: No Authentication&lt;/FONT&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Do Not pass any credentials&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="RameshVaranganti_1-1749771298394.png" style="width: 687px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273816i406F091EDA7783C1/image-dimensions/687x291?v=v2" width="687" height="291" role="button" title="RameshVaranganti_1-1749771298394.png" alt="RameshVaranganti_1-1749771298394.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Cas2: Basic Authentication&lt;/FONT&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;FONT size="2"&gt;The call will succeed and receive a response.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="RameshVaranganti_0-1749771238281.png" style="width: 637px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273815i8F8825910EAA8B33/image-dimensions/637x401?v=v2" width="637" height="401" role="button" title="RameshVaranganti_0-1749771238281.png" alt="RameshVaranganti_0-1749771238281.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Case 3: Utilizing OAuth Authentication&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Pre-Requisite: Set up a proxy with a placeholder target for obtaining the OAuth authentication token.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="2"&gt;Select OAuth2.0 as the authentication method and execute accordingly.&lt;/FONT&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="RameshVaranganti_2-1749771482472.png" style="width: 669px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273817iC73ADD3D6E53835E/image-dimensions/669x406?v=v2" width="669" height="406" role="button" title="RameshVaranganti_2-1749771482472.png" alt="RameshVaranganti_2-1749771482472.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RameshVaranganti_3-1749771620699.png" style="width: 667px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273818iE7121593B6DC5780/image-dimensions/667x340?v=v2" width="667" height="340" role="button" title="RameshVaranganti_3-1749771620699.png" alt="RameshVaranganti_3-1749771620699.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H6 id="toc-hId-1462664795"&gt;Conclusion&lt;/H6&gt;&lt;P&gt;&lt;FONT size="2"&gt;Configuring a single SAP BTP API proxy to support both Basic Authentication and OAuth 2.0 provides a scalable and secure solution for diverse integration requirements. &lt;STRONG&gt;This approach minimizes redundancy, simplifies management, and supports both modern and legacy applications accessing the same backend services&lt;/STRONG&gt;.&lt;/FONT&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;By leveraging policy-based routing and dynamic authentication handling, enterprises can ensure compliance, enhance flexibility, and optimize their API architecture.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-btp-api-proxy-to-work-with-basic-authentication-or-oauth-2-0/ba-p/14126742"/>
    <published>2025-06-13T16:16:55.746000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/blog-series-on-my-cpi-camel-learning-journey-interlude2-apim-debugging/ba-p/14121949</id>
    <title>Blog series on my CPI + Camel learning journey - Interlude2 APIM debugging</title>
    <updated>2025-06-15T22:59:37.197000+02:00</updated>
    <author>
      <name>alex_myakinkii</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/194559</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1861323632"&gt;Motivation&lt;/H3&gt;&lt;P&gt;Well, as with MPL you have to start doing some real life debugging to figure out the tools you are provided with "have some space for improvement", to put it mildly.&lt;/P&gt;&lt;P&gt;And this is what happened to me when I had a weird case for one of my api proxies.&lt;/P&gt;&lt;H3 id="toc-hId-1664810127"&gt;A little bit about Apigee and debug session structure&lt;/H3&gt;&lt;P&gt;Not a secret that under the hood APIM has apigee platform (that google bought)&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So, it turns out it was not SAP to blame for this "debug session" logic, but still the app they made is something special I have to say..&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;What bothers us is this stuff &amp;nbsp;&lt;SPAN&gt;&lt;A href="https://cloud.google.com/apigee/docs/api-platform/debug/trace" target="_blank" rel="noopener nofollow noreferrer"&gt;https://cloud.google.com/apigee/docs/api-platform/debug/trace&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And particularly the structure of session/transactions&amp;nbsp;&lt;A href="https://cloud.google.com/apigee/docs/api-platform/debug/trace#download-structure" target="_blank" rel="noopener nofollow noreferrer"&gt;https://cloud.google.com/apigee/docs/api-platform/debug/trace#download-structure&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Without going into details (after all this blog does not aim to provide the full schema details) let's see what could be of our most interest here.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;First, the whole session is an array of entries (we will call it &lt;STRONG&gt;transactions&lt;/STRONG&gt; which are&lt;U&gt; api calls&lt;/U&gt;)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below we would see "&lt;STRONG&gt;point&lt;/STRONG&gt;" array - kinda &lt;U&gt;Steps&lt;/U&gt; of flow execution each having an array of "&lt;STRONG&gt;results&lt;/STRONG&gt;" in turn.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;[
    {
        "completed": true,
        "point": [
            {
                "id": "Paused|Resumed|StateChange|FlowInfo|Condition|Execution|Error",
                "results": [
                    {
                        "ActionResult": "DebugInfo|RequestMessage|ResponseMessage|ErrorMessage|VariableAccess"
                    }
                ]
            }
        ]
    }
]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;These results contain some more details (which we see in the standard app as lists/forms) of key-value pairs&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;What is different is just name of "aggregation" - path in json to those arrays (eg "properties/property" or "headers" or "accessList")&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "ActionResult": "DebugInfo",
    "properties": {
        "property": [ { "name": "&amp;lt;PROP_NAME&amp;gt;", "value": "&amp;lt;PROP_VALUE&amp;gt;" } ]
    },
    "timestamp": "04-06-25 13:28:52:904" // yes, not a proper iso8601 timestamp ;(
}

{
    "ActionResult": "RequestMessage",
    "content": "&amp;lt;REQUEST_BODY_IF_PRESENT&amp;gt;",
    "headers": [ { "name": "&amp;lt;HEADER_NAME&amp;gt;", "value": "&amp;lt;HEADER_VALUE&amp;gt;" } ],
    "uRI": "&amp;lt;URI&amp;gt;",
    "verb": "&amp;lt;VERB&amp;gt;"
}

{
    "ActionResult": "ResponseMessage",
    "content": "&amp;lt;RESPONSE_BODY_TRIMMED&amp;gt;.....",
    "headers": [ { "name": "&amp;lt;HEADER_NAME&amp;gt;", "value": "&amp;lt;HEADER_VALUE&amp;gt;" } ],
    "reasonPhrase": "&amp;lt;STATUS_PHRASE&amp;gt;",
    "statusCode": "&amp;lt;STATUS_CODE&amp;gt;"
}

{
    "ActionResult": "ErrorMessage",
    "content": "&amp;lt;APIM_ERR_BODY&amp;gt;",
    "headers": [ { "name": "&amp;lt;HEADER_NAME&amp;gt;", "value": "&amp;lt;HEADER_VALUE&amp;gt;" } ],
    "reasonPhrase": "&amp;lt;STATUS_PHRASE&amp;gt;",
    "statusCode": "&amp;lt;STATUS_CODE&amp;gt;"
}

{
    "ActionResult": "VariableAccess",
    "accessList": [
        {
            "Get": { "name": "&amp;lt;VAR&amp;gt;", "value": "&amp;lt;VALUE_IF_GOT&amp;gt;" }
        },
        {
            "Set": { "name": "&amp;lt;VAR&amp;gt;", "success": true, "value": "&amp;lt;VALUE&amp;gt;" }
        }
    ]
}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-1468296622"&gt;Api Proxy debug viewer app&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;But most important thing is that we DO HAVE Request and Response (and Error) Method, Url, Content and Status!!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;And so I decided to make a really simple frontend-only ui5 app based on Flexible Column Layout (which &amp;nbsp;is hidden behind the intent &lt;U&gt;#apim-dbg&lt;/U&gt; in capic launchpad)&lt;/P&gt;&lt;P&gt;For this I just had to figure out the structure of the session and then apply some transformations to display it nicely.&lt;/P&gt;&lt;P&gt;And while the original app tries to follow "visual approach" apigee had in their app (you could see &amp;nbsp;it following the link above) - using lots of pictograms/icons while doing its best to hide essential information from us like target endpoint http code/status or request/response body -&amp;nbsp;&lt;U&gt;I decided to display our stuff via lists and forms&lt;/U&gt;, cuz as a developer I LOVE TEXT (which can even be searchable).&lt;/P&gt;&lt;P&gt;This image from apigee documentation illustrates it well&amp;nbsp;&lt;A href="https://docs.apigee.com/api-platform/fundamentals/what-are-flows" target="_blank" rel="noopener nofollow noreferrer"&gt;https://docs.apigee.com/api-platform/fundamentals/what-are-flows&lt;/A&gt;&amp;nbsp;(not 100% percent sure I am right regarding mapping of stages, but it somewhat makes sense to me)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="0-apigee-flows-stages.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274243i7FF50C28C8616097/image-size/large?v=v2&amp;amp;px=999" role="button" title="0-apigee-flows-stages.png" alt="0-apigee-flows-stages.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Basically, the app displays our debugging session in the following way (kinda 5 levels):&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Master - &lt;STRONG&gt;1&amp;nbsp;Transactions&lt;/STRONG&gt; (api calls) as Items &lt;EM&gt;// with objectstatus stuff&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;Detail - &lt;U&gt;2&amp;nbsp;Stages&lt;/U&gt; (list grouping) + &lt;STRONG&gt;3&amp;nbsp;points&lt;/STRONG&gt; (steps) as Items /&lt;EM&gt;/ also with some color coding&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;Detail-Detail - &lt;U&gt;4&amp;nbsp;ActionResults&lt;/U&gt; (form container) + &lt;STRONG&gt;5&amp;nbsp;results&lt;/STRONG&gt; params &amp;nbsp;as form elements&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Some other things to point out here (at Detail screen):&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;EM&gt;StateChange&lt;/EM&gt;&lt;/STRONG&gt; typically has &lt;U&gt;RequestMessage|ResponseMessage|ErrorMessage&lt;/U&gt; ActionResult object appearing&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;SPAN&gt;It comes first in group and it is marked with &lt;STRONG&gt;blue&lt;/STRONG&gt; highlight (also from this guy I calculated groups for detail list)&lt;/SPAN&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;EM&gt;&lt;STRONG&gt;Error&lt;/STRONG&gt;&lt;/EM&gt; has some error information that doesn't help much but is a place in flow where error occured - marked &lt;STRONG&gt;red&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;&lt;STRONG&gt;Execution&lt;/STRONG&gt;&lt;/EM&gt; - is an interesting step, basically, this is where our policies run - it is marked &lt;STRONG&gt;amber&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;Properties of DebugInfo action here contain "&lt;U&gt;type&lt;/U&gt;" or "&lt;SPAN&gt;&lt;SPAN&gt;&lt;U&gt;stepDefinition-type&lt;/U&gt;" which is policy type (not 100% sure) and "&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;SPAN&gt;&lt;U&gt;stepDefinition-name&lt;/U&gt;" or "&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;stepDefinition-displayName&lt;/U&gt;" which is actual policy name as we created it.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;I use it as a name for step instead of just "Execution" (this is why you don't see it in UI)&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Here &amp;nbsp;are the screenshots of a simple debugging session that hopefully will immediately make sense to you&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="1-get-service-401-err.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274244iCF6F1BC73A25E119/image-size/medium?v=v2&amp;amp;px=400" role="button" title="1-get-service-401-err.png" alt="1-get-service-401-err.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2-get-service-401-res.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274245i2B2F7A2BE05BD9FE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="2-get-service-401-res.png" alt="2-get-service-401-res.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="3-get-service-200-analytics.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274246i9484D4C23CAE2E85/image-size/medium?v=v2&amp;amp;px=400" role="button" title="3-get-service-200-analytics.png" alt="3-get-service-200-analytics.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="4-get-metadata-200-body.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274247iBE452CBA1CCAB5D5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="4-get-metadata-200-body.png" alt="4-get-metadata-200-body.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="5-post-metadata-405-res.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274249i1E3206198EF5F14A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="5-post-metadata-405-res.png" alt="5-post-metadata-405-res.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="6-post-metadata-405-err.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/274250i15C5692C833A992D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="6-post-metadata-405-err.png" alt="6-post-metadata-405-err.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;H3 id="toc-hId-1271783117"&gt;Some JS magic&lt;/H3&gt;&lt;P&gt;Ok, this might even look good (or at least better than the original), but how to get the data?&lt;/P&gt;&lt;P&gt;Well, it turns out, SAP did a great job exposing some global methods (and even &lt;U&gt;oapiproxyData&lt;/U&gt; object ) in their app (yes it seems to be a really, really old one), so we can just programmatically create us a session and then fetch data into clipboard.&lt;/P&gt;&lt;P&gt;And for that I used super old trick: javascript favourites snippets (even had to google they were called "&lt;A href="https://en.wikipedia.org/wiki/Bookmarklet" target="_self" rel="nofollow noopener noreferrer"&gt;bookmarklets&lt;/A&gt;")&lt;/P&gt;&lt;P&gt;So, to start session you might want to use something like this:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.apimgmt.commons.ajaxHandler({
  data: JSON.stringify({"name": oapiproxyData.name, "version": oapiproxyData.version, "session_id":"pwn3d"}),
  headers: {"Content-Type": "application/json", "Accept": 'application/json', "operation": "start"},
  url: APIMGMT.TRACE_WORKSPACE_ROOT,
  type: APIMGMT.HTTP_METHODS.POST,
  success: console.log, error: console.log
})&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;And to fetch data into your browser clipboard (and I was surprised I did not need a focusable element when using the bookmarkelt to write to it) you would do this:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.apimgmt.commons.ajaxHandler({
  data: JSON.stringify({"name": oapiproxyData.name, "version": oapiproxyData.version, "session_id":"pwn3d"}),
  headers: {"Content-Type": "application/json", "Accept": 'application/json', "operation": "get"},
  url: APIMGMT.TRACE_WORKSPACE_ROOT,
  type: APIMGMT.HTTP_METHODS.POST,
  success: function(data){ navigator.clipboard.writeText(JSON.stringify(data))}, error: console.log
})&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;&amp;nbsp;And I am not going to teach you how to add that stuff into bookmarks but wiki probably could.&lt;/EM&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1075269612"&gt;Demo&lt;/H3&gt;&lt;P&gt;In this demo we are going to reproduce the session from screenshots above.&lt;/P&gt;&lt;P&gt;For this purpose we use simplest api proxy possible - to anonymous Northwind service&amp;nbsp;&lt;A href="https://services.odata.org/V2/Northwind/Northwind.svc/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://services.odata.org/V2/Northwind/Northwind.svc/&lt;/A&gt;&amp;nbsp;and protect it with apikey, so&amp;nbsp;you can easily try it yourself in like 10 mins.&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FZm7ZUKugqBA%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DZm7ZUKugqBA&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FZm7ZUKugqBA%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="113" scrolling="no" title="сapic apim dbg demo" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA" target="" rel="nofollow noopener noreferrer"&gt;00:00&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; Intro and motivation&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=99s" target="" rel="nofollow noopener noreferrer"&gt;01:39&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; Northwind api proxy and debug with standard app (2 positive and 2 negative responses)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=225s" target="" rel="nofollow noopener noreferrer"&gt;03:45&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; Try interpreting the results&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=298s" target="" rel="nofollow noopener noreferrer"&gt;04:58&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; But actual session data json contains more data and that is what we cover in blog (kind of)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=366s" target="" rel="nofollow noopener noreferrer"&gt;06:06&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; A little bit about apigee stuff and json structure and corresponding app screens&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=514s" target="" rel="nofollow noopener noreferrer"&gt;08:34&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; How to obtain session data json (other than by copying from network requests)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=608s" target="" rel="nofollow noopener noreferrer"&gt;10:08&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; Repeat same api test/debug routine with bookmarklets magic&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=696s" target="" rel="nofollow noopener noreferrer"&gt;11:36&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; Fetch session json data to finally see the new app in action (and try to interpret data there)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=915s" target="" rel="nofollow noopener noreferrer"&gt;15:15&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;Confirm that &lt;U&gt;AnalyticsPublisher&lt;/U&gt; policy/step indeed contains response &lt;U&gt;message.status.code&lt;/U&gt;, &lt;U&gt;request.path&lt;/U&gt; and &lt;U&gt;request.verb&lt;/U&gt; as vars (but not body though)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=970s" target="" rel="nofollow noopener noreferrer"&gt;16:10&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; "&lt;EM&gt;And we do see that we do have body which is very nice&lt;/EM&gt;" (in proper place)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://www.youtube.com/watch?v=Zm7ZUKugqBA&amp;amp;t=1027s" target="" rel="nofollow noopener noreferrer"&gt;17:07&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; Final words about app screens and features and outro&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-878756107"&gt;P.S Disclaimer and feature requests/fixes&lt;/H3&gt;&lt;P&gt;This is the simplest and mot naive implementation of &amp;nbsp;this app made out offrustration, so if for some reason you might want to test it there can (or must) be scenarios it does not support (haven't tried using scripts, conditional flows etc).&lt;/P&gt;&lt;P&gt;Please feel free to comment here regarding errors/features you might need, but &lt;STRONG&gt;DON'T paste session info here&lt;/STRONG&gt; as it contains sensitive information about your apim instance.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/blog-series-on-my-cpi-camel-learning-journey-interlude2-apim-debugging/ba-p/14121949"/>
    <published>2025-06-15T22:59:37.197000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/how-to-connect-a-third-party-application-to-sap-cpi-using-apis-and-access/ba-p/14136667</id>
    <title>How to Connect a Third-Party Application to SAP CPI Using APIs and  Access Token – A GreytHR Example</title>
    <updated>2025-06-26T09:37:25.001000+02:00</updated>
    <author>
      <name>D_Simon</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1666556</uri>
    </author>
    <content>&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Introduction&lt;/STRONG&gt;&lt;BR /&gt;In modern integration scenarios, many third-party applications expose APIs to exchange data. SAP&lt;BR /&gt;Integration Suite (CPI) allows us to consume these APIs easily, even when token-based authentication is&lt;BR /&gt;required.&lt;BR /&gt;In this blog, I’ll walk you through how I integrated the GreytHR HRMS application with SAP using API&lt;BR /&gt;endpoints and access tokens. We'll fetch employee master data using a secure, token-based flow.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Topics Covered&lt;/STRONG&gt;&lt;BR /&gt;• What is an API First Approach?&lt;BR /&gt;• What are APIs?&lt;BR /&gt;• Types of APIs.&lt;BR /&gt;• using API How to connect third party Applications.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;•&amp;nbsp; What is an API First Approach?&lt;BR /&gt;&lt;/STRONG&gt;The API First Approach is an approach to software design that focuses on the API to create applications that can be easily connected to each other. API First creates ecosystems of applications that are modular, reusable, and extensible, just like Lego bricks.&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;An API First Approach means that your APIs are treated as first class citizens. Everything revolves around the end product being used by mobile devices and client applications. An API First approach involves developing APIs that are consistent and reusable. This is achieved by using an API description language.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Diddela_0-1750852143080.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278639i706B7D116EDD10C7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Diddela_0-1750852143080.png" alt="Diddela_0-1750852143080.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The graphic shows an example of API First Approach. Information is provided in the following text.&lt;BR /&gt;Explanation:&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;API Provider :&lt;BR /&gt;An API provider provides an interface with technical features (No. 1). Symbolically, this is shown in this picture with the ball- or lollipop notation. This interface can be consumed by a service (No. 5). There presentation corresponds to the socket notation (No. 2). The service acts in the role of the API consumer.&lt;BR /&gt;&lt;BR /&gt;API Consumer :&lt;BR /&gt;The API consumer requires an interface (No. 3). The representation corresponds to the socket notation (No. 4). In this case, the API provider is the service (No. 5). The presentation is again made with the ball-or lollipop notation.&lt;/P&gt;&lt;P&gt;Find More Information at:&lt;BR /&gt;Understanding the API-First Approach to Building Products.&lt;BR /&gt;It is not Cloud first or API first but Strategy first. API Management Strategy in Mult iCloud Environments | SAP Blogs.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;• What are APIs?&lt;/STRONG&gt;&lt;BR /&gt;API stands for Application Programming Interface. An API specifies the operations as well as inputs and outputs of a software component. It defines functionalities that are independent of their respective implementations, so that these implementations can vary without affecting the user of the API.&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;• Types of APIs.&lt;BR /&gt;&lt;/STRONG&gt;In the literature, there are many overviews of different types of APIs. Below is a simple overview of the APIs that we must understand for this course.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Diddela_1-1750852584020.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278642iEFCF98BB65766A2F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Diddela_1-1750852584020.png" alt="Diddela_1-1750852584020.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The graphic shows an overview of APIs. Information is provided in the following text.&lt;BR /&gt;Here, four different APIs are defined under the superset of APIs, based on their use.&lt;BR /&gt;Databased APIs These are intended for file exchange between systems. Files can be, for example, configuration files.&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Object-orientated APIs&lt;BR /&gt;These are used in object-oriented programming languages to define the communication of the classes with each other.&lt;BR /&gt;Remote APIs (No. 1)&lt;BR /&gt;This includes today's important web APIs, such as REST and SOAP APIs. REST itself is not a protocol but a software architectural style.&lt;BR /&gt;Messaging APIs (No. 2)&lt;BR /&gt;•&amp;nbsp; These are asynchronous APIs that send events based on events. These are used in Event Driven&lt;BR /&gt;architectures.&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;• using API How to connect Third party Applications.&lt;BR /&gt;&lt;/STRONG&gt;I am trying to connect the GreytHR application to SAP CPI using APIs.&lt;BR /&gt;Step-1&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Step 1: Create API in GreytHR&lt;BR /&gt;• Log into your GreytHR portal&lt;BR /&gt;• Navigate to the API Management section&lt;BR /&gt;• Click Create API&lt;BR /&gt;• Provide:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Diddela_2-1750852950587.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278643iE68861BCD39BC8A0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Diddela_2-1750852950587.png" alt="Diddela_2-1750852950587.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;• API Name&lt;BR /&gt;• Role access (select “All Roles”)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Diddela_3-1750853015275.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278644iB747610FC8CE400F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Diddela_3-1750853015275.png" alt="Diddela_3-1750853015275.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on Next Save the generated Username and Password&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Diddela_4-1750853067855.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278645iA5A9E40F429700B7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Diddela_4-1750853067855.png" alt="Diddela_4-1750853067855.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Step 2: Store Credentials in CPI&lt;BR /&gt;• In SAP Integration Suite, go to:&lt;BR /&gt;• Monitoring → Manage Security → Security Material&lt;BR /&gt;• Create a User Credential&lt;BR /&gt;• Enter the username and password received from GREYTHR&lt;BR /&gt;• Name it: GREYTHR_CREDENTIALS&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Diddela_5-1750853185294.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278652i20E5D9E78DC91540/image-size/large?v=v2&amp;amp;px=999" role="button" title="Diddela_5-1750853185294.png" alt="Diddela_5-1750853185294.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Step 3: Create Access Token Flow in CPI&lt;BR /&gt;• Open your design workspace and create a new Integration Flow&lt;BR /&gt;• Use a Timer as the start event (for scheduled execution)&lt;BR /&gt;• Add a Request-Reply block&lt;BR /&gt;• Use an HTTP Adapter with:&lt;BR /&gt;• Method: POST&lt;BR /&gt;• URL: GreytHR’s Access Token Endpoint&lt;BR /&gt;• Authentication: use GREYTHR_CREDENTIALS&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Diddela_6-1750853264876.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278654i0802C0D440D96B6E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Diddela_6-1750853264876.png" alt="Diddela_6-1750853264876.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Step 4: Convert JSON to XML (if necessary) and Store Access Token&lt;BR /&gt;If the response is in JSON format (which is common for most token APIs):&lt;BR /&gt;• Add a JSON to XML Converter immediately after the Request-Reply step&lt;BR /&gt;• This ensures the token response can be processed in SAP CPI (which primarily works with XML)&lt;BR /&gt;If the response is already in XML format, you can skip the converter step&lt;BR /&gt;• Add a Content Modifier after the token call&lt;BR /&gt;• Extract the ACCESS_TOKEN from the response JSON&lt;BR /&gt;• Store it as a property: ${header . ACCESS_TOKEN}&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Diddela_7-1750853359318.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278655iB276A721756189E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Diddela_7-1750853359318.png" alt="Diddela_7-1750853359318.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Step 5: Call GreytHR API to Fetch Data&lt;BR /&gt;• Add another Request-Reply block&lt;BR /&gt;• HTTP Adapter configuration:&lt;BR /&gt;• Method: GET or POST&lt;BR /&gt;• URL: GREYTHR API endpoint for employee data&lt;BR /&gt;• Authorization: Bearer ${header. ACCESS_TOKEN}&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Diddela_8-1750853546074.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278658i7D89B3359FDA2BC2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Diddela_8-1750853546074.png" alt="Diddela_8-1750853546074.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Deploy the iFlow&lt;BR /&gt;• If successful, you’ll receive employee master data from GREYTHR!&lt;BR /&gt;&lt;BR /&gt;&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&amp;nbsp;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;BR /&gt;• Using APIs and token-based authentication, SAP CPI can securely connect to third-party systems&lt;BR /&gt;like GreytHR. This approach is:&lt;BR /&gt;• Scalable&lt;BR /&gt;• Reusable&lt;BR /&gt;• Suitable for any modern integration scenario&lt;BR /&gt;The same logic can be extended to tools like Salesforce, Zoho, or OpenWeatherMap.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/how-to-connect-a-third-party-application-to-sap-cpi-using-apis-and-access/ba-p/14136667"/>
    <published>2025-06-26T09:37:25.001000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/simplifying-complex-enterprise-landscapes-using-sap-integration-suite-a/ba-p/14141754</id>
    <title>Simplifying Complex Enterprise Landscapes Using SAP Integration Suite – A Practical Approach</title>
    <updated>2025-07-01T15:48:27.196000+02:00</updated>
    <author>
      <name>aayushaggarwal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/218793</uri>
    </author>
    <content>&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;EM&gt;“Complexity is inevitable. Chaos isn’t.”&lt;/EM&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;In today’s enterprise IT landscape, complexity is everywhere — hybrid architectures, ever-evolving business needs, legacy platforms, and disconnected systems. But complexity doesn’t have to mean confusion or fragility.&lt;/P&gt;&lt;P&gt;With over 11 years of experience across &lt;STRONG&gt;SAP CPI, PI/PO, BTP, and Ariba CIG&lt;/STRONG&gt;, I’ve seen firsthand how integration complexity can slow innovation — and how the right architectural mindset can fix it.&lt;/P&gt;&lt;P&gt;This post is a practical guide to &lt;STRONG&gt;simplifying complex enterprise landscapes&lt;/STRONG&gt; using the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1863168778"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;🔹&lt;/span&gt;Why Complexity Happens&lt;/H3&gt;&lt;P&gt;Most organizations face at least one (if not all) of these challenges:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;A mix of cloud and on-premise systems&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Legacy, point-to-point integrations built without standards&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Business logic scattered across different platforms&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Siloed teams and lack of visibility across integrations&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The result? High maintenance, fragile interfaces, slower time-to-market.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1666655273"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;🔹&lt;/span&gt;My Guiding Principles for Simplification&lt;/H3&gt;&lt;H4 id="toc-hId-1599224487"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_1:"&gt;1️⃣&lt;/span&gt;API-First Architecture&lt;/H4&gt;&lt;P&gt;Design integrations as &lt;STRONG&gt;modular, discoverable services&lt;/STRONG&gt; — not tightly coupled one-offs. Use &lt;STRONG&gt;SAP API Management&lt;/STRONG&gt; to expose, secure, and govern your interfaces centrally.&lt;/P&gt;&lt;H4 id="toc-hId-1402710982"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_2:"&gt;2️⃣&lt;/span&gt;Decouple Business Logic from Integration&lt;/H4&gt;&lt;P&gt;Avoid embedding decision logic in CPI flows or PI/PO mappings. Move that logic to &lt;STRONG&gt;CAP apps&lt;/STRONG&gt;, &lt;STRONG&gt;BRF+&lt;/STRONG&gt;, or reusable business services — this reduces rework and improves clarity.&lt;/P&gt;&lt;H4 id="toc-hId-1206197477"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_3:"&gt;3️⃣&lt;/span&gt;Think Event-Driven&lt;/H4&gt;&lt;P&gt;Don’t force synchronous flows where asynchronous is better. Use &lt;STRONG&gt;SAP Event Mesh&lt;/STRONG&gt; to build decoupled, reactive systems that scale more naturally.&lt;/P&gt;&lt;H4 id="toc-hId-1009683972"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_4:"&gt;4️⃣&lt;/span&gt;Reuse Over Rebuild&lt;/H4&gt;&lt;P&gt;Standardize error handling, logging, naming conventions, and message formats. Use templates, shared artifacts, and integration accelerators wherever possible.&lt;/P&gt;&lt;H4 id="toc-hId-813170467"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_5:"&gt;5️⃣&lt;/span&gt;Integration as a Platform&lt;/H4&gt;&lt;P&gt;Treat integration as a long-term &lt;STRONG&gt;platform&lt;/STRONG&gt;, not a project. Build with future growth, maintainability, and observability in mind.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-487574243"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;🔹&lt;/span&gt;Using SAP Integration Suite Holistically&lt;/H3&gt;&lt;P&gt;Most teams focus only on &lt;STRONG&gt;SAP CPI&lt;/STRONG&gt; — but the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; is more powerful when used as a full toolkit:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Cloud Integration (CPI):&lt;/STRONG&gt; For process orchestration across SAP and non-SAP systems&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;API Management:&lt;/STRONG&gt; To secure, manage, and reuse interfaces&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP Managed Gateway (Ariba CIG):&lt;/STRONG&gt; For rapid, standardized B2B procurement integration&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Event Mesh:&lt;/STRONG&gt; To enable scalable, event-driven communication&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP BTP Cockpit &amp;amp; Cloud ALM:&lt;/STRONG&gt; For centralized monitoring, alerting, and operational control&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Together, these tools can reduce integration effort, increase visibility, and support long-term agility.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-291060738"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;🔹&lt;/span&gt;Real-World Tactics That Worked for Me&lt;/H3&gt;&lt;P&gt;Here are some of the steps I’ve implemented in customer landscapes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Migrated legacy &lt;STRONG&gt;PI/PO&lt;/STRONG&gt; integrations to &lt;STRONG&gt;CPI on SAP BTP&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Created &lt;STRONG&gt;custom adapters&lt;/STRONG&gt; and reusable &lt;STRONG&gt;Groovy-based modules&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Designed a central &lt;STRONG&gt;error-handling and alerting framework&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Introduced integration &lt;STRONG&gt;naming standards, templates, and design guidelines&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Used &lt;STRONG&gt;Cloud ALM&lt;/STRONG&gt; to monitor interfaces across landscapes&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Built a knowledge base of reusable integration components&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-94547233"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;🔹&lt;/span&gt;Final Thoughts&lt;/H3&gt;&lt;P&gt;Complexity is natural. But without intentional design, it turns into chaos.&lt;/P&gt;&lt;P&gt;By adopting a &lt;STRONG&gt;product mindset&lt;/STRONG&gt;, focusing on &lt;STRONG&gt;API-first, reusable, and event-driven&lt;/STRONG&gt; architecture, and fully utilizing the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;, we can turn fragile systems into future-ready platforms.&lt;/P&gt;&lt;P&gt;Let’s not just connect systems — let’s &lt;STRONG&gt;design integration that scales with the product, not against it&lt;/STRONG&gt;.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--177197641"&gt;&lt;span class="lia-unicode-emoji" title=":repeat_button:"&gt;🔁&lt;/span&gt;Let’s Discuss&lt;/H3&gt;&lt;P&gt;How are you approaching simplification in your integration landscape?&lt;BR /&gt;Would love to hear your views and lessons from the field.&lt;/P&gt;&lt;HR /&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/simplifying-complex-enterprise-landscapes-using-sap-integration-suite-a/ba-p/14141754"/>
    <published>2025-07-01T15:48:27.196000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-api-management-generating-oauth-saml-assertion-for-successfactors-api/ba-p/14140473</id>
    <title>SAP API Management- Generating Oauth SAML Assertion for SuccessFactors API call</title>
    <updated>2025-07-02T14:14:31.090000+02:00</updated>
    <author>
      <name>RavindraRathore</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/148080</uri>
    </author>
    <content>&lt;P&gt;In this blog, I will outline a secure method for generating SAML assertions for an API proxy designed to interact with the SuccessFactors module for various operations.&lt;/P&gt;&lt;P&gt;Currently, many developers relied on the /oauth/idp API to generate SAML assertions for token generation when communicating with SuccessFactors. Although this API allowed API users to generate SAML assertions for authentication, it was deemed insecure due to the necessity of passing private keys in an API call. Therefore, SAP is deprecated this API and they will delete it in November (&lt;A title="Deprecation of OAuth IdP API /oauth/idp" href="https://help.sap.com/docs/successfactors-release-information/8e0d540f96474717bbf18df51e54e522/db7ccbbbc7a54e929a305ff92d12241c.html" target="_self" rel="noopener noreferrer"&gt;Deprecation of OAuth IdP API /oauth/idp)&lt;/A&gt;&amp;nbsp;and urging developers to adopt more secure practices for generating SAML assertions.&lt;/P&gt;&lt;P&gt;To set up a connection between SAP API Management and SuccessFactors using OAuth SAML assertion, follow these steps:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: &lt;/STRONG&gt;Register an OAuth2 Client Application in SuccessFactors&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;Navigate to the "Manage OAuth2 Client Applications" section and click on "Register Client Application".&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_0-1751284864336.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280627iB77B216D80536B4E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RavindraRathore_0-1751284864336.png" alt="RavindraRathore_0-1751284864336.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;Fill in the required details:&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Company&lt;/STRONG&gt;: This field is automatically filled with your current company name.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Application Name&lt;/STRONG&gt;: Enter the name of the application. For this example, use "SF_SAPAPIM".&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;: (Optional) Provide a description.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Application URL&lt;/STRONG&gt;: Enter the URL of the system that wants to connect to SuccessFactors, e.g.,&amp;nbsp;&lt;A href="http://SAPAPIMHost.com" target="_blank" rel="noopener nofollow noreferrer"&gt;http://SAPAPIMHost.com&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;X.509 Certificate&lt;/STRONG&gt;: Generate an X.509 certificate by providing the relevant information or use the certificate from the system that wants to connect to SuccessFactors.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Important&lt;/STRONG&gt;: If you generate the X.509 certificate within SuccessFactors, download and securely store it for the next steps. &lt;SPAN&gt;Additionally, make sure to record the &lt;STRONG&gt;API Key&lt;/STRONG&gt; that will be generated once the OAuth2 Client Application is registered.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P class="lia-indent-padding-left-180px" style="padding-left : 180px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_1-1751284864349.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280628i6395726974530DB8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RavindraRathore_1-1751284864349.png" alt="RavindraRathore_1-1751284864349.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: &lt;/STRONG&gt;Convert the Certificate Format&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;The downloaded certificate is in PEM format. Convert it to P12 format using OpenSSL or another tool.&lt;/LI&gt;&lt;LI&gt;Keep the password for the P12 certificate safe, as it will be needed in later steps.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: &lt;/STRONG&gt;Store the Certificate in SAP API Management&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;Log in to integration suite, go to Configure.&lt;/LI&gt;&lt;LI&gt;Navigate to the "Keystore" under the "Certificate" tab.&lt;/LI&gt;&lt;LI&gt;Upload the P12 format certificate along with its password.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P class="lia-indent-padding-left-90px" style="padding-left : 90px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_2-1751285253091.png" style="width: 445px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280630iF6F8D7DCDC1D6A15/image-dimensions/445x69?v=v2" width="445" height="69" role="button" title="RavindraRathore_2-1751285253091.png" alt="RavindraRathore_2-1751285253091.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_3-1751285253094.png" style="width: 447px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280631i387AFD63E0705B1E/image-dimensions/447x210?v=v2" width="447" height="210" role="button" title="RavindraRathore_3-1751285253094.png" alt="RavindraRathore_3-1751285253094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4:&lt;/STRONG&gt; Set up an API Proxy in SAP API Management to retrieve job information from SuccessFactors.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Navigate to the Configure tab within the integration suite and click on Create under API proxy.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_4-1751285253096.png" style="width: 493px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280632i10EE6CA0C2E521C6/image-dimensions/493x85?v=v2" width="493" height="85" role="button" title="RavindraRathore_4-1751285253096.png" alt="RavindraRathore_4-1751285253096.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create an API proxy with named "SF_JobInformation" and fill in the necessary details—enter the API path in the URL field, choose an appropriate title, and select the Host Alias if multiple hosts are configured.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Provide an API base path, which can match the API's path. When you input the version, it will be added before the base path and to the API Proxy name you specified.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_5-1751285253102.png" style="width: 481px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280634iA1267D1374C26EB9/image-dimensions/481x325?v=v2" width="481" height="325" role="button" title="RavindraRathore_5-1751285253102.png" alt="RavindraRathore_5-1751285253102.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Step 5:&lt;/STRONG&gt; Once the API proxy is created, save it.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_6-1751285253104.png" style="width: 443px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280633iEF68D515F6A6B6DB/image-dimensions/443x225?v=v2" width="443" height="225" role="button" title="RavindraRathore_6-1751285253104.png" alt="RavindraRathore_6-1751285253104.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click policies section to incorporate SuccessFactors OAuth SAML assertion-related policies.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_7-1751285253109.png" style="width: 447px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280635i90D39A3C913E1556/image-dimensions/447x230?v=v2" width="447" height="230" role="button" title="RavindraRathore_7-1751285253109.png" alt="RavindraRathore_7-1751285253109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the policy editor, insert a JavaScript policy to generate dates for "NotBefore" and "NotOnOrAfter," which are necessary for SAML assertion generation policy.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_8-1751285253117.png" style="width: 488px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280637i0A300561C8480140/image-dimensions/488x188?v=v2" width="488" height="188" role="button" title="RavindraRathore_8-1751285253117.png" alt="RavindraRathore_8-1751285253117.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Provide Policy name and click on Add.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_9-1751285253120.png" style="width: 455px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280636iC05699CE4A080A2B/image-dimensions/455x323?v=v2" width="455" height="323" role="button" title="RavindraRathore_9-1751285253120.png" alt="RavindraRathore_9-1751285253120.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create the Script and assign it in JavaScript policy to generate dates for "NotBefore" and "NotOnOrAfter”.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_10-1751285411849.png" style="width: 453px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280640iBE96576A669D8253/image-dimensions/453x188?v=v2" width="453" height="188" role="button" title="RavindraRathore_10-1751285411849.png" alt="RavindraRathore_10-1751285411849.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_11-1751285411854.png" style="width: 451px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280641i137D27CFB420BD4E/image-dimensions/451x158?v=v2" width="451" height="158" role="button" title="RavindraRathore_11-1751285411854.png" alt="RavindraRathore_11-1751285411854.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Script:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;//pad with single zero if the value is less than 10 else return the value as is
function padWithZero(value){
    return value &amp;gt;= 10 ? value.toString() : "0" + value.toString();
}

//function to return the date in SMAL format
function getFormattedDate(date){
	var yr = date.getUTCFullYear();
	var day = padWithZero(date.getUTCDate());
	var mnth = padWithZero(date.getUTCMonth() + 1);
	var hr = padWithZero(date.getUTCHours());
	var mn = padWithZero(date.getUTCMinutes());
	var sec = padWithZero(date.getUTCSeconds());
	var msec = date.getUTCMilliseconds();
    return  yr + '-' + mnth + '-' + day + 'T' + hr + ':' + mn + ':' + sec + '.' + msec + 'Z';
}

//Copy the date to generate a new date
function copyDate(date){
  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());
}

//function to add n days 
function addDays(date, days){
    var newDate = copyDate(date);
    newDate.setTime(newDate.getTime() + days * 24 * 60 * 60 * 1000);
    return newDate;
}

function handle_ContextType(){

   context.setVariable("request.header.Content-Type","application/xml");
}

handle_ContextType();

var date = new Date();

//set the not before timestamp to current timestamp
context.setVariable("DatenotBefore", getFormattedDate(date));

//set the not after timestamp to 1 day after the current timestamp
context.setVariable("DatenotOnorAfter", getFormattedDate(addDays(date,1)));&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 6:&lt;/STRONG&gt; Add the SAML Assertion generation policy in the preflow of TargetEndPoint.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_12-1751285563790.png" style="width: 461px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280642iBF4784CF490617D8/image-dimensions/461x174?v=v2" width="461" height="174" role="button" title="RavindraRathore_12-1751285563790.png" alt="RavindraRathore_12-1751285563790.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Code:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;&amp;lt;GenerateSAMLAssertion async="false" continueOnError="false" enabled="true" ignoreContentType = "false" xmlns="http://www.sap.com/apimgmt"&amp;gt;
	&amp;lt;CanonicalizationAlgorithm /&amp;gt;
   &amp;lt;Issuer&amp;gt; www.SF_myidp.com &amp;lt;/ Issuer &amp;gt;
 &amp;lt;KeyStore&amp;gt;
        &amp;lt;Name&amp;gt; SF_SAML &amp;lt;/Name&amp;gt;
        &amp;lt;Alias&amp;gt; SF_SAML &amp;lt;/Alias&amp;gt;
    &amp;lt;/KeyStore&amp;gt;
	&amp;lt;OutputVariable&amp;gt;
   &amp;lt;FlowVariable name="samlassertion"/&amp;gt;
	&amp;lt;/OutputVariable&amp;gt;
	&amp;lt;SignatureAlgorithm /&amp;gt;
	 &amp;lt;Subject&amp;gt; sfadmin &amp;lt;/ Subject &amp;gt;
	&amp;lt;Template ignoreUnresolvedVariables="false"&amp;gt;
&amp;lt;![CDATA[
&amp;lt;saml2:Assertion ID="{saml.id}" IssueInstant="{saml.issueInstant}" Version="2.0"
        xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"&amp;gt;&amp;lt;saml2:Issuer
        xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"&amp;gt;{saml.issuer}&amp;lt;/saml2:Issuer&amp;gt;&amp;lt;saml2:Subject
        xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"&amp;gt;&amp;lt;saml2:NameID Format="urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"&amp;gt;{saml.subject}&amp;lt;/saml2:NameID&amp;gt;&amp;lt;saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer"&amp;gt;&amp;lt;saml2:SubjectConfirmationData NotOnOrAfter="{DatenotOnorAfter}" Recipient="https://successFactorsHost.com/oauth/token"/&amp;gt;&amp;lt;/saml2:SubjectConfirmation&amp;gt;&amp;lt;/saml2:Subject&amp;gt;&amp;lt;saml2:Conditions NotBefore="{DatenotBefore}" NotOnOrAfter="{DatenotOnorAfter}"
        xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"&amp;gt;&amp;lt;saml2:AudienceRestriction&amp;gt;&amp;lt;saml2:Audience&amp;gt;www.successfactors.com&amp;lt;/saml2:Audience&amp;gt;&amp;lt;/saml2:AudienceRestriction&amp;gt;&amp;lt;/saml2:Conditions&amp;gt;
&amp;lt;saml2:AttributeStatement&amp;gt;&amp;lt;saml2:Attribute Name="api_key"&amp;gt;
		&amp;lt;saml2:AttributeValue xsi:type="xs:string"&amp;gt;NDU0MDE0MDkwYj***5YTE5MWIxMTNkNjc1Zg&amp;lt;/saml2:AttributeValue&amp;gt;&amp;lt;/saml2:Attribute&amp;gt;&amp;lt;/saml2:AttributeStatement&amp;gt; &amp;lt;/saml2:Assertion&amp;gt;
                ]]&amp;gt;
   &amp;lt;/Template&amp;gt;
&amp;lt;/GenerateSAMLAssertion&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;TABLE width="922"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="659"&gt;&amp;lt;Issuer&amp;gt; &lt;A href="http://www.SF_myidp.com" target="_blank" rel="noopener nofollow noreferrer"&gt;www.SF_myidp.com&lt;/A&gt; &amp;lt;/ Issuer &amp;gt;&lt;/TD&gt;&lt;TD width="263"&gt;Provide Issuer details&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="659"&gt;&amp;lt;KeyStore&amp;gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;Name&amp;gt; SF_SAML &amp;lt;/Name&amp;gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;Alias&amp;gt; SF_SAML &amp;lt;/Alias&amp;gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/KeyStore&amp;gt;&lt;/TD&gt;&lt;TD width="263"&gt;Provide keystore details which were created in certificate tab of SAP API in P12 Format in Step 3&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&amp;lt;Subject&amp;gt; sfadmin &amp;lt;/ Subject &amp;gt;&lt;/TD&gt;&lt;TD width="263"&gt;Provide API user which will be used for operation in SuccessFactors&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="659"&gt;&amp;lt;saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer"&amp;gt;&amp;lt;saml2:SubjectConfirmationData NotOnOrAfter="{DatenotOnorAfter}" Recipient="&lt;A href="https://successFactorsHost.com/oauth/token" target="_blank" rel="noopener nofollow noreferrer"&gt;https://successFactorsHost.com/oauth/token&lt;/A&gt;"/&amp;gt;&amp;lt;/saml2:SubjectConfirmation&amp;gt;&amp;lt;/&lt;/TD&gt;&lt;TD width="263"&gt;Provide SuccessFactors Oauth token URL as a recipient&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="659"&gt;&amp;lt;saml2:AttributeStatement&amp;gt;&amp;lt;saml2:Attribute Name="api_key"&amp;gt;&lt;BR /&gt;&amp;lt;saml2:AttributeValue xsi:type="xs:string"&amp;gt;NDU0MDE0MDkwYj***5YTE5MWIxMTNkNjc1Zg&amp;lt;/saml2:AttributeValue&amp;gt;&amp;lt;/saml2:Attribute&amp;gt;&amp;lt;/saml2:AttributeStatement&amp;gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="263"&gt;Provide SuccessFactors API key which is created in Step 1&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;Step 7:&lt;/STRONG&gt;&lt;SPAN&gt; Incorporate JavaScript to remove the XML tag “&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;” from the response of the SAML assertion generation policy.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-120px" style="padding-left : 120px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_0-1751291970805.png" style="width: 453px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280718iCDE273E32FB5550B/image-dimensions/453x218?v=v2" width="453" height="218" role="button" title="RavindraRathore_0-1751291970805.png" alt="RavindraRathore_0-1751291970805.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-120px" style="padding-left : 120px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_14-1751285734809.png" style="width: 462px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280643i81D4EE8D3CE1FD3D/image-dimensions/462x180?v=v2" width="462" height="180" role="button" title="RavindraRathore_14-1751285734809.png" alt="RavindraRathore_14-1751285734809.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Code:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;var assertion = context.getVariable("samlassertion").replace("&amp;lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&amp;gt;","");
context.setVariable("samlassertion", assertion);&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 8:&lt;/STRONG&gt; Include a Python script to perform base64 encoding on the SAML Assertion response, which will be used in the next step to generate the token.&lt;/P&gt;&lt;P class="lia-indent-padding-left-120px" style="padding-left : 120px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_15-1751285810551.png" style="width: 458px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280647i8BB8C2235BEFC854/image-dimensions/458x221?v=v2" width="458" height="221" role="button" title="RavindraRathore_15-1751285810551.png" alt="RavindraRathore_15-1751285810551.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-120px" style="padding-left : 120px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_16-1751285810556.png" style="width: 452px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280645i378501D7FF3309EF/image-dimensions/452x182?v=v2" width="452" height="182" role="button" title="RavindraRathore_16-1751285810556.png" alt="RavindraRathore_16-1751285810556.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Code:&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;import base64

encoderesponse = base64.b64encode(flow.getVariable("samlassertion"));

flow.setVariable("base64SAMLResponse", encoderesponse )&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 9:&lt;/STRONG&gt; Add a ServiceCallout policy to make an API call to the /oauth/token API with the company ID, client ID, SAML Assertion response, and grant_type set to “urn:ietf:params:oauth:grant-type:saml2-bearer.” This call will return a token response.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_17-1751285810566.png" style="width: 442px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280646iBBB301DBDA7CE9F6/image-dimensions/442x202?v=v2" width="442" height="202" role="button" title="RavindraRathore_17-1751285810566.png" alt="RavindraRathore_17-1751285810566.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Code:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&amp;gt;

&amp;lt;ServiceCallout async="false" continueOnError="false" enabled="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;

    &amp;lt;Request clearPayload="true"&amp;gt;

        &amp;lt;Set&amp;gt;

            &amp;lt;Payload contentType="application/x-www-form-urlencoded"&amp;gt;client_id=NDU0MDE0MDkwYj***5YTE5MWIxMTNkNjc1Zg&amp;amp;amp;user_id=sfadmin&amp;amp;amp;company_id=SFCPA****31&amp;amp;amp;assertion={base64SAMLResponse}&amp;amp;amp;grant_type=urn:ietf:params:oauth:grant-type:saml2-bearer&amp;lt;/Payload&amp;gt;

            &amp;lt;Verb&amp;gt;POST&amp;lt;/Verb&amp;gt;

        &amp;lt;/Set&amp;gt;

        &amp;lt;IgnoreUnresolvedVariables&amp;gt;false&amp;lt;/IgnoreUnresolvedVariables&amp;gt;

    &amp;lt;/Request&amp;gt;

    &amp;lt;Response&amp;gt;sap_tokenresponse&amp;lt;/Response&amp;gt;

    &amp;lt;Timeout&amp;gt;30000&amp;lt;/Timeout&amp;gt;

    &amp;lt;HTTPTargetConnection&amp;gt;

        &amp;lt;URL&amp;gt;https://successFactorsHost.com/oauth/token&amp;lt;/URL&amp;gt;

    &amp;lt;/HTTPTargetConnection&amp;gt;

&amp;lt;/ServiceCallout&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 10:&lt;/STRONG&gt; Use the &lt;SPAN&gt;ExtractVariables&lt;/SPAN&gt;&amp;nbsp;policy to retrieve the token.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_18-1751285810576.png" style="width: 467px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280650i762357D40ED44477/image-dimensions/467x202?v=v2" width="467" height="202" role="button" title="RavindraRathore_18-1751285810576.png" alt="RavindraRathore_18-1751285810576.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_0-1751288933812.png" style="width: 468px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280677iC270CBA56ED1F33C/image-dimensions/468x213?v=v2" width="468" height="213" role="button" title="RavindraRathore_0-1751288933812.png" alt="RavindraRathore_0-1751288933812.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 11:&lt;/STRONG&gt; Create an Authorization header using the AssignMessage policy. And deploy the API proxy after saving it.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_20-1751285810586.png" style="width: 453px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280649iF67C64EA62B31688/image-dimensions/453x205?v=v2" width="453" height="205" role="button" title="RavindraRathore_20-1751285810586.png" alt="RavindraRathore_20-1751285810586.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_21-1751285810588.png" style="width: 444px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280652i713066D1C782A621/image-dimensions/444x214?v=v2" width="444" height="214" role="button" title="RavindraRathore_21-1751285810588.png" alt="RavindraRathore_21-1751285810588.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Test the API using Postman or the test tab in the integration suite and verify that you can successfully retrieve details from SuccessFactors.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_22-1751285810594.png" style="width: 437px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280651i20F2B44FE20A9DA8/image-dimensions/437x189?v=v2" width="437" height="189" role="button" title="RavindraRathore_22-1751285810594.png" alt="RavindraRathore_22-1751285810594.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;By following these steps, you will have set up the necessary OAuth2 SAML assertion authentication to enable API access between SAP API Management and SuccessFactors. Ensure all steps are completed correctly to establish a secure connection.&lt;/P&gt;&lt;P&gt;Also, you can create the SAML assertion offline using &lt;STRONG&gt;SAP-provided Offline tool, &lt;/STRONG&gt;as&amp;nbsp;mentioned in SAP KBA-&lt;A title="3031657" href="https://userapps.support.sap.com/sap/support/knowledge/en/3031657" target="_self" rel="noopener noreferrer"&gt;3031657&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;References:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/successfactors-platform/sap-successfactors-api-reference-guide-odata-v2/generating-saml-assertion" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/successfactors-platform/sap-successfactors-api-reference-guide-odata-v2/generating-saml-assertion&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/sap-api-management/sap-api-management/saml-assertion-policy?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/sap-api-management/sap-api-management/saml-assertion-policy?version=Cloud&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://userapps.support.sap.com/sap/support/knowledge/en/3031657" target="_blank" rel="noopener noreferrer"&gt;3031657 - How to generate SAML assertions using SAP-provided Offline tool - SAP SuccessFactors | SAP Knowledge Base Article&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-api-management-generating-oauth-saml-assertion-for-successfactors-api/ba-p/14140473"/>
    <published>2025-07-02T14:14:31.090000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/securing-as2-sender-adapter-in-sap-cpi-using-oauth-2-0-and-api-management/ba-p/14143509</id>
    <title>Securing AS2 Sender Adapter in SAP CPI Using OAuth 2.0 and API Management</title>
    <updated>2025-07-05T11:13:47.885000+02:00</updated>
    <author>
      <name>Aishwarya_Pola</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2090996</uri>
    </author>
    <content>&lt;P&gt;In this hands-on guide, I’ll walk you through a proven approach to securing AS2 iFlows using SAP API Management and OAuth 2.0 — ensuring your AS2 endpoint is not just exposed, but fortified with robust, token-based access control.&lt;/P&gt;&lt;P&gt;We’ll implement &lt;STRONG&gt;two API proxies&lt;/STRONG&gt; — one dedicated to &lt;STRONG&gt;generating OAuth 2.0 access tokens&lt;/STRONG&gt;, and another for &lt;STRONG&gt;validating those tokens and securely routing client requests to your AS2 iFlow&lt;/STRONG&gt;. This approach ensures that &lt;STRONG&gt;only authorized clients&lt;/STRONG&gt; can trigger your AS2 integration scenarios, eliminating the need to expose sensitive endpoints or manage backend credentials manually.&lt;/P&gt;&lt;P&gt;Follow along as we build this secure setup step by step and transform a basic AS2 interface into a &lt;STRONG&gt;scalable, OAuth-enabled integration flow&lt;/STRONG&gt; aligned with modern enterprise API security standards.&lt;/P&gt;&lt;H4 id="toc-hId-1992309007"&gt;&lt;STRONG&gt;Architecture Overview&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aishwarya_Pola_9-1751538897795.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282174i83BF7A29037B3368/image-size/large?v=v2&amp;amp;px=999" role="button" title="Aishwarya_Pola_9-1751538897795.png" alt="Aishwarya_Pola_9-1751538897795.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Token Generation Proxy&lt;/STRONG&gt; – Generates OAuth tokens using client_id and client_secret.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;AS2 Access Proxy&lt;/STRONG&gt; – Validates access tokens and routes requests to the AS2 iFlow.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Target Endpoint (CPI iFlow)&lt;/STRONG&gt; – The actual AS2 iFlow triggered securely via API Management.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Product &amp;amp; Application&lt;/STRONG&gt; – Combines both proxies and enables client registration and access&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1666712783"&gt;&lt;STRONG&gt;Step-by-Step Implementation&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-1599281997"&gt;Step 1: Get the AS2 Sender Adapter Endpoint&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Go to &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; → &lt;STRONG&gt;Monitor&lt;/STRONG&gt; → &lt;STRONG&gt;Manage Integration Content&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Select the iFlow that uses the &lt;STRONG&gt;AS2 Sender Adapter&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Copy the &lt;STRONG&gt;endpoint URL&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt;&lt;/P&gt;&lt;PRE&gt;https://&amp;lt;your-tenant&amp;gt;.hana.ondemand.com/http/AS2Inbound&lt;/PRE&gt;&lt;H4 id="toc-hId-1402768492"&gt;&lt;STRONG&gt;Step 2: Create API Proxy for AS2 Access&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Go to &lt;STRONG&gt;Integration Suite&lt;/STRONG&gt;&amp;nbsp;→ &lt;STRONG&gt;Develop&lt;/STRONG&gt; → &lt;STRONG&gt;APIs&lt;/STRONG&gt; → &lt;STRONG&gt;Create API&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Choose &lt;STRONG&gt;“URL”&lt;/STRONG&gt; and paste the AS2 iFlow endpoint copied in Step 1.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Name the proxy (e.g., AS2_Access_Proxy).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Complete the proxy creation and save it.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aishwarya_Pola_0-1751527767511.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282048iD89A07C32071AF03/image-size/large?v=v2&amp;amp;px=999" role="button" title="Aishwarya_Pola_0-1751527767511.png" alt="Aishwarya_Pola_0-1751527767511.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1077172268"&gt;Step 3: Secure Backend Call to CPI&amp;nbsp;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Go to &lt;STRONG&gt;Policies&lt;/STRONG&gt; → &lt;STRONG&gt;TargetEndpoint&lt;/STRONG&gt; → &lt;STRONG&gt;PreFlow&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Open the &lt;STRONG&gt;Discover&lt;/STRONG&gt; tab, select &lt;STRONG&gt;Apis&lt;/STRONG&gt; and apply the &lt;STRONG&gt;SAP BTP Connectivity Template&lt;/STRONG&gt;.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aishwarya_Pola_2-1751533309522.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282112iAB5196294172AD9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Aishwarya_Pola_2-1751533309522.png" alt="Aishwarya_Pola_2-1751533309522.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;After applying the template, update it with your &lt;STRONG&gt;Client ID&lt;/STRONG&gt;, &lt;STRONG&gt;Client Secret&lt;/STRONG&gt;, and &lt;STRONG&gt;Token URL&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This configuration ensures the API proxy can securely fetch a token and call the AS2 iFlow without exposing backend credentials.&lt;/P&gt;&lt;H3 id="toc-hId-880658763"&gt;Step 4: Add OAuth Token Validation Policy to Proxy&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Open the &lt;STRONG&gt;AS2_Access_Proxy&lt;/STRONG&gt; in the &lt;STRONG&gt;API portal&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Navigate to &lt;STRONG&gt;Policies&lt;/STRONG&gt; → &lt;STRONG&gt;ProxyEndpoint&lt;/STRONG&gt; → &lt;STRONG&gt;PreFlow&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Add the following OAuth 2.0 policy to validate incoming access tokens:&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;OAuthV2 async="false" continueOnError="false" enabled="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;  
   &amp;lt;ExternalAuthorization&amp;gt;false&amp;lt;/ExternalAuthorization&amp;gt;
   &amp;lt;Operation&amp;gt;VerifyAccessToken&amp;lt;/Operation&amp;gt;
   &amp;lt;GenerateResponse enabled="true"/&amp;gt;
   &amp;lt;SupportedGrantTypes/&amp;gt;
   &amp;lt;Tokens/&amp;gt;
&amp;lt;/OAuthV2&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This ensures that only authorized client requests with valid tokens are processed.&lt;/P&gt;&lt;H3 id="toc-hId-684145258"&gt;&amp;nbsp;Step 5: Create a Token Generation Proxy&lt;/H3&gt;&lt;P&gt;To enable secure, token-based access, clients first need a way to obtain an OAuth 2.0 access token. This proxy handles that responsibility.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Create a new API proxy with a dummy backend (e.g., &lt;A href="https://example.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://example.com&lt;/A&gt;).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Name it something like Token_Generator_Proxy.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aishwarya_Pola_4-1751534049166.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282114i4E4F60C79107F1C3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Aishwarya_Pola_4-1751534049166.png" alt="Aishwarya_Pola_4-1751534049166.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Go to &lt;STRONG&gt;Policies&lt;/STRONG&gt; → &lt;STRONG&gt;ProxyEndpoint&lt;/STRONG&gt; → &lt;STRONG&gt;PreFlow&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Add the following OAuth 2.0 policy to generate tokens using the &lt;STRONG&gt;client credentials&lt;/STRONG&gt; flow:&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;OAuthV2 async="false" continueOnError="false" enabled="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;
   &amp;lt;ExternalAuthorization&amp;gt;false&amp;lt;/ExternalAuthorization&amp;gt;
   &amp;lt;Operation&amp;gt;GenerateAccessToken&amp;lt;/Operation&amp;gt;
   &amp;lt;GenerateResponse enabled="true"/&amp;gt;
   &amp;lt;SupportedGrantTypes&amp;gt;
      &amp;lt;GrantType&amp;gt;client_credentials&amp;lt;/GrantType&amp;gt;
   &amp;lt;/SupportedGrantTypes&amp;gt;
   &amp;lt;Tokens/&amp;gt;
&amp;lt;/OAuthV2&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Why this is needed&lt;/STRONG&gt;:&lt;BR /&gt;This proxy issues access tokens to trusted clients based on their client_id and client_secret. These tokens will then be used to authenticate future requests to the AS2 endpoint via the access proxy.&lt;/P&gt;&lt;P&gt;Clients can request an access token as follows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;URL&lt;/STRONG&gt;: POST /token-generator-proxy&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Headers&lt;/STRONG&gt;: Content-Type: application/x-www-form-urlencoded&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Body&lt;/STRONG&gt;:&amp;nbsp;client_id=APP_KEY&amp;amp;client_secret=APP_SECRET&amp;amp;grant_type=client_credentials&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-487631753"&gt;&amp;nbsp;Step 6: Create a Product and Add Both Proxies&lt;/H3&gt;&lt;P&gt;To bundle and expose your APIs securely, you’ll need to create a product in SAP API Management that includes both proxies.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;In integration suite , Go to &lt;STRONG&gt;Engage&lt;/STRONG&gt;&amp;nbsp;→ &lt;STRONG&gt;Products&lt;/STRONG&gt; → &lt;STRONG&gt;Create Product&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Add the following APIs to the product:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Token_Generator_Proxy&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;AS2_Access_Proxy&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aishwarya_Pola_5-1751534362681.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282115i527666BD3E8AB19D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Aishwarya_Pola_5-1751534362681.png" alt="Aishwarya_Pola_5-1751534362681.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Save and &lt;STRONG&gt;publish&lt;/STRONG&gt; the product.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;A product groups multiple APIs together and makes them available for consumption. Only APIs that are part of a product can be accessed through a registered application in the Developer Portal.&lt;/P&gt;&lt;H3 id="toc-hId-291118248"&gt;&amp;nbsp;Step 7: Register an Application&lt;/H3&gt;&lt;P&gt;Now that your product is published, you’ll register an application that will consume the secured APIs.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Go to &lt;STRONG&gt;Developer Hub&lt;/STRONG&gt; → &lt;STRONG&gt;My Workspace&lt;/STRONG&gt; → &lt;STRONG&gt;Create Application&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Assign the previously created product (which includes both proxies) to the application.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aishwarya_Pola_6-1751535583547.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282121iDDFB7D7376042B94/image-size/large?v=v2&amp;amp;px=999" role="button" title="Aishwarya_Pola_6-1751535583547.png" alt="Aishwarya_Pola_6-1751535583547.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;After creation, make note of the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Application Key (Client ID)&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Application Secret (Client Secret)&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These credentials are used to request access tokens from the Token_Generator_Proxy. The generated tokens will be used to authorize calls to the AS2_Access_Proxy.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;By following this approach, you've successfully secured your AS2 iFlow using SAP API Management and OAuth 2.0 — without exposing sensitive endpoints or relying on manual credentials.&lt;/P&gt;&lt;P&gt;This setup ensures only authorized clients can access your AS2 interface in a clean, scalable, and secure way.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;All the views and opinions in this blog are my own and are made in my personal capacity. SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-94604743"&gt;&amp;nbsp;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/securing-as2-sender-adapter-in-sap-cpi-using-oauth-2-0-and-api-management/ba-p/14143509"/>
    <published>2025-07-05T11:13:47.885000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/secure-as2-integration-in-sap-cpi-using-oauth-2-0-end-to-end-authentication/ba-p/14144344</id>
    <title>Secure AS2 Integration in SAP CPI Using OAuth 2.0: End-to-End Authentication Flow</title>
    <updated>2025-07-05T11:34:51.024000+02:00</updated>
    <author>
      <name>SanalaTejaswini</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2117187</uri>
    </author>
    <content>&lt;P&gt;Security and compliance are vital in today's automated B2B integrations. AS2 is a trusted protocol for secure document exchange, while&lt;STRONG&gt; OAuth 2.0 enables token-based authentication&lt;/STRONG&gt;. Integrating both within SAP Cloud Integration (CPI) allows organizations to securely transmit data, manage credentials efficiently, and meet modern security standards without disrupting legacy systems.&lt;/P&gt;&lt;P&gt;The Below is the Flow that we configured :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_0-1751609613583.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282624i1488D484D20D450C/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_0-1751609613583.png" alt="SanalaTejaswini_0-1751609613583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Initialization of AS2 Adapter and Process Trigger (Start Timer)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;:&lt;/STRONG&gt; The process begins with a Timer Start event that triggers the integration flow on a scheduled basis. It activates the AS2 Receiver Adapter to securely send messages to the target endpoint via the AS2 protocol.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Retrieving OAuth Credentials from Security Material (Groovy Script):&lt;/STRONG&gt; A Groovy script is used in this scenario to retrieve the &lt;STRONG&gt;OAuth Client Credentials&lt;/STRONG&gt; which are shared from the receiver. These credentials are securely stored within the Security Material configuration. Once retrieved, the script injects these credentials into the message header to allow for OAuth authentication in the subsequent API call. This ensures that communication is authenticated before being processed further in the flow.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The below is the Groovy Code Snippet used to&amp;nbsp;retrieve the OAuth Client Credentials:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import com.sap.it.api.ITApiFactory
import com.sap.it.api.securestore.SecureStoreService

def Message processData(Message message) {
    // Name of the Security Material (User Credentials) as maintained in CPI
    def credentialName = "as2_oauthtoken" // Replace with your credential alias

    // Get SecureStoreService instance
    def secureStoreService = ITApiFactory.getApi(SecureStoreService.class, null)

    // Fetch the UserCredential object
    def credential = secureStoreService.getUserCredential(credentialName)

    if (credential == null) {
        throw new Exception("No credentials found for alias: " + credentialName)
    }

    // Extract client ID (username) and client secret (password)
    String clientId = credential.getUsername()
    String clientSecret = new String(credential.getPassword())

    // Set them as headers for later use in the flow
    message.setHeader("client_id", clientId)
    message.setHeader("client_secret", clientSecret)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_1-1751610446033.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282627i6A9F731A9CB72439/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_1-1751610446033.png" alt="SanalaTejaswini_1-1751610446033.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Setting Message Headers and Body for Token Request (Content Modifiers):&lt;/STRONG&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Message Headers:&amp;nbsp;&lt;/STRONG&gt; Before sending the request, mandatory HTTP headers like Content-Type and Response-Type are set to ensure proper authentication and compliance with API specifications. Content-Type defines the format of the outgoing data (e.g., application/Json), and Response-Type specifies the expected response format (e.g., JSON or XML). Additionally, the grant type is set to client credentials, indicating that the client uses its credentials (client ID and secret) to directly request an access token without user involvement.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_2-1751610523573.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282628iC353F81F7B182E30/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_2-1751610523573.png" alt="SanalaTejaswini_2-1751610523573.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp; 2.&lt;STRONG&gt; Message Body&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;:&lt;/STRONG&gt; In the message body, the header values, including the necessary OAuth credentials, are set&amp;nbsp; &amp;nbsp; &amp;nbsp;for authentication. The header information ensures that the recipient system can verify the request’s&amp;nbsp; &amp;nbsp; &amp;nbsp;authenticity before processing it.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_3-1751610598256.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282630i7614FE9AE06D720F/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_3-1751610598256.png" alt="SanalaTejaswini_3-1751610598256.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Requesting OAuth Token Using HTTP Adapter (Request-Reply Mechanism):&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The HTTP Adapter is used to send a request to a proxy URL (created earlier in the sender AS2 adapter). This URL helps connect to the OAuth server to get the token. When the adapter sends the request, a new OAuth token is generated. This token is like a temporary key that proves the system’s identity and allows it to securely talk to the target system. The response from the server comes in JSON format, and it contains the access token. This token is then extracted and saved in the message header, so it can be used in the next steps to authorize API calls.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_4-1751610645668.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282631i6561064F7CD9D19C/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_4-1751610645668.png" alt="SanalaTejaswini_4-1751610645668.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Converting OAuth Response from JSON to &lt;/SPAN&gt;&lt;SPAN class=""&gt;XML(&lt;/SPAN&gt;&lt;SPAN class=""&gt;JSON to XML Conversion):&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; In this scenario, &lt;/SPAN&gt;&lt;SPAN class=""&gt;We&lt;/SPAN&gt;&lt;SPAN class=""&gt; will be converting the JSON format of Data to XML, here &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;XPath&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; is used for parsing the response and extracting the token.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Extracting and Storing Access Token Dynamically (Content Modifiers):&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Message Headers: &lt;/STRONG&gt;The access token required for authentication is retrieved from the OAuth response payload using an XPath expression. This token is extracted dynamically and stored in a message header, typically named access_token.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_5-1751610754085.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282633i59121F79047A54DE/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_5-1751610754085.png" alt="SanalaTejaswini_5-1751610754085.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;2&lt;STRONG&gt;.Message Body:&lt;/STRONG&gt; In the &lt;/SPAN&gt;&lt;SPAN class=""&gt;subsequent&lt;/SPAN&gt;&lt;SPAN class=""&gt; HTTP request, the Authorization header is set using the format Bearer ${header. &lt;/SPAN&gt;&lt;SPAN class=""&gt;access_token&lt;/SPAN&gt;&lt;SPAN class=""&gt;}&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN class=""&gt;Here, the keyword “Bearer” &lt;/SPAN&gt;&lt;SPAN class=""&gt;indicates&lt;/SPAN&gt;&lt;SPAN class=""&gt; token-based authentication, and ${header. &lt;/SPAN&gt;&lt;SPAN class=""&gt;access_token&lt;/SPAN&gt;&lt;SPAN class=""&gt;} dynamically inserts the token value from the header into the request. This approach ensures secure and standards-compliant inclusion of OAuth tokens when making authenticated HTTP calls.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_6-1751610830434.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282634i4BE7F050FEE1B8E4/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_6-1751610830434.png" alt="SanalaTejaswini_6-1751610830434.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Configuring Authorization Header (Content Modifier)&lt;/STRONG&gt;: A Content Modifier is used to set up both the Authorization header and the message body. Under the Message Header tab, a new header named Authorization is created using the expression ${&lt;/SPAN&gt;&lt;SPAN class=""&gt;in.body&lt;/SPAN&gt;&lt;SPAN class=""&gt;}, which dynamically assigns the content of the message, usually an OAuth &lt;/SPAN&gt;&lt;SPAN class=""&gt;token&lt;/SPAN&gt;&lt;SPAN class=""&gt; response to the header. This is typically done after retrieving the token from an OAuth endpoint.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_7-1751611033178.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282635i57AB533F2463F231/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_7-1751611033178.png" alt="SanalaTejaswini_7-1751611033178.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Sending Authenticated Request to Target System:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; After including the Authorization header with the Bearer token, the request is &lt;/SPAN&gt;&lt;SPAN class=""&gt;forwarded&lt;/SPAN&gt;&lt;SPAN class=""&gt; to the &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Proxy URL&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. If the token is valid, the system will &lt;/SPAN&gt;&lt;SPAN class=""&gt;proceed&lt;/SPAN&gt;&lt;SPAN class=""&gt; to interact with the target endpoint. A custom header named Authorization is added under the &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Custom Headers Pattern&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; field. This ensures that when data is transmitted to the target system via AS2, the Authorization header is included in the message. This approach enables secure, authorized interaction with the target endpoint.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_8-1751611105083.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282636i7BD5099F21C98DC5/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_8-1751611105083.png" alt="SanalaTejaswini_8-1751611105083.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_9-1751611126950.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282637i35D360AABAEBA236/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_9-1751611126950.png" alt="SanalaTejaswini_9-1751611126950.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Integrating OAuth 2.0 with the AS2 Receiver Adapter in SAP CPI ensures secure, authenticated communication between systems. It allows dynamic credential handling and token-based access without manual intervention. This setup enhances data security while maintaining compliance with modern integration standards. Overall, it bridges legacy protocols with contemporary authentication practices effectively.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/secure-as2-integration-in-sap-cpi-using-oauth-2-0-end-to-end-authentication/ba-p/14144344"/>
    <published>2025-07-05T11:34:51.024000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-rundown-of-api-lifecycle-in-sap-btp-end-end-tutorial-for-beginners/ba-p/14141530</id>
    <title>A Rundown of API Lifecycle in SAP BTP: End - End tutorial for beginners</title>
    <updated>2025-07-07T09:22:18.949000+02:00</updated>
    <author>
      <name>SoumyashreeGouda</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2155779</uri>
    </author>
    <content>&lt;P&gt;Introduction:&amp;nbsp;&lt;SPAN&gt;In this weblog, I'll give you a rundown of API lifecycle in SAP BTP - beginning with how to create an API Provider, API Proxy, testing a Product through the Developer Portal.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;(I) Create API Provider:&amp;nbsp;For creating an API provider first go to Configure&amp;gt;&amp;gt;APIs&amp;gt;&amp;gt;API Providers&amp;gt;&amp;gt;Click on Create&amp;gt;&amp;gt;Give the details like name, host, authentication&amp;gt;&amp;gt; then save it and test the connection.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_38-1751362753764.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281169i8861E0752876EAF7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_38-1751362753764.png" alt="SoumyashreeGouda_38-1751362753764.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_39-1751362753748.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281171iE676C192EF8E14BA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_39-1751362753748.png" alt="SoumyashreeGouda_39-1751362753748.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_40-1751362753767.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281172i15A44688377D17B7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_40-1751362753767.png" alt="SoumyashreeGouda_40-1751362753767.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;(II) Create API Proxy:&amp;nbsp; Select the API Provider which you have created above then select the service from the available list for your Api Provider.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_42-1751362753765.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281175i938D22A470342993/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_42-1751362753765.png" alt="SoumyashreeGouda_42-1751362753765.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_43-1751362753747.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281173i28DEE5E5B0614D7D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_43-1751362753747.png" alt="SoumyashreeGouda_43-1751362753747.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Specify the Proxy Details: n&lt;/SPAN&gt;&lt;SPAN&gt;ame&amp;gt;title&amp;gt;&amp;gt;base path&amp;gt;&amp;gt;version&amp;gt;&amp;gt; click on create and review the target endpoint and resources&amp;gt;&amp;gt;then save it&amp;gt;&amp;gt;Deploy it for activation of your API proxy.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_44-1751362753754.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281174i5A2A8C230F21BA75/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_44-1751362753754.png" alt="SoumyashreeGouda_44-1751362753754.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(III)&amp;nbsp; In this step we need to add policies click on the policies&amp;gt;&amp;gt;edit&amp;gt;&amp;gt;flows&amp;gt;&amp;gt;TargetEndpoint&amp;gt;&amp;gt;PostFlow&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_1-1751833670809.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283235iB722D22B2DC96248/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_1-1751833670809.png" alt="SoumyashreeGouda_1-1751833670809.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here, I have added two policies one is Assign Message Policy and another is Basic Authentication.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In Assign message policy-&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(i)add name&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(ii) the XML, editor give your username and password &amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_48-1751362753773.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281181i325E3167466EA6E2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_48-1751362753773.png" alt="SoumyashreeGouda_48-1751362753773.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now you have to add Basic Authentication Policy here you have to add the name and check these details&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;like Endpoint type, flow type and stream. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Then Click on update&amp;gt;&amp;gt;save&amp;gt;&amp;gt;redeploy it again.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(IV) For Creating a Product - Engage&amp;gt;&amp;gt;Product&amp;gt;&amp;gt;Create&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_53-1751362753805.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281185iC743DED2D01B1057/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_53-1751362753805.png" alt="SoumyashreeGouda_53-1751362753805.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_54-1751362753822.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281188i3BF2C127ABE69BE3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_54-1751362753822.png" alt="SoumyashreeGouda_54-1751362753822.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Then move to APIs tab press on add button&amp;gt;&amp;gt; now choose the API which you have created earlier&amp;gt;&amp;gt;click on OK button and then publish it&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_55-1751362753881.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281186i1CC0B74AC232F6F4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_55-1751362753881.png" alt="SoumyashreeGouda_55-1751362753881.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You will see there will be an entry in APIs column with the status of Published.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_58-1751362753818.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281191i6186D2765B015ACB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_58-1751362753818.png" alt="SoumyashreeGouda_58-1751362753818.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on&amp;nbsp;&lt;/SPAN&gt;Explore our Ecosystem &amp;gt;&amp;gt; Developer Hub&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_52-1751362753807.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281184iFBE3345048D14823/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_52-1751362753807.png" alt="SoumyashreeGouda_52-1751362753807.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now you can see there is a product.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_59-1751362753848.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281190iE9B8D9FD79690D61/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_59-1751362753848.png" alt="SoumyashreeGouda_59-1751362753848.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(V) Test the Product: Select the Product&amp;gt;&amp;gt; ProductSet &amp;gt;&amp;gt; GET /ProductSet &amp;gt;&amp;gt;Try it out &amp;gt;&amp;gt;Execute&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_60-1751362753819.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281193i2CC78C5637EAD245/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_60-1751362753819.png" alt="SoumyashreeGouda_60-1751362753819.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Then it will give the response of Product Set with a HTTP status code 200.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-rundown-of-api-lifecycle-in-sap-btp-end-end-tutorial-for-beginners/ba-p/14141530"/>
    <published>2025-07-07T09:22:18.949000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-analytics-cloud-modeling-extensions-amp-integration-qrc3/ba-p/14130035</id>
    <title>What's New in SAP Analytics Cloud Modeling Extensions &amp; Integration QRC3 2025 Release</title>
    <updated>2025-07-14T08:40:08.881000+02:00</updated>
    <author>
      <name>AmandaJMurphy</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/46075</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1862208678"&gt;&lt;FONT color="#3366FF"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_0-1750164805647.png" style="width: 914px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275420iA5B00E2B0548A6B1/image-dimensions/914x521?v=v2" width="914" height="521" role="button" title="AmandaJMurphy_0-1750164805647.png" alt="AmandaJMurphy_0-1750164805647.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-1665695173"&gt;&lt;FONT color="#3366FF"&gt;&lt;SPAN&gt;Purpose&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Hello SAP Community Colleagues,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In QRC3 2025, we have an action-packed list of new features that have now been made available in the modeling area of SAP Analytics Cloud, within Business Data Cloud! &lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1598264387"&gt;&lt;FONT color="#3366FF"&gt;Overview&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;Learn more about these new features here:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;A new formula called &lt;STRONG&gt;&lt;EM&gt;WAVG&lt;/EM&gt;&lt;/STRONG&gt; (Weighted Average)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;First, Last and Average including unbooked data exception aggregation.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Data Export API – Delta Aggregation.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H4 id="toc-hId-1401750882"&gt;&amp;nbsp;&lt;/H4&gt;&lt;OL&gt;&lt;LI&gt;&lt;H4 id="toc-hId-1205237377"&gt;&lt;FONT color="#800080"&gt;New&amp;nbsp;&lt;/FONT&gt;&lt;FONT color="#800080"&gt;formula -&amp;nbsp;&lt;/FONT&gt;&lt;FONT color="#800080"&gt;WAVG&amp;nbsp; (Weighted Average)&lt;/FONT&gt;&lt;/H4&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;A new formula has been introduced into the modeler, called &lt;STRONG&gt;&lt;EM&gt;WAVG&lt;/EM&gt;&lt;/STRONG&gt;.&amp;nbsp; This formula calculates the &lt;STRONG&gt;&lt;EM&gt;weighted average&lt;/EM&gt;&lt;/STRONG&gt; of a member, based on the value of the corresponding members assigned weight.&amp;nbsp; It can be used in standard and account models.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#3366FF"&gt;&lt;EM&gt;How Weighted Average is calculated:&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#008000"&gt;Dimension&amp;nbsp; &lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#008000"&gt;Price&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#008000"&gt;Stock&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#008000"&gt;Price * Stock&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;Bread&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;2&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;10&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;20&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;Bread&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;3&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;20&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;60&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;Bread&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;4&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;30&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;120&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;Total&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;8&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;60&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;200&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Table 1: Table containing product, price and stock values&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;EM&gt;Table 1&lt;/EM&gt; shows a simple list of products with various prices and stock amounts. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To calculate the &lt;STRONG&gt;&lt;EM&gt;Average Price&lt;/EM&gt;&lt;/STRONG&gt;, use the following calculation: &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(2+3+4)/3 = &lt;STRONG&gt;3&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To calculate the &lt;STRONG&gt;&lt;EM&gt;Weighted Average Price&lt;/EM&gt;&lt;/STRONG&gt;, use the following calculation: (2*10) + (3*20) + (4*30) / (10 + 20 + 30 ) = 200 / 60 = &lt;STRONG&gt;3.33&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The weighted average calculation can provide a more accurate result, based on the given weight, compared to an average calculation.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;Syntax:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;FONT color="#993366"&gt;WAVG([Measure] or [Account Member], [Assigned Weight], [Dimension 1], [Dimension 2]... [Dimension 10])&lt;/FONT&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For example:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_0-1752490489141.png" style="width: 546px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286194iD34CF4E54F1C903F/image-dimensions/546x112?v=v2" width="546" height="112" role="button" title="AmandaJMurphy_0-1752490489141.png" alt="AmandaJMurphy_0-1752490489141.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;Figure 1: Sample WAVG Syntax&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The above &lt;STRONG&gt;&lt;EM&gt;WAVG&lt;/EM&gt;&lt;/STRONG&gt; formula calculates the weighted average of &lt;EM&gt;[Price]&lt;/EM&gt; using &lt;EM&gt;[Volume]&lt;/EM&gt; as the assigned weight, for a given Date and Product.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Up to &lt;EM&gt;10 dimensions&lt;/EM&gt; can be used within the WAVG formula.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Note that &lt;STRONG&gt;&lt;EM&gt;input enablement&lt;/EM&gt;&lt;/STRONG&gt; on cells containing this calculated measure is available on &lt;STRONG&gt;&lt;EM&gt;leaf members only&lt;/EM&gt;&lt;/STRONG&gt;, which is the lowest level of the hierarchy.&amp;nbsp; It is planned to make input enablement available on other members in the future.&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1008723872"&gt;&lt;FONT color="#800080"&gt;2.&amp;nbsp; First, Last and Average Exception Aggregation including Unbooked Data&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;You can now compute &lt;STRONG&gt;first, last and average exception aggregation&lt;/STRONG&gt; including unbooked data using a &lt;STRONG&gt;single dimension&lt;/STRONG&gt; on a &lt;STRONG&gt;base measure&lt;/STRONG&gt; or &lt;STRONG&gt;base account&lt;/STRONG&gt; with these three new exception aggregation values:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Average incl. Unbooked &lt;/STRONG&gt;calculates the average of all aggregated values, including unbooked values.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;First incl. Unbooked &lt;/STRONG&gt;shows the first (oldest) value in the selected period, including unbooked values.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Last incl. Unbooked&lt;/STRONG&gt;&amp;nbsp;shows the last (most recent) value in the selected period, including unbooked values.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_0-1750169796473.png" style="width: 347px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275469i23F4708C58A5AA2D/image-dimensions/347x734?v=v2" width="347" height="734" role="button" title="AmandaJMurphy_0-1750169796473.png" alt="AmandaJMurphy_0-1750169796473.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Figure 2: New exception aggregations in modeler&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;These new exception aggregations are supported in the standard and account model and can help to provide more accurate results on aggregated data.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;Average including unbooked exception aggregation example:&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_1-1750166418535.png" style="width: 951px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275438iD11347BCDB299DBE/image-dimensions/951x491?v=v2" width="951" height="491" role="button" title="AmandaJMurphy_1-1750166418535.png" alt="AmandaJMurphy_1-1750166418535.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Figure 3: Illustration on how Average incl. Unbooked now considers all months in period, instead of just months containing booked values&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the above example, an &lt;STRONG&gt;&lt;EM&gt;Average incl. Unbooked&lt;/EM&gt;&lt;/STRONG&gt; exception aggregation is applied to a base measure.&amp;nbsp; The total in Q1 is 100, in Q2 is 200, in Q3 is 300 and in Q4 is 400.&lt;/P&gt;&lt;P&gt;When &lt;STRONG&gt;&lt;EM&gt;booked values&lt;/EM&gt;&lt;/STRONG&gt; are only considered, the average is the sum of these values, divided by the number of booked entries, i.e. (100+200+300+400)/4 months=&lt;STRONG&gt;250&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;When &lt;STRONG&gt;&lt;EM&gt;considering unbooked data&lt;/EM&gt;&lt;/STRONG&gt;, a more accurate average exception aggregation can now be calculated.&amp;nbsp;&lt;/P&gt;&lt;P&gt;i.e. (100+200+300+400)/12 months = &lt;STRONG&gt;83.33&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;First including unbooked exception aggregation&amp;nbsp;example:&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_2-1750166588438.png" style="width: 970px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275440i7F8CE54F5451862E/image-dimensions/970x392?v=v2" width="970" height="392" role="button" title="AmandaJMurphy_2-1750166588438.png" alt="AmandaJMurphy_2-1750166588438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Figure 4: Illustration on how First incl. Unbooked now considers all months in period, instead of just months containing booked values&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Figure 4&lt;/EM&gt; shows an example of how &lt;STRONG&gt;&lt;EM&gt;First Incl. Unbooked&lt;/EM&gt;&lt;/STRONG&gt; exception aggregation now considers &lt;EM&gt;unbooked values&lt;/EM&gt; in the first period, compared to when using &lt;EM&gt;First&lt;/EM&gt; exception aggregation, that defaults to booked values.&amp;nbsp; Should this example show an entry for February, the top level of the hierarchy will still show unbooked values, as January is now considered within the formula even though it contains no data.&amp;nbsp; This provides a more accurate &lt;EM&gt;First&lt;/EM&gt; exception aggregation result of entries for a given period.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_3-1750166814673.png" style="width: 944px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275442i2D83275B480935BF/image-dimensions/944x353?v=v2" width="944" height="353" role="button" title="AmandaJMurphy_3-1750166814673.png" alt="AmandaJMurphy_3-1750166814673.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Figure 5: Illustration on how Last incl. Unbooked now considers unbooked values for a given period&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Figure 5&lt;/EM&gt; shows how &lt;STRONG&gt;&lt;EM&gt;Last incl. Unbooked&lt;/EM&gt;&lt;/STRONG&gt; exception aggregation compares to &lt;STRONG&gt;&lt;EM&gt;Last exception aggregation&lt;/EM&gt;&lt;/STRONG&gt;.&amp;nbsp; Last exception aggregation contains 400 for October.&amp;nbsp; As this is the last period that contains booked values, results are seen at the top level of the hierarchy.&amp;nbsp; In contrast, &lt;STRONG&gt;&lt;EM&gt;Last incl. Unbooked&lt;/EM&gt;&lt;/STRONG&gt; also contains 400 for October, however, the last period is December, which contains an unbooked value.&amp;nbsp; This unbooked value is therefore seen at the top level of the hierarchy for that period, providing a more accurate result for the Last aggregation.&lt;/P&gt;&lt;H3 id="toc-hId-683127648"&gt;3.&amp;nbsp; Data Export API – Fact Data Delta Aggregation&lt;/H3&gt;&lt;P&gt;The &lt;STRONG&gt;&lt;EM&gt;Data Export API&lt;/EM&gt;&lt;/STRONG&gt; has been extended to support the export of &lt;STRONG&gt;&lt;EM&gt;aggregated delta &lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt;of &lt;/EM&gt;&lt;STRONG&gt;&lt;EM&gt;fact data&lt;/EM&gt;&lt;/STRONG&gt;, using a new &lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;&lt;EM&gt;‘FactDataAggregation&lt;/EM&gt;‘&lt;/STRONG&gt;&lt;/FONT&gt; endpoint.&amp;nbsp;&lt;/P&gt;&lt;P&gt;This means that changed &lt;EM&gt;fact data&lt;/EM&gt; can now be &lt;EM&gt;aggregated&lt;/EM&gt; and &lt;EM&gt;then exported,&lt;/EM&gt; compared to exporting all changed fact data.&amp;nbsp; This feature compliments how S/4 consumes aggregated fact data.&lt;/P&gt;&lt;P&gt;Modelers can also access this feature within the &lt;EM&gt;&lt;STRONG&gt;API Subcriptions&lt;/STRONG&gt;&lt;/EM&gt; tab in their model.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_0-1750167291763.png" style="width: 552px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275448i40C7842EDEF0FAF4/image-dimensions/552x329?v=v2" width="552" height="329" role="button" title="AmandaJMurphy_0-1750167291763.png" alt="AmandaJMurphy_0-1750167291763.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Figure 6: Fact Data Delta Aggregation entity set within the Create Subscriptions area of the model&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;FONT color="#0000FF"&gt;An example of how Delta Aggregation works:&lt;/FONT&gt;&lt;/EM&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Account&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Product&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Sales&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Account1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Water&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;100&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Account1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Juice&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;150&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Account2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Water&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;200&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Account2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Juice&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;150&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;Table 2: Accounts 1 &amp;amp; 2 contains Products and Sales.&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;EM&gt;Table 2&lt;/EM&gt; shows Account1 &amp;amp; Account2 contains 2 products at various sales values.&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Account&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Sales&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;Account1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;250&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;Account2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;350&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Table 3: Aggregated values of Account1 &amp;amp; Account2&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s modify the sales values for both accounts:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="214"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Account&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Product&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Sales&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214"&gt;&lt;P&gt;Account1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;Water&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;110&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214"&gt;&lt;P&gt;Account1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;Juice&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;80&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214"&gt;&lt;P&gt;Account2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;Water&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;75&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Table 4: Sales values have changed, reflecting changed fact data.&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The sales value for &lt;EM&gt;Water&lt;/EM&gt; in Account1 has been change from 100 to 110.&lt;/P&gt;&lt;P&gt;The sales value for &lt;EM&gt;Juice&lt;/EM&gt; in Account1 has been change from 150 to 80.&lt;/P&gt;&lt;P&gt;The sales value for &lt;EM&gt;Water&lt;/EM&gt; in Account2 has been change from 200 to 75.&lt;/P&gt;&lt;P&gt;There is no change for &lt;EM&gt;Juice&lt;/EM&gt; in Account2.&lt;/P&gt;&lt;P&gt;The aggregated fact data values are therefore calculated as follows:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Account&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Sales&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;Account1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;((110 - 100) + (80 - 150)) = &lt;STRONG&gt;-60&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;Account2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;((75-200) + (150 – 150)) = -&lt;STRONG&gt;125&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Table 5: How the aggregated values are calculated&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;These are the values that will be exported using the &lt;STRONG&gt;&lt;EM&gt;‘FactDataAggregation&lt;/EM&gt;‘&lt;/STRONG&gt; endpoint or by using the &lt;STRONG&gt;&lt;EM&gt;Fact Data Delta Aggregation&lt;/EM&gt;&lt;/STRONG&gt; entity set in the &lt;EM&gt;API Subscriptions&lt;/EM&gt; section of the model.&lt;/P&gt;&lt;H2 id="toc-hId-357531424"&gt;&lt;FONT color="#0000FF"&gt;Conclusion&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;In summary, the following new features and updates have been introduced to the&amp;nbsp;&lt;EM&gt;Modeling Extensions and Integration&lt;/EM&gt;&amp;nbsp;areas of SAP Analytics Cloud, within Business Data Cloud, as part of QRC3 2025 release.&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;A new formula, called &lt;STRONG&gt;WAVG&lt;/STRONG&gt;, calculates the &lt;STRONG&gt;&lt;EM&gt;weighted average&lt;/EM&gt;&lt;/STRONG&gt; of a member, based on the value of the corresponding members assigned weight.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Three new exception aggregations can be applied to base measures and base accounts.&amp;nbsp;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;First incl. Unbooked &lt;/EM&gt;&lt;/STRONG&gt;shows the first (oldest) value in the selected period, including unbooked values.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Last incl. Unbooke&lt;/EM&gt;&lt;/STRONG&gt;d shows the last (newest) value in the selected period, including unbooked values.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Average incl. Unbooked&lt;/EM&gt;&lt;/STRONG&gt; calculates the average of all aggregated values, including unbooked values.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;The Data Export API has been extended to support the export of aggregated delta of fact data using a new &lt;STRONG&gt;&lt;EM&gt;‘FactDataAggregation&lt;/EM&gt;‘&lt;/STRONG&gt; endpoint.&amp;nbsp; Modelers can also use the new &lt;EM&gt;&lt;STRONG&gt;Fata Data Delta Aggregation&lt;/STRONG&gt;&lt;/EM&gt; entity set name in the &lt;EM&gt;API Subscriptions&lt;/EM&gt; tab of the model.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;If you have any questions, feel free to comment below or post a question to our&amp;nbsp;&lt;A href="https://community.sap.com/topics/cloud-analytics?ct=qa&amp;amp;lng=en&amp;amp;tab=content" target="_blank"&gt;SAP Analytics Cloud Questions &amp;amp; Answers&lt;/A&gt;&amp;nbsp;forum.&lt;/P&gt;&lt;P&gt;See this&amp;nbsp;&lt;A href="https://userapps.support.sap.com/sap/support/knowledge/E/2728183" target="_blank" rel="noopener noreferrer"&gt;SAP Knowledge Base Article&lt;/A&gt;&amp;nbsp;if you’d like to learn more about FastTrack and Quarterly Release Cycle releases.&lt;/P&gt;&lt;P&gt;For further information, visit our&amp;nbsp;&lt;A href="https://community.sap.com/topics/cloud-analytics" target="_blank"&gt;SAP Analytics Cloud Community&lt;/A&gt;&amp;nbsp;pages to find more product information, best practices, and more.&amp;nbsp;&lt;/P&gt;&lt;P&gt;To find out more about QRC release dates, see&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/sap-analytics-cloud-tenants-on-quarterly-release-cycle-qrc-updates-in-2025/ba-p/14000629" target="_blank"&gt;SAP Analytics Cloud tenants on Quarterly Release Cycle (QRC) updates in 2025&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Check out our&amp;nbsp;&lt;A href="https://roadmaps.sap.com/board?PRODUCT=67838200100800006884&amp;amp;amp;range=CURRENT-LAST&amp;amp;range=CURRENT-LAST" target="_blank" rel="noopener noreferrer"&gt;SAP Road Map Explorer&lt;/A&gt;&amp;nbsp;to see more upcoming features of SAP Analytics Cloud.&lt;/P&gt;&lt;P&gt;Thanks for reading!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-analytics-cloud-modeling-extensions-amp-integration-qrc3/ba-p/14130035"/>
    <published>2025-07-14T08:40:08.881000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/demo-accessing-sap-with-generative-ai-in-microsoft-teams/ba-p/14150831</id>
    <title>Demo: Accessing SAP with Generative AI in Microsoft Teams</title>
    <updated>2025-07-21T03:13:01.221000+02:00</updated>
    <author>
      <name>prakashsaurav</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/12784</uri>
    </author>
    <content>&lt;P&gt;In this demo, we showcase how to bring SAP data closer to your teams by combining the power of Generative AI, Microsoft Copilot Studio, and Teams. Using SAP OData services exposed via SAP BTP Integration Suite, we build an intelligent Copilot agent that lets users retrieve sales orders, products, customers, and suppliers — all through simple natural language conversations. Whether it’s in Teams or Microsoft 365 Copilot, see how you can seamlessly access and interact with your SAP backend data, improving efficiency and transforming user experience.&lt;/P&gt;&lt;P&gt;&lt;A href="https://aditheos.com/2025/06/26/simplifying-sap-access-with-gen-ai-built-on-copilot-studio-integrated-via-sap-btp-azure-apim-delivered-in-teams-copilot/" target="_blank" rel="noopener nofollow noreferrer"&gt;Step by Step Implementation&lt;/A&gt;&amp;nbsp; &amp;nbsp;/&amp;nbsp;Access complete source code @&amp;nbsp;&lt;A href="https://github.com/aditheos/SalesAI" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FgdxKP7GCMn8%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DgdxKP7GCMn8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FgdxKP7GCMn8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="486" height="273" scrolling="no" title="Simplifying SAP Access with Gen AI | SAP BTP + Microsoft Copilot Studio Demo" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/demo-accessing-sap-with-generative-ai-in-microsoft-teams/ba-p/14150831"/>
    <published>2025-07-21T03:13:01.221000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/build-shipment-creation-and-tracking-skill-using-joule-studio-integrated/ba-p/14165071</id>
    <title>Build Shipment Creation and Tracking Skill using Joule Studio integrated with SAP BN4L GTT</title>
    <updated>2025-07-29T10:53:24.154000+02:00</updated>
    <author>
      <name>nilay_mehta123</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/384687</uri>
    </author>
    <content>&lt;P&gt;As we know by now, Joule is SAP’s generative AI copilot that helps users interact with business data and processes in a conversational, natural language format. With Joule Studio, developers and business users alike can create custom Joule skills to address specific business scenarios, extending the power of SAP Business AI.&lt;/P&gt;&lt;P&gt;With the latest launch of &lt;A title="Joule Studio Product Page" href="https://www.sap.com/products/artificial-intelligence/joule-studio.html" target="_blank" rel="noopener noreferrer"&gt;Joule Studio&lt;/A&gt;,&amp;nbsp;we can now build custom AI agents and skills &lt;SPAN&gt;that automate workflows and improve efficiency in executing routine tasks. Joule Studio is currently live with the Skill builder and the Agent Builder is slated to be GA later this year.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Earlier this year, I had the privilege to work with the Joule Studio product teams to build and test &lt;A title="Joule Studio Launch with Logistics Agent" href="https://community.sap.com/t5/technology-blog-posts-by-sap/build-deploy-and-extend-ai-agents-with-joule-studio/ba-p/14105964" target="_blank"&gt;Logistics Agents&lt;/A&gt; for providing transportation options, fetching weather forecasts on transportation routes and tracking with carriers in real-time.&lt;/P&gt;&lt;P&gt;In this article, we will walk through the steps on how to build&amp;nbsp;&lt;STRONG&gt;Joule Skills&amp;nbsp;&lt;/STRONG&gt;for Logistics and Transportation use cases using Joule Studio. These custom skills will help users &lt;STRONG&gt;create a shipment&lt;/STRONG&gt;&amp;nbsp;directly in SAP Business Network for Logistics (BN4L) and subsequently&amp;nbsp;&lt;STRONG&gt;track that shipment’s status&lt;/STRONG&gt; using Global Track and Trace (GTT) using the Joule digital assistant.&lt;/P&gt;&lt;P&gt;This is particularly useful for transportation planners, customer service reps, and warehouse operators who want a quick and intelligent way to interact with shipment data in natural language - without navigating through multiple systems. Furthermore, once the Joule is activated in S/4HANA systems or SAP Build Workzone then Joule can create shipments directly in BN4L GTT using the data from ERP orders/deliveries.&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1865128316"&gt;Step 1: Prerequisites&lt;/H3&gt;&lt;P&gt;Before building the skill in Joule Studio, ensure you have activated the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Joule Studio&lt;/STRONG&gt; on your SAP BTP subaccount. (refer&amp;nbsp;&lt;A title="Provisioning Joule Studio in your Subaccount" href="https://community.sap.com/t5/technology-blog-posts-by-sap/getting-started-with-joule-studio-in-sap-build-part-1-provisioning-joule/ba-p/14157407" target="_blank"&gt;provisioning Joule Studio&lt;/A&gt;)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP Business Network for Logistics&lt;/STRONG&gt; tenant with API access.&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP Business Accelerator Hub&lt;/STRONG&gt; to reference GTT APIs.&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Authentication credentials for &lt;STRONG&gt;SAP&amp;nbsp;BN4L API endpoints&lt;/STRONG&gt;.&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Developer &lt;A title="Joule Studio Authorizations" href="https://help.sap.com/docs/Joule_Studio/45f9d2b8914b4f0ba731570ff9a85313/11f93c7775274b2996e1469b1bc07584.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;role and permissions&lt;/A&gt; to create skills in Joule Studio.&amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1668614811"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1472101306"&gt;Step 2: Design the Skill in Joule Studio&lt;/H3&gt;&lt;H4 id="toc-hId-1404670520"&gt;&lt;SPAN&gt;Login to your SAP Build lobby to create a Joule Skill.&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_0-1753775771121.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293250iA122D89A9C83D0E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_0-1753775771121.png" alt="nilay_mehta123_0-1753775771121.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1208157015"&gt;Skill to Create Shipment in BN4L GTT&lt;/H4&gt;&lt;P&gt;&lt;STRONG&gt;Step 1:&lt;/STRONG&gt; Create a new Joule skill and provide a valid description which will help as the trigger mechanism. Add input parameters to the skills to capture Source Location, Destination Location, Pickup Date, Shipment No, etc.&amp;nbsp;&lt;/P&gt;&lt;P&gt;We can even make this optimizer this step further by fetching an ERP delivery data from a S/4HANA System using the &lt;A title="Business Accelerator Hub - Delivery Odata" href="https://api.sap.com/api/API_OUTBOUND_DELIVERY_SRV_0002/overview" target="_blank" rel="noopener noreferrer"&gt;Odata Service&lt;/A&gt;. With that Joule will be able to fetch the delivery details to create a shipment. However, to understand how the conversations work, we can proceed with capturing data from the user.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_2-1753738853680.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292989iACB9335F897E18FE/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_2-1753738853680.png" alt="nilay_mehta123_2-1753738853680.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2:&lt;/STRONG&gt;&amp;nbsp;Create and Publish a Build Action from Build Lobby to integrate your BN4L GTT tenant with SAP Build.&amp;nbsp;&lt;BR /&gt;Here, we can use the GTT Write Service API (Shipment Event) which creates a shipment in GTT (For more info visit &lt;A title="SAP BN4L GTT Write Service" href="https://help.sap.com/docs/business-network-global-track-and-trace/model-administrator/write-service?q=write" target="_blank" rel="noopener noreferrer"&gt;SAP Help&lt;/A&gt;)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_0-1753770184583.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293121i9BF8689107609F38/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_0-1753770184583.png" alt="nilay_mehta123_0-1753770184583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3:&lt;/STRONG&gt; Add the published Action to Joule Skill and map the Skill input to Action input.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_4-1753740849716.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292995iA1F9F839C4FF2044/image-dimensions/999x999?v=v2" width="999" height="999" role="button" title="nilay_mehta123_4-1753740849716.png" alt="nilay_mehta123_4-1753740849716.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4 (Optional):&amp;nbsp;&lt;/STRONG&gt;Add Send Message function to display a successful shipment creation message to the User along with a hyperlink to navigate GTT shipment to v.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_5-1753741044639.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292996i0C41F5735F95531A/image-dimensions/999x999?v=v2" width="999" height="999" role="button" title="nilay_mehta123_5-1753741044639.png" alt="nilay_mehta123_5-1753741044639.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5:&lt;/STRONG&gt; Deploy and Test the Joule Skill using the Build Environments. Currently, Joule Studio supports testing the custom Joule Skills only from within an Environment. Under Joule, launch the standalone Joule Digital Assistant.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_7-1753741409368.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292998i2ED4D47527B8B419/image-dimensions/999x999?v=v2" width="999" height="999" role="button" title="nilay_mehta123_7-1753741409368.png" alt="nilay_mehta123_7-1753741409368.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H3 id="toc-hId-882560791"&gt;Step 3: Joule digital assistant (the conversation part)&amp;nbsp;&lt;/H3&gt;&lt;P&gt;Use Joule digital assistant to test the skill that we just deployed. Open the logs to review the steps performed by Joule to execute a Skill based on user input.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Create a shipment conversation with basic shipment information.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_3-1753766938448.png" style="width: 407px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293094iF01BF0BC78489DA6/image-dimensions/407x656?v=v2" width="407" height="656" role="button" title="nilay_mehta123_3-1753766938448.png" alt="nilay_mehta123_3-1753766938448.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_4-1753766992707.png" style="width: 403px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293095i409E62E06EC83ACD/image-dimensions/403x655?v=v2" width="403" height="655" role="button" title="nilay_mehta123_4-1753766992707.png" alt="nilay_mehta123_4-1753766992707.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;H4 id="toc-hId-815130005"&gt;Skill to Track Shipment using BN4L GTT&lt;/H4&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: &amp;nbsp;&lt;/STRONG&gt;Return to SAP Build Lobby and open your project, within the project create a new Joule Skill. Remember to add a wholesome description. Add input - trackingId and output parameters -status, city, region.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_7-1753763895375.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293062i25C7109348DFB9E1/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_7-1753763895375.png" alt="nilay_mehta123_7-1753763895375.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2:&amp;nbsp;&lt;/STRONG&gt;Add a new Build Action to fetch shipment status from GTT. To find more details of the GTT Read services in the &lt;A title="BN4L GTT Reference Integration Guide" href="https://help.sap.com/doc/83adce4bf4514737884c9d420cafe7ee/LBN/en-US/SAP_LBN_GTT_Interface_ref_guide.pdf" target="_blank" rel="noopener noreferrer"&gt;BN4L GTT Reference Guide.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Release and Publish the Action to be used in Joule Skill.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Refer to the &lt;A title="SAP BPA use Filters in Odata" href="https://help.sap.com/docs/build-process-automation/sap-build-process-automation/using-filter-conditions-filter-7e7531ccfd9f4c60bdb408a56a2f4bb4?q=eq&amp;amp;locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SAP BPA help&lt;/A&gt; to learn more on how to use &lt;EM&gt;$filter&lt;/EM&gt; capability while querying using an Odata service.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_6-1753763367965.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293058i3681710EE001536A/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_6-1753763367965.png" alt="nilay_mehta123_6-1753763367965.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3:&amp;nbsp;&lt;/STRONG&gt;Add this Action as a step function in the Track Shipment Joule Skill. Map the Action input to the Skills Input to pass the tracking number from the user as a query parameter to the GTT read service. &lt;EM&gt;This will improve the overall performance and response time of Joule during runtime conversations.&lt;/EM&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Create a new destination variable to represent the GET service BTP destination.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_8-1753764048269.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293064i963D8E4872367366/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_8-1753764048269.png" alt="nilay_mehta123_8-1753764048269.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4:&amp;nbsp;&lt;/STRONG&gt;In the End step, map the Skills Output to the corresponding fields from the Action Output result. This will enable Joule to form a logical output based on the message to be displayed to the user.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_10-1753764540505.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293068i5F0AA597CB1561EA/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_10-1753764540505.png" alt="nilay_mehta123_10-1753764540505.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5:&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;Release and deploy the skill to the same Environment created for the first skill.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6:&amp;nbsp;&lt;/STRONG&gt;Navigate to the Environment, now you should be able to see the latest version of the Project deployed. Launch the Joule DA from the Joule tab.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_11-1753764978301.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293080i9D8513F312B25909/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_11-1753764978301.png" alt="nilay_mehta123_11-1753764978301.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-489533781"&gt;Step 3: Joule digital assistant (the conversation part)&amp;nbsp;&lt;/H3&gt;&lt;P&gt;Track the shipment with Shipment ID to view the execution status and the current location.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_1-1753775073681.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293234i7F959C648D8A785C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="nilay_mehta123_1-1753775073681.png" alt="nilay_mehta123_1-1753775073681.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-293020276"&gt;Step 4: Integrate Joule with SAP Build Workzone&lt;/H3&gt;&lt;P&gt;Enable your users to interact with Joule and enjoy these custom skills by &lt;A title="Integrate Joule in SAP Build Workzone" href="https://help.sap.com/docs/joule/integrating-joule-with-sap/integration-with-sap-build-work-zone-standard-edition?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;activating Joule in SAP Build Workzone&lt;/A&gt;.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_1-1753778032463.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293275i5CF68E74ECDA7993/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_1-1753778032463.png" alt="nilay_mehta123_1-1753778032463.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-96506771"&gt;Final Thoughts&lt;/H3&gt;&lt;P&gt;This is an high level overview on building custom Joule Skills for deterministic tasks based on business processes expanding the horizon of SAP Business AI.&amp;nbsp;With Joule Studio, we are now able to&amp;nbsp;&lt;SPAN&gt;extend SAP Joule's AI capabilities to address unique business needs.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;P&gt;Learn more about how&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/services-support/premium-support.html" target="_self" rel="noopener noreferrer"&gt;SAP Premium Engagement&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;can help you accelerate your digital transformation with curated AI workshops and discovery sessions.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Business+AI/pd-p/73554900100700002751" class="lia-product-mention" data-product="1247-1"&gt;SAP Business AI&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/Joule/pd-p/d0136351-8a9c-4881-aebc-bf414b785998" class="lia-product-mention" data-product="1207-1"&gt;Joule&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Business+Network+for+Logistics/pd-p/73554900100800001025" class="lia-product-mention" data-product="454-1"&gt;SAP Business Network for Logistics&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+Private+Edition/pd-p/5c26062a-9855-4f39-8205-272938b6882f" class="lia-product-mention" data-product="1198-1"&gt;SAP S/4HANA Cloud Private Edition&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1595967"&gt;@SAPMaxAttention&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/build-shipment-creation-and-tracking-skill-using-joule-studio-integrated/ba-p/14165071"/>
    <published>2025-07-29T10:53:24.154000+02:00</published>
  </entry>
</feed>
