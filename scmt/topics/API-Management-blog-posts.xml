<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/API-Management-blog-posts.xml</id>
  <title>SAP Community - API Management</title>
  <updated>2025-10-25T11:10:10.694974+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/API Management/pd-p/67838200100800006828" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>API Management blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/simplifying-complex-enterprise-landscapes-using-sap-integration-suite-a/ba-p/14141754</id>
    <title>Simplifying Complex Enterprise Landscapes Using SAP Integration Suite ‚Äì A Practical Approach</title>
    <updated>2025-07-01T15:48:27.196000+02:00</updated>
    <author>
      <name>aayushaggarwal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/218793</uri>
    </author>
    <content>&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;EM&gt;‚ÄúComplexity is inevitable. Chaos isn‚Äôt.‚Äù&lt;/EM&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;In today‚Äôs enterprise IT landscape, complexity is everywhere ‚Äî hybrid architectures, ever-evolving business needs, legacy platforms, and disconnected systems. But complexity doesn‚Äôt have to mean confusion or fragility.&lt;/P&gt;&lt;P&gt;With over 11 years of experience across &lt;STRONG&gt;SAP CPI, PI/PO, BTP, and Ariba CIG&lt;/STRONG&gt;, I‚Äôve seen firsthand how integration complexity can slow innovation ‚Äî and how the right architectural mindset can fix it.&lt;/P&gt;&lt;P&gt;This post is a practical guide to &lt;STRONG&gt;simplifying complex enterprise landscapes&lt;/STRONG&gt; using the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1863168778"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;üîπ&lt;/span&gt;Why Complexity Happens&lt;/H3&gt;&lt;P&gt;Most organizations face at least one (if not all) of these challenges:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;A mix of cloud and on-premise systems&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Legacy, point-to-point integrations built without standards&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Business logic scattered across different platforms&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Siloed teams and lack of visibility across integrations&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The result? High maintenance, fragile interfaces, slower time-to-market.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1666655273"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;üîπ&lt;/span&gt;My Guiding Principles for Simplification&lt;/H3&gt;&lt;H4 id="toc-hId-1599224487"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_1:"&gt;1Ô∏è‚É£&lt;/span&gt;API-First Architecture&lt;/H4&gt;&lt;P&gt;Design integrations as &lt;STRONG&gt;modular, discoverable services&lt;/STRONG&gt; ‚Äî not tightly coupled one-offs. Use &lt;STRONG&gt;SAP API Management&lt;/STRONG&gt; to expose, secure, and govern your interfaces centrally.&lt;/P&gt;&lt;H4 id="toc-hId-1402710982"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_2:"&gt;2Ô∏è‚É£&lt;/span&gt;Decouple Business Logic from Integration&lt;/H4&gt;&lt;P&gt;Avoid embedding decision logic in CPI flows or PI/PO mappings. Move that logic to &lt;STRONG&gt;CAP apps&lt;/STRONG&gt;, &lt;STRONG&gt;BRF+&lt;/STRONG&gt;, or reusable business services ‚Äî this reduces rework and improves clarity.&lt;/P&gt;&lt;H4 id="toc-hId-1206197477"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_3:"&gt;3Ô∏è‚É£&lt;/span&gt;Think Event-Driven&lt;/H4&gt;&lt;P&gt;Don‚Äôt force synchronous flows where asynchronous is better. Use &lt;STRONG&gt;SAP Event Mesh&lt;/STRONG&gt; to build decoupled, reactive systems that scale more naturally.&lt;/P&gt;&lt;H4 id="toc-hId-1009683972"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_4:"&gt;4Ô∏è‚É£&lt;/span&gt;Reuse Over Rebuild&lt;/H4&gt;&lt;P&gt;Standardize error handling, logging, naming conventions, and message formats. Use templates, shared artifacts, and integration accelerators wherever possible.&lt;/P&gt;&lt;H4 id="toc-hId-813170467"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_5:"&gt;5Ô∏è‚É£&lt;/span&gt;Integration as a Platform&lt;/H4&gt;&lt;P&gt;Treat integration as a long-term &lt;STRONG&gt;platform&lt;/STRONG&gt;, not a project. Build with future growth, maintainability, and observability in mind.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-487574243"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;üîπ&lt;/span&gt;Using SAP Integration Suite Holistically&lt;/H3&gt;&lt;P&gt;Most teams focus only on &lt;STRONG&gt;SAP CPI&lt;/STRONG&gt; ‚Äî but the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; is more powerful when used as a full toolkit:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Cloud Integration (CPI):&lt;/STRONG&gt; For process orchestration across SAP and non-SAP systems&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;API Management:&lt;/STRONG&gt; To secure, manage, and reuse interfaces&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP Managed Gateway (Ariba CIG):&lt;/STRONG&gt; For rapid, standardized B2B procurement integration&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Event Mesh:&lt;/STRONG&gt; To enable scalable, event-driven communication&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP BTP Cockpit &amp;amp; Cloud ALM:&lt;/STRONG&gt; For centralized monitoring, alerting, and operational control&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Together, these tools can reduce integration effort, increase visibility, and support long-term agility.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-291060738"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;üîπ&lt;/span&gt;Real-World Tactics That Worked for Me&lt;/H3&gt;&lt;P&gt;Here are some of the steps I‚Äôve implemented in customer landscapes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Migrated legacy &lt;STRONG&gt;PI/PO&lt;/STRONG&gt; integrations to &lt;STRONG&gt;CPI on SAP BTP&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Created &lt;STRONG&gt;custom adapters&lt;/STRONG&gt; and reusable &lt;STRONG&gt;Groovy-based modules&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Designed a central &lt;STRONG&gt;error-handling and alerting framework&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Introduced integration &lt;STRONG&gt;naming standards, templates, and design guidelines&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Used &lt;STRONG&gt;Cloud ALM&lt;/STRONG&gt; to monitor interfaces across landscapes&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Built a knowledge base of reusable integration components&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-94547233"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;üîπ&lt;/span&gt;Final Thoughts&lt;/H3&gt;&lt;P&gt;Complexity is natural. But without intentional design, it turns into chaos.&lt;/P&gt;&lt;P&gt;By adopting a &lt;STRONG&gt;product mindset&lt;/STRONG&gt;, focusing on &lt;STRONG&gt;API-first, reusable, and event-driven&lt;/STRONG&gt; architecture, and fully utilizing the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;, we can turn fragile systems into future-ready platforms.&lt;/P&gt;&lt;P&gt;Let‚Äôs not just connect systems ‚Äî let‚Äôs &lt;STRONG&gt;design integration that scales with the product, not against it&lt;/STRONG&gt;.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--177197641"&gt;&lt;span class="lia-unicode-emoji" title=":repeat_button:"&gt;üîÅ&lt;/span&gt;Let‚Äôs Discuss&lt;/H3&gt;&lt;P&gt;How are you approaching simplification in your integration landscape?&lt;BR /&gt;Would love to hear your views and lessons from the field.&lt;/P&gt;&lt;HR /&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/simplifying-complex-enterprise-landscapes-using-sap-integration-suite-a/ba-p/14141754"/>
    <published>2025-07-01T15:48:27.196000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-api-management-generating-oauth-saml-assertion-for-successfactors-api/ba-p/14140473</id>
    <title>SAP API Management- Generating Oauth SAML Assertion for SuccessFactors API call</title>
    <updated>2025-07-02T14:14:31.090000+02:00</updated>
    <author>
      <name>RavindraRathore</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/148080</uri>
    </author>
    <content>&lt;P&gt;In this blog, I will outline a secure method for generating SAML assertions for an API proxy designed to interact with the SuccessFactors module for various operations.&lt;/P&gt;&lt;P&gt;Currently, many developers relied on the /oauth/idp API to generate SAML assertions for token generation when communicating with SuccessFactors. Although this API allowed API users to generate SAML assertions for authentication, it was deemed insecure due to the necessity of passing private keys in an API call. Therefore, SAP is deprecated this API and they will delete it in November (&lt;A title="Deprecation of OAuth IdP API /oauth/idp" href="https://help.sap.com/docs/successfactors-release-information/8e0d540f96474717bbf18df51e54e522/db7ccbbbc7a54e929a305ff92d12241c.html" target="_self" rel="noopener noreferrer"&gt;Deprecation of OAuth IdP API /oauth/idp)&lt;/A&gt;&amp;nbsp;and urging developers to adopt more secure practices for generating SAML assertions.&lt;/P&gt;&lt;P&gt;To set up a connection between SAP API Management and SuccessFactors using OAuth SAML assertion, follow these steps:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: &lt;/STRONG&gt;Register an OAuth2 Client Application in SuccessFactors&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;Navigate to the "Manage OAuth2 Client Applications" section and click on "Register Client Application".&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_0-1751284864336.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280627iB77B216D80536B4E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RavindraRathore_0-1751284864336.png" alt="RavindraRathore_0-1751284864336.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;Fill in the required details:&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Company&lt;/STRONG&gt;: This field is automatically filled with your current company name.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Application Name&lt;/STRONG&gt;: Enter the name of the application. For this example, use "SF_SAPAPIM".&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;: (Optional) Provide a description.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Application URL&lt;/STRONG&gt;: Enter the URL of the system that wants to connect to SuccessFactors, e.g.,&amp;nbsp;&lt;A href="http://SAPAPIMHost.com" target="_blank" rel="noopener nofollow noreferrer"&gt;http://SAPAPIMHost.com&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;X.509 Certificate&lt;/STRONG&gt;: Generate an X.509 certificate by providing the relevant information or use the certificate from the system that wants to connect to SuccessFactors.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Important&lt;/STRONG&gt;: If you generate the X.509 certificate within SuccessFactors, download and securely store it for the next steps. &lt;SPAN&gt;Additionally, make sure to record the &lt;STRONG&gt;API Key&lt;/STRONG&gt; that will be generated once the OAuth2 Client Application is registered.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P class="lia-indent-padding-left-180px" style="padding-left : 180px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_1-1751284864349.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280628i6395726974530DB8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RavindraRathore_1-1751284864349.png" alt="RavindraRathore_1-1751284864349.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: &lt;/STRONG&gt;Convert the Certificate Format&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;The downloaded certificate is in PEM format. Convert it to P12 format using OpenSSL or another tool.&lt;/LI&gt;&lt;LI&gt;Keep the password for the P12 certificate safe, as it will be needed in later steps.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: &lt;/STRONG&gt;Store the Certificate in SAP API Management&lt;/P&gt;&lt;OL&gt;&lt;UL&gt;&lt;LI&gt;Log in to integration suite, go to Configure.&lt;/LI&gt;&lt;LI&gt;Navigate to the "Keystore" under the "Certificate" tab.&lt;/LI&gt;&lt;LI&gt;Upload the P12 format certificate along with its password.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P class="lia-indent-padding-left-90px" style="padding-left : 90px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_2-1751285253091.png" style="width: 445px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280630iF6F8D7DCDC1D6A15/image-dimensions/445x69?v=v2" width="445" height="69" role="button" title="RavindraRathore_2-1751285253091.png" alt="RavindraRathore_2-1751285253091.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_3-1751285253094.png" style="width: 447px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280631i387AFD63E0705B1E/image-dimensions/447x210?v=v2" width="447" height="210" role="button" title="RavindraRathore_3-1751285253094.png" alt="RavindraRathore_3-1751285253094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4:&lt;/STRONG&gt; Set up an API Proxy in SAP API Management to retrieve job information from SuccessFactors.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Navigate to the Configure tab within the integration suite and click on Create under API proxy.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_4-1751285253096.png" style="width: 493px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280632i10EE6CA0C2E521C6/image-dimensions/493x85?v=v2" width="493" height="85" role="button" title="RavindraRathore_4-1751285253096.png" alt="RavindraRathore_4-1751285253096.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create an API proxy with named "SF_JobInformation" and fill in the necessary details‚Äîenter the API path in the URL field, choose an appropriate title, and select the Host Alias if multiple hosts are configured.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Provide an API base path, which can match the API's path. When you input the version, it will be added before the base path and to the API Proxy name you specified.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_5-1751285253102.png" style="width: 481px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280634iA1267D1374C26EB9/image-dimensions/481x325?v=v2" width="481" height="325" role="button" title="RavindraRathore_5-1751285253102.png" alt="RavindraRathore_5-1751285253102.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Step 5:&lt;/STRONG&gt; Once the API proxy is created, save it.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_6-1751285253104.png" style="width: 443px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280633iEF68D515F6A6B6DB/image-dimensions/443x225?v=v2" width="443" height="225" role="button" title="RavindraRathore_6-1751285253104.png" alt="RavindraRathore_6-1751285253104.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click policies section to incorporate SuccessFactors OAuth SAML assertion-related policies.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_7-1751285253109.png" style="width: 447px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280635i90D39A3C913E1556/image-dimensions/447x230?v=v2" width="447" height="230" role="button" title="RavindraRathore_7-1751285253109.png" alt="RavindraRathore_7-1751285253109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the policy editor, insert a JavaScript policy to generate dates for "NotBefore" and "NotOnOrAfter," which are necessary for SAML assertion generation policy.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_8-1751285253117.png" style="width: 488px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280637i0A300561C8480140/image-dimensions/488x188?v=v2" width="488" height="188" role="button" title="RavindraRathore_8-1751285253117.png" alt="RavindraRathore_8-1751285253117.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Provide Policy name and click on Add.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_9-1751285253120.png" style="width: 455px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280636iC05699CE4A080A2B/image-dimensions/455x323?v=v2" width="455" height="323" role="button" title="RavindraRathore_9-1751285253120.png" alt="RavindraRathore_9-1751285253120.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create the Script and assign it in JavaScript policy to generate dates for "NotBefore" and "NotOnOrAfter‚Äù.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_10-1751285411849.png" style="width: 453px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280640iBE96576A669D8253/image-dimensions/453x188?v=v2" width="453" height="188" role="button" title="RavindraRathore_10-1751285411849.png" alt="RavindraRathore_10-1751285411849.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_11-1751285411854.png" style="width: 451px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280641i137D27CFB420BD4E/image-dimensions/451x158?v=v2" width="451" height="158" role="button" title="RavindraRathore_11-1751285411854.png" alt="RavindraRathore_11-1751285411854.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Script:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;//pad with single zero if the value is less than 10 else return the value as is
function padWithZero(value){
    return value &amp;gt;= 10 ? value.toString() : "0" + value.toString();
}

//function to return the date in SMAL format
function getFormattedDate(date){
	var yr = date.getUTCFullYear();
	var day = padWithZero(date.getUTCDate());
	var mnth = padWithZero(date.getUTCMonth() + 1);
	var hr = padWithZero(date.getUTCHours());
	var mn = padWithZero(date.getUTCMinutes());
	var sec = padWithZero(date.getUTCSeconds());
	var msec = date.getUTCMilliseconds();
    return  yr + '-' + mnth + '-' + day + 'T' + hr + ':' + mn + ':' + sec + '.' + msec + 'Z';
}

//Copy the date to generate a new date
function copyDate(date){
  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());
}

//function to add n days 
function addDays(date, days){
    var newDate = copyDate(date);
    newDate.setTime(newDate.getTime() + days * 24 * 60 * 60 * 1000);
    return newDate;
}

function handle_ContextType(){

   context.setVariable("request.header.Content-Type","application/xml");
}

handle_ContextType();

var date = new Date();

//set the not before timestamp to current timestamp
context.setVariable("DatenotBefore", getFormattedDate(date));

//set the not after timestamp to 1 day after the current timestamp
context.setVariable("DatenotOnorAfter", getFormattedDate(addDays(date,1)));&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 6:&lt;/STRONG&gt; Add the SAML Assertion generation policy in the preflow of TargetEndPoint.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_12-1751285563790.png" style="width: 461px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280642iBF4784CF490617D8/image-dimensions/461x174?v=v2" width="461" height="174" role="button" title="RavindraRathore_12-1751285563790.png" alt="RavindraRathore_12-1751285563790.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Code:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;&amp;lt;GenerateSAMLAssertion async="false" continueOnError="false" enabled="true" ignoreContentType = "false" xmlns="http://www.sap.com/apimgmt"&amp;gt;
	&amp;lt;CanonicalizationAlgorithm /&amp;gt;
   &amp;lt;Issuer&amp;gt; www.SF_myidp.com &amp;lt;/ Issuer &amp;gt;
 &amp;lt;KeyStore&amp;gt;
        &amp;lt;Name&amp;gt; SF_SAML &amp;lt;/Name&amp;gt;
        &amp;lt;Alias&amp;gt; SF_SAML &amp;lt;/Alias&amp;gt;
    &amp;lt;/KeyStore&amp;gt;
	&amp;lt;OutputVariable&amp;gt;
   &amp;lt;FlowVariable name="samlassertion"/&amp;gt;
	&amp;lt;/OutputVariable&amp;gt;
	&amp;lt;SignatureAlgorithm /&amp;gt;
	 &amp;lt;Subject&amp;gt; sfadmin &amp;lt;/ Subject &amp;gt;
	&amp;lt;Template ignoreUnresolvedVariables="false"&amp;gt;
&amp;lt;![CDATA[
&amp;lt;saml2:Assertion ID="{saml.id}" IssueInstant="{saml.issueInstant}" Version="2.0"
        xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"&amp;gt;&amp;lt;saml2:Issuer
        xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"&amp;gt;{saml.issuer}&amp;lt;/saml2:Issuer&amp;gt;&amp;lt;saml2:Subject
        xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"&amp;gt;&amp;lt;saml2:NameID Format="urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"&amp;gt;{saml.subject}&amp;lt;/saml2:NameID&amp;gt;&amp;lt;saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer"&amp;gt;&amp;lt;saml2:SubjectConfirmationData NotOnOrAfter="{DatenotOnorAfter}" Recipient="https://successFactorsHost.com/oauth/token"/&amp;gt;&amp;lt;/saml2:SubjectConfirmation&amp;gt;&amp;lt;/saml2:Subject&amp;gt;&amp;lt;saml2:Conditions NotBefore="{DatenotBefore}" NotOnOrAfter="{DatenotOnorAfter}"
        xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"&amp;gt;&amp;lt;saml2:AudienceRestriction&amp;gt;&amp;lt;saml2:Audience&amp;gt;www.successfactors.com&amp;lt;/saml2:Audience&amp;gt;&amp;lt;/saml2:AudienceRestriction&amp;gt;&amp;lt;/saml2:Conditions&amp;gt;
&amp;lt;saml2:AttributeStatement&amp;gt;&amp;lt;saml2:Attribute Name="api_key"&amp;gt;
		&amp;lt;saml2:AttributeValue xsi:type="xs:string"&amp;gt;NDU0MDE0MDkwYj***5YTE5MWIxMTNkNjc1Zg&amp;lt;/saml2:AttributeValue&amp;gt;&amp;lt;/saml2:Attribute&amp;gt;&amp;lt;/saml2:AttributeStatement&amp;gt; &amp;lt;/saml2:Assertion&amp;gt;
                ]]&amp;gt;
   &amp;lt;/Template&amp;gt;
&amp;lt;/GenerateSAMLAssertion&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;TABLE width="922"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="659"&gt;&amp;lt;Issuer&amp;gt; &lt;A href="http://www.SF_myidp.com" target="_blank" rel="noopener nofollow noreferrer"&gt;www.SF_myidp.com&lt;/A&gt; &amp;lt;/ Issuer &amp;gt;&lt;/TD&gt;&lt;TD width="263"&gt;Provide Issuer details&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="659"&gt;&amp;lt;KeyStore&amp;gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;Name&amp;gt; SF_SAML &amp;lt;/Name&amp;gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;Alias&amp;gt; SF_SAML &amp;lt;/Alias&amp;gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/KeyStore&amp;gt;&lt;/TD&gt;&lt;TD width="263"&gt;Provide keystore details which were created in certificate tab of SAP API in P12 Format in Step 3&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&amp;lt;Subject&amp;gt; sfadmin &amp;lt;/ Subject &amp;gt;&lt;/TD&gt;&lt;TD width="263"&gt;Provide API user which will be used for operation in SuccessFactors&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="659"&gt;&amp;lt;saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer"&amp;gt;&amp;lt;saml2:SubjectConfirmationData NotOnOrAfter="{DatenotOnorAfter}" Recipient="&lt;A href="https://successFactorsHost.com/oauth/token" target="_blank" rel="noopener nofollow noreferrer"&gt;https://successFactorsHost.com/oauth/token&lt;/A&gt;"/&amp;gt;&amp;lt;/saml2:SubjectConfirmation&amp;gt;&amp;lt;/&lt;/TD&gt;&lt;TD width="263"&gt;Provide SuccessFactors Oauth token URL as a recipient&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="659"&gt;&amp;lt;saml2:AttributeStatement&amp;gt;&amp;lt;saml2:Attribute Name="api_key"&amp;gt;&lt;BR /&gt;&amp;lt;saml2:AttributeValue xsi:type="xs:string"&amp;gt;NDU0MDE0MDkwYj***5YTE5MWIxMTNkNjc1Zg&amp;lt;/saml2:AttributeValue&amp;gt;&amp;lt;/saml2:Attribute&amp;gt;&amp;lt;/saml2:AttributeStatement&amp;gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="263"&gt;Provide SuccessFactors API key which is created in Step 1&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;Step 7:&lt;/STRONG&gt;&lt;SPAN&gt; Incorporate JavaScript to remove the XML tag ‚Äú&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;‚Äù from the response of the SAML assertion generation policy.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-120px" style="padding-left : 120px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_0-1751291970805.png" style="width: 453px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280718iCDE273E32FB5550B/image-dimensions/453x218?v=v2" width="453" height="218" role="button" title="RavindraRathore_0-1751291970805.png" alt="RavindraRathore_0-1751291970805.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-120px" style="padding-left : 120px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_14-1751285734809.png" style="width: 462px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280643i81D4EE8D3CE1FD3D/image-dimensions/462x180?v=v2" width="462" height="180" role="button" title="RavindraRathore_14-1751285734809.png" alt="RavindraRathore_14-1751285734809.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Code:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;var assertion = context.getVariable("samlassertion").replace("&amp;lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&amp;gt;","");
context.setVariable("samlassertion", assertion);&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 8:&lt;/STRONG&gt; Include a Python script to perform base64 encoding on the SAML Assertion response, which will be used in the next step to generate the token.&lt;/P&gt;&lt;P class="lia-indent-padding-left-120px" style="padding-left : 120px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_15-1751285810551.png" style="width: 458px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280647i8BB8C2235BEFC854/image-dimensions/458x221?v=v2" width="458" height="221" role="button" title="RavindraRathore_15-1751285810551.png" alt="RavindraRathore_15-1751285810551.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-120px" style="padding-left : 120px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_16-1751285810556.png" style="width: 452px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280645i378501D7FF3309EF/image-dimensions/452x182?v=v2" width="452" height="182" role="button" title="RavindraRathore_16-1751285810556.png" alt="RavindraRathore_16-1751285810556.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Code:&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;import base64

encoderesponse = base64.b64encode(flow.getVariable("samlassertion"));

flow.setVariable("base64SAMLResponse", encoderesponse )&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 9:&lt;/STRONG&gt; Add a ServiceCallout policy to make an API call to the /oauth/token API with the company ID, client ID, SAML Assertion response, and grant_type set to ‚Äúurn:ietf:params:oauth:grant-type:saml2-bearer.‚Äù This call will return a token response.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_17-1751285810566.png" style="width: 442px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280646iBBB301DBDA7CE9F6/image-dimensions/442x202?v=v2" width="442" height="202" role="button" title="RavindraRathore_17-1751285810566.png" alt="RavindraRathore_17-1751285810566.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Code:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&amp;gt;

&amp;lt;ServiceCallout async="false" continueOnError="false" enabled="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;

    &amp;lt;Request clearPayload="true"&amp;gt;

        &amp;lt;Set&amp;gt;

            &amp;lt;Payload contentType="application/x-www-form-urlencoded"&amp;gt;client_id=NDU0MDE0MDkwYj***5YTE5MWIxMTNkNjc1Zg&amp;amp;amp;user_id=sfadmin&amp;amp;amp;company_id=SFCPA****31&amp;amp;amp;assertion={base64SAMLResponse}&amp;amp;amp;grant_type=urn:ietf:params:oauth:grant-type:saml2-bearer&amp;lt;/Payload&amp;gt;

            &amp;lt;Verb&amp;gt;POST&amp;lt;/Verb&amp;gt;

        &amp;lt;/Set&amp;gt;

        &amp;lt;IgnoreUnresolvedVariables&amp;gt;false&amp;lt;/IgnoreUnresolvedVariables&amp;gt;

    &amp;lt;/Request&amp;gt;

    &amp;lt;Response&amp;gt;sap_tokenresponse&amp;lt;/Response&amp;gt;

    &amp;lt;Timeout&amp;gt;30000&amp;lt;/Timeout&amp;gt;

    &amp;lt;HTTPTargetConnection&amp;gt;

        &amp;lt;URL&amp;gt;https://successFactorsHost.com/oauth/token&amp;lt;/URL&amp;gt;

    &amp;lt;/HTTPTargetConnection&amp;gt;

&amp;lt;/ServiceCallout&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 10:&lt;/STRONG&gt; Use the &lt;SPAN&gt;ExtractVariables&lt;/SPAN&gt;&amp;nbsp;policy to retrieve the token.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_18-1751285810576.png" style="width: 467px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280650i762357D40ED44477/image-dimensions/467x202?v=v2" width="467" height="202" role="button" title="RavindraRathore_18-1751285810576.png" alt="RavindraRathore_18-1751285810576.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_0-1751288933812.png" style="width: 468px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280677iC270CBA56ED1F33C/image-dimensions/468x213?v=v2" width="468" height="213" role="button" title="RavindraRathore_0-1751288933812.png" alt="RavindraRathore_0-1751288933812.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 11:&lt;/STRONG&gt; Create an Authorization header using the AssignMessage policy. And deploy the API proxy after saving it.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_20-1751285810586.png" style="width: 453px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280649iF67C64EA62B31688/image-dimensions/453x205?v=v2" width="453" height="205" role="button" title="RavindraRathore_20-1751285810586.png" alt="RavindraRathore_20-1751285810586.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_21-1751285810588.png" style="width: 444px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280652i713066D1C782A621/image-dimensions/444x214?v=v2" width="444" height="214" role="button" title="RavindraRathore_21-1751285810588.png" alt="RavindraRathore_21-1751285810588.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Test the API using Postman or the test tab in the integration suite and verify that you can successfully retrieve details from SuccessFactors.&lt;/P&gt;&lt;P class="lia-indent-padding-left-150px" style="padding-left : 150px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RavindraRathore_22-1751285810594.png" style="width: 437px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280651i20F2B44FE20A9DA8/image-dimensions/437x189?v=v2" width="437" height="189" role="button" title="RavindraRathore_22-1751285810594.png" alt="RavindraRathore_22-1751285810594.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;By following these steps, you will have set up the necessary OAuth2 SAML assertion authentication to enable API access between SAP API Management and SuccessFactors. Ensure all steps are completed correctly to establish a secure connection.&lt;/P&gt;&lt;P&gt;Also, you can create the SAML assertion offline using &lt;STRONG&gt;SAP-provided Offline tool, &lt;/STRONG&gt;as&amp;nbsp;mentioned in SAP KBA-&lt;A title="3031657" href="https://userapps.support.sap.com/sap/support/knowledge/en/3031657" target="_self" rel="noopener noreferrer"&gt;3031657&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;References:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/successfactors-platform/sap-successfactors-api-reference-guide-odata-v2/generating-saml-assertion" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/successfactors-platform/sap-successfactors-api-reference-guide-odata-v2/generating-saml-assertion&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/sap-api-management/sap-api-management/saml-assertion-policy?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/sap-api-management/sap-api-management/saml-assertion-policy?version=Cloud&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://userapps.support.sap.com/sap/support/knowledge/en/3031657" target="_blank" rel="noopener noreferrer"&gt;3031657 - How to generate SAML assertions using SAP-provided Offline tool - SAP SuccessFactors | SAP Knowledge Base Article&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-api-management-generating-oauth-saml-assertion-for-successfactors-api/ba-p/14140473"/>
    <published>2025-07-02T14:14:31.090000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/securing-as2-sender-adapter-with-oauth-2-0-and-sap-api-management-in-sap/ba-p/14143509</id>
    <title>Securing AS2 Sender Adapter with Oauth 2.0 and SAP API management in SAP cloud Integration</title>
    <updated>2025-07-05T11:13:47.885000+02:00</updated>
    <author>
      <name>Aishwarya_Pola</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2090996</uri>
    </author>
    <content>&lt;P&gt;In this practical guide, I‚Äôm excited to take you through a reliable method for securing AS2 iFlows using SAP API Management and OAuth 2.0. This approach will not only expose your AS2 endpoint but also enhance its security with robust, token-based access control.&lt;/P&gt;&lt;P&gt;We're going to set up&lt;STRONG&gt; two API proxies&lt;/STRONG&gt;: one for &lt;STRONG&gt;generating OAuth 2.0 access tokens&lt;/STRONG&gt; and the other for &lt;STRONG&gt;validating those tokens&lt;/STRONG&gt;. This configuration will securely direct client requests to your AS2 iFlow, ensuring that only authorized clients can initiate your AS2 integration scenarios. It also removes the need to expose sensitive endpoints or handle backend credentials manually.&lt;/P&gt;&lt;P&gt;Follow along as we create this secure setup step by step. We will change a basic AS2 interface into a scalable integration flow that uses OAuth. This will meet current enterprise API security standards.&lt;/P&gt;&lt;H4 id="toc-hId-1992309007"&gt;Architecture Overview&lt;/H4&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aishwarya_Pola_0-1751870293497.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283362iBEEA6BFBC27C08B2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Aishwarya_Pola_0-1751870293497.png" alt="Aishwarya_Pola_0-1751870293497.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Token Generation Proxy&lt;/STRONG&gt; ‚Äì This generates OAuth tokens using the client_id and client_secret.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;AS2 Access Proxy&lt;/STRONG&gt; ‚Äì It checks the validity of access tokens and directs requests to the AS2 iFlow.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Target Endpoint (CPI iFlow)&lt;/STRONG&gt; ‚Äì This is the specific AS2 iFlow that gets triggered securely through API Management.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Product &amp;amp; Application&lt;/STRONG&gt; ‚Äì This combines both proxies, allowing for client registration and access.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1666712783"&gt;Step by step Implementation&lt;/H3&gt;&lt;H4 id="toc-hId-1599281997"&gt;Step 1: Obtain the AS2 Sender Adapter Endpoint&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;Navigate to the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; --&amp;gt; &lt;STRONG&gt;Monitor&lt;/STRONG&gt;--&amp;gt;&lt;STRONG&gt;Manage Integration Content&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;select the iFlow that utilizes the AS2 Sender Adapter.&lt;/LI&gt;&lt;LI&gt;Copy the endpoint URL.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Example:&lt;BR /&gt;https://&amp;lt;your-tenant&amp;gt;.hana.ondemand.com/http/AS2Inbound&lt;/P&gt;&lt;H4 id="toc-hId-1402768492"&gt;&lt;STRONG&gt;Step 2: Create API proxy for AS2 Access&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;Head over to &lt;STRONG&gt;Integration Suite&lt;/STRONG&gt; --&amp;gt;&lt;STRONG&gt;Develop&lt;/STRONG&gt; --&amp;gt; &lt;STRONG&gt;APIs&lt;/STRONG&gt; --&amp;gt;&lt;STRONG&gt;Create API.&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Select ‚Äú&lt;STRONG&gt;URL&lt;/STRONG&gt;‚Äù and paste in the AS2 iFlow endpoint you grabbed in Step 1.&lt;/LI&gt;&lt;LI&gt;Give your proxy a name, like AS2_Access_Proxy.&lt;/LI&gt;&lt;LI&gt;Complete the proxy setup and make sure to save it.&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aishwarya_Pola_0-1751527767511.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282048iD89A07C32071AF03/image-size/large?v=v2&amp;amp;px=999" role="button" title="Aishwarya_Pola_0-1751527767511.png" alt="Aishwarya_Pola_0-1751527767511.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1077172268"&gt;Step 3: Secure Backend call to cloud Integration&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Navigate to &lt;STRONG&gt;Policies&lt;/STRONG&gt; --&amp;gt; &lt;STRONG&gt;TargetEndpoint&lt;/STRONG&gt; --&amp;gt; &lt;STRONG&gt;PreFlow&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Once there, open the &lt;STRONG&gt;Discover&lt;/STRONG&gt; tab, choose &lt;STRONG&gt;Apis&lt;/STRONG&gt;, and apply the &lt;STRONG&gt;SAP BTP Connectivity Template&lt;/STRONG&gt;. &lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aishwarya_Pola_2-1751533309522.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282112iAB5196294172AD9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Aishwarya_Pola_2-1751533309522.png" alt="Aishwarya_Pola_2-1751533309522.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;After you've applied the template, make sure to update it with your &lt;STRONG&gt;Client ID&lt;/STRONG&gt;, &lt;STRONG&gt;Client Secret&lt;/STRONG&gt;, and &lt;STRONG&gt;Token URL&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This configuration allows the API proxy to securely fetch a token and call the AS2 iFlow without revealing any backend credentials.&lt;/P&gt;&lt;H3 id="toc-hId-880658763"&gt;Step 4:&amp;nbsp;Adding OAuth Token Validation Policy to the Proxy&amp;nbsp;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;First, open the&lt;STRONG&gt; AS2_Access_Proxy&lt;/STRONG&gt; in the &lt;STRONG&gt;API portal&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;Head over to Policies --&amp;gt; ProxyEndpoint --&amp;gt; PreFlow.&lt;/LI&gt;&lt;LI&gt;Now add the OAuth 2.0 policy that will help validate incoming access tokens:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;OAuthV2 async="false" continueOnError="false" enabled="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;  
   &amp;lt;ExternalAuthorization&amp;gt;false&amp;lt;/ExternalAuthorization&amp;gt;
   &amp;lt;Operation&amp;gt;VerifyAccessToken&amp;lt;/Operation&amp;gt;
   &amp;lt;GenerateResponse enabled="true"/&amp;gt;
   &amp;lt;SupportedGrantTypes/&amp;gt;
   &amp;lt;Tokens/&amp;gt;
&amp;lt;/OAuthV2&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This step is crucial because it ensures that only client requests with valid tokens are allowed to go through.&lt;/P&gt;&lt;H3 id="toc-hId-684145258"&gt;&amp;nbsp;Step 5: Set up a Token Generation Proxy&lt;/H3&gt;&lt;P&gt;To ensure secure, token-based access, clients need a reliable way to get an OAuth 2.0 access token. This proxy handles that responsibility.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;That‚Äôs where this proxy comes into play. Start by creating a new API proxy with a dummy backend (like &lt;A href="https://example.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://example.com&lt;/A&gt;).&lt;/LI&gt;&lt;LI&gt;Give it a name such as &lt;STRONG&gt;Token_Generator_Proxy&lt;/STRONG&gt;. &lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aishwarya_Pola_4-1751534049166.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282114i4E4F60C79107F1C3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Aishwarya_Pola_4-1751534049166.png" alt="Aishwarya_Pola_4-1751534049166.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Navigate to &lt;STRONG&gt;Policies&lt;/STRONG&gt;&amp;nbsp;--&amp;gt;&amp;nbsp;&lt;STRONG&gt;ProxyEndpoint&lt;/STRONG&gt;&amp;nbsp;--&amp;gt;&amp;nbsp;&lt;STRONG&gt;PreFlow&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Add the following OAuth 2.0 policy to generate tokens using the client credentials flow:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;OAuthV2 async="false" continueOnError="false" enabled="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;
   &amp;lt;ExternalAuthorization&amp;gt;false&amp;lt;/ExternalAuthorization&amp;gt;
   &amp;lt;Operation&amp;gt;GenerateAccessToken&amp;lt;/Operation&amp;gt;
   &amp;lt;GenerateResponse enabled="true"/&amp;gt;
   &amp;lt;SupportedGrantTypes&amp;gt;
      &amp;lt;GrantType&amp;gt;client_credentials&amp;lt;/GrantType&amp;gt;
   &amp;lt;/SupportedGrantTypes&amp;gt;
   &amp;lt;Tokens/&amp;gt;
&amp;lt;/OAuthV2&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Why this is needed:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This proxy issues access tokens to trusted clients based on their client_id and client_secret.Clients will use these tokens to authenticate future requests to the AS2 endpoint through the access proxy.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Clients can request an access token like this:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;URL&lt;/STRONG&gt;: POST /token-generator-proxy&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Headers&lt;/STRONG&gt;: Content-Type: application/x-www-form-urlencoded&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Body&lt;/STRONG&gt;: client_id=APP_KEY&amp;amp;client_secret=APP_SECRET&amp;amp;grant_type=client_credentials&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-487631753"&gt;&amp;nbsp;Step 6: Create a product and add both proxies&lt;/H3&gt;&lt;P&gt;To securely bundle and expose your APIs, you‚Äôll need to create a product in SAP API Management that includes both proxies.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the integration suite, navigate to &lt;STRONG&gt;Engage&lt;/STRONG&gt; --&amp;gt; &lt;STRONG&gt;Products&lt;/STRONG&gt; --&amp;gt;&lt;STRONG&gt;Create Product&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Next, add these APIs to your product&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Token_Genrator_proxy&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;AS2_Access_Proxy&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aishwarya_Pola_5-1751534362681.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282115i527666BD3E8AB19D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Aishwarya_Pola_5-1751534362681.png" alt="Aishwarya_Pola_5-1751534362681.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Once you‚Äôve done that, save and publish the product.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;A product is essentially a way to group multiple APIs together, making them available for use.Remember, only APIs that are included in a product can be accessed through a registered application in the Developer Hub.&lt;/P&gt;&lt;H3 id="toc-hId-291118248"&gt;&amp;nbsp;Step 7: Register an Application&lt;/H3&gt;&lt;P&gt;Now that your product is published, you'll&amp;nbsp; register an application that will utilize the secured APIs.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Head over to &lt;STRONG&gt;Developer Hub&lt;/STRONG&gt; --&amp;gt; &lt;STRONG&gt;My Workspace&lt;/STRONG&gt; --&amp;gt;&lt;STRONG&gt; Create Application&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Link the product you created earlier (which includes both proxies) to this application.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aishwarya_Pola_6-1751535583547.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282121iDDFB7D7376042B94/image-size/large?v=v2&amp;amp;px=999" role="button" title="Aishwarya_Pola_6-1751535583547.png" alt="Aishwarya_Pola_6-1751535583547.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;After creation, make note of the following&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Application Key (Client ID) &lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Application Secret (Client Secret)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;You‚Äôll need these credentials to request access tokens from the Token_Generator_Proxy.The tokens you generate will allow you to make calls to the AS2_Access_Proxy.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&lt;BR /&gt;&lt;/STRONG&gt;By following this approach, you have&amp;nbsp; successfully secured your AS2 IFlow with SAP API Management and OAuth 2.0. This method avoids exposing sensitive endpoints or depending on manual credentials.&lt;/P&gt;&lt;P&gt;This setup ensures that only authorised clients can access your AS2 interface in a clear, scalable, and secure manner.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Disclaimer:&lt;BR /&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;All views and opinion expressed in this blog are my own and reflect my personal thoughts. SAP is not responsible for any content published here.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-94604743"&gt;&amp;nbsp;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/securing-as2-sender-adapter-with-oauth-2-0-and-sap-api-management-in-sap/ba-p/14143509"/>
    <published>2025-07-05T11:13:47.885000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/secure-as2-integration-in-sap-cpi-using-oauth-2-0-end-to-end-authentication/ba-p/14144344</id>
    <title>Secure AS2 Integration in SAP CPI Using OAuth 2.0: End-to-End Authentication Flow</title>
    <updated>2025-07-05T11:34:51.024000+02:00</updated>
    <author>
      <name>SanalaTejaswini</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2117187</uri>
    </author>
    <content>&lt;P&gt;Security and compliance are vital in today's automated B2B integrations. AS2 is a trusted protocol for secure document exchange, while&lt;STRONG&gt; OAuth 2.0 enables token-based authentication&lt;/STRONG&gt;. Integrating both within SAP Cloud Integration (CPI) allows organizations to securely transmit data, manage credentials efficiently, and meet modern security standards without disrupting legacy systems.&lt;/P&gt;&lt;P&gt;The Below is the Flow that we configured :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_0-1751609613583.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282624i1488D484D20D450C/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_0-1751609613583.png" alt="SanalaTejaswini_0-1751609613583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Initialization of AS2 Adapter and Process Trigger (Start Timer)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;:&lt;/STRONG&gt; The process begins with a Timer Start event that triggers the integration flow on a scheduled basis. It activates the AS2 Receiver Adapter to securely send messages to the target endpoint via the AS2 protocol.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Retrieving OAuth Credentials from Security Material (Groovy Script):&lt;/STRONG&gt; A Groovy script is used in this scenario to retrieve the &lt;STRONG&gt;OAuth Client Credentials&lt;/STRONG&gt; which are shared from the receiver. These credentials are securely stored within the Security Material configuration. Once retrieved, the script injects these credentials into the message header to allow for OAuth authentication in the subsequent API call. This ensures that communication is authenticated before being processed further in the flow.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The below is the Groovy Code Snippet used to&amp;nbsp;retrieve the OAuth Client Credentials:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import com.sap.it.api.ITApiFactory
import com.sap.it.api.securestore.SecureStoreService

def Message processData(Message message) {
    // Name of the Security Material (User Credentials) as maintained in CPI
    def credentialName = "as2_oauthtoken" // Replace with your credential alias

    // Get SecureStoreService instance
    def secureStoreService = ITApiFactory.getApi(SecureStoreService.class, null)

    // Fetch the UserCredential object
    def credential = secureStoreService.getUserCredential(credentialName)

    if (credential == null) {
        throw new Exception("No credentials found for alias: " + credentialName)
    }

    // Extract client ID (username) and client secret (password)
    String clientId = credential.getUsername()
    String clientSecret = new String(credential.getPassword())

    // Set them as headers for later use in the flow
    message.setHeader("client_id", clientId)
    message.setHeader("client_secret", clientSecret)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_1-1751610446033.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282627i6A9F731A9CB72439/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_1-1751610446033.png" alt="SanalaTejaswini_1-1751610446033.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Setting Message Headers and Body for Token Request (Content Modifiers):&lt;/STRONG&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Message Headers:&amp;nbsp;&lt;/STRONG&gt; Before sending the request, mandatory HTTP headers like Content-Type and Response-Type are set to ensure proper authentication and compliance with API specifications. Content-Type defines the format of the outgoing data (e.g., application/Json), and Response-Type specifies the expected response format (e.g., JSON or XML). Additionally, the grant type is set to client credentials, indicating that the client uses its credentials (client ID and secret) to directly request an access token without user involvement.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_2-1751610523573.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282628iC353F81F7B182E30/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_2-1751610523573.png" alt="SanalaTejaswini_2-1751610523573.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp; 2.&lt;STRONG&gt; Message Body&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;:&lt;/STRONG&gt; In the message body, the header values, including the necessary OAuth credentials, are set&amp;nbsp; &amp;nbsp; &amp;nbsp;for authentication. The header information ensures that the recipient system can verify the request‚Äôs&amp;nbsp; &amp;nbsp; &amp;nbsp;authenticity before processing it.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_3-1751610598256.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282630i7614FE9AE06D720F/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_3-1751610598256.png" alt="SanalaTejaswini_3-1751610598256.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Requesting OAuth Token Using HTTP Adapter (Request-Reply Mechanism):&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The HTTP Adapter is used to send a request to a proxy URL (created earlier in the sender AS2 adapter). This URL helps connect to the OAuth server to get the token. When the adapter sends the request, a new OAuth token is generated. This token is like a temporary key that proves the system‚Äôs identity and allows it to securely talk to the target system. The response from the server comes in JSON format, and it contains the access token. This token is then extracted and saved in the message header, so it can be used in the next steps to authorize API calls.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_4-1751610645668.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282631i6561064F7CD9D19C/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_4-1751610645668.png" alt="SanalaTejaswini_4-1751610645668.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Converting OAuth Response from JSON to &lt;/SPAN&gt;&lt;SPAN class=""&gt;XML(&lt;/SPAN&gt;&lt;SPAN class=""&gt;JSON to XML Conversion):&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; In this scenario, &lt;/SPAN&gt;&lt;SPAN class=""&gt;We&lt;/SPAN&gt;&lt;SPAN class=""&gt; will be converting the JSON format of Data to XML, here &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;XPath&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; is used for parsing the response and extracting the token.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Extracting and Storing Access Token Dynamically (Content Modifiers):&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Message Headers: &lt;/STRONG&gt;The access token required for authentication is retrieved from the OAuth response payload using an XPath expression. This token is extracted dynamically and stored in a message header, typically named access_token.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_5-1751610754085.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282633i59121F79047A54DE/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_5-1751610754085.png" alt="SanalaTejaswini_5-1751610754085.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;2&lt;STRONG&gt;.Message Body:&lt;/STRONG&gt; In the &lt;/SPAN&gt;&lt;SPAN class=""&gt;subsequent&lt;/SPAN&gt;&lt;SPAN class=""&gt; HTTP request, the Authorization header is set using the format Bearer ${header. &lt;/SPAN&gt;&lt;SPAN class=""&gt;access_token&lt;/SPAN&gt;&lt;SPAN class=""&gt;}&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN class=""&gt;Here, the keyword ‚ÄúBearer‚Äù &lt;/SPAN&gt;&lt;SPAN class=""&gt;indicates&lt;/SPAN&gt;&lt;SPAN class=""&gt; token-based authentication, and ${header. &lt;/SPAN&gt;&lt;SPAN class=""&gt;access_token&lt;/SPAN&gt;&lt;SPAN class=""&gt;} dynamically inserts the token value from the header into the request. This approach ensures secure and standards-compliant inclusion of OAuth tokens when making authenticated HTTP calls.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_6-1751610830434.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282634i4BE7F050FEE1B8E4/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_6-1751610830434.png" alt="SanalaTejaswini_6-1751610830434.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Configuring Authorization Header (Content Modifier)&lt;/STRONG&gt;: A Content Modifier is used to set up both the Authorization header and the message body. Under the Message Header tab, a new header named Authorization is created using the expression ${&lt;/SPAN&gt;&lt;SPAN class=""&gt;in.body&lt;/SPAN&gt;&lt;SPAN class=""&gt;}, which dynamically assigns the content of the message, usually an OAuth &lt;/SPAN&gt;&lt;SPAN class=""&gt;token&lt;/SPAN&gt;&lt;SPAN class=""&gt; response to the header. This is typically done after retrieving the token from an OAuth endpoint.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_7-1751611033178.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282635i57AB533F2463F231/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_7-1751611033178.png" alt="SanalaTejaswini_7-1751611033178.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Sending Authenticated Request to Target System:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; After including the Authorization header with the Bearer token, the request is &lt;/SPAN&gt;&lt;SPAN class=""&gt;forwarded&lt;/SPAN&gt;&lt;SPAN class=""&gt; to the &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Proxy URL&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. If the token is valid, the system will &lt;/SPAN&gt;&lt;SPAN class=""&gt;proceed&lt;/SPAN&gt;&lt;SPAN class=""&gt; to interact with the target endpoint. A custom header named Authorization is added under the &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Custom Headers Pattern&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; field. This ensures that when data is transmitted to the target system via AS2, the Authorization header is included in the message. This approach enables secure, authorized interaction with the target endpoint.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_8-1751611105083.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282636i7BD5099F21C98DC5/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_8-1751611105083.png" alt="SanalaTejaswini_8-1751611105083.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SanalaTejaswini_9-1751611126950.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282637i35D360AABAEBA236/image-size/large?v=v2&amp;amp;px=999" role="button" title="SanalaTejaswini_9-1751611126950.png" alt="SanalaTejaswini_9-1751611126950.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Integrating OAuth 2.0 with the AS2 Receiver Adapter in SAP CPI ensures secure, authenticated communication between systems. It allows dynamic credential handling and token-based access without manual intervention. This setup enhances data security while maintaining compliance with modern integration standards. Overall, it bridges legacy protocols with contemporary authentication practices effectively.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/secure-as2-integration-in-sap-cpi-using-oauth-2-0-end-to-end-authentication/ba-p/14144344"/>
    <published>2025-07-05T11:34:51.024000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-rundown-of-api-lifecycle-in-sap-btp-end-end-tutorial-for-beginners/ba-p/14141530</id>
    <title>A Rundown of API Lifecycle in SAP BTP: End - End tutorial for beginners</title>
    <updated>2025-07-07T09:22:18.949000+02:00</updated>
    <author>
      <name>SoumyashreeGouda</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2155779</uri>
    </author>
    <content>&lt;P&gt;Introduction:&amp;nbsp;&lt;SPAN&gt;In this weblog, I'll give you a rundown of API lifecycle in SAP BTP - beginning with how to create an API Provider, API Proxy, testing a Product through the Developer Portal.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;(I) Create API Provider:&amp;nbsp;For creating an API provider first go to Configure&amp;gt;&amp;gt;APIs&amp;gt;&amp;gt;API Providers&amp;gt;&amp;gt;Click on Create&amp;gt;&amp;gt;Give the details like name, host, authentication&amp;gt;&amp;gt; then save it and test the connection.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_38-1751362753764.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281169i8861E0752876EAF7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_38-1751362753764.png" alt="SoumyashreeGouda_38-1751362753764.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_39-1751362753748.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281171iE676C192EF8E14BA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_39-1751362753748.png" alt="SoumyashreeGouda_39-1751362753748.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_40-1751362753767.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281172i15A44688377D17B7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_40-1751362753767.png" alt="SoumyashreeGouda_40-1751362753767.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;(II) Create API Proxy:&amp;nbsp; Select the API Provider which you have created above then select the service from the available list for your Api Provider.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_42-1751362753765.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281175i938D22A470342993/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_42-1751362753765.png" alt="SoumyashreeGouda_42-1751362753765.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_43-1751362753747.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281173i28DEE5E5B0614D7D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_43-1751362753747.png" alt="SoumyashreeGouda_43-1751362753747.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Specify the Proxy Details: n&lt;/SPAN&gt;&lt;SPAN&gt;ame&amp;gt;title&amp;gt;&amp;gt;base path&amp;gt;&amp;gt;version&amp;gt;&amp;gt; click on create and review the target endpoint and resources&amp;gt;&amp;gt;then save it&amp;gt;&amp;gt;Deploy it for activation of your API proxy.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_44-1751362753754.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281174i5A2A8C230F21BA75/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_44-1751362753754.png" alt="SoumyashreeGouda_44-1751362753754.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(III)&amp;nbsp; In this step we need to add policies click on the policies&amp;gt;&amp;gt;edit&amp;gt;&amp;gt;flows&amp;gt;&amp;gt;TargetEndpoint&amp;gt;&amp;gt;PostFlow&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_1-1751833670809.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283235iB722D22B2DC96248/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_1-1751833670809.png" alt="SoumyashreeGouda_1-1751833670809.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here, I have added two policies one is Assign Message Policy and another is Basic Authentication.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In Assign message policy-&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(i)add name&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(ii) the XML, editor give your username and password &amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_48-1751362753773.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281181i325E3167466EA6E2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_48-1751362753773.png" alt="SoumyashreeGouda_48-1751362753773.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now you have to add Basic Authentication Policy here you have to add the name and check these details&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;like Endpoint type, flow type and stream. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Then Click on update&amp;gt;&amp;gt;save&amp;gt;&amp;gt;redeploy it again.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(IV) For Creating a Product - Engage&amp;gt;&amp;gt;Product&amp;gt;&amp;gt;Create&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_53-1751362753805.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281185iC743DED2D01B1057/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_53-1751362753805.png" alt="SoumyashreeGouda_53-1751362753805.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_54-1751362753822.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281188i3BF2C127ABE69BE3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_54-1751362753822.png" alt="SoumyashreeGouda_54-1751362753822.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Then move to APIs tab press on add button&amp;gt;&amp;gt; now choose the API which you have created earlier&amp;gt;&amp;gt;click on OK button and then publish it&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_55-1751362753881.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281186i1CC0B74AC232F6F4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_55-1751362753881.png" alt="SoumyashreeGouda_55-1751362753881.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You will see there will be an entry in APIs column with the status of Published.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_58-1751362753818.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281191i6186D2765B015ACB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_58-1751362753818.png" alt="SoumyashreeGouda_58-1751362753818.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on&amp;nbsp;&lt;/SPAN&gt;Explore our Ecosystem &amp;gt;&amp;gt; Developer Hub&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_52-1751362753807.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281184iFBE3345048D14823/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_52-1751362753807.png" alt="SoumyashreeGouda_52-1751362753807.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now you can see there is a product.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_59-1751362753848.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281190iE9B8D9FD79690D61/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_59-1751362753848.png" alt="SoumyashreeGouda_59-1751362753848.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(V) Test the Product: Select the Product&amp;gt;&amp;gt; ProductSet &amp;gt;&amp;gt; GET /ProductSet &amp;gt;&amp;gt;Try it out &amp;gt;&amp;gt;Execute&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SoumyashreeGouda_60-1751362753819.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281193i2CC78C5637EAD245/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SoumyashreeGouda_60-1751362753819.png" alt="SoumyashreeGouda_60-1751362753819.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Then it will give the response of Product Set with a HTTP status code 200.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-rundown-of-api-lifecycle-in-sap-btp-end-end-tutorial-for-beginners/ba-p/14141530"/>
    <published>2025-07-07T09:22:18.949000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-analytics-cloud-modeling-extensions-amp-integration-qrc3/ba-p/14130035</id>
    <title>What's New in SAP Analytics Cloud Modeling Extensions &amp; Integration QRC3 2025 Release</title>
    <updated>2025-07-14T08:40:08.881000+02:00</updated>
    <author>
      <name>AmandaJMurphy</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/46075</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1862208678"&gt;&lt;FONT color="#3366FF"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_0-1750164805647.png" style="width: 914px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275420iA5B00E2B0548A6B1/image-dimensions/914x521?v=v2" width="914" height="521" role="button" title="AmandaJMurphy_0-1750164805647.png" alt="AmandaJMurphy_0-1750164805647.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-1665695173"&gt;&lt;FONT color="#3366FF"&gt;&lt;SPAN&gt;Purpose&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Hello SAP Community Colleagues,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In QRC3 2025, we have an action-packed list of new features that have now been made available in the modeling area of SAP Analytics Cloud, within Business Data Cloud! &lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1598264387"&gt;&lt;FONT color="#3366FF"&gt;Overview&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;Learn more about these new features here:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;A new formula called &lt;STRONG&gt;&lt;EM&gt;WAVG&lt;/EM&gt;&lt;/STRONG&gt; (Weighted Average)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;First, Last and Average including unbooked data exception aggregation.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Data Export API ‚Äì Delta Aggregation.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H4 id="toc-hId-1401750882"&gt;&amp;nbsp;&lt;/H4&gt;&lt;OL&gt;&lt;LI&gt;&lt;H4 id="toc-hId-1205237377"&gt;&lt;FONT color="#800080"&gt;New&amp;nbsp;&lt;/FONT&gt;&lt;FONT color="#800080"&gt;formula -&amp;nbsp;&lt;/FONT&gt;&lt;FONT color="#800080"&gt;WAVG&amp;nbsp; (Weighted Average)&lt;/FONT&gt;&lt;/H4&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;A new formula has been introduced into the modeler, called &lt;STRONG&gt;&lt;EM&gt;WAVG&lt;/EM&gt;&lt;/STRONG&gt;.&amp;nbsp; This formula calculates the &lt;STRONG&gt;&lt;EM&gt;weighted average&lt;/EM&gt;&lt;/STRONG&gt; of a member, based on the value of the corresponding members assigned weight.&amp;nbsp; It can be used in standard and account models.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#3366FF"&gt;&lt;EM&gt;How Weighted Average is calculated:&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#008000"&gt;Dimension&amp;nbsp; &lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#008000"&gt;Price&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#008000"&gt;Stock&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#008000"&gt;Price * Stock&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;Bread&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;2&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;10&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;20&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;Bread&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;3&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;20&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;60&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;Bread&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;4&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;30&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;120&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;Total&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;9&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;60&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="160"&gt;&lt;P&gt;&lt;SPAN&gt;200&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Table 1: Table containing product, price and stock values&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;EM&gt;Table 1&lt;/EM&gt; shows a simple list of products with various prices and stock amounts. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To calculate the &lt;STRONG&gt;&lt;EM&gt;Average Price&lt;/EM&gt;&lt;/STRONG&gt;, use the following calculation: &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(2+3+4)/3 = &lt;STRONG&gt;3&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To calculate the &lt;STRONG&gt;&lt;EM&gt;Weighted Average Price&lt;/EM&gt;&lt;/STRONG&gt;, use the following calculation: (2*10) + (3*20) + (4*30) / (10 + 20 + 30 ) = 200 / 60 = &lt;STRONG&gt;3.33&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The weighted average calculation can provide a more accurate result, based on the given weight, compared to an average calculation.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;Syntax:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;FONT color="#993366"&gt;WAVG([Measure] or [Account Member], [Assigned Weight], [Dimension 1], [Dimension 2]... [Dimension 10])&lt;/FONT&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For example:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_0-1752490489141.png" style="width: 546px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286194iD34CF4E54F1C903F/image-dimensions/546x112?v=v2" width="546" height="112" role="button" title="AmandaJMurphy_0-1752490489141.png" alt="AmandaJMurphy_0-1752490489141.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;Figure 1: Sample WAVG Syntax&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The above &lt;STRONG&gt;&lt;EM&gt;WAVG&lt;/EM&gt;&lt;/STRONG&gt; formula calculates the weighted average of &lt;EM&gt;[Price]&lt;/EM&gt; using &lt;EM&gt;[Volume]&lt;/EM&gt; as the assigned weight, for a given Date and Product.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Up to &lt;EM&gt;10 dimensions&lt;/EM&gt; can be used within the WAVG formula.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Note that &lt;STRONG&gt;&lt;EM&gt;input enablement&lt;/EM&gt;&lt;/STRONG&gt; on cells containing this calculated measure is available on &lt;STRONG&gt;&lt;EM&gt;leaf members only&lt;/EM&gt;&lt;/STRONG&gt;, which is the lowest level of the hierarchy.&amp;nbsp; It is planned to make input enablement available on other members in the future.&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1008723872"&gt;&lt;FONT color="#800080"&gt;2.&amp;nbsp; First, Last and Average Exception Aggregation including Unbooked Data&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;You can now compute &lt;STRONG&gt;first, last and average exception aggregation&lt;/STRONG&gt; including unbooked data using a &lt;STRONG&gt;single dimension&lt;/STRONG&gt; on a &lt;STRONG&gt;base measure&lt;/STRONG&gt; or &lt;STRONG&gt;base account&lt;/STRONG&gt; with these three new exception aggregation values:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Average incl. Unbooked &lt;/STRONG&gt;calculates the average of all aggregated values, including unbooked values.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;First incl. Unbooked &lt;/STRONG&gt;shows the first (oldest) value in the selected period, including unbooked values.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Last incl. Unbooked&lt;/STRONG&gt;&amp;nbsp;shows the last (most recent) value in the selected period, including unbooked values.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_0-1750169796473.png" style="width: 347px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275469i23F4708C58A5AA2D/image-dimensions/347x734?v=v2" width="347" height="734" role="button" title="AmandaJMurphy_0-1750169796473.png" alt="AmandaJMurphy_0-1750169796473.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Figure 2: New exception aggregations in modeler&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;These new exception aggregations are supported in the standard and account model and can help to provide more accurate results on aggregated data.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;Average including unbooked exception aggregation example:&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_1-1750166418535.png" style="width: 951px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275438iD11347BCDB299DBE/image-dimensions/951x491?v=v2" width="951" height="491" role="button" title="AmandaJMurphy_1-1750166418535.png" alt="AmandaJMurphy_1-1750166418535.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Figure 3: Illustration on how Average incl. Unbooked now considers all months in period, instead of just months containing booked values&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the above example, an &lt;STRONG&gt;&lt;EM&gt;Average incl. Unbooked&lt;/EM&gt;&lt;/STRONG&gt; exception aggregation is applied to a base measure.&amp;nbsp; The total in Q1 is 100, in Q2 is 200, in Q3 is 300 and in Q4 is 400.&lt;/P&gt;&lt;P&gt;When &lt;STRONG&gt;&lt;EM&gt;booked values&lt;/EM&gt;&lt;/STRONG&gt; are only considered, the average is the sum of these values, divided by the number of booked entries, i.e. (100+200+300+400)/4 months=&lt;STRONG&gt;250&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;When &lt;STRONG&gt;&lt;EM&gt;considering unbooked data&lt;/EM&gt;&lt;/STRONG&gt;, a more accurate average exception aggregation can now be calculated.&amp;nbsp;&lt;/P&gt;&lt;P&gt;i.e. (100+200+300+400)/12 months = &lt;STRONG&gt;83.33&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;First including unbooked exception aggregation&amp;nbsp;example:&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_2-1750166588438.png" style="width: 970px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275440i7F8CE54F5451862E/image-dimensions/970x392?v=v2" width="970" height="392" role="button" title="AmandaJMurphy_2-1750166588438.png" alt="AmandaJMurphy_2-1750166588438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Figure 4: Illustration on how First incl. Unbooked now considers all months in period, instead of just months containing booked values&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Figure 4&lt;/EM&gt; shows an example of how &lt;STRONG&gt;&lt;EM&gt;First Incl. Unbooked&lt;/EM&gt;&lt;/STRONG&gt; exception aggregation now considers &lt;EM&gt;unbooked values&lt;/EM&gt; in the first period, compared to when using &lt;EM&gt;First&lt;/EM&gt; exception aggregation, that defaults to booked values.&amp;nbsp; Should this example show an entry for February, the top level of the hierarchy will still show unbooked values, as January is now considered within the formula even though it contains no data.&amp;nbsp; This provides a more accurate &lt;EM&gt;First&lt;/EM&gt; exception aggregation result of entries for a given period.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_3-1750166814673.png" style="width: 944px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275442i2D83275B480935BF/image-dimensions/944x353?v=v2" width="944" height="353" role="button" title="AmandaJMurphy_3-1750166814673.png" alt="AmandaJMurphy_3-1750166814673.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Figure 5: Illustration on how Last incl. Unbooked now considers unbooked values for a given period&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Figure 5&lt;/EM&gt; shows how &lt;STRONG&gt;&lt;EM&gt;Last incl. Unbooked&lt;/EM&gt;&lt;/STRONG&gt; exception aggregation compares to &lt;STRONG&gt;&lt;EM&gt;Last exception aggregation&lt;/EM&gt;&lt;/STRONG&gt;.&amp;nbsp; Last exception aggregation contains 400 for October.&amp;nbsp; As this is the last period that contains booked values, results are seen at the top level of the hierarchy.&amp;nbsp; In contrast, &lt;STRONG&gt;&lt;EM&gt;Last incl. Unbooked&lt;/EM&gt;&lt;/STRONG&gt; also contains 400 for October, however, the last period is December, which contains an unbooked value.&amp;nbsp; This unbooked value is therefore seen at the top level of the hierarchy for that period, providing a more accurate result for the Last aggregation.&lt;/P&gt;&lt;H3 id="toc-hId-683127648"&gt;3.&amp;nbsp; Data Export API ‚Äì Fact Data Delta Aggregation&lt;/H3&gt;&lt;P&gt;The &lt;STRONG&gt;&lt;EM&gt;Data Export API&lt;/EM&gt;&lt;/STRONG&gt; has been extended to support the export of &lt;STRONG&gt;&lt;EM&gt;aggregated delta &lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt;of &lt;/EM&gt;&lt;STRONG&gt;&lt;EM&gt;fact data&lt;/EM&gt;&lt;/STRONG&gt;, using a new &lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;&lt;EM&gt;‚ÄòFactDataAggregation&lt;/EM&gt;‚Äò&lt;/STRONG&gt;&lt;/FONT&gt; endpoint.&amp;nbsp;&lt;/P&gt;&lt;P&gt;This means that changed &lt;EM&gt;fact data&lt;/EM&gt; can now be &lt;EM&gt;aggregated&lt;/EM&gt; and &lt;EM&gt;then exported,&lt;/EM&gt; compared to exporting all changed fact data.&amp;nbsp; This feature compliments how S/4 consumes aggregated fact data.&lt;/P&gt;&lt;P&gt;Modelers can also access this feature within the &lt;EM&gt;&lt;STRONG&gt;API Subcriptions&lt;/STRONG&gt;&lt;/EM&gt; tab in their model.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_0-1750167291763.png" style="width: 552px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275448i40C7842EDEF0FAF4/image-dimensions/552x329?v=v2" width="552" height="329" role="button" title="AmandaJMurphy_0-1750167291763.png" alt="AmandaJMurphy_0-1750167291763.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Figure 6: Fact Data Delta Aggregation entity set within the Create Subscriptions area of the model&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;FONT color="#0000FF"&gt;An example of how Delta Aggregation works:&lt;/FONT&gt;&lt;/EM&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Account&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Product&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Sales&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Account1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Water&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;100&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Account1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Juice&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;150&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Account2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Water&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;200&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Account2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;Juice&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214px" height="50px"&gt;&lt;P&gt;150&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;Table 2: Accounts 1 &amp;amp; 2 contains Products and Sales.&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;EM&gt;Table 2&lt;/EM&gt; shows Account1 &amp;amp; Account2 contains 2 products at various sales values.&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Account&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Sales&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;Account1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;250&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;Account2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;350&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Table 3: Aggregated values of Account1 &amp;amp; Account2&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let‚Äôs modify the sales values for both accounts:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="214"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Account&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Product&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Sales&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214"&gt;&lt;P&gt;Account1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;Water&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;110&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214"&gt;&lt;P&gt;Account1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;Juice&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;80&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="214"&gt;&lt;P&gt;Account2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;Water&lt;/P&gt;&lt;/TD&gt;&lt;TD width="214"&gt;&lt;P&gt;75&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Table 4: Sales values have changed, reflecting changed fact data.&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The sales value for &lt;EM&gt;Water&lt;/EM&gt; in Account1 has been change from 100 to 110.&lt;/P&gt;&lt;P&gt;The sales value for &lt;EM&gt;Juice&lt;/EM&gt; in Account1 has been change from 150 to 80.&lt;/P&gt;&lt;P&gt;The sales value for &lt;EM&gt;Water&lt;/EM&gt; in Account2 has been change from 200 to 75.&lt;/P&gt;&lt;P&gt;There is no change for &lt;EM&gt;Juice&lt;/EM&gt; in Account2.&lt;/P&gt;&lt;P&gt;The aggregated fact data values are therefore calculated as follows:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Account&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;Sales&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;Account1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;((110 - 100) + (80 - 150)) = &lt;STRONG&gt;-60&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;Account2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;((75-200) + (150 ‚Äì 150)) = -&lt;STRONG&gt;125&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="2"&gt;&lt;EM&gt;Table 5: How the aggregated values are calculated&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;These are the values that will be exported using the &lt;STRONG&gt;&lt;EM&gt;‚ÄòFactDataAggregation&lt;/EM&gt;‚Äò&lt;/STRONG&gt; endpoint or by using the &lt;STRONG&gt;&lt;EM&gt;Fact Data Delta Aggregation&lt;/EM&gt;&lt;/STRONG&gt; entity set in the &lt;EM&gt;API Subscriptions&lt;/EM&gt; section of the model.&lt;/P&gt;&lt;H2 id="toc-hId-357531424"&gt;&lt;FONT color="#0000FF"&gt;Conclusion&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;In summary, the following new features and updates have been introduced to the&amp;nbsp;&lt;EM&gt;Modeling Extensions and Integration&lt;/EM&gt;&amp;nbsp;areas of SAP Analytics Cloud, within Business Data Cloud, as part of QRC3 2025 release.&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;A new formula, called &lt;STRONG&gt;WAVG&lt;/STRONG&gt;, calculates the &lt;STRONG&gt;&lt;EM&gt;weighted average&lt;/EM&gt;&lt;/STRONG&gt; of a member, based on the value of the corresponding members assigned weight.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Three new exception aggregations can be applied to base measures and base accounts.&amp;nbsp;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;First incl. Unbooked &lt;/EM&gt;&lt;/STRONG&gt;shows the first (oldest) value in the selected period, including unbooked values.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Last incl. Unbooke&lt;/EM&gt;&lt;/STRONG&gt;d shows the last (newest) value in the selected period, including unbooked values.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Average incl. Unbooked&lt;/EM&gt;&lt;/STRONG&gt; calculates the average of all aggregated values, including unbooked values.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;The Data Export API has been extended to support the export of aggregated delta of fact data using a new &lt;STRONG&gt;&lt;EM&gt;‚ÄòFactDataAggregation&lt;/EM&gt;‚Äò&lt;/STRONG&gt; endpoint.&amp;nbsp; Modelers can also use the new &lt;EM&gt;&lt;STRONG&gt;Fata Data Delta Aggregation&lt;/STRONG&gt;&lt;/EM&gt; entity set name in the &lt;EM&gt;API Subscriptions&lt;/EM&gt; tab of the model.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;If you have any questions, feel free to comment below or post a question to our&amp;nbsp;&lt;A href="https://community.sap.com/topics/cloud-analytics?ct=qa&amp;amp;lng=en&amp;amp;tab=content" target="_blank"&gt;SAP Analytics Cloud Questions &amp;amp; Answers&lt;/A&gt;&amp;nbsp;forum.&lt;/P&gt;&lt;P&gt;See this&amp;nbsp;&lt;A href="https://userapps.support.sap.com/sap/support/knowledge/E/2728183" target="_blank" rel="noopener noreferrer"&gt;SAP Knowledge Base Article&lt;/A&gt;&amp;nbsp;if you‚Äôd like to learn more about FastTrack and Quarterly Release Cycle releases.&lt;/P&gt;&lt;P&gt;For further information, visit our&amp;nbsp;&lt;A href="https://community.sap.com/topics/cloud-analytics" target="_blank"&gt;SAP Analytics Cloud Community&lt;/A&gt;&amp;nbsp;pages to find more product information, best practices, and more.&amp;nbsp;&lt;/P&gt;&lt;P&gt;To find out more about QRC release dates, see&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/sap-analytics-cloud-tenants-on-quarterly-release-cycle-qrc-updates-in-2025/ba-p/14000629" target="_blank"&gt;SAP Analytics Cloud tenants on Quarterly Release Cycle (QRC) updates in 2025&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Check out our&amp;nbsp;&lt;A href="https://roadmaps.sap.com/board?PRODUCT=67838200100800006884&amp;amp;amp;range=CURRENT-LAST&amp;amp;range=CURRENT-LAST" target="_blank" rel="noopener noreferrer"&gt;SAP Road Map Explorer&lt;/A&gt;&amp;nbsp;to see more upcoming features of SAP Analytics Cloud.&lt;/P&gt;&lt;P&gt;Thanks for reading!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-analytics-cloud-modeling-extensions-amp-integration-qrc3/ba-p/14130035"/>
    <published>2025-07-14T08:40:08.881000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/demo-accessing-sap-with-generative-ai-in-microsoft-teams/ba-p/14150831</id>
    <title>Demo: Accessing SAP with Generative AI in Microsoft Teams</title>
    <updated>2025-07-21T03:13:01.221000+02:00</updated>
    <author>
      <name>prakashsaurav</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/12784</uri>
    </author>
    <content>&lt;P&gt;In this demo, we showcase how to bring SAP data closer to your teams by combining the power of Generative AI, Microsoft Copilot Studio, and Teams. Using SAP OData services exposed via SAP BTP Integration Suite, we build an intelligent Copilot agent that lets users retrieve sales orders, products, customers, and suppliers ‚Äî all through simple natural language conversations. Whether it‚Äôs in Teams or Microsoft 365 Copilot, see how you can seamlessly access and interact with your SAP backend data, improving efficiency and transforming user experience.&lt;/P&gt;&lt;P&gt;&lt;A href="https://aditheos.com/2025/06/26/simplifying-sap-access-with-gen-ai-built-on-copilot-studio-integrated-via-sap-btp-azure-apim-delivered-in-teams-copilot/" target="_blank" rel="noopener nofollow noreferrer"&gt;Step by Step Implementation&lt;/A&gt;&amp;nbsp; &amp;nbsp;/&amp;nbsp;Access complete source code @&amp;nbsp;&lt;A href="https://github.com/aditheos/SalesAI" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FgdxKP7GCMn8%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DgdxKP7GCMn8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FgdxKP7GCMn8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="486" height="273" scrolling="no" title="Simplifying SAP Access with Gen AI | SAP BTP + Microsoft Copilot Studio Demo" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/demo-accessing-sap-with-generative-ai-in-microsoft-teams/ba-p/14150831"/>
    <published>2025-07-21T03:13:01.221000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/build-shipment-creation-and-tracking-skill-using-joule-studio-integrated/ba-p/14165071</id>
    <title>Build Shipment Creation and Tracking Skill using Joule Studio integrated with SAP BN4L GTT</title>
    <updated>2025-07-29T10:53:24.154000+02:00</updated>
    <author>
      <name>nilay_mehta123</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/384687</uri>
    </author>
    <content>&lt;P&gt;As we know by now, Joule is SAP‚Äôs generative AI copilot that helps users interact with business data and processes in a conversational, natural language format. With Joule Studio, developers and business users alike can create custom Joule skills to address specific business scenarios, extending the power of SAP Business AI.&lt;/P&gt;&lt;P&gt;With the latest launch of &lt;A title="Joule Studio Product Page" href="https://www.sap.com/products/artificial-intelligence/joule-studio.html" target="_blank" rel="noopener noreferrer"&gt;Joule Studio&lt;/A&gt;,&amp;nbsp;we can now build custom AI agents and skills &lt;SPAN&gt;that automate workflows and improve efficiency in executing routine tasks. Joule Studio is currently live with the Skill builder and the Agent Builder is slated to be GA later this year.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Earlier this year, I had the privilege to work with the Joule Studio product teams to build and test &lt;A title="Joule Studio Launch with Logistics Agent" href="https://community.sap.com/t5/technology-blog-posts-by-sap/build-deploy-and-extend-ai-agents-with-joule-studio/ba-p/14105964" target="_blank"&gt;Logistics Agents&lt;/A&gt; for providing transportation options, fetching weather forecasts on transportation routes and tracking with carriers in real-time.&lt;/P&gt;&lt;P&gt;In this article, we will walk through the steps on how to build&amp;nbsp;&lt;STRONG&gt;Joule Skills&amp;nbsp;&lt;/STRONG&gt;for Logistics and Transportation use cases using Joule Studio. These custom skills will help users &lt;STRONG&gt;create a shipment&lt;/STRONG&gt;&amp;nbsp;directly in SAP Business Network for Logistics (BN4L) and subsequently&amp;nbsp;&lt;STRONG&gt;track that shipment‚Äôs status&lt;/STRONG&gt; using Global Track and Trace (GTT) using the Joule digital assistant.&lt;/P&gt;&lt;P&gt;This is particularly useful for transportation planners, customer service reps, and warehouse operators who want a quick and intelligent way to interact with shipment data in natural language - without navigating through multiple systems. Furthermore, once the Joule is activated in S/4HANA systems or SAP Build Workzone then Joule can create shipments directly in BN4L GTT using the data from ERP orders/deliveries.&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1865128316"&gt;Step 1: Prerequisites&lt;/H3&gt;&lt;P&gt;Before building the skill in Joule Studio, ensure you have activated the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Joule Studio&lt;/STRONG&gt; on your SAP BTP subaccount. (refer&amp;nbsp;&lt;A title="Provisioning Joule Studio in your Subaccount" href="https://community.sap.com/t5/technology-blog-posts-by-sap/getting-started-with-joule-studio-in-sap-build-part-1-provisioning-joule/ba-p/14157407" target="_blank"&gt;provisioning Joule Studio&lt;/A&gt;)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP Business Network for Logistics&lt;/STRONG&gt; tenant with API access.&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP Business Accelerator Hub&lt;/STRONG&gt; to reference GTT APIs.&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Authentication credentials for &lt;STRONG&gt;SAP&amp;nbsp;BN4L API endpoints&lt;/STRONG&gt;.&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Developer &lt;A title="Joule Studio Authorizations" href="https://help.sap.com/docs/Joule_Studio/45f9d2b8914b4f0ba731570ff9a85313/11f93c7775274b2996e1469b1bc07584.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;role and permissions&lt;/A&gt; to create skills in Joule Studio.&amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1668614811"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1472101306"&gt;Step 2: Design the Skill in Joule Studio&lt;/H3&gt;&lt;H4 id="toc-hId-1404670520"&gt;&lt;SPAN&gt;Login to your SAP Build lobby to create a Joule Skill.&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_0-1753775771121.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293250iA122D89A9C83D0E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_0-1753775771121.png" alt="nilay_mehta123_0-1753775771121.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1208157015"&gt;Skill to Create Shipment in BN4L GTT&lt;/H4&gt;&lt;P&gt;&lt;STRONG&gt;Step 1:&lt;/STRONG&gt; Create a new Joule skill and provide a valid description which will help as the trigger mechanism. Add input parameters to the skills to capture Source Location, Destination Location, Pickup Date, Shipment No, etc.&amp;nbsp;&lt;/P&gt;&lt;P&gt;We can even make this optimizer this step further by fetching an ERP delivery data from a S/4HANA System using the &lt;A title="Business Accelerator Hub - Delivery Odata" href="https://api.sap.com/api/API_OUTBOUND_DELIVERY_SRV_0002/overview" target="_blank" rel="noopener noreferrer"&gt;Odata Service&lt;/A&gt;. With that Joule will be able to fetch the delivery details to create a shipment. However, to understand how the conversations work, we can proceed with capturing data from the user.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_2-1753738853680.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292989iACB9335F897E18FE/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_2-1753738853680.png" alt="nilay_mehta123_2-1753738853680.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2:&lt;/STRONG&gt;&amp;nbsp;Create and Publish a Build Action from Build Lobby to integrate your BN4L GTT tenant with SAP Build.&amp;nbsp;&lt;BR /&gt;Here, we can use the GTT Write Service API (Shipment Event) which creates a shipment in GTT (For more info visit &lt;A title="SAP BN4L GTT Write Service" href="https://help.sap.com/docs/business-network-global-track-and-trace/model-administrator/write-service?q=write" target="_blank" rel="noopener noreferrer"&gt;SAP Help&lt;/A&gt;)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_0-1753770184583.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293121i9BF8689107609F38/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_0-1753770184583.png" alt="nilay_mehta123_0-1753770184583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3:&lt;/STRONG&gt; Add the published Action to Joule Skill and map the Skill input to Action input.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_4-1753740849716.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292995iA1F9F839C4FF2044/image-dimensions/999x999?v=v2" width="999" height="999" role="button" title="nilay_mehta123_4-1753740849716.png" alt="nilay_mehta123_4-1753740849716.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4 (Optional):&amp;nbsp;&lt;/STRONG&gt;Add Send Message function to display a successful shipment creation message to the User along with a hyperlink to navigate GTT shipment to v.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_5-1753741044639.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292996i0C41F5735F95531A/image-dimensions/999x999?v=v2" width="999" height="999" role="button" title="nilay_mehta123_5-1753741044639.png" alt="nilay_mehta123_5-1753741044639.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5:&lt;/STRONG&gt; Deploy and Test the Joule Skill using the Build Environments. Currently, Joule Studio supports testing the custom Joule Skills only from within an Environment. Under Joule, launch the standalone Joule Digital Assistant.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_7-1753741409368.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292998i2ED4D47527B8B419/image-dimensions/999x999?v=v2" width="999" height="999" role="button" title="nilay_mehta123_7-1753741409368.png" alt="nilay_mehta123_7-1753741409368.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H3 id="toc-hId-882560791"&gt;Step 3: Joule digital assistant (the conversation part)&amp;nbsp;&lt;/H3&gt;&lt;P&gt;Use Joule digital assistant to test the skill that we just deployed. Open the logs to review the steps performed by Joule to execute a Skill based on user input.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Create a shipment conversation with basic shipment information.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_3-1753766938448.png" style="width: 407px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293094iF01BF0BC78489DA6/image-dimensions/407x656?v=v2" width="407" height="656" role="button" title="nilay_mehta123_3-1753766938448.png" alt="nilay_mehta123_3-1753766938448.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_4-1753766992707.png" style="width: 403px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293095i409E62E06EC83ACD/image-dimensions/403x655?v=v2" width="403" height="655" role="button" title="nilay_mehta123_4-1753766992707.png" alt="nilay_mehta123_4-1753766992707.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;H4 id="toc-hId-815130005"&gt;Skill to Track Shipment using BN4L GTT&lt;/H4&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: &amp;nbsp;&lt;/STRONG&gt;Return to SAP Build Lobby and open your project, within the project create a new Joule Skill. Remember to add a wholesome description. Add input - trackingId and output parameters -status, city, region.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_7-1753763895375.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293062i25C7109348DFB9E1/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_7-1753763895375.png" alt="nilay_mehta123_7-1753763895375.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2:&amp;nbsp;&lt;/STRONG&gt;Add a new Build Action to fetch shipment status from GTT. To find more details of the GTT Read services in the &lt;A title="BN4L GTT Reference Integration Guide" href="https://help.sap.com/doc/83adce4bf4514737884c9d420cafe7ee/LBN/en-US/SAP_LBN_GTT_Interface_ref_guide.pdf" target="_blank" rel="noopener noreferrer"&gt;BN4L GTT Reference Guide.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Release and Publish the Action to be used in Joule Skill.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Refer to the &lt;A title="SAP BPA use Filters in Odata" href="https://help.sap.com/docs/build-process-automation/sap-build-process-automation/using-filter-conditions-filter-7e7531ccfd9f4c60bdb408a56a2f4bb4?q=eq&amp;amp;locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SAP BPA help&lt;/A&gt; to learn more on how to use &lt;EM&gt;$filter&lt;/EM&gt; capability while querying using an Odata service.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_6-1753763367965.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293058i3681710EE001536A/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_6-1753763367965.png" alt="nilay_mehta123_6-1753763367965.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3:&amp;nbsp;&lt;/STRONG&gt;Add this Action as a step function in the Track Shipment Joule Skill. Map the Action input to the Skills Input to pass the tracking number from the user as a query parameter to the GTT read service. &lt;EM&gt;This will improve the overall performance and response time of Joule during runtime conversations.&lt;/EM&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Create a new destination variable to represent the GET service BTP destination.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_8-1753764048269.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293064i963D8E4872367366/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_8-1753764048269.png" alt="nilay_mehta123_8-1753764048269.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4:&amp;nbsp;&lt;/STRONG&gt;In the End step, map the Skills Output to the corresponding fields from the Action Output result. This will enable Joule to form a logical output based on the message to be displayed to the user.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_10-1753764540505.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293068i5F0AA597CB1561EA/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_10-1753764540505.png" alt="nilay_mehta123_10-1753764540505.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5:&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;Release and deploy the skill to the same Environment created for the first skill.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6:&amp;nbsp;&lt;/STRONG&gt;Navigate to the Environment, now you should be able to see the latest version of the Project deployed. Launch the Joule DA from the Joule tab.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_11-1753764978301.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293080i9D8513F312B25909/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_11-1753764978301.png" alt="nilay_mehta123_11-1753764978301.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-489533781"&gt;Step 3: Joule digital assistant (the conversation part)&amp;nbsp;&lt;/H3&gt;&lt;P&gt;Track the shipment with Shipment ID to view the execution status and the current location.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_1-1753775073681.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293234i7F959C648D8A785C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="nilay_mehta123_1-1753775073681.png" alt="nilay_mehta123_1-1753775073681.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-293020276"&gt;Step 4: Integrate Joule with SAP Build Workzone&lt;/H3&gt;&lt;P&gt;Enable your users to interact with Joule and enjoy these custom skills by &lt;A title="Integrate Joule in SAP Build Workzone" href="https://help.sap.com/docs/joule/integrating-joule-with-sap/integration-with-sap-build-work-zone-standard-edition?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;activating Joule in SAP Build Workzone&lt;/A&gt;.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nilay_mehta123_1-1753778032463.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293275i5CF68E74ECDA7993/image-size/large?v=v2&amp;amp;px=999" role="button" title="nilay_mehta123_1-1753778032463.png" alt="nilay_mehta123_1-1753778032463.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-96506771"&gt;Final Thoughts&lt;/H3&gt;&lt;P&gt;This is an high level overview on building custom Joule Skills for deterministic tasks based on business processes expanding the horizon of SAP Business AI.&amp;nbsp;With Joule Studio, we are now able to&amp;nbsp;&lt;SPAN&gt;extend SAP Joule's AI capabilities to address unique business needs.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;P&gt;Learn more about how&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/services-support/premium-support.html" target="_self" rel="noopener noreferrer"&gt;SAP Premium Engagement&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;can help you accelerate your digital transformation with curated AI workshops and discovery sessions.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Business+AI/pd-p/73554900100700002751" class="lia-product-mention" data-product="1247-1"&gt;SAP Business AI&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/Joule/pd-p/d0136351-8a9c-4881-aebc-bf414b785998" class="lia-product-mention" data-product="1207-1"&gt;Joule&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Business+Network+for+Logistics/pd-p/73554900100800001025" class="lia-product-mention" data-product="454-1"&gt;SAP Business Network for Logistics&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+Private+Edition/pd-p/5c26062a-9855-4f39-8205-272938b6882f" class="lia-product-mention" data-product="1198-1"&gt;SAP S/4HANA Cloud Private Edition&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1595967"&gt;@SAPMaxAttention&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/build-shipment-creation-and-tracking-skill-using-joule-studio-integrated/ba-p/14165071"/>
    <published>2025-07-29T10:53:24.154000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-%E5%88%86%E6%9E%90%E4%BA%91%E5%BB%BA%E6%A8%A1%E6%89%A9%E5%B1%95%E4%B8%8E%E9%9B%86%E6%88%90-2025-qrc3-%E7%89%88%E6%9C%AC%E6%96%B0%E5%8A%9F%E8%83%BD%E9%80%9F%E8%A7%88/ba-p/14174458</id>
    <title>SAP ÂàÜÊûê‰∫ëÂª∫Ê®°Êâ©Â±ï‰∏éÈõÜÊàê 2025 QRC3 ÁâàÊú¨Êñ∞ÂäüËÉΩÈÄüËßà</title>
    <updated>2025-08-07T12:09:01.736000+02:00</updated>
    <author>
      <name>mike688</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1921121</uri>
    </author>
    <content>&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_0-1754553951542.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297799iFA6CA9D602FC8A96/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_0-1754553951542.png" alt="mike688_0-1754553951542.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;FONT size="5"&gt;ÁõÆÁöÑ&amp;nbsp;&lt;/FONT&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Â∞äÊï¨ÁöÑ&lt;/SPAN&gt;&lt;SPAN&gt; SAP &lt;/SPAN&gt;&lt;SPAN&gt;Á§æÂå∫Âêå‰∫ãÔºö&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Âú®&lt;/SPAN&gt;&lt;SPAN&gt; 2025 &lt;/SPAN&gt;&lt;SPAN&gt;Âπ¥&lt;/SPAN&gt;&lt;SPAN&gt; QRC3 &lt;/SPAN&gt;&lt;SPAN&gt;ÁâàÊú¨Ôºà&lt;/SPAN&gt;&lt;SPAN&gt;BDC&lt;/SPAN&gt;&lt;SPAN&gt;‰∏≠ÁöÑ &lt;/SPAN&gt;&lt;SPAN&gt;SAC&lt;/SPAN&gt;&lt;SPAN&gt;Âª∫Ê®°Ê®°ÂùóÔºâ‰∏≠ÔºåÊàë‰ª¨‰∏∫ÊÇ®Â∏¶Êù•‰∫Ü‰∏ÄÁ≥ªÂàóÈáçÁ£ÖÊõ¥Êñ∞ÔºåÂäüËÉΩÁÑïÁÑ∂‰∏ÄÊñ∞ÔºÅ&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Ê∏©È¶®ÊèêÁ§∫ÔºöQRC3 ÁâàÊú¨Â∞Ü‰∫éÂÖ´Êúà‰∏≠Êó¨Âú®ÊÇ®ÁöÑÂÆ¢Êà∑Á´ØÊ≠£Âºè‰∏äÁ∫øÔºå‰ª•‰∏ãÂÜÖÂÆπ‰∏∫ÊÇ®Êä¢ÂÖàÊè≠ÁßòÊñ∞ÂäüËÉΩ‰∫ÆÁÇπÔºåÊï¨ËØ∑ÊúüÂæÖÔºÅ&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;FONT size="5"&gt;ÂäüËÉΩÊÄªËßà&amp;nbsp;&lt;/FONT&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Êú¨Ê¨°Êõ¥Êñ∞‰∏∫ÊÇ®Â∏¶Êù•‰∏âÂ§ßÊ†∏ÂøÉËÉΩÂäõÔºåËØ¶ÊÉÖÂ¶Ç‰∏ãÔºö&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;ÂÖ®Êñ∞ÂÖ¨ÂºèÔºö&lt;/SPAN&gt;&lt;STRONG&gt;WAVG&lt;/STRONG&gt;&lt;SPAN&gt;ÔºàÂä†ÊùÉÂπ≥ÂùáÂÄºÔºâ&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;FIRST&lt;/SPAN&gt;&lt;SPAN&gt;„ÄÅ&lt;/SPAN&gt;&lt;SPAN&gt;LAST &lt;/SPAN&gt;&lt;SPAN&gt;‰∏é&lt;/SPAN&gt;&lt;SPAN&gt; AVERAGE &lt;/SPAN&gt;&lt;SPAN&gt;ÊîØÊåÅÂê´Êó†ÂÄºÊï∞ÊçÆÁöÑÂºÇÂ∏∏ËÅöÂêà&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Êï∞ÊçÆÂØºÂá∫&lt;/SPAN&gt;&lt;SPAN&gt; API &lt;/SPAN&gt;&lt;SPAN&gt;‚Äî‚Äî Â¢ûÈáèËÅöÂêàÔºà&lt;/SPAN&gt;&lt;SPAN&gt;Delta Aggregation&lt;/SPAN&gt;&lt;SPAN&gt;Ôºâ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT color="#800080"&gt;&lt;STRONG&gt;1.ÂÖ®Êñ∞ÂÖ¨ÂºèÔºöWAVGÔºàÂä†ÊùÉÂπ≥ÂùáÂÄºÔºâ&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;WAVG&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;ÔºàÂä†ÊùÉÂπ≥ÂùáÔºâÂÖ¨ÂºèÁé∞Â∑≤‰∏äÁ∫øÂª∫Ê®°Âô®„ÄÇËØ•ÂÖ¨ÂºèÂèØÊ†πÊçÆ&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ÊåáÂÆöÊùÉÈáç&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;ÊàêÂëòÁöÑÂØπÂ∫îÂÄºÔºåËÆ°ÁÆóÊüê‰∏ÄÊàêÂëòÁöÑÂä†ÊùÉÂπ≥ÂùáÂÄºÔºåÈÄÇÁî®‰∫éÊ†áÂáÜÊ®°ÂûãÂíåË¥¶Êà∑Ê®°Âûã„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;SPAN&gt;Âä†ÊùÉÂπ≥ÂùáËÆ°ÁÆóÊñπÂºèÔºö&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;&lt;FONT color="#339966"&gt;Dimension&lt;/FONT&gt;‚ÄØ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Price&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Stock&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Price * Stock&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Bread&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;2&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;10&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;20&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Bread&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;3&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;20&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;60&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Bread&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;4&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;30&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;120&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Total&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;8&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;60&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;200&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Ë°®&lt;/STRONG&gt;&lt;STRONG&gt; 1&lt;/STRONG&gt;&lt;/EM&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;EM&gt;ÔºöÂê´‰∫ßÂìÅ„ÄÅ‰ª∑Ê†º‰∏éÂ∫ìÂ≠òÊï∞ÊçÆÁöÑÁ§∫‰æãË°®&amp;nbsp;&lt;/EM&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Ë°®&lt;/SPAN&gt;&lt;SPAN&gt; 1 &lt;/SPAN&gt;&lt;SPAN&gt;ÂàóÂá∫Ëã•Âπ≤‰∫ßÂìÅÂèäÂÖ∂Âçï‰ª∑‰∏éÂ∫ìÂ≠òÈáè„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Ë¶ÅËÆ°ÁÆó&lt;STRONG&gt;Âπ≥Âùá‰ª∑Ê†º&lt;/STRONG&gt;ÔºåËØ∑‰ΩøÁî®‰ª•‰∏ãÂÖ¨ÂºèËÆ°ÁÆóÔºö&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(2 + 3 + 4) / 3 = &lt;STRONG&gt;3&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Ë¶ÅËÆ°ÁÆó&lt;STRONG&gt;Âä†ÊùÉÂπ≥Âùá‰ª∑Ê†º&lt;/STRONG&gt;ÔºåËØ∑‰ΩøÁî®‰ª•‰∏ãÂÖ¨ÂºèËÆ°ÁÆóÔºö&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(2*10) + (3*20) + (4*30) / (10 + 20 + 30) = 200 / 60 = &lt;STRONG&gt;3.33&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ÈÄöËøáÂºïÂÖ•ÊùÉÈáçÔºåÂä†ÊùÉÂπ≥ÂùáËÆ°ÁÆóËÉΩÊõ¥Á≤æÂáÜÂú∞ÂèçÊò†ÂÆûÈôÖ‰ª∑ÂÄº„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;SPAN&gt;ËØ≠Ê≥ïÔºö&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#800080"&gt;&lt;SPAN&gt;WAVG([&lt;/SPAN&gt;&lt;SPAN&gt;Â∫¶ÈáèÂÄº] Êàñ [Ë¥¶Êà∑ÊàêÂëò], [ÊåáÂÆöÊùÉÈáç], [Áª¥Â∫¶&lt;/SPAN&gt;&lt;SPAN&gt;1], [&lt;/SPAN&gt;&lt;SPAN&gt;Áª¥Â∫¶&lt;/SPAN&gt;&lt;SPAN&gt;2], ..., [&lt;/SPAN&gt;&lt;SPAN&gt;Áª¥Â∫¶&lt;/SPAN&gt;&lt;SPAN&gt;10])&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Á§∫‰æãÔºö&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_1-1754553951543.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297797i614816EC9B6EC7D4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_1-1754553951543.png" alt="mike688_1-1754553951543.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Âõæ&lt;/STRONG&gt;&lt;STRONG&gt; 1&lt;/STRONG&gt;&lt;STRONG&gt;Ôºö&lt;/STRONG&gt;&lt;STRONG&gt;WAVG &lt;/STRONG&gt;&lt;/EM&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;EM&gt;ËØ≠Ê≥ïÁ§∫‰æã&lt;/EM&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;‰∏äËø∞ &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;WAVG &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;ÂÖ¨Âºè‰ª•&lt;/SPAN&gt;&lt;SPAN&gt; [Volume] &lt;/SPAN&gt;&lt;SPAN&gt;‰Ωú‰∏∫ÊùÉÈáçÔºåËÆ°ÁÆóÂú®ÁªôÂÆö&lt;/SPAN&gt;&lt;SPAN&gt; [Date] &lt;/SPAN&gt;&lt;SPAN&gt;Âíå&lt;/SPAN&gt;&lt;SPAN&gt; [Product] &lt;/SPAN&gt;&lt;SPAN&gt;Áª¥Â∫¶‰∏ãÁöÑ&lt;/SPAN&gt;&lt;SPAN&gt; [Price] &lt;/SPAN&gt;&lt;SPAN&gt;Âä†ÊùÉÂπ≥ÂùáÂÄº„ÄÇ&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;WAVG &lt;/SPAN&gt;&lt;SPAN&gt;ÂÖ¨ÂºèÊúÄÂ§öÂèØÂºïÁî®&lt;/SPAN&gt;&lt;SPAN&gt; 10 &lt;/SPAN&gt;&lt;SPAN&gt;‰∏™Áª¥Â∫¶„ÄÇ&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Ê≥®ÊÑèÔºöÁõÆÂâç&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;‰ªÖÊîØÊåÅÂú®Â±ÇÊ¨°ÁªìÊûÑÁöÑÂè∂ËäÇÁÇπ&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;ÔºàÊúÄ‰ΩéÂ±ÇÁ∫ßÔºâÂØπËØ•ËÆ°ÁÆóÂ∫¶Èáè&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ËøõË°åËæìÂÖ•&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;„ÄÇÂêéÁª≠ÁâàÊú¨ËÆ°ÂàíÊâ©Â±ïËá≥ÂÖ∂‰ªñÂ±ÇÁ∫ßÁöÑÊàêÂëò„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#800080"&gt;2.FIRST„ÄÅLAST ‰∏é AVERAGE ÊîØÊåÅÂê´Êó†ÂÄºÊï∞ÊçÆÁöÑÂºÇÂ∏∏ËÅöÂêà&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Êñ∞Â¢û‰∏âÁßçÂºÇÂ∏∏ËÅöÂêàÊñπÂºèÔºåÁé∞ÂèØÂú®&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Âçï‰∏ÄÁª¥Â∫¶&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‰∏ãÔºåÂØπ&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Âü∫Á°ÄÂ∫¶ÈáèÊàñÂü∫Á°ÄË¥¶Êà∑&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;ËøõË°å&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt; FIRST&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;„ÄÅ&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;LAST &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;‰ª•Âèä&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt; AVERAGE &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;ËÆ°ÁÆó&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;ÔºåÂπ∂ÂåÖÂê´Êó†ÂÄºÊï∞ÊçÆÔºö&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Average incl. Unbooked&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;ËÆ°ÁÆóÊâÄÈÄâÊúüÈó¥ÂÜÖÊâÄÊúâËÅöÂêàÂÄºÔºàÂê´Êó†ÂÄºÊï∞ÊçÆÔºâÁöÑÂπ≥ÂùáÂÄº„ÄÇ&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;First incl. Unbooked&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;ËøîÂõûÊâÄÈÄâÊúüÈó¥ÂÜÖÊúÄÊó©ÔºàÊó∂Èó¥ÊúÄÈù†ÂâçÔºâÁöÑÂÄºÔºåÂåÖÂê´Êó†ÂÄºÊï∞ÊçÆ„ÄÇ&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Last incl. Unbooked&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;ËøîÂõûÊâÄÈÄâÊúüÈó¥ÂÜÖÊúÄÊñ∞ÔºàÊó∂Èó¥ÊúÄÈù†ÂêéÔºâÁöÑÂÄºÔºåÂåÖÂê´Êó†ÂÄºÊï∞ÊçÆ„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_2-1754553951544.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297798i722AE42575FBC88B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_2-1754553951544.png" alt="mike688_2-1754553951544.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Âõæ&lt;/STRONG&gt;&lt;STRONG&gt; 2&lt;/STRONG&gt;&lt;STRONG&gt;ÔºöÂª∫Ê®°Âô®‰∏≠Êñ∞Â¢ûÁöÑÂºÇÂ∏∏ËÅöÂêàÈÄâÈ°π&lt;/STRONG&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Ëøô‰∫õÂºÇÂ∏∏ËÅöÂêàÊñπÂºèÂêåÊó∂ÊîØÊåÅÊ†áÂáÜÊ®°Âûã‰∏éË¥¶Êà∑Ê®°ÂûãÔºåÂèØÂú®ËÅöÂêàÊï∞ÊçÆÊó∂ÁªôÂá∫Êõ¥Á≤æÁ°ÆÁöÑÁªìÊûú„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;SPAN&gt;„ÄêÁ§∫‰æã„Äë‚Äú&lt;/SPAN&gt;&lt;SPAN&gt;Average including unbooked&lt;/SPAN&gt;&lt;SPAN&gt;‚Äù ÂºÇÂ∏∏ËÅöÂêàÔºö&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_3-1754553951546.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297802i7C952AE049EA8E23/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_3-1754553951546.png" alt="mike688_3-1754553951546.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Âõæ&lt;/STRONG&gt;&lt;STRONG&gt; 3&lt;/STRONG&gt;&lt;STRONG&gt;ÔºöÁ§∫‰æãËØ¥Êòé‚Äú&lt;/STRONG&gt;&lt;STRONG&gt;Average incl. Unbooked&lt;/STRONG&gt;&lt;STRONG&gt;‚ÄùÂ¶Ç‰ΩïÂ∞ÜÊúüÈó¥ÂÜÖÁöÑÊâÄÊúâÊúà‰ªΩÁ∫≥ÂÖ•ËÆ°ÁÆóÔºåËÄåÈùû‰ªÖÂê´ÊúâÂÄºÊï∞ÊçÆÁöÑÊúà‰ªΩ&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Âú®‰∏ä‰æã‰∏≠ÔºåÂØπÊüê‰∏ÄÂü∫Á°ÄÂ∫¶ÈáèÂ∫îÁî®‰∫Ü‚Äú&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Average incl. Unbooked&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‚ÄùÂºÇÂ∏∏ËÅöÂêà„ÄÇÂêÑÂ≠£Â∫¶ÂêàËÆ°Ôºö&lt;/SPAN&gt;&lt;SPAN&gt;Q1 &lt;/SPAN&gt;&lt;SPAN&gt;‰∏∫&lt;/SPAN&gt;&lt;SPAN&gt; 100&lt;/SPAN&gt;&lt;SPAN&gt;Ôºå&lt;/SPAN&gt;&lt;SPAN&gt;Q2 &lt;/SPAN&gt;&lt;SPAN&gt;‰∏∫&lt;/SPAN&gt;&lt;SPAN&gt; 200&lt;/SPAN&gt;&lt;SPAN&gt;Ôºå&lt;/SPAN&gt;&lt;SPAN&gt;Q3 &lt;/SPAN&gt;&lt;SPAN&gt;‰∏∫&lt;/SPAN&gt;&lt;SPAN&gt; 300&lt;/SPAN&gt;&lt;SPAN&gt;Ôºå&lt;/SPAN&gt;&lt;SPAN&gt;Q4 &lt;/SPAN&gt;&lt;SPAN&gt;‰∏∫&lt;/SPAN&gt;&lt;SPAN&gt; 400&lt;/SPAN&gt;&lt;SPAN&gt;„ÄÇ&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;‰ªÖËÄÉËôë&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ÊúâÂÄºÊï∞ÊçÆ&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Êó∂ÔºåÂπ≥ÂùáÂÄºÊòØËøô‰∫õÂÄºÁöÑÊÄªÂíåÔºåÈô§‰ª•ÊúâÂÄºÊù°ÁõÆÁöÑÊï∞ÈáèÔºåÂç≥&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(100 + 200 + 300 + 400) √∑ 4 = &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;250&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;ËÄÉËôëÂê´Êó†ÂÄºÊï∞ÊçÆ&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Êó∂ÔºåÊúüÈó¥ÂÖ±&lt;/SPAN&gt;&lt;SPAN&gt; 12 &lt;/SPAN&gt;&lt;SPAN&gt;‰∏™ÊúàÂÖ®ÈÉ®Á∫≥ÂÖ•ËÆ°ÁÆóÔºåÂæóÂà∞Êõ¥Á≤æÁ°ÆÁöÑÂπ≥ÂùáÂºÇÂ∏∏ËÅöÂêàÔºåÂç≥&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; (100 + 200 + 300 + 400) √∑ 12 ‚âà&lt;/SPAN&gt; &lt;STRONG&gt;&lt;SPAN&gt;83.33&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;SPAN&gt;„ÄêÁ§∫‰æã„Äë‚Äú&lt;/SPAN&gt;&lt;SPAN&gt;First incl. Unbooked&lt;/SPAN&gt;&lt;SPAN&gt;‚Äù ÂºÇÂ∏∏ËÅöÂêàÔºö&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_4-1754553951549.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297800i8E2C5F331784446A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_4-1754553951549.png" alt="mike688_4-1754553951549.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Âõæ&lt;/STRONG&gt;&lt;STRONG&gt; 4&lt;/STRONG&gt;&lt;STRONG&gt;ÔºöÁ§∫‰æãÂ±ïÁ§∫‚Äú&lt;/STRONG&gt;&lt;STRONG&gt;First incl. Unbooked&lt;/STRONG&gt;&lt;STRONG&gt;‚ÄùÂ¶Ç‰ΩïÂ∞ÜÊúüÈó¥ÊâÄÊúâÊúà‰ªΩÁ∫≥ÂÖ•ËÆ°ÁÆóÔºåËÄåÈùû‰ªÖÂê´ÊúâÂÄºÊï∞ÊçÆÁöÑÊúà‰ªΩ&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Âõæ&lt;/SPAN&gt;&lt;SPAN&gt; 4 &lt;/SPAN&gt;&lt;SPAN&gt;ÈÄöËøáÂØπÊØîËØ¥ÊòéÔºö‰ΩøÁî®‚Äú&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;First incl. Unbooked&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‚ÄùÂºÇÂ∏∏ËÅöÂêàÊó∂ÔºåÁ≥ªÁªü‰ºöËÄÉËôëÈ¶ñÊúàÊó†ÂÄºÊï∞ÊçÆÂÄºÔºõËÄå‰º†Áªü‚Äú&lt;/SPAN&gt;&lt;SPAN&gt;First&lt;/SPAN&gt;&lt;SPAN&gt;‚ÄùËÅöÂêà‰ªÖËøîÂõûÊúâÂÄºÊï∞ÊçÆÁöÑÈ¶ñ‰∏™ÂÄº„ÄÇ&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Âç≥‰Ωø‰∫åÊúàÂ∑≤ÊúâÊï∞ÊçÆÔºåÈ°∂Â±Ç‰ªçÊòæÁ§∫Êó†ÂÄºÊï∞ÊçÆÂÄºÔºåÂõ†‰∏∫ÂÖ¨ÂºèÂ∑≤Â∞Ü‰∏ÄÊúàÔºàÊó†Êï∞ÊçÆÔºâÁ∫≥ÂÖ•ËÆ°ÁÆóÔºå‰ªéËÄå‰∏∫ËØ•ÊúüÈó¥ÂÜÖÁöÑ‚Äú&lt;/SPAN&gt;&lt;SPAN&gt;First&lt;/SPAN&gt;&lt;SPAN&gt;‚ÄùÂºÇÂ∏∏ËÅöÂêàÊèê‰æõÊõ¥Á≤æÁ°ÆÁöÑÁªìÊûú„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_5-1754553951550.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297801i349FDFFCD469EB90/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_5-1754553951550.png" alt="mike688_5-1754553951550.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Âõæ&lt;/STRONG&gt;&lt;STRONG&gt; 5&lt;/STRONG&gt;&lt;STRONG&gt;ÔºöÁ§∫‰æãËØ¥Êòé‚Äú&lt;/STRONG&gt;&lt;STRONG&gt;Last incl. Unbooked&lt;/STRONG&gt;&lt;STRONG&gt;‚ÄùÂ¶Ç‰ΩïÂú®ÁªôÂÆöÊúüÈó¥ÂÜÖÊääÊó†ÂÄºÊï∞ÊçÆÁ∫≥ÂÖ•‚ÄúÊúÄÂêéÂÄº‚ÄùËÆ°ÁÆó&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Âõæ&lt;/SPAN&gt;&lt;SPAN&gt;5&lt;/SPAN&gt;&lt;SPAN&gt;Â±ïÁ§∫‰∫Ü‚Äú&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Last incl. Unbooked&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‚Äù‰∏é‚Äú&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Last&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Ôºà‰ªÖÂê´ÊúâÂÄºÊï∞ÊçÆÔºâ&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‚Äù‰∏§ÁßçËÅöÂêàÊñπÂºèÁöÑÂ∑ÆÂºÇ„ÄÇÂú®‰º†Áªü‚Äú&lt;/SPAN&gt;&lt;SPAN&gt;Last&lt;/SPAN&gt;&lt;SPAN&gt;‚ÄùÊ®°Âºè‰∏ãÔºå&lt;/SPAN&gt;&lt;SPAN&gt;10 &lt;/SPAN&gt;&lt;SPAN&gt;ÊúàÂ∑≤ÊúâÊúâÂÄºÊï∞ÊçÆ&lt;/SPAN&gt;&lt;SPAN&gt; 400&lt;/SPAN&gt;&lt;SPAN&gt;Ôºå‰∏îÂÆÉÊòØÊúÄÂêé‰∏Ä‰∏™Âê´ÊúâÂÄºÊï∞ÊçÆÁöÑÊúüÈó¥ÔºåÂõ†Ê≠§&lt;/SPAN&gt;&lt;SPAN&gt; 400 &lt;/SPAN&gt;&lt;SPAN&gt;Ë¢´Â∏¶Âà∞Â±ÇÁ∫ßÈ°∂Â±ÇÂπ∂ÊòæÁ§∫Âá∫Êù•„ÄÇËÄå‚Äú&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Last incl. Unbooked&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‚ÄùÂêåÊ†∑Êää&lt;/SPAN&gt;&lt;SPAN&gt; 10 &lt;/SPAN&gt;&lt;SPAN&gt;ÊúàÁöÑ&lt;/SPAN&gt;&lt;SPAN&gt; 400 &lt;/SPAN&gt;&lt;SPAN&gt;Á∫≥ÂÖ•ËÆ°ÁÆóÔºå‰ΩÜÊúÄÂêé‰∏Ä‰∏™ÊúüÈó¥ÊòØ&lt;/SPAN&gt;&lt;SPAN&gt; 12 &lt;/SPAN&gt;&lt;SPAN&gt;ÊúàÔºåËØ•ÊúàÂ≠òÂú®Êó†ÂÄºÊï∞ÊçÆ„ÄÇÁî±‰∫éËØ•Êó†ÂÄºÊï∞ÊçÆ‰πüË¢´ËßÜ‰∏∫ÊúâÊïàÔºå&lt;/SPAN&gt;&lt;SPAN&gt;12 &lt;/SPAN&gt;&lt;SPAN&gt;ÊúàÁöÑÊï∞ÊçÆË¢´Êé®ÈÄÅËá≥È°∂Â±ÇÔºå‰ªéËÄåÂæóÂà∞Êõ¥Ë¥¥ËøëÁúüÂÆûÊÉÖÂÜµÁöÑ&lt;/SPAN&gt;&lt;SPAN&gt; Last &lt;/SPAN&gt;&lt;SPAN&gt;ËÅöÂêàÁªìÊûú„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#800080"&gt;3.Êï∞ÊçÆÂØºÂá∫ API ‚Äî‚Äî Â¢ûÈáèËÅöÂêàÔºàDelta AggregationÔºâ&lt;/FONT&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Êï∞ÊçÆÂØºÂá∫&lt;/STRONG&gt;&lt;SPAN&gt;&lt;STRONG&gt; API&lt;/STRONG&gt; &lt;/SPAN&gt;&lt;SPAN&gt;Áé∞Â∑≤Êâ©Â±ïÔºåÊñ∞Â¢û ‚Äú&lt;/SPAN&gt;&lt;FONT color="#3366FF"&gt;&lt;SPAN&gt;FactDataAggregation&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;‚Äù Á´ØÁÇπÔºåÊîØÊåÅÂ∞ÜÂ∑≤ËÅöÂêàÁöÑ‰∫ãÂÆûÊï∞ÊçÆÂ¢ûÈáèÂØºÂá∫„ÄÇ&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ËøôÊÑèÂë≥ÁùÄÔºåÁ≥ªÁªüÂèØÂÖàÊääÂèëÁîüÂèòÂä®ÁöÑ‰∫ãÂÆûÊï∞ÊçÆËÅöÂêàÔºåÂÜç‰ªÖÂØºÂá∫Ëøô‰∫õËÅöÂêàÁªìÊûúÔºåËÄåÊó†ÈúÄÂØºÂá∫ÊâÄÊúâÂèòÂä®ÊòéÁªÜ„ÄÇËØ•ÂäüËÉΩ‰∏é&lt;/SPAN&gt;&lt;SPAN&gt; S/4 &lt;/SPAN&gt;&lt;SPAN&gt;‰ΩøÁî®ËÅöÂêà‰∫ãÂÆûÊï∞ÊçÆÁöÑÊñπÂºèÁõ∏ËæÖÁõ∏Êàê„ÄÇ&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Âª∫Ê®°ËÄÖ‰πüÂèØÂú®Ê®°ÂûãÁöÑ ‚Äú&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;API&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;&lt;SPAN&gt;Subscriptions&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‚Äù Ê†áÁ≠æÈ°µÂÜÖÁõ¥Êé•ËÆøÈóÆÊ≠§ÂäüËÉΩ„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mike688_6-1754553951552.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297803i20489248702CB22C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="mike688_6-1754553951552.png" alt="mike688_6-1754553951552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Âõæ&lt;/STRONG&gt;&lt;STRONG&gt; 6&lt;/STRONG&gt;&lt;STRONG&gt;ÔºöÂú®Ê®°ÂûãÁöÑ‚ÄúÂàõÂª∫ËÆ¢ÈòÖ‚ÄùÂå∫Âüü‰∏≠ÊòæÁ§∫ÁöÑ‚Äú‰∫ãÂÆûÊï∞ÊçÆÂ¢ûÈáèËÅöÂêà‚ÄùÂÆû‰ΩìÈõÜ&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;SPAN&gt;Â¢ûÈáèËÅöÂêàÁ§∫‰æãÔºö&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Account&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Product&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Sales&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Account1&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Water&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;100&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Account1&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Juice&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;150&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Account2&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Water&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;200&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Account2&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Juice&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;150&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Ë°®&lt;/STRONG&gt;&lt;STRONG&gt;2&lt;/STRONG&gt;&lt;STRONG&gt;Ôºö&lt;/STRONG&gt;&lt;STRONG&gt;Account1&lt;/STRONG&gt;&lt;STRONG&gt;‰∏é&lt;/STRONG&gt;&lt;STRONG&gt;Account2&lt;/STRONG&gt;&lt;/EM&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;EM&gt;ÂåÖÂê´‰∫ßÂìÅÂèäÈîÄÂîÆÈ¢ù&lt;/EM&gt;„ÄÇ&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Ë°®&lt;/SPAN&gt;&lt;SPAN&gt;2&lt;/SPAN&gt;&lt;SPAN&gt;ÊòæÁ§∫Ôºå&lt;/SPAN&gt;&lt;SPAN&gt;Account1&lt;/SPAN&gt;&lt;SPAN&gt;Âíå&lt;/SPAN&gt;&lt;SPAN&gt;Account2&lt;/SPAN&gt;&lt;SPAN&gt;ÂÖ±ÂåÖÂê´&lt;/SPAN&gt;&lt;SPAN&gt;2&lt;/SPAN&gt;&lt;SPAN&gt;Áßç‰∫ßÂìÅÔºåÊØèÁßç‰∫ßÂìÅÂú®‰∏çÂêåÊúüÈó¥ÁöÑÈîÄÂîÆÈáëÈ¢ùÂêÑÂºÇ„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE width="134px"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="81.475px"&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Account&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="52.6167px"&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Sales&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="81.475px"&gt;&lt;P&gt;&lt;SPAN&gt;Account1&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="52.6167px"&gt;&lt;P&gt;&lt;SPAN&gt;250&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="81.475px"&gt;&lt;P&gt;&lt;SPAN&gt;Account2&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="52.6167px"&gt;&lt;P&gt;&lt;SPAN&gt;350&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Ë°®&lt;/STRONG&gt;&lt;STRONG&gt;3&lt;/STRONG&gt;&lt;STRONG&gt;Ôºö&lt;/STRONG&gt;&lt;STRONG&gt;Account1 &lt;/STRONG&gt;&lt;STRONG&gt;Âíå&lt;/STRONG&gt;&lt;STRONG&gt; Account2&lt;/STRONG&gt;&lt;STRONG&gt;ÁöÑËÅöÂêàÂÄº&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Êé•‰∏ãÊù•ÔºåÊàë‰ª¨ÂØπ‰∏§‰∏™Ë¥¶Êà∑ÁöÑÈîÄÂîÆÈ¢ùËøõË°åË∞ÉÊï¥Ôºö&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Account&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Product&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Sales&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Account1&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Water&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;110&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Account1&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Juice&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;80&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Account2&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Water&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;75&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Ë°®&lt;/STRONG&gt;&lt;STRONG&gt;4&lt;/STRONG&gt;&lt;STRONG&gt;ÔºöÈîÄÂîÆÈ¢ùÂ∑≤ÂèëÁîüÂèòÂä®Ôºå‰ΩìÁé∞‰∏∫‰∫ãÂÆûÊï∞ÊçÆÊõ¥Êñ∞&lt;/STRONG&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Account1&lt;/SPAN&gt;&lt;SPAN&gt;‰∏≠‚Äú&lt;/SPAN&gt;&lt;SPAN&gt;Water&lt;/SPAN&gt;&lt;SPAN&gt;‚ÄùÁöÑÈîÄÂîÆÈ¢ùÁî±&lt;/SPAN&gt;&lt;SPAN&gt; 100 &lt;/SPAN&gt;&lt;SPAN&gt;Ë∞ÉÊï¥‰∏∫&lt;/SPAN&gt;&lt;SPAN&gt; 110&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Account1&lt;/SPAN&gt;&lt;SPAN&gt;‰∏≠‚Äú&lt;/SPAN&gt;&lt;SPAN&gt;Juice&lt;/SPAN&gt;&lt;SPAN&gt;‚ÄùÁöÑÈîÄÂîÆÈ¢ùÁî±&lt;/SPAN&gt;&lt;SPAN&gt; 150 &lt;/SPAN&gt;&lt;SPAN&gt;Ë∞ÉÊï¥‰∏∫&lt;/SPAN&gt;&lt;SPAN&gt; 80&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Account2&lt;/SPAN&gt;&lt;SPAN&gt;‰∏≠‚Äú&lt;/SPAN&gt;&lt;SPAN&gt;Water&lt;/SPAN&gt;&lt;SPAN&gt;‚ÄùÁöÑÈîÄÂîÆÈ¢ùÁî±&lt;/SPAN&gt;&lt;SPAN&gt; 200 &lt;/SPAN&gt;&lt;SPAN&gt;Ë∞ÉÊï¥‰∏∫&lt;/SPAN&gt;&lt;SPAN&gt; 75&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Account2&lt;/SPAN&gt;&lt;SPAN&gt;‰∏≠‚Äú&lt;/SPAN&gt;&lt;SPAN&gt;Juice&lt;/SPAN&gt;&lt;SPAN&gt;‚ÄùÁöÑÈîÄÂîÆÈ¢ù‰øùÊåÅ‰∏çÂèò&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Áî±Ê≠§ÈáçÊñ∞ËÆ°ÁÆóÂæóÂà∞ÁöÑËÅöÂêà‰∫ãÂÆûÊï∞ÊçÆÂ¶Ç‰∏ãÔºö&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Account&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;SPAN&gt;Sales&lt;/SPAN&gt;&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Account1&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;((110 - 100) + (80 - 150)) =‚ÄØ&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;-60&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Account2&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;((75-200) + (150 ‚Äì 150)) = &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;-125&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Ë°®&lt;/STRONG&gt;&lt;STRONG&gt;5&lt;/STRONG&gt;&lt;STRONG&gt;ÔºöËÅöÂêàÂÄºÁöÑËÆ°ÁÆóÊñπÂºè&lt;/STRONG&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Ëøô‰∫õÂÄºÂç≥‰∏∫ÈÄöËøá‚Äú&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;FactDataAggregation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‚ÄùÁ´ØÁÇπÔºåÊàñÂú®Ê®°ÂûãÁöÑ &lt;/SPAN&gt;&lt;SPAN&gt;‚ÄúAPI Subscriptions‚Äù&lt;/SPAN&gt;&lt;SPAN&gt;‰∏≠‰ΩøÁî®‚Äú&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Fact Data Delta Aggregation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‚ÄùÂÆû‰ΩìÈõÜÂêéÔºåÂ∞ÜË¶ÅÂØºÂá∫ÁöÑËÅöÂêàÁªìÊûú„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;FONT size="5"&gt;ÁªìËÆ∫&lt;/FONT&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ÊÄª‰πãÔºå‰Ωú‰∏∫&lt;/SPAN&gt;&lt;SPAN&gt; 2025 &lt;/SPAN&gt;&lt;SPAN&gt;Âπ¥&lt;/SPAN&gt;&lt;SPAN&gt; QRC3 &lt;/SPAN&gt;&lt;SPAN&gt;ÁâàÊú¨ÁöÑ‰∏ÄÈÉ®ÂàÜÔºå&lt;/SPAN&gt;&lt;SPAN&gt;SAC&lt;/SPAN&gt;&lt;SPAN&gt;Ôºà&lt;/SPAN&gt;&lt;SPAN&gt;Business Data Cloud &lt;/SPAN&gt;&lt;SPAN&gt;Ê®°ÂùóÔºâÂú®‚ÄúÂª∫Ê®°Êâ©Â±ï‚Äù‰∏é‚ÄúÈõÜÊàê‚ÄùÈ¢ÜÂüüÊé®Âá∫‰∫Ü‰ª•‰∏ãÊñ∞ÂäüËÉΩ‰∏éÊõ¥Êñ∞Ôºö&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; 1.Êñ∞Â¢û&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt; WAVG&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; ÂÖ¨ÂºèÔºöÂèØÊåâÂØπÂ∫îÊùÉÈáçÊàêÂëòÁöÑÂÄºÔºåËÆ°ÁÆóÊüêÊàêÂëòÁöÑ&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Âä†ÊùÉÂπ≥Âùá&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;„ÄÇ&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; 2.‰∏âÁßçÊñ∞ÁöÑÂºÇÂ∏∏ËÅöÂêàÊñπÂºè&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;First incl. Unbooked&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;ÔºöÂú®ÈÄâÂÆöÊúüÈó¥ÂÜÖÔºåËøîÂõûÊúÄÊó©ÂÄºÔºàÂê´Êó†ÂÄºÊï∞ÊçÆÔºâ„ÄÇ&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Last incl. Unbooked&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;ÔºöÂú®ÈÄâÂÆöÊúüÈó¥ÂÜÖÔºåËøîÂõûÊúÄÊñ∞ÂÄºÔºàÂê´Êó†ÂÄºÊï∞ÊçÆÔºâ„ÄÇ&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Average incl. Unbooked&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;ÔºöÂú®ÈÄâÂÆöÊúüÈó¥ÂÜÖÔºåËøîÂõûÊâÄÊúâËÅöÂêàÂÄºÁöÑÂπ≥ÂùáÔºàÂê´Êó†ÂÄºÊï∞ÊçÆÔºâ„ÄÇ&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; 3.Êï∞ÊçÆÂØºÂá∫&lt;/SPAN&gt;&lt;SPAN&gt;API &lt;/SPAN&gt;&lt;SPAN&gt;Êâ©Â±ïÔºöÊñ∞Â¢û ‚Äú&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;FactDataAggregation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‚Äù Á´ØÁÇπÔºåÊîØÊåÅÂ∞Ü‰∫ãÂÆûÊï∞ÊçÆÁöÑ‚ÄúËÅöÂêàÂ¢ûÈáè‚ÄùÂØºÂá∫ÔºõÂª∫Ê®°ËÄÖ‰πüÂèØÂú®Ê®°ÂûãÁöÑ&lt;/SPAN&gt;&lt;SPAN&gt; API Subscriptions &lt;/SPAN&gt;&lt;SPAN&gt;Ê†áÁ≠æÈ°µ‰∏≠Ôºå‰ΩøÁî®ÂÖ®Êñ∞ÁöÑ ‚Äú&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Fact Data Delta Aggregation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‚Äù ÂÆû‰ΩìÈõÜ„ÄÇ&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Â¶ÇÊúâ‰ªª‰ΩïÁñëÈóÆÔºåÊ¨¢ËøéÂú®‰∏ãÊñπÁïôË®ÄÔºåÊàñÂâçÂæÄ&lt;A href="https://pages.community.sap.com/topics/cloud-analytics?ct=qa&amp;amp;lng=en&amp;amp;tab=content" target="_self" rel="noopener noreferrer"&gt;SACÈóÆÁ≠îËÆ∫Âùõ&lt;/A&gt;ÂèëÂ∏ñÊèêÈóÆ„ÄÇ&lt;/P&gt;&lt;P&gt;ÊÉ≥Ëøõ‰∏ÄÊ≠•‰∫ÜËß£ FastTrack ‰∏éÂ≠£Â∫¶ÂèëÂ∏ÉÂë®ÊúüÔºàQRCÔºâÁöÑËØ¶ÊÉÖÔºåËØ∑Êü•ÈòÖÁõ∏ÂÖ≥&lt;A href="https://userapps.support.sap.com/sap/support/knowledge/E/2728183" target="_self" rel="noopener noreferrer"&gt; SAP Áü•ËØÜÂ∫ìÊñáÁ´†&lt;/A&gt;„ÄÇ&lt;/P&gt;&lt;P&gt;Êõ¥Â§ö‰∫ßÂìÅËµÑËÆØ„ÄÅÊúÄ‰Ω≥ÂÆûË∑µ‰∏éÁ§æÂå∫ËµÑÊ∫êÔºåËØ∑ËÆøÈóÆ&lt;A href="https://pages.community.sap.com/topics/cloud-analytics?ct=qa&amp;amp;lng=en&amp;amp;tab=content" target="_self" rel="noopener noreferrer"&gt;SACÁ§æÂå∫È°µÈù¢&lt;/A&gt;„ÄÇ&lt;/P&gt;&lt;P&gt;Â¶ÇÈúÄÊü•Áúã 2025 Âπ¥ QRC ÂêÑÁßüÊà∑ÁöÑÂÖ∑‰ΩìÊõ¥Êñ∞Êó•ÊúüÔºåÂèØÂèÇËÄÉ„Ää&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-analytics-cloud-tenants-on-quarterly-release-cycle-qrc-updates-in-2025/ba-p/14000629" target="_self"&gt;SAP Analytics Cloud Â≠£Â∫¶ÂèëÂ∏ÉÂë®ÊúüÔºàQRCÔºâ2025 ÁßüÊà∑Êõ¥Êñ∞Êó∂Èó¥Ë°®&lt;/A&gt;„Äã„ÄÇ&lt;/P&gt;&lt;P&gt;ÊÉ≥ÊèêÂâç‰∫ÜËß£Âç≥Â∞ÜÊé®Âá∫ÁöÑÊñ∞ÂäüËÉΩÔºåÊ¨¢ËøéÊµèËßà &lt;A href="https://roadmaps.sap.com/board?PRODUCT=67838200100800006884&amp;amp;amp;range=CURRENT-LAST&amp;amp;range=CURRENT-LAST#Q3%202025" target="_self" rel="noopener noreferrer"&gt;SAP Road Map Explorer&lt;/A&gt;„ÄÇ&lt;/P&gt;&lt;P&gt;ÊÑüË∞¢ÈòÖËØªÔºÅ&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;ÂéüÊñá‰ΩúËÄÖÔºöAmanda&lt;/P&gt;&lt;P&gt;ÂéüÊñáÈìæÊé•Ôºö&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-analytics-cloud-modeling-extensions-amp-integration-qrc3/ba-p/14130035" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-analytics-cloud-modeling-extensions-amp-integration-qrc3/ba-p/14130035&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-%E5%88%86%E6%9E%90%E4%BA%91%E5%BB%BA%E6%A8%A1%E6%89%A9%E5%B1%95%E4%B8%8E%E9%9B%86%E6%88%90-2025-qrc3-%E7%89%88%E6%9C%AC%E6%96%B0%E5%8A%9F%E8%83%BD%E9%80%9F%E8%A7%88/ba-p/14174458"/>
    <published>2025-08-07T12:09:01.736000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/from-cloud-foundry-to-cloud-run-the-journey-of-integrating-sap-btp-with/ba-p/14158085</id>
    <title>From Cloud Foundry to Cloud Run : The Journey of Integrating SAP BTP with Google Cloud Platform</title>
    <updated>2025-08-13T11:02:55.774000+02:00</updated>
    <author>
      <name>agin_augustine</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/802208</uri>
    </author>
    <content>&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;U&gt;&lt;FONT face="arial black,avant garde" color="#008000"&gt;&lt;STRONG&gt;&lt;EM&gt;Bridging the Clouds Series. Part 1&lt;/EM&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;When I set out to integrate an SAP Fiori App deployed on SAP BTP Cloud Foundry with a backend service on google cloud run, the goal was to securely connect the two platforms without relying on long-lived service account keys. The backend cloud run services- powered by Vertex AI , hosted our trained AI Models and prediction endpoints - making GCP the natural choice for its advanced AI capabilities. I've always believed in practical solutions over overly engineered ones, so my focus was on building a secure, scalable and maintainable integration that just works.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;To achieve this, I configured XSUAA for authentication in the Fiori app, set up a destination in SAP BTP to connect to SAP API Hub, and used the API Hub as a secure API Gateway to validate and forward requests. On the GCP side, I enabled Workload Identity Federation, allowing SAP to authenticate with GCP services without exposing credentials. This blog shares my journey, the architecture and the lessons learned while bridging SAP BTP and GCP using modern identity federation techniques.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;The Architecture: Bridging Two Worlds&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The first step was to visualize how the pieces would fit together. On one side, I had the SAP Fiori app running on Cloud Foundry in SAP BTP, authenticating via XSUAA. On the other hand, a Google Cloud Run service exposing AI Powered endpoints. SAP API Hub Proxy is created for the connecting between the Fiori app and the GCP cloud Run services. The proxy abstracts the connection&amp;nbsp; setup between Fiori app and the cloud run service.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;EM&gt;&lt;STRONG&gt;Process Flow Diagram&lt;/STRONG&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="xsuaa flow.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289800i969AAF39D8B5227C/image-size/large?v=v2&amp;amp;px=999" role="button" title="xsuaa flow.png" alt="xsuaa flow.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/EM&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The Flow diagram illustrates the flow:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;EM&gt;&lt;STRONG&gt;SAP Fiori App&amp;nbsp;‚Üí &lt;/STRONG&gt;&lt;/EM&gt;Authenticated via XSUAA&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;&lt;STRONG&gt;Destination in BTP&amp;nbsp;‚Üí &lt;/STRONG&gt;&lt;/EM&gt;Points to SAP API Hub&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;&lt;STRONG&gt;SAP API Hub&amp;nbsp;‚Üí&lt;/STRONG&gt;&lt;/EM&gt; Forwards requests to GCP&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;&lt;STRONG&gt;Google Cloud Run&amp;nbsp;‚Üí &lt;/STRONG&gt;&lt;/EM&gt;Hosts the Backend Service (AI -enabled)&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;&lt;STRONG&gt;Workload Identity Federation&amp;nbsp;‚Üí &lt;/STRONG&gt;&lt;/EM&gt;Authenticates SAP with GCP using OIDC&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Using this setup you can either hard-code the service account keys in SAP API Hub key value mapping or setup connectivity using identity federation.&lt;/P&gt;&lt;P&gt;(&lt;EM&gt;Ironically, my "Practical" solution at first was to use service account key and mark&amp;nbsp; it as a working model.&lt;/EM&gt;&lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;üòä&lt;/span&gt; )&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;EM&gt;&lt;STRONG&gt;The Implementation : Step by Step&lt;/STRONG&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;1. Setting up Fiori App &amp;amp; XSUAA Component&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;üõ†&lt;/span&gt;&lt;EM&gt;&lt;STRONG&gt;Ô∏è&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Well, I began building&amp;nbsp; the Fiori app, I knew it didn't need to be flashy -- just functional. The goal was to create a lightweight UI that could securely communicate with our backend AI services on Google cloud run.. SO, I fired up SAP Business Application Studio (BAS) , my go-to IDE for SAP Development and got to work.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;Fiori App Development&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;The app was a freestyle app with a list report and a details page with a pdf file viewer control -- no fancy charts or animations - just clean and simple. Once the UI was in place, I moved on to the real backbone of the app : authentication and routing.&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1864294203"&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;Configuring XSUAA and Routing&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="3"&gt;To secure the app, I created an xs-security.json file where I defined the roles and scopes. This will allow to control access at a granular level and ensure only authorized users could trigger backend calls (not just backend calls, even static page calls as well&lt;span class="lia-unicode-emoji" title=":handshake:"&gt;ü§ù&lt;/span&gt;) .&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="xssecurity.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289858i710632717EC5C92E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="xssecurity.png" alt="xssecurity.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;‚Äú&lt;FONT size="2"&gt;Defining roles and scopes in xs-security.json&lt;/FONT&gt;‚Äù&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;Next, I configured the xs-app.json to define the routes. This setup mapped frontend requests to the backend destination configured in SAP BTP. Nothing new in xs-app.json, &lt;STRONG&gt;&lt;EM&gt;authenticationtype&lt;/EM&gt;&lt;/STRONG&gt; set to xsuaa to enable xsuaa service to handle the authentication for my app. The destination property in the xs-app is set as the destination created in SAP BTP for my SAP API Hub Proxy.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="xsapp.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289860i2E71F01FB242E493/image-size/medium?v=v2&amp;amp;px=400" role="button" title="xsapp.png" alt="xsapp.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1667780698"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1471267193"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1274753688"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1078240183"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-881726678"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-685213173"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-488699668"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-292186163"&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;&amp;nbsp; &lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/H3&gt;&lt;H3 id="toc-hId-95672658"&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;SAP API Proxy Destination in SAP BTP&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="3"&gt;Once the routing was defined, the next step was to set up a destination in SAP BTP that could act as a connector to the SAP API Hub proxy,&amp;nbsp; which in turn securely forward requests to the google cloud run services. I created a destination in SAP BTP pointing it to the SAP API Hub Proxy Url. The destination was configured as shown below :&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="destination.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289864iE63B535C8A1795BC/image-size/large?v=v2&amp;amp;px=999" role="button" title="destination.png" alt="destination.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;This destination was then referenced in the xs-app.json route, allowing the Fiori app to securely communicate with the backend service without exposing any credentials.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;Deployment to Cloud Foundry&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;With everything wired up, I deployed the app to SAP BTP Cloud Foundry. Once deployed, the app was visible under HTML5 repository and was able to see the xsuaa service for the deployed app.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="html5 deployed app.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289901i6ADCF641A0EA77AC/image-size/large?v=v2&amp;amp;px=999" role="button" title="html5 deployed app.png" alt="html5 deployed app.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;FONT size="3"&gt;&amp;nbsp; &lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;The destination, htlm5 and xsuaa services were updated as well in instance section.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="services.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289902iF64FB2924319C884/image-size/large?v=v2&amp;amp;px=999" role="button" title="services.png" alt="services.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;&amp;nbsp; &lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;XSUAA:&amp;nbsp; Backbone of Authentication&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;If there is one component that truly held this integration together, it is XSUAA. while the app itself was lightweight and the backend powerful, the real connectivity happened in the API Proxy - where identity and trust were established.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;In my setup , Azure AD(now Entra ID) was the corporate identity provider. But instead of integrating it directly with the Fiori app, I configured XSUAA as the intermediary. This allowed me to leverage SAP BTP's native security model while still authenticating users against Entra ID.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;Once the JWT is issued by XSUAA ‚Äî after validating and re-signing the token received from Entra ID ‚Äî it becomes the key to accessing backend services. The&amp;nbsp; GCP backend service uses the&amp;nbsp;public key exposed by XSUAA&amp;nbsp;to validate the token‚Äôs signature, ensuring its authenticity. Once validated, the token is decoded and its claims are inspected ‚Äî particularly the scopes and roles ‚Äî to determine whether the user is authorized to access the requested data.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;&lt;FONT size="2"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="xsuaa public key.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289904i9C3F352EB8702E13/image-size/large?v=v2&amp;amp;px=999" role="button" title="xsuaa public key.png" alt="xsuaa public key.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;&amp;nbsp; &lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;Issues Faced During Implementation &lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;No integration story is complete without a few bumps along the way.&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;1. Role Collection Confusion&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;Even though I had defined roles in xs-security.json, users were getting unauthorized errors. Turns out, I had forgotten to assign the role collection to my user in the BTP cockpit.&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;2. Token Forwarding&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;Initially, the token from XSUAA wasn't being forwarded properly to the backend. I had to explicitly enable token forwarding in the route configuration and ensure in the destination property forwardAuthToken was set as true.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;2.&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Setting Up the SAP API Proxy&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;When it came to connecting SAP BTP to Google Cloud Run via the SAP API Hub, I explored two distinct paths - one familiar &lt;span class="lia-unicode-emoji" title=":winking_face:"&gt;üòâ&lt;/span&gt;, one modern. Each had its own story, its own lessons.&lt;/P&gt;&lt;H3 id="toc-hId--176072216"&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;Option 1: The ‚ÄúQuick and Dirty‚Äù Way ‚Äî Service Account Key File&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="3"&gt;Lets be honest - when you're racing against a deadline, the easiest path is often the one you've walked before. So my first attempt involved using a Google Cloud Service Account key file. I downloaded the JSON key, stored it securely (or so I thought), and configured the SAP API Hub to use it for authentication.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;It worked Instantly!!!.&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;The key file was a "long-lived" credential - and by long lived, I mean a generous 3 months of quietly sitting around, waiting to be leaked. It is static, sensitive and just enough to keep me on edge every time I pushed code.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;FONT size="3"&gt;Still, it was a good starting point - a proof of concept that validated the integration.&lt;/FONT&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;How I implemented this Approach ? &lt;span class="lia-unicode-emoji" title=":thinking_face:"&gt;ü§î&lt;/span&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Step 1 : Creating Key Value Maps in SAP API Hub&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;To avoid hardcoding sensitive values directly into the API Proxy, I used Key Value Maps (KVMs) - a secure way to store and retrieve configuration data within SAP API Hub.&lt;/P&gt;&lt;P&gt;I created 2 KVM's as shown below one encrypted and another one un-encrypted:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="key value map.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289916i6408256ED30F0786/image-size/large?v=v2&amp;amp;px=999" role="button" title="key value map.png" alt="key value map.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/EM&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The encrypted key value map contains client_id and private_key value from the service account key json file. The un-encrypted key value map contains the URL of the google cloud run service and the service account that is used for authentication.&lt;/P&gt;&lt;P&gt;Below is a sample service account key json file :&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="service account key.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289918iB5B6F17B40A87F18/image-size/large?v=v2&amp;amp;px=999" role="button" title="service account key.png" alt="service account key.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;EM&gt;&lt;STRONG&gt;&amp;nbsp; &lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Step 2 : Using KVM's in Proxy and triggering Cloud Run Service using Policies.&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The first thing I needed was a gatekeeper - a policy that would check whether the incoming request from the fiori app included a valid authorization header. if the token was missing or malformed , the proxy would reject the request immediately.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;No token? No entry. Simple as that&lt;span class="lia-unicode-emoji" title=":stop_sign:"&gt;üõë&lt;/span&gt; .&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Below is a sample SAP API Hub Policy Chart.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="sample policy.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289919i0F3145F0E261D18A/image-size/large?v=v2&amp;amp;px=999" role="button" title="sample policy.png" alt="sample policy.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/EM&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Looks Fancy right ?&lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;üòä&lt;/span&gt;. too many icons, policies, to be frank we don't need all. All it takes is just 4 to 5 policies.&lt;/P&gt;&lt;P&gt;Of course, if you're feeling adventurous - or just want to impress your future self - go ahead and include SAP's complete security template -- that's perfect for those who prefer their API's with a side of corporate elegance.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="security template.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291016i48A92650CCF45819/image-size/large?v=v2&amp;amp;px=999" role="button" title="security template.png" alt="security template.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Lets see those 4 to 5 Policies needed:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;EM&gt;&lt;STRONG&gt;Extract Key value Pairs for un encrypted values&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_0-1753202524925.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289921i997F22CC3877EF48/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_0-1753202524925.png" alt="us33061_0-1753202524925.png" /&gt;&lt;/span&gt;&amp;nbsp; &lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;2.&lt;/STRONG&gt;&lt;/EM&gt;&lt;EM&gt;&lt;STRONG&gt;&amp;nbsp;Extract Key value Pairs for encrypted values&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_1-1753202683336.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289926i726B1683ECB1EE0C/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_1-1753202683336.png" alt="us33061_1-1753202683336.png" /&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;B&lt;/EM&gt;y now, we have those key values in different variables that can be used across different policies using the request object.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Step 3: Generate a jwt using this service account key.&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Using a dedicated generateJWT policy for a service account key a jwt can be created as shown below.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_2-1753202966048.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289927iC25FEAE6849142C3/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_2-1753202966048.png" alt="us33061_2-1753202966048.png" /&gt;&lt;/span&gt;&amp;nbsp; &lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;S&lt;/STRONG&gt;&lt;/EM&gt;&lt;EM&gt;&lt;STRONG&gt;tep 4: Exchange jwt with google for access token&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Once the jwt is created, exchange it with google for a google access token to trigger a cloud run service as below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="access token request sa key.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291047iB7686B4176769C4F/image-size/large?v=v2&amp;amp;px=999" role="button" title="access token request sa key.png" alt="access token request sa key.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;EM&gt;&lt;STRONG&gt;&amp;nbsp; &lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Hint&lt;/STRONG&gt;&lt;/EM&gt; : you can create a request body directly in this policy or can have another assign message policy to draft a request payload as shown below :&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="access request body for sa jwt.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291050i188FB478A57B5F2C/image-size/large?v=v2&amp;amp;px=999" role="button" title="access request body for sa jwt.png" alt="access request body for sa jwt.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 5: &lt;STRONG&gt;&lt;EM&gt;Use the access token to trigger GCP Services.&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add the access token as a bearer token in request header and call the google cloud run as shown below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_6-1753203444578.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289933i628A2BF6065439E8/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_6-1753203444578.png" alt="us33061_6-1753203444578.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;As you can see the request is just modified by adding a header property and this request is moved to backend (GCP).&lt;/P&gt;&lt;P&gt;The access token received in step 4 can be extracted from response using extractvariables policy as shown below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_7-1753203585593.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289936iBA87EF7A2A676D2B/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_7-1753203585593.png" alt="us33061_7-1753203585593.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now, you may ask how the property that hold token values was identified and used in extractvariables policy. Here comes Postman .&lt;/P&gt;&lt;H3 id="toc-hId--372585721"&gt;&lt;FONT size="4" color="#000000"&gt;Testing with Postman&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;Before wiring everything into the API Proxy, I needed to be sure I was extracting the right value from Google's token endpoint - specifically , the access token. I knew the response would be in JSON, but I wasn't sure what the exact structure looked like.&lt;/P&gt;&lt;P&gt;So, I did what any developer would do : I fired up &lt;STRONG&gt;Postman&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;I manually crafted the JWT, set the headers and made a POST request to Google's OAuth 2.0 token endpoint. Within seconds , Postman returned a clean JSON response. And there it was - the golden key:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_6-1753277371224.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290383i377778EA16E366AE/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_6-1753277371224.png" alt="us33061_6-1753277371224.png" /&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Op&lt;/STRONG&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="3"&gt;&lt;STRONG&gt;t&lt;/STRONG&gt;ion 2: The ‚ÄúRight‚Äù Way ‚Äî Workload Identity Federation&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;The right way of authentication using short lived tokens using workload identity federation.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;How I implemented this Approach ?&lt;span class="lia-unicode-emoji" title=":thinking_face:"&gt;ü§î&lt;/span&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;It all began with a request from SAP BTP. Nestled inside was an &lt;STRONG&gt;authorization token&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;, proudly bearing the "Bearer" prefix. But before this token could be of any use, it had to shed its formal attire. So, we stripped away the "Bearer" scheme, revealing the raw token underneath - ready for its next challenge. So, a javascript policy was crafted- small but mighty - to extract the raw token by stripping away the "Bearer" scheme as shown below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_0-1753276088927.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290362i40817298AEC8E548/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_0-1753276088927.png" alt="us33061_0-1753276088927.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Under scripts i created a javascript script to do the stripping!.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_1-1753276215882.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290369i840A1C7AFA3C956A/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_1-1753276215882.png" alt="us33061_1-1753276215882.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;With this token in hand,i approached the google security token service (STS) - a token from a trusted identity provider. And Google , ever the caution gatekeeper, verified the token's origin and issued a shiny new federated token - one step closer to the goal.&lt;/P&gt;&lt;P&gt;lets see how the sts request payload looks like :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_2-1753276528550.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290371iE939CC0E9B67AE01/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_2-1753276528550.png" alt="us33061_2-1753276528550.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In the payload, we pass the audience the full path of the workload identity provider created in GCP for SAP BTP. best practice is to create individual provider for each IDP and if these IDP's are identical or similar they can grouped under a single Identity Pool. In subject_token we pass the stripped authorization token from BTP.&lt;/P&gt;&lt;P&gt;Next, lets see the actual request call :&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_3-1753276744520.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290374i9D763299890C64D2/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_3-1753276744520.png" alt="us33061_3-1753276744520.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now, lets extract the federated token from the response :&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_4-1753276819199.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290375i5A7882C23F18C09E/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_4-1753276819199.png" alt="us33061_4-1753276819199.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;How did I know the token is available in access_token property? Its the Postman.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_5-1753277192196.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290381i6217D12CBB390B43/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_5-1753277192196.png" alt="us33061_5-1753277192196.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;But the journey wasn't over.&lt;/P&gt;&lt;P&gt;Next, we took this federated token to the IAM Credentials API, requesting an access token for a specific service account - one that had the permissions to invoke a cloud run service and for which mapping is done in workload identity federation. Google, satisfied with the federated token's lineage, handed over the access token .&lt;/P&gt;&lt;P&gt;Before we hit the IAM API, lets prepare the request payload.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_7-1753277683753.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290385iC80EA8985B1246E7/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_7-1753277683753.png" alt="us33061_7-1753277683753.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The audience is your cloud run url . its can be any other services/ resources that supports workload identity federation.&lt;/P&gt;&lt;P&gt;Now, lets hit the IAM API for the token to call our cloud run service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_8-1753277822521.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290389i7DF4410A7604889F/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_8-1753277822521.png" alt="us33061_8-1753277822521.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now armed with this access token, we returned to the original request from BTP. We carefully inserted the token into the Authorization header Then we sent the request onward to Google Cloud.&lt;/P&gt;&lt;P&gt;Lets see how to extract the token from IAM API response and modify the original btp request with new token.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_9-1753278326204.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290394iA2FE1BEBFF88DB7B/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_9-1753278326204.png" alt="us33061_9-1753278326204.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;How did I know about the property "token"? Postman &lt;span class="lia-unicode-emoji" title=":winking_face:"&gt;üòâ&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_10-1753278466398.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290396i70637BBD3AD9951E/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_10-1753278466398.png" alt="us33061_10-1753278466398.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now, Modifying the BTP request:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_11-1753278556327.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290397i3E280B2953D97F15/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_11-1753278556327.png" alt="us33061_11-1753278556327.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;And this time? No Rejections. No VPC walls. Just a smooth, secure handshake. Google Cloud verified the access token, recognized the service account, and welcomed the request with open arms.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Disclaimer: Choosing the Right IAM Credentials API Endpoint&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;When exchanging the federated token for an access token, Google provides 2 similar-looking endpoints:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;generateAccessToken&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;generateIdToken&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;generateAccessToken&lt;/STRONG&gt;&lt;/EM&gt; is typically used when you're operating within Google Cloud and need to impersonate a service account to access GCP resources like Cloud Run, Cloud Storage, etc.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;generateIdToken&lt;/STRONG&gt;&lt;/EM&gt; , on the other hand, is designed for authenticating external workloads .&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Issues Faced &amp;amp; Lessons Learned : The Curious Case of the Missing IP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Just when everything seemed to be working smoothly - Postman tests were green, the SAP API Hub was running smooth and the federated token request was crafted with care &lt;EM&gt;- bam !&lt;/EM&gt; The call to Google Cloud's Security Token Service (STS) hit a wall. A very well-guarded, VPC - controlled wall.&lt;/P&gt;&lt;P&gt;The error? A cold, unwelcoming rejection from Google Cloud. The reason? The egress IP address of the SAP API Hub proxy wasn't whitelisted in the VPC service Controls. &lt;EM&gt;Classic! .&amp;nbsp;&lt;/EM&gt;Now, If you're working in a corporate network, this is the kind of delightful surprise you should &lt;EM&gt;absolutely&lt;/EM&gt; expect.&amp;nbsp;&lt;/P&gt;&lt;P&gt;How did I got this details? Its my favourite Google VPC Logs &lt;span class="lia-unicode-emoji" title=":smiling_face_with_sunglasses:"&gt;üòé&lt;/span&gt;. See below for the log entry telling me that I violated a policy because my request was originated from this IP address.&amp;nbsp; So I whitelisted the cadr range in VPC Control firewall rules.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="us33061_0-1753365994490.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291010i48B74BA97D6357A6/image-size/large?v=v2&amp;amp;px=999" role="button" title="us33061_0-1753365994490.png" alt="us33061_0-1753365994490.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thankfully, SAP provides documentation that lists the egress IP address used by the SAP API Hub. Once we tracked it down and added the IP to the VPC allowlist, the token request sailed through like it was always meant to.&lt;/P&gt;&lt;P&gt;Reference : &lt;A href="https://help.sap.com/docs/sap-api-management/sap-api-management-for-neo-environment/region-specific-ip-addresses-available-for-api-management-neo-environment?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/sap-api-management/sap-api-management-for-neo-environment/region-specific-ip-addresses-available-for-api-management-neo-environment?locale=en-US&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Lesson Learned:&amp;nbsp;&lt;/STRONG&gt;When integrating across cloud platforms in enterprise environments, always account for network-level controls.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;The Final Piece of the Puzzle&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;- Setting up Workload Identity Federation&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;Setting up workload Identity federation in Google Cloud is like preparing a backstage pass for your SAP BTP app to access GCP services - securely and with full control.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;First, we created an identity pool and an identity provider in GCP, configuring it to trust tokens issued by SAP BTP's XSUAA. Then came the key part : attribute mapping. We mapped attribute.aud to assertion.aud, which corresponds to the name of the fiori app deployed in BTP - the same app for which XSUAA issued the JWT. This mapping is what allows google to recognize&amp;nbsp; and trust the incoming identity.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;To allow the service account to be impersonated, we granted it the necessary roles and bound it to identities matching the mapped attributes. Now, the BTP token could be exchanged for a federated token, and then for an access token tied to the service account.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="worker pool.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290480iF68115611715BCC2/image-size/large?v=v2&amp;amp;px=999" role="button" title="worker pool.png" alt="worker pool.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;FONT size="3"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="workload identity mapping.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290479i0C1DD03CBCFE09F8/image-size/large?v=v2&amp;amp;px=999" role="button" title="workload identity mapping.png" alt="workload identity mapping.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;&amp;nbsp; &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Important&lt;/STRONG&gt;&lt;/FONT&gt;: &lt;FONT face="comic sans ms,sans-serif"&gt;The service account you intend to impersonate must have the roles/iam.workloadIdentityUser role granted on the identity pool. Without this, Google Cloud will not allow the federated identity to impersonate the service account, and the token exchange will fail.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;But there was one more twist.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;Since the Google access token had to go into the Authorization header to authenticate the request to cloud run, the original jwt from btp would be overwritten. And that JWT still had value - it carried user identity and roles needed for application-level checks.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;So, using a policy in SAP API Hub, we copied the original JWT into a custom header( say,x-btp-user-token). This way , the cloud run service could still validate the logged-in user and enforce role-based access - without losing the secure handshake with google.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;A little orchestration, a little header juggling - and just like that, I had a secure federated, and role-aware integration .&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;Final Thoughts&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;And that's a wrap! From tokens to trust, we've walked through the secure path of integrating SAP BTP with Google Cloud using workload identity federation.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;Tried a different approach? Faced a twist I didn't covered? Drop it in the comments - lets learn from each other and keep the collaboration going.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;Cheers!!!&lt;/FONT&gt;&lt;FONT size="3"&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/from-cloud-foundry-to-cloud-run-the-journey-of-integrating-sap-btp-with/ba-p/14158085"/>
    <published>2025-08-13T11:02:55.774000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/sap-api-management-apikey-and-response-caching/ba-p/14184042</id>
    <title>SAP API Management - APIKey and Response Caching</title>
    <updated>2025-08-19T16:10:56.167000+02:00</updated>
    <author>
      <name>DenizZilyas</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/171723</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is Caching ?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In API Management, response caching allows us to deliver much faster responses to users by storing the results of repeated requests in the cache. This way, the backend doesn‚Äôt need to be invoked for every request, reducing unnecessary load on the system. As a result, performance increases, latency decreases, and backend resources are utilized more efficiently.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Scenario :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_0-1755608210130.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302425i28C9830A87701CD9/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_0-1755608210130.png" alt="DenizZilyas_0-1755608210130.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Caching doesn‚Äôt always mean storing the entire dataset. With query parameters, we can cache only the specific results that users request. In this scenario, the user makes an API call by defining certain conditions through query parameters, and the system responds faster by serving the cached result that matches those conditions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create API Proxy&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Configure --&amp;gt; APIs --&amp;gt; API Proxies --&amp;gt; Create&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_2-1755608672011.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302437i0D09AF7257E14FDD/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_2-1755608672011.png" alt="DenizZilyas_2-1755608672011.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Note :&amp;nbsp;The first step is usually to create an API provider; however, in my proxy I will not be using a provider. Instead, I will connect to the backend system directly via its URL.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Create Product&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Engage--&amp;gt; Products --&amp;gt; Create&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_3-1755608923591.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302439i3AEAC558321626B5/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_3-1755608923591.png" alt="DenizZilyas_3-1755608923591.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It‚Äôs not mandatory to create a product for every process; however, since we want the user to trigger our API with an API key, we need to create a product.&lt;/P&gt;&lt;P&gt;If we want, we can set quotas for our APIs. This is something we can define ourselves. For example, in this case I am adding a rule that allows up to 100 requests to this API within 10 months.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Create Application&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I am connecting to the Developer Hub from the Integration Suite screen. And I can see the products I created earlier.&lt;/P&gt;&lt;P&gt;Workspace --&amp;gt; Create&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_6-1755609276668.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302448iE5017E623C092E0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_6-1755609276668.png" alt="DenizZilyas_6-1755609276668.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_8-1755609490844.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302454i2294F26303C1C398/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_8-1755609490844.png" alt="DenizZilyas_8-1755609490844.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In this way, we have created an application key linked to this product.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: Policies&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We create API proxies to manage aspects such as security, performance, and routing. These controls are implemented through policies.&lt;/P&gt;&lt;P&gt;In this scenario, I implemented the user‚Äôs access to the API via an API key, as well as the caching process, through policies.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_10-1755609688263.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302458iE1472BD7CCC2F5B2/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_10-1755609688263.png" alt="DenizZilyas_10-1755609688263.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;VerifyAPIKey:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;DIV&gt;With this policy, we define the rule that allows access only if the user includes the API key created in the Developer Hub within the request header.&lt;/DIV&gt;&lt;DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_13-1755610108241.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302465iB856413CD0C65BAB/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_13-1755610108241.png" alt="DenizZilyas_13-1755610108241.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;lt;VerifyAPIKey async='true' continueOnError='false' enabled='true'&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;xmlns='&lt;A href="http://www.sap.com/apimgmt" target="_blank" rel="noopener noreferrer"&gt;http://www.sap.com/apimgmt&lt;/A&gt;'&amp;gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;&amp;lt;APIKey ref='request.header.x-api-key'/&amp;gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;lt;/VerifyAPIKey&amp;gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;Caching:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I don‚Äôt necessarily have to specify a query, but I used it here to make the scenario more specific. Users may not always send requests without queries, and this needs to be taken into account. Therefore, you can use any query parameters you wish to include.&lt;/P&gt;&lt;P&gt;I set the caching duration to 3600 seconds.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_12-1755610087799.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302463i1748ED6C88B64EF1/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_12-1755610087799.png" alt="DenizZilyas_12-1755610087799.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;lt;ResponseCache async="false" continueOnError="false" enabled="true" xmlns="&lt;A href="http://www.sap.com/apimgmt" target="_blank" rel="noopener noreferrer"&gt;http://www.sap.com/apimgmt&lt;/A&gt;"&amp;gt;&lt;BR /&gt;&amp;lt;CacheKey&amp;gt;&lt;BR /&gt;&amp;lt;KeyFragment ref="request.queryparam.$filter"/&amp;gt;&lt;BR /&gt;&amp;lt;KeyFragment ref="request.queryparam.$select"/&amp;gt;&lt;BR /&gt;&amp;lt;KeyFragment ref="request.queryparam.$top"/&amp;gt;&lt;BR /&gt;&amp;lt;KeyFragment ref="request.queryparam.$expand"/&amp;gt;&lt;BR /&gt;&amp;lt;KeyFragment ref="request.queryparam.$skip"/&amp;gt;&lt;BR /&gt;&amp;lt;KeyFragment ref="request.path"/&amp;gt;&lt;BR /&gt;&amp;lt;/CacheKey&amp;gt;&lt;BR /&gt;&amp;lt;Scope&amp;gt;Exclusive&amp;lt;/Scope&amp;gt;&lt;BR /&gt;&amp;lt;ExpirySettings&amp;gt;&lt;BR /&gt;&amp;lt;TimeoutInSec&amp;gt;3600&amp;lt;/TimeoutInSec&amp;gt;&lt;BR /&gt;&amp;lt;/ExpirySettings&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;lt;/ResponseCache&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;So how can I tell whether the data is coming from the cache or from the backend system? I previously mentioned that the purpose of caching is to return responses faster. When you trigger the API from Postman or any other system, you can check the response time. We will test this in the next step. Additionally, you can add a JavaScript code to your policy. If the timestamp does not change, you can conclude that the data was served from the cache.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_0-1755612448238.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302493i76FA3788FD4019BA/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_0-1755612448238.png" alt="DenizZilyas_0-1755612448238.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;var response = context.getVariable("response.content");&lt;/P&gt;&lt;P&gt;var serverTime = new Date().toISOString();&lt;/P&gt;&lt;P&gt;var updatedResponse = serverTime+response&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;context.setVariable("response.content", updatedResponse);&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Note: Since the other policies are related to the authentication of the service I want to access, I will not cover them here in order to stay on topic and avoid confusion. I will write a separate blog post about authentication policies in API Management.&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;For that reason, I will not go into the get token and set token steps.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5 : Testing&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As shown in the two test cases below, I can retrieve data from the API using the API key parameter sent in the request header. The first example is the initial call to the backend system, with a response time of 4.09 seconds. The second example returns the same query from the cache rather than the backend, with a response time of 431 ms.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_14-1755610853782.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302471i39712573B671B078/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_14-1755610853782.png" alt="DenizZilyas_14-1755610853782.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_0-1755612828761.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302495iCC29B784409629C8/image-size/large?v=v2&amp;amp;px=999" role="button" title="DenizZilyas_0-1755612828761.png" alt="DenizZilyas_0-1755612828761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Summary :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Response caching delivers faster response times‚Äîimproving user experience, especially for mobile users‚Äîwhile lowering backend load on SAP Graph or other backend systems. It also drives cost savings by avoiding redundant calls to pay-per-use services, increases API-quota efficiency by preventing rate-limit hits from repeated queries, and improves stability by allowing responses to continue even during backend outages.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DenizZilyas_17-1755611137278.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302474i381E17641B1825EA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DenizZilyas_17-1755611137278.png" alt="DenizZilyas_17-1755611137278.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Thank you.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Deniz.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/sap-api-management-apikey-and-response-caching/ba-p/14184042"/>
    <published>2025-08-19T16:10:56.167000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/unravelling-the-technical-user-propagation-scenarios-in-sap-integration/ba-p/14182016</id>
    <title>Unravelling the ‚Äòtechnical user‚Äô propagation scenarios in SAP Integration Suite</title>
    <updated>2025-08-25T05:55:48.613000+02:00</updated>
    <author>
      <name>vinayak_adkoli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/216068</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1737803085"&gt;1. Introduction:&lt;/H2&gt;&lt;P&gt;When it comes to securely connecting to SAP on-premise systems, &lt;STRONG&gt;API Management&lt;/STRONG&gt; and &lt;STRONG&gt;Cloud Integration&lt;/STRONG&gt; stand as two key pillars of the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;. While API Management is often aligned with &lt;STRONG&gt;user-centric&lt;/STRONG&gt; flows ‚Äî where the focus is on authenticating and authorizing the end user ‚Äî Cloud Integration has traditionally dealt with &lt;STRONG&gt;system-to-system&lt;/STRONG&gt; communication, which involves backend calls without direct end-user context.&lt;/P&gt;&lt;P&gt;Having said that, across both these capabilities, the ability to connect to backend systems using a &lt;STRONG&gt;fixed technical credential&lt;/STRONG&gt; is a widely desired&amp;nbsp;&lt;STRONG&gt;&lt;FONT color="#008000"&gt;*&lt;/FONT&gt;&lt;/STRONG&gt; approach. However, in many SAP Cloud Integration (CPI) scenarios, the term &lt;STRONG&gt;technical user&lt;/STRONG&gt; is often equated with ‚ÄúBasic Authentication‚Äù ‚Äî a method increasingly viewed by organizations as less secure. A stronger and more trusted approach for connecting applications and services running in SAP BTP to SAP on-premise systems is &lt;STRONG&gt;principal propagation&lt;/STRONG&gt;, where the SAP Cloud Connector generates a short-lived X.509 certificate containing a &lt;STRONG&gt;Common Name (CN)&lt;/STRONG&gt; dynamically retrieved from the calling system.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;üí°&lt;/span&gt;&amp;nbsp;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;*&lt;/STRONG&gt; &lt;/FONT&gt;&lt;EM&gt;CPI customers on the BTP &lt;STRONG&gt;Neo&lt;/STRONG&gt; environment are familiar with a feature called &lt;STRONG&gt;certificate-to-user mapping&lt;/STRONG&gt;, which allows an incoming client certificate to be directly mapped to a backend user identity. This made technical user propagation both straightforward and widely adopted.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;In &lt;STRONG&gt;Cloud Foundry&lt;/STRONG&gt;, the incoming certificate is typically mapped to an access token associated with the&amp;nbsp;&lt;STRONG&gt;service key credential&amp;nbsp;&lt;/STRONG&gt;rather than being directly mapped to a backend user's security context, as in Neo. As a result, customers often struggle to replicate their established Neo patterns, especially for &lt;STRONG&gt;fixed technical identities&lt;/STRONG&gt; ‚Äî this is the exact problem that has now been solved!&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;As a side note, if you‚Äôd like to dive deeper into certificate-to-user mapping and certificate-based authentication in SAP Cloud Integration, you can refer to Mandy Krimmel‚Äôs insightful blog posts covering both &lt;A href="https://community.sap.com/t5/integration-blog-posts/cloud-integration-how-to-setup-secure-http-inbound-connection-with-client/bc-p/13336246" target="_self"&gt;Neo&lt;/A&gt; and &lt;A href="https://community.sap.com/t5/integration-blog-posts/cloud-integration-on-cf-how-to-setup-secure-http-inbound-connection-with/ba-p/13393777" target="_self"&gt;Cloud Foundry&lt;/A&gt;.&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Here's where things start to get interesting. With &lt;STRONG&gt;Cloud Connector version 2.15&lt;/STRONG&gt;, SAP introduced the ability to perform &lt;STRONG&gt;technical user propagation&lt;/STRONG&gt; using the &lt;U&gt;SAP-Connectivity-Technical-Authentication&lt;/U&gt; HTTP header. This allows a cloud application to send a signed JWT representing the fixed technical identity, which the Cloud Connector uses to generate a short-lived X.509 certificate ‚Äî all without relying on static passwords. You can read more about this feature in the official SAP Help Portal &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/authentication-to-on-premise-system" target="_blank" rel="noopener noreferrer"&gt;documentation&lt;/A&gt; and the SAP Community &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/technical-user-propagation-sap-btp-to-s4-on-premise/bc-p/13555634" target="_blank"&gt;blog post&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Traditionally, principal propagation has been used to propagate an &lt;STRONG&gt;end-user identity&lt;/STRONG&gt;, but here‚Äôs the beauty: it can just as easily propagate a &lt;STRONG&gt;fixed (technical) identity&lt;/STRONG&gt; as a short-lived X.509 certificate. This means you can retain all the advantages of principal propagation ‚Äî dynamic credentials, reduced exposure, and assured identity mapping ‚Äî without falling back to basic authentication.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="a35bsx.jpg" style="width: 500px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301589i40213A0D9133A351/image-size/large?v=v2&amp;amp;px=999" role="button" title="a35bsx.jpg" alt="a35bsx.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This blog post, co-authored by &lt;U&gt;Vinayak Adkoli&lt;/U&gt; and &lt;U&gt;Sunny Kapoor,&lt;/U&gt; focuses on &lt;STRONG&gt;technical user propagation&lt;/STRONG&gt; within &lt;STRONG&gt;Cloud Integration&lt;/STRONG&gt;, exploring how such credentials can be securely propagated across three common Receiver Adapters ‚Äî &lt;STRONG&gt;SOAP&lt;/STRONG&gt;, &lt;STRONG&gt;HTTP&lt;/STRONG&gt;, and &lt;STRONG&gt;OData V2&lt;/STRONG&gt;. In a follow-up post, we will examine similar patterns from the perspective of &lt;STRONG&gt;API Management‚Äôs OnPremise connectivity&lt;/STRONG&gt; flows.&lt;/P&gt;&lt;H2 id="toc-hId-1541289580"&gt;2. Cloud Connector and backend prerequisites to support Technical user propagation&lt;/H2&gt;&lt;P&gt;Before you can configure an IFlow in &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; to propagate a fixed technical user via a short-lived X.509 certificate, both the &lt;STRONG&gt;SAP Cloud Connector&lt;/STRONG&gt; and the &lt;STRONG&gt;backend system&lt;/STRONG&gt; must be prepared to handle this scenario.&lt;/P&gt;&lt;P&gt;This section outlines the key steps and underlying rationale, but it is not a complete how-to guide. For detailed, step-by-step instructions, please refer to the resources listed below.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Product &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/configuring-principal-propagation" target="_self" rel="noopener noreferrer"&gt;documentation&lt;/A&gt; - always up-to-date with the latest enhancements.&lt;/LI&gt;&lt;LI&gt;Michael's &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-guide-principal-propagation-in-an-https-scenario/ba-p/13325048" target="_self"&gt;blog&lt;/A&gt;. A little old, but still relevant.&lt;/LI&gt;&lt;LI&gt;Martin Raepple's &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/principal-propagation-in-a-multi-cloud-solution-between-microsoft-azure-and/ba-p/13491407" target="_self"&gt;blog&lt;/A&gt;&amp;nbsp;is an excellent resource for a step-by-step procedure.&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":loudspeaker:"&gt;üì¢&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;EM&gt;(tip) Because the screenshots are embedded within a table, they may appear small even when opened in a new window. To view them in a larger size, simply change the image URL from '.../medium' to '.../large'&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="10.239885427855357%"&gt;&lt;H4 id="toc-hId-1602941513"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="49.01539563193699%"&gt;&lt;H4 id="toc-hId-1406428008"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="40.74471894020766%"&gt;&lt;H4 id="toc-hId-1209914503"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855357%"&gt;1.&lt;/TD&gt;&lt;TD width="49.01539563193699%"&gt;&lt;P&gt;Let's begin the setup by reviewing the SAP Cloud Connector Configuration page.&lt;/P&gt;&lt;P&gt;In the Configuration -&amp;gt; On-Premise section of the Cloud Connector, make sure you have a &lt;STRONG&gt;System Certificate&lt;/STRONG&gt; populated with an intermediate CA certificate.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="40.74471894020766%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 4.28.06‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301592i5848F4C1D65EE603/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 4.28.06‚ÄØPM.png" alt="Screenshot 2025-08-15 at 4.28.06‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855357%"&gt;2.&lt;/TD&gt;&lt;TD width="49.01539563193699%"&gt;&lt;P&gt;Likewise,&lt;SPAN&gt;&amp;nbsp;the same certificate is also included in the&amp;nbsp;&lt;STRONG&gt;CA Certificate&lt;/STRONG&gt;&amp;nbsp;section&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;IMP: Note that within the &lt;STRONG&gt;Principal Propagation&lt;/STRONG&gt; section, the subject pattern has been specified as &lt;U&gt;CN={$name}&lt;/U&gt;.&amp;nbsp;&lt;/P&gt;&lt;P&gt;It is also possible to create multiple rules that resolve based on a condition. For example, if the system sees an 'email' claim in the token, it will use the email attribute to construct the subject pattern.&lt;/P&gt;&lt;P&gt;You can read more about the order of resolution of subject patterns &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/configure-subject-patterns-for-principal-propagation" target="_self" rel="noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="40.74471894020766%"&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 4.32.59‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301593iFA96E392BC38A36D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 4.32.59‚ÄØPM.png" alt="Screenshot 2025-08-15 at 4.32.59‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-22 at 9.03.12‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304318i1DE6CECDF444A8BB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-22 at 9.03.12‚ÄØPM.png" alt="Screenshot 2025-08-22 at 9.03.12‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;3.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;In the &lt;STRONG&gt;Access Control&lt;/STRONG&gt; section of the Connector settings, be sure to set the Protocol to ‚ÄòHTTPS‚Äô and the Principal Type to ‚ÄòX.509‚Äô.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;üí°&lt;/span&gt;Note that I've unchecked the option to use '&lt;U&gt;System Certificate for Logon&lt;/U&gt;'. This is a nuance that we will call out separately in section 6&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 4.34.00‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302093iCE58CD9F8D8F9088/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 4.34.00‚ÄØPM.png" alt="Screenshot 2025-08-15 at 4.34.00‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;Let's look at our &lt;STRONG&gt;backend&lt;/STRONG&gt; configurations now. Txn &lt;U&gt;STRUST&lt;/U&gt; leads us to the Trust Manager. I have the CA certificate and the Root Certificate that signed this CA certificate in the Trust Store&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 4.42.54‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301594iBBEA818C78CE1787/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 4.42.54‚ÄØPM.png" alt="Screenshot 2025-08-15 at 4.42.54‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;Note that there are 3 key configuration parameters defined in Txn &lt;U&gt;RZ10&lt;/U&gt;. The ICM node will need to be restarted after this.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 4.36.26‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301596i36C2A586C5682CFD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 4.36.26‚ÄØPM.png" alt="Screenshot 2025-08-15 at 4.36.26‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;This is one of the most important steps. Transaction &lt;U&gt;&lt;EM&gt;CERTRULE&lt;/EM&gt;&lt;/U&gt; opens the rule-based certificate mapping screen. If you've previously set up principal propagation, you likely already have a rule using the '&lt;STRONG&gt;CN=*&lt;/STRONG&gt;' filter, where the wildcard typically resolves to an email address or user name. This approach works well for user-based principal propagation. However, since our objective here is to propagate a technical user, we'll instead make use of the Explicit Mapping tab.&amp;nbsp;We‚Äôll go into more detail on this in section 5.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;üí°&lt;/span&gt;You will notice that I‚Äôve taken a slightly different approach here compared to Munish Suri‚Äôs helpful &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/technical-user-propagation-sap-btp-to-s4-on-premise/ba-p/13555630" target="_self"&gt;blog&lt;/A&gt;, where he creates a &lt;STRONG&gt;service user&lt;/STRONG&gt; in transaction SU01. The reason that step won‚Äôt work in our case is that the ‚Äòalias‚Äô field is limited to 40 characters, while the client ID from BTP XSUAA exceeds that limit.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 4.37.06‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301597iB5507D995059914E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 4.37.06‚ÄØPM.png" alt="Screenshot 2025-08-15 at 4.37.06‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 11.21.03‚ÄØAM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302649i758FD4E639DB6E74/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-19 at 11.21.03‚ÄØAM.png" alt="Screenshot 2025-08-19 at 11.21.03‚ÄØAM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-755235560"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-558722055"&gt;3. SAP Integration Suite / Cloud Integration settings to support Technical user propagation&lt;/H2&gt;&lt;P&gt;The table below highlights the key settings we‚Äôll be using on the SAP Integration Suite side.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="10.13247404224848%"&gt;&lt;H4 id="toc-hId-620373988"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;H4 id="toc-hId-423860483"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;H4 id="toc-hId-227346978"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.13247404224848%"&gt;1.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;P&gt;&lt;SPAN&gt;Since we‚Äôve touched on the ‚Äò&lt;STRONG&gt;&lt;EM&gt;certificate-to-user&lt;/EM&gt;&lt;/STRONG&gt;‚Äô mapping functionality in Neo, let‚Äôs align our setup in the Integration Suite tenant with that behavior.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Make sure you have generated a service key for the 'Integration-Flow' service plan of the Process Integration Runtime service instance. Select either the 'Certificate' or 'External Certificate' option from the drop-down while doing so.&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-18 at 1.54.27‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302086iF83BBA4ACE81A98B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-18 at 1.54.27‚ÄØPM.png" alt="Screenshot 2025-08-18 at 1.54.27‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.13247404224848%"&gt;2.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;P&gt;If you select ‚Äò&lt;U&gt;Certificate&lt;/U&gt;‚Äô, the BTP platform will generate the certificate and key in PEM format, which will be displayed on the next screen for you to copy.&lt;/P&gt;&lt;P&gt;Make a note of the client_id to be used at a later step.&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-18 at 1.57.43‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302087iD2C311DC6397678D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-18 at 1.57.43‚ÄØPM.png" alt="Screenshot 2025-08-18 at 1.57.43‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.13247404224848%"&gt;3.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;Pro Tip: Since the certificate attribute contains a newline character (\n), you will need to remove it before attempting to generate a PFX file or any other format that can encode the key and certificate together, using tools like OpenSSL. Here is a quick video demonstration that can eliminate all newline characters in one go from Sublime Text. (Do a 'Find All' of \n and hit 'enter' to remove them)&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sublimetext-certificate-small2.gif" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302722i7B28A680A6A06AB2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sublimetext-certificate-small2.gif" alt="sublimetext-certificate-small2.gif" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.13247404224848%"&gt;4.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;P&gt;In addition to a service key corresponding to 'Certificate', make sure you have one with '&lt;U&gt;client credentials&lt;/U&gt;' as well. This will be used to demonstrate the scenario where just the 'client credential' will be propagated as a 'technical principal. Impressive, huh&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":smiling_face_with_sunglasses:"&gt;üòé&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Make a note of the client_id to be used at a later step.&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-18 at 2.51.34‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302090i2CC00B0E3CCF0CA7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-18 at 2.51.34‚ÄØPM.png" alt="Screenshot 2025-08-18 at 2.51.34‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-119922392"&gt;&lt;STRONG&gt;4. Setting up a simple IFlow for Technical user propagation&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;To illustrate how &lt;STRONG&gt;technical user propagation&lt;/STRONG&gt; works in practice, we‚Äôll walk through the setup of three simple integration flows (iFlows) in SAP Cloud Integration ‚Äî each using a different &lt;STRONG&gt;Receiver Adapter&lt;/STRONG&gt;: &lt;STRONG&gt;SOAP&lt;/STRONG&gt;, &lt;STRONG&gt;HTTP&lt;/STRONG&gt;, and &lt;STRONG&gt;OData V2&lt;/STRONG&gt;. These examples are deliberately kept minimal so you can focus on the &lt;STRONG&gt;adapter configuration&lt;/STRONG&gt; and &lt;STRONG&gt;principal propagation&lt;/STRONG&gt; setup, without getting lost in unrelated processing logic.&amp;nbsp;&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;Technical user propagation for HTTP and OData V2 Adapters works out of the box.&amp;nbsp; A small adjustment is needed only for the SOAP Adapter.&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;Technical user propagation for HTTP and OData V2 Adapters works out of the box.&amp;nbsp; A small adjustment is needed only for the SOAP Adapter.&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P&gt;As mentioned before, each scenario we present can be executed in either of the two ways as listed below to inject the fixed technical identity :&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;With a client certificate presented by the sending system (i.e. mTLS)&lt;/LI&gt;&lt;LI&gt;Following 'client credential' grant type, i.e., client_id and client_secret&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId--663397127"&gt;4.1.&amp;nbsp;OData V2 Receiver Adapter ‚Äì Technical user propagation setup&lt;/H4&gt;&lt;P&gt;Let‚Äôs start with a common integration scenario: consuming an &lt;STRONG&gt;OData V2&lt;/STRONG&gt; service from an on-premise SAP backend system. In this setup, technical user propagation enables Cloud Integration to connect to the backend using a short-lived X.509 certificate that represents a fixed technical identity.&lt;/P&gt;&lt;P&gt;With the 2506 &lt;A href="https://help.sap.com/whats-new/5793247a5d5741beb0decc5b7dee1160" target="_self" rel="noopener noreferrer"&gt;update&lt;/A&gt;, SAP Integration Suite now supports technical user propagation &lt;STRONG&gt;out of the box&lt;/STRONG&gt;. Just choose ‚Äò&lt;U&gt;principal propagation&lt;/U&gt;‚Äô in the Authentication drop-down, and the system will automatically pass along either the end-user or technical-user context to the cloud connector and eventually to the backend.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="2506 product increment" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302707i02303C76CD243C4D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.40.43‚ÄØPM.png" alt="2506 product increment" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;2506 product increment&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Below is an illustration of a simple IFlow that leverages the OData V2 receiver adapter&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="a simplified example of an OData V2 Receiver Adapter" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302709iC1CB1E0F674A96FE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 12.59.39‚ÄØPM.png" alt="a simplified example of an OData V2 Receiver Adapter" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;a simplified example of an OData V2 Receiver Adapter&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let's review the 'Connection' settings on the Adapter's property sheet. You will notice that I've set the 'Authentication' to &lt;U&gt;&lt;EM&gt;Principal Propagation&lt;/EM&gt;&lt;/U&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="property sheet of the OData Receiver" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302708i2A6D349E87AA4B44/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.39.34‚ÄØPM.png" alt="property sheet of the OData Receiver" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;property sheet of the OData Receiver&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;So far, everything looks good. The next step is to map the technical client identifier to a backend user‚Äîa process we‚Äôll walk through in detail in &lt;STRONG&gt;section 5&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;EM&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;‚ö†Ô∏è&lt;/span&gt;Make sure you refer to that section before continuing further.&amp;nbsp;&lt;/EM&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Invoking a curl command by injecting a client certificate (note that the private key and certificate were available during step 3.2):&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl --cert mycertificate.pem --key pvtkey.key  --header 'target: odata' https://&amp;lt;cpi-instance&amp;gt;.cfapps.&amp;lt;landscape&amp;gt;.hana.ondemand.com/http/&amp;lt;pathsuffix&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If you‚Äôd rather use a tool like Postman or Bruno instead of curl, ensure you have the client certificate in PFX format so it can be attached to your requests.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Client Certificate available in Postman" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304422iC3DBCB4B90FDCB07/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 5.38.59‚ÄØPM.png" alt="Client Certificate available in Postman" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Client Certificate available in Postman&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Client Certificate available in Bruno" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304423iE3D08D3A889895C4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 5.40.41‚ÄØPM.png" alt="Client Certificate available in Bruno" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Client Certificate available in Bruno&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;‚úÖ&lt;/span&gt;A successful execution should retrieve the needed results from the backend.&lt;/P&gt;&lt;P&gt;Let‚Äôs review key log entries from both SAP Cloud Connector and the backend system to illustrate how technical user propagation was performed.&lt;/P&gt;&lt;P&gt;In the screenshot below from the ljs_trace file in SAP Cloud Connector, the first highlighted entry shows the claims extracted from the decoded JWT received from Cloud Integration. The second entry confirms that the principal was resolved to type &lt;EM&gt;Technical&lt;/EM&gt;, as outlined in step 5.1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.19.30‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304320iF1E45537A3200D9A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.19.30‚ÄØPM.png" alt="Screenshot 2025-08-19 at 1.19.30‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Next, you can see that an X.509 certificate was generated with the Common Name (CN) set to the technical identifier.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.16.19‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304321i508AEB517D2A423A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.16.19‚ÄØPM.png" alt="Screenshot 2025-08-19 at 1.16.19‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the ‚ÄòMonitor‚Äô perspective, you can see the technical identifier listed under the ‚ÄòUser‚Äô section, confirming that it was successfully propagated to the backend.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-24 at 11.22.30‚ÄØAM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304418i59C19B4980D49352/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 11.22.30‚ÄØAM.png" alt="Screenshot 2025-08-24 at 11.22.30‚ÄØAM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here is a log entry from the ICM node in the backend confirming that the certificate subject for the said technical identifier was received.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.25.15‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304322i83D7F14962C8E3AE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.25.15‚ÄØPM.png" alt="Screenshot 2025-08-19 at 1.25.15‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Finally, based on the rule set in the CERTRULE, you can verify that the subject. from the certificate resolves to the backend user (uname) called 'SUITEUSER'.&amp;nbsp; This concludes one end-to-end cycle.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.29.31‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304323iD9A57063D18C166F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.29.31‚ÄØPM.png" alt="Screenshot 2025-08-19 at 1.29.31‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId--859910632"&gt;4.2.&amp;nbsp;HTTP Receiver Adapter ‚Äì Technical user propagation setup&lt;/H4&gt;&lt;P&gt;After exploring the OData V2 adapter, let‚Äôs look at the &lt;STRONG&gt;HTTP Receiver Adapter &lt;/STRONG&gt;scenario, which is used when connecting to custom REST APIs / generically available HTTP endpoints in the backend system.&lt;/P&gt;&lt;P&gt;The good news here is that this scenario also works in a manner very similar to the one described above. Here is a snippet of the &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/http-receiver-adapter" target="_self" rel="noopener noreferrer"&gt;documentation&lt;/A&gt; page that describes the support for technical user propagation.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-08-23 at 8.52.56‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304326i36E7124144E4D302/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-23 at 8.52.56‚ÄØPM.png" alt="Screenshot 2025-08-23 at 8.52.56‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let's extend our sample IFlow with a sequence of steps that leverages this functionality.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.01.18‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304327iF9ADF05694461FFB/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.01.18‚ÄØPM.png" alt="Screenshot 2025-08-19 at 1.01.18‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I've marked the HTTP Receiver Adapter attached to a new 'Request-Reply' step. The adapter‚Äôs property sheet closely resembles that of the OData V2 Adapter, with the authentication type configured as &lt;EM&gt;Principal Propagation.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-23 at 6.12.57‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304328i42F3E99C81A4FDF7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-23 at 6.12.57‚ÄØPM.png" alt="Screenshot 2025-08-23 at 6.12.57‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let‚Äôs trigger the IFlow using a curl command. Unlike the OData V2 Adapter example, where we used a certificate, this time we‚Äôll authenticate with the client_credentials grant type by providing a Bearer token.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl --header 'Authorization: Bearer eyJhbGciO&amp;lt;truncated&amp;gt;' https://&amp;lt;cpi-instance&amp;gt;.cfapps.&amp;lt;landscape&amp;gt;.hana.ondemand.com/http/&amp;lt;pathsuffix&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;‚úÖ&lt;/span&gt;You should see a successful execution, and the Cloud Connector and backend logs should align with the explanation in the OData V2 Adapter scenario.&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId--1056424137"&gt;4.3. SOAP Receiver Adapter ‚Äì Technical user propagation setup&lt;/H4&gt;&lt;P&gt;Next, let‚Äôs set up the same scenario for the SOAP Receiver Adapter. Unlike the HTTP and OData V2 adapters, which worked almost seamlessly by simply enabling ‚Äò&lt;EM&gt;principal propagation&lt;/EM&gt;,‚Äô the SOAP approach requires a bit more configuration effort.&amp;nbsp; (Note that this may change in one of our future releases.)&lt;/P&gt;&lt;P&gt;Here is my updated sample IFlow with a local integration process step added to handle the SOAP Adapter as well.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.09.28‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304411i88201994F95EE1CC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.09.28‚ÄØPM.png" alt="Screenshot 2025-08-19 at 1.09.28‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The first step in my Local Integration Process is a Content Modifier that creates the 'SAP-Connectivity-Technical-Authentication' header and assigns it the value of the incoming 'Authorization' header.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-24 at 12.52.31‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304419i9CA9586B4C92F2C2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 12.52.31‚ÄØPM.png" alt="Screenshot 2025-08-24 at 12.52.31‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here is a simple illustration of my SOAP Adapter that invokes a SOAP Service from my S/4HANA system. Carefully note that I have set the 'Authentication' to &lt;STRONG&gt;&lt;EM&gt;none&lt;/EM&gt;&lt;/STRONG&gt; (instead of &lt;EM&gt;principal propagation&lt;/EM&gt;).&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-24 at 12.53.06‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304420iD9AF3171E61BF7A3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 12.53.06‚ÄØPM.png" alt="Screenshot 2025-08-24 at 12.53.06‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Also, do not forget to include the 'Authorization' as an allowed header within the Runtime Configuration section block, as we are reading this attribute. You may need to tailor the Namespace Mapping based on your backend's WSDL settings.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-24 at 12.53.25‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304421iB1C1502108C1FB69/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 12.53.25‚ÄØPM.png" alt="Screenshot 2025-08-24 at 12.53.25‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let's go ahead and issue a POST call to our Integration Flow to invoke the&amp;nbsp;'CreditManagementAccountByIDQuery' Operation from the SOAP Service.&lt;/P&gt;&lt;P&gt;Here is the (request.xml) XML payload I've used:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;glob:CreditManagementAccountByIDQuery xmlns:glob="http://sap.com/xi/SAPGlobal/Global"&amp;gt;
  &amp;lt;Selection&amp;gt;
    &amp;lt;DebtorPartyInternalID&amp;gt;MDG_CU01&amp;lt;/DebtorPartyInternalID&amp;gt;
    &amp;lt;CreditsegmentInternalID&amp;gt;0002&amp;lt;/CreditsegmentInternalID&amp;gt;
  &amp;lt;/Selection&amp;gt;
  &amp;lt;LanguageCode&amp;gt;en&amp;lt;/LanguageCode&amp;gt;
&amp;lt;/glob:CreditManagementAccountByIDQuery&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Here are my CURL commands:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;echo "eyJhbGciOiJSUzI1NiIsImprd...full_token_here...JJQog" &amp;gt; token.txt
TOKEN=$(cat token.txt)
curl 'https://&amp;lt;cpi-instance&amp;gt;.cfapps.&amp;lt;landscape&amp;gt;.hana.ondemand.com/http/&amp;lt;pathsuffix&amp;gt;' \
  --header 'target: soap' \
  --header 'Content-Type: text/xml; charset=utf-8' \
  --header "Authorization: Bearer $TOKEN" \
  --data .xml&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This concludes our testing of invoking the SOAP Adapter.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;üí°&lt;/span&gt;&lt;STRONG&gt;A Note on Transparency in Technical User Propagation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the three scenarios we laid out above (OData V2, SOAP, and HTTP), the &lt;STRONG&gt;client or sender system&lt;/STRONG&gt; was responsible for presenting the &lt;EM&gt;technical client ID&lt;/EM&gt; that ultimately got propagated downstream. While this approach works well, there are situations where it may be desirable to keep this entire process &lt;STRONG&gt;transparent to the end user&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;In such cases, the integration developer can insert a &lt;STRONG&gt;Request Reply step&lt;/STRONG&gt; in the iFlow to first call the &lt;STRONG&gt;OAuth token endpoint&lt;/STRONG&gt; using a different set of credentials ‚Äî not necessarily exposed or known to the consuming client. The resulting access token can then be injected into the SAP-Connectivity-Technical-Authentication header, ensuring that the technical user propagation still takes place, but without burdening the client with the responsibility of handling technical credentials directly. Here is a sample Groovy script snippet that can be placed after retrieving the access token&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message;
import groovy.json.JsonSlurper;

def Message processData(Message message) {
    // Get the response body as a string
    def body = message.getBody(String);
    
    // Parse the JSON response
    def jsonSlurper = new JsonSlurper();
    def jsonResponse = jsonSlurper.parseText(body);
    
    // Extract the access token (assuming the token is in a field called "access_token")
    def accessToken = jsonResponse.access_token;
    def bearerToken = "Bearer "+ accessToken;
    
    // Set the access token as a message header for technical authentication
    message.setHeader("SAP-Connectivity-Technical-Authentication", bearerToken);
    
    return message;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This pattern is particularly useful when you want to &lt;STRONG&gt;decouple client-facing authentication&lt;/STRONG&gt; from &lt;STRONG&gt;backend technical connectivity&lt;/STRONG&gt;, giving you more flexibility and control over how identities are managed across the landscape.&lt;/P&gt;&lt;H2 id="toc-hId--666131628"&gt;5. Mapping technical users to ABAP users in the backend&lt;/H2&gt;&lt;P&gt;Now we will connect the dots between the &lt;U&gt;technical user&lt;/U&gt;&amp;nbsp;and an ABAP &lt;U&gt;backend user&lt;/U&gt;. This ensures that when Cloud Integration presents the technical identity, the backend system knows exactly which user account to log on with.&lt;/P&gt;&lt;P&gt;We‚Äôll achieve this by generating a &lt;STRONG&gt;sample X.509 certificate&lt;/STRONG&gt; that represents the technical client identifier, and then explicitly mapping it to an ABAP user via transaction &lt;STRONG&gt;CERTRULE&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Here is a step-by-step instruction to perform this mapping.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;&lt;H4 id="toc-hId--1449451147"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;&lt;H4 id="toc-hId--1645964652"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;H4 id="toc-hId--1842478157"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;1.&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;&lt;P&gt;Get back to the SAP Cloud Connector -&amp;gt; Configuration -&amp;gt; On Premise setting page and click on the button at the bottom of the screen labelled '&lt;U&gt;Generate a Sample Certificate&lt;/U&gt;'.&amp;nbsp;&lt;/P&gt;&lt;P&gt;We need this dummy short-lived X.509 certificate to perform the mapping step.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Notice that I'm demonstrating setting the ${user_type} to 'Technical' as indicated in point 2.2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-23 at 5.08.51‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304319iC931BD17A01531E7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-23 at 5.08.51‚ÄØPM.png" alt="Screenshot 2025-08-23 at 5.08.51‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;2.&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;Paste the client_id retrieved from step 3.2 / 3.4 in the CN field and click '&lt;U&gt;Generate&lt;/U&gt;'. This will export a certificate file to your local hard drive.&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.30.55‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303208i2D56072ABE86AFBD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-19 at 1.30.55‚ÄØPM.png" alt="Screenshot 2025-08-19 at 1.30.55‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;3.&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;&lt;P&gt;In your SAP Logon, head to txn&amp;nbsp; CERTRULE -&amp;gt; &lt;U&gt;Explicit Mappings&lt;/U&gt; and import this short-lived certificate from the previous step.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;üí°&lt;/span&gt;Refer back to step 1.6 for an explanation of why this step is needed.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.32.51‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303209i03BD2C9FCF4FA090/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-19 at 1.32.51‚ÄØPM.png" alt="Screenshot 2025-08-19 at 1.32.51‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;4.&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;&lt;P&gt;Once the certificate is loaded, click on '&lt;U&gt;Explicit Mapping&lt;/U&gt;' to map the certificate subject to an actual ABAP user / technical alias.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.33.15‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303210i05EDB204B19BABD9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-19 at 1.33.15‚ÄØPM.png" alt="Screenshot 2025-08-19 at 1.33.15‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;5.&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;&lt;P&gt;In my screenshot, I'll be mapping the certificate subject to a 'dialog' user. Instead, you can also choose a technical alias.&lt;/P&gt;&lt;P&gt;Your backend service call will be executed in this user's context.&amp;nbsp;&lt;/P&gt;&lt;P&gt;In ABAP terminology, this corresponds to the &lt;U&gt;sy-uname&lt;/U&gt; attribute.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.33.48‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303211iE1797E7CDAB1C2D3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-19 at 1.33.48‚ÄØPM.png" alt="Screenshot 2025-08-19 at 1.33.48‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;6.&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;If you managed to get this far, you should see an entry created in the mapping table&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":grinning_face:"&gt;üòÄ&lt;/span&gt;&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.34.36‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303212iD09E15A2FEE3EA01/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-19 at 1.34.36‚ÄØPM.png" alt="Screenshot 2025-08-19 at 1.34.36‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId--1452185648"&gt;6. &lt;span class="lia-unicode-emoji" title=":warning:"&gt;‚ö†Ô∏è&lt;/span&gt; A note of caution on the Cloud Connector "system certificate" default&lt;/H2&gt;&lt;P&gt;Let‚Äôs take a moment to discuss a nuanced behavior we briefly touched on above in &lt;STRONG&gt;point 2.3&lt;/STRONG&gt;. In the Cloud Connector configuration, there is an option called &lt;EM&gt;‚ÄúSystem Certificate for Logon‚Äù&lt;/EM&gt;. When this option is enabled, the Cloud Connector will use its own system certificate to authenticate in cases where &lt;STRONG&gt;no principal information&lt;/STRONG&gt; is available in the request.&lt;/P&gt;&lt;P&gt;While this might sound convenient, it introduces an important caveat: a &lt;STRONG&gt;fixed technical user&lt;/STRONG&gt; will always be propagated ‚Äî even in scenarios where your design expected to rely on true end-user principal propagation. Instead of failing due to missing identity information, the Cloud Connector silently falls back to the system certificate and logs on with the mapped technical user. Another common case that results in ‚Äúno principal information‚Äù is when the &lt;STRONG&gt;authentication&lt;/STRONG&gt; section of the Cloud Integration adapter is set to &lt;EM&gt;None&lt;/EM&gt; ‚Äî either deliberately for testing, or accidentally left that way during configuration.&lt;/P&gt;&lt;P&gt;This can be problematic in security-sensitive landscapes, because it may unintentionally bypass your intended identity propagation setup. It‚Äôs therefore crucial to carefully review whether this setting should be &lt;STRONG&gt;enabled&lt;/STRONG&gt; in your environment and confirm that it aligns with your authentication and compliance requirements.&lt;/P&gt;&lt;H2 id="toc-hId--1648699153"&gt;7. Final thoughts&lt;/H2&gt;&lt;P&gt;As we‚Äôve seen across the &lt;STRONG&gt;OData V2&lt;/STRONG&gt;, &lt;STRONG&gt;SOAP&lt;/STRONG&gt;, and &lt;STRONG&gt;HTTP&lt;/STRONG&gt; receiver adapters, SAP Integration Suite offers a flexible yet secure way to propagate a &lt;EM&gt;technical user&lt;/EM&gt; without falling back on basic authentication. By leveraging the &lt;STRONG&gt;short-lived X.509 certificates&lt;/STRONG&gt; issued through Cloud Connector and carefully configuring the adapter authentication settings, customers can ensure consistent, policy-compliant access to their on-premise systems.&lt;/P&gt;&lt;P&gt;This approach not only modernizes the classic ‚Äúcertificate-to-user mapping‚Äù patterns familiar from the Neo environment but also aligns with Cloud Foundry‚Äôs service key‚Äìbased model, giving you the best of both worlds: the security of principal propagation and the practicality of fixed user connectivity where required. With these patterns in hand, you can design integrations that are both &lt;STRONG&gt;secure&lt;/STRONG&gt; and &lt;STRONG&gt;operationally simple&lt;/STRONG&gt;, while avoiding common pitfalls such as unintended fallbacks or misconfigured authentication.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;üìå&lt;/span&gt;In the next installment of this series, we‚Äôll extend the same concept to &lt;STRONG&gt;API Management&lt;/STRONG&gt;, focusing on how technical user propagation works through the On-Premise Proxy component ‚Äî so stay tuned if you‚Äôre interested in applying these patterns beyond Cloud Integration.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;EDITED : API Management blog article is linked &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/applying-techncial-user-propagation-to-api-management/ba-p/14191788" target="_self"&gt;here&lt;/A&gt;.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/unravelling-the-technical-user-propagation-scenarios-in-sap-integration/ba-p/14182016"/>
    <published>2025-08-25T05:55:48.613000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/applying-techncial-user-propagation-to-api-management/ba-p/14191788</id>
    <title>Applying 'Techncial User Propagation' to API Management</title>
    <updated>2025-08-29T07:03:22.437000+02:00</updated>
    <author>
      <name>vinayak_adkoli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/216068</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1738703761"&gt;1. Introduction:&lt;/H2&gt;&lt;P&gt;In the previous &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/unravelling-the-technical-user-propagation-scenarios-in-sap-integration/ba-p/14182016" target="_self"&gt;blog&lt;/A&gt;, we explored how technical user propagation works in &lt;STRONG&gt;SAP Integration Suite / Cloud Integration&lt;/STRONG&gt; using the OData V2, SOAP, and HTTP receiver adapters. In this installment, we turn our attention to &lt;STRONG&gt;API Management&lt;/STRONG&gt;, where the &lt;A href="https://help.sap.com/docs/sap-api-management/sap-api-management/on-premise-connectivity-plan" target="_self" rel="noopener noreferrer"&gt;on-premise proxy component&lt;/A&gt;&amp;nbsp;plays a crucial role in securely bridging cloud-hosted APIs with on-premise systems. Much like Cloud Integration, the question of propagating a &lt;EM&gt;fixed technical identity&lt;/EM&gt; comes up frequently here ‚Äî but the mechanisms and configuration steps differ.&lt;/P&gt;&lt;H2 id="toc-hId-1542190256"&gt;&lt;STRONG&gt;2. Quick recap on on-premise connectivity in API Management:&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Before diving deeper, let‚Äôs briefly review how &lt;STRONG&gt;API Management&lt;/STRONG&gt; handles connectivity to on-premise systems. Within the &lt;STRONG&gt;API Provider settings&lt;/STRONG&gt;, API Management supports the concept of &lt;EM&gt;Principal Propagation&lt;/EM&gt;. This means that when a request is forwarded to an on-premise system, the expectation is that a valid user session (or &lt;STRONG&gt;principal&lt;/STRONG&gt;) already exists ‚Äî typically established via mechanisms such as SSO / token exchange.&lt;/P&gt;&lt;P&gt;Under the hood, the &lt;STRONG&gt;On-premise proxy component&lt;/STRONG&gt; in API Management uses the&amp;nbsp;&lt;STRONG&gt;BTP Destination&lt;/STRONG&gt;&amp;nbsp;as the connectivity anchor. The authenticated user session is propagated to this destination, which in turn leverages the &lt;STRONG&gt;Cloud Connector&lt;/STRONG&gt; to securely tunnel the call into the corporate network. Finally, at the backend system level, the &lt;STRONG&gt;X.509 certificate &lt;/STRONG&gt;mechanism comes into play, mapping the propagated principal to the appropriate backend user. We described this process in our previous blog.&lt;/P&gt;&lt;H2 id="toc-hId-1345676751"&gt;&lt;STRONG&gt;3. Concrete example ‚Äì Entra ID &amp;amp; token exchange:&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In practice, many customers authenticate users against Identity Provider systems such as Entra ID (formerly Azure AD). In this flow, Entra ID issues a JWT token where the &lt;U&gt;&lt;EM&gt;user subject&lt;/EM&gt;&lt;/U&gt; (often the user‚Äôs email ID) is included as a claim. This JWT is then presented to API Management, which, after an optional verification step, in turn exchanges it with XSUAA using the OAuth2 SAML Assertion flow. The result is an XSUAA-issued token that the on-premise proxy component in API Management can securely propagate downstream. This pattern is widely adopted and serves as the backbone of many user-centric API Management scenarios.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; There are many excellent SAP Community blogs that go into great detail about this token handshake and its variants. To keep our focus sharp, we won‚Äôt recap those here ‚Äî instead, we‚Äôll stay aligned with the specific objective of this blog: exploring how technical user propagation scenarios can be addressed in &lt;STRONG&gt;API Management‚Äôs On-Premise proxy component&lt;/STRONG&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1149163246"&gt;&lt;STRONG&gt;4. From user sessions to technical credentials:&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;While the model described above works seamlessly for user-centric flows, many integration patterns require a fixed technical credential instead. This is where customers start looking for approaches similar to the one we highlighted in Cloud Integration, where technical user propagation can be achieved by leveraging the '&lt;STRONG&gt;SAP-Connectivity-Technical-Authentication&lt;/STRONG&gt;' header. With API Management‚Äôs on-premise proxy component, patterns are available to achieve secure technical identity propagation, which differ slightly from the one we highlighted for Cloud Integration.&lt;/P&gt;&lt;H2 id="toc-hId-952649741"&gt;5. Usage scenarios with API Management:&lt;/H2&gt;&lt;P&gt;To make this blog post engaging, we would like to introduce multiple patterns of usage, since there is no single &lt;EM&gt;‚Äúgold standard‚Äù&lt;/EM&gt;&amp;nbsp; for implementing authentication in API Management. The right choice depends on the system landscape, security requirements, and integration goals. Below, we outline a few practical scenarios that illustrate different approaches. You are free to adjust the scenario based on your security needs:&lt;/P&gt;&lt;H4 id="toc-hId-1014301674"&gt;1. JWT Bearer Token injection (Client credentials authentication):&lt;/H4&gt;&lt;P&gt;In this scenario, the client is responsible for obtaining an access token itself. This typically involves the client exchanging its client credentials of API Management's on-premise proxy component for a&amp;nbsp;JWT access token and presenting it as part of the API call. API Management then processes this token and propagates the corresponding identity further downstream through the destination, Cloud Connector, and finally to the backend.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; While this approach is relatively straightforward, it places the responsibility of managing OAuth credentials and tokens directly on the client. Therefore, it should not be relied upon as the sole security mechanism. It is strongly recommended to validate the JWT on the API Management layer (or downstream) and ensure that it contains the expected claims (such as issuer, audience, scope, or custom claims like the target client_id) before granting access. This ensures that the token has not only been issued by BTP's XSUAA&amp;nbsp; but also carries the correct authorization context for your APIs.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pre-requisite(s):&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Make sure that you have created a service instance of the '&lt;U&gt;API Management, API portal&lt;/U&gt;'&amp;nbsp; service with the '&lt;U&gt;on-premise-connectivity&lt;/U&gt;' service plan.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-25 at 6.31.33‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304873iCA3CB132EEBCB1AC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-25 at 6.31.33‚ÄØPM.png" alt="Screenshot 2025-08-25 at 6.31.33‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-817788169"&gt;&lt;STRONG&gt;2. API Key injection (Credential abstraction for clients):&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;In this setup, the client application supplies an &lt;STRONG&gt;API Key&lt;/STRONG&gt; when calling API Management in addition to any other security mechanism. Behind the scenes, the API Proxy is configured to exchange fixed technical credentials with the Identity Provider (BTP XSUAA) to obtain an access token. This approach helps ensure that the sensitive technical credentials ‚Äî the ones that need to be propagated ‚Äî remain hidden from the client, thereby strengthening security.&lt;/P&gt;&lt;P&gt;To make matters more interesting, in our walkthrough, we will not rely on a basic &lt;EM&gt;client credentials &lt;/EM&gt;grant type. Instead, we will demonstrate a &lt;STRONG&gt;certificate-based token exchange&lt;/STRONG&gt;, where API Management presents a client certificate to XSUAA (via OAuth2 with mutual TLS) to obtain the token. This pattern is increasingly popular in enterprise landscapes because it provides stronger binding between client identity and issued tokens (&lt;A href="https://datatracker.ietf.org/doc/html/rfc8705" target="_self" rel="nofollow noopener noreferrer"&gt;RFC 8705&lt;/A&gt;), without ever exposing the client secret, while still abstracting the complexity from the consuming client.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pre-requisite(s):&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;a) Ensure that the &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/activating-developer-hub" target="_self" rel="noopener noreferrer"&gt;Developer Hub&lt;/A&gt; is enabled and that you can create product subscriptions.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;b) Ensure you have a service key enabled for &lt;U&gt;X.509&lt;/U&gt; certificate authentication. Copy the generated client_id. You can follow &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/on-premise-connectivity-plan" target="_self" rel="noopener noreferrer"&gt;this&lt;/A&gt; guide to set it up, and then refer to step 3.3 in our previous article to create a PFX/P12 file that bundles the certificate and key together.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-27 at 4.43.24‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305676i60BF448692BBB8E1/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-27 at 4.43.24‚ÄØPM.png" alt="Screenshot 2025-08-27 at 4.43.24‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;c) Ensure that the PFX file is uploaded to a keystore from the 'Certificates' section.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-27 at 6.22.53‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306064i07D1A5304BE26380/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-27 at 6.22.53‚ÄØPM.png" alt="Screenshot 2025-08-27 at 6.22.53‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-621274664"&gt;&lt;STRONG&gt;3. Client Certificate-based Authentication:&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;In this scenario, the consuming client application presents an &lt;STRONG&gt;external client certificate&lt;/STRONG&gt; directly to the API Management runtime when invoking an API. The API Management host validates the certificate against its trust store and, based on pre-configured certificate-to-credential mapping, resolves the call to a &lt;STRONG&gt;fixed technical credential&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;This design is particularly useful in system-to-system integrations where client identities are represented by certificates instead of (/in addition to) tokens or API Keys, as the certificate itself acts as the authentication factor. Internally, the mapped technical user is then propagated through to the BTP Destination, Cloud Connector, and ultimately to the backend system using the same mechanisms as in the earlier scenarios.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; This approach is especially appealing when clients cannot (or should not) handle OAuth flows, but are capable of securely storing and presenting a client certificate. However, it requires careful lifecycle management of certificates (renewal, rotation, and trust configuration) to ensure uninterrupted connectivity.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pre-requisite(s):&lt;/STRONG&gt;&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Make sure you are configured for &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/request-for-two-way-ssl-certificate" target="_self" rel="noopener noreferrer"&gt;certificate-based&lt;/A&gt; authentication. You can then manage your clients‚Äô certificate chains in the Trust Store as a convenient self-service feature.&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;Ensure you can read the '&lt;SPAN&gt;ConnectionProperties&lt;/SPAN&gt;' and '&lt;SPAN&gt;ClientProperties&lt;/SPAN&gt;' property variables. You will need to create an operations &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/tls-ssl-connection-information-variables" target="_self" rel="noopener noreferrer"&gt;ticket&lt;/A&gt; to do so.&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Let‚Äôs examine each of these scenarios in detail. Please note that this is not a &lt;EM&gt;step-by-step&lt;/EM&gt; guide; rather, we will focus on highlighting only the key steps.&lt;/P&gt;&lt;H2 id="toc-hId-166595721"&gt;6. Scenario#1 (Client credentials Authentication) - API Provider and Proxy configurations:&lt;/H2&gt;&lt;P&gt;Let‚Äôs review the essential API Provider and Proxy configurations required to enable propagation of the 'SAP-Connectivity-Technical-Authentication' header.&lt;/P&gt;&lt;P&gt;1. Create an &lt;U&gt;Extract Variable&lt;/U&gt; policy like so (typically on the 'PreFlow' step) to extract the JWT token from the Authorization request and store it in a variable to be referenced later.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- Extract content from the request or response messages, including headers, URI paths, JSON/XML payloads, form parameters, and query parameters --&amp;gt;
&amp;lt;ExtractVariables async="true" continueOnError="false" enabled="false" xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;Header name="Authorization"&amp;gt;
        &amp;lt;Pattern ignoreCase="true"&amp;gt;Bearer {sapapim.jwt}&amp;lt;/Pattern&amp;gt;
    &amp;lt;/Header&amp;gt;
    &amp;lt;IgnoreUnresolvedVariables&amp;gt;true&amp;lt;/IgnoreUnresolvedVariables&amp;gt;
	&amp;lt;Source&amp;gt;request&amp;lt;/Source&amp;gt;
&amp;lt;/ExtractVariables&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2. After this step, use a &lt;U&gt;Verify JWT&lt;/U&gt; policy to verify the signatures on the JWT as well as any standard and custom claims. Follow &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/blog-series-json-web-tokens-jwt-verification-using-sap-cloud-platform-api/ba-p/13419698" target="_self"&gt;this&lt;/A&gt; blog series to learn more about JWT verification capabilities.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- Verify JWT TOken --&amp;gt;
&amp;lt;VerifyJWT async="false" continueOnError="false" enabled="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;
    &amp;lt;Algorithm&amp;gt;RS256&amp;lt;/Algorithm&amp;gt;
    &amp;lt;Source&amp;gt;sapapim.jwt&amp;lt;/Source&amp;gt;
    &amp;lt;PublicKey&amp;gt;
            &amp;lt;Value ref="jwt.publickey"/&amp;gt;
    &amp;lt;/PublicKey&amp;gt;
    &amp;lt;Subject ref="apim.subject"/&amp;gt;
    &amp;lt;Issuer ref="apim.issuer"/&amp;gt;
    &amp;lt;Audience ref="apim.issuer"/&amp;gt;
    &amp;lt;AdditionalClaims&amp;gt;
    &amp;lt;/AdditionalClaims&amp;gt;
&amp;lt;/VerifyJWT&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Next, create an &lt;U&gt;AssignMessage&lt;/U&gt; policy like so to inject the '&lt;EM&gt;SAP-Connectivity-Technical-Authentication&lt;/EM&gt;' header with the variable captured from the previous step, and make sure to remove the '&lt;EM&gt;Authorization&lt;/EM&gt;' header.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- This policy can be used to create or modify the standard HTTP request and response messages --&amp;gt;
&amp;lt;AssignMessage async="false" continueOnError="false" enabled="true" xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;Remove&amp;gt;
		&amp;lt;Headers&amp;gt;
		     &amp;lt;Header name="Authorization"&amp;gt;&amp;lt;/Header&amp;gt;
		&amp;lt;/Headers&amp;gt;
	&amp;lt;/Remove&amp;gt;
	&amp;lt;Set&amp;gt;
		&amp;lt;Headers&amp;gt;
		     &amp;lt;Header name="SAP-Connectivity-Technical-Authentication"&amp;gt;Bearer {sapapim.accessToken}&amp;lt;/Header&amp;gt;
		&amp;lt;/Headers&amp;gt;
	&amp;lt;/Set&amp;gt; 
	&amp;lt;IgnoreUnresolvedVariables&amp;gt;false&amp;lt;/IgnoreUnresolvedVariables&amp;gt;
	&amp;lt;AssignTo createNew="false" type="request"&amp;gt;request&amp;lt;/AssignTo&amp;gt;
&amp;lt;/AssignMessage&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;4. Finally, ensure that the API Provider‚Äôs &lt;EM&gt;authentication&lt;/EM&gt; setting is configured as &lt;U&gt;&lt;EM&gt;None&lt;/EM&gt;&lt;/U&gt; rather than &lt;EM&gt;Principal Propagation&lt;/EM&gt;. This is the very configuration we applied for the SOAP Adapter scenario discussed in the previous blog post.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-26 at 3.05.38‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305303i5753771BD1BFE32E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-26 at 3.05.38‚ÄØPM.png" alt="Screenshot 2025-08-26 at 3.05.38‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. Let's get down to testing now. The first step would be to get an access token from the authorization server's (XSUAA) token endpoint.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl --location --request POST 'https://&amp;lt;subdomain&amp;gt;.authentication.&amp;lt;region&amp;gt;.hana.ondemand.com/oauth/token' \
  --header 'Content-Type: application/x-www-form-urlencoded' \
  --user '&amp;lt;client_id&amp;gt;:&amp;lt;client_secret&amp;gt;' \
  --data-urlencode 'grant_type=client_credentials'&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6. Copy the access token from the result of the call above and invoke the API Proxy by presenting the Bearer token in the Authorization header.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;curl --location --request GET 'https://&amp;lt;apim_base_url&amp;gt;/&amp;lt;your_api_path&amp;gt;' \
  --header "Authorization: Bearer &amp;lt;access_token&amp;gt;"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;‚úÖ&lt;/span&gt;&amp;nbsp;Assuming that the rest of your configurations are intact, the call should complete successfully and return the expected backend records.&lt;/P&gt;&lt;P&gt;7. To validate the token handshake and X.509 certificate generation, refer to the verification steps detailed in Step 4.1 in our &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/unravelling-the-technical-user-propagation-scenarios-in-sap-integration/ba-p/14182016" target="_self"&gt;linked&lt;/A&gt; blog post.&lt;/P&gt;&lt;H2 id="toc-hId--29917784"&gt;7. Scenario#2 (APIKey injection) - Proxy configuration:&lt;/H2&gt;&lt;P&gt;In this scenario, the client credentials will not be exposed directly to the client. Instead, we inject the required client_id as a custom attribute within the Product Subscription. During runtime, this identifier is dynamically retrieved via a policy and used to obtain an access token from the authorization server&lt;/P&gt;&lt;P&gt;1. Log in to your Developer Hub, create a product subscription for your target API. Navigate to the Custom Attribute tab and create an attribute called&lt;U&gt; 'x_client_id'&lt;/U&gt; and place the client_id copied from step 2.b. as the Value.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-27 at 6.57.16‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305681i492F9116AB62D50F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-27 at 6.57.16‚ÄØPM.png" alt="Screenshot 2025-08-27 at 6.57.16‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. You may choose to follow the same workflow demonstrated in Scenario 1. In addition, an important step is to configure the &lt;U&gt;Verify API Key&lt;/U&gt; policy, for example, in the PreFlow segment.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt; &amp;lt;!--Specify in the APIKey element where to look for the variable containing the api key--&amp;gt; 
&amp;lt;VerifyAPIKey async='true' continueOnError='false' enabled='true' 
xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;APIKey ref='request.header.apikey'/&amp;gt;
&amp;lt;/VerifyAPIKey&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Next, add an &lt;U&gt;AccessEntity&lt;/U&gt; policy to get hold of a reference to the 'application's' attributes.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- this policy can be used to retrieve all details of an entity(application, API Product, company, company developer, consumer key and developer) --&amp;gt;
&amp;lt;AccessEntity async="true" continueOnError="false" enabled="true" xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;!-- the name of the type of entity to be retrieved --&amp;gt;
	&amp;lt;EntityType value="app"/&amp;gt;
	&amp;lt;!-- The value that identifies the specific entity whose profile should be retrieved. The ref attribute identifies the variable that provides the source of the identifier. 
	The type identifies the EntityType populated by the referenced variable --&amp;gt;
	&amp;lt;EntityIdentifier ref="request.header.apikey" type="consumerkey"/&amp;gt;
&amp;lt;/AccessEntity&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4. Then add an &lt;U&gt;ExtractVariable&lt;/U&gt; policy to parse and extract the value of the custom attribute defined in the previous step.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;!-- Extract content from the request or response messages, including headers, URI paths, JSON/XML payloads, form parameters, and query parameters --&amp;gt;
&amp;lt;ExtractVariables async="true" continueOnError="false" enabled="true" xmlns='http://www.sap.com/apimgmt'&amp;gt;
	&amp;lt;!-- the source variable which should be parsed --&amp;gt;
	&amp;lt;Source&amp;gt;AccessEntity.name-of-the-AccessEntity-policy-here&amp;lt;/Source&amp;gt;
	&amp;lt;!-- Specifies the XML-formatted message from which the value of the variable will be extracted --&amp;gt;
	&amp;lt;XMLPayload&amp;gt;
    	&amp;lt;!-- Specifies variable to which the extracted value will be assigned --&amp;gt;
    	&amp;lt;Variable name="x-client-id" type="string"&amp;gt;
    		&amp;lt;!-- Specifies the XPath defined for the variable --&amp;gt;
    		&amp;lt;XPath&amp;gt;/App/Attributes/Attribute[Name='x_client_id']/Value/text()&amp;lt;/XPath&amp;gt;
   	    &amp;lt;/Variable&amp;gt;
	&amp;lt;/XMLPayload&amp;gt;
&amp;lt;/ExtractVariables&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5. After this step, we add a small script to construct the URL-encoded form payload in preparation for the token retrieval step. Notice that we &lt;U&gt;have not&lt;/U&gt; used the client secret attribute at all.&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;function getFormElement(name,value){
    return name + "=" + encodeURIComponent(value);
}

function createOAuthRequest(){
    return getFormElement("grant_type","client_credentials")
                + "&amp;amp;" + getFormElement("client_id", context.getVariable("x-client-id")) ;
}

context.setVariable("sapapim.tokenRequest", createOAuthRequest());&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6. We will follow this up with a &lt;U&gt;ServiceCallout&lt;/U&gt; policy to make a POST request to the '.&lt;EM&gt;cert...&lt;/EM&gt;' token endpoint. Notice that we are attaching the certificate of the service key retrieved in step 2.c. by referencing it from the keystore.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;ServiceCallout async="false" continueOnError="false" enabled="true" xmlns="http://www.sap.com/apimgmt"&amp;gt;
    &amp;lt;Request clearPayload="true"&amp;gt;
        &amp;lt;Set&amp;gt;
            &amp;lt;Payload contentType="application/x-www-form-urlencoded"&amp;gt;{sapapim.tokenRequest}&amp;lt;/Payload&amp;gt;
            &amp;lt;Verb&amp;gt;POST&amp;lt;/Verb&amp;gt;
        &amp;lt;/Set&amp;gt;
        &amp;lt;IgnoreUnresolvedVariables&amp;gt;false&amp;lt;/IgnoreUnresolvedVariables&amp;gt;
    &amp;lt;/Request&amp;gt;
    &amp;lt;Response&amp;gt;sapapim.tokenResponse&amp;lt;/Response&amp;gt;
    &amp;lt;Timeout&amp;gt;30000&amp;lt;/Timeout&amp;gt;
    &amp;lt;HTTPTargetConnection&amp;gt;
        &amp;lt;URL&amp;gt;https://&amp;lt;tenant-dentifier&amp;gt;.authentication.cert.&amp;lt;region&amp;gt;.hana.ondemand.com/oauth/token&amp;lt;/URL&amp;gt;
        &amp;lt;SSLInfo&amp;gt; 
                 &amp;lt;Enabled&amp;gt;true&amp;lt;/Enabled&amp;gt; 
                &amp;lt;ClientAuthEnabled&amp;gt;true&amp;lt;/ClientAuthEnabled&amp;gt; 
                &amp;lt;KeyStore&amp;gt;KEYSTORE-NAME-GOES-HERE&amp;lt;/KeyStore&amp;gt; 
                &amp;lt;KeyAlias&amp;gt;CERTIFICATE-NAME-GOES-HERE&amp;lt;/KeyAlias&amp;gt; 
        &amp;lt;/SSLInfo&amp;gt;
    &amp;lt;/HTTPTargetConnection&amp;gt;
&amp;lt;/ServiceCallout&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7. Finally, retrieve the access token and attach it to the&amp;nbsp;&lt;EM&gt;SAP-Connectivity-Technical-Authentication&lt;/EM&gt; header, as demonstrated in step 3 of scenario 1.&lt;/P&gt;&lt;P&gt;8. To test this setup, modify the curl command from scenario 1 to add the APIKey header attribute, like so:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl --location --request GET 'https://&amp;lt;apim_base_url&amp;gt;/&amp;lt;your_api_path&amp;gt;' \ 
--header "APIKey: &amp;lt;your_api_key&amp;gt;"&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-120823068"&gt;8. Scenario#3 (Client certificate-based authentication) - Proxy configuration:&lt;/H2&gt;&lt;P&gt;The critical security step in this scenario is that the client presents its certificate, which API Management validates against the trusted certificates stored in its Trust Store. This validation ensures that only clients with a recognized and trusted certificate can establish communication, thereby guaranteeing both authenticity and trust in the interaction.&lt;/P&gt;&lt;P&gt;When the 'ConnectionProperties' and 'ClientProperties' attributes are enabled, as described in the prerequisites section, you can also access key certificate details such as the Issuer DN and Client CN. For this scenario, we assume that the API Administrator maintains an access control list mapping a predefined set of certificate Common Names to unique client_ids. This ensures that the technical identifier is propagated only when a matching client certificate is presented.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Let's set this up.&lt;/P&gt;&lt;P&gt;1. Create a &lt;U&gt;Key Value Map&lt;/U&gt; and maintain a table mapping the common name of the client to the designated client_id.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-28 at 3.20.27‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306107i8771F75CD2D9D143/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-28 at 3.20.27‚ÄØPM.png" alt="Screenshot 2025-08-28 at 3.20.27‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. Construct a &lt;U&gt;KeyValueMapOperations&lt;/U&gt; policy that dynamically retrieves the 'tls.client.s.dn' property from the presented certificate, looks up the Key Value Map created in the above step, and assigns the value of the client_id to a variable called 'x_client_id'.&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&amp;gt;
&amp;lt;KeyValueMapOperations mapIdentifier="TechnicalAuthenticationMap" async="false" continueOnError="false" enabled="false" xmlns="http://www.sap.com/apimgmt"&amp;gt;
    &amp;lt;Get assignTo="x_client_id" index="1"&amp;gt;
        &amp;lt;Key&amp;gt;
            &amp;lt;Parameter ref ="tls.client.s.dn"/&amp;gt;
        &amp;lt;/Key&amp;gt;
    &amp;lt;/Get&amp;gt;
    &amp;lt;Scope&amp;gt;environment&amp;lt;/Scope&amp;gt;
&amp;lt;/KeyValueMapOperations&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Repeat steps 5, 6, and 7 from Scenario 2 to generate an access token and assign it to the target header.&lt;/P&gt;&lt;P&gt;4. To test the invocation, adjust the curl command to pass the client certificate&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl --location --request GET 'https://&amp;lt;apim_base_url&amp;gt;/&amp;lt;your_api_path&amp;gt;' \
  --header "Authorization: Bearer &amp;lt;access_token&amp;gt;" \
  --header "APIKey: &amp;lt;your_api_key&amp;gt;" \
  --cert &amp;lt;path_to_certificate&amp;gt;.pfx --cert-type P12 --pass &amp;lt;pfx_password&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":clapping_hands:"&gt;üëè&lt;/span&gt;Congratulations on getting this far!&lt;/P&gt;&lt;H2 id="toc-hId--75690437"&gt;9. Summary:&lt;/H2&gt;&lt;P&gt;The three API Management scenarios illustrate different approaches for &lt;STRONG&gt;technical user propagation &lt;/STRONG&gt;using the&lt;STRONG&gt; SAP-Connectivity-Technical-Authentication header&lt;/STRONG&gt;. In the first approach, the client directly provides credentials to obtain an access token, exposing sensitive information. The second approach leverages API Management to propagate technical credentials internally, keeping them hidden from the client and simplifying integration. The third approach uses mutual TLS and X.509 certificates to securely propagate the technical user identity from API Management through the API Provider to the backend system, ensuring end-to-end authentication without exposing internal credentials.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/applying-techncial-user-propagation-to-api-management/ba-p/14191788"/>
    <published>2025-08-29T07:03:22.437000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/realizing-ai-s-potential-in-and-through-sap-integration-suite/ba-p/14193578</id>
    <title>Realizing AI‚Äôs Potential in and Through SAP Integration Suite</title>
    <updated>2025-08-29T12:23:42.890000+02:00</updated>
    <author>
      <name>Elaine_w</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1779375</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1609678671"&gt;&lt;FONT size="6" color="#000000"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Real&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;izing AI‚Äôs Potential in and Through SAP Integration Suite&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H1&gt;&lt;P&gt;&lt;FONT size="3" color="#000000"&gt;&lt;SPAN&gt;AI is reshaping how enterprises approach integration, simplifying complex processes, reducing manual effort, and unlocking new levels of agility. In SAP Integration Suite, AI is more than just a trend: it&lt;/SPAN&gt; &lt;SPAN&gt;is both a set of powerful capabilities enhancing in&lt;/SPAN&gt;&lt;SPAN&gt;tegration today, and a key enabler for intelligent, connected systems in the future.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI in Integration Suite&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; ‚Äì Intelligence is embedded directly into the product to enhance developer productivity, improve operational efficiency, and accelerate time to cloud through features like flow generation and optimization, anomaly detection, and &lt;/SPAN&gt;&lt;SPAN&gt;intelligent troubleshooting and monitoring.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration Suite for AI&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; ‚Äì SAP Integration Suite also plays a vital role in enabling next-generation AI scenarios. It acts as the integration foundation for orchestrating autonomous, context-aware agents and supporting seamless interaction between AI systems and enterprise landscapes, backed by the governance and scalability that modern businesses need.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;This blog offers a practical overview of SAP Integration Suite‚Äôs evolving AI capabilities, highlighting how AI is embedded in SAP Integration Suite today, how it maps to key integration needs, and how it enables customers to build toward an AI-augmented future.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1542247885"&gt;&lt;FONT size="5" color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI in Integration Suite: Embedded Intelligence in Action&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;AI is not an isolated feature in SAP Integration Suite, instead, it‚Äôs woven into the platform to enhance how integrations are designed, built, and operated. Our embedded AI capabilities focus on delivering real, day-to-day value across two core dimensions:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Improve developer productivity&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Enhance operational excellence&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Here‚Äôs how embedded intelligence is making an impact in these areas:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1474817099"&gt;&lt;FONT size="4" color="#000000"&gt;&lt;U&gt;&lt;STRONG&gt;Improve Developer Productivity&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Designing integrations can be &lt;FONT size="3"&gt;time-consuming,&lt;/FONT&gt; es&lt;FONT size="3"&gt;pecially when d&lt;/FONT&gt;ealing with complex mappings, unfamiliar systems, &lt;/SPAN&gt;&lt;SPAN&gt;or writing custom scripts to handle specific logic&lt;/SPAN&gt;&lt;SPAN&gt;. SAP Integration Suite embeds AI to streamline this process and help developers move faster with greater confidence.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/creating-integration-flow" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;iFlow Creation&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;Developers can now generate integration flows simply by describing the scenario in natural language. This generative AI capability interprets the intent, assembles a draft iFlow with relevant flow steps, and gives developers a strong starting point, and significantly accelerating the design phase. Future enhancements are expected to include automatic generation of mappings, scripts, and other artifacts to further streamline the process. Check&lt;/FONT&gt; &lt;A href="https://roadmaps.sap.com/board?range=2025Q1-2026Q3&amp;amp;PRODUCT=000D3A47875C1EDB98A8A910864AC24B&amp;amp;FT=AI&amp;amp;FT=GEN_AI&amp;amp;FT=INTEGRATION" target="_self" rel="noopener noreferrer"&gt;the roadmap&lt;/A&gt; &lt;FONT color="#000000"&gt;for new updates.&lt;/FONT&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Elaine_w_0-1756159016396.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304854i72C2DF8534B030E4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Elaine_w_0-1756159016396.png" alt="Elaine_w_0-1756159016396.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;U&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/generative-ai-based-script-optimization/ba-p/13970403" target="_blank"&gt;Script Optimization&lt;/A&gt;&lt;/U&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;Generative AI in SAP Integration Suite can help developers refine Groovy and JavaScript scripts by analyzing code in real time and suggesting best-practice optimizations. These recommendations reduce the need for manual tuning, streamline the coding process and help maintain high performance and quality from the outset.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/integration-advisor" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Integration Advisor&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;Integration Suite is one of the first iPaaS to embed AI into capabilities for supporting B2B scenarios. Integration Advisor uses a machine learning-based, global knowledge pool to propose mappings between source and target structures. By learning from industry standards and past implementations, it dramatically reduces the time and effort required to configure B2B and A2A integrations, especially in complex message transformation scenarios.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-integration-flow-step-recommendations/ba-p/13474550" target="_blank"&gt;&lt;STRONG&gt;Flow Step Recommendations&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;When developers build integration flows, AI recommends the next logical flow step, such as a Groovy script or End Message, based on usage patterns. This intelligent guidance accelerates the flow creation process, minimizes trial-and-error, and supports consistent design quality across teams.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Together, these capabilities significantly reduce repetitive tasks, speed up development, and help teams deliver high-quality integrations more efficiently, regardless of their experience level.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1278303594"&gt;&lt;FONT size="4" color="#000000"&gt;&lt;U&gt;&lt;STRONG&gt;Enhance Operational Excellence&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Operational reliability is critical for scalable, enterprise-grade integration. SAP Integration Suite embeds AI to help teams proactively monitor, maintain, and optimize their integration landscapes, reducing manual troubleshooting and improving long-term performance.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/integration-blog-posts/api-anomaly-detection-in-sap-integration-suite/ba-p/13726636" target="_blank"&gt;&lt;STRONG&gt;&lt;SPAN&gt;API Anomaly Detection&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Leveraging machine learning, the platform continuously monitors integration flows and APIs to detect unusual patterns, such as latency spikes, increased error rates, or unexpected traffic surges. This helps teams identify and address issues before they impact business processes, improving response time and reducing downtime.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="anomalydetection.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304139i2D08AB462C650953/image-size/large?v=v2&amp;amp;px=999" role="button" title="anomalydetection.png" alt="anomalydetection.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/integration-blog-posts/leveraging-api-traffic-predictions-in-sap-integration-suite/ba-p/14012084" target="_blank"&gt;&lt;STRONG&gt;API Volume Prediction&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;AI models analyze historical usage patterns to forecast, providing two distinct insights: one on historical usage trends and the other on predicted future volumes. The dual view helps developers and operations teams stay ahead of peak loads and avoid capacity-related disruptions, ensuring both long-term planning and real-time operational awareness.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/generative-ai-based-script-optimization/ba-p/13970403" target="_blank"&gt;&lt;STRONG&gt;Script Optimization&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;Generative AI analyzes custom Groovy or JavaScript scripts used in integration flows, identifying potential performance bottlenecks or inefficiencies. It then recommends optimized versions of the code, enabling developers to improve execution quality without deep manual debugging or rewriting.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;By embedding these intelligent capabilities, SAP Integration Suite supports a more proactive, data-driven approach to integration operations, allowing teams to deliver higher reliability with less overhead.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-952707370"&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration Suite for AI: Enabling the Next Generation of Intelligent Automation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;As the enterprise landscape evolves, agentic AI is emerging as a new class of autonomous systems that can reason, interact, and execute tasks on behalf of users. This shift is driving demand for more adaptable and intelligent integration backbones. To function effectively, these AI agents must be able to connect with enterprise systems, orchestrate business logic, access data, and execute workflows securely and reliably. This is where SAP Integration Suite becomes essential. It not only embeds AI to optimize development and operations, but also plays a foundational role in enabling agentic AI by providing the connective fabric that links intelligent agents with business applications and services.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Across the industry, we‚Äôre seeing a growing push toward agent-centric automation, from AI copilots to autonomous digital workers, and integration is the linchpin that determines whether these agents can truly act in context. SAP Integration Suite helps enterprises bridge this gap with built-in capabilities that simplify how AI agents discover, consume, and govern enterprise integrations.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Here are two ways it already supports this shift:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/ai-adapter-for-sap-integration-suite/ba-p/14175843" target="_blank"&gt;&lt;STRONG&gt;AI Adapter&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;The AI Adapter enables seamless communication between SAP Integration Suite and &lt;/SPAN&gt;&lt;SPAN&gt;generative AI services, provided by &lt;/SPAN&gt;&lt;SPAN&gt;SAP‚Äôs AI Core or third-party providers like OpenAI. With minimal configuration, developers can embed AI capabilities, such as text generation, summarization, or classification, directly into integration flows.&amp;nbsp;&lt;/SPAN&gt;This makes it easier to enrich payloads with contextual insights, automate decision logic, and integrate AI-driven functionality within a governed framework. By removing the need for custom scripting or API handling, the AI Adapter boosts developer efficiency and expands the scope for advanced AI-powered use cases&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://api.sap.com/integrations/discoverintegrations" target="_blank" rel="noopener noreferrer"&gt;AI-Powered Content Recommendations in Business Accelerator Hub&lt;/A&gt; &lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;To help agents and developers access the right integration assets quickly, the SAP Business Accelerator Hub &lt;/SPAN&gt;features Joule &lt;SPAN&gt;for natural language search. Instead of browsing manually, users (or agents in the future) can ask questions like ‚ÄúHow do I connect SAP S/4HANA to Salesforce?‚Äù and receive tailored recommendations across integration flows, APIs, and templates.&amp;nbsp;&lt;/SPAN&gt;This AI-driven discovery process reduces time to integration and enhances reusability, which is the key requirement for agent-based automation where responsiveness and adaptability are critical.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Elaine_w_2-1755899230088.png" style="width: 928px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304138iE28D775208063670/image-dimensions/928x568?v=v2" width="928" height="568" role="button" title="Elaine_w_2-1755899230088.png" alt="Elaine_w_2-1755899230088.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-756193865"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-559680360"&gt;&lt;FONT size="5" color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Where We‚Äôre Heading&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;The evolution of AI in SAP Integration Suite is accelerating, expanding beyond foundational productivity and monitoring features into more adaptive, intelligent, and autonomous integration experiences.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;On the embedded AI front, we‚Äôre advancing how integrations are designed, optimized, and managed. Expect more powerful capabilities for automating integration development and API operations, along with intelligent migration from legacy systems like SAP Process Orchestration. These innovations are designed to further boost developer efficiency, reduce operational overhead, and &lt;/SPAN&gt;&lt;SPAN&gt;reduce time to cloud&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;At the same time, SAP Integration Suite is evolving to support agent-driven automation. As&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;part of this direction, we plan to enhance the API Management to allow AI systems to interact with enterprise tools and data. This will enable more dynamic, context-aware automation, built on a foundation of governance, scalability and future readiness.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;In the upcoming blogs, we‚Äôll explore each of the two directions in depth, highlighting real-world use cases, customer stories, and innovations that are redefining integration in the era of AI.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/realizing-ai-s-potential-in-and-through-sap-integration-suite/ba-p/14193578"/>
    <published>2025-08-29T12:23:42.890000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/demystifying-the-oauth2-saml-bearer-assertion-usage-in-sap-integration/ba-p/14177915</id>
    <title>Demystifying the OAuth2 SAML Bearer Assertion usage in SAP Integration Suite</title>
    <updated>2025-09-08T05:34:05.936000+02:00</updated>
    <author>
      <name>vinayak_adkoli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/216068</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1737037167"&gt;1. Introduction:&lt;/H2&gt;&lt;P&gt;In the rapidly evolving landscape of enterprise integration, authentication and authorization are no longer mere checkpoints ‚Äî they are the guardians of trust between systems. Within SAP Integration Suite, the &lt;STRONG&gt;OAuth 2.0 SAML Bearer Assertion &amp;amp; JWT Bearer grant types&lt;/STRONG&gt; stand out as a &lt;U&gt;powerful&lt;/U&gt; yet often &lt;U&gt;less-understood&lt;/U&gt; mechanisms for secure API access, especially in hybrid enterprise landscapes where &lt;U&gt;user identity&lt;/U&gt; is federated across multiple systems.&lt;/P&gt;&lt;P&gt;If you have ever stared at an &lt;U&gt;&lt;EM&gt;urn:ietf:params:oauth:grant-type:saml2-bearer&lt;/EM&gt;&lt;/U&gt;&amp;nbsp;or&amp;nbsp;&lt;U&gt;&lt;EM&gt;urn:ietf:params:oauth:grant-type:jwt-bearer&lt;/EM&gt;&lt;/U&gt; parameter as a supported grant type and wondered &lt;EM&gt;how this elegant string actually translates into a trusted access token&lt;/EM&gt;, you are not alone. Many integration developers and security practitioners have encountered it ‚Äî often through trial, error, and a bit of documentation spelunking.&lt;/P&gt;&lt;P&gt;In this article, we‚Äôll go beyond the surface. We‚Äôll explore:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;What OAuth2.0 SAML Bearer Assertion is really doing under the hood&lt;/STRONG&gt; ‚Äî and why it exists in the first place.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;How this plays into SAP Integration Suite‚Äôs XSUAA and the broader BTP security model&lt;/STRONG&gt;, particularly in securing IFlows and APIs within SAP Integration Suite.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Practical configuration patterns and gotchas&lt;/STRONG&gt; that can save you hours of troubleshooting.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;A few examples&lt;/STRONG&gt;&amp;nbsp;of exchanging a signed SAML assertion for an OAuth access token, demystifying the process step by step.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1540523662"&gt;&lt;STRONG&gt;2. When is the OAuth2.0 SAML Bearer Assertion relevant for an Integration Developer?&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Traditionally, most communication handled by &lt;STRONG&gt;Cloud Integration&lt;/STRONG&gt; has been &lt;STRONG&gt;system-to-system&lt;/STRONG&gt;, where a technical client or application authenticates itself, and the &lt;STRONG&gt;user context&lt;/STRONG&gt; is irrelevant. In such scenarios, the &lt;STRONG&gt;Client Credentials&lt;/STRONG&gt; grant type has been sufficient, since all that mattered was verifying that the calling system was trusted.&lt;/P&gt;&lt;P&gt;But this picture is evolving. Today, &lt;STRONG&gt;IFlows and APIs are two sides of the same coin&lt;/STRONG&gt;: while IFlows orchestrate integration logic, APIs expose functionality that must often act on behalf of a specific user. Increasingly, organizations expect &lt;STRONG&gt;end-user identity and authorizations&lt;/STRONG&gt; established in one system (e.g., via a corporate IdP or another SAP application) to be &lt;STRONG&gt;seamlessly propagated into Cloud Integration&lt;/STRONG&gt; and carried forward all the way to the backend system.&lt;/P&gt;&lt;P&gt;This is exactly where the &lt;STRONG&gt;OAuth 2.0 SAML Bearer Assertion&lt;/STRONG&gt; grant type becomes relevant. It provides a standards-based mechanism to exchange a trusted user identity assertion for an access token in Cloud Integration. That access token can then be forwarded downstream, ensuring that the &lt;STRONG&gt;original user‚Äôs context&lt;/STRONG&gt; ‚Äî along with their authorizations ‚Äî is preserved across system boundaries.&lt;/P&gt;&lt;P&gt;For the integration developer, this means that Cloud Integration is no longer just a technical middleware layer. It becomes an active participant in &lt;STRONG&gt;identity propagation&lt;/STRONG&gt;, enabling end-to-end security models that align with enterprise zero-trust principles and modern API-driven architectures.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;üìå&lt;/span&gt;To demonstrate the concepts required for achieving identity propagation, this article utilizes the SAP Cloud Connector, X.509 certificates, and backend configurations that I have already explained in detail in &lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/unravelling-the-technical-user-propagation-scenarios-in-sap-integration/ba-p/14182016?utm_source=chatgpt.com" target="_new"&gt;my earlier blog post on technical user propagation&lt;/A&gt;. While that post specifically focuses on &lt;STRONG&gt;technical user&lt;/STRONG&gt; propagation, the configuration steps are not very different for the &lt;STRONG&gt;user propagation&lt;/STRONG&gt; scenario described here. I therefore recommend that readers familiarize themselves with those concepts first, as they provide a solid foundation for this discussion.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;üìå&lt;/span&gt;One of the scenarios in &lt;STRONG&gt;this&lt;/STRONG&gt; blog post will also refer back to the earlier article to highlight the applicability of the &lt;STRONG&gt;authorization code grant type&lt;/STRONG&gt; in Cloud Integration‚Äîparticularly when authorizing users from a corporate IdP such as Entra ID, using &lt;STRONG&gt;OpenID Connect&lt;/STRONG&gt;‚Äìbased federation in conjunction with &lt;STRONG&gt;SAP Cloud Identity Services (SAP IAS)&lt;/STRONG&gt;. For a broader perspective, I also suggest referring to &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/single-sign-on-to-sap-cloud-integration-cpi-runtime-from-an-external/ba-p/13655108?utm_source=chatgpt.com" target="_self"&gt;my linked blog post&lt;/A&gt;, which explains single sign-on to SAP Cloud Integration runtime from an external application.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Taken together, these resources provide a complete 360-degree view of securing and implementing user-linked flows in SAP Integration Suite.&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-1344010157"&gt;&lt;STRONG&gt;3. Full support for OAuth2.0 SAML Bearer Assertion in Cloud Integration&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;It is important to emphasize that SAP Cloud Integration fully supports the OAuth2 SAML Bearer Assertion flow both at the '&lt;STRONG&gt;sender'&lt;/STRONG&gt;&amp;nbsp;and at the '&lt;STRONG&gt;receiver' side&lt;/STRONG&gt;.&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;On the &lt;STRONG&gt;inbound side&lt;/STRONG&gt;, Cloud Integration can authenticate and authorize incoming requests based on the &lt;STRONG&gt;user‚Äôs identity&lt;/STRONG&gt;, ensuring that calls made to IFlows are evaluated not just at the technical client level but also with the context of the end user. This enables developers to enforce fine-grained authorization rules and maintain auditability of user actions.&amp;nbsp;&lt;BR /&gt;The following simplified illustration shows how OAuth2 SAML and JWT Bearer grants act as the enablers that make this flow possible.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DIAGRAM 1.drawio.png" style="width: 450px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307579iEC0BC1F28C5D7290/image-size/large?v=v2&amp;amp;px=999" role="button" title="DIAGRAM 1.drawio.png" alt="DIAGRAM 1.drawio.png" /&gt;&lt;/span&gt;&lt;BR /&gt;You can specify these grant types while creating a service instance for the &lt;EM&gt;Process Integration Runtime.&lt;/EM&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Here's an example snippet to create a service instance with the SAMLBearer and JWTBearer grant types" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306947i83528CB7C87A87A6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-29 at 9.01.40‚ÄØPM.png" alt="Here's an example snippet to create a service instance with the SAMLBearer and JWTBearer grant types" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Here's an example snippet to create a service instance with the SAMLBearer and JWTBearer grant types&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;On the &lt;STRONG&gt;outbound side&lt;/STRONG&gt;, Cloud Integration can establish an &lt;STRONG&gt;OAuth2 SAML Bearer Assertion&lt;/STRONG&gt; when calling downstream systems such as &lt;STRONG&gt;SAP SuccessFactors, SAP S/4HANA Cloud,&amp;nbsp; S/4HANA On-Premise&lt;/STRONG&gt; (wrapped under the familiar &lt;STRONG&gt;Principal Propagation&lt;/STRONG&gt; pattern), etc.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DIAGRAM 2.drawio.png" style="width: 450px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307580iD6FA24559A181645/image-size/large?v=v2&amp;amp;px=999" role="button" title="DIAGRAM 2.drawio.png" alt="DIAGRAM 2.drawio.png" /&gt;&lt;/span&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; This capability is not new. Even in the days of &lt;STRONG&gt;Neo&lt;/STRONG&gt;, Cloud Integration has supported the &lt;STRONG&gt;OAuth2 SAML Bearer flow&lt;/STRONG&gt; for connecting to SAP SuccessFactors ‚Äî both through technical credentials and via user-based assertions using an email identifier. The topic has been well covered in the community, including several blog posts authored by my colleague, Deepak Deshpande. (&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-integration-principal-propagation-with-successfactors-odata-v2/ba-p/13368194" target="_self"&gt;here&lt;/A&gt; and &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-integration-oauth2-saml-bearer-x-509-certificate-authentication/bc-p/13501610" target="_self"&gt;here&lt;/A&gt;)&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-01 at 4.36.51‚ÄØPM.png" style="width: 386px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307572i9314CEF8EE52DBF2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-01 at 4.36.51‚ÄØPM.png" alt="Screenshot 2025-09-01 at 4.36.51‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Beyond this, any system within the BTP ecosystem that leverages the &lt;STRONG&gt;BTP Connectivity Service&lt;/STRONG&gt;‚Äîincluding &lt;STRONG&gt;S/4HANA Cloud&lt;/STRONG&gt;‚Äîcan take part in the identity propagation chain. In the sections that follow, we will explore some of the possibilities this enables, such as &lt;STRONG&gt;chaining into another iFlow&lt;/STRONG&gt; (within the same or a different subaccount) or invoking a service exposed through &lt;STRONG&gt;&lt;A href="https://help.sap.com/docs/integration-suite/transitioning-to-odata-provisioning-capability-in-sap-integration-suite/transitioning-odata-provisioning-from-sap-btp-serverless-runtime-to-sap-integration-suite" target="_self" rel="noopener noreferrer"&gt;OData&lt;/A&gt; Provisioning&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-01 at 4.42.11‚ÄØPM.png" style="width: 328px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307573i309866CD89F19087/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-01 at 4.42.11‚ÄØPM.png" alt="Screenshot 2025-09-01 at 4.42.11‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This dual capability positions Cloud Integration as a true enabler of &lt;STRONG&gt;end-to-end user identity propagation&lt;/STRONG&gt;, bridging the gap between modern identity-aware APIs and enterprise backend systems, while ensuring security models remain consistent across landscapes.&lt;/P&gt;&lt;H2 id="toc-hId-1147496652"&gt;&lt;STRONG&gt;4. Understanding the "&lt;EM&gt;SAML&lt;/EM&gt;" in OAuth2 SAML Bearer Assertion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The term OAuth2 SAML Bearer Assertion&amp;nbsp;(RFC:&amp;nbsp;&lt;A href="https://datatracker.ietf.org/doc/html/rfc7522" target="_blank" rel="noopener nofollow noreferrer"&gt;RFC 7522&lt;/A&gt;)&amp;nbsp;can often feel confusing at first glance, particularly with the placement of the word '&lt;STRONG&gt;SAML&lt;/STRONG&gt;'.&lt;/P&gt;&lt;P&gt;"&lt;EM&gt;Where is SAML in this picture?", &lt;/EM&gt;you may ask,&amp;nbsp; as practitioners know for a fact that SAP BTP is based on &lt;U&gt;OAuth2.0&lt;/U&gt; and &lt;U&gt;OIDC-based&lt;/U&gt; security standards. Let's unpack this.&lt;/P&gt;&lt;P&gt;Fundamentally, classical&lt;STRONG&gt; Identity Providers (IdP) &lt;/STRONG&gt;like Entra ID,&amp;nbsp;SAP IAS, or corporate ADFS are designed to issue signed &lt;EM&gt;assertions&lt;/EM&gt; asserting a user‚Äôs identity and attributes. These assertions are trusted pieces of information that downstream systems can use to authenticate a user without requiring them to re-enter credentials.&amp;nbsp; In addition, in an enterprise integration landscape, the Identity Provider role is &lt;U&gt;not limited&lt;/U&gt; to classical IdPs. Connectivity and middleware components themselves can also &lt;EM&gt;&lt;STRONG&gt;act as&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;an Identity Provider and trusted issuers of SAML assertions. The process of SAML to OAuth2 token exchange sequence is as follows :&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;The SAML assertion issued by the assumed Identity Provider acts as a '&lt;STRONG&gt;credential wrapper&lt;/STRONG&gt;' ‚Äî it carries the authenticated user identity, roles, and authorizations.&lt;/LI&gt;&lt;LI&gt;The &lt;STRONG&gt;Authorization Server&lt;/STRONG&gt; (in BTP Integration Suite tenant,&amp;nbsp; i.e., &lt;STRONG&gt;XSUAA&lt;/STRONG&gt;) consumes this signed assertion and, if trusted and valid, exchanges it for an OAuth 2.0 access token, per the RFC spec (&lt;A href="https://datatracker.ietf.org/doc/html/rfc7522" target="_blank" rel="noopener nofollow noreferrer"&gt;RFC 7522&lt;/A&gt;).&lt;/LI&gt;&lt;LI&gt;This access token, representing the user identity, can then be presented to the target system, which, based on its security directive, can &lt;STRONG&gt;authenticate&lt;/STRONG&gt; and &lt;STRONG&gt;authorize&lt;/STRONG&gt; the identity from the token.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Let's look at a few notable examples where this process is at play:&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-roman"&gt;&lt;LI&gt;The classical approach to setting up a SAML trust between an &lt;STRONG&gt;Identity Provider&lt;/STRONG&gt; and a &lt;STRONG&gt;Service Provider&lt;/STRONG&gt; lends itself to setting up for the OAuth2 bearer exchange flow, particularly between Entra ID and SAP BTP, based on the '&lt;U&gt;&lt;EM&gt;on-behalf-of&lt;/EM&gt;&lt;/U&gt;' directive. Explained so elegantly in these two blog posts authored by &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/principal-propagation-in-a-multi-cloud-solution-between-microsoft-azure-and/ba-p/13479950" target="_self"&gt;Martin&lt;/A&gt; and &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/principal-propagation-between-azure-ad-and-an-on-premise-sap-system-through/bc-p/13503735" target="_self"&gt;Niklas&lt;/A&gt;, respectively, applicable for services secured by the BTP XSUAA Service.&lt;BR /&gt;Note that this classical 'trust' setup also equally applies between, say, Entra ID and &lt;STRONG&gt;SAP NetWeaver&lt;/STRONG&gt; ABAP AS. Martin Pankraz and I demonstrated the setup in &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/integrating-low-code-solutions-with-microsoft-using-sap-integration-suite/ba-p/13789298" target="_self"&gt;this&lt;/A&gt; blog post.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP BTP Connectivity Service&lt;/STRONG&gt; can generate signed SAML assertions when bridging secure connections to backend systems. For example, the BTP Destination type '&lt;STRONG&gt;OAuth2SAMLBearerAssertion&lt;/STRONG&gt;' leverages this principal. See example below:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-01 at 4.46.21‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307574i4B305C0237472715/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-01 at 4.46.21‚ÄØPM.png" alt="Screenshot 2025-09-01 at 4.46.21‚ÄØPM.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;API Management's&lt;/STRONG&gt;&amp;nbsp;gateway acts as an identity provider that injects a user‚Äôs authenticated identity into a signed assertion to downstream services. Customers frequently use policy templates like &lt;A href="https://api.sap.com/policytemplate/SAPCloudFoundrySAML2OAuthFlow" target="_self" rel="noopener noreferrer"&gt;this&lt;/A&gt; one listed in the &lt;U&gt;API Business Accelerator Hub&lt;/U&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Integration&lt;/STRONG&gt; itself uses the BTP Connectivity Services' principles by providing out-of-the-box Security Materials that support OAuth2 SAML Bearer exchange. We'll get to more of this bit in this very blog post.&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This means that within the BTP ecosystem, the ability to &lt;EM&gt;mint&lt;/EM&gt; a signed SAML assertion is not confined to a single component but distributed across the connectivity and security services that are orchestrating secure communication flows.&lt;/P&gt;&lt;P&gt;Put simply, the "&lt;STRONG&gt;SAML&lt;/STRONG&gt;"&amp;nbsp;in OAuth2 SAML Bearer Assertion is the &lt;STRONG&gt;trusted identity assertion format&lt;/STRONG&gt; that enables one system to confidently vouch for a user‚Äôs identity to another. When combined with OAuth 2.0, it bridges the gap between &lt;STRONG&gt;user-centric authentication (SAML)&lt;/STRONG&gt; and &lt;STRONG&gt;token-based authorization (OAuth)&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;On that note, you may have come across the &lt;STRONG&gt;OAuth2 JWT Bearer&lt;/STRONG&gt; grant type as well. Let‚Äôs weave that into our context.&lt;/P&gt;&lt;H2 id="toc-hId-950983147"&gt;&lt;STRONG&gt;5. The OAuth2 JWT Bearer grant type&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;While the OAuth2 SAML Bearer grant type leverages a SAML 2.0 assertion to obtain an access token, its close cousin ‚Äî the &lt;STRONG&gt;OAuth2 JWT Bearer&lt;/STRONG&gt; grant type ‚Äî follows a similar token exchange pattern but uses a &lt;STRONG&gt;signed JSON Web Token (JWT)&lt;/STRONG&gt; instead of SAML. In the context of SAP BTP XSUAA, the JWT Bearer flow is often chosen when the identity assertion is already in JWT format, such as when integrating with systems that natively issue JWTs (e.g., other BTP applications, certain identity providers, or trusted microservices).&lt;/P&gt;&lt;P&gt;However, for the purposes of this article, we will not be focusing on the JWT Bearer approach. The reason is that &lt;STRONG&gt;SAP Cloud Integration only partially supports it&lt;/STRONG&gt; ‚Äî JWT Bearer can be used when authenticating inbound requests to an iFlow, but it is &lt;STRONG&gt;not available as a selectable option in the ‚ÄúSecurity Material‚Äù&lt;/STRONG&gt; when making outbound calls from Cloud Integration to a target system. As such, its utility is currently more limited in end-to-end integration scenarios compared to the SAML Bearer flow.&lt;/P&gt;&lt;H2 id="toc-hId-754469642"&gt;&lt;STRONG&gt;6. Configurations needed to achieve OAuth2 SAML Bearer exchange&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Since we are on the topic of the role of &lt;STRONG&gt;Identity Providers&lt;/STRONG&gt; (&lt;EM&gt;actual&lt;/EM&gt; or &lt;EM&gt;assumed&lt;/EM&gt;) during an OAuth2 SAML Bearer handshake, let us weave in the role of the &lt;STRONG&gt;Trust Configuration&lt;/STRONG&gt; setting in the BTP Cockpit ‚Äî a subject that is often less understood in the context of SAP Integration Suite.&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;EM&gt;Why is this less understood?&lt;/EM&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;In BTP landscapes, the &lt;EM&gt;Trust Configuration&lt;/EM&gt; in the cockpit is primarily associated with &lt;STRONG&gt;browser-based BTP applications&lt;/STRONG&gt; that require coupling between an &lt;STRONG&gt;Identity Provider (IdP)&lt;/STRONG&gt; (such as SAP IAS or a corporate IdP) and the &lt;STRONG&gt;Service Provider (SP)&lt;/STRONG&gt; role of the application. This trust relationship governs how users log in interactively to applications and how their identities are federated.&lt;/P&gt;&lt;P&gt;This implies that at the &lt;STRONG&gt;design time (UI) level&lt;/STRONG&gt;, configuring the Trust relationship ensures that developers and administrators can access the Integration Suite tools via their corporate IDP.&lt;/P&gt;&lt;P&gt;However, customers often struggle to apply the same concept when it comes to the &lt;STRONG&gt;runtime&lt;/STRONG&gt; ‚Äî where iFlows and APIs need to be authenticated and authorized via &lt;STRONG&gt;user identities&lt;/STRONG&gt;. This is precisely where dialing in the &lt;STRONG&gt;correct runtime configurations for OAuth2 SAML Bearer exchange&lt;/STRONG&gt; becomes critical.&lt;/P&gt;&lt;P&gt;To keep this practical, let‚Äôs break the discussion into multiple scenarios and examine the configurations required for each. Here is a table that captures the different scenarios covered in this blog post :&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="17.02470461868958%"&gt;Scenario 1&lt;/TD&gt;&lt;TD width="82.97529538131043%"&gt;&amp;nbsp;[INBOUND] Invoking an IFlow via BTP Destination / Connectivity Service&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="17.02470461868958%"&gt;Scenario 2 variant 1&lt;/TD&gt;&lt;TD width="82.97529538131043%"&gt;&lt;P&gt;Scenario 1 + [OUTBOUND] Using Security Material to make an outbound OAuth2 SAML Bearer call&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="17.02470461868958%"&gt;Scenario 2 variant 2&lt;/TD&gt;&lt;TD width="82.97529538131043%"&gt;&amp;nbsp;Authorization Code grant type&amp;nbsp; +&amp;nbsp;[OUTBOUND] Using Security Material to make an outbound OAuth2 SAML Bearer call&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H4 id="toc-hId-816121575"&gt;6.1. Scenario 1: [INBOUND] Invoking an IFlow via a BTP Destination:&lt;/H4&gt;&lt;P&gt;There are use cases where a &lt;STRONG&gt;Fiori/UI5 application&lt;/STRONG&gt; deployed on BTP uses a destination to call an IFlow, ensuring the user‚Äôs identity (via OAuth2 SAML Bearer) is securely propagated into the integration layer. Similarly, &lt;STRONG&gt;SAP Build Process Automation&lt;/STRONG&gt; can leverage destinations in its Actions framework to trigger IFlows as part of an automated workflow, often requiring identity propagation so that downstream systems know which user initiated the process. Beyond these, other scenarios include &lt;STRONG&gt;SAP Work Zone&lt;/STRONG&gt; or &lt;STRONG&gt;SAP Launchpad&lt;/STRONG&gt; extensions invoking integration services, as well as custom applications running in the Cloud Foundry runtime consuming iFlows via destinations.&lt;/P&gt;&lt;P&gt;In practice, customers often face challenges in identifying the correct configurations to make this scenario work. Below is a detailed cluster of the configurations involved.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;OAuth token endpoint address:&lt;/STRONG&gt; Customers often assume the default '&lt;EM&gt;.../oauth/token&lt;/EM&gt;' endpoint applies universally, but this is not the case. OAuthSAMLBearer looks for the '.../&lt;EM&gt;oauth/token/alias/&lt;/EM&gt;' endpoint.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Exchange of trust between subaccounts&lt;/STRONG&gt; where the services reside.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Implicit trust within the same subaccount:&lt;/STRONG&gt; Even if both services are in the same subaccount, an implicit trust relationship must still be established. This small step can save hours of troubleshooting.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BTP Destination and Integration Flow&lt;/STRONG&gt; settings to support OAuth2 SAML Bearer handshake.&lt;/LI&gt;&lt;LI&gt;A quick walkthrough of the &lt;STRONG&gt;SAP Business Application Studio&lt;/STRONG&gt; template wizard building blocks, enabling an SAP Fiori application to validate everything completed so far.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Here is a solution blueprint of what we will put together:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iflow diagrams-Page-4.drawio.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309417iB09768E7A05C5824/image-size/large?v=v2&amp;amp;px=999" role="button" title="iflow diagrams-Page-4.drawio.png" alt="iflow diagrams-Page-4.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let‚Äôs review these configurations step by step.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;1. &lt;STRONG&gt;OAuth token alias endpoint.&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="9.595417114214108%"&gt;&lt;H4 id="toc-hId-619608070"&gt;Step No&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;H4 id="toc-hId-423094565"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="49.23021840315074%"&gt;&lt;H4 id="toc-hId-226581060"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.595417114214108%"&gt;1.&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;Download the '&lt;STRONG&gt;SAML Metadata&lt;/STRONG&gt;' from the '&lt;STRONG&gt;Trust Configuration&lt;/STRONG&gt;' section of your BTP Cockpit&lt;/TD&gt;&lt;TD width="49.23021840315074%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 6.36.56‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308275i5AE7A4A3711E75A1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 6.36.56‚ÄØPM.png" alt="Screenshot 2025-09-02 at 6.36.56‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.595417114214108%"&gt;2.&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;Locate and copy the value of the '&lt;STRONG&gt;entityID&lt;/STRONG&gt;' element from the downloaded XML file&lt;/TD&gt;&lt;TD width="49.23021840315074%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 6.39.08‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308276i4FFF8592D4B0944B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 6.39.08‚ÄØPM.png" alt="Screenshot 2025-09-02 at 6.39.08‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.595417114214108%"&gt;3.&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;P&gt;Locate and copy the '&lt;STRONG&gt;Location&lt;/STRONG&gt;' element. There are multiple attributes present; make sure you copy the one that contains the '&lt;U&gt;&lt;EM&gt;.../oauth/token/alias/...&lt;/EM&gt;&lt;/U&gt;' URL pattern.&lt;/P&gt;&lt;P&gt;This will be the token endpoint we will use in subsequent configuration screens.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="49.23021840315074%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 6.38.57‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308277i660CDC65954D97C8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 6.38.57‚ÄØPM.png" alt="Screenshot 2025-09-02 at 6.38.57‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;2. &amp;amp; 3.&amp;nbsp;&lt;STRONG&gt;Exchange of Trust between subaccount / Implicit trust within the same subaccount.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Follow the instructions in this BTP&amp;nbsp;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/user-propagation-between-cloud-foundry-applications" target="_blank" rel="noopener noreferrer"&gt;help guide&lt;/A&gt;: construct the &lt;EM&gt;EntityDescriptor&lt;/EM&gt; metadata exactly as specified and upload it as &lt;STRONG&gt;Trusted Metadata&lt;/STRONG&gt; in your target subaccount‚Äînamely, the subaccount hosting the Integration Suite.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="9.917651271034732%"&gt;&lt;H4 id="toc-hId--467649540"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="41.38918725384891%"&gt;&lt;H4 id="toc-hId--664163045"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;H4 id="toc-hId--860676550"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;1&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Identify your &lt;STRONG&gt;source&lt;/STRONG&gt; and &lt;STRONG&gt;target&lt;/STRONG&gt; subaccounts, and carefully construct the &lt;U&gt;&lt;EM&gt;EntityDescriptor&lt;/EM&gt;&lt;/U&gt; snippet using the settings provided in the &lt;EM&gt;User Propagation between Cloud Foundry Applications&lt;/EM&gt; guide.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;üí°&lt;/span&gt;Note:&lt;/STRONG&gt; As mentioned earlier, this step is required even if the source and target services reside within the same BTP subaccount. In such cases, the configuration establishes a &lt;STRONG&gt;self-trust&lt;/STRONG&gt; relationship.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 10.07.06‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308287iF754F3C69D008E4C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 10.07.06‚ÄØPM.png" alt="Screenshot 2025-09-02 at 10.07.06‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.917651271034732%"&gt;2.&lt;/TD&gt;&lt;TD width="41.38918725384891%"&gt;Go to the &lt;STRONG&gt;Destination Trust&lt;/STRONG&gt; section in your BTP Cockpit of the source subaccount and import the &lt;STRONG&gt;Active Trust Certificate&lt;/STRONG&gt;. In addition, follow the recommended best practices to set up a &lt;U&gt;Passive Trust Certificate&lt;/U&gt; as well, ensuring a smooth switchover and preventing disruptions when the active certificate approaches expiry.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 8.47.32‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308280iC2E9C01380F70775/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 8.47.32‚ÄØPM.png" alt="Screenshot 2025-09-02 at 8.47.32‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.917651271034732%"&gt;3.&lt;/TD&gt;&lt;TD width="41.38918725384891%"&gt;Here is a snapshot of the &lt;EM&gt;EntityDescriptor&lt;/EM&gt; file taken from my account configuration.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 9.52.14‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308281i05AADBAD5A5639CE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 9.52.14‚ÄØPM.png" alt="Screenshot 2025-09-02 at 9.52.14‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Upload the prepared file by clicking on the '&lt;STRONG&gt;New SAML Trust Configuration&lt;/STRONG&gt;' button in your target subaccount.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;üí°&lt;/span&gt;Disable the &lt;STRONG&gt;Available for User Logon&lt;/STRONG&gt; and &lt;STRONG&gt;Create Shadow User&lt;/STRONG&gt; options. Disabling the latter ensures that only pre-onboarded users are propagated, which is more secure than allowing all users to be automatically created and propagated.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 3.40.27‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308283iB785E7D1666F62BB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 3.40.27‚ÄØPM.png" alt="Screenshot 2025-09-02 at 3.40.27‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;Because we disabled shadow user creation, go to the &lt;STRONG&gt;Users&lt;/STRONG&gt; section and explicitly &lt;STRONG&gt;create&lt;/STRONG&gt; the users that need to be propagated.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 10.00.34‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308285iFAD3B00705F35C11/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 10.00.34‚ÄØPM.png" alt="Screenshot 2025-09-02 at 10.00.34‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&lt;/TD&gt;&lt;TD&gt;Once the user has been created, we still need to ensure that the necessary roles and scopes from the source token are available for propagation. There are two ways to achieve this. The simplest approach is to assign the newly created user to a &lt;STRONG&gt;Role Collection&lt;/STRONG&gt; that includes the &lt;STRONG&gt;MessagingSend&lt;/STRONG&gt; role.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 10.02.52‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308286iA296EAE7B3FCC306/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 10.02.52‚ÄØPM.png" alt="Screenshot 2025-09-02 at 10.02.52‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;7.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;Rather than explicitly assigning individual users to a role collection, a more elegant approach is to map a &lt;STRONG&gt;group&lt;/STRONG&gt; from the identity provider to the desired role collection. This ensures that the corresponding scopes from the original token are automatically granted to the user principal in the target token as well.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 2.13.33‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308793i01FE56174ABF9DFD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 2.13.33‚ÄØPM.png" alt="Screenshot 2025-09-03 at 2.13.33‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;4. &lt;STRONG&gt;BTP Destination and IFlow settings:&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;H4 id="toc-hId--1057190055"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD&gt;&lt;H4 id="toc-hId--1253703560"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD&gt;&lt;H4 id="toc-hId--1450217065"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.59541711421411%"&gt;1.&lt;/TD&gt;&lt;TD width="42.248478338703904%"&gt;Create a &lt;EM&gt;service instance&lt;/EM&gt; of the Process Integration Runtime, selecting only the &lt;STRONG&gt;saml2-bearer&lt;/STRONG&gt; grant type. This configuration strengthens IFlow security by &lt;U&gt;preventing&lt;/U&gt; the use of other grant types (such as client credentials or password).&lt;/TD&gt;&lt;TD width="48.156104547081995%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 11.07.27‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308306i83FC90AF422C1069/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 11.07.27‚ÄØPM.png" alt="Screenshot 2025-09-02 at 11.07.27‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.59541711421411%"&gt;2.&amp;nbsp;&lt;/TD&gt;&lt;TD width="42.248478338703904%"&gt;&lt;P&gt;Make sure to create a BTP Destination in the 'source' subaccount (i.e., the subaccount that hosts the client app). I've highlighted the key settings.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;U&gt;URL&lt;/U&gt; - The target IFlow's runtime host alias.&lt;BR /&gt;&lt;U&gt;Audience&lt;/U&gt; - the entityID captured in step 6.1.1.2.&lt;BR /&gt;&lt;U&gt;Token Service URL&lt;/U&gt; - the '&lt;EM&gt;/oauth/token/alias&lt;/EM&gt;' endpoint as explained above.&lt;BR /&gt;&lt;U&gt;includeAttributes&lt;/U&gt; = true. This is needed to support the Identity Provider group assignment demonstrated in step 6.1.2.7.&lt;BR /&gt;&lt;U&gt;nameIDFromat&lt;/U&gt; = 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress' to support the propagation of email address&lt;/P&gt;&lt;/TD&gt;&lt;TD width="48.156104547081995%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 2.49.43‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308796i378B3130FF2E7458/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 2.49.43‚ÄØPM.png" alt="Screenshot 2025-09-03 at 2.49.43‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;3.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;To demonstrate an end-to-end flow, I‚Äôve created an IFlow that uses an &lt;STRONG&gt;OData V2&lt;/STRONG&gt; adapter at both the Sender and Receiver. This approach was chosen because SAP Business Application Studio makes it straightforward to build a Fiori app that consumes an OData service.&lt;/P&gt;&lt;P&gt;This first variant of the receiver adapter connects to an S/4HANA On-premise backend using &lt;STRONG&gt;&lt;EM&gt;principal propagation&lt;/EM&gt;&lt;/STRONG&gt;. It demonstrates how an inbound OAuth2 SAML Bearer assertion grant type carries the full user context, which can then be propagated downstream.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 11.59.45‚ÄØAM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308771i6343E452F0A8F074/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 11.59.45‚ÄØAM.png" alt="Screenshot 2025-09-03 at 11.59.45‚ÄØAM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;The second receiver adapter variant connects to an S/4HANA Cloud system using &lt;EM&gt;&lt;STRONG&gt;OAuth2 SAML Bearer&lt;/STRONG&gt;&lt;/EM&gt; security material. While we will cover this approach in the next scenario, the detailed configuration within the S/4HANA backend lies outside the scope of this blog post.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 12.01.41‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308772iE6AFD6D9B904270E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 12.01.41‚ÄØPM.png" alt="Screenshot 2025-09-03 at 12.01.41‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;To test the settings, let‚Äôs shift focus to &lt;STRONG&gt;SAP Business Application Studio (BAS)&lt;/STRONG&gt; in the source subaccount, where we‚Äôll build a small app that connects through the BTP Destination to the IFlow running in the target subaccount, using the OAuth2 SAML Bearer bridge. Note that we are using the BAS only as a means to simulate the &lt;STRONG&gt;user login&lt;/STRONG&gt; experience.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 1.15.40‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308797iB85B7CE9B836271D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 1.15.40‚ÄØPM.png" alt="Screenshot 2025-09-03 at 1.15.40‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&lt;/TD&gt;&lt;TD&gt;If you encounter an error code 500 and notice no entries showing that the IFlow was invoked (for example, in the &lt;STRONG&gt;HTTP Access Log&lt;/STRONG&gt;), it most likely indicates that the token exchange failed. In this case, review the configuration steps carefully to ensure accuracy.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 3.21.08‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308309i20DF552A9ACB3138/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 3.21.08‚ÄØPM.png" alt="Screenshot 2025-09-02 at 3.21.08‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;7.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;When all configurations are correctly set, the &lt;STRONG&gt;Next&lt;/STRONG&gt; button becomes enabled. This confirms that the system successfully retrieved the OData metadata by querying the backend through the configured destination type. In the Application Wizard template block‚Äôs Output console, you can see the call dispatched to the Integration Flow, which can also be verified in the Message Processing Logs (MPL)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 4.09.32‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308310i15AEADDD1398B38E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 4.09.32‚ÄØPM.png" alt="Screenshot 2025-09-02 at 4.09.32‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;8.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;While this successfully concludes our demonstration, feel free to complete the Wizard and run/deploy the generated application to see the end-to-end response light up.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;‚úÖ&lt;/span&gt;This completes one successful round-trip.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 12.35.27‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309454i37AC93F42AF02418/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 12.35.27‚ÄØPM.png" alt="Screenshot 2025-09-04 at 12.35.27‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H4 id="toc-hId--1646730570"&gt;&amp;nbsp;&lt;/H4&gt;&lt;H4 id="toc-hId--1843244075"&gt;6.2. Scenario 2:&amp;nbsp; [OUTBOUND] Using Security Material to make an outbound OAuth2 SAML Bearer call&lt;/H4&gt;&lt;P&gt;As described in section &lt;U&gt;3.b.2&lt;/U&gt;, we will now focus on leveraging Cloud Integration‚Äôs capability to use the generic OAuth2 SAML Bearer security material, rather than the ones targeting SuccessFactors, as they are already well covered in the community.&lt;/P&gt;&lt;P&gt;One might ask: &lt;EM&gt;how do we set up an environment that makes it simple to simulate and test the user flow&lt;/EM&gt;? The good news is that Scenario 1 has already given us the &lt;STRONG&gt;user interaction&lt;/STRONG&gt; layer. All we need to do now is &lt;STRONG&gt;chain&lt;/STRONG&gt; the IFlow we created earlier with another one, letting the &lt;STRONG&gt;outbound of the first serve as the inbound&lt;/STRONG&gt; of the second. This allows us to validate the flow end-to-end in both directions.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="a53ju9.jpg" style="width: 500px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309423iC989A0F6078E14D1/image-size/large?v=v2&amp;amp;px=999" role="button" title="a53ju9.jpg" alt="a53ju9.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To keep the discourse engaging, we will explore yet another variant for testing the outbound OAuth2 SAML Bearer setup. Here, we‚Äôll use Cloud Integration‚Äôs capability to trigger an &lt;STRONG&gt;Authorization Code&lt;/STRONG&gt; grant type exchange, simulating a real user login, and then build on that to invoke the OAuth2 SAML Bearer method.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6.2.1. Scenario 2 - Variant 1:&lt;/STRONG&gt;&lt;BR /&gt;Here's the solution blueprint of the first variant, where we extend scenario 1 and &lt;EM&gt;chain&lt;/EM&gt; an intermediate IFlow with the main IFlow.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iflow diagrams-Page-5.drawio.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309471i90104E0050C12D36/image-size/large?v=v2&amp;amp;px=999" role="button" title="iflow diagrams-Page-5.drawio.png" alt="iflow diagrams-Page-5.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The sequence of events from the client to Business Application Studio follows the same pattern as in Scenario 1. The difference here is that instead of directly calling the &lt;STRONG&gt;main IFlow&lt;/STRONG&gt;,&amp;nbsp; we have intentionally introduced an &lt;STRONG&gt;intermediate IFlow&lt;/STRONG&gt; (step callout 1 in the blueprint above), which is configured with OAuth2 SAML Bearer security material to eventually connect with the &lt;STRONG&gt;&lt;EM&gt;main IFlow&lt;/EM&gt;&lt;/STRONG&gt;. Since the main IFlow accepts only the OAuth2 SAML grant type (step callout 2), this setup allows the connection to be seamlessly extended to the backend using Principal Propagation.&lt;/P&gt;&lt;P&gt;Regardless of whether the intermediate and main IFlows are in the same or separate subaccounts, a &lt;STRONG&gt;SAML trust&lt;/STRONG&gt; between the &lt;EM&gt;source&lt;/EM&gt; and &lt;EM&gt;target&lt;/EM&gt; is &lt;STRONG&gt;mandatory&lt;/STRONG&gt;, as highlighted in Procedure 2 of Scenario 1.&lt;/P&gt;&lt;P&gt;Let's take a look at the key configuration steps:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="9.760394644115578%" height="58px"&gt;&lt;H4 id="toc-hId--2039757580"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="42.84707540521494%" height="58px"&gt;&lt;H4 id="toc-hId-2058696211"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="47.39252995066949%" height="58px"&gt;&lt;H4 id="toc-hId-2030366397"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.760394644115578%" height="112px"&gt;1.&lt;/TD&gt;&lt;TD width="42.84707540521494%" height="112px"&gt;Notice that&amp;nbsp; I've created a metadata called '&lt;STRONG&gt;self-trust&lt;/STRONG&gt;' with the &lt;EM&gt;entityDescriptor&lt;/EM&gt; for the subaccount. In my case, both the &lt;U&gt;intermediate&lt;/U&gt; and &lt;U&gt;main&lt;/U&gt; IFlow are on the same Integration Suite tenant, hence the '&lt;U&gt;self&lt;/U&gt;' trust.&lt;/TD&gt;&lt;TD width="47.39252995066949%" height="112px"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 6.58.17‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309495i274DFF721C10DD9A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 6.58.17‚ÄØPM.png" alt="Screenshot 2025-09-04 at 6.58.17‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.760394644115578%" height="112px"&gt;2.&lt;/TD&gt;&lt;TD width="42.84707540521494%" height="112px"&gt;Create a security material of type OAuth2 SAML Bearer. Set the target system type as '&lt;STRONG&gt;SAP BTP (CF)&lt;/STRONG&gt;'.&amp;nbsp; For the attributes, use the same settings as the ones we used in step 6.1.4.2 of the previous scenario.&amp;nbsp;&lt;/TD&gt;&lt;TD width="47.39252995066949%" height="112px"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 12.52.25‚ÄØPM.png" style="width: 359px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309497i4554E1FD554EB476/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 12.52.25‚ÄØPM.png" alt="Screenshot 2025-09-04 at 12.52.25‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="57px"&gt;3.&lt;/TD&gt;&lt;TD height="57px"&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;üí°&lt;/span&gt;You may notice that under the hood, this internally generates a &lt;STRONG&gt;BTP Destination&lt;/STRONG&gt; in the subaccount with &lt;STRONG&gt;OAuth2SAMLBearer&lt;/STRONG&gt;.&lt;/TD&gt;&lt;TD height="57px"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 6.55.26‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309498i8678CFD7DE33806D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 6.55.26‚ÄØPM.png" alt="Screenshot 2025-09-04 at 6.55.26‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;Notice the change here on the IFlow we built in scenario 1 (step 3 of 6.1.4). Instead of directly calling the backend URL, we have turned this into an &lt;STRONG&gt;Intermediate&lt;/STRONG&gt; IFlow that chains into the final &lt;STRONG&gt;main&lt;/STRONG&gt; IFlow, with the authentication set to the &lt;STRONG&gt;OAuth2 SAML Bearer&lt;/STRONG&gt; security material created in step 2.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-05 at 4.54.30‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310242i141E3876406DA05F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-05 at 4.54.30‚ÄØPM.png" alt="Screenshot 2025-09-05 at 4.54.30‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;As you can verify in the screenshot, the &lt;STRONG&gt;main&lt;/STRONG&gt; IFlow is the one that invokes the backend with &lt;STRONG&gt;principal propagation&lt;/STRONG&gt;.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 1.25.41‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309499i0A1845A6E3E43015/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 1.25.41‚ÄØPM.png" alt="Screenshot 2025-09-04 at 1.25.41‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;Let's go back to the app we built in scenario 1 and refresh the page. We should see the UI populate with the expected recordset after successfully negotiating the flows across the chained &lt;STRONG&gt;intermediate&lt;/STRONG&gt; and &lt;STRONG&gt;main&lt;/STRONG&gt; IFlows all the way to the backend.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 12.35.27‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309515i2DD9B00B2A38C1D0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 12.35.27‚ÄØPM.png" alt="Screenshot 2025-09-04 at 12.35.27‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;As a confirmation step, look up the activity in the message processing logs (MPL) section, and you will see that both the intermediate and final IFlows were executed and in the right sequence.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 1.22.58‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309516iCA386F666893BE4E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 1.22.58‚ÄØPM.png" alt="Screenshot 2025-09-04 at 1.22.58‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6.2.2. Scenario 2 - Variant 2:&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;Rather than using &lt;STRONG&gt;Business Application Studio&lt;/STRONG&gt; as the user-centric app to trigger the intermediate IFlow, we will instead leverage the &lt;STRONG&gt;&lt;EM&gt;Authorization Code&lt;/EM&gt; &lt;/STRONG&gt;grant type. From a technical perspective, the Authorization Code flow differs from the OAuth2 SAML Bearer grant; however, in principle, both achieve the same outcome:&lt;STRONG&gt; propagating a user session&lt;/STRONG&gt; within an OAuth access token.&lt;/P&gt;&lt;P&gt;This raises the question‚Äî&lt;EM&gt;how do we introduce the Authorization Code grant flow? &lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Cloud Integration natively &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/deploying-oauth2-authorization-code" target="_self" rel="noopener noreferrer"&gt;supports&lt;/A&gt; the Authorization Code grant type as security material. While it was originally introduced to support adapters such as &lt;STRONG&gt;Dropbox&lt;/STRONG&gt; and &lt;STRONG&gt;Microsoft 365&lt;/STRONG&gt;, which rely on this flow, we can extend its utility further. By attaching this &lt;STRONG&gt;security material&lt;/STRONG&gt; to any outbound call through the &lt;STRONG&gt;HTTP Receiver adapter&lt;/STRONG&gt;‚Äîand applying a small amount of scripting (see step 6.2.2.3)‚Äîwe can retrieve an access token from the authorization code using the &lt;STRONG&gt;SecureStoreService&lt;/STRONG&gt; &lt;A href="https://help.sap.com/doc/471310fc71c94c2d913884e2ff1b4039/Cloud/en-US/com/sap/it/api/securestore/SecureStoreService.html#getAccesTokenForOauth2AuthorizationCodeCredential-java.lang.String-" target="_self" rel="noopener noreferrer"&gt;API.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Here is a solution blueprint of what we aim to achieve:&lt;BR /&gt;For simplicity, a &lt;STRONG&gt;timer-based IFlow&lt;/STRONG&gt; will initiate an outbound call to the &lt;U&gt;intermediate&lt;/U&gt; IFlow, attaching an access token extracted from the security material (constructed via the &lt;STRONG&gt;authorization code&lt;/STRONG&gt; exchange)&amp;nbsp; that represents an authenticated user. This user may either be provisioned through the default Cloud Identity Service or authenticated via a corporate IdP such as Entra ID, as outlined in one of my &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/single-sign-on-to-sap-cloud-integration-cpi-runtime-from-an-external/ba-p/13655108" target="_self"&gt;earlier&lt;/A&gt; blog posts. The interaction sequence between the intermediate IFlow and the final IFlow remains unchanged.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iflow diagrams-Page-3.drawio.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310626i1029D34621866527/image-size/large?v=v2&amp;amp;px=999" role="button" title="iflow diagrams-Page-3.drawio.png" alt="iflow diagrams-Page-3.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.2.2.1 First, let's go over the configuration steps to establish the authorization code:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="9.702828499820981%"&gt;&lt;H4 id="toc-hId-1833852892"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="43.1077694235589%"&gt;&lt;H4 id="toc-hId-1637339387"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="47.18940207662013%"&gt;&lt;H4 id="toc-hId-1440825882"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.702828499820981%"&gt;1.&lt;/TD&gt;&lt;TD width="43.1077694235589%"&gt;In your source subaccount, create a new &lt;STRONG&gt;&lt;EM&gt;OAuth2 Authorization Code&lt;/EM&gt;&lt;/STRONG&gt; security material. During setup, a &lt;STRONG&gt;&lt;EM&gt;Redirect URL&lt;/EM&gt;&lt;/STRONG&gt; will be generated‚Äîmake sure to note this URL, as it will be required in the next step when configuring a service key with the Authorization Code grant type.&lt;/TD&gt;&lt;TD width="47.18940207662013%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 7.54.36‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309520iDFE949E38A72EB5E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 7.54.36‚ÄØPM.png" alt="Screenshot 2025-09-04 at 7.54.36‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;2.&lt;/TD&gt;&lt;TD&gt;In the BTP Cockpit, when creating a new instance of the &lt;EM&gt;Process Integration Runtime&lt;/EM&gt; service, select both the &lt;STRONG&gt;&lt;EM&gt;Refresh Token&lt;/EM&gt;&lt;/STRONG&gt; and &lt;STRONG&gt;&lt;EM&gt;Authorization Code&lt;/EM&gt;&lt;/STRONG&gt; grant types. Then, paste the Redirect URL captured in Step 1 into the &lt;STRONG&gt;&lt;EM&gt;Redirect URI&lt;/EM&gt;&amp;nbsp;&lt;/STRONG&gt;field.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 7.59.30‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309521iA0C1C87927D67E1D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 7.59.30‚ÄØPM.png" alt="Screenshot 2025-09-04 at 7.59.30‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;3.&lt;/TD&gt;&lt;TD&gt;After creating the service key, make sure to note the &lt;STRONG&gt;client credentials&lt;/STRONG&gt;, along with the &lt;STRONG&gt;authorization&lt;/STRONG&gt; and &lt;STRONG&gt;token&lt;/STRONG&gt; &lt;STRONG&gt;URL&lt;/STRONG&gt; endpoints, as these will be required in a later step.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.02.01‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309522i7EE278AD4A4F439B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.02.01‚ÄØPM.png" alt="Screenshot 2025-09-04 at 8.02.01‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Go back to the security material creation screen and enter the parameters copied from the previous step.&lt;/P&gt;&lt;P&gt;You may specify a user name for the user entity you want to create, but this value will be overridden by the actual user identity provided during browser logon step.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.03.52‚ÄØPM.png" style="width: 322px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309523i2C49E65A39A30AAA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.03.52‚ÄØPM.png" alt="Screenshot 2025-09-04 at 8.03.52‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;After the security material is created, click on the '&lt;STRONG&gt;Authorize&lt;/STRONG&gt;' button under the &lt;STRONG&gt;...&lt;/STRONG&gt; column. This will kick off the authorization code flow process in a new browser window. and will present the auth code to the specified redirect_uri.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.06.02‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309524i606256757B086D19/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.06.02‚ÄØPM.png" alt="Screenshot 2025-09-04 at 8.06.02‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&lt;/TD&gt;&lt;TD&gt;You will be asked to authenticate yourself to an identity provider of your choosing, depending on the IDP settings as enabled in BTP's '&lt;STRONG&gt;Trust Configuration'&lt;/STRONG&gt;. Note that I'll be authenticating into SAP Identity Service, which in turn is configured to federate with multiple corporate IDPs via OIDC settings, as explained in my &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/single-sign-on-to-sap-cloud-integration-cpi-runtime-from-an-external/ba-p/13655108" target="_self"&gt;linked&lt;/A&gt; blog.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.09.18‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310702i15C3B8FC49B33A84/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.09.18‚ÄØPM.png" alt="Screenshot 2025-09-04 at 8.09.18‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;7.&lt;/TD&gt;&lt;TD&gt;I'm being led into authenticating against Entra ID and my &lt;STRONG&gt;*.outlook.com&lt;/STRONG&gt; email is being propagated as the authenticated user context into Cloud Integration.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.10.34‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310703i375CAA177552E49E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.10.34‚ÄØPM.png" alt="Screenshot 2025-09-04 at 8.10.34‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;8.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;After successfully logging the user in, the browser redirects to the specified '&lt;STRONG&gt;redirect_uri'&lt;/STRONG&gt; with the negotiated '&lt;STRONG&gt;code&lt;/STRONG&gt;'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;‚úÖ&lt;/span&gt;This completes our authentication process.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-07 at 4.32.20‚ÄØPM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310704iCDA7B6A9FFE2ACC4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-07 at 4.32.20‚ÄØPM.png" alt="Screenshot 2025-09-07 at 4.32.20‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;6.2.2.2 Next step, let's review the time-triggered IFlow that kicks off the entire process. The first sequence in the flow is a 'timer' step. To keep things simple, it just triggers off upon deployment.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-07 at 4.59.43‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310707i0859AFEA787C1E7D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-07 at 4.59.43‚ÄØPM.png" alt="Screenshot 2025-09-07 at 4.59.43‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.2.2.3. In the second step, we add a Groovy script that taps into the SecureStoreService API to read the &lt;EM&gt;Authorization Code&lt;/EM&gt; security material defined in the previous step. The script then exchanges the authorization code with the token endpoint to fetch a valid access token.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import com.sap.it.api.securestore.SecureStoreService
import com.sap.it.api.ITApiFactory

def Message processData(Message message) {
    
    // Name of your OAuth2 Authorization Code credential (as defined in Security Material)
    def credentialName = "auth-code-demo"

    // Get an instance of SecureStoreService
    def secureStoreService = ITApiFactory.getApi(SecureStoreService.class, null)

    if (secureStoreService == null) {
        throw new IllegalStateException("SecureStoreService not available")
    }

    // Fetch the access token
    def tokenResponse = secureStoreService.getAccesTokenForOauth2AuthorizationCodeCredential(credentialName)

    if (tokenResponse == null) {
        throw new IllegalStateException("Failed to retrieve access token for credential: ${credentialName}")
    }

    // Extract access token string
    def accessToken = tokenResponse.getAccessToken()

    // Optional: log for debug (mask in production!)
    //messageLogFactory.getMessageLog(message).addAttachmentAsString("OAuth2 Access Token", accessToken, "text/plain")

    // Store token in message header for downstream adapters
    message.setHeader("Authorization", "Bearer " + accessToken)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6.2.2.4 The third step in the sequence is to call the OData entity set through the &lt;EM&gt;intermediate&lt;/EM&gt; IFlow. Note that the authorization setting is explicitly configured as &lt;EM&gt;None&lt;/EM&gt;, since the bearer token is already applied in the preceding Groovy script step. Also, do note that the intermediate IFlow eventually calls the final IFlow, as we studied in step 4 of 6.2.1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-07 at 5.00.36‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310708i8E961EE95568703B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-07 at 5.00.36‚ÄØPM.png" alt="Screenshot 2025-09-07 at 5.00.36‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.2.2.5 The final step in the sequence is to log the response returned after the &lt;EM&gt;final&lt;/EM&gt; IFlow executes, which is handled by a simple Groovy script.&lt;/P&gt;&lt;P&gt;6.2.2.6. After triggering the process, you can verify the outcome in the Message Processing Logs (MPL). You should see an entry in the &lt;EM&gt;Completed&lt;/EM&gt; state, with the Attachments section containing a text representation of the backend response.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":trophy:"&gt;üèÜ&lt;/span&gt;Congratulations on reaching this stage!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-05 at 4.50.04‚ÄØPM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310762i0E817501ECDD4AA1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-05 at 4.50.04‚ÄØPM.png" alt="Screenshot 2025-09-05 at 4.50.04‚ÄØPM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1831118391"&gt;Closing summary:&lt;/H2&gt;&lt;P&gt;In this blog, we explored how OAuth2 SAML Bearer assertion support in SAP Cloud Integration serves as a powerful mechanism for securing IFlows and APIs. By leveraging trust configurations, user propagation, and the integration of identity providers, we demonstrated how this grant type enables secure end-to-end flows while maintaining user context. Along the way, we also highlighted related patterns‚Äîsuch as the use of Authorization Code grant type in specific scenarios‚Äîand showed how these capabilities extend the flexibility of SAP Integration Suite when working with corporate identity providers and SAP Cloud Identity Services.&lt;/P&gt;&lt;P&gt;As integration landscapes continue to evolve, adopting OAuth2 SAML Bearer assertion not only strengthens security but also ensures compliance with modern identity federation standards. With the concepts and examples covered here, you now have a foundation to design flows that are both secure and user-aware‚Äîcritical ingredients for enterprise-grade integrations.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/demystifying-the-oauth2-saml-bearer-assertion-usage-in-sap-integration/ba-p/14177915"/>
    <published>2025-09-08T05:34:05.936000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/reusable-apis-in-sap-integration-suite-design-once-use-everywhere/ba-p/14213934</id>
    <title>Reusable APIs in SAP Integration Suite : Design Once, Use Everywhere</title>
    <updated>2025-09-14T16:01:28.167000+02:00</updated>
    <author>
      <name>ashutosh_kumar_singh02</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/453525</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760006089"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class="lia-align-left lia-indent-padding-left-30px" style="text-align : left; padding-left : 30px;"&gt;&lt;STRONG&gt;Reusable API &amp;nbsp;artifacts&lt;/STRONG&gt; in &lt;STRONG&gt;SAP Integration Suite ‚Äì Edge Integration Cell&lt;/STRONG&gt; are modular, internal-only APIs that encapsulate common cross-cutting concerns such as authentication, transformation, validation, or logging.&lt;/P&gt;&lt;P class="lia-align-left lia-indent-padding-left-30px" style="text-align : left; padding-left : 30px;"&gt;Instead of duplicating the same policies across multiple APIs, Reusable API act as centrally managed building blocks that can be invoked by other API artifacts through&amp;nbsp; a special &lt;STRONG&gt;API Direct adapter&lt;/STRONG&gt;.&lt;/P&gt;&lt;H4 id="toc-hId-1821658022"&gt;&lt;STRONG&gt;&amp;nbsp;Key characteristics:&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-90px" style="padding-left : 90px;"&gt;Internal only: They are not exposed as standalone endpoints.&lt;/P&gt;&lt;P class="lia-indent-padding-left-90px" style="padding-left : 90px;"&gt;Policy encapsulation: Common logic like authentication or schema validation is defined once and reused.&lt;/P&gt;&lt;P class="lia-indent-padding-left-90px" style="padding-left : 90px;"&gt;Independent lifecycle: They can evolve separately from consuming APIs, supporting cleaner governance and versioning.&lt;/P&gt;&lt;P class="lia-indent-padding-left-90px" style="padding-left : 90px;"&gt;Performance-aware: Optimized for low-latency chaining between calling APIs and Reusable API s, with correlation IDs ensuring full traceability.&lt;/P&gt;&lt;P class="lia-indent-padding-left-90px" style="padding-left : 90px;"&gt;Consistency &amp;amp; compliance: Authentication policy is enforced uniformly across the execution chain.&lt;/P&gt;&lt;H4 id="toc-hId-1625144517"&gt;&lt;STRONG&gt;Use Cases it Addresses&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Reusable API artifacts address several real-world challenges faced by API developers and central security/governance teams:&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":key:"&gt;üîë&lt;/span&gt;Centralized Security Enforcement&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Instead of configuring authentication and authorization separately in every API, organizations can define a Reusable API &amp;nbsp;artifact with standard security policies (e.g., OAuth/JWT verification, API key validation, IP allowlist). Any new API simply invokes this artifact, ensuring compliance with enterprise-wide standards and reducing the risk of inconsistent security coverage.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":gear:"&gt;‚öôÔ∏è&lt;/span&gt;Policy Reuse &amp;amp; Reduced Duplication&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Enterprises often repeat the same transformations (e.g., XML-to-JSON), validations (e.g., schema checks), or response formatting across multiple APIs. By centralizing these policies into Reusable API &amp;nbsp;artifacts, teams avoid duplication, simplify maintenance, and accelerate delivery of new APIs.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":bar_chart:"&gt;üìä&lt;/span&gt;Auditability &amp;amp; Governance&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;With traceability built in via correlation IDs, Reusable API &amp;nbsp;artifacts give central teams visibility into how APIs interact across the execution chain. This is particularly useful in regulated industries where demonstrating uniform enforcement of policies (like logging or data masking) is mandatory.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;üöÄ&lt;/span&gt;Accelerated API Development&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Developers can focus on business-specific logic in their APIs while leveraging pre-built Reusable API &amp;nbsp;artifacts for cross-cutting concerns. This speeds up delivery, ensures consistency, and lowers onboarding time for new API projects.&lt;/P&gt;&lt;H2 id="toc-hId-1170465574"&gt;&lt;STRONG&gt;&amp;nbsp;Creating and consuming a Reusable API Artifact&lt;/STRONG&gt;&lt;/H2&gt;&lt;H5 id="toc-hId-1361200226"&gt;&amp;nbsp; &amp;nbsp;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;Enable&amp;nbsp;API Management and Cloud Integration capabilities&amp;nbsp; and&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Provision Edge Integration Cell runtime.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;After you have setup&amp;nbsp;&lt;A href="https://blogs.sap.com/2023/11/16/next-gen-hybrid-integration-with-sap-integration-suite-edge-integration-cell-introduction-setup/" target="_blank" rel="noopener noreferrer"&gt;Edge Integration Cell&lt;/A&gt;&amp;nbsp;and enabled both the capabilities mentioned above, you will have option to create API artifact.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/STRONG&gt;In a typical organization, two key personas benefit the most from reusable API artifacts in SAP Integration Suite:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Central Security Administrator&lt;/STRONG&gt; ‚Äì responsible for defining and enforcing security standards across all exposed APIs. They ensure consistent authentication, authorization, and compliance policies without duplicating effort.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;API Developer&lt;/STRONG&gt; ‚Äì responsible for designing APIs in Integration Suite, modelling business logic, and creating proxies for backend services. With reusable APIs, they can focus on business functionality while relying on centrally managed security and governance.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Lets create a Reusable API as security administrator persona :&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;A security administrator logs in to the Integration Suite tenant and navigates to &lt;STRONG&gt;Design ‚Üí Integrations and APIs&lt;/STRONG&gt;, then selects an existing content package to model a Reusable API.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_0-1757830027896.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313996iDB36A9299AAD0A7D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_0-1757830027896.png" alt="ashutosh_kumar_singh02_0-1757830027896.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select the &lt;STRONG&gt;Edge Integration Cell runtime profile&lt;/STRONG&gt; and proceed to choose the API creation method. Among the four available options, you will notice a new entry: &lt;STRONG&gt;Reusable API&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_1-1757830027903.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313998iAD20FDA4866239AD/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_1-1757830027903.png" alt="ashutosh_kumar_singh02_1-1757830027903.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Provide the required API details to create a Reusable API .&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_2-1757830027910.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313997iC50D9E4B22A59F63/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_2-1757830027910.png" alt="ashutosh_kumar_singh02_2-1757830027910.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Important to note: A Reusable API artifact does not require a target URL or a virtual host since it is designed for internal invocation only via a calling API&amp;nbsp; using the API Direct adapter. Therefore, it does not have an externally invokable endpoint.&lt;/P&gt;&lt;P&gt;Once all the details are provided, click on Create to create a Reusable API .&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_3-1757830027914.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314000iF22D0FD9E67EC882/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_3-1757830027914.png" alt="ashutosh_kumar_singh02_3-1757830027914.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The sender adapter in a Reusable API is automatically set to API Direct. This is important because it allows the calling API artifact to invoke the Reusable API internally‚Äîwithout an HTTP endpoint and without external exposure. Now, let‚Äôs add a few security policies like Authentication and Authorization to it.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_4-1757830027921.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314001i146839B6B1D72DE8/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_4-1757830027921.png" alt="ashutosh_kumar_singh02_4-1757830027921.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In addition to security policies, you can add mediation policies to extend functionality. For example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Use a &lt;STRONG&gt;Content Modifier&lt;/STRONG&gt; to enrich or adjust the message payload.&lt;/LI&gt;&lt;LI&gt;Configure an &lt;STRONG&gt;External Callout&lt;/STRONG&gt; to log data to external services such as Loggly.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With these steps, we‚Äôve modelled a &lt;STRONG&gt;Reusable API&lt;/STRONG&gt; that handles authentication and authorization, while also logging transaction details to an external system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_5-1757830027925.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313999iBB2986511456620E/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_5-1757830027925.png" alt="ashutosh_kumar_singh02_5-1757830027925.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-906521283"&gt;&lt;STRONG&gt;Consuming the Reusable API&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Let‚Äôs model a caller API that proxies an external backend while consuming the Reusable API created in the previous steps.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_2-1757830770060.png" style="width: 0px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314006i5C54C65740E1D720/image-size/large?v=v2&amp;amp;px=999" width="0" height="0" role="button" title="ashutosh_kumar_singh02_2-1757830770060.png" alt="ashutosh_kumar_singh02_2-1757830770060.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_0-1757830985179.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314008iDCA58C41093A6E2B/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_0-1757830985179.png" alt="ashutosh_kumar_singh02_0-1757830985179.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Provide the mandatory details for the caller API.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_3-1757830804809.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314007iE1CE18248DCCCD14/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_3-1757830804809.png" alt="ashutosh_kumar_singh02_3-1757830804809.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For a standard API, an Authentication policy is always applied as the first policy by default. However, when consuming a &lt;STRONG&gt;Reusable API&lt;/STRONG&gt; that already includes an authentication policy, you should remove the default authentication policy from your calling API. This ensures there‚Äôs no duplication or conflict.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;As a boundary condition:&lt;/STRONG&gt; The first step in your calling API must be either Authentication policy or a Reusable API with Authentication policy as its first step. This keeps the flow clean, avoids redundant auth checks, and maintains proper execution order.&lt;/P&gt;&lt;P&gt;Now, let‚Äôs add a step to invoke the Reusable API created earlier. As the first step, add the reusable API artifact as a &lt;STRONG&gt;global reference&lt;/STRONG&gt; in your caller API, as shown below.&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_1-1757831024220.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314009i06834A54D605C251/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_1-1757831024220.png" alt="ashutosh_kumar_singh02_1-1757831024220.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The Reference dialog will display only the deployed Reusable APIs within a package. If you need to reference multiple reusable APIs, you can add them from different content packages simultaneously.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_2-1757831058064.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314010i6AFB23D09D8D4313/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_2-1757831058064.png" alt="ashutosh_kumar_singh02_2-1757831058064.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To consume the reusable API, add a &lt;STRONG&gt;Request-Reply step&lt;/STRONG&gt; along with a &lt;STRONG&gt;Receiver System&lt;/STRONG&gt; to invoke the reusable API. From the list of adapters, select &lt;STRONG&gt;API Direct&lt;/STRONG&gt; only. Since the reusable API already includes an Authentication policy, go ahead and delete the authentication policy from your calling API to avoid duplication.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_0-1757831335322.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314022iE3C20F606D289280/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_0-1757831335322.png" alt="ashutosh_kumar_singh02_0-1757831335322.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Let‚Äôs click on &lt;STRONG&gt;API Direct&lt;/STRONG&gt; to configure the adapter‚Äôs connection details, which enables us to reference the reusable API added earlier as a global reference in this API.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_1-1757831358707.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314023i415EB406DFE8CBA1/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_1-1757831358707.png" alt="ashutosh_kumar_singh02_1-1757831358707.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now, let‚Äôs examine the properties associated with the &lt;STRONG&gt;API Direct adapter&lt;/STRONG&gt; in detail.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_2-1757831414322.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314024i1CB21155D1DA3426/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_2-1757831414322.png" alt="ashutosh_kumar_singh02_2-1757831414322.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;a) Resource :&lt;/STRONG&gt;This allows you to associate any added reusable API as a reference to this API.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;b) Address :&lt;/STRONG&gt;A read-only field that displays the basepath of the reusable API added in the Resource section.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;c) Send Body&amp;nbsp; :&lt;/STRONG&gt;Check this box to send the original request body to the reusable API. This is typically used with&amp;nbsp; &amp;nbsp;&lt;STRONG&gt;POST&lt;/STRONG&gt;, &lt;STRONG&gt;PUT&lt;/STRONG&gt;, or &lt;STRONG&gt;PATCH&lt;/STRONG&gt; methods, where the request payload must be preserved and forwarded to the reusable&amp;nbsp; &amp;nbsp; &amp;nbsp;flow.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;d) Retain Original Body for Next Steps :&amp;nbsp;&lt;/STRONG&gt;Select this option to keep the original request body available for use in subsequent steps of your caller API.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;e) Headers&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Request Header&lt;/STRONG&gt;: Enter a pipe-separated list of headers (e.g., Authorization|X-Correlation-ID) to send to the reusable API.&lt;BR /&gt;Use * to send all headers by default.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Response Header&lt;/STRONG&gt;: Enter a pipe-separated list of headers from the reusable API‚Äôs response that should be merged into the caller API‚Äôs original request headers.&lt;BR /&gt;Use * to receive and merge all response headers by default.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Now we have modelled and consumed a Reusable API into the caller API. Please note that if the Reusable API is not deployed, then you will not be allowed to deploy the caller API referring that Reusable API . Now let‚Äôs deploy the caller API.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_3-1757831452188.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314025iE5A147681854497B/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_3-1757831452188.png" alt="ashutosh_kumar_singh02_3-1757831452188.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As both caller and Reusable APIs are deployed, Lets check the status and also invoke the caller.&lt;/P&gt;&lt;H3 id="toc-hId-710007778"&gt;&lt;STRONG&gt;Monitor and Message logs&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Once APIs are deployed lets navigate to Monitor section to introspect the both Caller and the Reusable APIs under Manage Integration Content.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_0-1757831536922.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314026i072AED7188786B68/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_0-1757831536922.png" alt="ashutosh_kumar_singh02_0-1757831536922.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_1-1757831549696.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314027i48C5D22CD53E03ED/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_1-1757831549696.png" alt="ashutosh_kumar_singh02_1-1757831549696.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;One important point to note about reusable APIs is that, since they don‚Äôt have an external endpoint, the &lt;STRONG&gt;Endpoints&lt;/STRONG&gt; section does not display any entry as shown above.&lt;/P&gt;&lt;P&gt;&amp;nbsp;Let change the log level to Trace for both the artifacts.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_2-1757831579379.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314028i37A297B04527400F/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_2-1757831579379.png" alt="ashutosh_kumar_singh02_2-1757831579379.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_4-1757831646365.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314030iD78B5AA0DE3AA66F/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_4-1757831646365.png" alt="ashutosh_kumar_singh02_4-1757831646365.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now let me invoke the caller API endpoint via a REST client.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_3-1757831621085.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314029iC213EC962B2CFFC7/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_3-1757831621085.png" alt="ashutosh_kumar_singh02_3-1757831621085.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Let‚Äôs now check the correlation ID for this transaction in both the caller and reusable API logs ‚Äî they should ideally be the same, ensuring end-to-end traceability.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_0-1757831724706.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314031i0E131B2049E408F7/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_0-1757831724706.png" alt="ashutosh_kumar_singh02_0-1757831724706.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_1-1757831732292.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314032i5C37B3E9BE3901F1/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_1-1757831732292.png" alt="ashutosh_kumar_singh02_1-1757831732292.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As you can see, the API was invoked successfully.&lt;/P&gt;&lt;P&gt;If you recall from earlier steps, we modelled the reusable API to provide &lt;STRONG&gt;Authentication &amp;amp; Authorization protection&lt;/STRONG&gt; and included a mediation policy to log the &lt;STRONG&gt;correlation ID&lt;/STRONG&gt; to the Loggly server.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_2-1757831761399.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314033i02775ECBECA14938/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_2-1757831761399.png" alt="ashutosh_kumar_singh02_2-1757831761399.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As you can see, the same correlation ID is also being logged into the Loggly server.&lt;BR /&gt;Additionally, you can examine the trace details of the executed steps, which will show that the first step was executed via &lt;STRONG&gt;API Direct&lt;/STRONG&gt;, exactly as we modelled in our use case.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_3-1757831808389.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314034i4219E295583E4B5B/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_3-1757831808389.png" alt="ashutosh_kumar_singh02_3-1757831808389.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Similarly, the same Reusable API is referred&amp;nbsp; to another API artifact by the API developer to leverage the centrally defined security and common tasks by administrator.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashutosh_kumar_singh02_4-1757831842871.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314035i3920EE031DD7D838/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashutosh_kumar_singh02_4-1757831842871.png" alt="ashutosh_kumar_singh02_4-1757831842871.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If a new traffic management policy like Surge protection policy is to be added to all the APIs then API administrator only needs to it to the Reusable API and it will be automatically applied to all the APIs referring the Reusable API.&lt;/P&gt;&lt;H3 id="toc-hId-513494273"&gt;&lt;STRONG&gt;Points to remember:&lt;/STRONG&gt;&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;At least one authentication policy is mandatory in complete chain including the caller API and Reusable API.&lt;/LI&gt;&lt;LI&gt;Only Authentication policy or a request reply step to Reusable API can be added as first step in a valid caller API.&lt;/LI&gt;&lt;LI&gt;A caller API can refer more than one Reusable API, but one Reusable API cannot refer another Reusable API.&lt;/LI&gt;&lt;LI&gt;Only deployed reusable APIs can be added to the caller API.&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-316980768"&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Reusable API artifacts in SAP Integration Suite bring clarity and efficiency to API management. By separating &lt;STRONG&gt;centralized enforcement&lt;/STRONG&gt; from &lt;STRONG&gt;API development activities&lt;/STRONG&gt;, organizations can achieve both governance and agility. The &lt;STRONG&gt;administrator&lt;/STRONG&gt; gains confidence that policies are consistently applied, while the &lt;STRONG&gt;API developer&lt;/STRONG&gt; can focus on delivering business value without reinventing the wheel for every project.&lt;/P&gt;&lt;P&gt;In short, reusable APIs strike the right balance between &lt;STRONG&gt;control&lt;/STRONG&gt; and &lt;STRONG&gt;productivity&lt;/STRONG&gt;, making them a cornerstone for scalable, enterprise-grade API strategies.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/reusable-apis-in-sap-integration-suite-design-once-use-everywhere/ba-p/14213934"/>
    <published>2025-09-14T16:01:28.167000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-api-management%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%83%AD%E3%82%B0%E3%82%92sap-cloud-logging%E3%81%A7%E5%8F%AF%E8%A6%96%E5%8C%96%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/ba-p/14226432</id>
    <title>SAP API Management„ÅÆ„Ç¢„ÇØ„Çª„Çπ„É≠„Ç∞„ÇíSAP Cloud Logging„ÅßÂèØË¶ñÂåñ„Åô„ÇãÊñπÊ≥ï</title>
    <updated>2025-09-24T08:45:57.592000+02:00</updated>
    <author>
      <name>yasuyukiuno</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/557133</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1761014176"&gt;ËÉåÊôØÔºöAPI Management„ÅÆ„É≠„Ç∞„ÅåË¶ã„Åà„Å™„ÅÑÂïèÈ°å&lt;/H2&gt;&lt;P&gt;SAP API Management„Åß„ÅØ„ÄÅAPI„ÅÆÂÖ¨Èñã„Éª„Ç≠„ÉºÂà∂Âæ°„Éª„É¨„Éº„ÉàÂà∂Èôê„Éª„Éà„É©„Éï„Ç£„ÉÉ„ÇØÂà∂Âæ°„Å®„ÅÑ„Å£„ÅüÊ©üËÉΩ„ÇíÊèê‰æõ„Åó„Å¶„ÅÑ„Åæ„Åô„Åå„ÄÅÂëº„Å≥Âá∫„Åó„É≠„Ç∞ÔºàAPI„ÅÆ„Ç¢„ÇØ„Çª„ÇπÁä∂Ê≥Å„ÉªHeader„ÉªBody„ÅÆÂÜÖÂÆπ„Å™„Å©Ôºâ„ÅØ„ÄÅIntegration Suite„ÅÆÊ®ôÊ∫ñÁîªÈù¢„Åã„Çâ„ÅØÁ¢∫Ë™ç„Åß„Åç„Åæ„Åõ„Çì„ÄÇ&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Integration Flow„ÅÆ„É≠„Ç∞„ÅØË¶ã„Çâ„Çå„Çã„Åå„ÄÅAPI Proxy„ÅÆ„É≠„Ç∞„ÅØÂØæË±°Â§ñ&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;„Çµ„Éû„É™„Éº„ÅÆÊÉÖÂ†±(ÁâπÂÆö„ÅÆÊúüÈñì„Åß‰ΩïÂõûAPI„ÅåÂëº„Å≥Âá∫„Åï„Çå„Åü„Åã)„Å™„Å©„ÅØÊ®ôÊ∫ñ„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„ÅßË¶ã„Çå„Çã&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Audit„É≠„Ç∞„ÇÑ„Éà„É¨„Éº„Çπ„É≠„Ç∞„ÅåÂ≠òÂú®„Åó„Å™„ÅÑ„Åü„ÇÅ„ÄÅ&lt;STRONG&gt;API Key„ÇÑJWT„Å™„Å©„ÅÆË™çË®ºÂïèÈ°å„ÅÆ„Éà„É©„Éñ„É´Ëß£Êûê„ÅåÈõ£„Åó„ÅÑ&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;„Ç¢„ÇØ„Çª„ÇπÂÖÉIP„ÄÅUser-Agent„ÄÅHeader„ÅÆ‰∏≠Ë∫´„Å™„Å©„ÇíÁ¢∫Ë™ç„Åß„Åç„Å™„ÅÑ&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;„Åì„ÅÆ„Çà„ÅÜ„Å™ËÉåÊôØ„Åã„Çâ„ÄÅAPIÂëº„Å≥Âá∫„Åó„ÅÆÂèØË¶ñÊÄßÂêë‰∏ä„ÇíÁõÆÁöÑ„Å´&lt;STRONG&gt;Cloud Logging„Å∏„ÅÆËª¢ÈÄÅ&lt;/STRONG&gt;„ÅåÂøÖË¶Å„Å®„Åï„Çå„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;‰∏ãÂõ≥„ÅÆ„Çà„ÅÜ„Å´„ÄÅÂÄãÂà•„ÅÆAPI„ÅÆÂÆüË°å„É≠„Ç∞„ÅØË¶ã„Çâ„Çå„Å™„ÅÑ„ÅÆ„Åß„Åô„ÄÇ(ÈñãÁô∫‰∏≠„Åß„ÅÇ„Çå„Å∞API Policy„ÅÆ„Éá„Éê„ÉÉ„Ç∞„Çí„Åô„Çå„Å∞„Çà„ÅÑ„ÅÆ„Åß„Åô„Åå)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_2-1758692806214.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319258i064699C5213AE5A9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_2-1758692806214.png" alt="yasuyukiuno_2-1758692806214.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1564500671"&gt;Ëß£Ê±∫Á≠ñÔºöCloud LoggingÔºàSyslog DrainÔºâ„Å∏„ÅÆËª¢ÈÄÅ&lt;/H2&gt;&lt;P&gt;SAP BTP„ÅÆCloud FoundryÁí∞Â¢É„Åß„ÅØ„ÄÅ&lt;STRONG&gt;Cloud Logging„Ç§„É≥„Çπ„Çø„É≥„Çπ„Å´„É≠„Ç∞„ÇíÈõÜÁ¥Ñ„Åô„Çã„Åì„Å®„ÅåÂèØËÉΩ&lt;/STRONG&gt;„Åß„Åô„ÄÇ&lt;BR /&gt;API Management„ÅÆ„Ç¢„ÇØ„Çª„Çπ„É≠„Ç∞„ÇÇ„ÄÅ&lt;STRONG&gt;„Ç´„Çπ„Çø„É†„É≠„Ç∞Âá∫ÂäõÔºàAssignMessage + MessageLoggingÔºâÔºã syslog drainÊßãÊàê&lt;/STRONG&gt;„Å´„Çà„ÇäCloud Logging„Å´Ëª¢ÈÄÅ„Åß„Åç„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;„Åì„ÅÆÊßãÊàê„ÇíÂèñ„Çã„Åì„Å®„ÅßÔºö&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;API„Ç¢„ÇØ„Çª„Çπ„É≠„Ç∞„Çí&lt;STRONG&gt;ÊôÇÁ≥ªÂàó„Å´‰øùÂ≠ò&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;BTP Logging UI„ÇÑOpenTelemetryÈÄ£Êê∫„Åß&lt;STRONG&gt;ÂÖ®ÊñáÊ§úÁ¥¢„Éª„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„ÉâË°®Á§∫&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;ÈöúÂÆ≥Ëß£Êûê„ÇÑ‰∏çÊ≠£„Ç¢„ÇØ„Çª„ÇπÁõ£Ë¶ñ„Å´„ÇÇÂà©Áî®ÂèØËÉΩ&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1367987166"&gt;Ë£úË∂≥Ë™¨ÊòéÔºöCloud Logging„Å∏„ÅÆ„É≠„Ç∞Ëª¢ÈÄÅ„ÅÆÁ∞°ÊòìÁ¢∫Ë™ç&lt;/H2&gt;&lt;P&gt;Cloud Logging„Å´„ÅØCloud Foundry„ÅÆ„É≠„Ç∞„ÇíÂá∫Âäõ„Åô„Çã‰ª•Â§ñ„Å´„ÄÅPUT„É™„ÇØ„Ç®„Çπ„Éà„Åß„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÁ™Å„Å£Ëæº„ÇÄ„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ&lt;BR /&gt;‰æã„Å®„Åó„Å¶Postman„Åã„Çâ‰∏ãË®ò„ÅÆJSON„É°„ÉÉ„Çª„Éº„Ç∏„ÇíCloud Logging„Å´Á™Å„Å£Ëæº„Çì„Åß„Åø„Åæ„Åô„ÄÇ&lt;BR /&gt;„É™„ÇØ„Ç®„Çπ„ÉàÔºöPUT&lt;BR /&gt;„É™„ÇØ„Ç®„Çπ„ÉàURLÔºöCloud Logging„ÅÆService Key„ÅÆ[ingest-endpoint]&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_0-1758691310281.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319251iB547FE1EA65849BB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_0-1758691310281.png" alt="yasuyukiuno_0-1758691310281.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;‰∏ãÂõ≥„ÅÆ„Çà„ÅÜ„Å´„ÄÅCloud Logging„Å´„É°„ÉÉ„Çª„Éº„Ç∏„Åå‰øùÂ≠ò„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„Åå„Çè„Åã„Çä„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_1-1758691567626.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319254iDFA5EFBD4586A3FE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_1-1758691567626.png" alt="yasuyukiuno_1-1758691567626.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;„Å®„ÅÑ„ÅÜ„Åì„Å®„ÅØ„ÄÅAPI Management„ÅÆAPI Policy„Åß„ÄÅService Callout„ÇíÂà©Áî®„Åó„ÄÅ‰∏äË®ò„Å®ÂêåÊßò„Å´Cloud Logging„Å∏„ÅÆ„É≠„Ç∞Ëª¢ÈÄÅ„ÇíË°å„Åà„Å∞„É≠„Ç∞„ÅåË¶ã„Åà„Å™„ÅÑÂïèÈ°å„ÇíËß£Ê±∫„Åß„Åç„Çã„Å®ËÄÉ„Åà„Åæ„Åô„ÄÇ&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_3-1758693102695.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319259i63A48D79941CFCF2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_3-1758693102695.png" alt="yasuyukiuno_3-1758693102695.png" /&gt;&lt;/span&gt;&lt;BR /&gt;API Policy„ÅÆË®≠ÂÆö‰∏Ä‰æã&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;&amp;lt;!-- AssignMessage„ÅßÊßãÈÄ†Âåñ„É≠„Ç∞ --&amp;gt;
&amp;lt;AssignMessage ...&amp;gt;
    &amp;lt;Set&amp;gt;
        &amp;lt;Payload contentType="application/json"&amp;gt;
            {
                "path": "{request.path}",
                "ip": "{request.header.X-Forwarded-For}",
                "timestamp": "{system.timestamp}",
                "userAgent": "{request.header.User-Agent}"
            }
        &amp;lt;/Payload&amp;gt;
    &amp;lt;/Set&amp;gt;
    &amp;lt;AssignTo type="request" createNew="false"/&amp;gt;
&amp;lt;/AssignMessage&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-1171473661"&gt;„Åæ„Å®„ÇÅ&lt;/H2&gt;&lt;P&gt;SAP API Management„ÅØÈùûÂ∏∏„Å´‰æøÂà©„Å™APIÂÖ¨ÈñãÂü∫Áõ§„Åß„Åô„Åå„ÄÅ&lt;STRONG&gt;„Ç¢„ÇØ„Çª„Çπ„É≠„Ç∞„ÅÆÂèØË¶ñÊÄß&lt;/STRONG&gt;„Å´„ÅØË™≤È°å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ&lt;BR /&gt;Êú¨Ë®ò‰∫ã„ÅßÁ¥π‰ªã„Åó„Åü„Çà„ÅÜ„Å´„ÄÅ&lt;STRONG&gt;Cloud Logging„Å®„ÅÆÁµÑ„ÅøÂêà„Çè„Åõ„Å´„Çà„ÇäÂèØË¶ñÊÄß„ÇíË£úÂÆå„Åô„Çã„Åì„Å®„ÅåÂèØËÉΩ&lt;/STRONG&gt;„Åß„Åô„ÄÇ&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Integration Suite UI„ÅßË¶ã„Åà„Å™„ÅÑ„É≠„Ç∞„ÇÇCloud Logging„Åß‰∏ÄÂÖÉÁÆ°ÁêÜ&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;API Policy„Åã„Çâ„Ç´„Çπ„Çø„É†„É≠„Ç∞Âá∫Âäõ&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Syslog Drain„ÅßCloud Logging„Å∏Ëª¢ÈÄÅ&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;ÈÅãÁî®„Éª„Çª„Ç≠„É•„É™„ÉÜ„Ç£‰∏°Èù¢„ÅßÈùûÂ∏∏„Å´ÊúâÁî®„Å™ÊßãÊàê„Åß„ÅØ„Å™„ÅÑ„Åã„Å®ËÄÉ„Åà„Å¶„ÅÑ„Åæ„Åô„ÄÇ&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-api-management%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%83%AD%E3%82%B0%E3%82%92sap-cloud-logging%E3%81%A7%E5%8F%AF%E8%A6%96%E5%8C%96%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/ba-p/14226432"/>
    <published>2025-09-24T08:45:57.592000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-analytics-cloud-modeling-extensions-amp-integration-qrc4/ba-p/14208685</id>
    <title>What's New in SAP Analytics Cloud Modeling Extensions &amp; Integration QRC4 2025 Release</title>
    <updated>2025-10-02T10:32:04.203000+02:00</updated>
    <author>
      <name>AmandaJMurphy</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/46075</uri>
    </author>
    <content>&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_0-1757071449064.png" style="width: 862px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309918i313C7F1F9A1F12F0/image-dimensions/862x440?v=v2" width="862" height="440" role="button" title="AmandaJMurphy_0-1757071449064.png" alt="AmandaJMurphy_0-1757071449064.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1888311515"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;Purpose&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;Hello SAP Community Colleagues,&lt;/P&gt;&lt;P&gt;I am delighted to share some fantastic new &lt;EM&gt;Data Integration&lt;/EM&gt; &amp;amp; &lt;EM&gt;Conversion&lt;/EM&gt; features made available inside the modeling area of SAP Analytics Cloud, within Business Data Cloud!&lt;/P&gt;&lt;H3 id="toc-hId-1691798010"&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;Overview&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;Here is a short overview of each feature:&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;1. Data Export API ‚Äì Master Data Hierarchies&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;The Data Export API has been extended to support the export of master data parent-child and level-based hierarchies.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;2. Data Export API ‚Äì Seamless Planning Support for Public Dimensions&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;The Data Export API has been extended to support the export of master data from public dimensions that reside in a Datasphere workspace.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;3. Data Export API ‚Äì Seamless Planning Support for Fact Data Delta&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The Data Export API has been extended to support the export of fact data delta changes from a SAP Analytics Cloud standard model that resides in a Datasphere space.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;4. Dimension Unit Property Enhancement &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;In &lt;EM&gt;Unit Conversion&lt;/EM&gt;, a dimension containing a unit property now displays a &lt;SPAN&gt;&lt;EM&gt;member selector dialog&lt;/EM&gt;&lt;/SPAN&gt; consisting of a list of &lt;EM&gt;Unit Symbols &amp;amp; Unit Descriptions &lt;/EM&gt;that are contained in the &lt;EM&gt;Standard Unit&lt;/EM&gt; &amp;amp; &lt;EM&gt;Unit Description&lt;/EM&gt; tables.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;5. New Member Selector dialog in Modeling&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;A new member selector dialog has been introduced into the Modeling area of SAC, replacing the previous member selection dialog.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Let‚Äôs now investigate each topic in further detail:&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;1. Data Export API ‚Äì Master Data Hierarchies&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;The &lt;EM&gt;Data Export API&lt;/EM&gt; has been extended to support the export of Master Data &lt;EM&gt;Level-Based &lt;/EM&gt;&amp;amp; &lt;EM&gt;Parent-Child Hierarchies&lt;/EM&gt; that are part of a standard model residing in SAP Analytics Cloud.&amp;nbsp;&amp;nbsp;This includes master data stored in public or private dimensions.&lt;/P&gt;&lt;P&gt;The export of &lt;EM&gt;Master Data Hierarchies&lt;/EM&gt; is also supported for standard models that are saved on a Datasphere space.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;FONT color="#339966"&gt;&lt;STRONG&gt;Level-Based Hierarchies&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;To allow the export of &lt;EM&gt;Level-Based&lt;/EM&gt; hierarchies, a new endpoint has been created called&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;EM&gt;{BaseURL}/providers/{namespaceID}/{providerID}/{DimensionName}Master&lt;/EM&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Note&lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt;:&lt;/EM&gt; Make sure to replace&amp;nbsp;&lt;EM&gt;{namespaceID}&lt;/EM&gt;&amp;nbsp;and&amp;nbsp;&lt;EM&gt;{providerID}&lt;/EM&gt;&amp;nbsp;with the correct IDs and to replace &lt;EM&gt;{DimensionName}&lt;/EM&gt; with the name of your dimension.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_0-1757072180907.png" style="width: 420px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309930i26B361F24413C43B/image-dimensions/420x215?v=v2" width="420" height="215" role="button" title="AmandaJMurphy_0-1757072180907.png" alt="AmandaJMurphy_0-1757072180907.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;FONT color="#339966"&gt;&lt;STRONG&gt;Parent-Child Hierarchies&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To allow the export of Parent-Child hierarchies, a new endpoint has been created called &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;EM&gt;{BaseURL}/providers/{namespaceID}/{providerID}/{DimensionName}MasterWithHierarchy&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Note:&lt;/EM&gt;&lt;/STRONG&gt; Make sure to replace&amp;nbsp;{namespaceID}&amp;nbsp;and&amp;nbsp;{providerID}&amp;nbsp;with the correct IDs and to replace {DimensionName} with the name of your dimension.&lt;/P&gt;&lt;P&gt;For each &lt;EM&gt;Parent-Child&lt;/EM&gt; hierarchy of the dimension, each row will have 3 additional columns compared to when using the &lt;EM&gt;{DimensionName}Master &lt;/EM&gt;endpoint.&lt;/P&gt;&lt;P&gt;These 3 columns are:&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;{HierarchyName}_PARENTID - the id of the parent node in the hierarchy.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;{HierarchyName}_PREVID - the previous node which shares the same parent as this one in the hierarchy.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;{HierarchyName}_ORDERID - the index of this node in the list of nodes that share the parent node.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmandaJMurphy_1-1757072310478.png" style="width: 525px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309932i4D2509E62ABB1879/image-dimensions/525x218?v=v2" width="525" height="218" role="button" title="AmandaJMurphy_1-1757072310478.png" alt="AmandaJMurphy_1-1757072310478.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Master Data Hierarchy&lt;/EM&gt; export jobs can be executed using 2-legged (machine to machine) or 3-legged (Authorized User) access. &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;2. Data Export API ‚Äì Seamless Planning Support for Public Dimensions&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;The &lt;EM&gt;Data Export API&lt;/EM&gt; has been extended to support the export of &lt;EM&gt;Master Data&lt;/EM&gt; from &lt;EM&gt;Public Dimensions&lt;/EM&gt; that reside in a Datasphere workspace using the existing &lt;EM&gt;PublicDimensionData&lt;/EM&gt;&amp;nbsp;endpoint.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;EM&gt;{BaseURL}/providers/{namespaceID}/{providerID}/PublicDimensionData&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;&lt;U&gt;Note:&lt;/U&gt;&lt;/EM&gt;&lt;/STRONG&gt; Make sure to replace&amp;nbsp;{namespaceID}&amp;nbsp;and&amp;nbsp;{providerID}&amp;nbsp;with the correct IDs.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 1: Sample export of Public Dimension Data on a Datasphere space using the PublicDimensionData Endpoint" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309939i895795B286A91191/image-size/large?v=v2&amp;amp;px=999" role="button" title="AmandaJMurphy_2-1757072502024.png" alt="Figure 1: Sample export of Public Dimension Data on a Datasphere space using the PublicDimensionData Endpoint" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 1: Sample export of Public Dimension Data on a Datasphere space using the PublicDimensionData Endpoint&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Public Dimension&lt;/EM&gt; export jobs can be executed using 2-legged (machine to machine) or 3-legged (Authorized User) access.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Authentication checks are in place, for 3-legged accounts, to ensure that access to the Datasphere space is permitted.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 2: Authorization Check Prevents Export from a Datasphere Space." style="width: 793px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309946i422C88950B3C4F1F/image-dimensions/793x206?v=v2" width="793" height="206" role="button" title="AmandaJMurphy_0-1757072728543.png" alt="Figure 2: Authorization Check Prevents Export from a Datasphere Space." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 2: Authorization Check Prevents Export from a Datasphere Space.&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This brings feature parity between the export of SAC public dimensions and those saved on a Datasphere space.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;3. Data Export API ‚Äì Seamless Planning Support for Fact Data Delta&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The Data Export API has been extended to support the export of &lt;EM&gt;Fact Data Delta&lt;/EM&gt; changes from a SAP Analytics Cloud standard model that resides in a Datasphere space.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;This includes support for &lt;EM&gt;Delta Difference&lt;/EM&gt; &amp;amp; &lt;EM&gt;Delta Aggregation&lt;/EM&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The &lt;EM&gt;API Subscriptions&lt;/EM&gt; tab in the modeler has been enabled to allow for the delta extraction of models residing in a Datasphere space.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 3: API Subscriptions Dialog Visible for SAC Models residing in a Datasphere Space" style="width: 617px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309951i65932238D95A107B/image-dimensions/617x369?v=v2" width="617" height="369" role="button" title="AmandaJMurphy_1-1757072878175.png" alt="Figure 3: API Subscriptions Dialog Visible for SAC Models residing in a Datasphere Space" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 3: API Subscriptions Dialog Visible for SAC Models residing in a Datasphere Space&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The existing Fact Data API endpoint names will also now work within this landscape using 2-legged and 3-legged authentications.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;EM&gt;/providers/{NamespaceID}/{ProviderID}/FactData&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;EM&gt;/providers/{NamespaceID}/{ProviderID}/FactDataAggregation&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;This brings feature parity between the delta extraction on SAC models and models saved on a Datasphere space.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;See my previous blogs covering &lt;EM&gt;Fact Data Difference&lt;/EM&gt; &amp;amp; &lt;EM&gt;Fact Data Aggregation&lt;/EM&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-analytics-cloud-modeling-extensions-amp-integration-qrc3/ba-p/13739005" target="_blank"&gt;What‚Äôs New in SAP Analytics Cloud Modeling Extensions &amp;amp; Integration QRC3 2024 Release&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-analytics-cloud-modeling-extensions-amp-integration-qrc3/ba-p/14130035" target="_blank"&gt;What's New in SAP Analytics Cloud Modeling Extensions &amp;amp; Integration QRC3 2025 Release&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;4. Dimension Unit Property Enhancement &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;In &lt;EM&gt;Unit Conversion&lt;/EM&gt;, a dimension containing a unit property now displays a &lt;EM&gt;member selector dialog&lt;/EM&gt; consisting of a list of &lt;EM&gt;Unit Symbols &amp;amp; Unit Descriptions &lt;/EM&gt;that are contained in the &lt;EM&gt;Standard Unit&lt;/EM&gt; &amp;amp; &lt;EM&gt;Unit Description&lt;/EM&gt; tables.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Previously, modelers had to navigate &lt;/SPAN&gt;&lt;SPAN&gt;to&lt;/SPAN&gt;&lt;SPAN&gt; the &lt;EM&gt;Standard Unit &lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN&gt;table&lt;/SPAN&gt;&lt;SPAN&gt;, to locate the correct &lt;EM&gt;Unit ID&lt;/EM&gt; and &lt;EM&gt;Unit Symbol&lt;/EM&gt; and then switch to a dimension to enter the correct unit.&amp;nbsp; The &lt;EM&gt;member selector dialog&amp;nbsp;&amp;nbsp;&lt;/EM&gt;on unit properties of a dimension&lt;/SPAN&gt;&lt;SPAN&gt;, in the grid view, &lt;/SPAN&gt;&lt;SPAN&gt;reduces&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;the risk of data-entry errors.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 4: Value Help on Dimension Unit Property" style="width: 380px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311067iF4DA9E792D53D2A8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AmandaJMurphy_0-1757329013924.png" alt="Figure 4: Value Help on Dimension Unit Property" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 4: Value Help on Dimension Unit Property&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;5. New Member Selector dialog in Modeling&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;A new member selector dialog has been introduced into the Modeling area of SAC, replacing the previous member selection dialog.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This improved flexible dialog provides an item ID and item description in the display. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Figure 5: New Member Selector in Modeling" style="width: 583px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313153i830B8BD759F0BD8A/image-dimensions/583x351?v=v2" width="583" height="351" role="button" title="AmandaJMurphy_0-1757599502730.png" alt="Figure 5: New Member Selector in Modeling" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Figure 5: New Member Selector in Modeling&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The new dialog can be found in the following areas:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Generic dimensions &amp;gt; Data Access Control, Hierarchies, Unit Property&lt;/LI&gt;&lt;LI&gt;Account dimensions &amp;gt; Data Locking Ownership, Responsible column&lt;/LI&gt;&lt;LI&gt;Data Management &amp;gt; API Subscription filters&lt;/LI&gt;&lt;LI&gt;Calculation Workspace &amp;gt; Grid view ‚Äì Exception aggregation / Required dimensions, preview panel filters&lt;/LI&gt;&lt;LI&gt;Formula Editor &amp;gt; Dynamic time dimension&lt;/LI&gt;&lt;LI&gt;Model Structure &amp;gt; delete facts&lt;/LI&gt;&lt;LI&gt;Variables&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;6. More new Modeling Features...&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Some additional new and exciting features in the Modeling area of SAP Analytics Cloud coming in QRC4 2025 include:&lt;/P&gt;&lt;UL class="lia-list-style-type-square"&gt;&lt;LI&gt;Consuming a Datasphere view as an external version into an SAC Planning Model.&lt;/LI&gt;&lt;LI&gt;Consuming Google Big Query as an external version into an SAC Planning Model.&lt;/LI&gt;&lt;LI&gt;Introduction of Clean and Replace Subset of Data option into the Data Upload Starter.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1495284505"&gt;&lt;FONT color="#3366FF"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;In summary, the following new features and updates have been introduced to the&amp;nbsp;&lt;EM&gt;Modeling Extensions and Integration&lt;/EM&gt;&amp;nbsp;areas of SAP Analytics Cloud, within Business Data Cloud, as part of QRC4 2025 release.&lt;/P&gt;&lt;P&gt;1. The &lt;EM&gt;Data Export API&lt;/EM&gt; has been extended to support the export of master data &lt;EM&gt;parent-child&lt;/EM&gt; and &lt;EM&gt;level-based&lt;/EM&gt; hierarchies.&amp;nbsp;&lt;/P&gt;&lt;P&gt;2. The &lt;EM&gt;Data Export API&lt;/EM&gt; has been extended to support the export of master data from &lt;EM&gt;public dimensions&lt;/EM&gt; that reside in a Datasphere space.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;3. &lt;/SPAN&gt;The &lt;EM&gt;Data Export API&lt;/EM&gt; has been extended to support the export of&lt;EM&gt; fact data delta&lt;/EM&gt; changes from an SAP Analytics Cloud standard model that resides in a Datasphere space.&lt;/P&gt;&lt;P&gt;4. Dimension properties of type Unit now offer a &lt;EM&gt;member selector&lt;/EM&gt;&amp;nbsp;dialog containing a list of &lt;EM&gt;Unit Symbols&lt;/EM&gt; and &lt;EM&gt;Unit Descriptions&lt;/EM&gt; obtained from the Standard Unit &amp;amp; Unit Description tables.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;5.&amp;nbsp;A new &lt;EM&gt;member selector&lt;/EM&gt; dialog has been introduced into the Modeling area of SAC&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;A comprehensive list of SAC features for each QRC release can be found in our &lt;A href="https://help.sap.com/whats-new/42e4f84a0e5e458792b1047eaf81c31a" target="_self" rel="noopener noreferrer"&gt;What's New - 2025 Releases Guide&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;If you have any questions, feel free to comment below or post a question to our&amp;nbsp;&lt;A href="https://community.sap.com/topics/cloud-analytics?ct=qa&amp;amp;lng=en&amp;amp;tab=content" target="_blank"&gt;SAP Analytics Cloud Questions &amp;amp; Answers&lt;/A&gt;&amp;nbsp;forum.&lt;/P&gt;&lt;P&gt;See this&amp;nbsp;&lt;A href="https://userapps.support.sap.com/sap/support/knowledge/E/2728183" target="_blank" rel="noopener noreferrer"&gt;SAP Knowledge Base Article&lt;/A&gt;&amp;nbsp;if you‚Äôd like to learn more about FastTrack and Quarterly Release Cycle releases.&lt;/P&gt;&lt;P&gt;For further information, visit our&amp;nbsp;&lt;A href="https://community.sap.com/topics/cloud-analytics" target="_blank"&gt;SAP Analytics Cloud Community&lt;/A&gt;&amp;nbsp;pages to find more product information, best practices, and more.&amp;nbsp;&lt;/P&gt;&lt;P&gt;To find out more about QRC release dates, see&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/sap-analytics-cloud-tenants-on-quarterly-release-cycle-qrc-updates-in-2025/ba-p/14000629" target="_blank"&gt;SAP Analytics Cloud tenants on Quarterly Release Cycle (QRC) updates in 2025&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Check out our&amp;nbsp;&lt;A href="https://roadmaps.sap.com/board?PRODUCT=67838200100800006884&amp;amp;amp;range=CURRENT-LAST&amp;amp;range=CURRENT-LAST" target="_blank" rel="noopener noreferrer"&gt;SAP Road Map Explorer&lt;/A&gt;&amp;nbsp;to see more upcoming features of SAP Analytics Cloud.&lt;/P&gt;&lt;P&gt;Thanks for reading!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-analytics-cloud-modeling-extensions-amp-integration-qrc4/ba-p/14208685"/>
    <published>2025-10-02T10:32:04.203000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-what-s-new-in-q3-2025/ba-p/14243767</id>
    <title>SAP Integration Suite: What‚Äôs New in Q3/2025</title>
    <updated>2025-10-16T09:38:05.160000+02:00</updated>
    <author>
      <name>MaiaraEllwanger</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/58</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Another quarter has come to an end and it‚Äôs time for us to review the most recent updates and improvements delivered to SAP Integration Suite. Whether you‚Äôre an integration architect, developer, or business leader, these new features are designed to help you get the most out of your hybrid landscape. Read on to discover what‚Äôs new and how these enhancements can support your organisation‚Äôs integration goals.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1762774826"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Message status overview monitoring for large tenants&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;One awaited featured has been released to the Cloud Integration capability of SAP Integration Suite to improve &lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/monitor-message-status-overview" target="_blank" rel="noopener noreferrer"&gt;Message Status Overview&lt;/A&gt;&lt;/SPAN&gt; &lt;SPAN&gt;monitoring and support larger time intervals through data preaggregation. Now the monitoring option can be utilized for extended periods on tenants with a high volume of message processing logs. &lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1437178602"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Artificial Intelligence&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H1&gt;&lt;H2 id="toc-hId-1369747816"&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI-based integration flow generation with mediation steps&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Earlier this year, the generation of integration flows with the assistance of AI was made available to customers. This enable users to generate an integration flow with sender and receiver systems based on a scenario description provided in natural language. You can read more about it &lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-generative-ai-based-integration-flow-generation/ba-p/13761166" target="_blank"&gt;here&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In Q3/2025 we have enhanced this feature to include additional mediation steps. This means that now, users can provide even more detailed scenarios and the tool identifies the details and generates a comprehensive integration flow with the described components, systems, and actions. Get a first glimpse into how to use this feature in the blog post: &lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-generative-ai-based-integration-flow-generation-with/ba-p/14196606" target="_blank"&gt;SAP Integration Suite ‚Äì Generative AI based Integration Flow Generation with Mediation Steps&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="DeepakGDeshpande_1-1756369510610.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327915i344A889BB67CE2B9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="DeepakGDeshpande_1-1756369510610.png" alt="DeepakGDeshpande_1-1756369510610.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1044151592"&gt;&amp;nbsp;&lt;STRONG&gt;Business Accelerators&lt;/STRONG&gt;&lt;/H1&gt;&lt;H2 id="toc-hId-976720806"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Joule copilot-based conversational search and discovery of content&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Joule has arrived at the SAP Business Accelerator Hub in Q3 to help users find the right content throughconversational context-based search. The Joule-based discovery provides user guidance to search different artifacts and access cohesive information for other relevant sources, such as help documentation.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;: The feature is currently in the beta phase and you can find more details on availability &lt;A href="https://help.sap.com/docs/business-accelerator-hub/sap-business-accelerator-hub/discover-and-explore-sap-business-accelerator-hub?locale=en-US#joule-(beta)" target="_blank" rel="noopener noreferrer"&gt;here&lt;/A&gt;.&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-651124582"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Connectivity and Adapters&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;The latest releases of SAP Integration Suite introduced a new array of adapters and connectors designed to streamline and enhance connectivity, improve data flow, and foster a more integrated digital landscape for businesses leveraging SAP solutions.&lt;/P&gt;&lt;H2 id="toc-hId-583693796"&gt;&lt;STRONG&gt;&lt;SPAN&gt;AI adapter&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The recently released AI adapter for SAP Integration Suite functions as a receiver adapter and accelerates connectivity to the Generative AI Hub (SAP AI Core) and other AI providers, as needed by customer (BYOM).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-10-07 at 13.28.13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327914iE6A9DCB86583A42B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.28.13.png" alt="Screenshot 2025-10-07 at 13.28.13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;The benefit of this adapter is that it increases connectivity options to integrate with both SAP and third-party systems and applications. How it works: after configuration, data exchange is performed at runtime where the SAP Integration Suite tenant sends the operation request to GenAIHub. The AI Adapter works on the request and sends the data back to the SAP Integration Suite tenant.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Find the &lt;SPAN&gt;&lt;A href="https://hub.sap.com/package/AIAdapterforSAPIntegrationSuite/overview" target="_blank" rel="noopener noreferrer"&gt;AI Adapter at SAP Business Accelerator Hub&lt;/A&gt;, read the &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/ai-adapter" target="_blank" rel="noopener noreferrer"&gt;help documentation&lt;/A&gt;, and check out the short demo below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FsCJ6PsskeI8%3Fstart%3D273%26feature%3Doembed%26start%3D273&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DsCJ6PsskeI8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FsCJ6PsskeI8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="What's New in SAP BTP: Top New Features | Joule Studio Skill Builder | Q3 2025" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-387180291"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Further adapters released in Q3 include:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN&gt;IBM MQ adapter using JMS protocol: client certificate support&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN&gt;Supports Client Certificate based authentication for JMS Variants. A new version 1.3.0 of the IBM MQ adapter supports Client Certificate based authentication for JMS Variants.&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/configure-ibm-mq-jms-receiver-adapter" target="_blank" rel="noopener noreferrer"&gt;- Configure the IBM MQ JMS Receiver Adapter&lt;/A&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN&gt;IBM MQ adapter using JMS protocol: client certificate support&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN&gt;Supports On-Premise Connectivity via Cloud Connector for JMS Variants. A new version 1.4.0 of the IBM MQ adapter supports On-Premise Connectivity via Cloud Connector for JMS Variants.&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P class=""&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/configure-ibm-mq-jms-sender-adapter" target="_blank" rel="noopener noreferrer"&gt;- Configure the IBM MQ JMS Sender Adapter&lt;/A&gt;&lt;/P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/configure-ibm-mq-jms-receiver-adapter" target="_blank" rel="noopener noreferrer"&gt;- Configure the IBM MQ JMS Receiver Adapter&lt;/A&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN&gt;BigCommerce adapter&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN&gt;Facilitates the connectivity to BigCommerce GraphQL &amp;amp; REST Admin APIs, accelerates the implementation time and reduces complexity of connecting to BigCommerce. This adapter is available on SAP Business Accelerator Hub.&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P class=""&gt;&lt;A href="https://hub.sap.com/package/BigCommerceAdapter/overview" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;- BigCommerce Adapter at SAP Business Accelerator Hub&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/bigcommerce-receiver-adapter" target="_blank" rel="noopener noreferrer"&gt;- BigCommerce Receiver Adapter&lt;/A&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;üöÄ&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;üöÄ&lt;/span&gt;Discover the &lt;A href="https://community.sap.com/t5/integration-blog-posts/new-partner-content-on-sap-business-accelerator-hub-q3-25/ba-p/14232215" target="_self"&gt;latest content packages&lt;/A&gt;, including APIs and Integrations, released on the SAP Business Accelerator Hub by our partners in Q3 2025. These releases come with high-level details to help you understand their features and benefits.&lt;/P&gt;&lt;H1 id="toc-hId-61584067"&gt;&lt;STRONG&gt;&lt;SPAN&gt;API-Centric &amp;amp; Event-Driven Integrations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H1&gt;&lt;H2 id="toc-hId--5846719"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Support for reusable API artifacts in Edge Integration Cell&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Customers can now leverage components, endpoints, and services across multiple applications, projects, or contexts, without having to perform significant adaptations. The reusability of API artifacts enables companies to implement a centralized security and traffic management system for exposed APIs. It not only enhances compliance and reduces misconfiguration risks but also significantly lowers both the total cost of development and ownership by eliminating redundant configurations and promoting the reuse of existing API artifacts, which means additional API calls are avoided, leading to cost savings. &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/reusable-api-artifact?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Learn more&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="reusable apis.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327913i31395863592EF29E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="reusable apis.png" alt="reusable apis.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Watch the demo from this year's Devtoberfest - Session "&lt;EM&gt;Next generation hybrid integration with Edge Integration Cell&lt;/EM&gt;":&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FoZ0Bu6plkfk%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DoZ0Bu6plkfk&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FoZ0Bu6plkfk%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="üî¥ Unleash Next-Generation Hybrid Integration with Edge Integration Cell" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;H2 id="toc-hId-144894133"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration of Advanced Event Mesh with SAP Cloud Application Event Hub&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The latest updates allow you to connect your SAP Integration Suite, advanced event mesh system to SAP Cloud Application Event Hub for the consumption and exposure of events.&lt;/P&gt;&lt;P&gt;SAP Cloud Application Event Hub creates a clear, user-friendly, and adaptable way to easily exchange business events across SAP's cloud landscape. The solution is a key part of SAP's event-driven architecture. With the &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/sap-integration-suite/advanced-event-mesh/access-sap-business-events-on-sap-integration-suite-advanced-event-mesh" target="_blank" rel="noopener noreferrer"&gt;integration&lt;/A&gt;&lt;/SPAN&gt;, you can access events from various SAP business systems, published via the hub, directly on SAP Integration Suite's advanced event mesh.&lt;/P&gt;&lt;H1 id="toc-hId-241783635"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Migration &amp;amp; Modernization&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H1&gt;&lt;H2 id="toc-hId--248132877"&gt;&lt;STRONG&gt;&lt;SPAN&gt;ABAP proxy generation from service interfaces for current users of SAP Process Orchestration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;SAP Integration Suite now supports the implementation of existing use cases for the Enterprise Services Repository using an efficient API-first development methodology. This assists users in importing the service interface artifacts from their PI/PO systems to the Cloud Integration workspace. The feature includes the ability to generate and update&amp;nbsp;ABAP Proxies (non-language-specific interface descriptions in Web Services Description Language converted into executable interfaces) in SAP backend or S/4 HANA systems by connecting them to the SAP Integration Suite tenant and it‚Äôs available in the multi-cloud environment. Find more details and the prerequisites &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/generating-abap-proxy?locale=en-US#prerequisites" target="_blank" rel="noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--444646382"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Migration assessment: Clean core modernization recommendations for BAPIs&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This extension of the Migration Assessment capability in SAP Integration Suite makes it possible for users to analyse used BAPIs in SAP Process Orchestration. Additionally, they receive recommendations available in the SAP Business Accelerator Hub to transition from legacy content and adopt a clean core approach, e.g. replacing RFCs (BAPIs) with SOAP/OData APIs, IDOCs with Business Events, Alert Rules by SAP Cloud ALM, and more. Explore all &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/modernization-recommendations?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;modernization recommendations&lt;/A&gt;&lt;/SPAN&gt; covered in each area.&lt;/P&gt;&lt;H1 id="toc-hId--347756880"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Dive Deeper&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H1&gt;&lt;H2 id="toc-hId--837673392"&gt;&lt;STRONG&gt;&lt;SPAN&gt;New learning offerings available&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-suse-rancher" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;Accelerating Hybrid &lt;/SPAN&gt;&lt;/A&gt;&lt;A href="https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-suse-rancher" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;Integrations with SAP &lt;/SPAN&gt;&lt;/A&gt;&lt;A href="https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-suse-rancher" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;Integration Suite on SUSE &lt;/SPAN&gt;&lt;/A&gt;&lt;A href="https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-suse-rancher" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;Rancher&amp;nbsp;&lt;/SPAN&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;Set up, deploy, and operate Edge Integration Cell on SUSE Rancher Kubernetes Engine&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;Time investment 3h, Record of achievement&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-redhat-openshift" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;Accelerating Hybrid &lt;/SPAN&gt;&lt;/A&gt;&lt;A href="https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-redhat-openshift" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;Integrations with SAP &lt;/SPAN&gt;&lt;/A&gt;&lt;A href="https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-redhat-openshift" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;Integration Suite on RedHat &lt;/SPAN&gt;&lt;/A&gt;&lt;A href="https://learning.sap.com/learning-journeys/accelerating-hybrid-integrations-with-sap-integration-suite-on-redhat-openshift" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;OpenShift&amp;nbsp;&lt;/SPAN&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;Set up, deploy, and run an Edge Integration Cell on Red Hat OpenShift&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;Time investment 3h, Record of achievement&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/exploring-enterprise-automation-with-sap" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;Exploring Enterprise &lt;/SPAN&gt;&lt;/A&gt;&lt;A href="https://learning.sap.com/learning-journeys/exploring-enterprise-automation-with-sap" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;Automation with SAP&lt;/SPAN&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;Understand how SAP &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;Signavio&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;, SAP Build, and SAP Integration Suite work together&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;to improve efficiency and responsiveness&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN&gt;Time investment 1.5h, Record of achievement&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId--1034186897"&gt;&lt;STRONG&gt;&lt;SPAN&gt;What‚Äôs next?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Integration @&amp;nbsp;Devtoberfest: &lt;A href="https://community.sap.com/t5/devtoberfest-blog-posts/devtoberfest-2025-integration-track-sessions/ba-p/14180984" target="_self"&gt;watch all sessions&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Join us at SAP TechEd 2025: &lt;A href="https://community.sap.com/t5/sap-teched-blog-posts/shape-what-s-next-with-sap-integration-suite-at-teched-2025/ba-p/14220264" target="_self"&gt;explore the Integration track and register&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;A href="https://community.sap.com/source-Ids-list" target="1_les6p4hy" rel="nofollow noopener noreferrer"&gt;&amp;nbsp;&lt;/A&gt;&lt;/P&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-what-s-new-in-q3-2025/ba-p/14243767"/>
    <published>2025-10-16T09:38:05.160000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108</id>
    <title>SAML+OAuth2 (PowerApps --&gt; SAP)</title>
    <updated>2025-10-17T12:14:09.642000+02:00</updated>
    <author>
      <name>Jakub-Kocourek</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/86328</uri>
    </author>
    <content>&lt;P&gt;&lt;ul =""&gt;&lt;li style="list-style-type:disc; margin-left:0px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108#toc-hId-1633775529"&gt;Overview&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:0px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108#toc-hId-1437262024"&gt;Basic setup&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:0px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108#toc-hId-1240748519"&gt;Postman test&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:0px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108#toc-hId-1044235014"&gt;SAP Integration Suite setup&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:0px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108#toc-hId-847721509"&gt;Microsoft PowerPlatform test&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:0px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108#toc-hId-651208004"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1633775529"&gt;Overview&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;!--      ScriptorStartFragment      --&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;This setup describes SAP data consumption (S/4HANA) in Microsoft PowerApps with user authentication using Microsoft EntraID. So you could login to Microsoft PowerApps with your EntraID account and use there data from S/4HANA.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_37-1760621266734.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328469iE7A22D144F52B734/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_37-1760621266734.png" alt="JakubKocourek_37-1760621266734.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;If you're interested in the theory and architecture behind this setup, please read this excellent &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/integrating-low-code-solutions-with-microsoft-using-sap-integration-suite/ba-p/13789298" target="_blank"&gt;article&lt;/A&gt;&lt;SPAN&gt; written by Martin Pankraz.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;Steps described here are compatible with S/4HANA On-premise, S/4HANA Private Cloud and ECC 6 EHP8, but some screens may look different as screenshots were captured in S/4HANA Private Cloud 2023.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;H1 id="toc-hId-1437262024"&gt;&lt;STRONG&gt;Basic setup&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;Start by checking that all required services are enabled in T-Code SICF.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;/sap/bc/webdynpro/sap/saml2&lt;/LI&gt;&lt;LI&gt;/sap/public/bc/sec/saml2&lt;/LI&gt;&lt;LI&gt;/sap/public/bc/sec/cdc_ext_service&lt;/LI&gt;&lt;LI&gt;/sap/public/myssocntl&lt;/LI&gt;&lt;LI&gt;/sap/bc/sec/oauth2/token&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Open T-Code SAML2 and enable SAML support. Provider name could be any string, but must be &lt;U&gt;URL compliant&lt;/U&gt;! It's best practice to use http://&amp;lt;SID&amp;gt;&amp;lt;client&amp;gt;. Switch selection mode to automatic if you intent to use only one IDP.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_0-1760621638802.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328501i31CE1200E6484425/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_0-1760621638802.png" alt="JakubKocourek_0-1760621638802.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_1-1760621638804.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328502iA8F012C105071BAD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_1-1760621638804.png" alt="JakubKocourek_1-1760621638804.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_2-1760621638808.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328503iC6E260CB32AD5C56/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_2-1760621638808.png" alt="JakubKocourek_2-1760621638808.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Local provider is created. Download metadata needed for next steps.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_3-1760621638811.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328506i820D01B39C54D62F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_3-1760621638811.png" alt="JakubKocourek_3-1760621638811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now go to EntraID and create Enterprise App of type "SAP NetWeaver".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_4-1760621638811.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328504i51D618885D01D54D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_4-1760621638811.png" alt="JakubKocourek_4-1760621638811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On "Single sign-on" tab click "SAML". New blank configuration will be created. Use "Upload metadata file" button and select metadata file downloaded from SAP. This loads SAP's metadata into EntraID.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_5-1760621638814.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328505iC631E517DD93AB92/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_5-1760621638814.png" alt="JakubKocourek_5-1760621638814.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_6-1760621638818.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328507iC76758AEEA3363AA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_6-1760621638818.png" alt="JakubKocourek_6-1760621638818.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Edit "Reply URL" to point to Token service of OAuth2 and don't forget to set correct client in parameter "sap-client". "Sign on URL" could be any URL compliant string (ex. &lt;A href="https://dummy.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://dummy.com&lt;/A&gt;).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_7-1760621638824.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328509iD0EA646835FE1411/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_7-1760621638824.png" alt="JakubKocourek_7-1760621638824.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Edit "Attributes &amp;amp; Claims". Click on "Unique User Identifier (Name ID)".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_8-1760621638825.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328508iC8B3A1100FF36C95/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_8-1760621638825.png" alt="JakubKocourek_8-1760621638825.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_9-1760621638826.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328512i078E5CC5733CCF1D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_9-1760621638826.png" alt="JakubKocourek_9-1760621638826.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You have two options here, based on attribute that you like to use as user identifier.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;If you don't have any email address assigned to more than one user in SAP and you use email as UPN in EntraID, you could match EntraID and SAP user based on email. In this case select "Name identifier format" = "Email address" and "Source attribute" = "user.userprincipalname".&lt;/LI&gt;&lt;LI&gt;Otherwise find source attribute that contains SAP username. Ex. sAMAccountName. For this scenario choose "Name identifier format" = "Unspecified".&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_10-1760621638827.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328510iACD46CC3CA9F3D28/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_10-1760621638827.png" alt="JakubKocourek_10-1760621638827.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_11-1760621638827.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328511iCECE96D4FCD10C2C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_11-1760621638827.png" alt="JakubKocourek_11-1760621638827.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Save and return to "Single sign-on" tab of your Enterprise App configuration. In "SAML Certificates" section download the certificate and federation metadata.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_12-1760621638831.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328513i21C25A73960E7F0D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_12-1760621638831.png" alt="JakubKocourek_12-1760621638831.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Go back to SAP backend and open T-Code SAML2. Switch to "Trusted Providers" tab and select "OAuth 2.0 Identity providers" under the "List of Trusted providers". Add a new provider using the metadata you just downloaded from EntraID.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_13-1760621638833.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328515i10EB02B34042B78F/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_13-1760621638833.png" alt="JakubKocourek_13-1760621638833.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the next step, upload the certificate downloaded from EntraID. In the "Provider" and "Signature and Encryption" steps, click "Next" and then "Finish".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_14-1760621638835.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328514iC656328C6FF53B75/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_14-1760621638835.png" alt="JakubKocourek_14-1760621638835.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_15-1760621638838.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328516i342A1CCC3A3EC939/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_15-1760621638838.png" alt="JakubKocourek_15-1760621638838.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Edit the new trusted IDP and select the name format "Unspecified" or "E-mail", depending on the user mapping scenario. Scenario 1 is "E-mail", scenario 2 is "Unspecified".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_16-1760621638843.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328517i84C13995C18EE921/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_16-1760621638843.png" alt="JakubKocourek_16-1760621638843.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Set the "User ID Mapping Mode" according to the scenario. For scenario 1 "email" or "Logon ID" for scenario 2.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_17-1760621638846.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328518i7083347D5555A069/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_17-1760621638846.png" alt="JakubKocourek_17-1760621638846.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_18-1760621638849.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328519i3E2EDC1852182594/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_18-1760621638849.png" alt="JakubKocourek_18-1760621638849.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Save and enable the configuration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_19-1760621638851.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328520i489CB1B7167AF75F/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_19-1760621638851.png" alt="JakubKocourek_19-1760621638851.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Open EntraID again and create new App registration (not Enterprise app) that will be used as client.&lt;/P&gt;&lt;P&gt;On "Authentication" tab, section "Platform configurations" click "Add a platform" and select "Web". Set "Redirect URIs" = "&lt;A href="https://localhost:44326/signin-oidc" target="_blank" rel="noopener nofollow noreferrer"&gt;https://localhost:44326/signin-oidc&lt;/A&gt;" and select both tokens to be issued.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_20-1760621638853.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328522i36B619803B3A91AF/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_20-1760621638853.png" alt="JakubKocourek_20-1760621638853.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On "Certificates &amp;amp; secrets" tab generate new client secrete. &lt;U&gt;Save&lt;/U&gt; the content of &lt;U&gt;"Value"&lt;/U&gt; field as you can't access it later!&lt;/P&gt;&lt;P&gt;Next, on "API permissions" tab add a permission "Microsoft Graph" as delegated. Select "openid" (Sign users in).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_21-1760621638856.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328523i45C121F776066FD5/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_21-1760621638856.png" alt="JakubKocourek_21-1760621638856.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On "Expose and API" tab add a scope. URI should be predefined. After clicking "Save" new configuration panel will be shown. Fill there "Scope name" = "user_impersonation" and switch consent to "Admins and users". Set some display name and description. Finally click "Add scope".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_22-1760621638857.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328524iBBE870AB7925CCD8/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_22-1760621638857.png" alt="JakubKocourek_22-1760621638857.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the same tab add a client application. Set "Client ID" = "6bee4d13-fd19-43de-b82c-4b6401d174c3" and set our scope in "Authorized scopes". This fixed client ID is identifier of SAP OData connector in PowerApps platform.&lt;/P&gt;&lt;P&gt;Copy "Application (client) ID" from "Overview" tab.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_23-1760621638863.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328525i3998F1B936ECD05A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_23-1760621638863.png" alt="JakubKocourek_23-1760621638863.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now switch to App registration (not Enterprise app) that corresponds to the server part (same name as our Enterprise app defined in the beginning). Go to "Expose and API" tab and add a client application. Add there copied client ID and set scope.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_24-1760621638864.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328526iE172836C1EFFFA56/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_24-1760621638864.png" alt="JakubKocourek_24-1760621638864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;One again switch to SAP system. Create technical user for impersonation. This user must be type B (System) and has correct permission role assigned. You need these permissions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;S_RFC: RFC_TYPE=Function group, RFC_NAME=SYST, ACTVT=Execute&lt;/LI&gt;&lt;LI&gt;S_SCOPE: OA2_CLIENT=SOAUTH2 (set same as ID of technical user), OA2_SCOPE=&amp;lt;required_scopes&amp;gt; (start with "*" for testing and restrict later)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Call T-Code SOAUTH2. On the screen click "Create". Set ID of technical user as "OAuth 2.0 Client ID" and write some description.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_25-1760621638868.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328527i0DA068E4C0584351/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_25-1760621638868.png" alt="JakubKocourek_25-1760621638868.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In "Grant Type Setting" step select our trusted IDP from the list and set "Refresh Allowed".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_26-1760621638872.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328528iBA20222140F0AD7C/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_26-1760621638872.png" alt="JakubKocourek_26-1760621638872.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In "Scope Assignment" step set some service that you'd like to expose.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_27-1760621638875.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328529i2847B4327E772875/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_27-1760621638875.png" alt="JakubKocourek_27-1760621638875.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1240748519"&gt;&lt;STRONG&gt;Postman test&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;It's time for first test. You could use &lt;A href="https://1drv.ms/u/c/6839f139c797b9bf/EcjYSwlb5rBMs8CCPEIUxSkBEEDijKDKeBGk1XPpX_ZQmA?e=6oh2xA" target="_blank" rel="noopener nofollow noreferrer"&gt;attached Postman collection&lt;/A&gt;. Edit variables of the collection.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Variable&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Content&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Example&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAP GW IP Address&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Address of SAP AS&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;vhigyi4aci.*************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAP GW Port&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Https port of SAP AS&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;44300&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;AAD tenant ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Entra tenant ID (visible on app registration overview)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;d3f10f6d-****************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;AAD Application ID for SAP GW&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS SAML local provider name&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="http://I4A400" target="_blank" rel="noopener nofollow noreferrer"&gt;http://I4A400&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Frontend App Client Id&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Client ID of client app registration&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;b20e44f0-d88a-4558-8a53-b34484425e3f&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Frontend App Client Secret&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Generated client secret of client app registration&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;HZ48Q~NDBD38a4XW~************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Frontend App custom scope&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Exposed API scope of client app registration&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;api://b20e44f0-d88a-4558-8a53-b34484425e3f/user_impersonation&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAP OAuth Client ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS technical user ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SOAUTH2&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAP OAuth Client Pwd&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS technical user password&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;krnsW)************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAP OAuth Scope&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Scope (service) defined in OAuth config on SAP AS&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZAPI_BUSINESS_PARTNER_0001&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAPBearerToken&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Leave blank, generated in process&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;bearerToken&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Leave blank, generated in process&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Please also change service name and parameters in request number 4 based on your use case (if not calling BP OData service as in example).&lt;/P&gt;&lt;P&gt;Now open first call of the collection and send request. Ignore output and open console (bottom left corner). Copy whole link (without GET keyword) and paste it in the web browser. After successful EntraID login blank error page will be shown. Go to the address bar and copy content of parameter "access_token". Open request number 2 and paste token to the "assertion" parameter.&lt;/P&gt;&lt;P&gt;After sending request number 2 you should see "access_token" in the output. Open request number 3 and send it. If successfull you would get new (short) "access_token" and also "refresh_token" and correct "scope".&lt;/P&gt;&lt;P&gt;Finally open and send request number 4. You should see data from your service.&lt;/P&gt;&lt;H1 id="toc-hId-1044235014"&gt;&lt;STRONG&gt;SAP Integration Suite setup&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;In order to use this setup from internet / public cloud you have to expose SAP AS over SAP Cloud Connector.&lt;/P&gt;&lt;P&gt;In case that you don't have SAP Integration Suite BTP subaccount already added in SAP Cloud Connector, please use official guide to add it: &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/managing-subaccounts?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SAP Help Portal | SAP Online Help&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Now go to the Cloud Connector subaccount and select "Cloud to On-Premises" in the left menu. On "Access Control" tab add new system (Mapping Virtual to Internal System). Backend type is "ABAP System", protocol "HTTPS". Fill in hostname and port of SAP AS.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_28-1760621638877.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328532i4FD0535130720DA1/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_28-1760621638877.png" alt="JakubKocourek_28-1760621638877.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Use same values for virtual host and port. Disable Principal Propagation and Certificate Logon as you don't need these in this scenario. Host in request header should be Virtual Host. Set SID (ex. I4A) as System ID.&lt;/P&gt;&lt;P&gt;Expose services (your OData) in "Resources" section. On this example I'm exposing whole system (don't do this with productive SAP AS!).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_29-1760621638878.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328530i76024A238BF67BE2/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_29-1760621638878.png" alt="JakubKocourek_29-1760621638878.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Open SAP Integration Suite and begin with setup there. In left menu select Configure -&amp;gt; APIs and select "API Providers" tab.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_30-1760621638879.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328533iFDA3B0BFD46AA8E8/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_30-1760621638879.png" alt="JakubKocourek_30-1760621638879.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create new provider. Fill some meaningful name on "Overview" tab. Switch to "Connection" tab and set "Type" = "On Premise", "Host" = &amp;lt;AS_ABAP_HOST&amp;gt;, "Port" = &amp;lt;AS_ABAP_PORT&amp;gt;, leave "Authentication" = "None". Set "sap-client" = &amp;lt;AS_ABAP_CLIENT&amp;gt; in Additional Properties.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_31-1760621638882.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328534i40D1B0CE72B32A3D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_31-1760621638882.png" alt="JakubKocourek_31-1760621638882.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Save provider and test connection. It should return "&lt;EM&gt;System is up and reachable. However, the ping check responded with code : 404; Message : Not found&lt;/EM&gt;". That's correct state because we're calling base URL and not any reachable service.&lt;/P&gt;&lt;P&gt;Go to "Policy Templates" tab and import definition that's available in &lt;A href="https://api.sap.com/policytemplate/Principal_Propagation_via_Entra_Id" target="_blank" rel="noopener noreferrer"&gt;SAP Business Accelerator Hub&lt;/A&gt;. This policy needs some mapping. So switch to "Key Value Maps" tab and create new mapping (ex. name "I4ACLNT400_EntraID"). Use table bellow as an example.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Key&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Content&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Example value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;issuer&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Standard Microsoft issuer value (constant)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://sts.windows.net/d3f10f6d-4a4d-4cde-acb6-284a54d78b3a/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sts.windows.net/d3f10f6d-4a4d-4cde-acb6-284a54d78b3a/&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;AADSAPResource&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS SAML local provider name&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="http://I4A400" target="_blank" rel="noopener nofollow noreferrer"&gt;http://I4A400&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;entra-id-audience&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Exposed API scope of client app registration (without scope name)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;api://b20e44f0-d88a-4558-8a53-b34484425e3f&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;AADRegisteredAppClientSecret&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Generated client secret of client app registration&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;HZ48Q~NDBD38a4XW~************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;sap-oauth-client-password&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS technical user password&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;krnsW)************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;AADRegisteredAppClientId&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Client ID of client app registration&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;b20e44f0-d88a-4558-8a53-b34484425e3f&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAPOAuthServerAdressForTokenEndpoint&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS host + port&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;vhigyi4aci.**********:44300&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;sap-oauth-client-username&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS technical user ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SOAUTH2&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;sap-oauth-scope&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Scope (service) defined in OAuth config on SAP AS&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZAPI_BUSINESS_PARTNER_0001&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;entra-id-tenant-id&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Entra tenant ID (visible on app registration overview)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;d3f10f6d-*****************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Finally switch to "API Proxies" tab and create new proxy. Select your API Provider, set URL to OData service that you have in the scope. Define some name and title of proxy. API Base Path could be anything you like - it's simply prefix for OData calls to this service (ex. /sap/utility/odata).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_32-1760621638884.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328535i7C3844581615B5FA/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_32-1760621638884.png" alt="JakubKocourek_32-1760621638884.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Ignore error "&lt;EM&gt;Unable to fetch metadata&lt;/EM&gt;" - it's normal as we didn't applied policy yet.&lt;/P&gt;&lt;P&gt;In the new API provider click "..." in top right corner and select "Policies". Again in top right corner click "Policy Template" -&amp;gt; "Apply". Select policy that you downloaded earlier and apply it. You should now see it under target endpoint's post flow.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_33-1760621638885.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328536i335AC81ABC899C1A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_33-1760621638885.png" alt="JakubKocourek_33-1760621638885.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now go step by step through the policy. In second step (MapVariables) replace value of "mapIdentifier" with the name of your value map (ex. I4ACLNT400_EntraID). In steps "RefreshSAPToken", "fetchSAPOAuthToken" and "GetCSRFToken" change value of tag "APIProvider" from "PM1-via-SCC" to your provider name (ex. I4ACLNT400_NOAUTH).&lt;/P&gt;&lt;P&gt;Click "Update", "Save" and "Deploy".&lt;/P&gt;&lt;H1 id="toc-hId-847721509"&gt;&lt;STRONG&gt;Microsoft PowerPlatform test&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;Login to Microsoft PowerApps at &lt;A href="https://make.powerapps.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;Power Apps&lt;/A&gt; and switch to correct environment (if using more). In the left menu click "Flows" and create new cloud flow "Instant cloud flow". Fill some name and choose "Manually trigger a flow".&lt;/P&gt;&lt;P&gt;Add new step with connector "SAP OData", action "Read OData entity".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_34-1760621638888.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328537i816803373E4CB1A9/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_34-1760621638888.png" alt="JakubKocourek_34-1760621638888.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Set authentication type "Microsoft Entra ID Integrated (with APIM)". OData base URI is URL of you API Proxy service (ex. https://******&lt;STRONG&gt;.&lt;/STRONG&gt;test.apimanagement.&lt;STRONG&gt;******&lt;/STRONG&gt;.hana.ondemand.com/sap/utility/odata/BusinessPartner), Entra ID resource URI is API scope of client app (ex. api://b20e44f0-d88a-4558-8a53-b34484425e3f/user_impersonation). Set "API Key Name" = "APIKey (constant), "API Key Value" = &amp;lt;Client_secret&amp;gt; (ex. HZ48Q~NDBD38a4XW~************) and SAP's client name / password.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_35-1760621638893.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328538iC884AC87A75BD85A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_35-1760621638893.png" alt="JakubKocourek_35-1760621638893.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You should see Entra ID popup for login. After that service should be authenticated and entities readable.&lt;/P&gt;&lt;H1 id="toc-hId-651208004"&gt;&lt;STRONG&gt;Troubleshooting&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;In case you're struggling with the basic setup (Postman testing), start T-Code SEC_DIAG_TOOL_VIEWER and capture the login traffic. You can find errors there and search SAP for Me. Always double check that user calling API (your business user, not SOAUTH2) is valid and has correct permission assigned (check SU53 for errors).&lt;/P&gt;&lt;P&gt;If calling OData API from PowerApps fails immediately with authentication error, check EntraID tenant log for errors associated with your registered client app.&lt;/P&gt;&lt;P&gt;Sometimes it fails later in login process and this could be debuged on Integration Suite. Open definition of your API Proxy, click "Debug" (top right corner) and "Start Debug" (bottom right corner). Now call API from PowerApps, refresh debugged window and check for errors.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108"/>
    <published>2025-10-17T12:14:09.642000+02:00</published>
  </entry>
</feed>
