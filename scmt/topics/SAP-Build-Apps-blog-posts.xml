<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Build-Apps-blog-posts.xml</id>
  <title>SAP Community - SAP Build Apps</title>
  <updated>2025-08-08T23:00:30.027704+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Build Apps/pd-p/6cfd8176-04ae-4548-8f38-158456e1a47a" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Build Apps blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/export-data-to-excel-in-sap-build-apps-using-javascript-and-flow-functions/ba-p/14106896</id>
    <title>Export Data to Excel in SAP Build Apps Using JavaScript and Flow Functions</title>
    <updated>2025-05-22T10:43:24.792000+02:00</updated>
    <author>
      <name>INC02778</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1421127</uri>
    </author>
    <content>&lt;P class=""&gt;In this blog post, we’ll walk through how to implement Excel file export functionality in &lt;STRONG&gt;SAP Build Apps&lt;/STRONG&gt; using a &lt;STRONG&gt;base64-encoded string&lt;/STRONG&gt;. This use case is particularly useful when you're working with data returned from a backend API in base64 format—such as when exporting filtered reports or datasets.&lt;/P&gt;&lt;P class=""&gt;Upon applying filters and invoking the backend API, the response returns the Excel file encoded in base64. This string is then stored in a &lt;STRONG&gt;Page Variable&lt;/STRONG&gt;, decoded using a &lt;STRONG&gt;JavaScript logic block&lt;/STRONG&gt;, and converted into a &lt;STRONG&gt;Blob URL&lt;/STRONG&gt;. The Blob URL allows the app to seamlessly trigger a file download, giving users a smooth and intuitive experience.&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Step-by-Step Implementation&lt;/STRONG&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1988707455"&gt;&lt;STRONG&gt;Step 1: Create a Page Variable&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class=""&gt;Create a &lt;STRONG&gt;Page Variable&lt;/STRONG&gt; to store the base64-encoded string returned by your backend API.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Build Apps Blog 1.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/263881iE860437485E7E513/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Build Apps Blog 1.png" alt="Build Apps Blog 1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="INC02778_0-1747748367708.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/263885iBD4D9C7C9325CDA0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="INC02778_0-1747748367708.png" alt="INC02778_0-1747748367708.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1792193950"&gt;&lt;STRONG&gt;Step 2: Add a JavaScript Block&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class=""&gt;In the &lt;STRONG&gt;Logic Editor&lt;/STRONG&gt;, drag in a &lt;STRONG&gt;JavaScript block&lt;/STRONG&gt; and pass the base64 string to it as an input.&lt;BR /&gt;Set the output of the JavaScript block to type URL (Any Protocol).&lt;/P&gt;&lt;P class=""&gt;Paste the following code into the JavaScript block:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;// Helper: create Blob URL instead of data: URL
function createBlobURL(base64String, mimeType = "application/octet-stream") {
    const byteCharacters = atob(base64String);
    const byteNumbers = new Array(byteCharacters.length);
    for (let i = 0; i &amp;lt; byteCharacters.length; i++) {
        byteNumbers[i] = byteCharacters.charCodeAt(i);
    }
    const byteArray = new Uint8Array(byteNumbers);
    
    const blob = new Blob([byteArray], { type: mimeType });
    return URL.createObjectURL(blob);
}

// Example usage:
const base64Data = inputs.base64Data;
const mimeType = inputs.mimeType || "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";

const blobURL = createBlobURL(base64Data, mimeType);
console.log(blobURL);

return { result: blobURL };&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This function takes the base64-encoded string, decodes it, and converts it into a downloadable Blob URL that can be used in the subsequent download logic.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="INC02778_1-1747748495496.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/263895iDAEB06C189AC251C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="INC02778_1-1747748495496.png" alt="INC02778_1-1747748495496.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1595680445"&gt;&lt;STRONG&gt;Step 3: Install Required Flow Functions&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class=""&gt;From the &lt;STRONG&gt;Marketplace&lt;/STRONG&gt;, install the following two flow functions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Download Files&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Export to Downloads&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Build apps blog 2.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/263918iBF58BBBBEF73D457/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Build apps blog 2.png" alt="Build apps blog 2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1399166940"&gt;&lt;STRONG&gt;Step 4: Design the Flow Logic&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class=""&gt;Connect the flow in the following sequence:&lt;BR /&gt;&lt;STRONG&gt;JavaScript Block → Download Files → Export to Downloads&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;This setup ensures the decoded file is first processed and then downloaded properly to the user’s device.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="INC02778_0-1747749498842.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/263921iB141B28C8FA79CEA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="INC02778_0-1747749498842.png" alt="INC02778_0-1747749498842.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1202653435"&gt;&lt;STRONG&gt;Step 5: Configure the Download Files Block&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Set the &lt;STRONG&gt;Download URL&lt;/STRONG&gt; input to the output of the JavaScript block (the Blob URL).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Configure the filename and other settings as required.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="INC02778_1-1747749575475.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/263924iA0551DDEC5DDF24B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="INC02778_1-1747749575475.png" alt="INC02778_1-1747749575475.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1006139930"&gt;&lt;STRONG&gt;Step 6: Configure the Export to Downloads Block&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Map the inputs of this block to the corresponding outputs of the &lt;STRONG&gt;Download Files&lt;/STRONG&gt; block.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;This will save the file to the user's local device through the export mechanism.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="INC02778_2-1747750766277.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/263930i27F4BF8413F144AD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="INC02778_2-1747750766277.png" alt="INC02778_2-1747750766277.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-680543706"&gt;Final Result&lt;/H3&gt;&lt;P class=""&gt;Once the user triggers the flow (e.g., by clicking a button), the backend API is called, and the returned base64-encoded Excel file is converted and downloaded — all within the SAP Build Apps environment.&lt;/P&gt;&lt;P class=""&gt;This approach offers a clean, no-code/low-code solution to implementing Excel export functionality, even when the application is consumed via &lt;STRONG&gt;SAP Build Workzone&lt;/STRONG&gt; there won't be any issue in exporting the file.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/export-data-to-excel-in-sap-build-apps-using-javascript-and-flow-functions/ba-p/14106896"/>
    <published>2025-05-22T10:43:24.792000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/mastering-complex-sbpa-approvals-a-deep-dive-into-wait-steps-script-tasks/ba-p/13796837</id>
    <title>Mastering Complex SBPA Approvals : A Deep Dive into Wait Steps, Script Tasks, and API Integrations</title>
    <updated>2025-06-03T05:00:19.725000+02:00</updated>
    <author>
      <name>mohit_bansal3</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/40540</uri>
    </author>
    <content>&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;Welcome back to our new blog series,&amp;nbsp; our&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/architecting-complex-workflows-real-time-scenarios-with-sap-build-process/ba-p/13742643" target="_self"&gt; previous blog series&amp;nbsp;&lt;/A&gt; delved into the intricacies of&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/architecting-complex-workflows-real-time-scenarios-with-sap-build-process/ba-p/13742643" target="_self"&gt; dynamic sequential approval&lt;/A&gt; workflows.&lt;/P&gt;&lt;P&gt;In this two-part series, my colleague&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1476112"&gt;@Adwait_Fadnavis&lt;/a&gt;&amp;nbsp; and I will explore some very critical business workflow&amp;nbsp; requirements&amp;nbsp; in detail using SAP Build Process Automation.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Throughout this blog series, we will delve into the following critical business requirements:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Part 1 - Current Blog :Mastering Complex SBPA Approvals : A Deep Dive into Wait Steps, Script Tasks, and API Integrations&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Part 2 : &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/mastering-sbpa-approvals-a-deep-dive-into-wait-steps-script-tasks-and-api/ba-p/14117204" target="_self"&gt;Demonstration with Complete end to end testing&amp;nbsp;&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;We will demonstrate how to use various SAP Build Process Automation tools to solve real-time challenges effectively.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This blog post addresses this complex requirement with detailed step-by-step instructions. You'll learn how to ensure workflows advance smoothly, even with&amp;nbsp; approval condition utilizing various innovative latest features&amp;nbsp;such as: Wait Step with API Triggering , Workflow Context update via API etc.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;FONT size="4"&gt;&lt;EM&gt;&lt;STRONG&gt;Business Context and Problem Statement&lt;/STRONG&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;While working on multiple SAP Build Process Automation projects, we have faced situations where workflows only proceed if all departments or approvers approve them unanimously.&lt;/P&gt;&lt;P&gt;If any approver rejects the proposal, the entire workflow is rejected . This creates a need for a parallel approval process, &lt;EM&gt;&lt;STRONG&gt;adhering to an "all-or-nothing" requirement,&lt;/STRONG&gt;&lt;/EM&gt; which SAP's standard solutions do not support.&lt;/P&gt;&lt;P&gt;In a below sample procurement workflow, the request is created and submitted. Both the Department Manager and Finance Department must approve it simultaneously. If either rejects, the workflow is terminated.&lt;/P&gt;&lt;P&gt;If both approve, the request goes to the Executive for final approval. The Executive's decision determines whether the request is processed or terminated.&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dynamic Number of Parallel Approval" style="width: 815px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266196i4A65416364DA5964/image-dimensions/815x719?v=v2" width="815" height="719" role="button" title="mohit_bansal3_0-1748312890579.png" alt="Dynamic Number of Parallel Approval" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Dynamic Number of Parallel Approval&lt;/span&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;U&gt;&lt;FONT size="4"&gt;&lt;EM&gt;&lt;STRONG&gt;Technical Solutioning &amp;amp; Design&lt;/STRONG&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/U&gt;&lt;P&gt;&lt;SPAN&gt;In this process, we will create&lt;/SPAN&gt;&lt;STRONG&gt; two workflows using SAP Build Process Automation’s Low Code/No Code&lt;/STRONG&gt;&lt;SPAN&gt; approach.&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;Let’s refer to these as &lt;STRONG&gt;Workflow A (main workflow) and Workflow B&lt;/STRONG&gt;.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mohit_bansal3_1-1748314489855.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266198i6E9C6DBD3B0EE57F/image-size/large?v=v2&amp;amp;px=999" role="button" title="mohit_bansal3_1-1748314489855.png" alt="mohit_bansal3_1-1748314489855.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;Workflow A( Main Workflow):&lt;/STRONG&gt;&lt;/FONT&gt; This is the main workflow, triggered with all input parameters, responsible for the overall business process flow.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#3366FF"&gt;Workflow B(Secondary Workflow)&lt;/FONT&gt;:&lt;/STRONG&gt; This workflow handles the approval task. It receives the Approval ID, total number of levels, and current level. If the final approval is granted, it triggers a wait step API&amp;nbsp; in Workflow A to proceed to the next level. If more approvals are needed, it sends the Approval ID to the next level.&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;U&gt;&lt;STRONG&gt;Technical Design Steps for Workflow A:&lt;/STRONG&gt;&lt;/U&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mohit_bansal3_0-1748320427762.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266266i9FB0AC9E0E80C6B6/image-size/large?v=v2&amp;amp;px=999" role="button" title="mohit_bansal3_0-1748320427762.png" alt="mohit_bansal3_0-1748320427762.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Trigger Workflow&lt;/STRONG&gt;: The workflow is initiated with input parameters.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Decision Creation&lt;/STRONG&gt;: A decision step is created to determine the number of approvals require.&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mohit_bansal3_1-1748397456117.png" style="width: 636px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266720iC2121D9311DE6166/image-size/large?v=v2&amp;amp;px=999" role="button" title="mohit_bansal3_1-1748397456117.png" alt="mohit_bansal3_1-1748397456117.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;3. Script Task&lt;/STRONG&gt;: This step determines the total number of approvals and the current approval level.&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;$.context.custom.doneapprovalcount = 0;
$.context.custom.currentcount = 0;
$.context.custom.subwfdefinationid = "Your Secondaray Workflow ID"; // replace with your secondary workflow id
$.context.custom.totalapprovalcount = $.context.decision_getAppprovers_1.Approvers.length;
$.context.custom.triggeredsubprocessids = [];
​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Condition Check&lt;/STRONG&gt;: If the current level matches the total required approvals, A wait step will be created to wait for the completion. If not, Workflow B is triggered to initiate the approval task.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mohit_bansal3_0-1748402197865.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266735i80A9ECA693B65112/image-size/large?v=v2&amp;amp;px=999" role="button" title="mohit_bansal3_0-1748402197865.png" alt="mohit_bansal3_0-1748402197865.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Trigger Workflow B&lt;/STRONG&gt;: Workflow B sends the work item to the respective user for approval.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Wait Step API&amp;nbsp;&lt;/STRONG&gt;: This critical step waits for all parallel approvals to be completed. Once done, the dummy decision is triggered by Workflow B. This is very interesting and latest features&lt;OL&gt;&lt;LI&gt;Create a Wait Step with API as follows.&amp;nbsp;After Deployment it will event will create the API End Point which will used to trigger from secondary workflow B .&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mohit_bansal3_2-1748398144169.png" style="width: 752px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266724i8145CC97E159532D/image-dimensions/752x792?v=v2" width="752" height="792" role="button" title="mohit_bansal3_2-1748398144169.png" alt="mohit_bansal3_2-1748398144169.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Execution ID is the Parent Workflow ID.&lt;/LI&gt;&lt;LI&gt;Upload the API specification and create the action for this&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;Also make sure to create the API key which will be used to trigger it from secondary workflow B.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mohit_bansal3_0-1748399148921.png" style="width: 771px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266726iE419DE671BFCE441/image-dimensions/771x370?v=v2" width="771" height="370" role="button" title="mohit_bansal3_0-1748399148921.png" alt="mohit_bansal3_0-1748399148921.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1152207465"&gt;&lt;FONT size="4"&gt;Technical Design Steps for Workflow B&amp;nbsp; (Triggered via Workflow A)&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mohit_bansal3_0-1748326920552.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266301i039C188E9E0FCE69/image-size/large?v=v2&amp;amp;px=999" role="button" title="mohit_bansal3_0-1748326920552.png" alt="mohit_bansal3_0-1748326920552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Trigger from Workflow A :&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;Workflow B starts when Workflow A reaches a certain point to manage approval tasks separately and in parallel to the main workflow.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Send Approval Task:&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;The approval task is sent to the current level approver to obtain necessary approvals at each level before proceeding.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;On Approval:&amp;nbsp;&lt;/STRONG&gt;The system retrieves instance details and updates the approval count to keep track of completed approvals and update the workflow status.&amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mohit_bansal3_0-1748400024579.png" style="width: 703px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266728i491DDEE2C98375B9/image-dimensions/703x248?v=v2" width="703" height="248" role="button" title="mohit_bansal3_0-1748400024579.png" alt="mohit_bansal3_0-1748400024579.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;sample code&lt;/LI&gt;&lt;/OL&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;$.context.custom.approvedcount = $.context.action_get_getV1WorkflowInstancesWorkflowInstanceIdContext_6.result.custom.doneapprovalcount + 1;&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Check Count: The&lt;/STRONG&gt;&amp;nbsp;system checks if all required approvals are obtained:&lt;UL&gt;&lt;LI&gt;If all approvals are done, the workflow proceeds to the next step.&lt;/LI&gt;&lt;LI&gt;If not all approvals are done This ensures the workflow only proceeds once all approvals are obtained&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mohit_bansal3_1-1748400188638.png" style="width: 716px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266729i99B6CAEA674396B3/image-dimensions/716x449?v=v2" width="716" height="449" role="button" title="mohit_bansal3_1-1748400188638.png" alt="mohit_bansal3_1-1748400188638.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;&lt;STRONG&gt;Update Parent Workflow A Approval Action &lt;/STRONG&gt;: increment the update count. created a custom action. If&amp;nbsp;all the approvals not done, then update the approval count via custom action. (refer our previous blog how to create action for workflow API)&amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mohit_bansal3_2-1748400611380.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266730iA067AF57F0B4FB11/image-size/large?v=v2&amp;amp;px=999" role="button" title="mohit_bansal3_2-1748400611380.png" alt="mohit_bansal3_2-1748400611380.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Retrieve Task ID &amp;amp; Trigger Wait API&amp;nbsp;&lt;/STRONG&gt;trigger wait step ( API) in Workflow A to signal that the approval process is complete / Reject&amp;nbsp; and it can proceed.&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;Now come to most crucial part of the Development: Trigger the wait step via API&lt;/LI&gt;&lt;LI&gt;Created a custom action project&amp;nbsp; for the wait step api end point.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mohit_bansal3_0-1748401010931.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266731i5F77F9ECDF0ADE84/image-size/large?v=v2&amp;amp;px=999" role="button" title="mohit_bansal3_0-1748401010931.png" alt="mohit_bansal3_0-1748401010931.png" /&gt;&lt;/span&gt;Here is the Input mapping for the API call. Needs to provide the API Key and Parent ID.&lt;/LI&gt;&lt;LI&gt;It will trigger the wait step in workflow A to approve / move forward the workflow .&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mohit_bansal3_1-1748401110811.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266732i6387F5788EFB7CDF/image-size/large?v=v2&amp;amp;px=999" role="button" title="mohit_bansal3_1-1748401110811.png" alt="mohit_bansal3_1-1748401110811.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;In the &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/mastering-sbpa-approvals-a-deep-dive-into-wait-steps-script-tasks-and-api/ba-p/14117204" target="_blank"&gt;upcoming blog post - Demonstration with complete end to end testing &lt;/A&gt;&amp;nbsp;,&amp;nbsp;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/1476112" target="_blank"&gt;@Adwait_Fadnavis&lt;/A&gt;&amp;nbsp;&amp;nbsp;will delve into the complete end to end testing for these which is very critical to understand the whole development flow.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;Stay tuned for a comprehensive guide that will enhance your understanding and streamline your Development&amp;nbsp; process.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;Regards,&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.linkedin.com/in/mohit-bansal-430a8218?utm_source=share&amp;amp;utm_campaign=share_via&amp;amp;utm_content=profile&amp;amp;utm_medium=ios_app" target="_self" rel="nofollow noopener noreferrer"&gt;Mohit Bansal&lt;/A&gt;,&lt;/P&gt;&lt;P&gt;SAP Mentor. SAP BTP Solution Architect&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/mastering-complex-sbpa-approvals-a-deep-dive-into-wait-steps-script-tasks/ba-p/13796837"/>
    <published>2025-06-03T05:00:19.725000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/unlocking-the-future-how-sap-build-stands-out-in-application-development/ba-p/14122512</id>
    <title>Unlocking the Future: How SAP Build Stands Out in Application Development</title>
    <updated>2025-06-09T08:48:05.747000+02:00</updated>
    <author>
      <name>vani_raos</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/519976</uri>
    </author>
    <content>&lt;P class=""&gt;SAP Build stands out in the application development market due to its unique combination of low-code/no-code capabilities, deep integration with SAP ecosystems, AI-driven features, and focus on enterprise-grade scalability and governance. Below is a detailed analysis of why SAP Build differentiates itself from competitors like OutSystems, Mendix, or Microsoft Power Apps, emphasizing its strengths in the context of digital transformation and application development.&lt;/P&gt;&lt;H3 id="toc-hId-1861349479"&gt;1. Unified Low-Code/No-Code Platform&lt;/H3&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Comprehensive Suite&lt;/STRONG&gt;: SAP Build integrates three core components—SAP Build Apps, SAP Build Process Automation, and SAP Build Work Zone—into a single platform, enabling end-to-end development of applications, process automation, and business sites. Unlike competitors that often focus on one aspect (e.g., app development or automation), SAP Build provides a holistic solution, reducing the need for multiple tools.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Citizen Developer Empowerment&lt;/STRONG&gt;: Its intuitive drag-and-drop interface and prebuilt templates allow business users with minimal technical expertise to create enterprise-grade applications. This democratizes development, enabling faster prototyping and reducing dependency on specialized developers, which competitors like OutSystems also offer but with less seamless SAP integration.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Standout Factor&lt;/STRONG&gt;: The unified platform lowers the learning curve and streamlines workflows, making it ideal for businesses seeking rapid development without fragmented toolsets.&lt;/P&gt;&lt;H3 id="toc-hId-1664835974"&gt;2. Deep Integration with SAP Ecosystem&lt;/H3&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;SAP BTP Foundation&lt;/STRONG&gt;: Built on SAP Business Technology Platform (BTP), SAP Build seamlessly integrates with SAP S/4HANA, SAP SuccessFactors, SAP Ariba, and other SAP solutions. This ensures a single source of truth, real-time data access, and compatibility with SAP’s clean core strategy, which minimizes technical debt during upgrades.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Extensibility&lt;/STRONG&gt;: The Extensibility Wizard (introduced at SAP TechEd 2024) simplifies customization for SAP S/4HANA Cloud and is planned for SAP SuccessFactors, enabling tailored solutions without complex coding. Competitors like Mendix or Salesforce Lightning require additional integration layers to achieve similar SAP connectivity.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Third-Party Integration&lt;/STRONG&gt;: SAP Build supports integration with non-SAP systems (e.g., Salesforce, Microsoft Dynamics) via SAP Integration Suite, with event-driven architecture planned for Q4 2025, enhancing real-time data flows.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Standout Factor&lt;/STRONG&gt;: Native integration with SAP systems and support for hybrid environments make SAP Build the preferred choice for organizations heavily invested in SAP, unlike general-purpose platforms that require custom connectors.&lt;/P&gt;&lt;H3 id="toc-hId-1468322469"&gt;3. AI-Driven Innovation&lt;/H3&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Joule Studio&lt;/STRONG&gt;: SAP Build leverages AI through Joule Studio, enabling the creation of AI agents for predictive analytics, process automation, and intelligent decision-making. For example, it can automate complex workflows like invoice matching or predict inventory needs, a feature less prevalent in platforms like Appian or ServiceNow.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Embedded Intelligence&lt;/STRONG&gt;: Integration with SAP AI Core allows developers to embed machine learning models into applications, enhancing functionality like demand forecasting or anomaly detection without external tools.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Natural Language Processing&lt;/STRONG&gt;: Joule’s conversational AI simplifies user interactions, making app development and process automation accessible to non-technical users.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Standout Factor&lt;/STRONG&gt;: AI-driven capabilities, tightly integrated with SAP’s enterprise data, provide a competitive edge over platforms with generic AI tools, delivering context-aware solutions for business-specific challenges.&lt;/P&gt;&lt;H3 id="toc-hId-1271808964"&gt;4. Enterprise-Grade Scalability and Governance&lt;/H3&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Scalability&lt;/STRONG&gt;: Built on SAP BTP’s cloud infrastructure, SAP Build supports enterprise-scale deployments with high availability and performance. It handles large-scale transformations, such as SAP S/4HANA migrations, with minimal latency, unlike smaller platforms like Bubble, which are better suited for startups.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Governance and Compliance&lt;/STRONG&gt;: SAP Build includes built-in governance frameworks ensuring GDPR, SOC 2, and other compliance standards, critical for industries like finance or healthcare. This contrasts with platforms like Zoho Creator, which may require additional configurations for enterprise compliance.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Clean Core Strategy&lt;/STRONG&gt;: SAP Build aligns with RISE with SAP’s clean core principles, ensuring extensions are upgradable and maintainable, reducing long-term costs compared to platforms like OutSystems, where customizations can lead to technical debt.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Standout Factor&lt;/STRONG&gt;: Robust governance and scalability make SAP Build a trusted choice for large enterprises with complex regulatory and scalability needs.&lt;/P&gt;&lt;H3 id="toc-hId-1075295459"&gt;5. Rapid Time-to-Value&lt;/H3&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Accelerated Development&lt;/STRONG&gt;: SAP Build’s low-code approach reduces development time by 50-70% compared to traditional coding, as seen in case studies like Open Grid Europe, which achieved 50% faster onboarding using SAP Build Apps. Prebuilt templates and reusable components further speed up deployment.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Process Automation&lt;/STRONG&gt;: SAP Build Process Automation combines RPA and workflow management, reducing manual tasks by up to 80% (e.g., financial close processes). This is faster than competitors like UiPath, which focus primarily on RPA without integrated app development.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Guided Methodologies&lt;/STRONG&gt;: Integration with SAP Activate and SAP Signavio ensures structured implementation, minimizing project risks and accelerating time-to-value.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Standout Factor&lt;/STRONG&gt;: The combination of low-code development, automation, and guided methodologies delivers faster ROI, particularly for SAP-centric transformations, compared to platforms with longer setup times.&lt;/P&gt;&lt;H3 id="toc-hId-878781954"&gt;6. Enhanced Collaboration and User Experience&lt;/H3&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Business-IT Collaboration&lt;/STRONG&gt;: SAP Build bridges the gap between business and IT teams through shared development environments and visual tools, reducing miscommunication. For example, business users can prototype apps, while IT ensures governance, unlike Mendix, where IT involvement is often heavier.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP Build Work Zone&lt;/STRONG&gt;: Provides role-based, personalized portals with SAP Fiori integration, improving user adoption by 25-40% (SAP benchmarks). This contrasts with platforms like Microsoft Power Apps, which offer less tailored UX for SAP environments.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Community and Support&lt;/STRONG&gt;: SAP’s global partner ecosystem (e.g., EY, AG) and SAP Community provide extensive training and support, ensuring successful adoption compared to smaller platforms with limited ecosystems.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Standout Factor&lt;/STRONG&gt;: Enhanced collaboration and user-centric design drive higher adoption rates, making SAP Build ideal for organizations prioritizing user engagement.&lt;/P&gt;&lt;H3 id="toc-hId-682268449"&gt;7. Competitive Positioning&lt;/H3&gt;&lt;P class=""&gt;Compared to key competitors:&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;OutSystems&lt;/STRONG&gt;: Strong in low-code but lacks deep SAP integration and clean core alignment.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Mendix&lt;/STRONG&gt;: Offers robust low-code features but requires more effort for SAP connectivity and compliance.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Microsoft Power Apps&lt;/STRONG&gt;: Excels in Microsoft ecosystems but is less optimized for SAP environments.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;ServiceNow&lt;/STRONG&gt;: Focuses on IT service management, with limited app development flexibility compared to SAP Build’s comprehensive suite.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;SAP Build’s tight integration with SAP BTP, AI capabilities, and focus on enterprise needs give it an edge for organizations leveraging SAP systems or pursuing large-scale digital transformations.&lt;/P&gt;&lt;H3 id="toc-hId-485754944"&gt;8. Real-World Impact&lt;/H3&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Open Grid Europe&lt;/STRONG&gt;: Extended SAP S/4HANA Cloud with SAP Build, achieving 50% faster onboarding and 20% reduced invoicing time.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Multinational Manufacturer&lt;/STRONG&gt;: Used SAP Build with EY to standardize processes, improving efficiency across functions within 12 months.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Utilities Sector&lt;/STRONG&gt;: Leveraged SAP Build for metering and billing apps, reducing process steps and enhancing real-time visibility.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-289241439"&gt;Conclusion&lt;/H3&gt;&lt;P class=""&gt;SAP Build stands out in the application development market due to its unified low-code/no-code platform, deep SAP integration, AI-driven innovation, and enterprise-grade scalability. Its ability to accelerate development, automate processes, and ensure compliance while fostering collaboration makes it a leader for organizations undergoing SAP-centric or hybrid digital transformations. For businesses invested in SAP ecosystems or seeking rapid, scalable solutions, SAP Build delivers unmatched value, positioning it as a top choice in the competitive low-code market.&lt;/P&gt;&lt;P class=""&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Build/pd-p/73555000100700001491" class="lia-product-mention" data-product="1181-1"&gt;SAP Build&lt;/a&gt;&amp;nbsp; &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+AI+Services/pd-p/73555000100700001042" class="lia-product-mention" data-product="398-1"&gt;SAP AI Services&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Cloud+Application+Programming+Model/pd-p/9f13aee1-834c-4105-8e43-ee442775e5ce" class="lia-product-mention" data-product="100-1"&gt;SAP Cloud Application Programming Model&lt;/a&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/unlocking-the-future-how-sap-build-stands-out-in-application-development/ba-p/14122512"/>
    <published>2025-06-09T08:48:05.747000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/manage-sap-build-projects-as-part-of-your-enterprise-architecture/ba-p/14126712</id>
    <title>Manage SAP Build projects as part of your enterprise architecture</title>
    <updated>2025-06-12T22:53:45.468000+02:00</updated>
    <author>
      <name>Marco_Dorn</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/9255</uri>
    </author>
    <content>&lt;P&gt;Recently, I transitioned from SAP Landscape Management to the product management team of SAP LeanIX. I landed in a fantastic team already hard at work on the integration between SAP LeanIX and SAP Build, and I was fortunate enough to help bring the first release across the finish line, which was &lt;A href="https://updates.leanix.net/announcements/discover-your-business-applications-created-with-sap-build" target="_blank" rel="noopener nofollow noreferrer"&gt;announced last week&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Now, you can seamlessly connect your SAP Build instances with your SAP LeanIX workspaces, enabling automatic discovery of your SAP Build projects. This empowers enterprise architects to model these projects as application fact sheets, integrating them directly into their daily workflows within SAP LeanIX.&lt;/P&gt;&lt;P&gt;SAP Build is described as a "unified application development and process automation solution, enabling personalization and efficiency at scale." (&lt;A href="https://www.sap.com/products/technology-platform/build.html" target="_blank" rel="noopener noreferrer"&gt;source&lt;/A&gt;) It's a vital part of our customers' IT landscapes, complementing their existing SAP solutions. Consequently, the custom projects setup within SAP Build represent the unique, differentiating elements of their landscapes. Managing these projects alongside other SAP and non-SAP solutions within SAP LeanIX is a natural and essential next step.&lt;/P&gt;&lt;H1 id="toc-hId-1603305127"&gt;Connecting the Dots&lt;/H1&gt;&lt;P&gt;Rather than diving deep into &lt;A href="https://docs-eam.leanix.net/docs/sap-extension-discovery" target="_blank" rel="noopener nofollow noreferrer"&gt;the documentation&lt;/A&gt;, let me give you a quick overview of how to regularly discover your SAP Build projects within your SAP LeanIX workspace.&lt;/P&gt;&lt;P&gt;You'll need an instance of SAP Build Process Automation (even if you primarily use other SAP Build components) and an instance of SAP Cloud Management Service within your SAP BTP subaccount. The Cloud Management Service provides the context to the SAP BTP Global and Subaccount. Using service keys for these two instances, you can configure the new "SAP Build" integration within the admin area of SAP LeanIX.&amp;nbsp; Once you complete the onboarding wizard, your SAP Build projects will be automatically discovered and regularly updated.&lt;/P&gt;&lt;P&gt;The SAP Discovery inbox will present you with a list of all discovered projects. From there, you can link them to existing fact sheets or create new ones. The integration intelligently suggests the following fact sheet types:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Application:&lt;/STRONG&gt; The project itself&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;IT Component:&lt;/STRONG&gt; The technology used within the project (e.g. SAP Build Code)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Platform:&lt;/STRONG&gt; SAP BTP, your global account, and the subaccount&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Provider:&lt;/STRONG&gt; SAP&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;I'm eager to hear your thoughts on this new integration! Does this address a pain point in your enterprise architecture work? What other challenges are you facing when managing extensions to your SAP solution portfolio?&amp;nbsp; Share your feedback in the comments below or on our &lt;A href="https://roadmap.leanix.net/c/634-application-discovery-sap-btp-extension-discovery?&amp;amp;utm_medium=social&amp;amp;utm_source=share" target="_blank" rel="noopener nofollow noreferrer"&gt;roadmap item&lt;/A&gt;!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/manage-sap-build-projects-as-part-of-your-enterprise-architecture/ba-p/14126712"/>
    <published>2025-06-12T22:53:45.468000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/rest-api-integration-and-data-visualization-in-sap-build-apps/ba-p/14125292</id>
    <title>REST API Integration and Data Visualization in SAP Build Apps</title>
    <updated>2025-06-13T10:44:51.463000+02:00</updated>
    <author>
      <name>Bolluspandana</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1984751</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;1.Project Creation in SAP Build Apps&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;To begin integrating and displaying data from a REST API in SAP Build Apps, the first step is to create a new project. Follow these steps:&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Step-by-Step Guide:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Log in&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to your SAP Build Apps account using your SAP BTP credentials.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Navigate to the Home Page&lt;/STRONG&gt;:&lt;/FONT&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Once logged in, you will land on the SAP Build Apps dashboard.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Click on ‘Create Project’&lt;/STRONG&gt;:&lt;/FONT&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;On the dashboard, locate and click the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;"Create Project"&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;button. This will open a project creation wizard.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Select the Project Type&lt;/STRONG&gt;:&lt;/FONT&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Choose&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Application”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(usually the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Web and Mobile App&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;option) to build a UI-based application.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Click&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Next”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to proceed.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_0-1749646499707.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273067i7ADFBDBBD866F08A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_0-1749646499707.png" alt="Bolluspandana_0-1749646499707.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Now select the frontend option and click on next button.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_1-1749646499841.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273068i0AC508246BEDC6DC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_1-1749646499841.png" alt="Bolluspandana_1-1749646499841.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Select the Web and Mobile applications option and click on next.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&amp;nbsp; &amp;nbsp; 5.&lt;STRONG&gt;Enter Project Details&lt;/STRONG&gt;:&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Project Name&lt;/STRONG&gt;: Enter a meaningful name for your project (e.g., "REST API Integration App").&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Optionally, you can also provide a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;description&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to document the purpose of the project.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&amp;nbsp; &amp;nbsp; 6.&lt;STRONG&gt;Create the Project&lt;/STRONG&gt;:&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Click&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Create”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;or&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Finish”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(depending on UI version).&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;The app builder canvas will open, allowing you to start designing your application interface and logic.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_2-1749646499730.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273069i8871A6A35267DB81/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_2-1749646499730.png" alt="Bolluspandana_2-1749646499730.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_3-1749646499726.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273072i2330390CD3258DEA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_3-1749646499726.png" alt="Bolluspandana_3-1749646499726.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_4-1749646499732.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273070i73B9ECEF3A458411/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_4-1749646499732.png" alt="Bolluspandana_4-1749646499732.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;2. REST API Integration in Build app.&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;To connect your SAP Build App with an external REST API and use its data, you need to configure it using the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Universal REST API Integration&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;feature. Follow the steps below to complete this process:&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;Step-by-Step Guide to Integrate a REST API:&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Open Your Project in SAP Build Apps&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Once your application project is created, open it to launch the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Build Editor&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(the design and logic workspace).&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_5-1749646499741.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273071i49D8BB521B5EFA3B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_5-1749646499741.png" alt="Bolluspandana_5-1749646499741.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Go to the Integrations&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Panel&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Open Integrations panel. This section is where you can manage data resources, including integrations with external services.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Create a New Data Resource&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Click on the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Create Data Entity”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;button.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;From the dropdown list of available data integration options, choose:&lt;/FONT&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;“Universal REST API Integration”&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_6-1749646499734.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273073iA5ED30DC2E6EBE8E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_6-1749646499734.png" alt="Bolluspandana_6-1749646499734.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Configure the REST API Connection&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="4"&gt;You will now be prompted to fill in the details for your API:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Resource Name&lt;/STRONG&gt;: Enter a name for your API resource (e.g., UserAPI, ProductsAPI).&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Base URL&lt;/STRONG&gt;: Provide the base URL of the REST API you want to connect to.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;Example:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://restcountries.com/v3.1/all" target="_blank" rel="noopener nofollow noreferrer"&gt;https://restcountries.com/v3.1/all&lt;/A&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_7-1749646499826.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273075iB02C47C64A823BC5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_7-1749646499826.png" alt="Bolluspandana_7-1749646499826.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Test the API Connection&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;After configuring each endpoint, click the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Test”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;button to verify the API response.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;If successful, you will see the response schema, which will be used for data binding in your app.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Save the Configuration&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Once your API endpoints are set up and tested, click&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Save”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to finalize the data integration.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_8-1749646499743.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273074i999F9E5C5DF5AE85/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_8-1749646499743.png" alt="Bolluspandana_8-1749646499743.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Now added REST API details displays like below.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_9-1749646499911.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273076iAC1BBE1F32769B9F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_9-1749646499911.png" alt="Bolluspandana_9-1749646499911.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1732204390" id="toc-hId-1732353498"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;3. Declaring Data Variables to Map API Data to the UI&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT size="4"&gt;After successfully integrating a REST API in SAP Build Apps, you may notice that you cannot directly bind the API response properties to the UI components. To resolve this, you need to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;declare data variables&lt;/STRONG&gt;, which act as a bridge between your API data and the UI.&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1664773604" id="toc-hId-1664922712"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Step-by-Step Guide to Declare Data Variables&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-1597342818" id="toc-hId-1597491926"&gt;&lt;FONT size="4"&gt;&amp;nbsp; &lt;STRONG&gt;1.&lt;/STRONG&gt; Open the Variables Tab&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;In the top-right panel of the Build Editor, click on the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Variables”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;tab.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1400829313" id="toc-hId-1400978421"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&amp;nbsp; 2. Select ‘Data Variables’&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;In the variables panel, you’ll see different types of variables:&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Page Variables&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;– for temporary, page-specific values.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;App Variables&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;– for global values across the app.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Data Variables&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;– for storing and working with data from integrated APIs or data sources.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Click on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Data Variables”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to expand that section.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1204315808" id="toc-hId-1204464916"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&amp;nbsp; 3. Add a Data Variable&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Click the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“+ Add Data Variable”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;button.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_10-1749646499745.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273077i36AA13DF37052570/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_10-1749646499745.png" alt="Bolluspandana_10-1749646499745.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_11-1749646499746.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273078iBB8B1AA4ECCC6753/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_11-1749646499746.png" alt="Bolluspandana_11-1749646499746.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1007802303" id="toc-hId-1007951411"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&amp;nbsp; 4. Select the Data Type&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Choose the appropriate type of data variable based on your use case:&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Collection&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;– If you're fetching a list of records (e.g., list data).&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Single Data Record&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;– If you're fetching or working with a single item (e.g., a product detail).&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-811288798" id="toc-hId-811437906"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&amp;nbsp; 5. Save the Variable&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Once configured, click&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Save”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to finalize the data variable.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_12-1749646499764.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273080i5B5DD13CBD11A73D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_12-1749646499764.png" alt="Bolluspandana_12-1749646499764.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;4. Designing Build App User Interface&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;Once your REST API is integrated and data variables are configured, the next step is to design your application’s user interface (UI). This is where you define how the app will visually display data and interact with users.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Step-by-Step Guide to Design the UI&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Open the User Interface Editor and set page title.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_13-1749646499759.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273079iE14448BAD3CB40F7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_13-1749646499759.png" alt="Bolluspandana_13-1749646499759.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-356609855" id="toc-hId-356758963"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;5. Binding Data to List Control in SAP Build Apps&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT size="4"&gt;After designing your UI and creating data variables, the next step is to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;map your data to a List component&lt;/STRONG&gt;. This allows your app to dynamically display items (such as users, products, or any collection) from the REST API.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Step-by-Step Guide to Bind Data to a List Component&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-418261788" id="toc-hId-418410896"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&amp;nbsp; 1. Add a List Component to the Page&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT size="4"&gt;&amp;nbsp;Open the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI Canvas&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(User Interface Editor).&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-221748283" id="toc-hId-221897391"&gt;&lt;FONT size="4"&gt;From the Component Library, drag the “List” component onto your page layout.&lt;/FONT&gt;&lt;/H4&gt;&lt;H4 id="toc-hId--472482317" id="toc-hId--472333209"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&amp;nbsp; 2. Select the List Component&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Click on the List component to open its&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Properties panel&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;on the right-hand side.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId--668995822" id="toc-hId--668846714"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&amp;nbsp; 3. Configure Repeating Items (Repeat With)&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;In the Properties panel, locate the setting labelled&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Repeat With”&lt;/STRONG&gt;.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;This defines the data source for the repeating list items.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_14-1749646499871.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273081i73C0F6EEFFC148D3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_14-1749646499871.png" alt="Bolluspandana_14-1749646499871.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId--865509327" id="toc-hId--865360219"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&amp;nbsp; 4. Choose a Data Variable&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Click the dropdown next to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Repeat With&lt;/STRONG&gt;.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;A list of available&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Data Variables&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;will be shown — select the one you created for the API data (e.g., Current countries data).&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_15-1749646499873.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273082iEC6CD70CCD99EA10/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_15-1749646499873.png" alt="Bolluspandana_15-1749646499873.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId--1062022832" id="toc-hId--1061873724"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&amp;nbsp; 5. Save the Configuration&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;After selecting the data variable, click the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Save”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;button to apply the binding.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Now, the List is set to dynamically repeat and render items based on the API data.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_16-1749646499893.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273084iFC3E5FCF28B3DB38/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_16-1749646499893.png" alt="Bolluspandana_16-1749646499893.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Display Data inside List Items&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&amp;nbsp;Now we have to map the list control primary and secondary variables from data variables option shown like below.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_17-1749646499755.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273083i68430CE40069C1C7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_17-1749646499755.png" alt="Bolluspandana_17-1749646499755.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_18-1749646499753.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273087i113ECBBB6A348C79/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_18-1749646499753.png" alt="Bolluspandana_18-1749646499753.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Here I have selected the current countries as primary label and country codes selected for secondary label as shown like below.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_19-1749646499874.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273086i07E796AAF8A3F53A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_19-1749646499874.png" alt="Bolluspandana_19-1749646499874.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;6.Previewing and Running the App in SAP Build Apps&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;Once the data is successfully mapped to the List component and your UI is complete, it's time to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;preview the application&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and see how it functions in real-time.&lt;/P&gt;&lt;H4 id="toc-hId--1258536337" id="toc-hId--1258387229"&gt;&lt;FONT size="3"&gt;&lt;STRONG&gt;&amp;nbsp; 1. Save Your Work&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;After completing all data bindings and UI configurations, ensure that you&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;click the “Save” button&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(usually located in the top-right corner of the editor).&lt;/LI&gt;&lt;LI&gt;This saves your project and prepares it for preview.&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId--1455049842" id="toc-hId--1454900734"&gt;&lt;FONT size="3"&gt;&lt;STRONG&gt;&amp;nbsp; 2. Click the “Preview” Button&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;At the top toolbar, click the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Preview”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;button.&lt;/LI&gt;&lt;LI&gt;This opens the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Preview panel&lt;/STRONG&gt;, where you can choose how and where to run your app.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_20-1749646499874.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273085i5875CC5F7CC961C0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_20-1749646499874.png" alt="Bolluspandana_20-1749646499874.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId--1651563347" id="toc-hId--1651414239"&gt;&lt;BR /&gt;&lt;FONT size="3"&gt;&lt;STRONG&gt;&amp;nbsp; 3. Select Your Application&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;In the Web Preview Portal, find and select your app from the list of available applications.&lt;UL&gt;&lt;LI&gt;Look for the name you gave during the project creation step (e.g.,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;User Directory App&lt;/EM&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;Product Catalog&lt;/EM&gt;).&lt;/LI&gt;&lt;LI&gt;Click the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;“Open”&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;button next to your app.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_21-1749646499825.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273088i12CBA1D22263E095/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_21-1749646499825.png" alt="Bolluspandana_21-1749646499825.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId--1848076852" id="toc-hId--1847927744"&gt;&lt;BR /&gt;&amp;nbsp;&lt;FONT size="3"&gt;&lt;STRONG&gt;Finally View Our Application in the Browser&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bolluspandana_22-1749646499840.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273089iD3A41D3D9379E3FA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Bolluspandana_22-1749646499840.png" alt="Bolluspandana_22-1749646499840.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Thanks,&lt;/P&gt;&lt;P&gt;Spandana.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/rest-api-integration-and-data-visualization-in-sap-build-apps/ba-p/14125292"/>
    <published>2025-06-13T10:44:51.463000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-global-account-audit-logs-using-sap-btp-auditlog-service-sap-build/ba-p/14129989</id>
    <title>SAP BTP Global Account audit logs using SAP BTP Auditlog service, SAP Build Apps and SAP Ai Core</title>
    <updated>2025-06-19T14:56:35.448000+02:00</updated>
    <author>
      <name>Jakub_Roguski</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1438</uri>
    </author>
    <content>&lt;P&gt;Let’s assume you are responsible for your company’s global account on the SAP BTP and would like to know what happens in the global account itself and in the subaccounts, right? I’m going to show you one of the practical and (in my opinion) giving some fun solutions.&lt;/P&gt;&lt;P&gt;Let’s start with the BTP basics. The platform gathers and stores crucial information about what happened in form of audit logs. These logs are being gathered and stored on two levels: global account level and subaccount level. Access to the audit logs on the subaccount level is simple – you can use the SAP BTP service called Audit Log Viewer. It is free of charge as per date of writing. But situation on the global account level is different – there is no way to run any service directly in the global account, so you can’t use Audit Log Viewer here. But your logs are still there – you just need to expose them via REST API and then access them – again via the REST API.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1603396646"&gt;Exposing the global account logs.&lt;/H1&gt;&lt;P&gt;Here we need one of the SAP BTP services, the SAP AuditLog service. Keep in mind that there are two versions of this service: free and paid. The free version is enough if standard log retention period of 90 days is enough. And this is the only option in case of the global account audit logs. In case of a subaccount though,&amp;nbsp; you can extend the retention time over 90 days, but you need the paid, premium version in this case. You also need the premium version if you want to store logs generated by your own applications, running in the SAP BTP subaccount. More information here: &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/retention-of-audit-data-written-from-sap-btp-applications-and-services" target="_blank" rel="noopener noreferrer"&gt;Retention of Audit Data written from SAP BTP Applications and Services&lt;/A&gt; and here: &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/retention-of-audit-data-written-from-customer-s-applications-in-sap-btp" target="_blank" rel="noopener noreferrer"&gt;Retention of Audit Data written from Customer’s BTP Applications&lt;/A&gt;&lt;/P&gt;&lt;P&gt;To run any SAP BTP service, first we need a subaccount for this service (or services). I strongly recommend creating one subaccount, dedicated just to the platform management. I would call it “technical” subaccount. This “technical” subaccount would serve purely for SAP BTP management and monitoring purposes – no business-related solutions should be placed here.&lt;/P&gt;&lt;P&gt;First thing to do after subaccount creation should be establishing trust with your IAS (if you use IAS, what I strongly recommend) and assigning “&lt;STRONG&gt;Subaccount Administrator&lt;/STRONG&gt;” role collection to the appropriate people.&lt;/P&gt;&lt;P&gt;Then, on the global account level, assign the Auditlog Management Service, “&lt;STRONG&gt;central&lt;/STRONG&gt;” plan to the “technical” subaccount. Please note it must be “&lt;STRONG&gt;central&lt;/STRONG&gt;” plan and not any other.&lt;/P&gt;&lt;P&gt;Go to your “technical” subaccount and find the “&lt;STRONG&gt;Service Marketplace&lt;/STRONG&gt;”. In the Service Marketplace, find the &lt;STRONG&gt;Auditlog&lt;/STRONG&gt; service and under three dots select “&lt;STRONG&gt;Create&lt;/STRONG&gt;”. Now it is important to create instance of this service with “&lt;STRONG&gt;central&lt;/STRONG&gt;” plan – this is the only plan allowing access to the global account audit logs.&lt;/P&gt;&lt;P&gt;When service instance is created, click the arrow on the right-hand end of the instance line, find section called “&lt;STRONG&gt;Service Keys&lt;/STRONG&gt;” and press “&lt;STRONG&gt;Create&lt;/STRONG&gt;”. The only information you need to provide in this step is how you want to name the new service key – nothing more.&lt;/P&gt;&lt;P&gt;When service key is generated, you can access the Auditlog Management service via the REST API – right now click the tree dots on the right-hand end of the service key line and select “&lt;STRONG&gt;download&lt;/STRONG&gt;”. This will give you the Auditlog service’s service key in form of “&lt;STRONG&gt;txt&lt;/STRONG&gt;” file, but in fact the internal structure of this file is &lt;STRONG&gt;JSON&lt;/STRONG&gt;, so if you change the file extension from “&lt;STRONG&gt;txt&lt;/STRONG&gt;” to “&lt;STRONG&gt;json&lt;/STRONG&gt;”, you will see the service key JSON-formatted in any tool supporting this format. You will need this file in a moment. But before you can access the logs, you need to assign correct privileges to you and/or anybody else who should have access to the audit logs of the global account. The Auditlog Management service is unique in the way that it doesn’t provide ready to use role collection – instead it provides just a role “Audilog_Auditor”. You must add this role to one of the existing role collections or create your own role collection, add this role and assign this new role collection to the appropriate people – &lt;STRONG&gt;or preferably, map them to the IAS groups of users&lt;/STRONG&gt;.&lt;/P&gt;&lt;H1 id="toc-hId-1406883141"&gt;Destination definition.&lt;/H1&gt;&lt;P&gt;Regardless of whether you use a Pro-Code or No-Code approach, the SAP BTP Destination will be very helpful—especially for authentication. Therefore, we’ll begin by defining the SAP BTP Destination that points to the SAP Auditlog service. Go to the &lt;STRONG&gt;SAP BTP Cockpit&lt;/STRONG&gt;, to the subaccount &lt;STRONG&gt;where your application development environment is running&lt;/STRONG&gt;. If you have no access to this subaccount or have no “&lt;STRONG&gt;Subaccount Administrator&lt;/STRONG&gt;” nor at least “&lt;STRONG&gt;Destination Administrator&lt;/STRONG&gt;” rights for this subaccount, you need to find someone who has such privileges, and this parson must perform the next action: &lt;STRONG&gt;define SAP BTP destination to the Auditlog service.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Creating the destination is a standard and easy process – you just need to provide information found in the Auditlog service’s service key you already downloaded, like service address, authentication type, authentication address, client id and client credentials. But for the destination to work properly in SAP Build Apps, we need also to define some “Additional Properties”.&lt;/P&gt;&lt;P&gt;The data for SAP BTP Destination:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Name&lt;/STRONG&gt;: “&lt;STRONG&gt;Central_Audit_Log_Service&lt;/STRONG&gt;” – it is up to you how you name it, but the name should be meaningful, and you should be able to tell what the purpose of this destination is just based on its name even after a year or so.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Type&lt;/STRONG&gt;: &lt;STRONG&gt;HTTP&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Proxy Type&lt;/STRONG&gt;: &lt;STRONG&gt;Internet&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;URL&lt;/STRONG&gt;: open the downloaded service key file and find the “&lt;STRONG&gt;url:&lt;/STRONG&gt;” line. Note: this is the very first “url” you can see in the file. Copy the full address with “&lt;STRONG&gt;http://&lt;/STRONG&gt;”, but without the quotation marks. It should look like this:&lt;BR /&gt;&lt;EM&gt;&lt;A href="https://auditlog-management.xxxx.xxxx.xxxx.ondemand.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://auditlog-management.xxxx.xxxx.xxxx.ondemand.com&lt;/A&gt;&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication&lt;/STRONG&gt;: &lt;STRONG&gt;OAuth2ClientCredentials&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Client ID&lt;/STRONG&gt;: copy the content of the “&lt;STRONG&gt;clientid&lt;/STRONG&gt;” line you can find in the “&lt;STRONG&gt;uaa&lt;/STRONG&gt;” section of the service key – again without the quotation marks&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Client Secret&lt;/STRONG&gt;: copy the content of the “&lt;STRONG&gt;clientsecret&lt;/STRONG&gt;” line you can find in the “&lt;STRONG&gt;uaa&lt;/STRONG&gt;” section of the service key – again without the quotation marks&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Token Service URL&lt;/STRONG&gt;: here you have to combine the content of the “&lt;STRONG&gt;url&lt;/STRONG&gt;” line you can find in the “&lt;STRONG&gt;uaa&lt;/STRONG&gt;” section – again without the quotation marks – with the following: “&lt;STRONG&gt;/oauth/token&lt;/STRONG&gt;”.&lt;BR /&gt;&lt;STRONG&gt;Note 1&lt;/STRONG&gt;: do &lt;STRONG&gt;NOT&lt;/STRONG&gt; use the first “url” from the service key file here! In this field you must use the “url” you find INSIDE the “&lt;STRONG&gt;uaa&lt;/STRONG&gt;” section.&lt;BR /&gt;&lt;STRONG&gt;Note 2&lt;/STRONG&gt;: the full Token Service address should look like this: &lt;EM&gt;&lt;A href="https://xxxxx.xxxxxx.xxxx.xxxxxxx.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://xxxxx.xxxxxx.xxxx.xxxxxxx.com&lt;/A&gt;&lt;STRONG&gt;/oauth/token&lt;/STRONG&gt;&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Token Service URL Type&lt;/STRONG&gt;: &lt;STRONG&gt;Dedicated&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Additional Properties:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The absolute minimum is the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;BuildApps.Enabled&lt;/STRONG&gt; = &lt;STRONG&gt;true&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BuildApps.ApiType&lt;/STRONG&gt; = &lt;STRONG&gt;rest&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;On top, I would suggest adding the following, to be able to use the same destination in the future in other SAP Build tools and for other purposes, like automation, for instance:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;sap.applicationdevelopment.actions.enabled&lt;/STRONG&gt; = &lt;STRONG&gt;true&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;sap.processautomation.enabled&lt;/STRONG&gt; = &lt;STRONG&gt;true&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;MobileEnabled&lt;/STRONG&gt; = &lt;STRONG&gt;true&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Save the destination and check the connection – it should give response like this:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_0-1750162811812.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275379i56968B9760DD0ED7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_0-1750162811812.png" alt="Jakub_Roguski_0-1750162811812.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1210369636"&gt;Building the application.&lt;/H1&gt;&lt;P&gt;I recommend using &lt;STRONG&gt;SAP Build Apps&lt;/STRONG&gt; for this purpose as it is the simples, fastest and most funny way to achieve our goal.&lt;/P&gt;&lt;P&gt;I assume here, that you already have access to &lt;STRONG&gt;SAP Build Apps&lt;/STRONG&gt; or at least you know how to get it. If not, please ask your SAP Account Executive or SAP partner.&lt;/P&gt;&lt;P&gt;Create a new &lt;STRONG&gt;SAP Build Apps&lt;/STRONG&gt; project as usual. Ensure that the &lt;STRONG&gt;SAP BTP Authentication&lt;/STRONG&gt; is enabled. The application pages structure is up to you – for example you could put the list of log records immediately on the starting page or if you prefer, you can make starting page just for information, describing application purpose and put here a button to open a new page, the one actually showing the list of log records – you can do it your own way. Importantly, you should create a page that displays a list of records. You can use any existing “List” artefact, but I prefer to do it my own way, using a row, which “repeats” with output from the Auditlog service call.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1142938850"&gt;Task 1: Getting access to the Auditlog data.&lt;/H2&gt;&lt;P&gt;Thanks to the destination we prepared in the previous step, it will be easy task:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to the “&lt;STRONG&gt;Integrations&lt;/STRONG&gt;” tab&lt;/LI&gt;&lt;LI&gt;In the “&lt;STRONG&gt;Integrations&lt;/STRONG&gt;” section press the blue button “&lt;STRONG&gt;ADD INTEGRATION&lt;/STRONG&gt;” – new page will open&lt;/LI&gt;&lt;LI&gt;In the section “&lt;STRONG&gt;SAP Systems&lt;/STRONG&gt;”, press the “&lt;STRONG&gt;BTP DESTINATIONS&lt;/STRONG&gt;” button&lt;/LI&gt;&lt;LI&gt;You should see the “&lt;STRONG&gt;REST API Endpoints&lt;/STRONG&gt;” section and your SAP BTP destination to the Auditlog service you created during the preparation phase (“&lt;STRONG&gt;Central_Audit_Log_Sertvice&lt;/STRONG&gt;” in my case) – select it&lt;/LI&gt;&lt;LI&gt;Click “&lt;STRONG&gt;INSTALL INTEGRATION&lt;/STRONG&gt;” in the top right corner of the screen&lt;BR /&gt;This would be enough to send requests to the Auditlog service via the “&lt;STRONG&gt;HTTP Destination Request&lt;/STRONG&gt;” function block and get answers, but you need a bit more: you need a data structure, identical with the structure of the answer, to repeat the list rows with.&lt;/LI&gt;&lt;LI&gt;Press the “&lt;STRONG&gt;Add REST API Data Entity&lt;/STRONG&gt;” button – an “&lt;STRONG&gt;Add REST API Data Entity&lt;/STRONG&gt;” form will appear.&lt;/LI&gt;&lt;LI&gt;Fill the form this way:&lt;OL&gt;&lt;LI&gt;Name: &lt;STRONG&gt;records&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Autogenerate configuration: &lt;STRONG&gt;selected&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Entity path within the API: &lt;STRONG&gt;/auditlog/v2/auditlogrecords&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Enable Capabilities: select only “&lt;STRONG&gt;list&lt;/STRONG&gt;” – no other capability can be used in case of the Auditlog service&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Press the “&lt;STRONG&gt;Add&lt;/STRONG&gt;” button&lt;BR /&gt;After a few seconds you should see your “&lt;STRONG&gt;records&lt;/STRONG&gt;” entity with auto-generated 11 fields. These fields were automatically read from the service thanks to the SAP BTP Destination you defined during the preparation phase.&lt;/LI&gt;&lt;LI&gt;Select the “&lt;STRONG&gt;list&lt;/STRONG&gt;” capability and press the “&lt;STRONG&gt;Run Test&lt;/STRONG&gt;” button. If everything was done correctly so far, you should get in a few seconds the “&lt;STRONG&gt;Status: OK (200)&lt;/STRONG&gt;” response above the black window and list of records inside the black window. If this is the case, you can now start shaping the UI of your app. Otherwise you need to check all the previous steps in search of mistake.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Now have a look at the list of records, visible in the black window. You can see here the structure of the answer from the Auditlog service. It is a list of objects. Object has 11 properties – the same as auto generated fields in the “records” entity. But there is a difference: the last field of the “records” entity named “message” is of “Text” type, while in the actual response it is an object with several properties. In case of a simple application, just showing logs, you should leave it as it is, but note that there is a room for further improvements of your app in the future. Leaving it as it is, you can display the “message” object as plain text, but with some work it is possible to get direct access to each property inside the “message” object in the API response. But this is outside of the scope of this article.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-946425345"&gt;Task 2: The start page.&lt;/H2&gt;&lt;P&gt;I recommend here creating three pages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Star page&lt;/LI&gt;&lt;LI&gt;The log listing page&lt;/LI&gt;&lt;LI&gt;The record details page&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Creating an app, you get one page immediately – it is your start page, so you just need to create next two pages and name them in a meaningful way, something like “&lt;STRONG&gt;List of records&lt;/STRONG&gt;” and “&lt;STRONG&gt;Record details&lt;/STRONG&gt;”.&lt;/P&gt;&lt;P&gt;So, we have:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;“Home Page”&lt;/STRONG&gt; – it is our start page&lt;/LI&gt;&lt;LI&gt;“&lt;STRONG&gt;List of records&lt;/STRONG&gt;” – it is the page where we will see list of records and will select one of them for detailed view&lt;/LI&gt;&lt;LI&gt;“&lt;STRONG&gt;Record details&lt;/STRONG&gt;” – it is the page where we will display all the record’s details and eventually will add interpretation done by the AI&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For the time being, we will put just two things on the start page:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The “&lt;STRONG&gt;Title&lt;/STRONG&gt;” component for short explanation of the app purpose&lt;/LI&gt;&lt;LI&gt;A “&lt;STRONG&gt;Button&lt;/STRONG&gt;”, to open the records list page&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We could show the list of records immediately on the start page, but making separate start page will allow us in the future to easily add new functions, without messing with the list of log records.&lt;/P&gt;&lt;P&gt;Put the text you want to display to app user at the start and the “Button”. Select the button and change its label to something like “&lt;STRONG&gt;Show records&lt;/STRONG&gt;”. Open the logic canvas and put “&lt;STRONG&gt;Open page&lt;/STRONG&gt;” flow function on it. Connect output of the “&lt;STRONG&gt;Component tap&lt;/STRONG&gt;” with the input of the “&lt;STRONG&gt;Open page&lt;/STRONG&gt;”. Select the “&lt;STRONG&gt;Open page&lt;/STRONG&gt;” flow function and in the right-hand part of the screen, in “&lt;STRONG&gt;PROPRTIES&lt;/STRONG&gt;” tab, select the “&lt;STRONG&gt;List of records&lt;/STRONG&gt;” page to open (assuming you named so your page which will show the list of records).&lt;/P&gt;&lt;P&gt;Press “&lt;STRONG&gt;Save&lt;/STRONG&gt;” in the top-right corner of the screen.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId-749911840"&gt;Task 3: Displaying the records.&lt;/H2&gt;&lt;P&gt;The logic will work like this:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Show the “&lt;STRONG&gt;Spinner&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Get the records from the Auditlog service and put it in the data variable&lt;/LI&gt;&lt;LI&gt;Hide the “&lt;STRONG&gt;Spinner&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Show the records&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Select the “&lt;STRONG&gt;List of records&lt;/STRONG&gt;” page (or whatever you named your log list page).&lt;/P&gt;&lt;H3 id="toc-hId-682481054"&gt;Step 1: &amp;nbsp;The “Spinner”&lt;/H3&gt;&lt;P&gt;First put the “&lt;STRONG&gt;Spinner&lt;/STRONG&gt;” on the empty page, to make waiting for logs to appear a bit more pleasant.&lt;/P&gt;&lt;P&gt;We will need a variable to control visibility of the “&lt;STRONG&gt;Spinner&lt;/STRONG&gt;”. As this variable matters only on this page, we will make it a “&lt;STRONG&gt;Page variable&lt;/STRONG&gt;”.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Having the “&lt;STRONG&gt;List of records&lt;/STRONG&gt;” page open, click the “&lt;STRONG&gt;Variables&lt;/STRONG&gt;” tab at the very top of the screen.&lt;/LI&gt;&lt;LI&gt;Click “&lt;STRONG&gt;PAGE VARIABLES&lt;/STRONG&gt;” on the left-hand side&lt;/LI&gt;&lt;LI&gt;Click “&lt;STRONG&gt;ADD PAGE VARIABLE&lt;/STRONG&gt;” icon at the center of the screen&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;From scratch&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Name the variable “&lt;STRONG&gt;PgVarSpinnerVisibility&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Change the “&lt;STRONG&gt;Variable value type&lt;/STRONG&gt;” to “&lt;STRONG&gt;True/false&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Ensure that the “&lt;STRONG&gt;Initial value&lt;/STRONG&gt;” is set to “&lt;STRONG&gt;False&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Save&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Come back to the “&lt;STRONG&gt;User Interface&lt;/STRONG&gt;” Tab at the top of the screen and select the “&lt;STRONG&gt;Spinner&lt;/STRONG&gt;” you placed on the UI canvas and:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Change size to “&lt;STRONG&gt;large&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Open “&lt;STRONG&gt;ADVANCED PROPERTIES&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Click the square icon just below the “&lt;STRONG&gt;Visible&lt;/STRONG&gt;” icon – dialog opens&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;Data and Variables&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;Page variable&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select the “&lt;STRONG&gt;PgVarSpinnerVisibility&lt;/STRONG&gt;” variable you defined a minute ago&lt;/LI&gt;&lt;LI&gt;Save in the dialog&lt;/LI&gt;&lt;LI&gt;Switch to the “&lt;STRONG&gt;LAYOUT&lt;/STRONG&gt;” tab&lt;/LI&gt;&lt;LI&gt;Open “&lt;STRONG&gt;POSITION&lt;/STRONG&gt;” and select the icon to align it horizontally to the middle&lt;/LI&gt;&lt;LI&gt;Save in the top-right corner of screen&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-485967549"&gt;Step 2: The data to display&lt;/H3&gt;&lt;P&gt;Then we need to define a data variable, based on the “&lt;STRONG&gt;records&lt;/STRONG&gt;” entity we have in the integration. To do so, still having the “&lt;STRONG&gt;List of records&lt;/STRONG&gt;” page open:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;click on the “&lt;STRONG&gt;Variables&lt;/STRONG&gt;” tab at the top of the screen&lt;/LI&gt;&lt;LI&gt;click “&lt;STRONG&gt;DATA VARIABLES&lt;/STRONG&gt;” on the left side of the screen&lt;/LI&gt;&lt;LI&gt;click “&lt;STRONG&gt;ADD DATA VARIABLE&lt;/STRONG&gt;” next to the plus in the circle sign&lt;/LI&gt;&lt;LI&gt;select “&lt;STRONG&gt;records&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;change the default variable name in the “&lt;STRONG&gt;Data variable name&lt;/STRONG&gt;” field of the right-side properties section to something meaningful, like “&lt;STRONG&gt;DataVarListOfRecords&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;ensure that the “&lt;STRONG&gt;Data variable type&lt;/STRONG&gt;” is set to “&lt;STRONG&gt;Collection of data records&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;having selected the “&lt;STRONG&gt;DataVarListOfRecords&lt;/STRONG&gt;”, open the “&lt;STRONG&gt;Logic canvas&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;cut the link between “&lt;STRONG&gt;Page mounted&lt;/STRONG&gt;” event and the “&lt;STRONG&gt;Get record collection&lt;/STRONG&gt;” flow function&lt;/LI&gt;&lt;LI&gt;Insert here the “&lt;STRONG&gt;Set page variable&lt;/STRONG&gt;” flow function – connect its input to the exit of the “&lt;STRONG&gt;Page mounted&lt;/STRONG&gt;” event and connect its exit to the input of the “&lt;STRONG&gt;Get record collection&lt;/STRONG&gt;” flow function.&lt;/LI&gt;&lt;LI&gt;Select the “&lt;STRONG&gt;Set page variable&lt;/STRONG&gt;” flow function&lt;/LI&gt;&lt;LI&gt;Select the “&lt;STRONG&gt;PgVarSpinnerVisibility&lt;/STRONG&gt;” under the “&lt;STRONG&gt;Variable name&lt;/STRONG&gt;” label&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;True&lt;/STRONG&gt;” under the “&lt;STRONG&gt;Assigned value&lt;/STRONG&gt;” label&lt;/LI&gt;&lt;LI&gt;Add second “&lt;STRONG&gt;Set page variable&lt;/STRONG&gt;” flow function&lt;/LI&gt;&lt;LI&gt;Connect its input to the exit of the “&lt;STRONG&gt;Set data variable&lt;/STRONG&gt;” output&lt;/LI&gt;&lt;LI&gt;Select the second “&lt;STRONG&gt;Set page variable&lt;/STRONG&gt;” flow function&lt;/LI&gt;&lt;LI&gt;Select the “&lt;STRONG&gt;PgVarSpinnerVisibility&lt;/STRONG&gt;” under the “&lt;STRONG&gt;Variable name&lt;/STRONG&gt;” label&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;False&lt;/STRONG&gt;” under the “&lt;STRONG&gt;Assigned value&lt;/STRONG&gt;” label&lt;/LI&gt;&lt;LI&gt;Save&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The function flow should look like this:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_1-1750162811814.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275381i4832819E24088614/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_1-1750162811814.png" alt="Jakub_Roguski_1-1750162811814.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;H3 id="toc-hId-289454044"&gt;Step 3: Define visual structure of the list of records.&lt;/H3&gt;&lt;P&gt;You can use here any ready to use list, available in the “&lt;STRONG&gt;MARKETPLACE&lt;/STRONG&gt;” section, but I prefer to shape the list using “&lt;STRONG&gt;Row&lt;/STRONG&gt;” as this approach gives me the full control over what and how is displayed on the screen.&lt;/P&gt;&lt;P&gt;We will show here only three fields, but you can modify this structure any way you want.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Put the “Row” component on the UI canvas&lt;/LI&gt;&lt;LI&gt;Change layout of the “Row” to have three cells (do it in the right-hand section, “LAYOUT” tab)&lt;/LI&gt;&lt;LI&gt;Define width of each cell as 1&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_2-1750162811815.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275380i1CBCEE93A6B7941D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_2-1750162811815.png" alt="Jakub_Roguski_2-1750162811815.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Put “Text” component in each cell of the row&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In the future you can improve the look of this page by adding borders, backgrounds, headers etc, but now we are going just to display the list of records the simplest way.&lt;/P&gt;&lt;P&gt;Select the row. Note you must select entire row and not just e cell. The easiest way is to use the “TREE” view at bottom-right part of the screen.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_3-1750162811815.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275382iAD9D42213BC82DC3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_3-1750162811815.png" alt="Jakub_Roguski_3-1750162811815.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;With row selected, go to the “&lt;STRONG&gt;PROPERTIES&lt;/STRONG&gt;” tab in the section above the tree view and click the square icon labeled “&lt;STRONG&gt;Repeat with&lt;/STRONG&gt;”.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_4-1750162811816.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275383iE8AA788E8A8C4186/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_4-1750162811816.png" alt="Jakub_Roguski_4-1750162811816.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;A dialog will open – select “&lt;STRONG&gt;Data and Variables&lt;/STRONG&gt;”, then “&lt;STRONG&gt;Data variable&lt;/STRONG&gt;” and then the data variable we defined just a few minutes ago (“&lt;STRONG&gt;DataVarListOfRecords”)&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Click “&lt;STRONG&gt;Save&lt;/STRONG&gt;” (in the dialog) and then again “&lt;STRONG&gt;Save&lt;/STRONG&gt;” (top-right corner of screen).&lt;/P&gt;&lt;P&gt;We have “&lt;STRONG&gt;Text&lt;/STRONG&gt;” component in each cell, so now we will connect each “T&lt;STRONG&gt;ext&lt;/STRONG&gt;” with proper data to display.&lt;/P&gt;&lt;P&gt;Select the first “T&lt;STRONG&gt;ext&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Row&lt;/STRONG&gt;” and in the right-hand “&lt;STRONG&gt;PROPERTIES&lt;/STRONG&gt;” tab click the icon just below the “&lt;STRONG&gt;Content&lt;/STRONG&gt;” label. Dialog opens – select “&lt;STRONG&gt;Data item in repeat&lt;/STRONG&gt;”.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_5-1750162811818.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275384i8D3782DAA52BE1E7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_5-1750162811818.png" alt="Jakub_Roguski_5-1750162811818.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Ten select “&lt;STRONG&gt;current&lt;/STRONG&gt;”. Find and select “&lt;STRONG&gt;time&lt;/STRONG&gt;” and press “&lt;STRONG&gt;Save&lt;/STRONG&gt;”.&lt;/P&gt;&lt;P&gt;Select the second “&lt;STRONG&gt;Text&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Row&lt;/STRONG&gt;” and configure it the same way as the first one, but this time select “&lt;STRONG&gt;category&lt;/STRONG&gt;”.&lt;/P&gt;&lt;P&gt;Select the third “&lt;STRONG&gt;Text&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Row&lt;/STRONG&gt;” and configure it the same way as the first one, but this time select “&lt;STRONG&gt;tenant&lt;/STRONG&gt;”.&lt;/P&gt;&lt;P&gt;Finally, press the “&lt;STRONG&gt;Save&lt;/STRONG&gt;” button in the top-right corner of the screen to save the application.&lt;/P&gt;&lt;P&gt;The last thing we will add on this page is a “&lt;STRONG&gt;Button&lt;/STRONG&gt;” to come back to the start page:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Place a “&lt;STRONG&gt;Button&lt;/STRONG&gt;” just below the “&lt;STRONG&gt;Row&lt;/STRONG&gt;” on the UI canvas&lt;/LI&gt;&lt;LI&gt;Change label of the button to “&lt;STRONG&gt;Back&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Format the button as you like using the “&lt;STRONG&gt;STYLE&lt;/STRONG&gt;” and “&lt;STRONG&gt;LAYOUT&lt;/STRONG&gt;” tabs on the right-hand side of the screen&lt;/LI&gt;&lt;LI&gt;Click the “&lt;STRONG&gt;arrow up&lt;/STRONG&gt;” icon at the very bottom of the screen, named “&lt;STRONG&gt;Add logic to LIST OF RECORDS&lt;/STRONG&gt;”. The text “&lt;STRONG&gt;LIST OF RECORDS&lt;/STRONG&gt;” is the name of this page, so if you named the page differently, you would see your name of the page instead of the “&lt;STRONG&gt;LIST OF RECORDS&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Find “&lt;STRONG&gt;Navigate back&lt;/STRONG&gt;” flow function in the “&lt;STRONG&gt;CORE&lt;/STRONG&gt;” tab of the “&lt;STRONG&gt;LOGIC CANVAS&lt;/STRONG&gt;” and place it next to the “&lt;STRONG&gt;EVENT Component tap&lt;/STRONG&gt;” block on the logic canvas&lt;/LI&gt;&lt;LI&gt;Connect exit of the “&lt;STRONG&gt;Component tap&lt;/STRONG&gt;” with the input of the “&lt;STRONG&gt;Navigate back&lt;/STRONG&gt;” flow function&lt;/LI&gt;&lt;LI&gt;Save&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-92940539"&gt;Step 4: adding full view of the selected record&lt;/H3&gt;&lt;P&gt;Now we will take care of the “&lt;STRONG&gt;Record details&lt;/STRONG&gt;” page of our app. The Auditlog service does not allow for requesting just one record, based on its id (at the date of writing), so we will do all the data preparation work on the “&lt;STRONG&gt;List of records&lt;/STRONG&gt;” page we already have running and then write the record data to the Application Variable to make it available to the “&lt;STRONG&gt;Record details&lt;/STRONG&gt;” page, which in turn will be responsible for displaying the already prepared data.&lt;/P&gt;&lt;P&gt;The procedure will look like this:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;User clicks on the desired record in the displayed list&lt;/LI&gt;&lt;LI&gt;App logic of the “&lt;STRONG&gt;List of records&lt;/STRONG&gt;” page searches for the desired record in the data variable “&lt;STRONG&gt;DataVarListOfRecords&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;App logic of the “&lt;STRONG&gt;List of records&lt;/STRONG&gt;” page writes the data of the record it found to the Application Variable&lt;/LI&gt;&lt;LI&gt;App logic of the “&lt;STRONG&gt;List of records&lt;/STRONG&gt;” page opens the “&lt;STRONG&gt;Record details&lt;/STRONG&gt;” page&lt;/LI&gt;&lt;LI&gt;The “&lt;STRONG&gt;Record details&lt;/STRONG&gt;” page shows record details&lt;/LI&gt;&lt;/OL&gt;&lt;H4 id="toc-hId--472207342"&gt;Create the Application Variables&lt;/H4&gt;&lt;P&gt;We will need two application variables.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to the “&lt;STRONG&gt;Variables&lt;/STRONG&gt;” tab&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;APP VARIABLES&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;ADD APP VARIABLE&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;From existing schema&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;Entity&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select the entity we created in chapter “&lt;STRONG&gt;B. Application building.&lt;/STRONG&gt;” paragraph “&lt;STRONG&gt;Preparation of the data structure for the list of records to repeat with&lt;/STRONG&gt;”. We named this entity “r&lt;STRONG&gt;ecords&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Change name of the app variable to “&lt;STRONG&gt;AppVarSingleRecord&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;ADD APP VARIABLE&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;From scratch&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Change name of the app variable to “&lt;STRONG&gt;AppVarMessageText&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Make sure the “&lt;STRONG&gt;Variable value type&lt;/STRONG&gt;” is “&lt;STRONG&gt;Text&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Save&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId--668720847"&gt;Activate the row, so clicking on any record activates the process of displaying its content&lt;/H4&gt;&lt;OL&gt;&lt;LI&gt;Open the “User Interface” tab at the top of the screen&lt;/LI&gt;&lt;LI&gt;Open the “&lt;STRONG&gt;List of records&lt;/STRONG&gt;” page&lt;/LI&gt;&lt;LI&gt;Select the “&lt;STRONG&gt;Row&lt;/STRONG&gt;” – ensure you selected the row and not a single cell nor single text. Use the “&lt;STRONG&gt;TREE&lt;/STRONG&gt;” view in the bottom-right corner of the screen for precise selection&lt;/LI&gt;&lt;LI&gt;With “&lt;STRONG&gt;Row&lt;/STRONG&gt;” selected, open the “&lt;STRONG&gt;LOGIC CANVAS&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Drag to the logic canvas two “&lt;STRONG&gt;Set app variable&lt;/STRONG&gt;” and one “&lt;STRONG&gt;Open page&lt;/STRONG&gt;” flow functions.&lt;/LI&gt;&lt;LI&gt;Connect all the flow function in one flow: “&lt;STRONG&gt;Component tap&lt;/STRONG&gt;” -&amp;gt; “&lt;STRONG&gt;Set app variable&lt;/STRONG&gt;” -&amp;gt; “&lt;STRONG&gt;Set app variable&lt;/STRONG&gt;” -&amp;gt; “&lt;STRONG&gt;Open page&lt;/STRONG&gt;”.&lt;/LI&gt;&lt;LI&gt;First “&lt;STRONG&gt;Set app variable&lt;/STRONG&gt;”:&lt;UL&gt;&lt;LI&gt;“&lt;STRONG&gt;Variable name&lt;/STRONG&gt;”: select “&lt;STRONG&gt;AppVarSingleRecord&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;“&lt;STRONG&gt;Assigne value&lt;/STRONG&gt;”:&lt;UL&gt;&lt;LI&gt;click the square icon – dialog will open&lt;/LI&gt;&lt;LI&gt;select “&lt;STRONG&gt;Formula"&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;click on the formula line&lt;/LI&gt;&lt;LI&gt;delete the current formula&lt;/LI&gt;&lt;LI&gt;type “&lt;STRONG&gt;find_by&lt;/STRONG&gt;” – two suggestions will show – double click the “&lt;STRONG&gt;FIND_BY_KEY&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;highlight the “&lt;STRONG&gt;list&lt;/STRONG&gt;” in the formula&lt;/LI&gt;&lt;LI&gt;select the “&lt;STRONG&gt;Data variables&lt;/STRONG&gt;” on the left&lt;/LI&gt;&lt;LI&gt;double click the “&lt;STRONG&gt;DataVarListOfRecords&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;highlight the “&lt;STRONG&gt;key&lt;/STRONG&gt;” in the formula&lt;/LI&gt;&lt;LI&gt;type here “&lt;STRONG&gt;message_uuid&lt;/STRONG&gt;” – this time type it WITH the quotation marks&lt;/LI&gt;&lt;LI&gt;highlight the “&lt;STRONG&gt;value&lt;/STRONG&gt;” in the formula&lt;/LI&gt;&lt;LI&gt;select the “&lt;STRONG&gt;Currently repeated data item&lt;/STRONG&gt;” on the left&lt;/LI&gt;&lt;LI&gt;double click the “&lt;STRONG&gt;repeated.current.message_uuid&lt;/STRONG&gt;”&lt;BR /&gt;The final formula should look like this:&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;FIND_BY_KEY(data.DataVarListOfRecords, "message_uuid", repeated.current.message_uuid)&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;if you name everything exactly like in my example, you can simply copy this formula and paste it in the formula field.&lt;/LI&gt;&lt;LI&gt;Save&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Second “&lt;STRONG&gt;Set app variable&lt;/STRONG&gt;”:&lt;BR /&gt;We want to show the “message” written in the log record, but its format makes it hard to read. We will make small but meaningful changes in the message format and this is the purpose of this flow function.&lt;OL&gt;&lt;LI&gt;“&lt;STRONG&gt;Variable name&lt;/STRONG&gt;”: select “&lt;STRONG&gt;AppVarMessageText&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;“&lt;STRONG&gt;Assigne value&lt;/STRONG&gt;”:&lt;UL&gt;&lt;LI&gt;click the square icon – dialog will open&lt;/LI&gt;&lt;LI&gt;select “&lt;STRONG&gt;Formula&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;click on the formula line&lt;/LI&gt;&lt;LI&gt;delete the current formula&lt;/LI&gt;&lt;LI&gt;put&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;REPLACE_ALL(REPLACE_ALL(LEFT_STRIP(RIGHT_STRIP(appVars.AppVarSingleRecord.message, 1), 1),",","\n"),"\\","")&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;as the formula – it removes the opening and closing brackets, relaces comas with new lines and removes backslashes&lt;/LI&gt;&lt;LI&gt;Save&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;“&lt;STRONG&gt;Open page&lt;/STRONG&gt;”: select “&lt;STRONG&gt;Record details&lt;/STRONG&gt;” page to open&lt;/LI&gt;&lt;LI&gt;Save&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId--865234352"&gt;Build the UI of the “Record details” page&lt;/H4&gt;&lt;P&gt;We already have the “&lt;STRONG&gt;Record details&lt;/STRONG&gt;” page, but we need to put all the fields on it and connect them to the correct data sources. If we were to show just data entity, defined in the “&lt;STRONG&gt;Integrations&lt;/STRONG&gt;” tab, we could use the AI for this task (assuming AI is enabled in your SAP Build environment). But we will not show the data entity – instead we will show content of the two application variables: “&lt;STRONG&gt;AppVarSingleRecord&lt;/STRONG&gt;” and “&lt;STRONG&gt;AppVarMessageText&lt;/STRONG&gt;”. So we need to design the page layout manually.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Get familiar with structure of the &lt;STRONG&gt;AppVarSingleRecord &lt;/STRONG&gt;application variable – note the data fields&lt;/LI&gt;&lt;LI&gt;Open the “&lt;STRONG&gt;Record details&lt;/STRONG&gt;” page&lt;/LI&gt;&lt;LI&gt;Put a “&lt;STRONG&gt;Text&lt;/STRONG&gt;” component on the UI canvas for each field of the variable&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;For each&lt;/U&gt; “&lt;STRONG&gt;Text&lt;/STRONG&gt;” component &lt;U&gt;EXCEPT&lt;/U&gt; the one for “&lt;STRONG&gt;message&lt;/STRONG&gt;” field do the following:&lt;OL&gt;&lt;LI&gt;select the “&lt;STRONG&gt;Text&lt;/STRONG&gt;” component&lt;/LI&gt;&lt;LI&gt;press the square icon just below the “&lt;STRONG&gt;Content&lt;/STRONG&gt;” label in the “&lt;STRONG&gt;PROPERTIES&lt;/STRONG&gt;” panel on the right-hand side – a dialog will open&lt;/LI&gt;&lt;LI&gt;select “&lt;STRONG&gt;Data and variables&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;select “&lt;STRONG&gt;App variable&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;select “&lt;STRONG&gt;AppVarSingleRecord&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;select the data field you want to display using this “&lt;STRONG&gt;Text&lt;/STRONG&gt;” component&lt;/LI&gt;&lt;LI&gt;Save&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Select the “&lt;STRONG&gt;Text&lt;/STRONG&gt;” component in which you want to display the message&lt;OL&gt;&lt;LI&gt;press the square icon just below the “&lt;STRONG&gt;Content&lt;/STRONG&gt;” label in the “&lt;STRONG&gt;PROPERTIES&lt;/STRONG&gt;” panel on the right-hand side – a dialog will open&lt;/LI&gt;&lt;LI&gt;select “&lt;STRONG&gt;Data and variables&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;select “&lt;STRONG&gt;App variable&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;select “&lt;STRONG&gt;AppVarMessageText&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Save&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Put a “&lt;STRONG&gt;Button&lt;/STRONG&gt;” component at the end of the page and select it&lt;/LI&gt;&lt;LI&gt;Open the logic canvas and drag here the “&lt;STRONG&gt;Navigate back&lt;/STRONG&gt;” flow function and connect it to the “&lt;STRONG&gt;Component tap&lt;/STRONG&gt;” event&lt;/LI&gt;&lt;LI&gt;Save the application&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Now you can use the “&lt;STRONG&gt;Preview&lt;/STRONG&gt;” option in the top-right corner of the screen to test your application.&lt;/P&gt;&lt;P&gt;If the application works, now you can spend some time beautifying the application by:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Adding header row above the list of records in the “&lt;STRONG&gt;List of records&lt;/STRONG&gt;” page&lt;/LI&gt;&lt;LI&gt;Adding additional, static texts as labels for dynamic text fields – here you can use rows for structured view&lt;/LI&gt;&lt;LI&gt;Adding containers and placing fields in the containers – to add visual structure to the pages&lt;/LI&gt;&lt;LI&gt;Manage borders, paddings and margins of the components&lt;/LI&gt;&lt;LI&gt;Manage color scheme&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Finally, when you are happy with your app, go to the “Publish section, create build configuration, build the application and deploy.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--181538836"&gt;Adding the date filters&lt;/H1&gt;&lt;P&gt;As the application already works, we can see, that sometimes there is a lot of records to display. The Auditlog service’s API is limited: it can (as per date of writing) send back up to 500 records. You will find that quite often you would like the ability to define date range of log records to display.&lt;/P&gt;&lt;H2 id="toc-hId--671455348"&gt;Variables to store dates&lt;/H2&gt;&lt;P&gt;We need to create in total four application variables to store the selected dates and to process them the way we need. Let’s create them right now:&lt;/P&gt;&lt;P&gt;Go to Variables -&amp;gt; APPLICATION VARIABLES and define the following variables:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;“&lt;STRONG&gt;DateFrom&lt;/STRONG&gt;”&lt;UL&gt;&lt;LI&gt;Variable value type: &lt;STRONG&gt;Date/time text (ISO8601)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;“&lt;STRONG&gt;DateTo&lt;/STRONG&gt;”&lt;UL&gt;&lt;LI&gt;Variable value type: &lt;STRONG&gt;Date/time text (ISO8601)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;“DateFromTxt”&lt;UL&gt;&lt;LI&gt;Variable value type: &lt;STRONG&gt;Text&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Initial value: &lt;STRONG&gt;&lt;EM&gt;0000-00-00T00:00:00&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;“DateToTxt”&lt;UL&gt;&lt;LI&gt;Variable value type: &lt;STRONG&gt;Text&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Initial value: &lt;STRONG&gt;&lt;EM&gt;0000-00-00T00:00:00&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--867968853"&gt;UI modification&lt;/H2&gt;&lt;P&gt;For simplicity, we will modify the “Home page” – our start page. We will add there two components: one for start date and the other one for end date. We will use ready to use “&lt;STRONG&gt;Date field&lt;/STRONG&gt;”:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Open the “&lt;STRONG&gt;Home page&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Press “&lt;STRONG&gt;MARKETPLACE&lt;/STRONG&gt;” in the UI components panel&lt;/LI&gt;&lt;LI&gt;Search for “&lt;STRONG&gt;Date field&lt;/STRONG&gt;” – at least three options will appear&lt;/LI&gt;&lt;LI&gt;Select the option named just “&lt;STRONG&gt;Date field&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Click “&lt;STRONG&gt;Install&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Exit the “&lt;STRONG&gt;MARKETPLACE&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;INSTALLED&lt;/STRONG&gt;” in the UI components panel&lt;/LI&gt;&lt;LI&gt;Find just installed “&lt;STRONG&gt;Date field&lt;/STRONG&gt;” and drag it twice to the UI canvas – we need two of them&lt;/LI&gt;&lt;LI&gt;Place both just above the already existing “&lt;STRONG&gt;Button&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select the topmost “&lt;STRONG&gt;Date field&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Choose the “&lt;STRONG&gt;DateFrom&lt;/STRONG&gt;” application variable in the “&lt;STRONG&gt;Selected value&lt;/STRONG&gt;” property&lt;/LI&gt;&lt;LI&gt;Type “&lt;STRONG&gt;Start date:&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Label&lt;/STRONG&gt;” field&lt;/LI&gt;&lt;LI&gt;Switch to the “&lt;STRONG&gt;LAYOUT&lt;/STRONG&gt;” tab&lt;/LI&gt;&lt;LI&gt;Expand the “&lt;STRONG&gt;WIDTH AND HEIGHT&lt;/STRONG&gt;” section and select “&lt;STRONG&gt;Fit content&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Scroll down to “&lt;STRONG&gt;POSITION&lt;/STRONG&gt;” and select the icon to justify horizontally to the middle&lt;/LI&gt;&lt;LI&gt;Scroll down to the “&lt;STRONG&gt;Z-index&lt;/STRONG&gt;” and set it to “&lt;STRONG&gt;101&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select the lower “&lt;STRONG&gt;Date field&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Choose the “&lt;STRONG&gt;DateTo&lt;/STRONG&gt;” application variable in the “&lt;STRONG&gt;Selected value&lt;/STRONG&gt;” property&lt;/LI&gt;&lt;LI&gt;Type “&lt;STRONG&gt;End date:&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Label&lt;/STRONG&gt;” field&lt;/LI&gt;&lt;LI&gt;Switch to the “&lt;STRONG&gt;LAYOUT&lt;/STRONG&gt;” tab&lt;/LI&gt;&lt;LI&gt;Expand the “&lt;STRONG&gt;WIDTH AND HEIGHT&lt;/STRONG&gt;” section and select “&lt;STRONG&gt;Fit content&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Scroll down to “&lt;STRONG&gt;POSITION&lt;/STRONG&gt;” and select the icon to justify horizontally to the middle&lt;/LI&gt;&lt;LI&gt;Scroll down to the “&lt;STRONG&gt;Z-index&lt;/STRONG&gt;” and set it to “&lt;STRONG&gt;100&lt;/STRONG&gt;”&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Now we will set the default values for both fields. Let’s assume that we want to see the current day’s log records by default.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Click somewhere in the empty space of the “&lt;STRONG&gt;Home page&lt;/STRONG&gt;” UI canvas&lt;/LI&gt;&lt;LI&gt;Open the logic canvas&lt;/LI&gt;&lt;LI&gt;Find “&lt;STRONG&gt;IF condition&lt;/STRONG&gt;” flow function in the “&lt;STRONG&gt;CORE&lt;/STRONG&gt;” section of the logic components and drag two instances to the logic canvas&lt;/LI&gt;&lt;LI&gt;Find “&lt;STRONG&gt;Set app variable&lt;/STRONG&gt;” and again drag two instances&lt;/LI&gt;&lt;LI&gt;Connect inputs of both “&lt;STRONG&gt;IF condition&lt;/STRONG&gt;” flow functions to the “&lt;STRONG&gt;Page mounted&lt;/STRONG&gt;” event&lt;/LI&gt;&lt;LI&gt;Connect exit of first “&lt;STRONG&gt;IF condition&lt;/STRONG&gt;” flow function to the input of the first “&lt;STRONG&gt;Set app variable&lt;/STRONG&gt;” flow function&lt;/LI&gt;&lt;LI&gt;Connect exit of the second “&lt;STRONG&gt;IF condition&lt;/STRONG&gt;” flow function to the input of the second “&lt;STRONG&gt;Set app variable&lt;/STRONG&gt;” flow function&lt;/LI&gt;&lt;LI&gt;Select first “&lt;STRONG&gt;IF condition&lt;/STRONG&gt;” flow function&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;Formula&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Condition&lt;/STRONG&gt;” field&lt;/LI&gt;&lt;LI&gt;Put&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;appVars.DateFromTxt=="0000-00-00T00:00:00"&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;in the formula field&lt;/LI&gt;&lt;LI&gt;Select second “&lt;STRONG&gt;IF condition&lt;/STRONG&gt;” flow function&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;Formula&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Condition&lt;/STRONG&gt;” field&lt;/LI&gt;&lt;LI&gt;Put&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;appVars.DateToTxt=="0000-00-00T00:00:00"&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;in the formula field&lt;/LI&gt;&lt;LI&gt;Select first “&lt;STRONG&gt;Set app variable&lt;/STRONG&gt;” flow function&lt;/LI&gt;&lt;LI&gt;Set “&lt;STRONG&gt;Variable name&lt;/STRONG&gt;” to the application variable “&lt;STRONG&gt;DateFrom&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;Formula&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Assigned value&lt;/STRONG&gt;” field and put&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;NOW()&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;in the formula field&lt;/LI&gt;&lt;LI&gt;Select second “&lt;STRONG&gt;Set app variable&lt;/STRONG&gt;” flow function&lt;/LI&gt;&lt;LI&gt;Set “&lt;STRONG&gt;Variable name&lt;/STRONG&gt;” to the application variable “&lt;STRONG&gt;DateTo&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;Formula&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Assigned value&lt;/STRONG&gt;” field and put&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;NOW()&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;in the formula field – yes, we need the same value here&lt;/LI&gt;&lt;LI&gt;Save the application&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_6-1750162811819.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275386i58105E7E915A30A5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_6-1750162811819.png" alt="Jakub_Roguski_6-1750162811819.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1064482358"&gt;Data entity modification&lt;/H2&gt;&lt;P&gt;We need to modify the data entity we defined in the “&lt;STRONG&gt;Integrations&lt;/STRONG&gt;” tab, so let’s go there.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Open the “&lt;STRONG&gt;Integrations&lt;/STRONG&gt;” tab&lt;/LI&gt;&lt;LI&gt;Select the “&lt;STRONG&gt;records&lt;/STRONG&gt;” entity&lt;/LI&gt;&lt;LI&gt;Scroll down to the very end of entity definition&lt;/LI&gt;&lt;LI&gt;Find “&lt;STRONG&gt;Additional inputs&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Add two additional inputs:&lt;/LI&gt;&lt;LI&gt;“&lt;STRONG&gt;date_from&lt;/STRONG&gt;” of type “&lt;STRONG&gt;Text&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;“&lt;STRONG&gt;date_to&lt;/STRONG&gt;” of type “&lt;STRONG&gt;Text&lt;/STRONG&gt;”&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_7-1750162811819.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275387i6CE9925D0010B407/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_7-1750162811819.png" alt="Jakub_Roguski_7-1750162811819.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Scroll up to the “&lt;STRONG&gt;Relative path and query&lt;/STRONG&gt;” field&lt;/LI&gt;&lt;LI&gt;Click it and replace the formula with:&lt;BR /&gt;&lt;EM&gt;&lt;STRONG&gt;"/auditlog/v2/auditlogrecords?time_from="+query.additionalInputs.date_from+"&amp;amp;time_to="+query.additionalInputs.date_to&lt;/STRONG&gt;&lt;BR /&gt;&lt;/EM&gt;this way we simply add two parameters to the REST API call and we do it the way that both parameters are set dynamically at the call based on the additional inputs we defined at the very bottom of the entity definition&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_8-1750162811820.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275385iFB42C269EE75AC3F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_8-1750162811820.png" alt="Jakub_Roguski_8-1750162811820.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Note that now we see both additional inputs in the “&lt;STRONG&gt;Test&lt;/STRONG&gt;” section of the “&lt;STRONG&gt;records&lt;/STRONG&gt;” entity. If you want to test the entity now, you have to provide both inputs in the form: YYYY-MM-DDTHH:MM:SS. For example 2025-06-13T00:00:00 for “date_from” and 2025-06-13T23:59:59 for “date_to”.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_9-1750162811823.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275389i43728E6D4E672CFF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_9-1750162811823.png" alt="Jakub_Roguski_9-1750162811823.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Save the application&lt;/LI&gt;&lt;LI&gt;Go to the “&lt;STRONG&gt;User interface&lt;/STRONG&gt;” tab and open the “&lt;STRONG&gt;List of records&lt;/STRONG&gt;” page&lt;/LI&gt;&lt;LI&gt;Go to the “&lt;STRONG&gt;Variables&lt;/STRONG&gt;” tab and select the “&lt;STRONG&gt;DATA VARIABLES&lt;/STRONG&gt;” section&lt;/LI&gt;&lt;LI&gt;Select the “&lt;STRONG&gt;DataVarListOfRecords&lt;/STRONG&gt;” – now you see the two additional inputs&lt;/LI&gt;&lt;LI&gt;Connect the “&lt;STRONG&gt;date_from&lt;/STRONG&gt;” input to the “&lt;STRONG&gt;DateFromTxt&lt;/STRONG&gt;” application variable&lt;/LI&gt;&lt;LI&gt;Connect the “&lt;STRONG&gt;date_to&lt;/STRONG&gt;” input to the “&lt;STRONG&gt;DateToTxt&lt;/STRONG&gt;” application variable&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_10-1750162811825.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275388i413053D494AF79F6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_10-1750162811825.png" alt="Jakub_Roguski_10-1750162811825.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;17. Save the application&lt;/P&gt;&lt;H2 id="toc-hId--1260995863"&gt;“Home page” button function modification&lt;/H2&gt;&lt;P&gt;The Auditlog service API expects date/time to be sent in exact format and does not tolerate any differences, so we must transform the Date/time value we receive from the “Date field” components to exactly the format expected by the API.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Open the “&lt;STRONG&gt;User Interface&lt;/STRONG&gt;” tab&lt;/LI&gt;&lt;LI&gt;Open the “&lt;STRONG&gt;Home page&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select the button&lt;/LI&gt;&lt;LI&gt;Open the logic canvas&lt;/LI&gt;&lt;LI&gt;Cut the connection between the “&lt;STRONG&gt;Component tap&lt;/STRONG&gt;” event and the “&lt;STRONG&gt;Open page&lt;/STRONG&gt;” flow function&lt;/LI&gt;&lt;LI&gt;Drag two instances of the “Set app variable” function flow to the logic canvas&lt;/LI&gt;&lt;LI&gt;Connect everything in single flow, with “&lt;STRONG&gt;Open page&lt;/STRONG&gt;” flow function at the very end of the flow&lt;/LI&gt;&lt;LI&gt;Select first “&lt;STRONG&gt;Set app variable&lt;/STRONG&gt;” function flow&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;DateFromTxt&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Variable Name&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;Formula&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Assigned value&lt;/STRONG&gt;” field&lt;/LI&gt;&lt;LI&gt;Put&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;SUBSTRING(appVars.DateFrom, 0, 11)+"00:00:00"&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;in the formula field - we simply cut off everything what is after “T” in the “YYYY-MM-DDTHH:MM:SS” format. We need to do so as the format we receive from the “&lt;STRONG&gt;Date field&lt;/STRONG&gt;” can vary and it contains milliseconds and can contain additional signs. Then we add the fixed time. In the future we could potentially make the time an additional, dynamic factor in the filters, though.&lt;/LI&gt;&lt;LI&gt;Select second “&lt;STRONG&gt;Set app variable&lt;/STRONG&gt;” function flow&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;DateToTxt&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Variable Name&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Select “&lt;STRONG&gt;Formula&lt;/STRONG&gt;” in the “&lt;STRONG&gt;Assigned value&lt;/STRONG&gt;” field&lt;/LI&gt;&lt;LI&gt;Put&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;SUBSTRING(appVars.DateTo, 0, 11)+"23:59:59"&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;in the formula field&lt;/LI&gt;&lt;LI&gt;Save the application&lt;/LI&gt;&lt;LI&gt;Test the application in the “&lt;STRONG&gt;Preview&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;If everything works, build and deploy&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1164106361"&gt;Adding Artificial Intelligence for log message interpretation&lt;/H1&gt;&lt;P&gt;Messages included in the logs can be difficult to read, understand and interpret. Adding AI might help a bit.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1654022873"&gt;Setting up the AI in the SAP AI Core&lt;/H2&gt;&lt;P&gt;Here I assume you already have access to the SAP AI Core and either have privileges needed to setup the AI deployment or you already have access to the AI deployment you can use in the application.&lt;/P&gt;&lt;P&gt;In short, when you start with the SAP AI Core:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;You have to create a &lt;STRONG&gt;resource group&lt;/STRONG&gt;, where your resources, like configurations and deployments, will be stored.&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;You need to create a &lt;STRONG&gt;configuration&lt;/STRONG&gt; of the LLM you will use.&lt;/LI&gt;&lt;LI&gt;Create a &lt;STRONG&gt;deployment&lt;/STRONG&gt; of your AI LLM, based on the configuration from point 2.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1682352687"&gt;Creating the SAP BTP Destination&lt;/H2&gt;&lt;P&gt;To proceed further we need the following information:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;SAP AI Launchpad: copy the name of the resource group you use – my resource group is named “&lt;STRONG&gt;default&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;SAP AI Launchpad: open the deployment you will use and copy its URL:&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_11-1750162811829.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275390iEA6E80077750CCBD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_11-1750162811829.png" alt="Jakub_Roguski_11-1750162811829.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;SAP BTP Cockpit: you need the &lt;STRONG&gt;service key&lt;/STRONG&gt; of the SAP AI Core service – more precisely you need &lt;STRONG&gt;authentication url&lt;/STRONG&gt;, &lt;STRONG&gt;client id&lt;/STRONG&gt; and &lt;STRONG&gt;client secret&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;After gathering all the information, we need to define the destination in the SAP BTP subaccount, where SAP Build is deployed, pointing to the SAP AI Core’s AI deployment we will use.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Name&lt;/STRONG&gt;: it is up to you. I use ChatGPT4o, so in my case the destination name is &lt;EM&gt;AI_Core_GPT4o&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Type&lt;/STRONG&gt;: &lt;EM&gt;HTTP&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Proxy Type&lt;/STRONG&gt;: &lt;EM&gt;Internet&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;URL&lt;/STRONG&gt;: this is the url of the AI deployment, you copied this url in the SAP AI Launchpad&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Authentication&lt;/STRONG&gt;: &lt;STRONG&gt;&lt;EM&gt;OAuth2ClientCredentials&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Client ID&lt;/STRONG&gt;: copy from the SAP AI Core service’s service key&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Client Secret&lt;/STRONG&gt;: copy from the SAP AI Core service’s service key&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Token service URL&lt;/STRONG&gt;: this is the “&lt;EM&gt;url&lt;/EM&gt;” value from the service key + &lt;STRONG&gt;&lt;EM&gt;/oauth/token&lt;/EM&gt;&lt;/STRONG&gt; – it should look like:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;&lt;A href="https://xxxxx.xxxxxxxx.xxxxxx.xxxxxxx.com/oauth/token" target="_blank" rel="noopener nofollow noreferrer"&gt;https://xxxxx.xxxxxxxx.xxxxxx.xxxxxxx.com/oauth/token&lt;/A&gt;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Token Service URL Type&lt;/STRONG&gt;: &lt;STRONG&gt;&lt;EM&gt;Dedicated&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_12-1750162811831.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275392i4C15831938B0D700/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_12-1750162811831.png" alt="Jakub_Roguski_12-1750162811831.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;And some additional properties:&lt;/P&gt;&lt;P&gt;The minimum:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;BuildApps.Enabled&lt;/STRONG&gt; = &lt;STRONG&gt;&lt;EM&gt;true&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BuildApps.ApiType&lt;/STRONG&gt; = &lt;STRONG&gt;&lt;EM&gt;rest&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;URL.headers.AI-Resource-Group&lt;/STRONG&gt; = name of your resource group in the SAP AI Core – in my case it is “&lt;STRONG&gt;&lt;EM&gt;default&lt;/EM&gt;&lt;/STRONG&gt;”&lt;BR /&gt;Note here that this is helpful if you use just one instance of the AI, located in one resource group. But if you use more AI instances and these instances are scattered among different groups, you can’t put the resource group name in the destination – instead you have to manage it in the application, in the REST API call.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;And additional for the future use:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;sap.applicationdevelopment.actions.enabled&lt;/STRONG&gt; = &lt;STRONG&gt;&lt;EM&gt;true&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;sap.processautomation.enabled&lt;/STRONG&gt; = &lt;STRONG&gt;&lt;EM&gt;true&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;MobileEnabled&lt;/STRONG&gt; = &lt;STRONG&gt;&lt;EM&gt;true&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1878866192"&gt;Accessing AI from SAP Build Apps&lt;/H2&gt;&lt;P&gt;Let’s go now to the SAP Build Apps.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Open the “&lt;STRONG&gt;Integrations&lt;/STRONG&gt;” tab&lt;/LI&gt;&lt;LI&gt;Click “&lt;STRONG&gt;ADD INTEGRATION&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Find the “&lt;STRONG&gt;SAP Systems&lt;/STRONG&gt;” tile and click “&lt;STRONG&gt;BTP DESTINATIONS&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;Find and select the destination we just defined&lt;/LI&gt;&lt;LI&gt;Click the “&lt;STRONG&gt;INSTALL INTEGRATION&lt;/STRONG&gt;”&lt;BR /&gt;That’s all we need to do on the integration level – we don’t need any entity here as we will just call the BTP destination and directly process the reply.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--2075379697"&gt;Adding AI-related components to the application UI&lt;/H2&gt;&lt;P&gt;Open the “&lt;STRONG&gt;Record Details&lt;/STRONG&gt;” page. Drag the following on the UI canvas:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A button, to send request to the AI – name it “&lt;STRONG&gt;Send request to AI&lt;/STRONG&gt;”&lt;/LI&gt;&lt;LI&gt;A spinner, to show that the process is running&lt;/LI&gt;&lt;LI&gt;A text field with the AI’s interpretation&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;I would also suggest adding text fields to display cost of the interpretation denominated in the SAP AI Core tokens:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Input tokens&lt;/LI&gt;&lt;LI&gt;Output tokens&lt;/LI&gt;&lt;LI&gt;Total tokens&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Now we need to define some page variables. Most of them we will populate with data we get from the AI:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;PgVarInputTokens&lt;/STRONG&gt; - &lt;STRONG&gt;number&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;PgVarOutputTokens&lt;/STRONG&gt; - &lt;STRONG&gt;number&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;PgVarTotalTokens&lt;/STRONG&gt; - &lt;STRONG&gt;number&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;PgVarAiInterpretation&lt;/STRONG&gt; - &lt;STRONG&gt;text&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;But one page variable will be used to store the template of the request:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;PgVarRequestTemplate&lt;/STRONG&gt; – text – set the “Initial value” to:&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;The following text is audit log record. Provide short interpretation in less than 50 words.&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Note: &lt;/STRONG&gt;We use the simplest possible approach in this demo app, suitable for very small, probably single person development team. But in the real life, production version it would make sense to use SAP AI Core prompt templating function. Especially when there is a dedicated AI team in your organization – in such case the application development team should use templates prepared in advance by the AI team for all the AI requests.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Another variable will be used to build request to the AI:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In correct form&lt;/LI&gt;&lt;LI&gt;Containing correct request&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;PgVarMessageToAI&lt;/STRONG&gt; – this variable is an &lt;STRONG&gt;object&lt;/STRONG&gt;, containing &lt;STRONG&gt;list &lt;/STRONG&gt;of&lt;STRONG&gt; objects&lt;/STRONG&gt; &lt;STRONG&gt;with two properties&lt;/STRONG&gt;:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;{&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "PgVarMessageToAI": {&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "messages": [&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "role": "text",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "content": "text"&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ]&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/P&gt;&lt;P&gt;}&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_13-1750162811832.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275391iC92CE80C58CA01C0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_13-1750162811832.png" alt="Jakub_Roguski_13-1750162811832.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Add also one variable to control visibility of the spinner:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;PgVarSpinnerVisible&lt;/STRONG&gt; – true/false – set the “&lt;STRONG&gt;Initial value&lt;/STRONG&gt;” to &lt;STRONG&gt;&lt;EM&gt;false&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Now we need to connect page variables with “Text” components: go to “User Interface” tab, open the “Record Details” page and assign each “Text” component its variable in the “Content” field.&lt;/P&gt;&lt;H2 id="toc-hId-2023074094"&gt;The button logic&lt;/H2&gt;&lt;P&gt;Now let’s build the logic to send request and to process the response. Select the “&lt;STRONG&gt;Send request to AI”&lt;/STRONG&gt; button and open its logic canvas. Place and connect flow functions as shown on the following image:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jakub_Roguski_14-1750162811834.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/275393i920D00271A7D8EB3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_14-1750162811834.png" alt="Jakub_Roguski_14-1750162811834.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Flow functions configuration:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Set page variable &lt;STRONG&gt;PgVarSpinnerVisible&lt;/STRONG&gt; to &lt;STRONG&gt;&lt;EM&gt;true&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Set page variable &lt;STRONG&gt;PgVarMessageToAI&lt;/STRONG&gt;, field &lt;STRONG&gt;messages&lt;/STRONG&gt;, to list of values:&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Role&lt;/STRONG&gt; set to &lt;STRONG&gt;&lt;EM&gt;user&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Content&lt;/STRONG&gt; set to formula and the formula to: &lt;STRONG&gt;&lt;EM&gt;pageVars. PgVarRequestTemplate +" "+appVars.MessageText&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;HTTP destination request:&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Destination&lt;/STRONG&gt;: select the destination pointing to your AI deployment&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;HTTP method&lt;/STRONG&gt;: set to &lt;STRONG&gt;&lt;EM&gt;POST&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Request body type&lt;/STRONG&gt; set to &lt;STRONG&gt;&lt;EM&gt;json&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Request body&lt;/STRONG&gt; set to &lt;STRONG&gt;&lt;EM&gt;PgVarMessageToAi&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;OPTIONAL INPUTS Path&lt;/STRONG&gt;: set to&lt;BR /&gt;&lt;STRONG&gt;&lt;EM&gt;/chat/completions?api-version=2024-10-21&lt;BR /&gt;&lt;/EM&gt;&lt;/STRONG&gt;if you use ChatGPT4o like me. If you use different LLM, you have to use different path, suitable for your type and version of the LLM.&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Sep page variable &lt;STRONG&gt;PgVarSpinnerVisible&lt;/STRONG&gt; to &lt;STRONG&gt;&lt;EM&gt;false&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Set page variable &lt;STRONG&gt;PgVarAiInterpretation&lt;/STRONG&gt; to&lt;BR /&gt;&lt;EM&gt;&lt;STRONG&gt;outputs["HTTP destination request"].resBodyParsed.choices[0].message.content&lt;/STRONG&gt;&lt;BR /&gt;&lt;/EM&gt;- this will glow in red and there will be a message that it is incorrect, but it will work anyway.&lt;/LI&gt;&lt;LI&gt;Set page variable &lt;STRONG&gt;PgVarInputTokens&lt;/STRONG&gt; to&lt;BR /&gt;&lt;EM&gt;&lt;STRONG&gt;outputs["HTTP destination request"].resBodyParsed.usage.prompt_tokens&lt;/STRONG&gt;&lt;BR /&gt;&lt;/EM&gt;– again, ignore the red color and error message&lt;/LI&gt;&lt;LI&gt;Set page variable &lt;STRONG&gt;PgVarOutputTokens&lt;/STRONG&gt; to&lt;BR /&gt;&lt;EM&gt;&lt;STRONG&gt;outputs["HTTP destination request"].resBodyParsed.usage.completion_tokens&lt;/STRONG&gt;&lt;BR /&gt;&lt;/EM&gt;– again ignore the message&lt;/LI&gt;&lt;LI&gt;Set page variable &lt;STRONG&gt;PgVarTotalTokens&lt;/STRONG&gt; to&lt;BR /&gt;&lt;EM&gt;&lt;STRONG&gt;outputs["HTTP destination request"].resBodyParsed.usage.total_tokens&lt;/STRONG&gt;&lt;BR /&gt;&lt;/EM&gt;– the same story as above&lt;/LI&gt;&lt;LI&gt;Alert: select formula for &lt;STRONG&gt;Dialog title&lt;/STRONG&gt; and put&lt;BR /&gt;&lt;EM&gt;&lt;STRONG&gt;"Failure status code: "+outputs["HTTP destination request"].failureStatusCode+" | Failure status text: "+outputs["HTTP destination request"].failureStatusText&lt;/STRONG&gt;&lt;BR /&gt;&lt;/EM&gt;in the formula&lt;/LI&gt;&lt;LI&gt;Alert: select formula for &lt;STRONG&gt;Dialog title&lt;/STRONG&gt; and put&lt;BR /&gt;&lt;EM&gt;&lt;STRONG&gt;"Error code: "+outputs["HTTP destination request"].error.code+" | Error message: "+outputs["HTTP destination&lt;/STRONG&gt; request"].error.message&lt;BR /&gt;&lt;/EM&gt;in the formula&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Save the application and test it in the preview – you should see interpretation by AI after a few seconds from pressing the “&lt;STRONG&gt;Send request to AI” &lt;/STRONG&gt;button.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Build, deploy and enjoy!&amp;nbsp;&lt;/STRONG&gt;The demo application is ready. Now you can modify it up to your liking – adding features, beautifying the UI.&lt;/P&gt;&lt;P&gt;Please let me know if you would like to get the above project as .tar file, ready to upload to your SAP Build Apps environment.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-global-account-audit-logs-using-sap-btp-auditlog-service-sap-build/ba-p/14129989"/>
    <published>2025-06-19T14:56:35.448000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/application-frontend-service-now-generally-available-in-sap-btp-trail/ba-p/14134649</id>
    <title>Application Frontend Service now generally available in SAP BTP Trail Account [cf us10-XXX]</title>
    <updated>2025-06-23T17:44:52.329000+02:00</updated>
    <author>
      <name>Yogananda</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/75</uri>
    </author>
    <content>&lt;P&gt;As part of our exciting &amp;nbsp;&lt;A href="https://news.sap.com/2025/04/sap-build-sap-s4hana-cloud-simplify-development/" target="_blank" rel="noopener noreferrer"&gt;SAP Build&amp;nbsp;&lt;/A&gt;release, we're happy to announce the release of Application Frontend service, a new SaaS application on SAP Business Technology Platform (BTP) Trail account for US region for hosting, serving and operating frontend applications.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#800080"&gt;&lt;STRONG&gt;SAP BTP Trial accounts can be deployed with limited to five(5) applications per subaccount.&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, you can enjoy the following benefits of Application Frontend Service&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-06-23_17-38-48.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277755iE9E06693A5AA57C9/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-06-23_17-38-48.png" alt="2025-06-23_17-38-48.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1991416362"&gt;What is Application Frontend Service?&lt;/H4&gt;&lt;P&gt;Host, serve, and manage frontend applications to extend SAP business solutions.&lt;/P&gt;&lt;P&gt;Application Frontend service lets you host and serve frontend applications. It serves as a single entry point for hosting web-based UI applications to extend SAP's business solutions. The service provides tools for deploying and managing applications, serving static resources, routing backend calls to defined targets, and observability tools.&lt;/P&gt;&lt;P&gt;Application Frontend service is included in the &lt;STRONG&gt;SAP Build.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Application Frontend service&lt;/STRONG&gt; supports various channels for managing applications, such as the commonly used Generic Application Content Deployer (GACD) for multitarget applications (MTA), a dedicated UI in the cockpit, and a CLI. These options allow you to choose the channel that best suits your needs.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="loio6bb9594f083943cba1be41d78529d63e_LowRes.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277945iB09031D7D128BE84/image-size/large?v=v2&amp;amp;px=999" role="button" title="loio6bb9594f083943cba1be41d78529d63e_LowRes.png" alt="loio6bb9594f083943cba1be41d78529d63e_LowRes.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Application Frontend is a SaaS application which is not coupled to any specific SAP BTP runtime environment or other SAP BTP applications. You can find and subscribe to the service from the SAP BTP cockpit. Application Frontend is also equipped with a service broker to support interaction flows using service instances, for example when using MTA deploy in the CF environment.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;While there is native support in the good old MTA concept for lifecycle management, Application Frontend also provides a command line interface (CLI) as a first-class tool for managing your applications. With the CLI, you can directly interact with the service and execute all actions supported by Application Frontend to enjoy fast response times and new integration opportunities.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1665820138"&gt;&lt;FONT color="#000080"&gt;&lt;STRONG&gt;High Level Overview of Application Frontend Service - Deployment&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Yogananda_0-1750692504909.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277750i367CF3645161F50B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Yogananda_0-1750692504909.png" alt="Yogananda_0-1750692504909.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1598389352"&gt;&lt;FONT color="#0000FF"&gt;Prerequisites to enable Application Frontend Serivce&lt;/FONT&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;Go to your SAP BTP Trail Account - Subaccount&lt;/LI&gt;&lt;LI&gt;Go to your Instance and Subscription - Subscribe for SAP Cloud Identity Services&lt;/LI&gt;&lt;LI&gt;Enable SAP IAS and Trust &amp;amp; Auth with enabled SAP IAS&lt;/LI&gt;&lt;LI&gt;Go to Entitlements - Select Application Frontend Service&lt;/LI&gt;&lt;LI&gt;Select 2 checkbox for enabling the Plan (Developer and Application)&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Create a Role Collections and Assign to your User (SAP IAS enabled)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-06-23_16-52-00.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277717i65B8B0D72C2AE8A0/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-06-23_16-52-00.png" alt="2025-06-23_16-52-00.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Go to Instances and Subscription - Select&amp;nbsp;&lt;STRONG&gt;Application Frontend Service &lt;/STRONG&gt;from dropdown with&lt;STRONG&gt; Plan - Trial&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-06-23_17-15-43.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277739i6DBE24643606A45F/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-06-23_17-15-43.png" alt="2025-06-23_17-15-43.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Go to Instances and Subscription - Select&amp;nbsp;&lt;STRONG&gt;Application Frontend Service &lt;/STRONG&gt;with&lt;STRONG&gt; Plan - Developer&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-06-23_17-17-55.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277725i18BA3186F9BB8ED7/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-06-23_17-17-55.png" alt="2025-06-23_17-17-55.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1401875847"&gt;&lt;FONT color="#000080"&gt;Create a New Role Collection&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT color="#000080"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-06-26_09-06-10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279037iCE7D01FBD3CA2ED8/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-06-26_09-06-10.png" alt="2025-06-26_09-06-10.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1205362342"&gt;&lt;FONT color="#000080"&gt;Assign Role to newly created Role Collection&lt;/FONT&gt;&lt;FONT color="#000080"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-06-26_09-07-30.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279038i0FA174F0ABE7EC0B/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-06-26_09-07-30.png" alt="2025-06-26_09-07-30.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;H4 id="toc-hId-1008848837"&gt;&lt;FONT color="#000080"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-06-26_09-08-05.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279039iF7D252D50CC7E421/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-06-26_09-08-05.png" alt="2025-06-26_09-08-05.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;H4 id="toc-hId-812335332"&gt;&lt;FONT color="#000080"&gt;Application Frontend Service Library &amp;amp; CLI (Command Line)&lt;/FONT&gt;&lt;/H4&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;npm install -g /appfront-cli

afctl login --sso -a &amp;lt;api_endpoint&amp;gt;

afctl push&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-615821827"&gt;&amp;nbsp;&lt;/H4&gt;&lt;H4 id="toc-hId-419308322"&gt;Conclusion&lt;/H4&gt;&lt;P&gt;&lt;STRONG&gt;Application Frontend Service&lt;/STRONG&gt; is a game-changer for Cloud Foundry users. By simplifying UI development, enhancing scalability, and promoting consistency, AFS empowers developers to create high-quality applications more efficiently. As cloud-native development continues to evolve, integrating tools like AFS will be crucial in staying ahead of the curve and delivering exceptional user experiences.&lt;/P&gt;&lt;P&gt;For more detailed insights, you can check out the original blog posts :&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Introducing Application Frontend Service&amp;nbsp;:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-application-frontend-service/ba-p/14091408" target="_blank"&gt;Application Frontend Service&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Simple UI Applications with Application Frontend Service&amp;nbsp;:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/simple-ui-applications-with-application-frontend-service/ba-p/14096009" target="_blank"&gt;DEV Community&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Application Frontend Service Help Documentation : &lt;A href="https://help.sap.com/docs/application-frontend-service" target="_blank" rel="noopener noreferrer"&gt;Guide and Development&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Application Frontend Service Onboarding Service -&amp;nbsp;&amp;nbsp;&lt;A title="https://help.sap.com/docs/application-frontend-service/application-frontend-service/setup-in-sap-btp-trial" href="https://help.sap.com/docs/application-frontend-service/application-frontend-service/setup-in-sap-btp-trial" target="_blank" rel="noopener noreferrer"&gt;AppFront trial on-boarding help page&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/application-frontend-service-now-generally-available-in-sap-btp-trail/ba-p/14134649"/>
    <published>2025-06-23T17:44:52.329000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/gamechanger-alert-meet-sap-joule-studio-for-real-world-impact/ba-p/14133749</id>
    <title>Gamechanger Alert: Meet SAP Joule Studio for Real-World Impact</title>
    <updated>2025-06-26T09:24:38.676000+02:00</updated>
    <author>
      <name>Chetann_Nagpal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/383862</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;As someone who's still fairly new to SAP and learning about all it has to offer, I recently came across &lt;/SPAN&gt;&lt;STRONG&gt;SAP Joule Studio&lt;/STRONG&gt;&lt;SPAN&gt;—a tool that honestly surprised me. It’s part of SAP’s growing focus on AI, but instead of being just a tech buzzword, it’s something practical. Something helpful. Something that actually makes life easier.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So I thought I’d share what I’ve learned so far, for anyone else who’s curious like me.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1862304813"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1665791308"&gt;&lt;STRONG&gt;What is SAP Joule Studio?&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;SAP Joule Studio&lt;/STRONG&gt;&lt;SPAN&gt; is a &lt;/SPAN&gt;&lt;STRONG&gt;low-code/no-code platform&lt;/STRONG&gt;&lt;SPAN&gt; that lets you &lt;/SPAN&gt;&lt;STRONG&gt;create AI-powered agents&lt;/STRONG&gt;&lt;SPAN&gt;—little digital helpers that live inside your SAP system and support everyday tasks. These agents can:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Answer questions using real SAP data&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Send reminders or alerts&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Trigger workflows based on events&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Help users navigate complex processes&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The best part? You don’t need to be a developer to build one.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;All you need is a good understanding of a business problem, and Joule Studio helps you turn that into a solution using easy visual tools.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1469277803"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1272764298"&gt;&lt;STRONG&gt;Why This Is a Game-Changer (With Real Use Cases)&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;What really got me excited was seeing how &lt;/SPAN&gt;&lt;STRONG&gt;real-world teams&lt;/STRONG&gt;&lt;SPAN&gt; can use this tool to solve &lt;/SPAN&gt;&lt;STRONG&gt;day-to-day challenges&lt;/STRONG&gt;&lt;SPAN&gt;. Here are a few examples that really stood out to me:&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1205333512"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;HR &amp;amp; Employee Self-Service&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;SPAN&gt;: An AI agent that answers common HR questions like “How many vacation days do I have left?”, “What’s the process to update my bank details?”, or “When does my probation end?”&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Impact&lt;/STRONG&gt;&lt;SPAN&gt;: Reduces emails to HR, gives instant answers, and improves employee satisfaction.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1008820007"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Onboarding Assistant&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;SPAN&gt;: An AI agent that guides a new joiner through their first week—showing them how to complete paperwork, introducing them to teammates, and sending daily checklists.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Impact&lt;/STRONG&gt;&lt;SPAN&gt;: Makes onboarding smoother, especially for remote hires or global teams.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-812306502"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Procurement Alerts&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;SPAN&gt;: A smart assistant that watches for delays from key suppliers and notifies procurement managers if a PO is stuck or overdue.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Impact&lt;/STRONG&gt;&lt;SPAN&gt;: Keeps procurement responsive and improves relationships with vendors.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-615792997"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Project Management Summary&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;SPAN&gt;: A daily AI briefing that tells project leads about overdue tasks, timesheet gaps, or resource bottlenecks.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Impact&lt;/STRONG&gt;&lt;SPAN&gt;: Saves hours of manual tracking and keeps teams aligned.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-419279492"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Compliance Checker&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;SPAN&gt;: A bot that checks which employees haven't completed their mandatory training or signed policy documents, and sends them a reminder.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Impact&lt;/STRONG&gt;&lt;SPAN&gt;: Helps HR stay compliant without manual follow-ups.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-222765987"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;IT Helpdesk Agent&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;SPAN&gt;: An agent that answers questions like “How do I reset my SAP password?” or “Where do I raise a ticket?”&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Impact&lt;/STRONG&gt;&lt;SPAN&gt;: Cuts down ticket volume for IT support and empowers users.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;These aren’t just theoretical—they’re real issues we see in companies every day. And Joule Studio gives you a way to &lt;/SPAN&gt;&lt;STRONG&gt;solve them quickly, without coding&lt;/STRONG&gt;&lt;SPAN&gt; or waiting on IT.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId--178061606"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--374575111"&gt;&lt;STRONG&gt;Why Clients Will Love It Too&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;For clients, Joule Studio brings:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Self-service power&lt;/STRONG&gt;&lt;SPAN&gt; to their SAP users&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Less dependency on IT&lt;/STRONG&gt;&lt;SPAN&gt; for small tasks&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Smarter workflows&lt;/STRONG&gt;&lt;SPAN&gt; with reminders, alerts, and guidance&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Faster onboarding and training&lt;/STRONG&gt;&lt;SPAN&gt; for new team members&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Consistency&lt;/STRONG&gt;&lt;SPAN&gt; across geographies and business units&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;AI becomes something helpful, not something scary or complex. It empowers users instead of overwhelming them.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId--571088616"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--767602121"&gt;&lt;STRONG&gt;Where You Can See It in Action&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;If you're like me and prefer learning visually, I highly recommend this official demo:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://youtu.be/JdwfjieiOFY" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;SAP Joule Studio – AI for Everyone (YouTube)&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can also explore SAP’s official product page for more examples and how-to guides:&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/artificial-intelligence/joule-studio.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;SAP Joule Studio – Official Page&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;These are great starting points with visuals and real examples.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId--964115626"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--1160629131"&gt;&lt;STRONG&gt;Getting Started with Joule Studio&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;If you’re ready to try it:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Make sure your system is running on &lt;/SPAN&gt;&lt;STRONG&gt;SAP BTP (Business Technology Platform)&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Go into &lt;/SPAN&gt;&lt;STRONG&gt;SAP Build&lt;/STRONG&gt;&lt;SPAN&gt; and access &lt;/SPAN&gt;&lt;STRONG&gt;Joule Studio&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Start by creating a &lt;/SPAN&gt;&lt;STRONG&gt;small AI agent&lt;/STRONG&gt;&lt;SPAN&gt; for a common task.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Train it using &lt;/SPAN&gt;&lt;STRONG&gt;real process examples&lt;/STRONG&gt;&lt;SPAN&gt; and test in &lt;/SPAN&gt;&lt;STRONG&gt;Preview mode&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Roll it out with the &lt;/SPAN&gt;&lt;STRONG&gt;right user permissions&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="JB1.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277324iDDB0F2EEF804CA32/image-size/large?v=v2&amp;amp;px=999" role="button" title="JB1.jpg" alt="JB1.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="JB2.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277325iA4F9B177B5A992DA/image-size/large?v=v2&amp;amp;px=999" role="button" title="JB2.jpg" alt="JB2.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="JB3.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277326iE906FD0008847E81/image-size/large?v=v2&amp;amp;px=999" role="button" title="JB3.jpg" alt="JB3.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Remember&lt;/STRONG&gt;&lt;SPAN&gt;—you don’t need to be technical. You just need to understand your business and what people are struggling with. Joule Studio helps you close that gap.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1357142636"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--1553656141"&gt;&lt;STRONG&gt;Final Thoughts (From One Learner to Another)&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;I’m still exploring SAP, still learning, and still asking questions. But tools like Joule Studio give me hope, not just for where tech is going, but for how we can make it work &lt;/SPAN&gt;&lt;STRONG&gt;for people&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This isn’t about replacing humans—it’s about &lt;/SPAN&gt;&lt;STRONG&gt;supporting them&lt;/STRONG&gt;&lt;SPAN&gt; with small, smart helpers that remove friction and free up time.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you're also exploring SAP tools and wondering where to start with AI, this might just be the right place. Try building a simple use case and see what it unlocks for your team.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And if you’ve tried it, I’d really love to hear what you’ve built. Let’s share and learn together, because the best ideas often come from the people closest to the problem.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;#SAPJoule, #JouleStudio, #SAPBTP, #AIinSAP, #Gamechanger, #NoCodeAI, #SAPBuild, #EnterpriseAI, #DigitalTransformation, #SAPCommunity&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/gamechanger-alert-meet-sap-joule-studio-for-real-world-impact/ba-p/14133749"/>
    <published>2025-06-26T09:24:38.676000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/automating-email-with-sap-build-process-automation-and-outlook-bot/ba-p/14141536</id>
    <title>Automating Email with SAP Build Process Automation and Outlook Bot</title>
    <updated>2025-07-05T11:16:55.651000+02:00</updated>
    <author>
      <name>Shubham_Singh_01</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2156636</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In this blog, I will walk you through how I built an outlook automation bot that : -&lt;BR /&gt;i) Opens Microsoft Outlook.&lt;BR /&gt;ii) Sends a repetitive message with&amp;nbsp; .docx file attached.&lt;BR /&gt;iii) Closes outlook.&lt;BR /&gt;iv) Is released and deployed through the SAP Build lobby.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;Creating a new automation project&lt;/STRONG&gt;&lt;BR /&gt;First of all log into SAP Build Lobby.&lt;BR /&gt;Click create -&amp;gt; Automated Process-&amp;gt;Automation and click on next&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Shubham_Singh_01_20-1751364625106.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281236i0BF2D3975797EB1F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham_Singh_01_20-1751364625106.png" alt="Shubham_Singh_01_20-1751364625106.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Shubham_Singh_01_21-1751364625114.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281237i7E8DFA034285231F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham_Singh_01_21-1751364625114.png" alt="Shubham_Singh_01_21-1751364625114.png" /&gt;&lt;/span&gt;&lt;BR /&gt;Name your project as ‘OutlookEmailAutomation’.&lt;BR /&gt;Provide a short description&amp;nbsp; as “ Bot to send daily emails with attachment via outlook”.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Shubham_Singh_01_22-1751364625119.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281235i7A6D87356D5C28AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham_Singh_01_22-1751364625119.png" alt="Shubham_Singh_01_22-1751364625119.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Click on ‘Review’ and then ‘Create’.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;Designing the Automation Bot&lt;/STRONG&gt;&lt;BR /&gt;In the automation section, click create -&amp;gt; automation and give the agent version&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Shubham_Singh_01_23-1751364625126.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281240iF6055018FA45DCD5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham_Singh_01_23-1751364625126.png" alt="Shubham_Singh_01_23-1751364625126.png" /&gt;&lt;/span&gt;&lt;BR /&gt;name it ‘sendemailbot’ and add description as ‘ bot for email automation’&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Shubham_Singh_01_24-1751364625131.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281239iA03A8D82B280A817/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham_Singh_01_24-1751364625131.png" alt="Shubham_Singh_01_24-1751364625131.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Click on create.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Click on setting option, go to dependencies and&amp;nbsp; click on add -&amp;gt; Add a business process project dependency ( it is necessary to do this as then only we can get the different operations related to outlook in our tools section )&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Shubham_Singh_01_25-1751364625138.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281238iB983630B6E68C5B1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham_Singh_01_25-1751364625138.png" alt="Shubham_Singh_01_25-1751364625138.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;and then add ‘outlook sdk’&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Shubham_Singh_01_26-1751364625143.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281241iC11747B6BBF6D7AC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham_Singh_01_26-1751364625143.png" alt="Shubham_Singh_01_26-1751364625143.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;BR /&gt;Add these steps by drag &amp;amp; drop from the tools section ;-&lt;/P&gt;&lt;OL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;i) Open outlook instance&lt;BR /&gt;ii) Send email(Outlook)&lt;BR /&gt;iii) Release outlook instance&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Shubham_Singh_01_27-1751364625147.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281242i786DEE851F95B7B4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham_Singh_01_27-1751364625147.png" alt="Shubham_Singh_01_27-1751364625147.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In automation details section, go to input/output and set one input parameter for storing the document location which is going to be attached in the mail&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Shubham_Singh_01_28-1751364625151.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281243i5501F1134FDAF2BA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham_Singh_01_28-1751364625151.png" alt="Shubham_Singh_01_28-1751364625151.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In Send Email(Outlook) properties, fill all necessary details&lt;BR /&gt;( like In emailitemparameter add custom data,&lt;BR /&gt;set email fields&lt;BR /&gt;attach file path( here add the filepath variable for storing file location))&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;BR /&gt;&lt;STRONG&gt;Test the bot locally&lt;BR /&gt;&lt;/STRONG&gt;Click on test button and give the filepath ( i.e. the folder location)&lt;BR /&gt;e.g.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Shubham_Singh_01_29-1751364625156.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281244i098AE74AFF558951/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham_Singh_01_29-1751364625156.png" alt="Shubham_Singh_01_29-1751364625156.png" /&gt;&lt;/span&gt;&lt;BR /&gt;Ensure that there are no errors.&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Release the automation&lt;/STRONG&gt;&lt;BR /&gt;Navigate to project overview&lt;BR /&gt;Click release – set version 1.0.0&lt;BR /&gt;Add release notes : “ Initial release of outlook email bot”.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;Finally Deploy the Bot&lt;/STRONG&gt;&lt;BR /&gt;Go to deployments tab in the build lobby.&lt;BR /&gt;choose your bot and deploy version 1.0.0.&lt;BR /&gt;Assign it to a Desktop Agent that has outlook installed.&lt;BR /&gt;Trigger via manual execution or by scheduled trigger(e.g. every morning 9:00 am).&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;Benefits of this automation :-&lt;BR /&gt;&lt;/STRONG&gt;It will save daily manual effort.&lt;BR /&gt;It reduces errors in repeated email content.&lt;BR /&gt;It ensures consistent report attachment.&lt;BR /&gt;It works even with outlook desktop app – no server-side integration required.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/automating-email-with-sap-build-process-automation-and-outlook-bot/ba-p/14141536"/>
    <published>2025-07-05T11:16:55.651000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/my-first-hands-on-with-sap-build-apps/ba-p/14144353</id>
    <title>My First Hands-On with SAP Build Apps</title>
    <updated>2025-07-05T11:35:20.695000+02:00</updated>
    <author>
      <name>S_Neha</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2124371</uri>
    </author>
    <content>&lt;P&gt;&lt;EM&gt;Hello Everyone.&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;I will be sharing my&amp;nbsp;First Hands-On experience with SAP Build Apps:&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;SPAN class=""&gt;INTELLIGENT DOCUMENT &lt;/SPAN&gt;&lt;SPAN class=""&gt;AUTOMATION with SAP BTP&lt;/SPAN&gt;&lt;SPAN class=""&gt;​&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;SPAN class=""&gt;IDeAS&lt;/SPAN&gt;&lt;SPAN class=""&gt;)&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;SPAN class=""&gt;USECASE -&amp;nbsp; &amp;nbsp;&lt;/SPAN&gt;&lt;/EM&gt;&lt;EM&gt;&lt;SPAN class=""&gt;To d&lt;/SPAN&gt;&lt;/EM&gt;&lt;EM&gt;esign and implement a user-friendly interface to streamline data entry and improve overall usability.​&amp;nbsp;The system prompts users to select the type of input required, such as Purchase Orders (PO), Sales Orders (SO), or Invoices.​&amp;nbsp;Based on the selected input type, the application dynamically renders a structured and context-sensitive interface to capture the necessary data fields accurately and efficiently.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;SPAN class=""&gt;Input Handling -&amp;nbsp;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Objective:&amp;nbsp;&amp;nbsp;&lt;/EM&gt;&lt;EM&gt;Design an intuitive interface to streamline data entry​&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Details:​&amp;nbsp;&lt;/EM&gt;&lt;EM&gt;User selects input type (PO/SO/Invoice)&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="S_Neha_1-1749408517292.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271489iFFC667E78B225F72/image-size/medium?v=v2&amp;amp;px=400" role="button" title="S_Neha_1-1749408517292.png" alt="S_Neha_1-1749408517292.png" /&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Data Management -&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Objective:​&amp;nbsp;&lt;/EM&gt;&lt;EM&gt;Secure and optimized storage of captured data​&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Details:​&lt;/EM&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;EM&gt;Store data using SAP HANA Cloud(Here – Build On-device Storage) ​&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;Ensure data reliability and compliance​&amp;nbsp;&lt;/EM&gt;&lt;EM&gt; &lt;/EM&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="S_Neha_0-1749408340546.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271493i73696B0381BB383E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="S_Neha_0-1749408340546.jpg" alt="S_Neha_0-1749408340546.jpg" /&gt;&lt;/span&gt;&lt;/EM&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;EM&gt;Document Generation -&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;​Objective:​&amp;nbsp;&lt;/EM&gt;&lt;EM&gt;Convert captured data into professional PDF documents​&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Details:​ -&lt;/EM&gt;&lt;EM&gt;&amp;nbsp;Use PDF generation API-&lt;/EM&gt;&lt;EM&gt;&lt;A href="http://pdf.co/" target="_blank" rel="noopener nofollow noreferrer"&gt;PDF.co&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Process Automation -&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Objective:​​&amp;nbsp;&lt;/EM&gt;&lt;EM&gt;Automate routine steps and reduce manual intervention&amp;nbsp;​&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;​Details:&amp;nbsp;​&lt;/EM&gt;&lt;EM&gt;SAP Build Process Automation used for workflow triggers&amp;nbsp;​​Conditions, approvals, email notifications&amp;nbsp;​(Integration Suite)&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;This is how we choose an input - for example Purchase order​&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="S_Neha_2-1749408634230.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271490i4C024A1752DFB841/image-size/medium?v=v2&amp;amp;px=400" role="button" title="S_Neha_2-1749408634230.png" alt="S_Neha_2-1749408634230.png" /&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Now , we fill the input fields&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="S_Neha_3-1749408700110.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271491iEE73B8DD72583509/image-size/medium?v=v2&amp;amp;px=400" role="button" title="S_Neha_3-1749408700110.png" alt="S_Neha_3-1749408700110.png" /&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Now this is how a simple pdf will be generated.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-08 231230.png" style="width: 819px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271492i0DA5C5F87C760BAE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-08 231230.png" alt="Screenshot 2025-06-08 231230.png" /&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;What did I learn from this Hands-on?&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;1.SAP Build Apps makes UI design faster and easy.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;2. SAP Integration Suite helps us connect different APIs.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Conclusion&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;I would like to conclude saying that through this user case, I have gained experience in creating a basic application that generates a pdf from user input. This makes the process more efficient, accurate and time saving. It gave me a deeper understanding and build confidence in combing SAP Build Apps with Integration and automation tools to create advance applications in the future.&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;#SAPBuildApps #LowCode #SAPBTP #IntegrationSuite #FirstProject&lt;/EM&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/my-first-hands-on-with-sap-build-apps/ba-p/14144353"/>
    <published>2025-07-05T11:35:20.695000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/find-the-bug-formatting-dates-and-times-in-build-apps/ba-p/14146230</id>
    <title>Find the Bug 🐞 Formatting dates and times in Build Apps</title>
    <updated>2025-07-07T17:10:26.360000+02:00</updated>
    <author>
      <name>Dan_Wroblewski</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/72</uri>
    </author>
    <content>&lt;P&gt;Someone sent me a problem they were having in a private message, that made me chuckle.&lt;/P&gt;&lt;P&gt;To be honest, after 2 years of war and 2 weeks of intense war, and having to live out of a suitcase for a week in Athens because my plane was diverted and could not enter my country -- this was a fun, amusing diversion (it actually made me laugh).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-07-07_18-17-17.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283549i2718837831B59874/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-07-07_18-17-17.png" alt="2025-07-07_18-17-17.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here's the message I received:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="rule.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/242171i90366DC4F4BD6F45/image-size/large?v=v2&amp;amp;px=999" role="button" title="rule.png" alt="rule.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;FORMAT_DATETIME_WITH_TIMEZONE(DATETIME("2025-04-03T02:00:00.000Z"), "MMM d, yyyy", "America/Chicago") &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;"I am using formula to format the date. Actually the output should be Apr 2, 2025, 9 pm. But I am getting Apr 3, 2025, 9 pm. How to solve this? I tried multiple ways. It's only changing time but not date. I used other timezone format as well. Please help. This is an issue in production."&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="rule.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/242171i90366DC4F4BD6F45/image-size/large?v=v2&amp;amp;px=999" role="button" title="rule.png" alt="rule.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After running the formula in my Build Apps and getting the same result, I assumed it was a bug in the tool (&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/163703"&gt;@Mari&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1641528"&gt;@Pekka_Aaltonen&lt;/a&gt;, please forgive me). For the programmer, the obvious thing to think was that you asked for the date in the format April 2 (because it had to give the day before because the time zone they gave was minus 6 hours from UTC) and instead it was giving April 3. Why? Probably because the formula was too stupid to return the previous day's date.&lt;/P&gt;&lt;P&gt;It was supposed to show this:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_1-1751859860631.png" style="width: 198px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283321iB0EAE6A724332757/image-dimensions/198x204?v=v2" width="198" height="204" role="button" title="Dan_Wroblewski_1-1751859860631.png" alt="Dan_Wroblewski_1-1751859860631.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;But kept showing this:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_0-1751859812914.png" style="width: 0px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283320i6A6CCB35A7939D05/image-size/small?v=v2&amp;amp;px=200" width="0" height="0" role="button" title="Dan_Wroblewski_0-1751859812914.png" alt="Dan_Wroblewski_0-1751859812914.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_0-1751859948461.png" style="width: 195px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283322i073475760A3806EE/image-dimensions/195x203?v=v2" width="195" height="203" role="button" title="Dan_Wroblewski_0-1751859948461.png" alt="Dan_Wroblewski_0-1751859948461.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;But, alas, there was a perfectly logical explanation, but it was hidden because of the actual date and time used in the example. Another case of all-too-human error.&lt;/P&gt;&lt;P&gt;Can you find the bug in the function code?&lt;/P&gt;&lt;P&gt;P.S.: If you like this puzzle, wait for Devtoberfest in October. We'll have plenty more.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/find-the-bug-formatting-dates-and-times-in-build-apps/ba-p/14146230"/>
    <published>2025-07-07T17:10:26.360000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/send-odata-batch-requests-in-sap-build-apps-json/ba-p/14146262</id>
    <title>Send OData Batch Requests in SAP Build Apps (JSON)</title>
    <updated>2025-07-07T17:43:44.496000+02:00</updated>
    <author>
      <name>Dan_Wroblewski</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/72</uri>
    </author>
    <content>&lt;P&gt;Many people have asked about sending &lt;A href="https://www.odata.org/documentation/odata-version-2-0/batch-processing/\" target="_self" rel="nofollow noopener noreferrer"&gt;OData batch requests&lt;/A&gt; via SAP Build Apps. It can be done, if your API accepts JSON-formatted payloads for batch requests.&lt;/P&gt;&lt;P&gt;Just use the &lt;STRONG&gt;HTTP Destination Request&lt;/STRONG&gt; flow function.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_1-1751902390476.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283554i8D15662D9C2687E2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Dan_Wroblewski_1-1751902390476.png" alt="Dan_Wroblewski_1-1751902390476.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Then set the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Destination:&lt;/STRONG&gt; Create an integration with your destination that points to your API (no need to specify any entities).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Method:&lt;/STRONG&gt; POST&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Body Type:&lt;/STRONG&gt; JSON&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Request Body:&lt;/STRONG&gt; Just define a page variable with the JSON schema you need, and set the values with a Set Page Variable flow function. More on this below.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Path:&lt;/STRONG&gt; /$batch&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Headers:&lt;/STRONG&gt; Content-Type = application/json&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_0-1751902345026.png" style="width: 343px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283553iBB0E1E2BA09DF0D8/image-dimensions/343x791?v=v2" width="343" height="791" role="button" title="Dan_Wroblewski_0-1751902345026.png" alt="Dan_Wroblewski_0-1751902345026.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1863312957"&gt;Request Body&lt;/H3&gt;&lt;P&gt;The request body would be something like this (here we are create new records):&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;{
    "requests": [
        {
            "id": "1",
            "method": "POST",
            "url": "/Orders",
            "headers": {
                "content-type": "application/json; odata.metadata=minimal; odata.streaming=true",
                "odata-version": "4.0"
            },
            "body": {
                "customer": "JSON1",
                "date": "2021-06-30T00:00:00Z",
                "status": "Initiated",
                "total": 99,
                "currency_code": "USD"
            }
        },
        {
            "id": "2",
            "method": "POST",
            "url": "/Orders",
            "headers": {
                "content-type": "application/json; odata.metadata=minimal; odata.streaming=true",
                "odata-version": "4.0"
            },
            "body": {
                "customer": "JSON2",
                "date": "2021-06-30T00:00:00Z",
                "status": "Initiated",
                "total": 100,
                "currency_code": "USD"
            }
        }
    ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;For my test, I already had the JSON above so I just put it in a JavaScript component, parsed it, and output it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_2-1751902519819.png" style="width: 1188px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283556iFCB3B2EE2224F30E/image-dimensions/1188x369?v=v2" width="1188" height="369" role="button" title="Dan_Wroblewski_2-1751902519819.png" alt="Dan_Wroblewski_2-1751902519819.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;But you could create a page variable, and in your app populate the variable with your data. Then you could use this page variable for the request body.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_3-1751902759936.png" style="width: 1240px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283557i6735CA49244725AF/image-dimensions/1240x561?v=v2" width="1240" height="561" role="button" title="Dan_Wroblewski_3-1751902759936.png" alt="Dan_Wroblewski_3-1751902759936.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Unfortunately, I could not find a way to use the more traditional multipart/mixed payload format from SAP Build Apps. If you can find a way, let us know.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_4-1751902871383.png" style="width: 1034px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283559i7C7CE92F1B97EE13/image-dimensions/1034x618?v=v2" width="1034" height="618" role="button" title="Dan_Wroblewski_4-1751902871383.png" alt="Dan_Wroblewski_4-1751902871383.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/send-odata-batch-requests-in-sap-build-apps-json/ba-p/14146262"/>
    <published>2025-07-07T17:43:44.496000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/accelerate-your-ai-and-innovation-journey-with-expert-guided-services-from/ba-p/14152010</id>
    <title>Accelerate Your AI and Innovation Journey with Expert-Guided Services from SAP</title>
    <updated>2025-07-14T15:55:35.142000+02:00</updated>
    <author>
      <name>RobertKelly</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/7029</uri>
    </author>
    <content>&lt;P&gt;At SAP, we are committed to helping our customers innovate and adopt technologies quickly, effectively, and with confidence. As part of this mission, we’re excited to share a series of &lt;STRONG&gt;expert-guided services and enablement opportunities&lt;/STRONG&gt; offered through the &lt;A href="https://news.sap.com/2025/05/simplify-success-services-support-engagement-model" target="_blank" rel="noopener noreferrer"&gt;Foundational success plan&lt;/A&gt; designed to help you unlock the power of SAP BTP including AI, SAP Build, and SAP HANA Cloud solutions.&lt;/P&gt;&lt;P&gt;These offerings of&amp;nbsp;&lt;A href="https://support.sap.com/en/offerings-programs/enterprise-support/enterprise-support-academy/expert-guided-implementation.html" target="_blank" rel="noopener noreferrer"&gt;Expert Guided Implementation workshops&lt;/A&gt;&amp;nbsp;(EGI) from SAP Enterprise Support are tailored to provide hands-on support and guided experiences, helping you get started with the latest innovations while minimizing complexity and accelerating time-to-value.&lt;/P&gt;&lt;P&gt;Whether you're looking to innovate and improve business processes through process automations, harness the power of AI to accelerate innovations, this series has something for everyone.&lt;/P&gt;&lt;P&gt;The following EGI sessions will run throughout the year with quarterly updates to the schedule.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Available Services at a Glance&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Topic&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Service Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Vector Engine, Knowledge Graph and Generative AI &lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/fast-track-your-ai-journey-with-sap-hana-cloud-s-vector-engine-through-our/ba-p/14113592" target="_blank"&gt;SAP HANA Cloud Multiple Model Programming using Vector Engine and Retrieval Augmented Generation&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Multi-day service to help customers activate and explore the Vector Engine and Knowledge Graph in SAP HANA Cloud, enabling large language model (LLM) integration and generative AI scenarios. Currently in pilot through the &lt;A href="https://support.sap.com/en/offerings-programs/enterprise-support/enterprise-support-advisory-council.html" target="_blank" rel="noopener noreferrer"&gt;SAP ESAC&lt;/A&gt; program.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Joule &lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://accounts.sap.com/saml2/idp/sso?sp=https://www.successfactors.eu/learninghub&amp;amp;RelayState=%2Fsf%2Flearning%3FdestUrl%3Dhttps%253a%252f%252fsaplearninghub%252eplateau%252ecom%252flearning%252fuser%252fdeeplink%255fredirect%252ejsp%253flinkId%253dCATALOG%255fSEARCH%2526sbArSel%253d%2526keywords%253dSUP_EDE_00010594%2526selKeyWordHeader%253dSUP_EDE_00010594%2526catSel%253d%2526srcSel%253dESAC%2526delMthSel%253d%2526ILDateFrm%253d%2526ILDateTo%253d%2526ILBlend%253d%2526ILSchd%253d%2526fromSF%253dY%26company%3Dlearninghub" target="_blank" rel="noopener noreferrer"&gt;Support to Activate Joule in SAP S/4HANA Cloud, Private Edition&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;2-day service to empower customers on how to fulfil the prerequisites to activate Joule to be used with SAP S/4HANA Cloud Private Edition (PCE).&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Development using Build Code and Joule&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://accounts.sap.com/saml2/idp/sso?sp=https://www.successfactors.eu/learninghub&amp;amp;RelayState=%2Fsf%2Flearning%3FdestUrl%3Dhttps%253a%252f%252fsaplearninghub%252eplateau%252ecom%252flearning%252fuser%252fdeeplink%255fredirect%252ejsp%253flinkId%253dCATALOG%255fSEARCH%2526sbArSel%253d%2526keywords%253dSUP_EDE_00010516%2526selKeyWordHeader%253dSUP_EDE_00010516%2526catSel%253d%2526srcSel%253dESAC%2526delMthSel%253d%2526ILDateFrm%253d%2526ILDateTo%253d%2526ILBlend%253d%2526ILSchd%253d%2526fromSF%253dY%26company%3Dlearninghub" target="_blank" rel="noopener noreferrer"&gt;SAP Cloud Application Programming Development using SAP Build Code and Joule&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Multi-day service to empower customers with the knowledge of CAP Development in SAP HANA Cloud. After the service, customers will know of CAP development and design in SAP HANA Cloud utilizing the SAP Business Application Studio and SAP Build Code with Joule.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;SAP Build Apps&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://accounts.sap.com/saml2/idp/sso?sp=https://www.successfactors.eu/learninghub&amp;amp;RelayState=%2Fsf%2Flearning%3FdestUrl%3Dhttps%253a%252f%252fsaplearninghub%252eplateau%252ecom%252flearning%252fuser%252fdeeplink%255fredirect%252ejsp%253flinkId%253dCATALOG%255fSEARCH%2526sbArSel%253d%2526keywords%253dSUP_EDE_00004457%2526selKeyWordHeader%253dSUP_EDE_00004457%2526catSel%253d%2526srcSel%253dESAC%2526delMthSel%253d%2526ILDateFrm%253d%2526ILDateTo%253d%2526ILBlend%253d%2526ILSchd%253d%2526fromSF%253dY%26company%3Dlearninghub" target="_blank" rel="noopener noreferrer"&gt;SAP Build Apps&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Multi-day service to help customers adopt SAP Build Apps for low-code/no-code development, including hands-on support and best practice guidance.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Process Automation&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://accounts.sap.com/saml2/idp/sso?sp=https://www.successfactors.eu/learninghub&amp;amp;RelayState=%2Fsf%2Flearning%3FdestUrl%3Dhttps%253a%252f%252fsaplearninghub%252eplateau%252ecom%252flearning%252fuser%252fdeeplink%255fredirect%252ejsp%253flinkId%253dCATALOG%255fSEARCH%2526sbArSel%253d%2526keywords%253dSUP_EDE_0080_0523%2526selKeyWordHeader%253dSUP_EDE_0080_0523%2526catSel%253d%2526srcSel%253dESAC%2526delMthSel%253d%2526ILDateFrm%253d%2526ILDateTo%253d%2526ILBlend%253d%2526ILSchd%253d%2526fromSF%253dY%26company%3Dlearninghub" target="_blank" rel="noopener noreferrer"&gt;SAP Build Process Automation&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Multi-day guidance designed to help customers get started with SAP Build Process Automation, including hands-on support and best practice guidance.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Administration, Monitoring topics for SAP HANA Cloud&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://accounts.sap.com/saml2/idp/sso?sp=https://www.successfactors.eu/learninghub&amp;amp;RelayState=%2Fsf%2Flearning%3FdestUrl%3Dhttps%253a%252f%252fsaplearninghub%252eplateau%252ecom%252flearning%252fuser%252fdeeplink%255fredirect%252ejsp%253flinkId%253dCATALOG%255fSEARCH%2526sbArSel%253d%2526keywords%253dSUP_EDE_0020_0123%2526selKeyWordHeader%253dSUP_EDE_0020_0123%2526catSel%253d%2526srcSel%253dESAC%2526delMthSel%253d%2526ILDateFrm%253d%2526ILDateTo%253d%2526ILBlend%253d%2526ILSchd%253d%2526fromSF%253dY%26company%3Dlearninghub" target="_blank" rel="noopener noreferrer"&gt;Configuration, Administration, Security and Monitoring topics for SAP HANA Cloud&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Help customers with SAP HANA Cloud capabilities, key features available and admin tools for database Monitoring.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Modeling in SAP HANA Cloud&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://accounts.sap.com/saml2/idp/sso?sp=https://www.successfactors.eu/learninghub&amp;amp;RelayState=%2Fsf%2Flearning%3FdestUrl%3Dhttps%253a%252f%252fsaplearninghub%252eplateau%252ecom%252flearning%252fuser%252fdeeplink%255fredirect%252ejsp%253flinkId%253dCATALOG%255fSEARCH%2526sbArSel%253d%2526keywords%253dSUP_EDE_0110_0823%2526selKeyWordHeader%253dSUP_EDE_0110_0823%2526catSel%253d%2526srcSel%253dESAC%2526delMthSel%253d%2526ILDateFrm%253d%2526ILDateTo%253d%2526ILBlend%253d%2526ILSchd%253d%2526fromSF%253dY%26company%3Dlearninghub" target="_blank" rel="noopener noreferrer"&gt;SAP HANA Cloud Modeling&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Empower customers with the knowledge of Modeling in SAP HANA Cloud.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;What to expect from these services&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;All services are delivered by SAP experts and follow a &lt;STRONG&gt;structured, guided approach&lt;/STRONG&gt; that includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Overview of the solution capabilities&lt;/LI&gt;&lt;LI&gt;Step-by-step technical guidance&lt;/LI&gt;&lt;LI&gt;Hands-on activities to accelerate learning and adoption&lt;/LI&gt;&lt;LI&gt;Best practices and tips for long-term success&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These expert-guided services are ideal for customers looking to &lt;STRONG&gt;accelerate their transformation journey&lt;/STRONG&gt;, whether you're exploring AI for the first time, expanding your use of SAP HANA Cloud, or adapting business processes with SAP Build.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;How it works&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Web session, 1-2 hours each morning where SAP expert explains the topic using training materials&lt;/LI&gt;&lt;LI&gt;Duration is from 2 to 5 days depending on the topic&lt;/LI&gt;&lt;LI&gt;Set daily schedule with pre-defined goals for each day&lt;/LI&gt;&lt;LI&gt;Available across different time zones and languages (topic dependent)&lt;/LI&gt;&lt;LI&gt;Afternoon 2-3 hours on the same day where you execute demonstrated steps within your own project, on your own SAP environment&lt;/LI&gt;&lt;LI&gt;During that time, you have direct access to the SAP expert delivering the workshop for guidance and support&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Registration closes one week before the session date – sign up early!&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;If you are interested in participating in these expert-guided services or learning more, simply follow the links above to register for the service.&lt;/P&gt;&lt;P&gt;For customers if you have issues accessing the above links, there may be an authorizations issue. Please note a one-time registration in SAP Learning Hub, edition for SAP Enterprise Support, is required for accessing the EGI service. A detailed step-by step guide to registration can be found&amp;nbsp;&lt;A href="https://support.sap.com/en/offerings-programs/enterprise-support/enterprise-support-academy/learn.html" target="_blank" rel="noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A list of the EGI services and all other SAP BTP assets, services and content for SAP Enterprise Support customers are available through the&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://support.sap.com/en/offerings-programs/enterprise-support/value-maps.html" target="_blank" rel="noopener noreferrer"&gt;SAP Enterprise Support Value Map program&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;As you continue to innovate with SAP, we are here to support you every step of the way. These services are designed to &lt;STRONG&gt;accelerate adoption, reduce complexity, and drive outcomes&lt;/STRONG&gt; so you can make the most of your SAP investments at no additional cost.&lt;/P&gt;&lt;P&gt;Don’t miss the opportunity to engage with SAP experts and take your next steps in AI, innovation, and automation. Let us help you fast-track your success!&lt;/P&gt;&lt;P&gt;Thanks and Regards,&lt;/P&gt;&lt;P&gt;Robert Kelly&lt;/P&gt;&lt;P&gt;BTP Lead Architect - SAP Enterprise Support&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/accelerate-your-ai-and-innovation-journey-with-expert-guided-services-from/ba-p/14152010"/>
    <published>2025-07-14T15:55:35.142000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/simple-end-to-end-application-development-using-sap-build-app/ba-p/14146234</id>
    <title>Simple End to End Application development using SAP Build App</title>
    <updated>2025-07-16T10:51:20.630000+02:00</updated>
    <author>
      <name>Prakhar_Verma_039</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2017105</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Simple End to End Application development using SAP Build App&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Developing extension apps is a very common requirement among clients. Using Fiori application as an extension to SAP BTP was always an option but we can use SAP’s no code/ low code to develop a basic UI application which will connected to SAP SuccessFactors instance.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We will be developing an application for email search (this is just a basic application).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the below example, I have used trail BTP account.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SuccessFactors Connectivity&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I have created a destination in my trail subaccount to connect to one of my sandbox SF tenants.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_34-1752493811374.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286245i687A23D311E6CD60/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_34-1752493811374.png" alt="Prakhar_Verma_039_34-1752493811374.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Build App Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Create a project of type – SAP Build Apps – web &amp;amp; mobile application&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_35-1752493811388.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286246i7449154F29AAA142/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_35-1752493811388.png" alt="Prakhar_Verma_039_35-1752493811388.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_36-1752493811393.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286244i9DCE00BCDB26F328/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_36-1752493811393.png" alt="Prakhar_Verma_039_36-1752493811393.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_37-1752493811399.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286249i918933774F3A9EA2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_37-1752493811399.png" alt="Prakhar_Verma_039_37-1752493811399.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_38-1752493811405.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286248iE403456D929D09AF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_38-1752493811405.png" alt="Prakhar_Verma_039_38-1752493811405.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_39-1752493811406.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286247i28C0C538455347C3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_39-1752493811406.png" alt="Prakhar_Verma_039_39-1752493811406.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;2.&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Once project is created successfully, navigate to auth and data tab to integrate with SAP SuccessFactors&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_40-1752493811410.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286251i985EF732D40628E7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_40-1752493811410.png" alt="Prakhar_Verma_039_40-1752493811410.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Select SF credentials which is created in BTP destination.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_41-1752493811413.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286250iE469D72617DDEB57/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_41-1752493811413.png" alt="Prakhar_Verma_039_41-1752493811413.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Search the entity (PerEmail in our case) and click on install integration and enable it.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_42-1752493811416.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286252i532C9A97A158FD04/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_42-1752493811416.png" alt="Prakhar_Verma_039_42-1752493811416.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;3.&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Navigate back to UI Canvas and start design your web page&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Drag heading, a text and two cards.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_43-1752493811418.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286253iE3E74EA241755436/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_43-1752493811418.png" alt="Prakhar_Verma_039_43-1752493811418.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Change the label accordingly.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_44-1752493811421.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286254iAC10A4896AFE4CFB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_44-1752493811421.png" alt="Prakhar_Verma_039_44-1752493811421.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Select the text field and navigate to content -&amp;gt; formula and write as per below screenshot.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_45-1752493811424.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286255i507FC8F2C2788B4D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_45-1752493811424.png" alt="Prakhar_Verma_039_45-1752493811424.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;4. Now click on home page on left side and create new pages &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_46-1752493811427.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286256i1B49094506786A11/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_46-1752493811427.png" alt="Prakhar_Verma_039_46-1752493811427.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;5. Navigate back to home page -&amp;gt; select email search card -&amp;gt; add logic to card 1&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In Properties, search the page on which we want to navigate. Similarly, do for view data card.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_47-1752493811432.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286257i64C0F14B8BB4D237/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_47-1752493811432.png" alt="Prakhar_Verma_039_47-1752493811432.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_48-1752493811437.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286258i964EF9F6A2F0F354/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_48-1752493811437.png" alt="Prakhar_Verma_039_48-1752493811437.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;6.&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Configure search Page&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Drag two input fields, a button and a text field for showing output&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_49-1752493811442.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286260iBEEA70546A654065/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_49-1752493811442.png" alt="Prakhar_Verma_039_49-1752493811442.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;7.&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Define variables.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Switch to variables view and in page variables, create PersonId, EmailType and output&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_50-1752493811448.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286261i9DBCCAC1F81E6A9E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_50-1752493811448.png" alt="Prakhar_Verma_039_50-1752493811448.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;8. Populate the variables to UI&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Select the personId input field and then click on value -&amp;gt;&amp;nbsp; data and variables -&amp;gt; page variables -&amp;gt; PersonId.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Similarly, do this for email type&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_51-1752493811450.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286259iE11A1C6869608BC0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_51-1752493811450.png" alt="Prakhar_Verma_039_51-1752493811450.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_52-1752493811452.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286263i532F6A0FAB07BF84/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_52-1752493811452.png" alt="Prakhar_Verma_039_52-1752493811452.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_53-1752493811454.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286264iDAF13A16081BB8DC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_53-1752493811454.png" alt="Prakhar_Verma_039_53-1752493811454.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_54-1752493811457.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286262i7B2BF756AA62CB37/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_54-1752493811457.png" alt="Prakhar_Verma_039_54-1752493811457.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_55-1752493811459.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286265i2AFBCC4623CEC943/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_55-1752493811459.png" alt="Prakhar_Verma_039_55-1752493811459.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;9. Add logic on button.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the logic canvas, search for get records and map with component tap. Select ‘get records’ and map the personId and email type variable&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_56-1752493811465.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286267i07CEDA5363D1D579/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_56-1752493811465.png" alt="Prakhar_Verma_039_56-1752493811465.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_57-1752493811466.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286266i872F4E84FD3C9D3C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_57-1752493811466.png" alt="Prakhar_Verma_039_57-1752493811466.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;To populate the output of search in another page variable, map it with set page variable and bind with output of another node&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_58-1752493811472.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286270i50E58D91B79B05DB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_58-1752493811472.png" alt="Prakhar_Verma_039_58-1752493811472.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_59-1752493811475.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286268iCB53053D12AB71EB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_59-1752493811475.png" alt="Prakhar_Verma_039_59-1752493811475.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_60-1752493811476.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286269i5FB7A26783529406/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_60-1752493811476.png" alt="Prakhar_Verma_039_60-1752493811476.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;10. Configure table&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Navigate to database screen and add table by searching in the market place&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Click&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_61-1752493811485.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286273iC9BCB85E26C0251D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_61-1752493811485.png" alt="Prakhar_Verma_039_61-1752493811485.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on edit configuration and select the fields required in the table&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_62-1752493811491.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286272i1A11CA2D5CEB0DC3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_62-1752493811491.png" alt="Prakhar_Verma_039_62-1752493811491.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_63-1752493811494.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286271i4FFDD3912D82665A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_63-1752493811494.png" alt="Prakhar_Verma_039_63-1752493811494.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Now app is ready to test.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;11. Launch and test the application&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on Launch -&amp;gt; open preview portal -&amp;gt; preview on web&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_64-1752493811497.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286274iA2E02EC7BB516F00/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_64-1752493811497.png" alt="Prakhar_Verma_039_64-1752493811497.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_65-1752493811499.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286276i40C58693CD8CEC90/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_65-1752493811499.png" alt="Prakhar_Verma_039_65-1752493811499.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_66-1752493811503.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286275i0FC8E55E10C5DA55/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_66-1752493811503.png" alt="Prakhar_Verma_039_66-1752493811503.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;By using the capabilities of SAP build app, final application which I have built looks like below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Prakhar_Verma_039_67-1752493811506.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286277iF628D7B3C1EF443C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Prakhar_Verma_039_67-1752493811506.png" alt="Prakhar_Verma_039_67-1752493811506.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Summary:&amp;nbsp;&lt;/STRONG&gt;This document outlines the steps to build a basic end-to-end application using SAP Build Apps with a no-code/low-code approach. It demonstrates connecting to a SAP SuccessFactors instance and designing a UI for email search functionality. The app includes variable binding, logic flows, and result display, making it ready for testing through the preview portal. This approach simplifies extension app development on SAP BTP.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/simple-end-to-end-application-development-using-sap-build-app/ba-p/14146234"/>
    <published>2025-07-16T10:51:20.630000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-build-apps-getting-data-with-get-record-collection-or-maybe-http/ba-p/14146062</id>
    <title>SAP Build Apps: Getting data with “Get Record Collection” or maybe “HTTP Destination Request”?</title>
    <updated>2025-07-22T13:52:17.797000+02:00</updated>
    <author>
      <name>Jakub_Roguski</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1438</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1734228316"&gt;“Get Record Collection”&lt;/H2&gt;&lt;P&gt;The most common (and comfortable) way to get data from backend is to use &lt;STRONG&gt;“Get Record Collection”&lt;/STRONG&gt; flow function. All we need to do is to install an integration with SAP system via its REST API using SAP BTP Destination.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Jakub_Roguski_0-1751890500294.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283486iC6DCF13A10C13E6D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Jakub_Roguski_0-1751890500294.png" alt="Jakub_Roguski_0-1751890500294.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If we enable the “&lt;STRONG&gt;Autogenerate configuration”&lt;/STRONG&gt; option during installation of the integration, we will get even definition of the data structure, ready to use as a template for data variables.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Jakub_Roguski_1-1751890500297.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283487iD1567B924A3A1BBB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jakub_Roguski_1-1751890500297.png" alt="Jakub_Roguski_1-1751890500297.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;We can even easily add call parameters, which are to be added to the relative path as a query – all we need is to add additional inputs in the entity definition:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Jakub_Roguski_2-1751890500301.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283488i79CC69855B7386A1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jakub_Roguski_2-1751890500301.png" alt="Jakub_Roguski_2-1751890500301.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;These additional inputs will be automatically added in the relative path and in the test section of the data entity. And we can use these additional inputs to send additional parameters with the API call:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Jakub_Roguski_3-1751890500303.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283489iD06304D5577D2D91/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jakub_Roguski_3-1751890500303.png" alt="Jakub_Roguski_3-1751890500303.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;And, as data variable uses in fact &lt;STRONG&gt;“Get Record Collection”&lt;/STRONG&gt; flow function in the background, we also can do the same with &lt;STRONG&gt;“Get Record Collection”&lt;/STRONG&gt; flow function:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Jakub_Roguski_4-1751890500305.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283490i4287F679C80B12AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jakub_Roguski_4-1751890500305.png" alt="Jakub_Roguski_4-1751890500305.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1537714811"&gt;When “Get Record Collection” is not enough&lt;/H2&gt;&lt;P&gt;Sometimes we need some additional information, not only the data itself – we need access to the header of the backend response – something the &lt;STRONG&gt;“Get Record Collection”&lt;/STRONG&gt; flow function can’t easily (if at all) provide. And this is the case with getting data from the &lt;STRONG&gt;SAP BTP Auditlog&lt;/STRONG&gt; service I wrote about in the previous blog (&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-global-account-audit-logs-using-sap-btp-auditlog-service-sap-build/ba-p/14129989" target="_blank"&gt;SAP BTP Global Account audit logs using SAP BTP Auditlog service, SAP Build Apps and SAP Ai Core&lt;/A&gt;). The issue with the &lt;STRONG&gt;Auditlog&lt;/STRONG&gt; service is hat it does not always send requested data in single run. If the response should contain more data, the &lt;STRONG&gt;Auditlog&lt;/STRONG&gt; service will use &lt;STRONG&gt;“paging”&lt;/STRONG&gt;. It will send first portion (page) only, and you will have to request next portion of the answer data, and next one, till all the data is received.&lt;/P&gt;&lt;P&gt;How do we know that our application should request next page of data? &lt;STRONG&gt;Auditlog&lt;/STRONG&gt; service, when paging is used, adds appropriate information &lt;STRONG&gt;in the response header&lt;/STRONG&gt;. If all the data is sent without paging, there is no additional information in the header. But if next page is ready for sending, the &lt;STRONG&gt;Auditlog&lt;/STRONG&gt; service will add &lt;STRONG&gt;“paging”&lt;/STRONG&gt; field in the response header. This &lt;STRONG&gt;“paging”&lt;/STRONG&gt; field has the following structure:&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;Paging: “handle=&amp;lt;page id&amp;gt;”&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;The value of the &lt;STRONG&gt;“Paging”&lt;/STRONG&gt; field looks like this:&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;handle=MjAyNS0wNi0wMVQwMDowMDowMDsyMDI1LTA3LTAxVDIzOjU5OjU5O01pOWhkV1JwZEd4dlp5UnNhWFpsWDI1aGJXVnpjR0ZqWlNSalppMXlaWFJ5YVdWMllXd3RkaklsTWpReEx6TmtaV0V3WWprMUxUWmtNemd0TkRjeFl5MWhNREZqTFRNek5XWTNZelZtTkRBelppOWpaaTFsZFRFd0x6SXdNalV0TURZdE1qWXZZWFZrYVhRdWMyVmpkWEpwZEhrdFpYWmxiblJ6THpFeEpEUXdMekl3TWpVdE1EWXRNall0TVRFdE5EQXROemt0TVRZMk9Ua3hPVGszTmpndWFuTnZiaTVuZWc9PQ==&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;As &lt;STRONG&gt;“Get Record Collection”&lt;/STRONG&gt; flow function doesn’t give us access to the response header in any simple way, the better option to get data from the &lt;STRONG&gt;SAP BTP Auditlog&lt;/STRONG&gt; service is to use the &lt;STRONG&gt;“HTTP Destination Request”&lt;/STRONG&gt; flow function, which gives access to both: data and headers the easy way.&lt;/P&gt;&lt;P&gt;How to use this header field? The logic should go as follows:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Empty the variable containing the data to be displayed&lt;/LI&gt;&lt;LI&gt;Request data with the &lt;STRONG&gt;“HTTP Destination Request”&lt;/STRONG&gt; flow function&lt;/LI&gt;&lt;LI&gt;Add the body of the response to the variable containing the data to be displayed&lt;/LI&gt;&lt;LI&gt;If the &lt;STRONG&gt;“paging”&lt;/STRONG&gt; field exists in the response header: send next request for data to the Auditlog, but this time add value of the &lt;STRONG&gt;“paging”&lt;/STRONG&gt; field to the request path as the last parameter and jump back to step &lt;STRONG&gt;3&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;If the &lt;STRONG&gt;“paging”&lt;/STRONG&gt; field doesn’t exist in the response header: display the content of the variable containing data&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The logic should look like this:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Jakub_Roguski_5-1751890500308.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283491iF4D0B0E502D50A8A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jakub_Roguski_5-1751890500308.png" alt="Jakub_Roguski_5-1751890500308.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;How to get access to the response header? Using a formula. We can use the &lt;FONT color="#0000FF"&gt;&lt;EM&gt;“outputs["HTTP Request"].resHeaders”&lt;/EM&gt;&lt;/FONT&gt; in the formula. As the header is a json, it is enough to know the names of fields in the header and then we can check if field exists in the header:&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;IS_UNDEFINED(outputs["HTTP Request"].resHeaders.paging&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;This function returns &lt;STRONG&gt;“true”&lt;/STRONG&gt; if the field id undefined, otherwise it returns &lt;STRONG&gt;“false”.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;And then, if we know that the field exists, we can get its value simply by its name like this:&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;outputs["HTTP Request"].resHeaders.paging&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;in the “&lt;STRONG&gt;Set App Variable”&lt;/STRONG&gt; or &lt;STRONG&gt;“Set Page Variable”&lt;/STRONG&gt; flow function.&lt;/P&gt;&lt;P&gt;I use both functions in single formula in the &lt;STRONG&gt;“Set Page Variable”&lt;/STRONG&gt; flow function:&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;IF(IS_UNDEFINED(outputs["HTTP Request"].resHeaders.paging), "no_paging", outputs["HTTP Request"].resHeaders.paging)&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;If the &lt;STRONG&gt;“paging”&lt;/STRONG&gt; field is not defined in the header, the formula sets &lt;STRONG&gt;“no_paging”&lt;/STRONG&gt; as the variable value. But if the &lt;STRONG&gt;“paging”&lt;/STRONG&gt; field is defined, the formula sets its value as the variable value.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-build-apps-getting-data-with-get-record-collection-or-maybe-http/ba-p/14146062"/>
    <published>2025-07-22T13:52:17.797000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-apps%E3%81%AE-repeat-with-%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%A8%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88/ba-p/14160877</id>
    <title>SAP Build Appsの「Repeat with」の使い方とポイント</title>
    <updated>2025-07-24T09:36:27.049000+02:00</updated>
    <author>
      <name>NaotoSakai</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/142482</uri>
    </author>
    <content>&lt;DIV&gt;&lt;SPAN&gt;&lt;A href="https://news.sap.com/japan/2025/07/0716_sap-btp-hackathon-2025/" target="_self" rel="noopener noreferrer"&gt;SAP BTP Hackathon 2025&lt;/A&gt;が無事終了しました。ご参加いただいた皆様、ありがとうございました。毎年多くの方にご参加いただき、今年も大変盛り上がりました。&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;毎年参加チーム数や提出作品のレベルが上がっており、運営側としては嬉しい悲鳴でした。&lt;/SPAN&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&lt;SPAN&gt;その中で、今年はSAP Build Appsの「Repeat with」の使い方についてのご質問が多かったように思えましたので、使い方とポイントを解説したいと思います。&lt;/SPAN&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1864987055"&gt;&lt;SPAN&gt;「Repeat with」機能とは？&lt;/SPAN&gt;&lt;/H3&gt;&lt;DIV&gt;&lt;SPAN&gt;「Repeat with」機能はUIデザイン上で同じコンポーネントを繰り返し使用するための機能です。例えば、リストやテーブルなど、同じ形式のデータを複数表示する場合に非常に便利です。&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;「同じコンポーネント」というのは、例えばテキストやImageなどのUI要素のことを指します。&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;BR /&gt;これらのUI要素のRepreat withプロパティに「内部がオブジェクトになっているリスト型変数」をバインドすることにより、そのオブジェクトに残像のようなエフェクトが付きます。&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="NaotoSakai_0-1753335583305.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290628i1512A7437B3ABD15/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NaotoSakai_0-1753335583305.png" alt="NaotoSakai_0-1753335583305.png" /&gt;&lt;/span&gt;&lt;P&gt;&lt;SPAN&gt;「内部がオブジェクトになっているリスト型変数」とはSAP Build AppsのVariable上で以下のような定義の変数を指します。&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="NaotoSakai_1-1753335725230.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290629i90670FF6B479D0F1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NaotoSakai_1-1753335725230.png" alt="NaotoSakai_1-1753335725230.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P&gt;&lt;SPAN&gt;変数定義としてはList型であり、その中のItemのタイプとしてObject型、そのオブジェクト型の中にTextや数値型などのプロパティを含んでいる構造です。これはJSONで記述すると以下のようなものになります。&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;[
  {
    "id": 1,
    "name": "Alice",
    "contact": {
      "email": "alice@example.com",
      "phone": "123-456-7890"
    }
  },
  {
    "id": 2,
    "name": "Bob",
    "contact": {
      "email": "bob@example.com",
      "phone": "098-765-4321"
    }
  }
]&lt;/code&gt;&lt;/pre&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;BR /&gt;実行時にRepeat withで繰り返し表示がされる回数は与えたリスト型の変数の要素数（長さ、Length）に依存します。例えば、5つの要素を持つリスト型の変数を指定すると、5回繰り返し表示されます。&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H3 id="toc-hId-1668473550"&gt;&lt;SPAN&gt;使い方&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;上に挙げたJSONのデータを利用してみます。このJSONのデータ形式をSAP Build Apps上で表現すると下記のような変数になります。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="NaotoSakai_0-1753337697025.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290640i974FF0E91E850B81/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NaotoSakai_0-1753337697025.png" alt="NaotoSakai_0-1753337697025.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;JSONの値をこの変数に代入して、Repeat withで使用してみます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="NaotoSakai_0-1753337993691.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290643i680BE372E459151E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NaotoSakai_0-1753337993691.png" alt="NaotoSakai_0-1753337993691.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Repeat withにSampleListをバインドします。このHeadLineアイテムのContent（表示内容）にnameのデータを表示したいと思います。HeadLineアイテムのContentのアイコンをクリックし&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="NaotoSakai_1-1753338096393.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290645iB8E2F476995DD9A1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NaotoSakai_1-1753338096393.png" alt="NaotoSakai_1-1753338096393.png" /&gt;&lt;/span&gt;&lt;BR /&gt;Data Items in repeatをクリックし、&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="NaotoSakai_2-1753338210856.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290647i8C3DD3F6373126A8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NaotoSakai_2-1753338210856.png" alt="NaotoSakai_2-1753338210856.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Currentをクリックするとウインドウ下部に展開されます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="NaotoSakai_3-1753338454875.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290648iF9399F8F98BA1BBF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NaotoSakai_3-1753338454875.png" alt="NaotoSakai_3-1753338454875.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;"current"は現在の行を意味し、その中のどれをContentにバインドするか？ということです。nameを選択します。&lt;BR /&gt;プレビュー実行してみます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="NaotoSakai_4-1753338595999.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290649i7DA374159E278C9D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NaotoSakai_4-1753338595999.png" alt="NaotoSakai_4-1753338595999.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;このように一つのHeadLineアイテムが勝手にリピートされ、バインドしたリスト型の変数の要素（行）を繰り返し、その現在行に応じたデータを表示してくれます。これがRepeat withの機能です。&lt;/P&gt;&lt;H3 id="toc-hId-1471960045"&gt;更に実践&lt;/H3&gt;&lt;DIV&gt;&lt;SPAN&gt;このRepeat withできる要素にはRowやContainer等複数のUI要素をまとめる機能を持ったコンポーネントも含まれます。&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;SPAN&gt;Rowコンポーネント中にはCellが含まれていて横に並ぶようになっています。このRowコンポーネントを縦に並べると表のようなものが出来上がりますね。Rowコンポーネントを4セル設定にして、各セルにTextコンポーネントを配置し、Rowコンポーネント自体にRepeat withで変数を設定して各セルにid,name,email,phoneのプロパティをバインドさせた例がこちらです。&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="NaotoSakai_5-1753339339248.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290652iA28BE46293ECB38F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NaotoSakai_5-1753339339248.png" alt="NaotoSakai_5-1753339339248.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;Rowコンポーネントのスタイルを変更して枠線を追加すれば表になるなということがわかるかと思います。&lt;/P&gt;&lt;P&gt;ちなみに、ROWコンポーネントのCellに対してRepeat withで変数をバインドすると、&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="NaotoSakai_6-1753340836452.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290666iFF03207826DC093F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NaotoSakai_6-1753340836452.png" alt="NaotoSakai_6-1753340836452.png" /&gt;&lt;/span&gt;&lt;BR /&gt;Listの要素数分横に並べるということも出来ます。&lt;/P&gt;&lt;P&gt;Listの要素数（行数）が多いので表示される行数を絞りたいという場合は変数操作が必要です。Repeat withでバインドする際にFormulaを使用して式の形でバインドすると良いでしょう。例えば&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="NaotoSakai_7-1753341026094.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290668iF4CC4540B799C9FB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NaotoSakai_7-1753341026094.png" alt="NaotoSakai_7-1753341026094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;SELECT関数を使用するとリスト型変数から要素の範囲を絞ったものを抜き出すことが出来ます。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;例1：　　SELECT(appVars.SampleList, index &amp;lt;10)&lt;BR /&gt;→ リストの先頭10件　（リストは0から開始します。）&lt;BR /&gt;例2：　　SELECT(appVars.SampleList, index &amp;gt;= 10 &amp;amp;&amp;amp; index &amp;lt; 20)&lt;BR /&gt;→リストの11件目から20件目まで&lt;/P&gt;&lt;P&gt;応用すればページ表示のようなことも出来ますね。&lt;/P&gt;&lt;P&gt;画面の表示される範囲を制御したいという場合はRepeat withするコンポーネントをScroll Viewコンポーネントの中に配置すると良いでしょう。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="NaotoSakai_8-1753342449949.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290681i2C56A3BB0478BB2D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NaotoSakai_8-1753342449949.png" alt="NaotoSakai_8-1753342449949.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;そうするとScroll View側のスタイルの設定で、Scroll View内で表示されることになります。&lt;/P&gt;&lt;P&gt;Repeat withは必要な回数分UIコンポーネントを繰り返し表示できる便利な機能です。是非使いこなしてください。&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-build-apps%E3%81%AE-repeat-with-%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%A8%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88/ba-p/14160877"/>
    <published>2025-07-24T09:36:27.049000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/empowering-sap-build-apps-with-btp-translation-hub-multilingual-support-for/ba-p/14163159</id>
    <title>Empowering SAP Build Apps with BTP Translation Hub: Multilingual Support for Service Cloud V2</title>
    <updated>2025-07-27T17:01:39.617000+02:00</updated>
    <author>
      <name>pvsbprasad</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/7820</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;In today’s global business landscape, offering multilingual support is crucial for reaching a broader audience. SAP Business Technology Platform (BTP) Translation Hub, in combination with SAP Build Apps, provides a powerful, no-code solution for automating translations in web and mobile applications. This blog demonstrates how you can create a translation feature—that can be embedded in SAP Service Cloud V2 environments or used as a standalone application.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In this blog, we'll demonstrate how to:&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Translate case data dynamically using SAP Translation Hub APIs.&lt;/LI&gt;&lt;LI&gt;Integrate this logic in a &lt;STRONG&gt;low-code/no-code&lt;/STRONG&gt; app built with SAP Build Apps.&lt;/LI&gt;&lt;LI&gt;Embed the translation component directly into &lt;STRONG&gt;SAP Sales &amp;amp; Service Cloud V2&lt;/STRONG&gt;, or run it as a &lt;STRONG&gt;standalone app&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="key-features-illustrated" id="toc-hId-1735986922"&gt;&lt;SPAN&gt;Prerequisite&lt;/SPAN&gt;&lt;/H2&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;SAP Sales &amp;amp; Service Cloud V2&lt;/LI&gt;&lt;LI&gt;SAP BTP Global Account with appropriate entitlements&lt;/LI&gt;&lt;LI&gt;SAP Build Apps subscription&lt;/LI&gt;&lt;LI&gt;Translation Hub service activation&lt;/LI&gt;&lt;LI&gt;Basic understanding of SAP integration patterns&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1539473417"&gt;The Business Scenario&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Consider a typical service management case in an SAP environment where:&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;STRONG&gt;Service teams&lt;/STRONG&gt; need to handle customer issues across different geographical regions&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Customers&lt;/STRONG&gt; submit cases in their native languages&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Technical documentation&lt;/STRONG&gt; and knowledge bases exist in multiple languages&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Cross-functional teams&lt;/STRONG&gt; require real-time translation capabilities for efficient collaboration&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;we can see how language barriers can impact service delivery when dealing with technical descriptions, customer communications, and knowledge base content.&lt;/P&gt;&lt;H2 id="key-features-illustrated" id="toc-hId-1342959912"&gt;Key Features Illustrated&lt;/H2&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;STRONG&gt;Source Language Selection&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(e.g., English)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Target Language Selection&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(e.g., German)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Automatic, Manual, or Batch Translation&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;User-Friendly Interface&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for text input and output&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Easy embedding into other SAP solutions&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1404611845"&gt;&lt;STRONG&gt;Application Development&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Create new SAP Build Apps project&lt;/LI&gt;&lt;LI&gt;Design translation interface components&lt;/LI&gt;&lt;LI&gt;Implement Translation Hub API integration&lt;/LI&gt;&lt;LI&gt;Configure data bindings and workflows&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-949932902"&gt;Solution Architecture&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Our multilingual solution combines three powerful SAP technologies:&lt;/P&gt;&lt;H3 id="toc-hId-882502116"&gt;1. SAP BTP Translation Hub&lt;/H3&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;STRONG&gt;Real-time translation&lt;/STRONG&gt; capabilities for 10+ languages&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Context-aware translations&lt;/STRONG&gt; for technical terminology&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Integration APIs&lt;/STRONG&gt; for seamless embedding&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-685988611"&gt;2. SAP Build Apps&lt;/H3&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;STRONG&gt;Low-code development&lt;/STRONG&gt; platform for rapid application creation&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Responsive design&lt;/STRONG&gt; capabilities for multi-device support&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Seamless integration&lt;/STRONG&gt; with SAP systems and external APIs&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Visual development&lt;/STRONG&gt; environment for citizen developers&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-489475106"&gt;3. SAP Service Cloud Integration&lt;/H3&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;STRONG&gt;Native connectivity&lt;/STRONG&gt; to existing SAP service management systems&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Real-time data synchronization&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-292961601"&gt;Step-by-Step Implementation Guide&lt;/H3&gt;&lt;H4 id="toc-hId-225530815"&gt;&lt;STRONG&gt;Environment Setup&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;Provision SAP BTP subaccount&lt;/LI&gt;&lt;LI&gt;Enable required services (Build Apps, Translation Hub)&lt;/LI&gt;&lt;LI&gt;Configure authentication and authorization&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;H3 id="toc-hId--175296778"&gt;SAP BTP Translation Hub&amp;nbsp;&lt;/H3&gt;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_2-1753541194545.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291849i2AA61F07DFB514E4/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_2-1753541194545.png" alt="pvsbprasad_2-1753541194545.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;you can click on&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;View Subscription&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;to see your application access under&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Instances and Subscriptions&lt;/STRONG&gt;&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_3-1753541244950.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291850iA087303D65145B44/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_3-1753541244950.png" alt="pvsbprasad_3-1753541244950.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Instances and Subscriptions&lt;/STRONG&gt;&lt;SPAN&gt;, click the dots to open the menu and select&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Create Service Binding&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_4-1753541399165.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291851i7AA5CCB0042FECF8/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_4-1753541399165.png" alt="pvsbprasad_4-1753541399165.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the dialog, enter a binding name, such as&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;demo-binding&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;as the name of your service binding. Click&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to create the service binding.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_5-1753541505306.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291852i13DB01062A0C3B6F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_5-1753541505306.png" alt="pvsbprasad_5-1753541505306.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;P&gt;The following file formats are supported:&lt;/P&gt;Type Format &lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;HTML&lt;/TD&gt;&lt;TD&gt;*.html (UTF-8 encoding)&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Microsoft Office&lt;/TD&gt;&lt;TD&gt;*.docx, *.xlsx, *.pptx&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Text&lt;/TD&gt;&lt;TD&gt;*.txt (UTF-8 encoding)&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;XLIFF&lt;/TD&gt;&lt;TD&gt;xliff1.2&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;PDF&lt;/TD&gt;&lt;TD&gt;*.pdf&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;SubRip Subtitle&lt;/TD&gt;&lt;TD&gt;*.srt&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;WebVTT (Web Video Text Track)&lt;/TD&gt;&lt;TD&gt;*.vtt&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;SAP Document Translation API supports real-time file translation via:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;FormData&lt;/STRONG&gt; (HTML-style form submission)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;RAW&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;JSON&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Endpoint:&lt;/STRONG&gt;&lt;BR /&gt;POST /api/v1/translation&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;H4 id="toc-hId--665213290"&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;Key Parameters&lt;/H4&gt;&lt;P&gt;Parameter Type Description&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;file&lt;/TD&gt;&lt;TD&gt;formData&lt;/TD&gt;&lt;TD&gt;File to translate (optional).&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;sourceLanguage&lt;/TD&gt;&lt;TD&gt;query&lt;/TD&gt;&lt;TD&gt;Language code of the original text (optional – auto-detect if omitted).&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;targetLanguage&lt;/TD&gt;&lt;TD&gt;query&lt;/TD&gt;&lt;TD&gt;Language code of the translated text (&lt;STRONG&gt;required&lt;/STRONG&gt;).&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;strictMode&lt;/TD&gt;&lt;TD&gt;boolean&lt;/TD&gt;&lt;TD&gt;(Optional) Enforce structural tag consistency. Default: false.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;model&lt;/TD&gt;&lt;TD&gt;string&lt;/TD&gt;&lt;TD&gt;Choose "default" (SAP MT) or "llm" (LLM-based translation). Default: default.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H4 id="toc-hId--861726795"&gt;MIME Types Supported:&lt;/H4&gt;&lt;P&gt;Common formats like .txt, .pdf, .docx, .html, .srt, .vtt, and more.&lt;/P&gt;&lt;H4 id="toc-hId--1058240300"&gt;Sample curl request:&lt;/H4&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;curl -X POST &lt;SPAN class=""&gt;"&lt;SPAN class=""&gt;$BASE_URL&lt;/SPAN&gt;&lt;/SPAN&gt;/api/v1/translation/?sourceLanguage=en-US&amp;amp;targetLanguage=de-DE" \ -H &lt;SPAN class=""&gt;"Authorization: Bearer &lt;SPAN class=""&gt;$XSUAA_TOKEN&lt;/SPAN&gt;&lt;/SPAN&gt;" \ -F &lt;SPAN class=""&gt;'file=@/Users/Documents/demo.txt'&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;Similarly we need to configure for SAP Build Apps&lt;/P&gt;&lt;H3 id="toc-hId--961350798"&gt;SAP Build Apps&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_1-1753541883483.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291853iC80CA031E6494F41/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_1-1753541883483.png" alt="pvsbprasad_1-1753541883483.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This opens the SAP Build lobby.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_3-1753541933628.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291854iAFCF3CB4E0704553/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_3-1753541933628.png" alt="pvsbprasad_3-1753541933628.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Within the SAP Build lobby, click&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Create&lt;/STRONG&gt;.&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_8-1753542129032.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291855i65BBE9485859F36C/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_8-1753542129032.png" alt="pvsbprasad_8-1753542129032.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;Click&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Application&lt;/STRONG&gt;&lt;SPAN&gt;, and click&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Next&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_10-1753542189176.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291857iAC608284C8C1C4C6/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_10-1753542189176.png" alt="pvsbprasad_10-1753542189176.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;SPAN&gt;Click&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Frontend&lt;/STRONG&gt;&lt;SPAN&gt;, and click&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Next&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_11-1753542214148.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291858iFE851698954D9296/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_11-1753542214148.png" alt="pvsbprasad_11-1753542214148.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;Click&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Web &amp;amp; Mobile Application&lt;/STRONG&gt;&lt;SPAN&gt;, and click&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Next&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_16-1753542297684.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291860i4251D6BF844444DB/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_16-1753542297684.png" alt="pvsbprasad_16-1753542297684.png" /&gt;&lt;/span&gt;&lt;P&gt;&lt;SPAN&gt;Name the new app by entering:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;Field Value &lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;Name&lt;/TD&gt;&lt;TD&gt;&lt;STRONG&gt;Translation Hub Application&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Description&lt;/TD&gt;&lt;TD&gt;&lt;STRONG&gt;Translation Hub&amp;nbsp;&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Click&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Review&lt;/STRONG&gt;.&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_18-1753542352195.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291862iCEEA781341603471/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_18-1753542352195.png" alt="pvsbprasad_18-1753542352195.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;On the&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;page, click&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_19-1753542379898.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291863iF129FCA16406B669/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_19-1753542379898.png" alt="pvsbprasad_19-1753542379898.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;SPAN&gt;Your SAP Build Apps project is created, and the default&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Home page&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;is displayed. Once created, projects can be accessed again at any time from the SAP Build lobby.&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;P&gt;&lt;SPAN&gt;Drag the Essentials like drop down ,container, button and input put and and adjust as per you requirement&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_22-1753542979856.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291866i9866DAEB47ABA440/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_22-1753542979856.png" alt="pvsbprasad_22-1753542979856.png" /&gt;&lt;/span&gt;&lt;P&gt;Invoke the Translation Hub API through a button click to fetch the case description using the Service Cloud V2 Case ID, and update the source language text accordingly&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_23-1753543139428.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291867i6138A97EE893979B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_23-1753543139428.png" alt="pvsbprasad_23-1753543139428.png" /&gt;&lt;/span&gt;&lt;P&gt;The preview looks as mentioned below for my requirement&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_21-1753542820631.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291865iBBDF5D1FBB4AC66A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_21-1753542820631.png" alt="pvsbprasad_21-1753542820631.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;In SAP Build Apps, the case description is auto-populated by consuming the &lt;STRONG&gt;Service Cloud V2&lt;/STRONG&gt; API. This text can either be auto-translated or translated on demand with the click of a button using the integrated translation service.&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_1-1753545939559.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291872i6825A5268309E686/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_1-1753545939559.png" alt="pvsbprasad_1-1753545939559.png" /&gt;&lt;/span&gt;&lt;P&gt;&lt;A title="Translation Hub" href="https://drive.google.com/file/d/1VlugP6xyiJhpsYKfzVuY5XVp6PP7AlIq/view?usp=sharing" target="_blank" rel="noopener nofollow noreferrer"&gt;Translation Hub&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FZUi9do6XeFY%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DZUi9do6XeFY&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FZUi9do6XeFY%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="600" height="337" scrolling="no" title="Language Translation using Build Apps and BTP Translation Hub" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;H2 id="toc-hId--864461296"&gt;Conclusion&lt;/H2&gt;&lt;P class=""&gt;The combination of SAP BTP Translation Hub and SAP Build Apps provides a powerful foundation for building multilingual enterprise applications. Whether deployed as an embedded component within existing SAP solutions or as a standalone application, this approach delivers:&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Rapid Development&lt;/STRONG&gt;: Low-code platform accelerates time-to-market&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Enterprise Grade&lt;/STRONG&gt;: Built on SAP's trusted cloud infrastructure&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Scalable Architecture&lt;/STRONG&gt;: Supports growth from pilot to global deployment&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Cost Effective&lt;/STRONG&gt;: Reduces development and operational costs&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Future Ready&lt;/STRONG&gt;: Positioned for emerging AI and ML capabilities&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;By breaking down language barriers in service management processes, organizations can deliver superior customer experiences, improve operational efficiency, and unlock new opportunities in global markets.&lt;/P&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/empowering-sap-build-apps-with-btp-translation-hub-multilingual-support-for/ba-p/14163159"/>
    <published>2025-07-27T17:01:39.617000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/unlocking-multilingual-document-translation-with-sap-build-apps-sap-btp/ba-p/14170245</id>
    <title>Unlocking Multilingual Document Translation with SAP Build Apps + SAP BTP Translation Hub</title>
    <updated>2025-08-03T07:41:32.234000+02:00</updated>
    <author>
      <name>pvsbprasad</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/7820</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In our &lt;A class="" href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/empowering-sap-build-apps-with-btp-translation-hub-multilingual-support-for/ba-p/14163159" target="_new"&gt;previous blog post&lt;/A&gt;, we explored how to enable &lt;EM&gt;text translation&lt;/EM&gt; within SAP Build Apps using SAP Translation Hub, making apps more inclusive and globally accessible.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Now, let’s take this a step further. What if you need to translate entire &lt;STRONG&gt;documents&lt;/STRONG&gt;—like Word files, PDFs, or HTML content? In this post, we’ll demonstrate how to integrate &lt;STRONG&gt;SAP Build Apps&lt;/STRONG&gt; with &lt;STRONG&gt;SAP Translation Hub&lt;/STRONG&gt; to create a &lt;STRONG&gt;document translation flow&lt;/STRONG&gt;—quickly, efficiently, and without writing extensive code.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":open_book:"&gt;📖&lt;/span&gt;Story: One Quote, Two Languages — One Lost Deal?&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Meet Alex, a sales manager at a global electronics company based in Germany. He’s chasing a big opportunity with a Japanese client. The quote is ready, the price is right — but it’s in English. The client requests it in Japanese.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Alex scrambles. He asks a colleague for help. He copy-pastes parts of the quote into a translation tool. He worries about accuracy, especially with technical terms. Meanwhile, the competitor — who sent a native-language quote — wins the deal&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;Could this have been avoided? Absolutely.&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Enter &lt;STRONG&gt;SAP Build Apps + SAP Translation Hub&lt;/STRONG&gt; — a powerful no-code solution to &lt;STRONG&gt;translate sales quotes and documents instantly&lt;/STRONG&gt;, either as a standalone tool or tightly integrated with &lt;STRONG&gt;SAP CX Sales Cloud&lt;/STRONG&gt;.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;🧰 &lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;To implement this solution, you’ll need:&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;STRONG&gt;SAP BTP&lt;/STRONG&gt; subaccount with access to:&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;SAP Build Apps&lt;/LI&gt;&lt;LI&gt;SAP Translation Hub (entitlement required)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;STRONG&gt;SAP CX Sales Cloud&lt;/STRONG&gt; (optional, for embedded use case)&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Document format: PDF, DOCX, or HTML&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;BTP Destination or integration layer (CAP / SAP Integration Suite)&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-unicode-emoji" title=":direct_hit:"&gt;🎯&lt;/span&gt;&lt;STRONG&gt;Use Case: Quote Translation in SAP Sales Cloud&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Sales teams often generate quotes in their default language. However, sending proposals in a customer’s &lt;STRONG&gt;native language&lt;/STRONG&gt; improves clarity, trust, and conversion rates.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt;&lt;BR /&gt;A salesperson in Spain generates a quote in English and wants to send it to a client in Brazil. Using this solution, the salesperson uploads the quote, selects “Portuguese (Brazil)” as the target language, and receives a translated document — within seconds.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The translated document is then sent directly to the customer or attached to the Sales Cloud opportunity.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;&lt;STRONG&gt;️ How It Works&lt;/STRONG&gt;&lt;/P&gt;&lt;OL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;STRONG&gt;Generate Quote (SAP CX Sales Cloud):&amp;nbsp;&lt;/STRONG&gt;Standard PDF/Word output from a quote process.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Upload to SAP Build Apps:&amp;nbsp;&lt;/STRONG&gt;User uploads the file and selects target language.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Translation via SAP Translation Hub:&amp;nbsp;&lt;/STRONG&gt;The file is translated via secure API calls.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Return Translated File:&amp;nbsp;&lt;/STRONG&gt;File is returned as downloadable content or pushed back to SAP Sales Cloud in attachment Tab.&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-unicode-emoji" title=":counterclockwise_arrows_button:"&gt;🔄&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;Deployment Options: Standalone or Integrated&lt;/STRONG&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1994987434"&gt;Option 1: &lt;STRONG&gt;Standalone App (No SAP CX Required)&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;A universal tool for business users across sales, legal, procurement, etc.&lt;/LI&gt;&lt;LI&gt;Upload any business document and get instant translations.&lt;/LI&gt;&lt;LI&gt;Deploy via SAP Build Apps and BTP — no coding needed.&lt;/LI&gt;&lt;LI&gt;Useful even for companies not yet using SAP Sales Cloud.&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1798473929"&gt;Option 2: &lt;STRONG&gt;Embedded in SAP CX Sales Cloud&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Add translation buttons directly in the &lt;STRONG&gt;Quote Object Page&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Automatically trigger translation after quote generation.&lt;/LI&gt;&lt;LI&gt;Store translated versions in the same quote&amp;nbsp; record.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-unicode-emoji" title=":chart_increasing:"&gt;📈&lt;/span&gt;&amp;nbsp;&lt;STRONG&gt;Business Benefits&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Benefit Standalone App SAP Sales Cloud Integration&lt;/P&gt;&lt;TABLE width="912px"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="295.641px"&gt;&lt;STRONG&gt;Benefit&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="262.562px"&gt;&lt;STRONG&gt;Standalone App&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="352.797px"&gt;&lt;STRONG&gt;SAP Sales Cloud Integration&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="295.641px"&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;Global content readiness&lt;/TD&gt;&lt;TD width="262.562px"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Translate any document&lt;/TD&gt;&lt;TD width="352.797px"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Translate sales-specific content&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="295.641px"&gt;&lt;span class="lia-unicode-emoji" title=":three_o_clock:"&gt;🕒&lt;/span&gt;Fast time-to-quote&lt;/TD&gt;&lt;TD width="262.562px"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Instant translation&lt;/TD&gt;&lt;TD width="352.797px"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Automated translation post-quote&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="295.641px"&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;️ Low-code implementation&lt;/TD&gt;&lt;TD width="262.562px"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Fully no-code UI&lt;/TD&gt;&lt;TD width="352.797px"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Extendable via BTP/Events&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="295.641px"&gt;&lt;span class="lia-unicode-emoji" title=":locked_with_key:"&gt;🔐&lt;/span&gt;Secure enterprise workflow&lt;/TD&gt;&lt;TD width="262.562px"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Controlled via BTP auth&lt;/TD&gt;&lt;TD width="352.797px"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Audit-ready and version controlled&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="295.641px"&gt;&lt;span class="lia-unicode-emoji" title=":package:"&gt;📦&lt;/span&gt;Reusable across teams&lt;/TD&gt;&lt;TD width="262.562px"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Any department can use&lt;/TD&gt;&lt;TD width="352.797px"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Tight sales workflow integration&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H4 id="toc-hId-1601960424"&gt;SAP Translation Hub -&amp;nbsp;&lt;SPAN class=""&gt;Document Translation&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- Overview&lt;/H4&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_1-1754200500130.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295701i2FA99B0F10C0D727/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_1-1754200500130.png" alt="pvsbprasad_1-1754200500130.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Benefit Standalone App SAP Sales Cloud Integration&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;Step By Step&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Please create the destination with the necessary values.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_1-1754195139175.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295687iDF5808DAA9559535/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_1-1754195139175.png" alt="pvsbprasad_1-1754195139175.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Drag and drop the required components onto the user interface.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_0-1754194817400.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295685i8EC854629FA1A3E6/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_0-1754194817400.png" alt="pvsbprasad_0-1754194817400.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Fetch and bind available languages directly from the Translation Hub API&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_2-1754195381087.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295689iAE30CCF88378E1A2/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_2-1754195381087.png" alt="pvsbprasad_2-1754195381087.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Upload the PDF file in English format from the local file system&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_3-1754196204170.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295692iA5909CCA3D15B02C/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_3-1754196204170.png" alt="pvsbprasad_3-1754196204170.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;After selecting the target language, click the "Translate" button to proceed.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_4-1754196446006.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295694iF77F7E161B607B11/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_4-1754196446006.png" alt="pvsbprasad_4-1754196446006.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1276364200"&gt;&lt;STRONG&gt;Video&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F_lcN3Lngs3w%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D_lcN3Lngs3w&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F_lcN3Lngs3w%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="112" scrolling="no" title="Document Translation" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Until now, we explored the process as a standalone document. Now, let’s look at how this can be &lt;STRONG&gt;embedded within the CX Sales Cloud V2 Quote&lt;/STRONG&gt;&amp;nbsp;:&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt;&lt;STRONG&gt;Seamless Integration with CX Sales Cloud V2 Quote&lt;/STRONG&gt;&lt;BR /&gt;Embed the translation workflow directly into the quoting process.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":page_facing_up:"&gt;📄&lt;/span&gt;&lt;STRONG&gt;Sales Representative Uploads the Quote PDF&lt;/STRONG&gt;&lt;BR /&gt;The sales rep can upload a quote document in their native language.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;&lt;STRONG&gt;Automatic Translation to Desired Language&lt;/STRONG&gt;&lt;BR /&gt;The uploaded PDF is translated into the target language using SAP Translation Hub.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":paperclip:"&gt;📎&lt;/span&gt;&lt;STRONG&gt;Translated Document Attached Automatically&lt;/STRONG&gt;&lt;BR /&gt;The translated PDF is added to the &lt;EM&gt;Attachments&lt;/EM&gt; tab of the quote.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":envelope:"&gt;✉️&lt;/span&gt;&lt;STRONG&gt;Send via DocuSign for Digital Signature&lt;/STRONG&gt;&lt;BR /&gt;The finalized, translated quote is sent to the customer through DocuSign for e-signature.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Embed the above standardized document into the Sales Cloud V2 Quote document.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_1-1754197830676.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295696i9E83524A76A760F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_1-1754197830676.png" alt="pvsbprasad_1-1754197830676.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The document was originally shared via a standard email. This same method can also be utilized to initiate a DocuSign signature request&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pvsbprasad_2-1754198121470.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295697iAFD53721E5A94010/image-size/large?v=v2&amp;amp;px=999" role="button" title="pvsbprasad_2-1754198121470.png" alt="pvsbprasad_2-1754198121470.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1079850695"&gt;&lt;STRONG&gt;Architecture&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;SAP Sales Cloud&amp;nbsp;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;↓&lt;BR /&gt;SAP Build Apps UI (File Upload + Language )&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;↓&lt;BR /&gt;BTP Integration (Destination)&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ↓&lt;BR /&gt;SAP Translation Hub API (Document Translation)&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ↓&lt;BR /&gt;Translated Quote Returned to Build App → Uploaded back to Sales Cloud or emailed&lt;/P&gt;&lt;H3 id="toc-hId-883337190"&gt;&lt;span class="lia-unicode-emoji" title=":memo:"&gt;📝&lt;/span&gt;Conclusion&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Translating sales quotes and documents no longer needs to be a manual, error-prone, or time-consuming task. With the powerful combination of &lt;STRONG&gt;SAP Build Apps&lt;/STRONG&gt; and &lt;STRONG&gt;SAP Translation Hub&lt;/STRONG&gt;, businesses can easily deliver &lt;STRONG&gt;personalized, localized content&lt;/STRONG&gt;—whether in a &lt;STRONG&gt;standalone translation portal&lt;/STRONG&gt; or as an &lt;STRONG&gt;embedded feature within SAP Sales Cloud&lt;/STRONG&gt;.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;This solution empowers sales teams to &lt;STRONG&gt;communicate more effectively&lt;/STRONG&gt;, &lt;STRONG&gt;close deals faster&lt;/STRONG&gt;, and build stronger relationships with global customers—&lt;STRONG&gt;all without writing a single line of code&lt;/STRONG&gt; on the frontend.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;As businesses continue to expand across borders, &lt;STRONG&gt;language accessibility becomes a strategic advantage&lt;/STRONG&gt;. By embracing low-code translation automation, you're not just simplifying operations — you're &lt;STRONG&gt;enhancing the customer experience&lt;/STRONG&gt; where it counts the most.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/unlocking-multilingual-document-translation-with-sap-build-apps-sap-btp/ba-p/14170245"/>
    <published>2025-08-03T07:41:32.234000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/triggering-process-in-shared-environments-from-sap-build-apps/ba-p/14170767</id>
    <title>Triggering Process in Shared Environments from SAP Build Apps</title>
    <updated>2025-08-04T11:51:37.532000+02:00</updated>
    <author>
      <name>Dan_Wroblewski</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/72</uri>
    </author>
    <content>&lt;P&gt;Unfortunately, the &lt;STRONG&gt;Processes&lt;/STRONG&gt; flow functions to trigger processes from SAP Build Apps (for now) do not work for shared environments. And since the public environment is deprecated, that means they essentially no longer work at all.&amp;nbsp; Hopefully this will be modified soon.&lt;/P&gt;&lt;P&gt;In the meantime, here's how to work around that issue.&lt;/P&gt;&lt;H2 id="toc-hId-1736826865"&gt;The Issue&lt;/H2&gt;&lt;P&gt;I am not sure but I assume the issue is that when you make an API call to trigger a process in a shared environment, you must send the environment id as a query parameter.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;/workflow/rest/v1/workflow-instances?environmentId=salesgroup&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;But the flow functions do not have an input for the environment, so they automatically try to trigger a process in the public (default) environment.&lt;/P&gt;&lt;P&gt;By the way, the identifier for an environment can be found when you open the environment in the Control Tower.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_0-1754292357919.png" style="width: 989px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295839i24C86A2CD0ED895E/image-dimensions/989x455?v=v2" width="989" height="455" role="button" title="Dan_Wroblewski_0-1754292357919.png" alt="Dan_Wroblewski_0-1754292357919.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1540313360"&gt;The Workaround&lt;/H2&gt;&lt;P&gt;The good news is SAP Build Apps recently added a new flow function called &lt;STRONG&gt;HTTP Destination Request&lt;/STRONG&gt; that lets us create a customized HTTP request but using a destination. That is we get the control we get from the &lt;STRONG&gt;HTTP Request&lt;/STRONG&gt; flow function but with the ability to connect through a destination.&lt;/P&gt;&lt;P&gt;As a prerequisite you need to have a destination called&amp;nbsp;&lt;EM&gt;&lt;STRONG&gt;sap_process_automation_service_user_access&lt;/STRONG&gt;&lt;/EM&gt; to the SAP Build Process Automation service, the same as if you wanted to use the Processes flow functions. This is described in the &lt;A href="https://help.sap.com/docs/build-apps/service-guide/processes?locale=en-US&amp;amp;q=integration" target="_self" rel="noopener noreferrer"&gt;Processes&lt;/A&gt; documentation.&lt;/P&gt;&lt;P&gt;You will need to add the destination properties so that it appears in your SAP Build Apps project:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;BuildApps.Enabled = true
BuildApps.ApiType = rest&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_1-1754295940486.png" style="width: 938px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295867i563D0A55883B4102/image-dimensions/938x429?v=v2" width="938" height="429" role="button" title="Dan_Wroblewski_1-1754295940486.png" alt="Dan_Wroblewski_1-1754295940486.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To add the destination to your project:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to the&amp;nbsp;&lt;STRONG&gt;Integrations &lt;/STRONG&gt;tab.&lt;/LI&gt;&lt;LI&gt;Click &lt;STRONG&gt;Add Integration&lt;/STRONG&gt;.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_5-1754297243220.png" style="width: 1080px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295876iBCE747899AA84F8B/image-dimensions/1080x425?v=v2" width="1080" height="425" role="button" title="Dan_Wroblewski_5-1754297243220.png" alt="Dan_Wroblewski_5-1754297243220.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;Click BTP Destinations.&lt;/LI&gt;&lt;LI&gt;Select the destination.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_7-1754297563900.png" style="width: 1455px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295879iF6C709E61EF03DAB/image-dimensions/1455x467?v=v2" width="1455" height="467" role="button" title="Dan_Wroblewski_7-1754297563900.png" alt="Dan_Wroblewski_7-1754297563900.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Click Install Integration.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_8-1754297653486.png" style="width: 1097px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295880iED45B8FA0DB5C657/image-dimensions/1097x144?v=v2" width="1097" height="144" role="button" title="Dan_Wroblewski_8-1754297653486.png" alt="Dan_Wroblewski_8-1754297653486.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;If you go back to the &lt;STRONG&gt;Integrations&lt;/STRONG&gt; tab main screen, you'll see the destination. That's all you need to do to add the destination to the project and make it available to your &lt;STRONG&gt;HTTP Destination Request&lt;/STRONG&gt; flow function.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_9-1754297767359.png" style="width: 1056px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295881i9B02B90975F179AF/image-dimensions/1056x323?v=v2" width="1056" height="323" role="button" title="Dan_Wroblewski_9-1754297767359.png" alt="Dan_Wroblewski_9-1754297767359.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="rule.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295882i3E2967613A5D1256/image-size/large?v=v2&amp;amp;px=999" role="button" title="rule.png" alt="rule.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To trigger a process deployed to a shared environment, do the following:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Add a button.&lt;/LI&gt;&lt;LI&gt;In the logic canvas for the button, add an &lt;STRONG&gt;HTTP Destination Request&lt;/STRONG&gt;, along with any &lt;STRONG&gt;Alert&lt;/STRONG&gt; flow functions to show the result or error&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_2-1754296310420.png" style="width: 961px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295870iFB0299C7C9B97DE7/image-dimensions/961x265?v=v2" width="961" height="265" role="button" title="Dan_Wroblewski_2-1754296310420.png" alt="Dan_Wroblewski_2-1754296310420.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Select the HTTP Destination Request, and set the following in the &lt;STRONG&gt;Properties&lt;/STRONG&gt; tab. &lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Destination&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;EM&gt;&lt;STRONG&gt;sap_process_automation_service_user_access&lt;/STRONG&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;HTTP Method&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;POST&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Request Body Type&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;json&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Request Body&lt;/TD&gt;&lt;TD width="50%"&gt;This depends on the proper request body for your process. More on this below.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Path&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;PRE&gt;/workflow/rest/v1/workflow-instances?environmentId=&amp;lt;environment ID&amp;gt;&lt;/PRE&gt;&lt;P&gt;Replace the placeholder with the identifier for your environment.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Response Type&lt;/TD&gt;&lt;TD width="50%"&gt;text&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_3-1754296454316.png" style="width: 285px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295872i07E7B480C22448B4/image-dimensions/285x518?v=v2" width="285" height="518" role="button" title="Dan_Wroblewski_3-1754296454316.png" alt="Dan_Wroblewski_3-1754296454316.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_4-1754296464448.png" style="width: 252px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295873iCDE17F3854E1A435/image-dimensions/252x381?v=v2" width="252" height="381" role="button" title="Dan_Wroblewski_4-1754296464448.png" alt="Dan_Wroblewski_4-1754296464448.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The flow function has 3 outputs.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The first if the call is successful and returns 2XX status code.&lt;/LI&gt;&lt;LI&gt;The second if the call is successfully transmitted and a response is received but returns a 4XX or 5XX status code.&lt;/LI&gt;&lt;LI&gt;The third if the call is unsuccessful and no response is received.&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1472882574"&gt;Request Body&lt;/H3&gt;&lt;P&gt;The request body is determined by checking the trigger for the process.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to the &lt;STRONG&gt;Control Tower&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Click &lt;STRONG&gt;Environments&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Click your environment.&lt;/LI&gt;&lt;LI&gt;Click &lt;STRONG&gt;Triggers&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Click &lt;STRONG&gt;View&lt;/STRONG&gt; next to the trigger for your process.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_10-1754299263361.png" style="width: 1093px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295897i14C5082638C16E82/image-dimensions/1093x328?v=v2" width="1093" height="328" role="button" title="Dan_Wroblewski_10-1754299263361.png" alt="Dan_Wroblewski_10-1754299263361.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You will now see the payload for the API for that trigger. This will be the request body.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_12-1754299399680.png" style="width: 629px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295904iBBFDE8B05E245157/image-dimensions/629x566?v=v2" width="629" height="566" role="button" title="Dan_Wroblewski_12-1754299399680.png" alt="Dan_Wroblewski_12-1754299399680.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note that you cannot copy from the box with the payload. You will have to use the copy button to copy the entire payload. Note also you can see the URL for the API, including the &lt;EM&gt;&lt;STRONG&gt;environmentId&lt;/STRONG&gt;&lt;/EM&gt; parameter you must pass.&lt;/P&gt;&lt;H2 id="toc-hId-1147286350"&gt;The Upshot&lt;/H2&gt;&lt;P&gt;The method above is pretty straight-forward and has the advantage of teaching you what is happening behind the scenes and how the SAP Build Process Automation APIs work. But I'll admit you lose the ease of use of the flow functions, and also the ability to create variables from the input and output schema of your processes.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/triggering-process-in-shared-environments-from-sap-build-apps/ba-p/14170767"/>
    <published>2025-08-04T11:51:37.532000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/extend-a-custom-business-object-created-with-key-user-extensibility-using/ba-p/14174598</id>
    <title>Extend a Custom Business Object created with Key User Extensibility using SAP Build Apps</title>
    <updated>2025-08-08T07:51:17.134000+02:00</updated>
    <author>
      <name>ShivaniShankar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1510886</uri>
    </author>
    <content>&lt;P&gt;This blog post covers how to setup an extension scenario from SAP S/4HANA Cloud and build Side-by-Side UI Extensions with the help of SAP Build Apps in the Business Technology Platform.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Business scenario:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;A Manager wants to define business objects “Bonus Plan” for employees. A Bonus Plan is there to save employee specific rules for bonus entitlement.&lt;/P&gt;&lt;P&gt;Here, with Key User Extensibility, we create a custom Business Object with a data structure, logic for data&amp;nbsp;initialization in SAP S/4HANA Cloud, Public Edition which should have standard API operations (GET, POST, DELETE). Expose the custom business object&amp;nbsp;as web service for side-by-side UI extension using Low-code No-code capabilities of SAP Build Apps. You will learn how quickly a new UI application can be developed with the no-code capabilities of SAP Build Apps. You will also find out what is the process to setup, develop and deploy a productive extension application.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note: &lt;/STRONG&gt;The maintain Bonus app shown in this blog is for educational purpose only and not meant for productive usage. It is not ensured that the data used in this extension scenario is managed in accordance with applicable legal requirements for all countries and industries and in accordance with the business needs, such as data life cycle requirements. &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Subscription to SAP Build Apps on SAP BTP Sub-Account&lt;/LI&gt;&lt;LI&gt;Your user needs (a) business role(s) with business catalogs &lt;STRONG&gt;Extensibility - Custom Business Objects&lt;/STRONG&gt; (ID: SAP_CORE_BC_EXT_CBO), &lt;STRONG&gt;Extensibility - Custom Communication Scenarios&lt;/STRONG&gt; (ID: SAP_CORE_BC_EXT_CCS) and &lt;STRONG&gt;Communication Management&lt;/STRONG&gt; (ID: SAP_CORE_BC_COM) (Need to have unrestricted access if you are creating a business role and adding these catalogs).&lt;/LI&gt;&lt;LI&gt;You have &lt;A href="https://developers.sap.com/group.abap-extensibiliy-cbo-cce-ccl.html" target="_blank" rel="noopener noreferrer"&gt;Created Custom Business Objects in SAP S/4HANA Cloud&lt;/A&gt;&amp;nbsp;as per the given tutorial.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Why SAP Build Apps with SAP S/4HANA Cloud?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Create new solutions using the secure, no-code SAP Build Apps with SAP S/4HANA. Build visually and empower users to digitalise their daily work without impacting core processes. Create a personalised, accessible application that securely connects to data from SAP S/4HANA Cloud.&lt;/P&gt;&lt;P&gt;To extend SAP S/4HANA Cloud using SAP Build Apps, you can&amp;nbsp;leverage side-by-side extensibility, which allows you to build extensions that run on SAP BTP and interact with your S/4HANA Cloud system.&amp;nbsp;This approach enables you to create custom UIs, logic, and integrations without directly modifying the core S/4HANA Cloud system.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_9-1754553693970.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297772i0D15D1C28871EFDF/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_9-1754553693970.png" alt="ShivaniShankar_9-1754553693970.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1607861482"&gt;SAP S/4HANA Cloud&lt;/H1&gt;&lt;P&gt;Let’s start on the SAP S/4HANA Cloud side with the definition of the Custom Business Object and the communication settings.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1540430696"&gt;Custom Business Object&lt;/H2&gt;&lt;P&gt;In the&amp;nbsp;&lt;A href="https://developers.sap.com/group.abap-extensibiliy-cbo-cce-ccl.html" target="_blank" rel="noopener noreferrer"&gt;Create Custom Business Objects in SAP S/4HANA Cloud&lt;/A&gt;&amp;nbsp;tutorial group it is shown how to create a custom business object and generate a UI (user interface) in SAP S/4HANA Cloud Public Edition.&lt;/P&gt;&lt;H2 id="toc-hId-1343917191"&gt;Expose Custom Business Object as External API&lt;/H2&gt;&lt;P&gt;To integrate custom business object from SAP S/4HANA system with External Systems or Services like&amp;nbsp;SAP Build Apps,&amp;nbsp;as administrator you need to create a&amp;nbsp;Communication Arrangement. You create a communication arrangement to enable the communication between your system and SAP Build App in BTP, and how they communicate. Communication Arrangement is formed by combining the below artifacts:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Creating a Custom Communication Scenario&lt;BR /&gt;&lt;/STRONG&gt;The setup of the communication (inbound and outbound) between SAP S/4HANA and SAP BTP starts with the definition of a Custom Communication Scenario.&lt;BR /&gt;The Custom Communication Scenario contains the information for both inbound and outbound HTTP-calls.&lt;UL&gt;&lt;LI&gt;Open the app Custom Communication Scenarios in the Launchpad of the SAP S/4 HANA system and create a new Custom Communication Scenario with the name YY1_BONUSPLAN.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_10-1754553693977.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297770iC7E1D88A6CE7471D/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_10-1754553693977.png" alt="ShivaniShankar_10-1754553693977.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;On the tab Inbound Services, you create an entry for your Custom Business Object: Press Add button to add inbound service “YY1_BONUSPLAN_CDS” and click select button.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_11-1754553693995.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297771i82F0B5227F8DC366/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_11-1754553693995.png" alt="ShivaniShankar_11-1754553693995.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Press Save and Publish to finish the custom communication scenario creation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Creating a Communication System and User&lt;BR /&gt;&lt;/STRONG&gt;&lt;P&gt;To enable secure communication between different systems you have to register these systems and define the user which is authorized to use the connection.&lt;/P&gt;&lt;P&gt;The communication system represents the communication partner within a communication. for inbound communication, this is the external system that calls our custom Bonus plan service.&lt;/P&gt;&lt;P&gt;We’ll create one Communication System for all systems that want to use our service as well as the user that they’ll have to use. If you want to access the custom BONUSPLAN OData service (Inbound) you also need to setup an authentication method. You can use several methods like e.g.., Basic Authentication, Certificate or OAuth.&lt;/P&gt;&lt;P&gt;In this case we are choosing Basic Authentication for which you need to setup a Communication User. Open the app Maintain Communication Users from the Communication Management group and create there a new user with username, description, and password.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Open “Communication Systems” Application.&lt;/LI&gt;&lt;LI&gt;Start creating a new system by executing the “New” action.&lt;/LI&gt;&lt;LI&gt;Give following data to the new custom communication System…&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Note: you can replace XXX with your system ID.&lt;/P&gt;&lt;TABLE width="594"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="151"&gt;&lt;P&gt;Field Label&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Field Value&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="151"&gt;&lt;P&gt;System ID&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;EXTERNAL_SYSTEMXXX&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="151"&gt;&lt;P&gt;System Name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;EXTERNAL_SYSTEMXXX&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="151"&gt;&lt;P&gt;Host Name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;EXTERNAL_SYSTEMXXX&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;UL&gt;&lt;LI&gt;Scroll down to “User for Inbound Communication” and start adding one by executing the “Add” action.&lt;/LI&gt;&lt;LI&gt;In the Pop Up, use the value help to browse and select the user.&lt;/LI&gt;&lt;/UL&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_0-1754563651591.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297893i3074475486D21581/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_0-1754563651591.png" alt="ShivaniShankar_0-1754563651591.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Choose the user you already created and then click OK. Your user for Inbound Communication is set up. Click on&amp;nbsp;&lt;STRONG&gt;Save.&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;Creating a Communication Arrangement for Custom Communication Scenario&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Finally, a communication arrangement links the solution’s scenario with the Communication system and its user and exposes the Service to be used.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Open “Communication Arrangements” Application&lt;/LI&gt;&lt;LI&gt;Start creation by executing the “New” action.&lt;/LI&gt;&lt;LI&gt;A pop up opens in that you use the value help for Scenario first where you can select previously created Custom Communication Scenario&amp;nbsp;YY1_BONUSPLAN. This will set the Scenario and default the Arrangement Name, so that you can continue the creation via “Create” button.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_13-1754553694005.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297773i934E20147793AC92/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_13-1754553694005.png" alt="ShivaniShankar_13-1754553694005.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the opening Arrangement details click to browse the Communication System&lt;/LI&gt;&lt;LI&gt;Choose the&amp;nbsp;&lt;STRONG&gt;EXTERNAL_SYSTEMXXX&lt;/STRONG&gt;&amp;nbsp;you created before.&lt;/LI&gt;&lt;LI&gt;Choosing the system will automatically set the related User as well. Click&amp;nbsp;&lt;STRONG&gt;Save&lt;/STRONG&gt;&amp;nbsp;to finish creation&lt;/LI&gt;&lt;LI&gt;Copy the&amp;nbsp;&lt;STRONG&gt;Service URL&lt;/STRONG&gt;&amp;nbsp;for the next step. Here you save the inbound service URL for the destination configuration in BTP.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_14-1754553694017.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297775iA59677C4CF0D0BEA/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_14-1754553694017.png" alt="ShivaniShankar_14-1754553694017.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1018320967"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-821807462"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-625293957"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-428780452"&gt;&lt;BR /&gt;Build Side-by-Side UI Extensibility with SAP Build Apps&lt;/H1&gt;&lt;P&gt;SAP Build Apps enables developers to implement loosely coupled extension applications securely on top of the existing SAP solution they already have.&amp;nbsp;SAP Build Apps provides drag-and-drop capabilities for Citizen developers to build enterprise-grade applications confidently, authenticate and access SAP Business Technology Platform destinations. You can preview your SAP Build Apps project as &lt;STRONG&gt;web preview&lt;/STRONG&gt; and can build it to deploy on SAP Build Work Zone or Android/IOS.&lt;/P&gt;&lt;P&gt;Here you will learn how to use SAP Build Apps, create an app that performs all the CRU (Create, Read, Update) operations for the SAP S/4HANA Cloud BONUSPLAN API for managing the Bonus Plan for the employee.&lt;/P&gt;&lt;P&gt;The point of this tutorial is to show you how you would perform all the CRU (Create, Read, Update) operations, and how you would handle some of the complexities of the SAP backend APIs (e.g. strict requirements for the data and handle multiple determination) for the Bonus plan scenario.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_15-1754553694042.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297777iC3D93BC32CA5293F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_15-1754553694042.png" alt="ShivaniShankar_15-1754553694042.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You will create an app with 2 pages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Page 1: Display all Bonus plans&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Page 2: Manage Bonus Plan, which handles Create or Update the bonus plan for employees.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-361349666"&gt;Create destination to SAP S/4HANA Cloud system.&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/H2&gt;&lt;P&gt;In the SAP BTP cockpit, as administrator you need to create a destination to enable the communication to the S/4HANA Cloud system. In addition, the destination must be enabled for use in SAP Build Apps.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Procedure:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the SAP BTP cockpit, navigate to your subaccount.&lt;/P&gt;&lt;P&gt;Choose Connectivity &amp;gt; Destination &amp;gt; Create Destination.&lt;/P&gt;&lt;P&gt;Choose Blank Template and enter the following data and click on Save.&lt;/P&gt;&lt;TABLE width="541"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;&lt;STRONG&gt;Field&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;&lt;STRONG&gt;Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Enter the destination name.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Select&amp;nbsp;HTTP.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Description&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Enter a description (SAP Build Apps to ABAP Callback Destination)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;URL&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Enter the Service URL saved during Communication Arrangement creation. If not saved access the communication arrangement&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Proxy Type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Internet&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Authentication&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Select&amp;nbsp;BasicAuthentication.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;User&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;(Inbound) communication user used in the communication arrangement&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Password&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Set the password to the secret. Password of the (inbound) communication user used in the communication arrangement.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Additional Properties&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Add the following properties:&lt;/P&gt;&lt;P&gt;“BuildApps.RequiresCsrf” → true&lt;/P&gt;&lt;P&gt;“AppgyverEnabled” → true&lt;/P&gt;&lt;P&gt;“HTML5.DynamicDestination ” → true&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Save your entries.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_16-1754553694055.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297776i48680A28E591E576/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_16-1754553694055.png" alt="ShivaniShankar_16-1754553694055.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-164836161"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--31677344"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-119063508"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--77449997"&gt;&lt;BR /&gt;Open SAP Build Apps&lt;/H2&gt;&lt;P&gt;Open SAP Build Apps, by going to the SAP BTP cockpit, and under&amp;nbsp;&lt;STRONG&gt;Instances and Subscriptions&lt;/STRONG&gt;, click&amp;nbsp;&lt;STRONG&gt;SAP Build Apps&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_17-1754553694080.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297778i69903039AA385DF0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_17-1754553694080.png" alt="ShivaniShankar_17-1754553694080.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In the lobby of your SAP Build Apps, click&amp;nbsp;&lt;STRONG&gt;Create&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_18-1754553694092.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297780iC860546CB9586758/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_18-1754553694092.png" alt="ShivaniShankar_18-1754553694092.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Select&lt;STRONG&gt;&amp;nbsp;Application&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_19-1754553694113.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297779i15653EE6AE9D6A5D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_19-1754553694113.png" alt="ShivaniShankar_19-1754553694113.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Select&amp;nbsp;&lt;STRONG&gt;Frontend and &lt;/STRONG&gt;followed by this Select &lt;STRONG&gt;Web &amp;amp; Mobile Application and &lt;/STRONG&gt;press&lt;STRONG&gt; Next &lt;/STRONG&gt;button. Please note that the user needs to have access to the Custom Identity Provider to be able to create a Web &amp;amp; Mobile Application.&lt;/P&gt;&lt;P&gt;For the project name, enter&amp;nbsp;Bonus plan Management and description as “Extend a key user extension from S/4HANA Cloud public edition “then click&amp;nbsp;&lt;STRONG&gt;Create&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_20-1754553694127.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297781i00B0D7987942918B/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_20-1754553694127.png" alt="ShivaniShankar_20-1754553694127.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--273963502"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--470477007"&gt;Connect to the REST API from the Custom Business Object on S/4HANA Cloud Public Edition&lt;/H2&gt;&lt;P&gt;In this step, you will make a connection to the BONUSPLAN API of your SAP S/4HANA Cloud system. You will enable entities:&amp;nbsp;&lt;STRONG&gt;BONUSPLAN&lt;/STRONG&gt;&amp;nbsp;(the header for a BONUSPLAN)&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to the&amp;nbsp;&lt;STRONG&gt;Integrations&lt;/STRONG&gt;&amp;nbsp;tab.&lt;/LI&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;Add Integration&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;BTP Destinations&lt;/STRONG&gt;, and then select the destination to your SAP S/4HANA Cloud BONUSPLAN API which you have created in “Create destination to SAP S/4HANA Cloud system” section.&lt;/LI&gt;&lt;LI&gt;Select Click&amp;nbsp;&lt;STRONG&gt;Install Integration&lt;/STRONG&gt;&amp;nbsp;(upper right).&lt;/LI&gt;&lt;LI&gt;Under&amp;nbsp;&lt;STRONG&gt;Data Entities&lt;/STRONG&gt;, scroll down so you can see both&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;YY1_BONUSPLAN&lt;/EM&gt; &lt;/STRONG&gt;and&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;I_Currency&lt;/EM&gt;&lt;/STRONG&gt;. For each, select it and click&amp;nbsp;&lt;STRONG&gt;Enable Data Entity&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_21-1754553694150.png" style="width: 0px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297785i1C6159B84C55A462/image-size/small?v=v2&amp;amp;px=200" width="0" height="0" role="button" title="ShivaniShankar_21-1754553694150.png" alt="ShivaniShankar_21-1754553694150.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_0-1754565162913.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297903i651CB89C8DAECE17/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_0-1754565162913.png" alt="ShivaniShankar_0-1754565162913.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;You can now select an entity and click&amp;nbsp;&lt;STRONG&gt;Browse Real Data&lt;/STRONG&gt;&amp;nbsp;to see live data from SAP S/4HANA Cloud.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_33-1754554445109.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297806iB21CCE01ACFE7316/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_33-1754554445109.png" alt="ShivaniShankar_33-1754554445109.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;Save&lt;/STRONG&gt;&amp;nbsp;(upper right).&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId--666990512"&gt;Create page for displaying BONUSPLANs (Homepage)&lt;/H2&gt;&lt;P&gt;Now you will create the home page that displays a list of Bonus Plans, for which the user can update the existing Bonus Plan and can create a new Bonus Plan.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;You will already have a&amp;nbsp;&lt;STRONG&gt;Home Page&lt;/STRONG&gt;. Click on it.&lt;/LI&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;Variables → Data Variables&lt;/STRONG&gt; and create a data variable based on&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;YY1_BONUSPLAN&lt;/EM&gt;&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_23-1754553694178.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297784i3A74F2FADB43BB3E/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_23-1754553694178.png" alt="ShivaniShankar_23-1754553694178.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click&amp;nbsp;the User Interface tab to return to the UI canvas.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Add a Title field and a Text field. Set the content for the text component as “Bonus plan details” and add a button with value “Create” value and list item component.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_24-1754553694211.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297786i9B1A2B947DEA8A7C/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_24-1754553694211.png" alt="ShivaniShankar_24-1754553694211.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_25-1754553694245.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297787i8272DA8ECC6D09D9/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_25-1754553694245.png" alt="ShivaniShankar_25-1754553694245.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Add a List Item component&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_26-1754553694289.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297788iC971733CBF608E51/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_26-1754553694289.png" alt="ShivaniShankar_26-1754553694289.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click the list item, and configure its properties as follows:&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Property&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Repeat with&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;data variable&amp;nbsp;&lt;EM&gt;YY1_BONUSPLAN1&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Primary label&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;data item in repeat&amp;nbsp;&lt;STRONG&gt;current.EmployeeName&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Secondary label&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;data item in repeat&amp;nbsp;&lt;STRONG&gt;current.EmployeeID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now you can test the application which should display the Bonus list by saving your changes and clicking on &lt;STRONG&gt;Preview&lt;/STRONG&gt; to preview the application.&lt;/P&gt;&lt;P&gt;Hopefully you got this far and found success!&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;Congratulations!!!&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You will define the logic for the list item selection later once we finish next step (&lt;STRONG&gt;Create page for Manage Bonus Plan)&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;With the list item selected, open the logic canvas.&lt;/LI&gt;&lt;LI&gt;Add an&amp;nbsp;&lt;STRONG&gt;Open page&lt;/STRONG&gt;&amp;nbsp;flow function, and configure it as follows:&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Property&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Page&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Manage Bonus Plan&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Parameters → &lt;STRONG&gt;SAP_UUID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;data item in repeat&amp;nbsp;&lt;STRONG&gt;current.SAP_UUID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Parameters → &lt;STRONG&gt;EmployeeName&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;data item in repeat&amp;nbsp;&lt;STRONG&gt;current.&lt;/STRONG&gt; &lt;STRONG&gt;EmployeeName&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_27-1754553694308.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297790i9636D916866B8EE1/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_27-1754553694308.png" alt="ShivaniShankar_27-1754553694308.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;You will define the logic for the Button later once we finish next step (&lt;STRONG&gt;Create page for &lt;/STRONG&gt;&lt;STRONG&gt;Manage Bonus Plan)&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Drag and drop an&amp;nbsp;&lt;STRONG&gt;Open page&lt;/STRONG&gt;&amp;nbsp;flow function, and configure it as follows: Make sure that don’t bind any value to the page parameter of Manage Bonus Plan and Page value as “Manage Bonus Plan”.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_28-1754553694331.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297791iF0693EA0A045744E/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_28-1754553694331.png" alt="ShivaniShankar_28-1754553694331.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--863504017"&gt;&lt;BR /&gt;Create page for Manage Bonus Plan&lt;/H2&gt;&lt;P&gt;You will create a page for Manage Bonus Plan.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;Add New Page&lt;/STRONG&gt;, enter&amp;nbsp;Manage Bonus Plan, and click&amp;nbsp;&lt;STRONG&gt;OK&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Navigate to page Manage Bonus Plan&lt;/LI&gt;&lt;LI&gt;Click PAGE PARAMETERS and two parameter such as &lt;STRONG&gt;EmployeeName&lt;/STRONG&gt; of type Text and &lt;STRONG&gt;SAP_UUID&lt;/STRONG&gt; of type UUID.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_29-1754553694348.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297789iF0EC5AC05C7EF918/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_29-1754553694348.png" alt="ShivaniShankar_29-1754553694348.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;Data Variables&lt;/STRONG&gt; and create a variable for&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;YY1_BONUSPLAN &lt;/EM&gt;&lt;/STRONG&gt;and Data Variable Type as “Single data record” and bind &lt;STRONG&gt;SAP_UUID &lt;/STRONG&gt;value to the page parameter SAP_UUID.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_30-1754553694368.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297794i38DB26709EEBC941/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_30-1754553694368.png" alt="ShivaniShankar_30-1754553694368.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;View&lt;/STRONG&gt;&amp;nbsp;to return to the UI canvas and remove all the default components.&lt;/LI&gt;&lt;LI&gt;Add the following components in this order:&lt;UL&gt;&lt;LI&gt;Title1&lt;/LI&gt;&lt;LI&gt;Text1&lt;/LI&gt;&lt;LI&gt;Title2&lt;/LI&gt;&lt;LI&gt;Container 1, and inside the container add&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Input Field&lt;/LI&gt;&lt;LI&gt;CheckBox Field&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Date field with input1(Date field can be installed from the marketplace if its not available by default)&lt;/LI&gt;&lt;LI&gt;Date field with input2&lt;/LI&gt;&lt;LI&gt;Container 2, and inside the container add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Input Field1&lt;/LI&gt;&lt;LI&gt;Input Field2&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Container 3, and inside the container add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Input Field1&lt;/LI&gt;&lt;LI&gt;Input Field2&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Container 4, and inside the container add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Input Field1&lt;/LI&gt;&lt;LI&gt;Input Field2&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Container 5, and inside the container add&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Input Field1&lt;/LI&gt;&lt;LI&gt;Dropdown Field2&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Button&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Configure the following components:&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE width="500"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;STRONG&gt;Component&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;STRONG&gt;Property&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;STRONG&gt;Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Title1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Content&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Bonus plan&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Text1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Content with formula&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;"Bonus plan for " +&amp;nbsp; IF(NOT(IS_NULLY(params.EmployeeName)), params.EmployeeName, "")&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Title2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Content&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;General Information&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Container 1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Layout&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Horizontal&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.ID&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;ID&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· CheckBox&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.IsConsistent&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Is Consistent&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Date field with input1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Validity Start Date&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Placeholder Text with Formula&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;FORMAT_DATETIME_LOCAL(DATETIME(NUMBER(SUBSTRING(data.YY1_BONUSPLAN1.ValidityStartDate, 6,19))), "YYYY.MM.DD")&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Date field with input2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Validity End Date&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Placeholder Text with Formula&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;FORMAT_DATETIME_LOCAL(DATETIME(NUMBER(SUBSTRING(data.YY1_BONUSPLAN1.ValidityEndDate, 6,19))), "YYYY.MM.DD")&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Container 2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Layout&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Horizontal&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.LowBonusAssignmentFactor&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Low Bonus Assignment Factor&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.HighBonusAssignmentFactor&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;High Bonus Assignment Factor&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Container 3&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Layout&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Horizontal&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.LowBonusPercentage_V&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Low Bonus Percentage&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.HighBonusPercentage_V&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;High Bonus Percentage&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Container 4&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Layout&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Horizontal&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field 1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.EmployeeID&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Employee ID&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field 2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.EmployeeName&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Employee Name&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Container 5&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Layout&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Horizontal&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field 1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.TargetAmount_V&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Target Amount&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Dropdown field1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Option list&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;With formula&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;MAP(data.I_Currency1, {label: item.Currency +"("+ item.Currency_Text+")", value: item.Currency})&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Selected Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable&amp;nbsp; YY1_BONUSPLAN1.TargetAmount_C&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Currency&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Button&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Save&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Add logic to Add/Update Bonus Plan:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Now we will add the logic to the Save button. To achieve this, click on Save button and open its logic canvas.&lt;/LI&gt;&lt;LI&gt;Add logic flow functions and connect them as in the following:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_31-1754553694375.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297792iCE7E73DC9FE8F872/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_31-1754553694375.png" alt="ShivaniShankar_31-1754553694375.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Configure the flow functions as follows:&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;IF condition (first):&lt;/STRONG&gt;&amp;nbsp;Set the condition to the following formula (validates the&amp;nbsp;SAP_UUID field):&lt;BR /&gt;&lt;EM&gt;NOT(IS_NULLY(params.SAP_UUID))&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Update record:&lt;/STRONG&gt;&amp;nbsp;Set the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Resource name:&lt;/STRONG&gt;&amp;nbsp;YY1_BONUSPLAN1&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Risk ID:&lt;/STRONG&gt;&amp;nbsp;page parameter SAP_UUID&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Record:&lt;/STRONG&gt;&amp;nbsp;Set the following formula (allows us to make sure the integer fields receive a number value):&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;{ ValidityStartDate: data.YY1_BONUSPLAN1.ValidityStartDate, ValidityEndDate: data.YY1_BONUSPLAN1.ValidityEndDate,LowBonusAssignmentFactor: data.YY1_BONUSPLAN1.LowBonusAssignmentFactor,HighBonusAssignmentFactor:data.YY1_BONUSPLAN1.HighBonusAssignmentFactor,LowBonusPercentage_V: data.YY1_BONUSPLAN1.LowBonusPercentage_V, HighBonusPercentage_V:data.YY1_BONUSPLAN1.HighBonusPercentage_V, EmployeeID: data.YY1_BONUSPLAN1.EmployeeID,&amp;nbsp; EmployeeName: data.YY1_BONUSPLAN1.EmployeeName, TargetAmount_V:data.YY1_BONUSPLAN1.TargetAmount_V, TargetAmount_C:data.YY1_BONUSPLAN1.TargetAmount_C}&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create record:&lt;/STRONG&gt;&amp;nbsp;Set the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Resource name:&lt;/STRONG&gt;&amp;nbsp;YY1_BONUSPLAN1&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Record:&lt;/STRONG&gt;&amp;nbsp;Set the following formula:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;{ SAP_UUID: data.YY1_BONUSPLAN1.SAP_UUID, ValidityStartDate: data.YY1_BONUSPLAN1.ValidityStartDate, ValidityEndDate: data.YY1_BONUSPLAN1.ValidityEndDate,LowBonusAssignmentFactor: data.YY1_BONUSPLAN1.LowBonusAssignmentFactor,HighBonusAssignmentFactor:data.YY1_BONUSPLAN1.HighBonusAssignmentFactor,LowBonusPercentage_V: data.YY1_BONUSPLAN1.LowBonusPercentage_V, HighBonusPercentage_V:data.YY1_BONUSPLAN1.HighBonusPercentage_V, EmployeeID: data.YY1_BONUSPLAN1.EmployeeID,&amp;nbsp; EmployeeName: data.YY1_BONUSPLAN1.EmployeeName, TargetAmount_V:data.YY1_BONUSPLAN1.TargetAmount_V, TargetAmount_C:data.YY1_BONUSPLAN1.TargetAmount_C}&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can set the Toast and Alert flow functions&amp;nbsp;for both Create record and Update record with the appropriate Text message to inform the user about the success or error message during Save.&lt;/P&gt;&lt;P&gt;Now you can now test the application, which is designed to display all available Bonus plans. If you select an existing Bonus Plan, the system will load all relevant field values for the chosen employee, allowing you to update those details. Additionally, you can create a new Bonus Plan by using the Create button and by following the steps mentioned in the section &lt;STRONG&gt;&lt;EM&gt;Test app&lt;/EM&gt;&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thanks, you have completed SAP Build Apps application development by extending a Custom Business Object successfully!&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;STRONG&gt;&lt;EM&gt;Congratulations!!!&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1060017522"&gt;Test app&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Open the Preview Portal using the&amp;nbsp;Preview&amp;nbsp;button located in the top-right corner.&lt;/LI&gt;&lt;LI&gt;Go to the&amp;nbsp;Launch&amp;nbsp;tab, then&amp;nbsp;Open Preview Portal, then&amp;nbsp;Web Preview.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_32-1754553694380.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297793iFBC3B0BA4731C39A/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_32-1754553694380.jpeg" alt="ShivaniShankar_32-1754553694380.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click&amp;nbsp;Bonus Plan to open the app. You should see the first page with a list of Bonus Plan in the first page and while navigating to the Manage Bonus Plan page handles Create or Update the bonus plan for employees.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For Deploying an app created with SAP Build Apps to HTML5 applications repository on SAP BTP and Integrate an SAP Build Apps application into SAP Build Work Zone, please do refer to this &lt;A href="https://developers.sap.com/tutorials/build-apps-deply..html" target="_blank" rel="noopener noreferrer"&gt;tutorial&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/extend-a-custom-business-object-created-with-key-user-extensibility-using/ba-p/14174598"/>
    <published>2025-08-08T07:51:17.134000+02:00</published>
  </entry>
</feed>
