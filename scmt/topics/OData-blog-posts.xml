<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/OData-blog-posts.xml</id>
  <title>SAP Community - OData</title>
  <updated>2025-11-01T00:11:41.576547+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/OData/pd-p/551580658536717501828021060147962" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>OData blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/send-odata-batch-requests-in-sap-build-apps-json/ba-p/14146262</id>
    <title>Send OData Batch Requests in SAP Build Apps (JSON)</title>
    <updated>2025-07-07T17:43:44.496000+02:00</updated>
    <author>
      <name>Dan_Wroblewski</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/72</uri>
    </author>
    <content>&lt;P&gt;Many people have asked about sending &lt;A href="https://www.odata.org/documentation/odata-version-2-0/batch-processing/\" target="_self" rel="nofollow noopener noreferrer"&gt;OData batch requests&lt;/A&gt; via SAP Build Apps. It can be done, if your API accepts JSON-formatted payloads for batch requests.&lt;/P&gt;&lt;P&gt;Just use the &lt;STRONG&gt;HTTP Destination Request&lt;/STRONG&gt; flow function.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_1-1751902390476.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283554i8D15662D9C2687E2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Dan_Wroblewski_1-1751902390476.png" alt="Dan_Wroblewski_1-1751902390476.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Then set the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Destination:&lt;/STRONG&gt; Create an integration with your destination that points to your API (no need to specify any entities).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Method:&lt;/STRONG&gt; POST&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Body Type:&lt;/STRONG&gt; JSON&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Request Body:&lt;/STRONG&gt; Just define a page variable with the JSON schema you need, and set the values with a Set Page Variable flow function. More on this below.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Path:&lt;/STRONG&gt; /$batch&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Headers:&lt;/STRONG&gt; Content-Type = application/json&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_0-1751902345026.png" style="width: 343px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283553iBB0E1E2BA09DF0D8/image-dimensions/343x791?v=v2" width="343" height="791" role="button" title="Dan_Wroblewski_0-1751902345026.png" alt="Dan_Wroblewski_0-1751902345026.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1863312957"&gt;Request Body&lt;/H3&gt;&lt;P&gt;The request body would be something like this (here we are create new records):&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;{
    "requests": [
        {
            "id": "1",
            "method": "POST",
            "url": "/Orders",
            "headers": {
                "content-type": "application/json; odata.metadata=minimal; odata.streaming=true",
                "odata-version": "4.0"
            },
            "body": {
                "customer": "JSON1",
                "date": "2021-06-30T00:00:00Z",
                "status": "Initiated",
                "total": 99,
                "currency_code": "USD"
            }
        },
        {
            "id": "2",
            "method": "POST",
            "url": "/Orders",
            "headers": {
                "content-type": "application/json; odata.metadata=minimal; odata.streaming=true",
                "odata-version": "4.0"
            },
            "body": {
                "customer": "JSON2",
                "date": "2021-06-30T00:00:00Z",
                "status": "Initiated",
                "total": 100,
                "currency_code": "USD"
            }
        }
    ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;For my test, I already had the JSON above so I just put it in a JavaScript component, parsed it, and output it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_2-1751902519819.png" style="width: 1188px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283556iFCB3B2EE2224F30E/image-dimensions/1188x369?v=v2" width="1188" height="369" role="button" title="Dan_Wroblewski_2-1751902519819.png" alt="Dan_Wroblewski_2-1751902519819.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;But you could create a page variable, and in your app populate the variable with your data. Then you could use this page variable for the request body.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_3-1751902759936.png" style="width: 1240px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283557i6735CA49244725AF/image-dimensions/1240x561?v=v2" width="1240" height="561" role="button" title="Dan_Wroblewski_3-1751902759936.png" alt="Dan_Wroblewski_3-1751902759936.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Unfortunately, I could not find a way to use the more traditional multipart/mixed payload format from SAP Build Apps. If you can find a way, let us know.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dan_Wroblewski_4-1751902871383.png" style="width: 1034px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283559i7C7CE92F1B97EE13/image-dimensions/1034x618?v=v2" width="1034" height="618" role="button" title="Dan_Wroblewski_4-1751902871383.png" alt="Dan_Wroblewski_4-1751902871383.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/send-odata-batch-requests-in-sap-build-apps-json/ba-p/14146262"/>
    <published>2025-07-07T17:43:44.496000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/accessing-s-4hana-cloud-data-via-sap-build-code-on-the-sap-btp-platform/ba-p/14146303</id>
    <title>Accessing S/4HANA Cloud Data via SAP Build Code on the SAP BTP Platform</title>
    <updated>2025-07-16T11:09:48.847000+02:00</updated>
    <author>
      <name>SubramaniyanVenkatraman</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1536504</uri>
    </author>
    <content>&lt;P&gt;Recently, I had the opportunity to contribute to the development of an agentic use case, where I need to fetch data from an S/4HANA Cloud system using existing OData services.&amp;nbsp;This experience gave me hands-on exposure to working with S/4HANA Cloud and understanding how to integrate its data seamlessly into an external application.&lt;/P&gt;&lt;P&gt;In this blog post, I’ll walk you through the step-by-step process of retrieving data from an S/4HANA Cloud system using OData.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;What is SAP Business Technology Platform?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;SAP BTP (Business Technology Platform) is SAP’s unified platform-as-a-service (PaaS) offering that provides tools, services, and runtimes for building, integrating, and extending SAP and non-SAP applications in the cloud.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;What is SAP Cloud Connector?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;The SAP Cloud Connector is a key component in the SAP Business Technology Platform (BTP) landscape. It acts as a secure bridge between your on-premise systems (like SAP S/4HANA on-prem or other internal services) and SAP BTP or cloud-based applications.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;What is Destination Service?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;The SAP Destination Service is a managed service on SAP Business Technology Platform (BTP) that simplifies and secures how your cloud applications connect to remote systems such as SAP S/4HANA Cloud, on-premise systems, or third-party APIs.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;Instead of hardcoding URLs, credentials, and connection details inside your app, you create a destination configuration in BTP and refer to it in your code.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Download and Install SAP Cloud Connector&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;You can download the Cloud Connector compatible with your machine from the following link: &lt;A href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="noopener nofollow noreferrer"&gt;https://tools.hana.ondemand.com/#cloud&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_0-1751905832976.png" style="width: 594px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283580iBD425B307D084A40/image-dimensions/594x220?v=v2" width="594" height="220" role="button" title="Subu1_0-1751905832976.png" alt="Subu1_0-1751905832976.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 1. Cloud Connector download&lt;/P&gt;&lt;P&gt;For Windows, you can choose between the ZIP archive and the MSI installer. The ZIP archive is suitable for development use cases, while the MSI installer is recommended for productive environments, as it installs the Cloud Connector as a service on the server.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Initial Configuration&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;To configure the SCC, open a browser and navigate to:&lt;BR /&gt;https://&amp;lt;hostname&amp;gt;:8443&lt;/P&gt;&lt;P&gt;Replace &amp;lt;hostname&amp;gt; with the name of the machine where the connector is installed. The port number should match the one configured during installation, by default, it is &lt;STRONG&gt;8443&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;To find the hostname of your machine, open Command Prompt and enter:&lt;BR /&gt;hostname&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_0-1751906070203.png" style="width: 455px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283584iA7C98747F6067952/image-dimensions/455x281?v=v2" width="455" height="281" role="button" title="Subu1_0-1751906070203.png" alt="Subu1_0-1751906070203.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 2. Cloud Connector Login&amp;nbsp;&lt;/P&gt;&lt;P&gt;Enter the default credentials (case-sensitive) and click Login:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Username&lt;/STRONG&gt;: Administrator&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Password&lt;/STRONG&gt;: manage&lt;/P&gt;&lt;P&gt;Upon your first login, you'll be prompted to change the password. After updating it, select Master as the installation type and click Save.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_1-1751906070207.png" style="width: 647px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283583iC2DF2AE585678D97/image-dimensions/647x189?v=v2" width="647" height="189" role="button" title="Subu1_1-1751906070207.png" alt="Subu1_1-1751906070207.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 3. Reset password for SCC&lt;/P&gt;&lt;P&gt;The next step is to add your BTP subaccount to the Cloud Connector.&lt;/P&gt;&lt;P&gt;Select &lt;STRONG&gt;"Choose Manually"&lt;/STRONG&gt; to enter your subaccount details manually.&lt;/P&gt;&lt;P&gt;On the following screen, provide the required information about your BTP subaccount. This is necessary to establish a secure tunnel between the Cloud Connector (SCC) and your SAP BTP subaccount.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Region:&lt;/STRONG&gt; The region where your subaccount was created (see the picture below).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Subaccount:&lt;/STRONG&gt; Your subaccount ID (see the picture below).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Login E-Mail:&lt;/STRONG&gt; The email address used when creating the BTP account.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Password:&lt;/STRONG&gt; The password used when creating the BTP account.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_2-1751906070208.png" style="width: 647px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283582iBBB5E81F0FBE019B/image-dimensions/647x207?v=v2" width="647" height="207" role="button" title="Subu1_2-1751906070208.png" alt="Subu1_2-1751906070208.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 4. Connect BTP Sub Account to SCC&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_3-1751906070210.png" style="width: 577px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283585i2B634AC444043702/image-dimensions/577x423?v=v2" width="577" height="423" role="button" title="Subu1_3-1751906070210.png" alt="Subu1_3-1751906070210.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 5: Cloud Connector – BTP Sub Account Registration&lt;/P&gt;&lt;P&gt;Once successfully added your sub account you will see the screenshot as below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_4-1751906070217.png" style="width: 653px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283586i9962B65516FCA896/image-dimensions/653x320?v=v2" width="653" height="320" role="button" title="Subu1_4-1751906070217.png" alt="Subu1_4-1751906070217.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 6. Successful Sub Account Registration&lt;/P&gt;&lt;P&gt;This shows that you have successfully connected your sub account with the cloud connector.&lt;/P&gt;&lt;P&gt;Now its time to connect your On-Premise system.&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Connecting “Cloud to On-Premise” Connection:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Connect your on-premise system to the cloud connector so that it can be access in Business Technology Platform.&lt;/P&gt;&lt;P&gt;Under the sub account ID in your cloud connector click on Cloud to On-Premise in the left menu and then click on ‘+’ sign to add the system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_5-1751906070219.png" style="width: 654px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283587i38320B5D070D0339/image-dimensions/654x147?v=v2" width="654" height="147" role="button" title="Subu1_5-1751906070219.png" alt="Subu1_5-1751906070219.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 7. Add S/4 HANA Cloud System in SCC&lt;/P&gt;&lt;P&gt;In the pop up that open choose ABAP System as the backend type and choose protocol as HTTP.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_6-1751906070220.png" style="width: 594px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283588i08233CF834511404/image-dimensions/594x266?v=v2" width="594" height="266" role="button" title="Subu1_6-1751906070220.png" alt="Subu1_6-1751906070220.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 8. Add Back End system type&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_7-1751906070221.png" style="width: 575px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283589i90C980499D916BBB/image-dimensions/575x250?v=v2" width="575" height="250" role="button" title="Subu1_7-1751906070221.png" alt="Subu1_7-1751906070221.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 9: Define Protocol for Backend Connection&lt;/P&gt;&lt;P&gt;For the “internal host” use the hostname or the ip address of the ABAP system and its corresponding ICM port number.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_8-1751906070222.png" style="width: 570px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283590i9C96AB2604DBE652/image-dimensions/570x254?v=v2" width="570" height="254" role="button" title="Subu1_8-1751906070222.png" alt="Subu1_8-1751906070222.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 10: Configuring System Host Details&lt;/P&gt;&lt;P&gt;The “Virtual Host” is the hostname you'll use within BTP. You can either use the default value, which matches the Internal Host, or choose a different, less identifiable name.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_23-1751906803846.png" style="width: 589px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283613iB9477F9D55A9A81A/image-dimensions/589x258?v=v2" width="589" height="258" role="button" title="Subu1_23-1751906803846.png" alt="Subu1_23-1751906803846.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 11. Configuring Virtual Host&lt;/P&gt;&lt;P&gt;We'll leave the “Principal Type” set to “None” for now.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_24-1751906857120.png" style="width: 562px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283614iE8E706CF9446CAD2/image-dimensions/562x250?v=v2" width="562" height="250" role="button" title="Subu1_24-1751906857120.png" alt="Subu1_24-1751906857120.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 12. Configure Principal Propagation&lt;/P&gt;&lt;P&gt;Select to use virtual host for “Host in Request Header”.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_25-1751906921412.png" style="width: 572px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283615iCFF53A0C11EBF11C/image-dimensions/572x254?v=v2" width="572" height="254" role="button" title="Subu1_25-1751906921412.png" alt="Subu1_25-1751906921412.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 13: Selecting Virtual Host Option&lt;/P&gt;&lt;P&gt;Provide the SAP ABAP system name.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_12-1751906070226.png" style="width: 552px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283596i7EFA72A5119A333C/image-dimensions/552x243?v=v2" width="552" height="243" role="button" title="Subu1_12-1751906070226.png" alt="Subu1_12-1751906070226.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 14. Selecting ABAP System&amp;nbsp;&lt;/P&gt;&lt;P&gt;Check the summary and click on finish.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_13-1751906070227.png" style="width: 575px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283594i5E799C382D674F96/image-dimensions/575x257?v=v2" width="575" height="257" role="button" title="Subu1_13-1751906070227.png" alt="Subu1_13-1751906070227.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 15. Summary&lt;/P&gt;&lt;P&gt;After successfully creating mapping we need to create resource which is the actual service. Click on the ‘+’ sign under the resources section.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_14-1751906070230.png" style="width: 603px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283595iDFF1FCD9D6E57CBE/image-dimensions/603x175?v=v2" width="603" height="175" role="button" title="Subu1_14-1751906070230.png" alt="Subu1_14-1751906070230.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 16: Resource&amp;nbsp;&lt;/P&gt;&lt;P&gt;To grant the subaccount access to all services, enter &lt;STRONG&gt;/sap&lt;/STRONG&gt; in the URL path and choose &lt;STRONG&gt;"Path and All Sub-Paths"&lt;/STRONG&gt; under the Access Policy setting. This setup can be adjusted later to restrict access to specific resources, which is strongly advised for production environments.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_15-1751906070231.png" style="width: 553px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283597iEF74383BD358B23B/image-dimensions/553x336?v=v2" width="553" height="336" role="button" title="Subu1_15-1751906070231.png" alt="Subu1_15-1751906070231.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 17: Adding a New Resource&lt;/P&gt;&lt;P&gt;Now check the resource available and ensure that the backend system is reachable as below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_16-1751906070235.png" style="width: 595px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283598iBC0AE0FD4DA58552/image-dimensions/595x171?v=v2" width="595" height="171" role="button" title="Subu1_16-1751906070235.png" alt="Subu1_16-1751906070235.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 18. Check for connection status&lt;/P&gt;&lt;P&gt;Once the system is reachable you will see the status as below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_17-1751906070238.png" style="width: 609px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283599i293D8DF11A6808FF/image-dimensions/609x186?v=v2" width="609" height="186" role="button" title="Subu1_17-1751906070238.png" alt="Subu1_17-1751906070238.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 19: Verifying System Reachability&lt;/P&gt;&lt;P&gt;If you face some issues in reaching backend system maintain the below configurations at&lt;/P&gt;&lt;P&gt;“Run-&amp;gt;drivers-&amp;gt;Click on ok-&amp;gt; Go to etc folder-&amp;gt;edit hosts”&lt;/P&gt;&lt;P&gt;Add the host details at the bottom and click on SAVE as an example below:&lt;/P&gt;&lt;P&gt;&amp;nbsp;127.54.99.98&amp;nbsp; &amp;nbsp; test.com&lt;/P&gt;&lt;P&gt;If not able to edit copy paste in different location and then change and paste again.&lt;/P&gt;&lt;P&gt;Now you will be able to see the connected CC in your BTP account as below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_18-1751906070243.png" style="width: 633px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283602iF17E5BA900AD483A/image-dimensions/633x313?v=v2" width="633" height="313" role="button" title="Subu1_18-1751906070243.png" alt="Subu1_18-1751906070243.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 20. Cloud Connector status in BTP&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Create a Destination Service&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Now lets create a destination service.&lt;/P&gt;&lt;P&gt;BTP (Business Technology Platform) destinations serve as configuration endpoints that define how to establish secure connections with external systems or services. Commonly used in cloud environments, these destinations facilitate communication between different cloud-based applications by specifying connection parameters like endpoint URLs, authentication methods, and additional settings. You can create and manage BTP destinations through the SAP BTP Cockpit or by using the SAP Cloud SDK. They are applicable in various use cases, including accessing external data sources, calling third-party web services, or delivering notifications to external platforms.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_19-1751906070248.png" style="width: 598px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283601i72C5196420226574/image-dimensions/598x296?v=v2" width="598" height="296" role="button" title="Subu1_19-1751906070248.png" alt="Subu1_19-1751906070248.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 21: Creating a Destination in SAP BTP&lt;/P&gt;&lt;P&gt;Maintain the below configuration details:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Name&lt;/STRONG&gt;: Name of your destination&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Type&lt;/STRONG&gt;: HTTP / HTTPS&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;URL&lt;/STRONG&gt;: Enter the virtual host name maintained in Cloud Connector&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Authentication&lt;/STRONG&gt;: Basic Authentication&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;User&lt;/STRONG&gt;: Enter the backend username&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Password&lt;/STRONG&gt;: Enter the corresponding password&lt;/P&gt;&lt;P&gt;In the additional properties maintain the below pairs:&lt;/P&gt;&lt;P&gt;"WebIDEEnabled": "true"&lt;/P&gt;&lt;P&gt;“HTML5.DynamicDestination” :"true"&lt;/P&gt;&lt;P&gt;"AppgyverEnabled" :"true"&lt;/P&gt;&lt;P&gt;“sap-platform”:”ABAP”&lt;/P&gt;&lt;P&gt;“sap.build.usage”:”true”&lt;/P&gt;&lt;P&gt;“webIDEUsage”:”odata_gen”&lt;/P&gt;&lt;P&gt;“sap-client”:”000”&lt;/P&gt;&lt;P&gt;These parameters are mantatory in certain ways to consume the destination service via SAP Build Code.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_20-1751906070251.png" style="width: 600px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283600i0B04CDAE458CE41B/image-dimensions/600x228?v=v2" width="600" height="228" role="button" title="Subu1_20-1751906070251.png" alt="Subu1_20-1751906070251.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 22. BTP Destination Service&lt;/P&gt;&lt;P&gt;Click on “Save” to save the destination and click on Check Destination to check if the connection is successful.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_21-1751906070255.png" style="width: 604px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283603iDC2D92901035ED43/image-dimensions/604x214?v=v2" width="604" height="214" role="button" title="Subu1_21-1751906070255.png" alt="Subu1_21-1751906070255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 23. Check Connection&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Create a SAP Build Code Project&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now lets create a SAP Build code project. Go to Instances and Subscription and click on SAP Build Code. Hope the SAP Build code is already subscribed to your sub account.&lt;/P&gt;&lt;P&gt;In the SAP Build Code click on Create to create a new project.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_22-1751906070263.png" style="width: 600px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283604i124A998BDCA1F71F/image-dimensions/600x216?v=v2" width="600" height="216" role="button" title="Subu1_22-1751906070263.png" alt="Subu1_22-1751906070263.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 24. Create a SAP Build Code project&lt;/P&gt;&lt;P&gt;Click on Application -&amp;gt; Next -&amp;gt; Full Stack -&amp;gt; Next -&amp;gt; Full stack Node.JS&lt;/P&gt;&lt;P&gt;Enter the name of the project and click on Review to review the details and then click on Create to create the project.&lt;/P&gt;&lt;P&gt;Once the project is created copy paste the below code:&lt;/P&gt;&lt;P&gt;For demonstration purposes, I have used an example involving the retrieval and modification of Purchase Order data.&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;from flask import Flask, request, jsonify
import os
import requests
import json
import base64

# ---------------------------------------------------------------------
# Application Initialization
# ---------------------------------------------------------------------
app = Flask(__name__)

# ---------------------------------------------------------------------
# Fetching port details
# ---------------------------------------------------------------------
cf_port = os.getenv("PORT")

# ---------------------------------------------------------------------
# Getting OAuth Token
# ---------------------------------------------------------------------
def get_oauth_token(destination_credentials):
    oauth_url = destination_credentials['url'] + "/oauth/token"
    client_id = destination_credentials['clientid']
    client_secret = destination_credentials['clientsecret']

    data = {
        'grant_type': 'client_credentials',
        'client_id': client_id,
        'client_secret': client_secret,
    }

    headers = {
        'Content-Type': 'application/x-www-form-urlencoded'
    }

    response = requests.post(oauth_url, data=data, headers=headers)

    if response.status_code == 200:
        return response.json()['access_token']
    else:
        raise Exception(f"Failed to get OAuth token: {response.status_code} - {response.text}")

# ---------------------------------------------------------------------
# Method to fetch records 
# ---------------------------------------------------------------------
def get_records(lv_dest, lv_string):
    # Get VCAP_SERVICES
    vcap_services = json.loads(os.getenv("VCAP_SERVICES"))

    # Get credentials for Destination service
    destination_credentials = vcap_services['destination'][0]['credentials']
    connectivity_credentials = vcap_services['connectivity'][0]['credentials']
    destination_name = lv_dest
    dest_token = get_oauth_token(destination_credentials)

    # Fetch destination config
    dest_url = f"{destination_credentials['uri']}/destination-configuration/v1/destinations/{destination_name}"
    headers = {"Authorization": f"Bearer {dest_token}"}
    dest_response = requests.get(dest_url, headers=headers)
    dest_response.raise_for_status()
    dest_config = dest_response.json()['destinationConfiguration']

    #  Build full URL
    target_url = dest_config['URL'] + lv_string

    # Token for Connectivity Proxy
    conn_token = get_oauth_token(connectivity_credentials)

    # Use Connectivity Proxy (Cloud Connector)
    proxies = {
        "http": f"http://{connectivity_credentials['onpremise_proxy_host']}:{connectivity_credentials['onpremise_proxy_port']}",
        "https": f"http://{connectivity_credentials['onpremise_proxy_host']}:{connectivity_credentials['onpremise_proxy_port']}"
    }

    backend_user = dest_config['User']
    backend_password = dest_config['Password']
    auth_string = f"{backend_user}:{backend_password}"
    auth_encoded = base64.b64encode(auth_string.encode()).decode()

    # Headers for proxy request
    headers = {
        "Accept": "application/json",
        "Proxy-Authorization": f"Bearer {conn_token}",
        "Authorization": f"Basic {auth_encoded}"
    }

    if 'CloudConnectorLocationId' in dest_config:
        headers['SAP-Connectivity-SCC-Location_ID'] = dest_config['CloudConnectorLocationId']

    # Make the proxied request
    response = requests.get(target_url, headers=headers, proxies=proxies)
    response.raise_for_status()
    print("Status:", response.status_code)
    print("Headers:", response.headers)
    print("Body:", response.text)
    return response.json()

# ---------------------------------------------------------------------
# Method to update a record
# ---------------------------------------------------------------------
def update_record(destination_name, path, payload):
    # Get VCAP_SERVICES
    vcap_services = json.loads(os.getenv("VCAP_SERVICES"))

    # Get credentials for Connectivity and Destination service
    destination_credentials = vcap_services['destination'][0]['credentials']
    connectivity_credentials = vcap_services['connectivity'][0]['credentials']
    dest_token = get_oauth_token(destination_credentials)

    # Destination config
    dest_url = f"{destination_credentials['uri']}/destination-configuration/v1/destinations/{destination_name}"
    headers = {"Authorization": f"Bearer {dest_token}"}
    dest_response = requests.get(dest_url, headers=headers)
    dest_response.raise_for_status()
    dest_config = dest_response.json()['destinationConfiguration']

    #  Build full URL
    target_url = dest_config['URL'] + path

    # Token for Connectivity Proxy
    conn_token = get_oauth_token(connectivity_credentials)

    # Use Connectivity Proxy (Cloud Connector)
    proxies = {
        "http": f"http://{connectivity_credentials['onpremise_proxy_host']}:{connectivity_credentials['onpremise_proxy_port']}",
        "https": f"http://{connectivity_credentials['onpremise_proxy_host']}:{connectivity_credentials['onpremise_proxy_port']}"
    }

    backend_user = dest_config['User']
    backend_password = dest_config['Password']
    auth_string = f"{backend_user}:{backend_password}"
    auth_encoded = base64.b64encode(auth_string.encode()).decode()

    # Headers for proxy request
    common_headers = {
        "Proxy-Authorization": f"Bearer {conn_token}",
        "Authorization": f"Basic {auth_encoded}",
        "Accept": "application/json"
    }

    if 'CloudConnectorLocationId' in dest_config:
        common_headers['SAP-Connectivity-SCC-Location_ID'] = dest_config['CloudConnectorLocationId']

    # Fetch CSRF Token and Cookies
    token_headers = common_headers.copy()
    token_headers["x-csrf-token"] = "Fetch"

    session = requests.Session()
    token_response = session.get(target_url, headers=token_headers, proxies=proxies)

    if token_response.status_code != 200:
        return token_response.status_code, token_response.text

    csrf_token = token_response.headers.get("x-csrf-token")
    if not csrf_token:
        return 403, "CSRF token not returned"

    # Send PATCH with token and cookies
    update_headers = common_headers.copy()
    update_headers["x-csrf-token"] = csrf_token
    update_headers["Content-Type"] = "application/json"

    # Use session to preserve cookies
    patch_response = session.patch(target_url, headers=update_headers, json=payload, proxies=proxies)

    return patch_response.status_code, patch_response.text

# ---------------------------------------------------------------------
# Update endpoint (POST or GET for testing)
# ---------------------------------------------------------------------
@app.route('/update_data', methods=['GET', 'POST'])
def update_data():
    if request.method == 'GET':
        purchase_order = "12345"
        item = "10"
        update_payload = {
            "DocumentCurrency": "EUR",
        }
    else:
        if not request.is_json:
            return jsonify({"error": "Request must be application/json"}), 415

        data = request.get_json()
        purchase_order = data.get("PurchaseOrder")
        item = data.get("PurchaseOrderItem")

        if not purchase_order or not item:
            return jsonify({"error": "Missing PurchaseOrder or PurchaseOrderItem"}), 400

        item = str(item).zfill(5)  # Pad item number to 5 digits

        update_payload = {
            "OrderQuantity": 15,
        }

    path = f"/sap/opu/odata4/sap/api_purchaseorder_2/srvd_a2x/sap/purchaseorder/0001/PurchaseOrderItem(PurchaseOrder='{purchase_order}',PurchaseOrderItem='{item}')?sap-client=001&amp;amp;$format=json" #Change the OData URL

    status_code, response_text = update_record('Destination_name', path, update_payload) #Modify Destination name

    return jsonify({
        "status_code": status_code,
        "response": response_text
    })

# ---------------------------------------------------------------------
# Fetch record endpoint
# ---------------------------------------------------------------------
@app.route('/fetch_data', methods=['GET'])
def fetch_data():
    lv_request = get_records('Destination_name', '/sap/opu/odata4/sap/api_purchaseorder_2/srvd_a2x/sap/purchaseorder/0001/PurchaseOrderItem?sap-client=001&amp;amp;$format=json') #Change Destination name and OData URL
    return jsonify(lv_request)

# ---------------------------------------------------------------------
# Home page
# ---------------------------------------------------------------------
@app.route('/', methods=['GET'])
def home():
    lv_return = {
        "result": [
            {
                'message':  'Welcome to the homepage!',
                'Fetch_data' : 'Use /fetch_data',
                'Update_data' : 'Use /update_data'
            }
        ]
    }
    return jsonify(status='200', replies=lv_return)


# ---------------------------------------------------------------------
# Main method
# ---------------------------------------------------------------------
if __name__ == '__main__':
# If the app is running locally
    if cf_port is None:
# Use port 5000
        app.run(host='0.0.0.0', port=5000, debug=True)
    else:
# Else use cloud foundry default port
        app.run(host='0.0.0.0', port=int(cf_port), debug=False)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Create a manifest.yml file and paste the below:&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;---
applications:
- name: data_read  #Replace with your app name
  random-route: true
  path: ./
  memory: 1028M
  buildpacks:
  - python_buildpack
  command: python backend.py  #Python file name
  services:
  - service_name_001
  env:
    PYTHON_VERSION: 3.11.10&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In the manifest.yml file above, most sections are self-explanatory and have been annotated with comments. The key part to focus on is the services section. To use the configured destination service, you need to create an instance of it. This service is crucial when your application needs to interact with remote systems, such as SAP S/4HANA Cloud, on-premise systems, or third-party APIs.&lt;/P&gt;&lt;P&gt;The destination service is bound to you app so that it can access the destination definition.&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;What happens behind the scene?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;When you bind the Destination Service to your app:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;BTP injects the credentials into your app's environment as VCAP_SERVICES&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Your app code can use a destination name to resolve:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The target URL&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Authentication method (Basic, OAuth2, etc.)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Proxy type (Internet or OnPremise)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you are connecting to an on-premise system, it routes through SAP Cloud Connector.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;How to create a service in BTP?&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Log in to SAP BTP Cockpit&lt;/LI&gt;&lt;LI&gt;Navigate to your subaccount → Cloud Foundry environment → Space.&lt;/LI&gt;&lt;LI&gt;Go to the Services -&amp;gt; Instances&amp;nbsp;section.&lt;/LI&gt;&lt;LI&gt;Click Create Instance.&lt;/LI&gt;&lt;LI&gt;Choose a Service&lt;SPAN&gt; (e.g.:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;"Destination" for Destination Service&lt;/LI&gt;&lt;LI&gt;"Connectivity" for accessing on-premise systems&lt;/LI&gt;&lt;LI&gt;"xsuaa" for user authentication/authorization&lt;/LI&gt;&lt;LI&gt;"hana-cloud" or postgresql for databases&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Choose a plan (e.g. lite, standard, etc.)&lt;/LI&gt;&lt;LI&gt;Enter the name&lt;/LI&gt;&lt;LI&gt;Click Create&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_0-1751923651041.png" style="width: 593px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283657i69E3B1708C898F44/image-dimensions/593x555?v=v2" width="593" height="555" role="button" title="Subu1_0-1751923651041.png" alt="Subu1_0-1751923651041.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 25. Create a service&lt;/P&gt;&lt;P&gt;Alternatively you can also create a service using bash command as below:&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;cf create-service destination lite service_name_001 #Replace with your service name&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once the coding is complete, you can proceed with testing the functionality.&lt;/P&gt;&lt;P&gt;Using terminal login to cloud foundry, use the command&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;cf login&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_1-1751911193537.png" style="width: 574px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283623i457FA664D3A81A60/image-dimensions/574x158?v=v2" width="574" height="158" role="button" title="Subu1_1-1751911193537.png" alt="Subu1_1-1751911193537.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 26. Login to CF&lt;/P&gt;&lt;P&gt;Once the login is successful you will see the below message&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_1-1751923900662.png" style="width: 583px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283658iDFB1A4C327B6F3D9/image-dimensions/583x169?v=v2" width="583" height="169" role="button" title="Subu1_1-1751923900662.png" alt="Subu1_1-1751923900662.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 27. CF login&lt;/P&gt;&lt;P&gt;After which you can deploy your app using the below command&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;cf push&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once the app is deployed navigate to the cloud foundry -&amp;gt; your space -&amp;gt; your app, get the application routes url for testing.&lt;/P&gt;&lt;P&gt;Use,&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;application_routes_url/&amp;nbsp; &amp;nbsp;&lt;/LI&gt;&lt;LI&gt;application_routes_url/fetch_data&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;application_routes_url/update_data&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Test results&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Home page&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_2-1751924285431.png" style="width: 524px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283661i0DD99C2D87ACB091/image-dimensions/524x309?v=v2" width="524" height="309" role="button" title="Subu1_2-1751924285431.png" alt="Subu1_2-1751924285431.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 28. Home page&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Fetch Data&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SubramaniyanVenkatraman_0-1752026985083.png" style="width: 618px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284347i95D36853D49AEA9B/image-dimensions/618x133?v=v2" width="618" height="133" role="button" title="SubramaniyanVenkatraman_0-1752026985083.png" alt="SubramaniyanVenkatraman_0-1752026985083.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 29. Fetch data via OData&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Integrating SAP BTP with SAP S/4HANA Cloud using the Destination Service and SAP Cloud Connector provides a secure and scalable way to extend your enterprise systems into the cloud. In this blog, we explored how to configure the necessary services, set up destinations, and connect a cloud application to S/4HANA Cloud to fetch and modify Purchase Order data using OData APIs.&lt;/P&gt;&lt;P&gt;Whether you're building a full-stack application or a lightweight service to automate business processes, understanding the role of Destination Service and Cloud Connector is critical to securely bridging the gap between your cloud apps and backend systems. This approach not only enhances flexibility but also ensures your architecture stays modular, maintainable, and cloud-ready.&lt;/P&gt;&lt;P&gt;I hope this blog serves as a helpful starting point for anyone new to SAP BTP and Destination service. Stay tuned for more hands-on insights and real-world examples from my journey with agentic use cases and enterprise integration!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/accessing-s-4hana-cloud-data-via-sap-build-code-on-the-sap-btp-platform/ba-p/14146303"/>
    <published>2025-07-16T11:09:48.847000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/demo-accessing-sap-with-generative-ai-in-microsoft-teams/ba-p/14150831</id>
    <title>Demo: Accessing SAP with Generative AI in Microsoft Teams</title>
    <updated>2025-07-21T03:13:01.221000+02:00</updated>
    <author>
      <name>prakashsaurav</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/12784</uri>
    </author>
    <content>&lt;P&gt;In this demo, we showcase how to bring SAP data closer to your teams by combining the power of Generative AI, Microsoft Copilot Studio, and Teams. Using SAP OData services exposed via SAP BTP Integration Suite, we build an intelligent Copilot agent that lets users retrieve sales orders, products, customers, and suppliers — all through simple natural language conversations. Whether it’s in Teams or Microsoft 365 Copilot, see how you can seamlessly access and interact with your SAP backend data, improving efficiency and transforming user experience.&lt;/P&gt;&lt;P&gt;&lt;A href="https://aditheos.com/2025/06/26/simplifying-sap-access-with-gen-ai-built-on-copilot-studio-integrated-via-sap-btp-azure-apim-delivered-in-teams-copilot/" target="_blank" rel="noopener nofollow noreferrer"&gt;Step by Step Implementation&lt;/A&gt;&amp;nbsp; &amp;nbsp;/&amp;nbsp;Access complete source code @&amp;nbsp;&lt;A href="https://github.com/aditheos/SalesAI" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FgdxKP7GCMn8%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DgdxKP7GCMn8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FgdxKP7GCMn8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="486" height="273" scrolling="no" title="Simplifying SAP Access with Gen AI | SAP BTP + Microsoft Copilot Studio Demo" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/demo-accessing-sap-with-generative-ai-in-microsoft-teams/ba-p/14150831"/>
    <published>2025-07-21T03:13:01.221000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/step-by-step-guide-to-display-system-details-on-sap-fiori-launchpad-shell/ba-p/14150404</id>
    <title>Step-by-Step Guide to Display System Details on SAP Fiori Launchpad Shell</title>
    <updated>2025-07-30T07:08:44.361000+02:00</updated>
    <author>
      <name>RahulManchala</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/175552</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Use Case:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In this blog, I’ll demonstrate how to display system details—such as the System ID and Client—or any custom text directly on the SAP Fiori Launchpad Shell.&lt;/P&gt;&lt;P&gt;This is achieved by creating a simple OData service in the backend and integrating it into a Shell Plugin using SAP Business Application Studio.&lt;/P&gt;&lt;P&gt;It's a useful enhancement to clearly identify the system context on the launchpad.&lt;/P&gt;&lt;H3 id="toc-hId-1864059470"&gt;Steps to Implement:&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;Create an OData service in SEGW TCode.&lt;/LI&gt;&lt;LI&gt;Create a project in BAS and integrate OData service to your project.&lt;/LI&gt;&lt;LI&gt;Modify only the Component.js and manifest.json files.&lt;/LI&gt;&lt;LI&gt;Deploy the application.&lt;/LI&gt;&lt;LI&gt;Create a Catalog and Target mapping.&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;Go to SEGW TCode and click on Create Project button.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;After that, provide the necessary details such as Project, Description, and Package. If saving as a Local Object, the Package field is not required.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_0-1752235298699.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285463i84BED0858E59E0D6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_0-1752235298699.png" alt="RahulManchala_0-1752235298699.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After creating the project, the following folders will be generated within the project.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_1-1752235298700.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285461iFCE49BFB63360448/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_1-1752235298700.png" alt="RahulManchala_1-1752235298700.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After that click on Generate Runtime Objects button.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_2-1752235298701.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285462i1008C3C07A1C4A99/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_2-1752235298701.png" alt="RahulManchala_2-1752235298701.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Some classes and services will be created. Click the Continue button to proceed.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_3-1752235298704.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285465iEFA7D498A40A53E4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_3-1752235298704.png" alt="RahulManchala_3-1752235298704.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Some class will be generated in Runtime Artifacts folder.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_4-1752235298705.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285466i346D9B346AA24F65/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_4-1752235298705.png" alt="RahulManchala_4-1752235298705.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Add the required properties in the Data Model folder.&lt;BR /&gt;To do this, right-click on the project and create an Entity Type.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_5-1752235298705.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285464i8C993AEA0B5123D9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_5-1752235298705.png" alt="RahulManchala_5-1752235298705.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Enter the Entity Type name, select 'Create Related Entity Set,' and click 'Continue'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_6-1752235298706.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285469i97EC1AFC57082406/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_6-1752235298706.png" alt="RahulManchala_6-1752235298706.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Entity types is created in Data Model Folder.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_7-1752235298707.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285468i3883FCE4600DB477/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_7-1752235298707.png" alt="RahulManchala_7-1752235298707.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now double click on properties and Append SYSID and CLIENT in entity types.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_8-1752235298709.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285470iEA18507C30530693/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_8-1752235298709.png" alt="RahulManchala_8-1752235298709.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the Runtime Artifacts folder, right-click on DPC_EXT and select 'Go to ABAP Workbench'.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_9-1752235298710.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285471i43C87DACEE4E29A7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_9-1752235298710.png" alt="RahulManchala_9-1752235298710.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the Methods folder, expand the Inherited Methods folder. Right-click on the Get_EntitySet method and select 'Redefine' to override it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_10-1752235298714.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285473i23310EEE3AC77E05/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_10-1752235298714.png" alt="RahulManchala_10-1752235298714.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Go to redefined method and activate it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_11-1752235298716.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285472iCBF1CFF3C2CCD59F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_11-1752235298716.png" alt="RahulManchala_11-1752235298716.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Paste the following code into your Entity Set and activate it.&lt;/P&gt;&lt;P&gt;The RSAPI_CTC_GET_SYSTEM_DETAILS function module, provided by SAP, retrieves the System ID and Logon Client.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_12-1752235298719.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285475iC4A3A5EEE32201B6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_12-1752235298719.png" alt="RahulManchala_12-1752235298719.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now register and activate the service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_13-1752235298721.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285474i14F70FB636A8AE43/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_13-1752235298721.png" alt="RahulManchala_13-1752235298721.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create a project in BAS and integrate OData service to your project.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_14-1752235298726.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285476i1994F6512870FEC0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_14-1752235298726.png" alt="RahulManchala_14-1752235298726.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_15-1752235298729.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285479iAB5E873184AB06D0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_15-1752235298729.png" alt="RahulManchala_15-1752235298729.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Set the data source to 'Connect to System.' The systems added in the destination will be displayed here.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_16-1752235298732.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285478iC507ACC9694BED57/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_16-1752235298732.png" alt="RahulManchala_16-1752235298732.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here, I am selecting the S4 system.&lt;/P&gt;&lt;P&gt;Provide the service name and click on Next button.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_18-1752235298736.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285481i825B182DDE48946E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_18-1752235298736.png" alt="RahulManchala_18-1752235298736.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Provide View Name and click on Next button.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_19-1752235298739.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285480i4133DE90381E4934/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_19-1752235298739.png" alt="RahulManchala_19-1752235298739.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Enter the Project Attributes such as Project Name, Application Title, and Namespace, then click the 'Finish' button.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_20-1752235298743.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285482i9BE6BCA770266891/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_20-1752235298743.png" alt="RahulManchala_20-1752235298743.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the manifest.json file, change the type to "component".&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_21-1752235298744.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285483i8FBD8F80C0E3A8A0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_21-1752235298744.png" alt="RahulManchala_21-1752235298744.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Paste the following code inside the init function of the Component.js file and make the necessary changes based on your service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_22-1752235298745.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285484i629526D27F7136C5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_22-1752235298745.png" alt="RahulManchala_22-1752235298745.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_23-1752235298749.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285485i04E9509E96B8C027/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_23-1752235298749.png" alt="RahulManchala_23-1752235298749.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Run the application in local by using npm run start command.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Output:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_24-1752235298750.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285487iE4F7ED43BF505AE2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_24-1752235298750.png" alt="RahulManchala_24-1752235298750.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;After deploying the file to your system, I deployed my application to an on-premises system.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In Open Integrated Terminal.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Provide the Command npm run deploy-config and provide necessary details.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_25-1752235298751.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285486i36FAE202EFB38303/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_25-1752235298751.png" alt="RahulManchala_25-1752235298751.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;npm run build.&lt;/LI&gt;&lt;LI&gt;npm run deploy.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Now you can see your application with BSP name in SE80 Tcode.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_26-1752235298754.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285488iE90F7C8389ACACED/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_26-1752235298754.png" alt="RahulManchala_26-1752235298754.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Next, create a Catalog ID in the designer URL and set up target mapping for that catalog. No need of creation Tile for catalog.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_27-1752235298757.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285489iA5EDD412824F5657/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_27-1752235298757.png" alt="RahulManchala_27-1752235298757.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The URL should be the SICF path of your deployed application.&lt;/LI&gt;&lt;LI&gt;The ID should be the manifest ID.&lt;/LI&gt;&lt;LI&gt;The Semantic Object should be Shell, and the Action should be Plugin.&lt;/LI&gt;&lt;LI&gt;Assign roles to users.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Output on FLP:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RahulManchala_1-1753208374029.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289954iE6DC88C28F58D315/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RahulManchala_1-1753208374029.png" alt="RahulManchala_1-1753208374029.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;By following the steps outlined in this blog, you’ve successfully built and deployed a &lt;STRONG&gt;Shell Plugin&lt;/STRONG&gt; that dynamically displays system-specific details like the &lt;STRONG&gt;System ID&lt;/STRONG&gt; and &lt;STRONG&gt;Client&lt;/STRONG&gt; on the &lt;STRONG&gt;Fiori Launchpad&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Thanks,&lt;/P&gt;&lt;P&gt;Venkata Rahul M.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/step-by-step-guide-to-display-system-details-on-sap-fiori-launchpad-shell/ba-p/14150404"/>
    <published>2025-07-30T07:08:44.361000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-community-escape-house-for-august-fiori-element-with-flexible/ba-p/14167685</id>
    <title>SAP Community Escape House for August - Fiori Element with Flexible Programming Model</title>
    <updated>2025-08-04T10:10:14.915000+02:00</updated>
    <author>
      <name>AmarUbhe</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/163102</uri>
    </author>
    <content>&lt;P&gt;The &lt;STRONG&gt;eighth edition of the SAP Developer Challenge 2025&lt;/STRONG&gt; has officially kicked off!&amp;nbsp; A brand-new room has opened its doors inside the &lt;A title="SAP Community Escape House" href="https://sap-community-escape-house.cfapps.us10.hana.ondemand.com/" target="_self" rel="noopener noreferrer"&gt;&lt;STRONG&gt;SAP Community Escape House&lt;/STRONG&gt;&lt;/A&gt;.&amp;nbsp; Hope you all escaped alive from the SAP Application Event Hub room last month.&amp;nbsp;&lt;/P&gt;&lt;P&gt;In this developer challenge, we are focusing on &lt;STRONG&gt;SAP Fiori&lt;/STRONG&gt;&amp;nbsp;&lt;STRONG&gt;Element&lt;/STRONG&gt; and the &lt;STRONG&gt;Flexible Programming Model&lt;/STRONG&gt;. We are going to cover topics like:&lt;/P&gt;&lt;P&gt;FPM - Extension Points&lt;/P&gt;&lt;P&gt;FPM - Building Block&lt;/P&gt;&lt;P&gt;FPM - Controller Extension&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1607028261"&gt;Prerequisite&lt;/H1&gt;&lt;P&gt;You have to clone the repository from:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A class="" href="https://github.com/SAP-samples/fiori-elements-fpm-exercises-codejam.git" target="_new" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-samples/fiori-elements-fpm-exercises-codejam.git&lt;/A&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;For this challenge, you will be working in the &lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;finished-bookshop&lt;/STRONG&gt;&lt;/FONT&gt; folder. This folder contains a completed CAP project that serves as the starting point for exploring extensibility using the &lt;STRONG&gt;Flexible Programming Model&lt;/STRONG&gt; with &lt;STRONG&gt;SAP Fiori Elements&lt;/STRONG&gt;.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;All extension tasks, including UI enhancements and controller customizations, will be implemented on top of this &lt;STRONG&gt;CAP project&lt;/STRONG&gt;. Inside this project, there is an existing &lt;STRONG&gt;Fiori Elements List Report application&lt;/STRONG&gt; named &lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;bookshop-ui&lt;/STRONG&gt;&lt;/FONT&gt;, which serves as the foundation for this challenge.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;You will extend this application using the &lt;STRONG&gt;Flexible Programming Model&lt;/STRONG&gt;, applying techniques such as &lt;STRONG&gt;Fiori extension points&lt;/STRONG&gt;, &lt;STRONG&gt;building blocks&lt;/STRONG&gt;, and &lt;STRONG&gt;controller extensions&lt;/STRONG&gt; to tailor the UI and behavior according to developer challenge.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1604971530" id="toc-hId-1410514756"&gt;How to participate&lt;/H1&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;Visit the&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://sap-community-escape-house.cfapps.us10.hana.ondemand.com/" target="_blank" rel="noopener noreferrer"&gt;SAP Community Escape House&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;and enter your&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;numeric&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;SAP Community user ID.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP Community Escape House" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294502iD7D2B0DE57B525D6/image-size/large?v=v2&amp;amp;px=999" role="button" title="EscapeHouseLogin.png" alt="SAP Community Escape House" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;SAP Community Escape House&lt;/span&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;If you're unsure of your user ID, you can find it on your user settings page url.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Goto&amp;nbsp;&lt;A href="https://community.sap.com/" target="_blank"&gt;SAP Community Page.&amp;nbsp;&lt;/A&gt;Click on &lt;STRONG&gt;Account&lt;/STRONG&gt;&lt;SPAN&gt; and then select &lt;/SPAN&gt;&lt;STRONG&gt;My content&lt;/STRONG&gt;&lt;SPAN&gt;.&amp;nbsp;You can find the community user ID in the web page URL.&amp;nbsp;Once you see the SAP Community Escape House, select the SAP Fiori Element room and start exploring it.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-04_12-46-25.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295893i23ED69E595E5DFC1/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-04_12-46-25.png" alt="2025-08-04_12-46-25.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-04_12-52-54.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295894i166823321F4BC64A/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-04_12-52-54.png" alt="2025-08-04_12-52-54.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-04_12-57-20.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295895i1820808AC4717E2C/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-04_12-57-20.png" alt="2025-08-04_12-57-20.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;The user interface of an escape room includes the room itself as well as a terminal. You can click the objects in the room to receive tips.&amp;nbsp;Like in a real (physical) escape room, you will have to try out a few things and explore the room until you receive helpful tips and, eventually, instructions. These tips and instructions are printed in the terminal next to the room.&amp;nbsp;The terminal is also used to submit solutions to tasks. Read the instructions you receive carefully to understand how.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AmarUbhe_0-1753958354704.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294531i139DAD5126DEE294/image-size/large?v=v2&amp;amp;px=999" role="button" title="AmarUbhe_0-1753958354704.png" alt="AmarUbhe_0-1753958354704.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;If you successfully escape the room (you will know when that happens), you will receive a badge in the SAP Community.&amp;nbsp;We will assign the badges once the challenge closes.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1408458025" id="toc-hId-1214001251"&gt;The schedule&lt;/H1&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The SAP Fiori room will be unlocked on August 4th and will stay unlocked until the end of the year. However, the challenge closes on August 31st, so you must escape the room until then to qualify for a badge. Unlike the previous year, this SAP Developer Challenge does not consist of weekly sub-challenges. The next room (next challenge) will be unlocked in September.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1376249370" id="toc-hId-1017487746"&gt;Useful links for the challenge&lt;/H1&gt;&lt;UL&gt;&lt;LI&gt;Flexible Programming Model :&amp;nbsp;&lt;A title="Flexible Programming Model" href="https://sapui5.hana.ondemand.com/test-resources/sap/fe/core/fpmExplorer/index.html#/overview/introduction" target="_self" rel="nofollow noopener noreferrer"&gt;https://sapui5.hana.ondemand.com/test-resources/sap/fe/core/fpmExplorer/index.html#/overview/introduction&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Fiori Element OData V4 :&amp;nbsp;&lt;A href="https://developers.sap.com/group.fiori-tools-odata-v4-incident.html" target="_self" rel="noopener noreferrer"&gt;https://developers.sap.com/group.fiori-tools-odata-v4-incident.html&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;FPM Code Jam :&amp;nbsp;&lt;A href="https://github.com/SAP-samples/fiori-elements-fpm-exercises-codejam/tree/main?tab=readme-ov-file" target="_self" rel="nofollow noopener noreferrer"&gt;https://github.com/SAP-samples/fiori-elements-fpm-exercises-codejam/tree/main?tab=readme-ov-file&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Good luck and happy escaping!&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-community-escape-house-for-august-fiori-element-with-flexible/ba-p/14167685"/>
    <published>2025-08-04T10:10:14.915000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/api-to-delete-gos-attachment-from-transaction-code-amp-their-applications/ba-p/14170904</id>
    <title>API to Delete GOS Attachment from Transaction Code &amp; their Applications</title>
    <updated>2025-08-11T12:26:01.244000+02:00</updated>
    <author>
      <name>vikas_naikdesai</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/243708</uri>
    </author>
    <content>&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;This technical blog is subject to simplify process of attachment deletion and how best way it can be applicable to act as an API.&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We have come across multiple technical blogs on attachment( can be PDF, image or MS Office objects) in the specific T-Code of the Transactions, such as for Sales Order, Billing Invoice or other relevant business transactions.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we will focus on the business requirement to delete an already enclosed/attached one of the attachment&amp;nbsp; in the Inspection Lot(QA03) Transaction and methods of implementations.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The solution is bifurcated in the simple &lt;STRONG&gt;3 steps and we will use a simple and straight standard class (&lt;STRONG&gt;CL_GOS_DOCUMENT_SERVICE) which will be generic to use for other transactions as well.&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Step 1. Pass Object Types Object Key along with Doc ID&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Step 2: Call DELETE_ATTACHMENT method of CL_GOS_DOCUMENT_SERVICE Class&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;Step 3: Commit and wait.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;P&gt;&lt;STRONG&gt;Code Snippet will give a complete solution&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;***************************************************************************************************&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;** Work area declare&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  DATA: LS_LPORB    TYPE SIBFLPORB,
        LS_LINK     TYPE OBL_S_LINK. 

DATA: LO_REF TYPE REF TO CL_GOS_DOCUMENT_SERVICE.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;************************* &lt;U&gt;Step 1 ***************************************&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/U&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;** Value assignment&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    LS_LPORB-INSTID = &amp;lt;Key Field&amp;gt; . "Pass Key field, in this case it can be Inspection Lot Number
    LS_LPORB-TYPEID = &amp;lt;Business Object&amp;gt;. "For Example 'BUS2045'Business Object of Inspection Lot
    LS_LPORB-CATID  = &amp;lt;Object Type&amp;gt;. " For Example'BO' Object Type
    LS_LINK-INSTID_B = &amp;lt;Doc ID&amp;gt;. “Pass Doc ID here  &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;*********************** &lt;U&gt;Step 2 *************************************&lt;/U&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;** Calling Standard Class&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CREATE OBJECT LO_REF.

  CALL METHOD LO_REF-&amp;gt;DELETE_ATTACHMENT
    EXPORTING
      IS_LPORB      = IS_LPORB
      IP_ATTACHMENT = IS_LINK-INSTID_B.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;*************************** &lt;U&gt;Step 3 ******************************&lt;/U&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  COMMIT WORK AND WAIT.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;***************************************************************************************************&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;U&gt;&lt;STRONG&gt;Application&lt;/STRONG&gt;&lt;/U&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Above Snippet can be fix in the below box, shows a simple Application approach interface with UI/BTP or any Non-SAP application sending request via any Interface or middle layer can be Odata service using SAP gateway using Client-Server response methodology.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Simple above code snippet can be placed as part of API logic which will perform its deletion operation in the SAP Transactions such as Inspection Lot/Sales Order/Billing Invoice.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;Deletion of attached document can be deleted by using simple standard class.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Will come up with another series technical developments around Inspection Lot.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vikas_naikdesai_0-1754305452490.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295967iA66A0C5D21EFE53A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vikas_naikdesai_0-1754305452490.png" alt="vikas_naikdesai_0-1754305452490.png" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/api-to-delete-gos-attachment-from-transaction-code-amp-their-applications/ba-p/14170904"/>
    <published>2025-08-11T12:26:01.244000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/behavior-illegal-statement-dump-technical-workarounds/ba-p/14174594</id>
    <title>BEHAVIOR_ILLEGAL_STATEMENT dump | Technical workarounds</title>
    <updated>2025-08-11T13:40:55.450000+02:00</updated>
    <author>
      <name>PranayGaroo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2116915</uri>
    </author>
    <content>&lt;P&gt;If you're working with SAP RAP, you've probably encountered the infamous&amp;nbsp;&lt;FONT color="#FF0000"&gt;BEHAVIOR_ILLEGAL_STATEMENT&lt;/FONT&gt;&amp;nbsp;dump.&lt;/P&gt;&lt;P&gt;This dump could occur when the following statements are made in a RAP context:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Explicit use of COMMIT WORK or ROLLBACK WORK statements&lt;/STRONG&gt;&amp;nbsp;- the transaction handling and database commit is exclusively handled by RAP&lt;/LI&gt;&lt;/OL&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Calling update or enqueue functions&lt;/STRONG&gt;&amp;nbsp;that bypass RAP's controlled transaction flow&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Direct database modifications&lt;/STRONG&gt;&amp;nbsp;outside of RAP's managed approach.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Understanding the Core Challenge&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The core challenge lies in RAP’s approach to transaction management. The RAP transactional model is built on the concept of Logical Unit of Work (LUW), which ensures data consistency and integrity by treating all operations within a transaction as a single, indivisible unit. It includes a late-save phase followed by a cleanup. RAP follows a&amp;nbsp;&lt;STRONG&gt;controlled Logical Unit of Work (LUW)&lt;/STRONG&gt;&amp;nbsp;pattern with two distinct phases:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Interaction Phase&lt;/STRONG&gt;: Data modifications are stored in a transactional buffer&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Save Sequence&lt;/STRONG&gt;: Data is validated and persisted to the database&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;On the other hand, a COMMIT WORK statement that immediately persist changes to the database. When these two approaches collide, you get runtime errors that can halt your application.&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Available Solution or Workaround&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Our goal is to call our explicit commit or any other ‘Illegal statement’ in a different task. There are four ways to do that:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;BGPF (Background Processing Framework)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;SAP Documentation - : &lt;A href="https://help.sap.com/docs/abap-cloud/abap-concepts/background-processing-framework" target="_blank" rel="noopener noreferrer"&gt;Background Processing Framework | SAP Help Portal&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Parallel Processing &lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Implementation Examples :- &lt;A href="https://software-heroes.com/en/blog/abap-cloud-parallel-processing" target="_blank" rel="noopener nofollow noreferrer"&gt;ABAP Cloud - Parallel processing&lt;/A&gt; , &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/two-different-types-of-parallel-processing-examples/ba-p/13247548" target="_blank"&gt;Two Different types of Parallel Processing example... - SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Application Jobs for background Processing &lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Implementation Examples :- &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/example-implementation-using-interfaces-if-apj-dt-exec-object-and-if-apj-rt-exec-object" target="_blank" rel="noopener noreferrer"&gt;Example Implementation Using Interfaces IF_APJ_DT_EXEC_OBJECT and IF_APJ_RT_EXEC_OBJECT | SAP Help Portal&lt;/A&gt; ,&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;A href="https://learning.sap.com/learning-journeys/administrating-the-sap-s-4hana-cloud-public-edition/introducing-application-jobs_cf77594e-9dd1-454b-b8d1-05079dfee508" target="_blank" rel="noopener noreferrer"&gt;Introducing Application Jobs&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;RFC Workaround (On-Premise Only)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;We can create a wrapper RFC FM with our logic and call that using DESTINATION 'NONE' statement. Which will be called in a different task.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;U&gt;&lt;STRONG&gt;Note :&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;This workaround are not supported by Cloud Environments.&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/behavior-illegal-statement-dump-technical-workarounds/ba-p/14174594"/>
    <published>2025-08-11T13:40:55.450000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/pagination-concept-in-odata-ecc-for-sp-7-3/ba-p/14170923</id>
    <title>Pagination concept in OData - ECC for SP - 7.3</title>
    <updated>2025-08-12T08:07:32.133000+02:00</updated>
    <author>
      <name>vikas_naikdesai</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/243708</uri>
    </author>
    <content>&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;This technical blog will open option to include pagination concept in Odata Service running on ECC system.&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;This article is specific for developer who are still developing Odata Services on ECC on Pagination Concept.&lt;/P&gt;&lt;P&gt;There are multiple blogs available&amp;nbsp; on Pagination on S4 system but eventually same concept or logical approach is challenging while working in the ECC system.&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;How pagination works in S4 HANA system&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;Will talk on the existing solutioning part on S4 end before we come to ECC.&lt;/P&gt;&lt;P&gt;There are two keywords being used to restrict the count -&amp;nbsp;&lt;SPAN&gt;one is&amp;nbsp;&lt;STRONG&gt;$top&lt;SPAN&gt;&amp;nbsp;and the other is&amp;nbsp;&lt;STRONG&gt;$skip.&amp;nbsp;&amp;nbsp;Both of the them play roles to restrict the count. I will not go in details about their operations as there are already existing blogs on it.&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In S4, above keywords are used in the follows syntax to perform Pagination.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; SELECT &amp;lt;field1&amp;gt;,&lt;DIV&gt;&lt;SPAN&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;field2&amp;gt;,&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;fieldn&amp;gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;DIV&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; FROM &amp;lt;SAP DB table&amp;gt;&lt;DIV&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ORDER by &amp;lt;Key_field&amp;gt;&lt;DIV&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;INTO TABLE @&amp;lt;internal_table&amp;gt;&lt;DIV&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; OFFSET @paging-skip UP TO @paging-top ROWS.&lt;DIV&gt;&amp;nbsp;&lt;DIV&gt;&lt;U&gt;&lt;U&gt;&lt;STRONG&gt;Challenge in ECC system&lt;/STRONG&gt;&lt;/U&gt;&lt;/U&gt;&lt;DIV&gt;But when it comes to ECC, above syntax difficult to apply directly as SKIP &amp;amp; ROWS are being used with OFFSET and UPTO keywords, which are not applicable for SAP-ECC system.&lt;DIV&gt;&amp;nbsp;&lt;DIV&gt;&lt;U&gt;&lt;U&gt;&lt;STRONG&gt;Solution&lt;/STRONG&gt;&lt;/U&gt;&lt;/U&gt;&lt;DIV&gt;But, there are other approaches to handle paging in ECC. Here instead of restricting at the time of data fetch using SELECT query, will narrate how paging can be used using SAP standard class.&lt;DIV&gt;Below steps to follow to implement pagination in ECC system.&lt;DIV&gt;1. Pull&lt;SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;STRONG&gt;TOP&lt;SPAN&gt;&amp;nbsp;&amp;amp;&lt;SPAN&gt;&amp;nbsp;&lt;STRONG&gt;SKIP&lt;SPAN&gt;&amp;nbsp;from&amp;nbsp;&lt;STRONG&gt;IO_TECH_REQUEST_CONTEXT&amp;nbsp;into work area.&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;DIV&gt;2. Use&lt;SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;STRONG&gt;PAGING&lt;SPAN&gt;&amp;nbsp;Method of SAP Utility Class -&amp;nbsp;&lt;STRONG&gt;/IWBEP/CL_MGW_DATA_UTIL.&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;DIV&gt;3. Pass work area with TOP &amp;amp; SKIP in&lt;SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;STRONG&gt;PAGING&lt;SPAN&gt;&amp;nbsp;method.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;DIV&gt;&amp;nbsp;&lt;DIV&gt;Working Code is below&lt;DIV&gt;******************Data Declaration ***************************&lt;DIV&gt;&lt;P&gt;DATA: WA_PAGING TYPE /IWBEP/S_MGW_PAGING.&lt;/P&gt;&lt;P&gt;******************Assign Top &amp;amp; Bottom***********************&lt;/P&gt;&lt;P&gt;WA_PAGING-TOP = IO_TECH_REQUEST_CONTEXT-&amp;gt;GET_TOP( ).&lt;BR /&gt;WA_PAGING-SKIP = IO_TECH_REQUEST_CONTEXT-&amp;gt;GET_SKIP( ).&lt;/P&gt;&lt;P&gt;****************Call Data Utility Class*************************&lt;BR /&gt;CALL METHOD /IWBEP/CL_MGW_DATA_UTIL=&amp;gt;PAGING&lt;BR /&gt;&amp;nbsp; EXPORTING&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;IS_PAGING = WA_PAGING&lt;BR /&gt;&amp;nbsp; CHANGING&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; CT_DATA = &amp;lt;ENTITY_SET&amp;gt;.&amp;nbsp; "This table can be EntitySet of Odata Service&lt;/P&gt;&lt;DIV&gt;&amp;nbsp;&lt;DIV&gt;&lt;U&gt;&lt;U&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/U&gt;&lt;/U&gt;&lt;DIV&gt;CT_DATA will have only specific number of counts (Skip &amp;amp; Top) as specified in the URI.&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/pagination-concept-in-odata-ecc-for-sp-7-3/ba-p/14170923"/>
    <published>2025-08-12T08:07:32.133000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-use-odata-v4-to-get-billing-document-price-elements/ba-p/14179370</id>
    <title>How to use oData V4 to get Billing Document Price Elements</title>
    <updated>2025-08-15T05:45:44.304000+02:00</updated>
    <author>
      <name>KeithZhou</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1762936</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1608008445"&gt;Prerequisites&lt;/H1&gt;&lt;P&gt;Your have created CC user with Scenrio ID ‘SAP_COM_0120’ &amp;nbsp;for API test.&lt;/P&gt;&lt;H1 id="toc-hId-1411494940"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-1214981435"&gt;Get Pricing Elements&lt;/H1&gt;&lt;P&gt;1.&amp;nbsp;Get url in Communication Arrangement, here we take CC3-702 as example&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="url.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300805iEBFB447D58BA3C59/image-size/large?v=v2&amp;amp;px=999" role="button" title="url.png" alt="url.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.&amp;nbsp;Using Bruno to get pricing elements, take PricingDocumentElement as exmaple. URI: &lt;A href="https://cc3-702.devsys.net.sap/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument('90010713')/_PricingDocument/_PricingDocumentElement?$count=true" target="_blank" rel="noopener nofollow noreferrer"&gt;https://cc3-702.devsys.net.sap/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument('90010713')/_PricingDocument/_PricingDocumentElement?$count=true&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bruno.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300804iE6F689F295EC93DE/image-size/large?v=v2&amp;amp;px=999" role="button" title="bruno.png" alt="bruno.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. Resonse result analysis.&lt;/P&gt;&lt;TABLE width="930"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;&lt;STRONG&gt;Property&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;PricingDocument(key)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Key that identifies a set of conditions that apply to the billing document.&lt;/P&gt;&lt;P&gt;Used to identify different conditions, for example, when the purchasing and sales departments want to use the same number for a document but different conditions apply in each area.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;PrcgDocumentHostObjectNodeID(key)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Key that specifies the document number of the billing document containing the pricing elements. For example 91234567.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;PrcgDocHostObjSONTInUppercase(key)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Specifies the SAP object node type.&lt;/P&gt;&lt;P&gt;In the context of the current API, the value is always&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;BILLINGDOCUMENT&lt;/STRONG&gt;&lt;/SPAN&gt;&amp;nbsp;(uppercase mandatory).&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;PricingProcedureStep(key)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Number in the header pricing procedure that identifies the sequence in which conditions (of a specific condition type) or subtotals are determined.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;PricingDocumentElementCounter(key)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Access number of the conditions within a step in the header pricing procedure.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionType&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Key that uniquely identifies the condition type.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;PriceElementDescription&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Description of the pricing element.&lt;/P&gt;&lt;P&gt;A pricing element can be a price condition (when a condition type is specified) or a subtotal of various price conditions (when no condition type is specified).&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionClass&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;The preliminary structure of condition types.&lt;/P&gt;&lt;P&gt;Possible values:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;A&lt;/STRONG&gt;&lt;/SPAN&gt;: Discounts or Surcharges&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;B&lt;/STRONG&gt;&lt;/SPAN&gt;: Prices&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;C&lt;/STRONG&gt;&lt;/SPAN&gt;: Expense Reimbursement&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;D&lt;/STRONG&gt;&lt;/SPAN&gt;: Taxes&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;E&lt;/STRONG&gt;&lt;/SPAN&gt;: Extra Pay&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;F&lt;/STRONG&gt;&lt;/SPAN&gt;: Fees or Differential (only IS-OIL)&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;G&lt;/STRONG&gt;&lt;/SPAN&gt;: Tax Classification&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;H&lt;/STRONG&gt;&lt;/SPAN&gt;: Determining Sales Deal&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Q&lt;/STRONG&gt;&lt;/SPAN&gt;: Totals Record for Fees (only IS-OIL)&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;W&lt;/STRONG&gt;&lt;/SPAN&gt;: Wage Withholding Tax&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;P&lt;/STRONG&gt;&lt;/SPAN&gt;: Compare Price Protection&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionCalculationType&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Determines how the system calculates prices, discounts, or surcharges in a condition.&lt;/P&gt;&lt;P&gt;To retrieve all code list values, you can use the SAP object node type&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;PriceConditionCalculationType&lt;/STRONG&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionRateAmount&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;The condition amount, that is, the rate of a condition based on an amount, such as a material price. The corresponding currency property is&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;ConditionCurrency&lt;/STRONG&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionCurrency&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Currency for the condition amount.&lt;/P&gt;&lt;P&gt;To retrieve all code list values, you can use the SAP object node type&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;Currency&lt;/STRONG&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionQuantity&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;The condition pricing unit, which is a quantity on which the condition amount or the condition ratio is based.&lt;/P&gt;&lt;P&gt;For example, a customer and a supplier agree on a material price for 100 pieces. The quantity "100" is the condition pricing unit, the unit "pieces" is the condition unit, the combination “100 pieces” is the pricing unit.&lt;/P&gt;&lt;P&gt;The corresponding properties for the condition unit are&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;ConditionQuantitySAPUnit&lt;/STRONG&gt;&lt;/SPAN&gt;&amp;nbsp;and&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;ConditionQuantityISOUnit&lt;/STRONG&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionBaseQuantity&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Quantity of a condition basis.&lt;/P&gt;&lt;P&gt;Depending on the calculation type, the system can calculate the condition value of a price condition by multiplying the condition amount with the condition basis that contains a quantity and a unit of measure.&lt;/P&gt;&lt;P&gt;The corresponding properties for the unit of measure are&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;ConditionQuantitySAPUnit&lt;/STRONG&gt;&lt;/SPAN&gt;&amp;nbsp;and&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;ConditionQuantityISOUnit&lt;/STRONG&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionQuantityISOUnit&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;The quantity unit to which the condition amount refers (ISO code).&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionQuantitySAPUnit&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;The quantity unit to which the condition amount refers (SAP code, the format found in the database without conversions).&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionRateRatio&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;The condition ratio, that is, the rate of a condition based on a ratio, such as percent or per mille.&lt;/P&gt;&lt;P&gt;The corresponding properties for the unit of measure are&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;ConditionRateRatioSAPUnit&lt;/STRONG&gt;&lt;/SPAN&gt;&amp;nbsp;and&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;ConditionRateRatioISOUnit&lt;/STRONG&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionRateRatioISOUnit&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;The unit of measure for the condition ratio (ISO code).&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionRateRatioSAPUnit&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;The unit of measure for the condition ratio (SAP code, the format found in the database without conversions).&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionAmount&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;The condition value for a particular condition, total, or subtotal.&lt;/P&gt;&lt;P&gt;The corresponding currency property is TransactionCurrency.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionBaseAmount&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Amount of a condition basis.&lt;/P&gt;&lt;P&gt;Depending on the calculation type, the system can calculate the condition value of a price condition by multiplying the condition ratio with the condition basis that contains an amount and a currency.&lt;/P&gt;&lt;P&gt;The corresponding currency property is&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;TransactionCurrency&lt;/STRONG&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;TransactionCurrency&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;The document currency that applies to your billing document.&lt;/P&gt;&lt;P&gt;To retrieve all code list values, you can use the SAP object node type&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;Currency&lt;/STRONG&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;TaxCode&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Represents a tax category that must be considered for tax reporting to the tax authorities.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;VariantCondition&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;A variant condition that determines the valid price components of a customizable product.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionOrigin&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Indicates where the condition originated, for example, whether you entered the condition manually or whether the system determined it automatically.&lt;/P&gt;&lt;P&gt;Possible values:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;A&lt;/STRONG&gt;&lt;/SPAN&gt;: Automatic Pricing&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;B&lt;/STRONG&gt;&lt;/SPAN&gt;:Duplicated from Main Item&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;C&lt;/STRONG&gt;&lt;/SPAN&gt;: Manually Entered&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;D&lt;/STRONG&gt;&lt;/SPAN&gt;: Header Condition&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;E&lt;/STRONG&gt;&lt;/SPAN&gt;: Item Total&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;F&lt;/STRONG&gt;&lt;/SPAN&gt;: Condition Supplement&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;G&lt;/STRONG&gt;&lt;/SPAN&gt;: Original Header Condition&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;H&lt;/STRONG&gt;&lt;/SPAN&gt;: Correction Rebate&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;I&lt;/STRONG&gt;&lt;/SPAN&gt;: Cost Correction&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionInactiveReason&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Indicates whether the condition is active.&lt;/P&gt;&lt;P&gt;Possible values:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;A&lt;/STRONG&gt;&lt;/SPAN&gt;: Condition exclusion item&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;K&lt;/STRONG&gt;&lt;/SPAN&gt;: Inactive due to calculation basis/shipping material type&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;L&lt;/STRONG&gt;&lt;/SPAN&gt;: Condition exclusion header or inactive at header level&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;M&lt;/STRONG&gt;&lt;/SPAN&gt;: Inactive due to manual entry&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;T&lt;/STRONG&gt;&lt;/SPAN&gt;: Inactive at header level&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;W&lt;/STRONG&gt;&lt;/SPAN&gt;: The document item is statistical&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;X&lt;/STRONG&gt;&lt;/SPAN&gt;: Inactive via formulas or incorrect&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Y&lt;/STRONG&gt;&lt;/SPAN&gt;: Inactive because of subsequent price&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionIsManuallyChanged&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Indicates whether the condition has been manually or automatically changed or created.&lt;/P&gt;&lt;P&gt;Possible values:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;True&lt;/LI&gt;&lt;LI&gt;False&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="296.188px"&gt;&lt;P&gt;ConditionIsForStatistics&lt;/P&gt;&lt;/TD&gt;&lt;TD width="532.812px"&gt;&lt;P&gt;Indicates whether a surcharge or discount is to be set in the business document statistically (that is, without altering the value).&lt;/P&gt;&lt;P&gt;Possible values:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;True&lt;/LI&gt;&lt;LI&gt;False&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H1 id="toc-hId-1018467930"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-821954425"&gt;Helpful Information&lt;/H1&gt;&lt;P&gt;&lt;A href="https://api.sap.com/api/sap-s4-CE_BILLINGDOCUMENT_0001-v1/resource/Header" target="_self" rel="noopener noreferrer"&gt;Billing Document API Hub&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-754523639"&gt;Pricing Document Elements URI&lt;/H2&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100.75px"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="2597.84px"&gt;&lt;P&gt;&lt;STRONG&gt;URI&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="100.75px"&gt;&lt;P&gt;Get All&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="2597.84px"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument('90002126')/_PricingDocument/_PricingDocumentElement?$count=true&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="100.75px"&gt;&lt;P&gt;Get By Key&lt;/P&gt;&lt;/TD&gt;&lt;TD width="2597.84px"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument('90002126')/_PricingDocument/_PricingDocumentElement(PricingDocument='0000042797',PrcgDocumentHostObjectNodeID='0090002126',PrcgDocHostObjSONTInUppercase='BILLINGDOCUMENT',PricingProcedureStep='020',PricingDocumentElementCounter='001')&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="100.75px"&gt;&lt;P&gt;Get by filter&lt;/P&gt;&lt;/TD&gt;&lt;TD width="2597.84px"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument('90002126')/_PricingDocument/_PricingDocumentElement?$filter=ConditionType eq 'PPR0'&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="100.75px"&gt;&lt;P&gt;Get by expand&lt;/P&gt;&lt;/TD&gt;&lt;TD width="2597.84px"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument('90002126')?$expand=_PricingDocument($expand=_PricingDocumentElement)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="100.75px"&gt;&lt;P&gt;Get by top/skip&lt;/P&gt;&lt;/TD&gt;&lt;TD width="2597.84px"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument('90002126')/_PricingDocument/_PricingDocumentElement?$top=1&amp;amp;$skip=6&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="100.75px"&gt;&lt;P&gt;Get multiple document, header elements by expand&lt;/P&gt;&lt;/TD&gt;&lt;TD width="2597.84px"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument?$filter=BillingDocument eq '90002134' or BillingDocument eq '90002126'&amp;amp;$expand=_PricingDocument($expand=_PricingDocumentElement)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-558010134"&gt;Pricing Document Item Element URI&lt;/H2&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="115"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="600"&gt;&lt;P&gt;&lt;STRONG&gt;URI&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="115"&gt;&lt;P&gt;Get All by item key&lt;/P&gt;&lt;/TD&gt;&lt;TD width="606"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument/90002126/_PricingDocument/_PricingDocumentItem/0000042797/90002126/BILLINGDOCUMENT/10/_PricingDocumentItemElement&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="117"&gt;&lt;P&gt;Get doc items and elements by expand&lt;/P&gt;&lt;/TD&gt;&lt;TD width="604"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument/90002126/_PricingDocument/_PricingDocumentItem?$expand=_PricingDocumentItemElement&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="117"&gt;&lt;P&gt;Get one item by filter and all elements by expand&lt;/P&gt;&lt;/TD&gt;&lt;TD width="604"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument/90002126/_PricingDocument/_PricingDocumentItem?$filter=PricingDocumentItem eq '10' &amp;amp;$expand=_PricingDocumentItemElement&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="115"&gt;&lt;P&gt;Get one by element key&lt;/P&gt;&lt;/TD&gt;&lt;TD width="606"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument/90002126/_PricingDocument/_PricingDocumentItem/0000042797/90002126/BILLINGDOCUMENT/10/_PricingDocumentItemElement/20/1&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="115"&gt;&lt;P&gt;Get one by filter&lt;/P&gt;&lt;/TD&gt;&lt;TD width="606"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument/90002126/_PricingDocument/_PricingDocumentItem/0000042797/90002126/BILLINGDOCUMENT/10/_PricingDocumentItemElement?$filter=ConditionType eq 'PPR0'&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="115"&gt;&lt;P&gt;Get one by top/skip&lt;/P&gt;&lt;/TD&gt;&lt;TD width="606"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument/90002126/_PricingDocument/_PricingDocumentItem/0000042797/0090002126/BILLINGDOCUMENT/10/_PricingDocumentItemElement?$top=1&amp;amp;$skip=8&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="117"&gt;&lt;P&gt;Get multiple document, header elements, items, item elements by expand&lt;/P&gt;&lt;/TD&gt;&lt;TD width="605"&gt;&lt;P&gt;/sap/opu/odata4/sap/api_billingdocument/srvd_a2x/sap/billingdocument/0001/BillingDocument?$filter=BillingDocument eq '90002134' or BillingDocument eq '90002126'&amp;amp;$expand=_PricingDocument($expand=_PricingDocumentElement,_PricingDocumentItem($expand=_PricingDocumentItemElement))&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-use-odata-v4-to-get-billing-document-price-elements/ba-p/14179370"/>
    <published>2025-08-15T05:45:44.304000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/multi-origin-service-testing-and-troubleshooting-in-sap-gateway/ba-p/14179256</id>
    <title>Multi-Origin Service Testing and Troubleshooting in SAP Gateway</title>
    <updated>2025-08-19T11:39:24.298000+02:00</updated>
    <author>
      <name>Ravikumar_H1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1386926</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;In this blog, I’ll walk you through:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;How to test multi-origin services in SAP Gateway&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;How to pass the correct system alias in requests&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;How to debug and troubleshoot common issues&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Real examples and outputs&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1866172866"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;1. Quick Refresher: What’s Multi-Origin in SAP Gateway?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Multi-origin lets you use a &lt;STRONG&gt;single OData service definition&lt;/STRONG&gt; and pull data from multiple backend systems.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Which backend you hit is controlled by the System Alias in Gateway and selected by passing $system in the request.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;/sap/opu/odata/SAP/ZSALES_ORDER_SRV/$metadata?$system=ERPCLNT100&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Here, ERPCLNT100 is the &lt;STRONG&gt;system alias&lt;/STRONG&gt; defined in /IWFND/MAINT_SERVICE.&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1669659361"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;2. How I Test Multi-Origin OData Services&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-1602228575"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Step 1 – Check the Aliases First&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Before sending any request, I always check if the right aliases are even there.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;T-Code: /IWFND/MAINT_SERVICE → search for your service → open &lt;STRONG&gt;System Aliases&lt;/STRONG&gt; tab.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Example setup:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;If the alias isn’t listed here, $system won’t work — no matter how perfect your URL looks.Service Name Version System Alias Default&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ravikumar_H1_0-1755081484695.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300337i763C162CC714A87D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ravikumar_H1_0-1755081484695.png" alt="Ravikumar_H1_0-1755081484695.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;If the alias isn’t listed here, $system won’t work — no matter how perfect your URL looks.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Step 2 – Use the Gateway Client&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;T-Code:&lt;/STRONG&gt; /IWFND/GW_CLIENT&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Service URL example:&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-swift"&gt;&lt;code&gt;/sap/opu/odata/SAP/ZSALES_ORDER_SRV/SalesOrders?$top=5&amp;amp;$system=S4HCLNT200&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;After execution, if the data comes from the intended backend, you’re good.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Sample JSON snippet from my test:&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "d": {
    "results": [
      {
        "SalesOrder": "50001234",
        "CreatedBy": "USER1",
        "SalesOrg": "1000"
      }
    ]
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-1405715070"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Step 3 – Test Outside SAP&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;If the service is active, you can also test from a browser or Postman:&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-ruby"&gt;&lt;code&gt;https://&amp;lt;gateway_host&amp;gt;:&amp;lt;port&amp;gt;/sap/opu/odata/SAP/ZSALES_ORDER_SRV/SalesOrders?$system=ERPCLNT100&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;This is handy when you want to share the request with someone in another team.&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1080118846"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;3. Troubleshooting – Real Cases I’ve Faced&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Case 1 – $system Ignored&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Symptom: No matter what you pass, data always comes from the default system.&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Fix: Ensure both aliases are active and $system exactly matches the alias name (not the RFC destination name).&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Case 2 – 500 Internal Server Error&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;I’ve hit this when the RFC destination wasn’t configured in SM59 or the backend service wasn’t active.&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Fix: Activate the service in /IWBEP/REG_SERVICE in the backend and test the RFC destination.&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Case 3 – 403 Forbidden&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Happens when the user has Gateway access but no backend role.&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Fix: Assign the required /IWBEP/ authorizations in the backend.&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-883605341"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;4. Debugging Multi-Origin Requests&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Option 1 – Gateway Side&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;T-Code: /IWFND/TRACES → enable trace → run your request → check “System Alias Used”.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Sample trace output:&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;System Alias: S4HCLNT200
Backend RFC: SAP_S4H_200
Execution Time: 512 ms&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;Option 2 – Backend Side&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Set an external breakpoint in your *_DPC_EXT class method in SE80/SE24.&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;When you call the service with $system, the debugger will trigger in the correct backend if the routing is working.&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-687091836"&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;&lt;STRONG&gt;5. My Go-To Best Practices&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Always test each alias separately before enabling multi-origin in production.&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Keep alias names intuitive and consistent across landscapes.&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Use Postman collections for each alias to speed up re-testing.&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Keep an eye on performance — I’ve seen the same service respond in 200 ms from one backend and 3 seconds from another.&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT face="arial,helvetica,sans-serif"&gt;Conclusion:&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Testing and Troubleshooting multi-origin in OData is not just about passing $system in the URL — it’s about ensuring the entire connection chain works, from &lt;STRONG&gt;alias mapping&lt;/STRONG&gt; to &lt;STRONG&gt;backend service activation&lt;/STRONG&gt;. By combining SAP Gateway tools like /IWFND/GW_CLIENT, /IWFND/TRACES, and backend debugging, you can quickly pinpoint and resolve issue.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/multi-origin-service-testing-and-troubleshooting-in-sap-gateway/ba-p/14179256"/>
    <published>2025-08-19T11:39:24.298000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/consuming-the-parameterized-cds-view-using-odata-in-datasphere/ba-p/14185997</id>
    <title>Consuming the Parameterized CDS View using OData in Datasphere</title>
    <updated>2025-08-21T10:44:06.036000+02:00</updated>
    <author>
      <name>ankitsharma_71</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/371656</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1608818637"&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;Consuming a parameterized CDS view in SAP Datasphere requires a workaround due to the platform's current limitations. Parameters cannot be directly passed from Datasphere to CDS views.&lt;BR /&gt;&lt;BR /&gt;To address this, we use an OData service and configure a connection with Datasphere to replicate the data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1412305132"&gt;&lt;SPAN&gt;Requirement and Solution Approach&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;We take the example of the standard CDS View **I_AssetBalanceCube**, which consists of Fiscal Year and Fiscal Period input parameters.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ansharm71_0-1755758151201.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303352iEE69E35E00C6A3FA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ansharm71_0-1755758151201.png" alt="ansharm71_0-1755758151201.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;- The requirement is to calculate dynamic values for fiscal year/period based on the system date, pass them to input parameters, and extract the specific period data in Datasphere.&lt;BR /&gt;&lt;BR /&gt;- Another requirement is to extract data for any specific year and period using the TVARV table and passing the values to input parameters in the CDS view.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1215791627"&gt;&lt;SPAN&gt;Steps&lt;/SPAN&gt;&lt;/H1&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Created an ABAP class **ZCLFI_ASSET_BALANCE_DATA** with method **GET_ASSET_BALANCE** to fetch the asset balance records. This class is passed to the OData section, which passes logic to the input parameter of **I_AssetBalanceCube**.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/SPAN&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ansharm71_0-1755760016577.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303371iD67380B994D48046/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ansharm71_0-1755760016577.png" alt="ansharm71_0-1755760016577.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD get_asset_balance.

    DATA : lv_fiscalyear TYPE fis_gjahr,
           lv_fisperiod  TYPE fis_poper.

    DATA : v_year  TYPE fis_gjahr,
           v_month TYPE n LENGTH 2,
           v_day   TYPE n LENGTH 2,
           v_high  TYPE sydate,
           v_low   TYPE sydate.


    CONSTANTS : lc_keyfig                TYPE c LENGTH 10 VALUE 'AHS',
                lc_keyfig_plan           TYPE c LENGTH 10 VALUE 'AHS_PLAN',
                lc_fiscal_asst_balanc    TYPE c LENGTH 30 VALUE 'ZFI_DS_ABFISCALYEAR',
                lc_fisperiod_asst_balanc TYPE c LENGTH 30 VALUE 'ZFI_DS_FISCALPERIOD',
                lc_type                  TYPE c VALUE 'P'.

*--------------------------------------------------------------------*
* Get the fixed values from TVARVC
*--------------------------------------------------------------------*
* Get TVARV variable GJAHR - Fiscal Year
    zclca_utility_cloud=&amp;gt;get_tvarv( EXPORTING iv_name = lc_fiscal_asst_balanc iv_type = lc_type IMPORTING et_tvarv = DATA(lt_fiscal) ).

* Extract the year and the month from Sysdate
    v_month = sy-datum+4(2).

    lv_fiscalyear = VALUE #( lt_fiscal[ 1 ]-low OPTIONAL ).

    IF lv_fiscalyear IS INITIAL.

      CASE v_month.
        WHEN '10'.
          lv_fiscalyear =  sy-datum(4) + 1.
        WHEN '11'.
          lv_fiscalyear =  sy-datum(4) + 1.
        WHEN '12'.
          lv_fiscalyear =  sy-datum(4) + 1.
        WHEN OTHERS.
          lv_fiscalyear =  sy-datum(4).

      ENDCASE.
*      lv_fiscalyear =  sy-datum(4) - 1.
      v_low = |{ sy-datum(4) - 1 }| &amp;amp; |10| &amp;amp; |01|.   "For Asset Capitalization Date
    ELSE.
* If TVARV variable GJAHR - Fiscal Year is available then calculate Low value Capitalization Date
      v_low = |{ lv_fiscalyear - 1 }| &amp;amp; |10| &amp;amp; |01|.   "For Asset Capitalization Date

    ENDIF.

* Get TVARV variable POPER - Fiscal Period
    zclca_utility_cloud=&amp;gt;get_tvarv( EXPORTING iv_name = lc_fisperiod_asst_balanc iv_type = lc_type IMPORTING et_tvarv = DATA(lt_fisperiod) ).

    lv_fisperiod = VALUE #( lt_fisperiod[ 1 ]-low OPTIONAL ).
    IF lv_fisperiod IS INITIAL.
*      lv_fisperiod = sy-datum+4(2).
      CASE v_month.
        WHEN '10'.
          lv_fisperiod =  '001'.
        WHEN '11'.
          lv_fisperiod =  '002'.
        WHEN '12'.
          lv_fisperiod =  '003'.

      ENDCASE.

    ENDIF.

* Fetch the data based on TVARV table
* business required AssetAccountingKeyFigureSet 'AHS' and 'AHS_PLAN' data in single parameter
* So segregate the two select statement and combine both data in one final internal table it_asst_balance_data

    SELECT
      FROM I_AssetBalanceCube( P_AssetAccountingKeyFigureSet = _keyfig,
                                 P_FiscalYear = _fiscalyear,
                                 P_FiscalPeriod = _fisperiod,
                                 P_KeyDate =  )  WITH
      PRIVILEGED ACCESS
*                                      INTO TABLE (lt_data).
      FIELDS *
      WHERE AssetCapitalizationDate &amp;gt;= @v_low AND AssetCapitalizationDate &amp;lt;= 
      INTO TABLE (lt_data).
*this is AssetAccountingKeyFigureSet 'AHS_PLAN'
    SELECT
    FROM I_AssetBalanceCube( P_AssetAccountingKeyFigureSet = _keyfig_plan,
                               P_FiscalYear = _fiscalyear,
                               P_FiscalPeriod = _fisperiod,
                               P_KeyDate =  )  WITH
    PRIVILEGED ACCESS
    FIELDS *
    WHERE AssetCapitalizationDate &amp;gt;= @v_low AND AssetCapitalizationDate &amp;lt;= 
    APPENDING TABLE _data.


    LOOP AT lt_data ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_data&amp;gt;).
      APPEND INITIAL LINE TO it_asst_balance_data ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_asset&amp;gt;).

      &amp;lt;lfs_asset&amp;gt; = CORRESPONDING #( &amp;lt;lfs_data&amp;gt; ).

    ENDLOOP.


  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Created an OData Project **ZFI_FOR_ASSET_BALANCE** and structure. **ZFIS_ASSET_BALANCE_ODATA**.&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ansharm71_5-1755758745261.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303357i94BF22CDEBBFC35F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ansharm71_5-1755758745261.png" alt="ansharm71_5-1755758745261.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Generated OData service **ZFI_FOR_ASSET_BALANCE_SRV.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ansharm71_6-1755758773720.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303358i2EEF9EEC04417121/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ansharm71_6-1755758773720.png" alt="ansharm71_6-1755758773720.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Created the **DPC_EXT Class - ZCL_ZFI_FOR_ASSET_BALA_DPC_EXT** and redefined the method **ASSET_BALANCESET_GET_ENTITYSET**. This method calls the data provider class `zclfi_asset_balance_data=&amp;gt;get_asset_balance` and passes it to the OData exporting entity set.&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&amp;nbsp;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ansharm71_15-1755759240016.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303368iCD2D7AB682573580/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ansharm71_15-1755759240016.png" alt="ansharm71_15-1755759240016.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Generated OData URL for connection-&lt;SPAN&gt;&lt;A href="https://vhcuhs4xcs.sap.***.com.au:44300/sap/opu/odata/sap/ZFI_FOR_ASSET_BALANCE_SRV`" target="_blank" rel="noopener nofollow noreferrer"&gt;https://vhcuhs4xcs.sap.***.com.au:44300/sap/opu/odata/sap/ZFI_FOR_ASSET_BALANCE_SRV` &lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Created and configured the OData connection in Datasphere and validated it.&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ansharm71_8-1755758803033.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303360i2CD076D3AF595BEC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ansharm71_8-1755758803033.png" alt="ansharm71_8-1755758803033.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&amp;nbsp;&lt;SPAN&gt;&lt;SPAN&gt;In the Data Builder, created a Dataflow to replicate data from the OData connection.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ansharm71_0-1755764501015.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303401i70207A7B57D409C1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ansharm71_0-1755764501015.png" alt="ansharm71_0-1755764501015.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The flow was then executed. Data was loaded into a Datasphere local table based on the input parameter logic written in the ABAP class method.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ansharm71_12-1755758917943.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303364iC52A826A44866864/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ansharm71_12-1755758917943.png" alt="ansharm71_12-1755758917943.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1019278122"&gt;&lt;SPAN&gt;Output&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;The data is successfully replicated in the local Datasphere table.&lt;BR /&gt;You can also replicate data from the local table to a non-SAP target (such as ADLS) by creating a replication flow and using the local table as the source.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-822764617"&gt;&lt;SPAN&gt;Conclusion&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;Using OData as a workaround enables the consumption of parameterized CDS views in SAP Datasphere. This approach ensures flexibility in handling dynamic and specific parameter values, allowing seamless integration with SAP and non-SAP targets.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/consuming-the-parameterized-cds-view-using-odata-in-datasphere/ba-p/14185997"/>
    <published>2025-08-21T10:44:06.036000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/odata-deep-insert-implementation-and-real-life-examples/ba-p/14147054</id>
    <title>OData Deep Insert: Implementation and Real-Life Examples</title>
    <updated>2025-09-15T08:37:09.070000+02:00</updated>
    <author>
      <name>SRSATAPATHY</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/150881</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Understanding OData Deep Insert in SAP: A Practical Overview&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is OData Deep Insert?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;OData Deep Insert is used when we need to create a main record along with its related records in one go. For example, if we're creating a sales order and want to include multiple items in that order, instead of calling the service multiple times (once for the header and once for each item), we can just send everything together in one request. This helps reduce the number of API calls and keeps things more efficient.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Where Is It Used?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s say we’re placing a new sales order:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The &lt;STRONG&gt;header&lt;/STRONG&gt; contains information like the customer, order date, and total value.&lt;/LI&gt;&lt;LI&gt;The &lt;STRONG&gt;items&lt;/STRONG&gt; include details such as product, quantity, and price.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With Deep Insert, we can send both the header and item data together in one single payload. This is useful in real-time integrations or web applications where performance and fewer network calls matter.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;How to Implement It in SAP OData&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Define the Entity Model in SEGW&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;We’ll need to create two entity types:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SalesOrder: Represents the header.&lt;/LI&gt;&lt;LI&gt;SalesOrderItem: Represents the line items.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Then create an association between them, showing that a sales order can have multiple items.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Redefine &lt;/STRONG&gt;&lt;STRONG&gt;CREATE_DEEP_ENTITY&lt;/STRONG&gt;&lt;STRONG&gt; in DPC_EXT Class&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This is where we will handle the payload in the backend.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD create_deep_entity.
  DATA: ls_header_input  TYPE zcl_zdeep_demo_mpc=&amp;gt;ts_salesorder,
        lt_item_input    TYPE STANDARD TABLE OF zcl_zdeep_demo_mpc=&amp;gt;ts_salesorderitem,
        ls_item_input    TYPE zcl_zdeep_demo_mpc=&amp;gt;ts_salesorderitem,
        ls_order_header  TYPE bapisdhd1,
        lt_items         TYPE STANDARD TABLE OF bapisditm,
        ls_item          TYPE bapisditm,
        lt_partners      TYPE STANDARD TABLE OF bapiparnr,
        ls_partner       TYPE bapiparnr,
        lt_return        TYPE STANDARD TABLE OF bapiret2,
        ls_return        TYPE bapiret2,
        lv_salesdoc      TYPE vbak-vbeln.

  " Extract header &amp;amp; item data from payload
  ls_header_input = is_deep_entity.
  lt_item_input   = is_deep_entity-toitems.

  " Map header to BAPI structure
  ls_order_header-doc_type   = 'OR'.    " Order type
  ls_order_header-sales_org  = '1000'.
  ls_order_header-distr_chan = '10'.
  ls_order_header-division   = '00'.

  " Add Sold-to Party (AG)
  CLEAR ls_partner.
  ls_partner-partn_role = 'AG'.
  ls_partner-partn_numb = ls_header_input-customer.
  APPEND ls_partner TO lt_partners.

  " Optionally, Ship-to Party (WE) same as Sold-to
  CLEAR ls_partner.
  ls_partner-partn_role = 'WE'.
  ls_partner-partn_numb = ls_header_input-customer.
  APPEND ls_partner TO lt_partners.

  " Map item data
  LOOP AT lt_item_input INTO ls_item_input.
    CLEAR ls_item.
    ls_item-itm_number = ls_item_input-itemid.
    ls_item-material   = ls_item_input-material.
    ls_item-target_qty = ls_item_input-quantity.
    APPEND ls_item TO lt_items.
  ENDLOOP.

  " Call BAPI
  CALL FUNCTION 'BAPI_SALESORDER_CREATEFROMDAT2'
    EXPORTING
      order_header_in  = ls_order_header
    IMPORTING
      salesdocument    = lv_salesdoc
    TABLES
      return           = lt_return
      order_items_in   = lt_items
      order_partners   = lt_partners.

  " Check for any errors (E/A/X)
  LOOP AT lt_return INTO ls_return WHERE type = 'E' OR 
                                         type = 'A' OR 
                                         type = 'X'.
    RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
      EXPORTING
        textid  = /iwbep/cx_mgw_busi_exception=&amp;gt;business_error
        message = ls_return-message.
  ENDLOOP.

  " Commit work
  CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
    EXPORTING
      wait = abap_true.
  " Fill deep entity response
  er_deep_entity-salesorderid = lv_salesdoc.
  er_deep_entity-customer     = ls_header_input-customer.
  er_deep_entity-orderdate    = ls_header_input-orderdate.

ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Make sure both header and items are saved in the same transaction to maintain consistency.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Testing&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;We can test this service using Postman or /IWFND/GW_CLIENT in SAP. A sample payload might look like:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;{
  "Customer": "1000001",
  "OrderDate": "2025-08-05T00:00:00",
  "ToItems":[{ "ItemID": "10",
               "Material": "MATERIAL001",
               "Quantity": 5 },
             { "ItemID": "20",
               "Material": "MATERIAL002",
               "Quantity": 3 } ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ss.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302769iE1EDD7255AA54B4C/image-size/large?v=v2&amp;amp;px=999" role="button" title="ss.png" alt="ss.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Common Issues and Solutions&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Items not saving?&lt;/STRONG&gt;&lt;BR /&gt;Check if the association and navigation are correctly defined.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;CREATE_DEEP_ENTITY not triggered?&lt;/STRONG&gt;&lt;BR /&gt;Make sure you've redefined the method and mapped the navigation properly in SEGW.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data inconsistency after commit?&lt;/STRONG&gt;&lt;BR /&gt;Handle errors correctly and roll back changes if needed.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Real-World Example&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;A retail company has a frontend ordering app. When a customer checks out, the app sends the order header and all items in one payload using Deep Insert. The backend saves everything in one shot, ensuring performance and data consistency.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;In Summary&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Deep Insert in OData is extremely helpful when dealing with parent-child relationships like orders and order items. It reduces complexity and improves performance by eliminating multiple round-trips to the server. When implemented correctly, it can streamline our data entry scenarios and backend integration.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/odata-deep-insert-implementation-and-real-life-examples/ba-p/14147054"/>
    <published>2025-09-15T08:37:09.070000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/successfactors-api-using-oauth-authentication-method-via-sap-offline-saml/ba-p/14217261</id>
    <title>SuccessFactors API using OAuth authentication method via SAP Offline SAML Assertion generator</title>
    <updated>2025-09-17T12:13:14.200000+02:00</updated>
    <author>
      <name>ajitchirania88</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11152</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760118616"&gt;Introduction&lt;/H2&gt;&lt;P&gt;When integrating with SAP SuccessFactors, secure authentication is critical. Since &lt;STRONG&gt;HTTP Basic Authentication is deprecated&lt;/STRONG&gt;, SAP recommends using &lt;STRONG&gt;OAuth 2.0 authentication&lt;/STRONG&gt; for API access. A commonly used approach is the &lt;STRONG&gt;OAuth 2.0 SAML Bearer Assertion flow&lt;/STRONG&gt;, where a signed SAML assertion is exchanged for an OAuth access token.&lt;/P&gt;&lt;P&gt;For scenarios where interactive login is not possible (e.g., background jobs, middleware integrations), SAP provides an &lt;STRONG&gt;Offline SAML Assertion Generator&lt;/STRONG&gt;. This tool enables the creation of signed SAML assertions offline, which can then be used to authenticate securely against SuccessFactors APIs.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1563605111"&gt;1. Prerequisites&lt;/H2&gt;&lt;P&gt;Before starting, ensure the following setup is in place:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;API&amp;nbsp; User&lt;/STRONG&gt;: A dedicated SuccessFactors API user exists&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Certificates&lt;/STRONG&gt;:&lt;/P&gt;Private key available to sign SAML assertions (used by the Offline Generator).&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;OAuth Client&lt;/STRONG&gt;: Configured in SuccessFactors, with required API permissions.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Please see below the step by step guide to configure :&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;TASK 1 - Registering Your OAuth2 Client Application in Successfactors&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Create an Odata API user SF_ODATA_API in SuccessFactors with the required permissions:&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Registering Your OAuth2 Client Application in Successfactors:&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_0-1757929464156.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314360i92380C54C54A6231/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_0-1757929464156.png" alt="ajitchirania88_0-1757929464156.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;By default, the company name will come here:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_1-1757929464159.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314362i9EDE9F09F0A4E419/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_1-1757929464159.png" alt="ajitchirania88_1-1757929464159.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now fill the required details: &lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Application Name: You can use any name here but ideally you should prefer to give a name who will be using the Oauth for connect to the SuccessFactors so that it will be easy for any consultant to understand which Application is using Oauth for SuccessFactors. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Description: Give some logical description about the set up or you can keep this blank as well. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Application URL: You can pass any URL of the company requesting for the setup of Oauth . For example let’s say if my company&amp;nbsp; is XYZ trying to use this Oauth then you can put the URL as &lt;A href="https://xyx.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://xyx.com&lt;/A&gt;&lt;/SPAN&gt; , if CPI is using this Oauth then provide the CPI URL here &lt;A href="https://XYX6Z.tmn.hci.eu1.hana.ondemand.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://XYX6Z.tmn.hci.eu1.hana.ondemand.com&lt;/A&gt; , if google is using this then give &lt;SPAN&gt;&lt;A href="https://google.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://google.com&lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;LI&gt;Bind to users: (Optional) You can enable this option to restrict the access of the application to specific users including business users and technical users. This is not required to check.&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;User IDs: Ideally, we don’t bind with users so that anyone can access it. It is r&lt;/SPAN&gt;equired if you enabled the&amp;nbsp;Bind to User&amp;nbsp;option (if point 4 is enabled), Enter the user IDs separated by comma who can only access the Oauth.&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;X-509 Certificate: Click the button below to Generate X.509 certificate and it will open a window as shown below:&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;Click below button:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_2-1757929464160.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314361i5A335F7F8BB51417/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_2-1757929464160.png" alt="ajitchirania88_2-1757929464160.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It will open a window as shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_3-1757929464162.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314363iCE1A2376D4A9539F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_3-1757929464162.png" alt="ajitchirania88_3-1757929464162.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;If you see closely only one field is mandatory here i.e. the common Name (CN) and here, you can put the Odata API username which you have created in the first step i.e. SF_ODATA_API. &lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Please fill the username in the Common Name (CN) field and click on generate: After you click on Generate the below window will open. Download and copy the certificate and keep it in your local folder.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_4-1757929464169.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314365i26C3FD61AE213C1E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_4-1757929464169.png" alt="ajitchirania88_4-1757929464169.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Click on Register so that API key will be generated: Once you click Register then it will take you to the below screen:&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_5-1757929464172.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314364i12FC6751EC62D4ED/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_5-1757929464172.png" alt="ajitchirania88_5-1757929464172.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Click on View to see the API key:&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_6-1757929464177.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314367i68A3ADBFA63B15C0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_6-1757929464177.png" alt="ajitchirania88_6-1757929464177.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;So, the registration is successful in Successfactors and till this step we have the below details with us: Keep all the information in your local drive so that you can find it quickly. &lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Odata API user: SF_ODATA_API&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;X-509 Certificate: Please note you can use the certificate from the downloaded file in the step no 8 when you open the downloaded file you can see two things inside the file one is the private key encrypted and other one is Begin of certificate and end of certificate. Please note we must choose the Private key encrypted file for the SAML generation later using command prompt in this document. &lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_7-1757929464186.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314368i565E5FE7AC18AB85/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_7-1757929464186.png" alt="ajitchirania88_7-1757929464186.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;API Key:&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_8-1757929464186.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314366iFB3CB2A32CB28B5A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_8-1757929464186.png" alt="ajitchirania88_8-1757929464186.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN&gt;You can also edit, disable, and delete an OAuth2 client registration.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;TASK 2 - Generating a SAML Assertion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Generate a Security Assertion Markup Language (SAML) assertion for requesting an OAuth&amp;nbsp;&amp;nbsp;&amp;nbsp; token. I am going to explain how you can generate the SAML Assertion locally.&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Downloading the Maven file &lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;You can download the maven file using the below link, this will help us to generate the SAML assertion which we will be using for the Oauth call using the postman: &lt;A href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener nofollow noreferrer"&gt;https://maven.apache.org/download.cgi&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Download the below Zip file: &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Binary zip archive&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; apache-maven-3.9.6-bin.zip&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_9-1757929464192.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314371iF095223772F37BDD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_9-1757929464192.png" alt="ajitchirania88_9-1757929464192.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click the link above and download the zip file in your local PC: The file will look like as shown below. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_10-1757929464193.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314369i736A15C09145D2E8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_10-1757929464193.png" alt="ajitchirania88_10-1757929464193.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Unzip the file and keep in the below folder in C drive.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_11-1757929464194.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314370iC67C692CE3EFD335/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_11-1757929464194.png" alt="ajitchirania88_11-1757929464194.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Install the JDK latest version, you can easily get the free version if you search in google. &lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;Choose the one which is required for your operating system. When you download and install, it will create the file in C drive as shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_12-1757929464195.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314373i705C5F08C17207DE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_12-1757929464195.png" alt="ajitchirania88_12-1757929464195.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Use the command prompt and pass CD\ to go to the root directory i.e. C drive. &amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_13-1757929464196.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314374iEE2C4ADE6D9B62AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_13-1757929464196.png" alt="ajitchirania88_13-1757929464196.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;Press Enter and you will use the below steps to confirm that maven and JDK installed :&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;CD\: To go to main directory&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;echo %JAVA_HOME%: To check the Java Home&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;java -version to check whether jdk installed properly with which version.&lt;EM&gt;&amp;nbsp;&amp;nbsp; &lt;/EM&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_14-1757929464199.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314372i29912793B485C428/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_14-1757929464199.png" alt="ajitchirania88_14-1757929464199.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;cd C:\apache-maven-3.9.6\bin: It will reach the directory C:\apache-maven-3.9.6\bin&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Use mvn -v to check the Maven Apache version as seen below. &lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_15-1757929464201.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314378i3F17C86481E81D59/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_15-1757929464201.png" alt="ajitchirania88_15-1757929464201.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Now we are confirming that Maven and JDK latest version are installed in the system.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Change the system environment variables by searching the settings in the start button of your PC.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_16-1757929464203.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314375i71F3130639D04520/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_16-1757929464203.png" alt="ajitchirania88_16-1757929464203.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Click on the environment Variables and below window will open:&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_17-1757929464206.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314377iBDD4C19B51E7ECE5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_17-1757929464206.png" alt="ajitchirania88_17-1757929464206.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on New and add the below details both in User variables as well as the System Variables, give the variable name as PATH and variable value as the location of the maven file, in my case it is stored in C drive. Similarly, give variable name as JAVA_HOME and give the variable value as the location of the JDK file as given below Please follow the below and add in both new user variable as well as in the system variable:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Variable Name: PATH&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Variable value: C:\apache-maven-3.9.6\bin&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Variable Name: JAVA_HOME&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Variable value: C:\Program Files\Java\jdk-21&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_18-1757929464206.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314379i0D0AE6EC0304EEBD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_18-1757929464206.png" alt="ajitchirania88_18-1757929464206.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_19-1757929464207.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314380i2EC96DB9EB9CA93E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_19-1757929464207.png" alt="ajitchirania88_19-1757929464207.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_20-1757929464208.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314381i915A25A61C72FB01/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_20-1757929464208.png" alt="ajitchirania88_20-1757929464208.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_21-1757929464208.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314382i2370E44CB7E4BE6D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_21-1757929464208.png" alt="ajitchirania88_21-1757929464208.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click Ok and you can see both the path and press ok to proceed. You can see now both the path has been updated. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_22-1757929464210.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314385iB35B8A292FA8D868/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_22-1757929464210.png" alt="ajitchirania88_22-1757929464210.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp;Go to the attachment of the KBA , &lt;A href="https://me.sap.com/notes/3031657" target="_blank" rel="noopener noreferrer"&gt;3031657 - How to generate SAML assertion using SAP-provided offline tool - SuccessFactors - SAP for Me&lt;/A&gt; and download it and keep in C-drive.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_23-1757929464212.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314383i70C3A92CEABAA31F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_23-1757929464212.png" alt="ajitchirania88_23-1757929464212.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Unzip the file and keep it in the c: drive as shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_24-1757929464213.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314386i96C18C05FB2DDBDE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_24-1757929464213.png" alt="ajitchirania88_24-1757929464213.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Open the folder and open SAMLAssertion.properties as shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_25-1757929464214.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314387i36C31D9762296273/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_25-1757929464214.png" alt="ajitchirania88_25-1757929464214.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When you will open SAMLAssertion.properties file you will find some dummy entries inside it, and we need to clean it and use the details which we have in TASK-1. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_26-1757929464215.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314388iF8B1925F30315F0E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_26-1757929464215.png" alt="ajitchirania88_26-1757929464215.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After cleaning the dummy value, the screen should visible as shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_27-1757929464216.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314393i80D320D836848575/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_27-1757929464216.png" alt="ajitchirania88_27-1757929464216.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now we need to fill the details:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;token URL: https://&amp;lt;SF API URL&amp;gt;/oauth/token for example it should be something like &lt;A href="https://api12preview.sapsf.eu/oauth/token" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api12preview.sapsf.eu/oauth/token&lt;/A&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;ClientID: API Key which you received while registering the client in Successfactors in our case the ClientID is&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_28-1757929464217.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314392iA17DC1BE090C4DF2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_28-1757929464217.png" alt="ajitchirania88_28-1757929464217.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;. You can refer above in TASK-1 step no 10. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;userName:The username(Odata API user we have used in CN name i.e. SF_ODATA_API)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;privateKey : The certificate we have copied from the manage Oauth from SuccessFactors at Task-1 step no 10. &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;expireInMinutes=100000 ( Maximum possible value is 5258880)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Save everything as mentioned above in a file and then run the script as mentioned below.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Command -&amp;nbsp;&amp;nbsp; cd C:\SAMLAssertionGen-master&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_29-1757929464217.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314390i5E1E3000FE5ED3F4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_29-1757929464217.png" alt="ajitchirania88_29-1757929464217.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Press enter to go to the directory C:\SAMLAssertionGen-master&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_30-1757929464218.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314394iAAA759A9AF863231/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_30-1757929464218.png" alt="ajitchirania88_30-1757929464218.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Execute the below command now. &lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;EM&gt;mvn compile exec:java -Dexec.args="SAMLAssertion.properties”&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_31-1757929464219.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314395iC1A642FE0584B72F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_31-1757929464219.png" alt="ajitchirania88_31-1757929464219.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Press Enter:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It will start generation the saml assertion and you can see the here how it started but the actual saml assertion which we need to call the API in successfactors using Oauth we will be finding it at the end of the saml generation.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_32-1757929464221.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314396iAFDC91E9548CFF0A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_32-1757929464221.png" alt="ajitchirania88_32-1757929464221.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Assertion:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_33-1757929464225.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314399i95E5D5A5C7472149/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_33-1757929464225.png" alt="ajitchirania88_33-1757929464225.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Once completed, it would generate SAML assertion. Copy this and store it securely in your local drive.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;TASK-3 Calling ODATA API from Successfactors using Postman.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now we have all the details with us, for example:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;SuccessFactors company ID &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SF API Key (from Manage Oauth)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAML Assertion &lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;We must do two steps to query the data from the success factors Oauth. &lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;First Step: In this step, we will be calling the SuccessFactors to get the Oauth token. Please see the screenshot:&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_34-1757929464230.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314397i0DD3F5658BD321EF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_34-1757929464230.png" alt="ajitchirania88_34-1757929464230.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;company_ID: Successfactors instance company id&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;client_id: API Key from the SuccessFactors Manage Oauth2 (Refer Task-1) &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;grant_type: urn:ietf:params:oauth:grant-type:saml2-bearer&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Assertion: SAML assertion generated in Task-2 (Refer to the last steps) &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now we have the token, we can move to step-2 to query the data from the SuccessFactors.&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Second Step: In this step we will be using the token generated in the above step and query the data from the SuccessFactors. Please see below screenshot.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_35-1757929464233.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314398i28339DC16DEC9917/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_35-1757929464233.png" alt="ajitchirania88_35-1757929464233.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You have put the query to get the data and select Authorization as Bearer token. In the Token field pass the token we got in the Step 1 and query the data. The query will be successful, and you will be getting the data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_36-1757929464237.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314401i5F21A0C1DD99BB38/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_36-1757929464237.png" alt="ajitchirania88_36-1757929464237.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can export the collection from the postman and can share with the third party so that they can directly use this to set up to query the data using Oauth from SuccessFactors. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ajitchirania88_37-1757929464240.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314400i51FBA104CE799690/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ajitchirania88_37-1757929464240.png" alt="ajitchirania88_37-1757929464240.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/successfactors-api-using-oauth-authentication-method-via-sap-offline-saml/ba-p/14217261"/>
    <published>2025-09-17T12:13:14.200000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/using-technical-user-in-sap-datasphere-consumption-apis-client-credentials/ba-p/14218919</id>
    <title>Using Technical User in SAP Datasphere Consumption APIs (Client Credentials)</title>
    <updated>2025-09-18T15:15:18.168000+02:00</updated>
    <author>
      <name>gustavokath</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/513684</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;SAP Datasphere exposes business-ready data through a set of Consumption APIs that make it easy for BI tools and applications to query governed data without copying it. The Consumption APIs endpoints generated from Analytical Datasets and Analytic Models offer a metadata-rich, RESTful interface that applications can call for filtered, paged results, which have been available since early 2021.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To allow all this richness of data and the benefits of federation capabilities, the SAP Dataspshere&amp;nbsp;Consumption APIs always relied on business users for authentication and authorizations, which is based OAuth 2.0 with Authorization Code grant type. Such scenario ensured the same behaviour the user sees in the SAP Datasphere or SAP Analytics applications would be the one be the same when integrating via APIs, including Data Access Controls and Model Privileges. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;However such authorization method is not the most adequate to be used when integration in backend application, in a service-to-service manner. As in most cases the backend application does not have an current user session or ability to access a browser context as required by&amp;nbsp;Authorization Code grant type 3-lagged approach. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With that we heard our users requests and pleased to release the "Technical User" support for the SAP Datasphere Consumption APIs which is based on&amp;nbsp;OAuth 2.0 with &lt;A href="https://oauth.net/2/grant-types/client-credentials/" target="_self" rel="nofollow noopener noreferrer"&gt;Client Credentials grant type (2-legged).&lt;/A&gt; This allows the access token generation to happen without any manual user interaction.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This blog post cover details on how to create the "Technical User" OAuth Client in SAP Datasphere, how to setup the client credentiral authorization in Postman and the support for it on Power BI Custom Connector.&lt;/P&gt;&lt;H2 id="toc-hId-1760154987"&gt;Technical User&amp;nbsp;OAuth Client&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;The&amp;nbsp;Technical User OAuth client work just like the other OAuth clients existing in SAP Datasphere. To define the authorizations for the technical user at least one scoped role needs to be assigned to it, this will determine which spaces the technical user will have access and the privileges it will have in them.&amp;nbsp; Also, to identify the requests made and to apply data access restrictions a "Username" must be provided, this technical user name needs to be unique across the entire SAP Datasphere tenant.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For creating a&amp;nbsp;Technical User OAuth client, go to&amp;nbsp;System &amp;gt; Administration &amp;gt; App Integration and provide the following information&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Purpose: Technical User&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;User ID:&amp;nbsp; &amp;lt;unique username&amp;gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Roles: &amp;lt;Select at least one scoped role&amp;gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;After creating it generates a "Client ID" and a "Client Secret", just like the other OAuth client types.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="OAuth Client.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315361iDD25BD44D7A96AC7/image-size/large?v=v2&amp;amp;px=999" role="button" title="OAuth Client.png" alt="OAuth Client.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1563641482"&gt;Integrating with Consumption APIs in Postman&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Integrating with SAP Datasphere Consumption APIs using a Technical User OAuth client is straightforward because it uses the Client Credentials grant type. Using the client_id and client_secret created in the previous section, along with the SAP Datasphere token URL available on the App Integration page, you can use any HTTP client (e.g., Postman) to generate an access token and call the Consumption APIs.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1496210696"&gt;&lt;SPAN&gt;Access Token Generation&lt;/SPAN&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-1428779910"&gt;&lt;SPAN&gt;Postman Automated OAuth Setup&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;Postman’s automated authorization handles all the necessary OAuth 2.0 calls to retrieve and apply the token. To set this up, create a new request and open the &lt;STRONG&gt;Authorization&lt;/STRONG&gt; tab. For Type, select &lt;STRONG&gt;OAuth 2.0&lt;/STRONG&gt; and fill in the following information:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Header Prefix: Bearer&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Grant type: Client Credentials&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Access Token URL: &amp;lt;SAP Datasphere Token URL available the&amp;nbsp;App Integration page&amp;gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Client ID: &amp;lt;client_id - created on previous step&amp;gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Client Secret: &amp;lt;client_secret -&amp;nbsp;created on previous step&amp;gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;After you complete the fields, click Get New Access Token. Postman will generate an access token for SAP Datasphere.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Postman automated.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315424i7555F3C5ACAE8578/image-size/large?v=v2&amp;amp;px=999" role="button" title="Postman automated.png" alt="Postman automated.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1232266405"&gt;&lt;SPAN&gt;Postman Manual OAuth Setup&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;Postman’s approach in the previous section automates the OAuth protocol, which is helpful for testing and speeding up debugging, but less practical for real integrations. This section explains how to craft the OAuth token request required by the Client Credentials flow for use with a SAP Datasphere Technical User.&lt;/P&gt;&lt;P&gt;Create a request in Postman and configure:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Method: POST&lt;/LI&gt;&lt;LI&gt;Request URL: &amp;lt;token_url&amp;gt; (the SAP Datasphere token URL available on the App Integration page)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Headers:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Authorization:&amp;nbsp;Basic&amp;nbsp;&lt;FONT color="#FF0000"&gt;&amp;lt;base64 encoded&amp;nbsp;&lt;STRONG&gt;client_id&lt;/STRONG&gt;:&lt;STRONG&gt;client_secret&lt;/STRONG&gt;&amp;gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Content-Type: application/x-www-form-urlencoded&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Body (x-www-form-urlencoded):&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;grant_type: client_credentials&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Send the request to retrieve the access token, which you will use later.&lt;/P&gt;&lt;H3 id="toc-hId-906670181"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Postman manual.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315485i8660E73B87153FE5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Postman manual.png" alt="Postman manual.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-710156676"&gt;Changes on SAP Datasphere Consumption APIs&lt;/H3&gt;&lt;P&gt;The SAP Datasphere Consumption APIs let you retrieve data via OData version 4. Starting with release 2025.19, the standard API path has been updated to align with proper service naming following the 2023 transition from SAP Data Warehouse Cloud to SAP Datasphere and its continued role within the SAP Business Data Cloud strategy.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;New path: &lt;STRONG&gt;/api/v1/datasphere/consumption/*&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The catalog service for consumption artifacts, which lists and queries all accessible spaces and entities, has moved to &lt;STRONG&gt;/api/v1/datasphere/consumption/catalog/*&lt;/STRONG&gt; to better reflect its purpose. All other semantics for accessing spaces and assets remain unchanged.&lt;/P&gt;&lt;P&gt;The relational and analytical consumption endpoints retain exactly the same behavior, with only the path prefix changed, for example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;/api/v1/datasphere/consumption/(relational | analytical)/*&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The previous path, /api/v1/dwc/(catalog|consumption), is deprecated. It will continue to be supported for 18 months, until March 2027.&lt;/P&gt;&lt;H4 id="toc-hId-642725890"&gt;&lt;STRONG&gt;Consuming with Technical User&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;You can use the Technical User with both the old and new API paths. Once you switch to Technical User authorization, it is recommended to move to the new standard endpoints.&lt;/P&gt;&lt;P&gt;When you make requests to the Consumption APIs with Technical User authorization, the privileges and space memberships applied to the request are determined by the scoped roles assigned to the OAuth client used to generate the access token.&lt;/P&gt;&lt;P&gt;For example, consider spaces A, B, and C. If the OAuth client has roles that grant consumption permissions for spaces A and C, then:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In catalog queries, only assets from spaces A and C are returned.&lt;/LI&gt;&lt;LI&gt;For data consumption, only models belonging to or shared with spaces A and C are accessible.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;An example request is shown in the image below, which requests data from a view in relational format, use the generated access token from previous step as Bearer Authorization.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Consumption.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315495iB89C3AE0B3303DA0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Consumption.png" alt="Consumption.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Important notice: Consuming data from assets protected by Data Access Controls is not supported at this time. The API will return an empty result.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-188046947"&gt;&lt;STRONG&gt;Integration with Power BI via Custom Connector&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Back in 2022, olaf_fischer and I worked on easing the integration between Power BI and the SAP Datasphere Consumption APIs by releasing an open source sample Power BI Custom Connector that supports SSO, making it easy to authenticate and consume the OData APIs in Power BI.&lt;/P&gt;&lt;P&gt;Although the custom connector has its limitations and active development has ceased, the introduction of a new authorization type is a significant improvement. Since the connector is used by many, it deserved an update to align with the latest features. I am happy to share that version 1.90 of the open source custom connector now supports authorization via OAuth 2.0 with client credentials.&lt;/P&gt;&lt;P&gt;More details on the custom connector can be found at &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-datasphere-odata-connector-for-powerbi/ba-p/13521689" target="_self"&gt;original blog post&lt;/A&gt; or on the &lt;A href="https://github.com/SAP-samples/data-warehouse-cloud-connectors/tree/main/power-bi" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub Repository&lt;/A&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;H4 id="toc-hId-249698880"&gt;How to Use It in Power BI&lt;/H4&gt;&lt;/DIV&gt;&lt;OL&gt;&lt;LI&gt;In the connector sign-in dialog, choose&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Authentication Method → “OAuth Client Credentials.”&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Enter the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Client ID&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Client Secret&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;generated when you registered the app.&lt;/LI&gt;&lt;LI&gt;Leave the existing&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Access Token URL&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in the system settings (connections.json file); no additional user details are required.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="power bi.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315503i8E2082FB03886A8D/image-size/large?v=v2&amp;amp;px=999" role="button" title="power bi.png" alt="power bi.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;H4 id="toc-hId--444531720"&gt;Backward-Compatibility Notes&lt;/H4&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;Existing connections that use the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Authorization Code&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;flow continue to work unchanged.&lt;/LI&gt;&lt;LI&gt;You can reuse the same system configuration (Access Token URL) if you switch to the new&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Client Credentials&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;flow later.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H2 id="toc-hId--54239211"&gt;Summary&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;SAP Datasphere now supports Technical User access to the Consumption APIs with OAuth 2.0 client credentials, enabling service-to-service integrations without user interaction and thereby easing integration across multiple services and enabling many new use cases.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;I’d be happy to hear your thoughts and comments on this topic. Let me know in the comments&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-technical-user-in-sap-datasphere-consumption-apis-client-credentials/ba-p/14218919"/>
    <published>2025-09-18T15:15:18.168000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-sap-fiori-development-portal-your-gateway-to-rapid-sap/ba-p/14236768</id>
    <title>Introducing the SAP Fiori Development Portal: Your Gateway to Rapid SAP Fiori App Creation (1 of 6)</title>
    <updated>2025-10-07T14:04:32.843000+02:00</updated>
    <author>
      <name>katrin_polloczek</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/188039</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Welcome to the first post in our mini-series exploring the &lt;A href="https://ui5.sap.com/test-resources/sap/fe/core/fpmExplorer/index.html" target="_self" rel="noopener noreferrer"&gt;SAP Fiori development portal&lt;/A&gt; - a new hub designed to empower every member of your project team to decide efficiently and collaboratively on the SAP Fiori app you want to add to your portfolio. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="katrin_polloczek_0-1759836738854.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323715iEAEF8865FBBD3C74/image-size/large?v=v2&amp;amp;px=999" role="button" title="katrin_polloczek_0-1759836738854.png" alt="katrin_polloczek_0-1759836738854.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Before we demonstrate how you can explore and use the SAP Fiori development portal, this first post sets you up on what SAP Fiori elements for OData V4 really is, why it has become the UI framework of choice for SAP Fiori app development, and how our building block approach is changing the game for developers, designers, and business experts alike&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Why SAP Fiori Elements?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Fiori elements for OData V4 is more than just a UI framework - it’s a metadata-driven approach that leverages the &lt;A href="https://www.sap.com/design/design-system" target="_blank" rel="noopener noreferrer"&gt;SAP Design System&lt;/A&gt; as its guiding principle. By listening to input from partners, customers, and SAP product teams, we ensure that the most relevant design system options are available in the framework at runtime. This means you can create applications that are not only consistent and enterprise-ready but also tailored to your unique requirements.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Whenever you create a &lt;A href="https://pages.community.sap.com/topics/fiori-elements" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori elements&lt;/A&gt; app, you automatically get the SAP Fiori design. SAP Fiori is the design concept framework for SAP applications, setting the standard for harmonized, user-centric experiences across the enterprise. SAP Fiori elements for OData V4 is the key enabler to implement and consume this harmonized experience, providing you with options to use standard floorplans for recurring layouts or building blocks for creative, custom layouts. In both cases, you can always extend further with&lt;/SPAN&gt;&lt;SPAN&gt; freestyle &lt;A href="https://pages.community.sap.com/topics/ui5" target="_blank" rel="noopener noreferrer"&gt;SAPUI5&lt;/A&gt; to address unique requirements and add custom features.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Building Blocks: The Foundation of Flexibility&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Over the past few years, we’ve worked hard to break down SAP Fiori elements into a set of reusable building blocks. These building blocks - such as tables, forms, filter bars, and charts - are orchestrated by SAP Fiori elements and form the basis of every OData V4 application. They provide standardized layouts and interaction patterns, ensuring UI consistency and boosting developer productivity. For SAP Fiori elements for OData V4, we set up the building blocks as our center of gravity. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When you select a classic SAP Fiori elements floorplan, you’re choosing a predefined combination of these building blocks, optimized for standard use cases. This is the ultimate developer productivity solution. But if your project requires something different, you can use the same building blocks to create custom layouts, combining them as needed for maximum creativity and flexibility - all while retaining the benefits of an annotation-driven UI.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="katrin_polloczek_1-1759836738858.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323713i1DC2F9956D8AF4F2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="katrin_polloczek_1-1759836738858.png" alt="katrin_polloczek_1-1759836738858.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Two Paths, One Powerful Framework&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Whether you choose a standard floorplan or a custom layout, you benefit from all the work we’ve put into these building blocks: rapid app creation, consistent UI, and enterprise-ready features like personalization, key user support, and internationalization&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="katrin_polloczek_2-1759836738862.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323714i21252E9ECF834C32/image-size/large?v=v2&amp;amp;px=999" role="button" title="katrin_polloczek_2-1759836738862.png" alt="katrin_polloczek_2-1759836738862.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;The SAP Fiori development portal: Your One-Stop Shop&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To help you choose the right path for your project, we’re introducing the SAP Fiori development portal where you can explore options, collaborate, and make informed decisions at every step. This portal aims to provide all project team members—business analysts, designers, developers, and users - with the information and tools they need to define a joint target picture and efficiently build SAP Fiori apps based on SAP Fiori elements for OData V4. Once the target picture of the SAP Fiori app is clear, you can easily create the app by using &lt;A href="https://pages.community.sap.com/topics/fiori-tools" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori tools&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Endless Possibilities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The SAP Fiori development portal supports you in real-time exploration, and we’re eager to hear your feedback to make the portal even better. Thank you for joining us on this journey. We’re excited to see how you’ll harness the full potential of SAP Fiori elements and the SAP Fiori development portal. Who knows - you might be the next speaker at our &lt;A href="https://tinyurl.com/elementsroundtable" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Fiori development roundtables&lt;/A&gt;! &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Stay tuned for the next post, where we’ll dive deeper how you can use the SAP development portal to derive your path of rapid, flexible SAP Fiori app development. &lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/get-familiar-with-sap-fiori-development-portal-and-the-power-of-the/ba-p/14240041" target="_self"&gt;&lt;SPAN&gt;Get familiar with SAP Fiori development portal and the power of the building blocks (2 of 6) &lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/explore-the-potential-of-sap-fiori-development-portal-using-complex/ba-p/14257622" target="_self"&gt;&lt;SPAN&gt;Explore the potential of SAP Fiori development portal using complex building blocks (3 of 6)&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Use SAP Fiori development portal to understand extension options for standard floorplans (4 of 6)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Prepare building custom pages by using SAP Fiori development portal (5 of 6)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Bringing the SAP Fiori development portal and its use to the next level (6 of 6)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;We first announced our work on the SAP Fiori development portal at UI5con 2025 in July and are now happy to report its first delivery with SAPUI5 1.141. Further enhancements are already in preparation as you read this, continuing our commitment to improving the SAP Fiori development &lt;/SPAN&gt;&lt;SPAN&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;EM&gt;After exploring the building blocks, their use in standard floorplans and custom pages, and how the SAP Fiori development portal supports your workflow, we’re now introducing its soft launch.&amp;nbsp;&lt;BR /&gt;&lt;/EM&gt;&lt;EM&gt;The &lt;SPAN&gt;&lt;A href="https://ui5.sap.com/test-resources/sap/fe/core/fpmExplorer/index.html" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori development portal&lt;/A&gt;&lt;/SPAN&gt;&lt;/EM&gt;&lt;EM&gt; will for now be available only via a dedicated link. Starting with SAPUI5 1.142 it will be directly integrated into the UI5 demo kit - no separate link required. Stay tuned for the updated access details with SAPUI5 1.142.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-sap-fiori-development-portal-your-gateway-to-rapid-sap/ba-p/14236768"/>
    <published>2025-10-07T14:04:32.843000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/integrating-sap-document-information-extraction-document-ai-with-sap-cap/ba-p/14235024</id>
    <title>Integrating SAP Document Information Extraction (Document AI) with SAP CAP – Step by Step</title>
    <updated>2025-10-09T12:50:17.556000+02:00</updated>
    <author>
      <name>furkan5</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2115025</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="4"&gt;Introduction :&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In the SAP ecosystem, extracting meaningful data from documents such as invoices, contracts, or delivery notes—especially in accounting, finance, and operational processes—is often a manual and time-consuming task.Since these documents are usually in PDF or scanned image formats, using traditional data processing methods to identify fields is both error-prone and unsustainable in the long run.This is where SAP Document AI comes into play.By leveraging AI-powered models, Document AI can automatically analyze documents and extract key fields such as invoice number, date, currency, supplier–customer information, and line items.This eliminates the need for manual data entry, making the overall process faster, more reliable, and significantly more efficient.In this blog post, I will walk you through the step-by-step process of enabling SAP Document AI on SAP BTP and integrating it with a CAP (Cloud Application Programming) project.Starting from service activation, we’ll cover creating a service key, performing authentication (token retrieval), defining actions in CAP, uploading files, and storing the extracted Document AI results in a database.By the end of this guide, you’ll have a fully functional CAP endpoint that can be tested via Postman.You’ll learn how to send real PDF invoice files to Document AI and receive structured data in return—a foundation you can later extend with UI5 interfaces or workflow integrations.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;BR /&gt;Step &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;1 — Creating the Document AI Service in SAP BTP&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;First, we need to enable the Document AI service in SAP BTP. To do this:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Log in to your SAP BTP subaccount.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Open &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Service Marketplace&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Find &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the SAP Document AI Trial&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; service under &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Artificial Intelligence&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; category .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_0-1759664486213.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322910iF81D4AB95DE1798C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_0-1759664486213.png" alt="furkan5_0-1759664486213.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;On the service details page, you'll see &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Overview&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; and &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Service Plans tabs. Click &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Create&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; to create a service instance &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Select the &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;default&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; plan . This plan enables basic API access in a trial environment and creates the instance your CAP project needs to connect to the Document AI service.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_1-1759664694730.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322911i78197B4CDDE308E1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_1-1759664694730.png" alt="furkan5_1-1759664694730.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Fill out the form below:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Service:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; SAP Document AI Trial Version &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ We will be using this service. Since it is a trial version, we will use the free trial quota.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Plan:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; default &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ Only the &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;default&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; plan is available in the trial environment. It is sufficient for basic use.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Runtime Environment:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Cloud Foundry &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ Defines where the service will run. Cloud Foundry is often chosen for integration with CAP projects.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Domain:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; dev &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ Select the Cloud Foundry domain where your project is located (for example, dev, test).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Instance Name:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; DocAI &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ You can give the service instance any name you want. This makes it easier to connect later (you can use lowercase, for example &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;docai&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;After filling in all the fields, you can click &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Next button&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; to proceed to the confirmation screens and complete the sample creation process.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Once the instance has been successfully created, the next step is to generate &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;a Service Key for it&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; . This key contains the authentication information needed for your CAP project to connect to the Document AI service.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Click the ellipsis ( … ) &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;on the far right of your sample row &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Select Create Service Key&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; from the menu &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In the dialog box:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_2-1759665251951.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322912i292D746AFAAFA8A6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_2-1759665251951.png" alt="furkan5_2-1759665251951.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In the Name&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; field, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;enter a meaningful name such as &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;DocAIKey&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;You can leave the other settings at their default values.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Then&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; click Create &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Once the Service Key is generated, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;click on its row to open the &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;detail page.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ChatGPT Image 5 Eki 2025 15_02_16.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322913i9A734DF3DA76B3AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ChatGPT Image 5 Eki 2025 15_02_16.png" alt="ChatGPT Image 5 Eki 2025 15_02_16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;After copying the JSON:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Adding Service Key details to the file To access &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the Document&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; AI service, we need to define credentials in our CAP project. To do this, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;you can add a structure like the following to the file located in your project's root directory:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Correct the highlighted errors and try again.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Unsupported HTML code has been removed from your message. The HTML has been updated. Please review the message and send it when you are satisfied.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "DOCAI_CLIENT_ID": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "DOCAI_CLIENT_SECRET": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "DOCAI_TOKEN_URL": "https://39c50baetrial.authentication.us10.hana.ondemand.com/oauth/token",
  "DOCAI_URL": "https://aiservices-trial-dox.cfapps.us10.hana.ondemand.com/document-information-extraction/v1"
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In real projects&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; , instead of manually adding these details to the file &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, service keys are &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;automatically&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; linked to the application. This way, the application reads credentials from environment variables ( ) and is managed more securely. Automatic linking can also be achieved during deployment via &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;MTA&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; or &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;manifest&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; files &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;VCAP_SERVICES&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;CODE&gt;service.cds&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Action Definition &lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;in File&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;using { app as db } from '../db/schema';

service InvoiceService {
  entity Invoices as projection on db.Invoices;
  entity InvoiceItems as projection on db.InvoiceItems;

  action analyzeAndSave(file : LargeBinary, filename : String) returns {
     documentNumber : String(60);    
    documentDate   : Date;           
    currencyCode   : String(3);      
    senderName     : String(255);    
    receiverName   : String(255);   
    netAmount      : Decimal(15,2);  
    taxName        : String(40);     
    taxRate        : Decimal(5,2);   
    taxAmount      : Decimal(15,2);  
    grossAmount    : Decimal(15,2);  

  };
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;First, we define &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;a CAP Action to send the PDF to the Document AI service and retrieve the result&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; . This action can be triggered from the frontend or from tools like Postman.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;For example, let's define an action with the following name &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;CODE&gt;analyzeAndSave&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;CODE&gt;file&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;field:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Retrieves PDF file content in Base64 format.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;CODE&gt;filename&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;field:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Contains the file name.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;CODE&gt;returns&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;section:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Returns key invoice fields from the AI ​​service (for example, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;documentNumber&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;documentDate&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;currencyCode&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, etc.).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;This step creates the backend point that will trigger access to the Document AI service.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;At this point, we need to listen for the action we defined &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;in the backend &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;. To do this , we add &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;an &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;event handler&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; to . When the action is triggered, this handler sends the file to the Document AI service, retrieves the analysis result, and saves it to the database. The entire flow is managed within this function.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;analyzeAndSave&lt;/CODE&gt;&lt;CODE&gt;service.cds&lt;/CODE&gt;&lt;CODE&gt;srv/service.js&lt;/CODE&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;module.exports = cds.service.impl(function () {
  this.on("analyzeAndSave", async (req) =&amp;gt; {
    // We define the **helper functions required for the Document AI integration**.

  });
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Obtaining a Token (Authentication)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Now that we've defined the service credentials in the file&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, we need to obtain an access token to send requests to the Document AI service.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;We'll add the following sample function&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;to our file&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;CODE&gt;getToken&lt;/CODE&gt;&lt;CODE&gt;srv/service.js&lt;/CODE&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const axios = require("axios");

async function getToken() {
  const r = await axios.post(
    process.env.DOCAI_TOKEN_URL,
    new URLSearchParams({
      grant_type: "client_credentials",
      client_id: process.env.DOCAI_CLIENT_ID,
      client_secret: process.env.DOCAI_CLIENT_SECRET,
    }),
    { headers: { "Content-Type": "application/x-www-form-urlencoded" } }
  );
  return r.data.access_token;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;This function &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;access_token&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;returns a value from the SAP Document AI service using the information in the file. This token &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;will be used in subsequent API calls within the &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;Authorization&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; header .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In real projects, this step is often automated through &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;target+service binding&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; . The CAP application reads the necessary information &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;VCAP_SERVICES&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;from environment variables to obtain the token .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In this step, we retrieve the schemas defined in Document AI and&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;select the appropriate one for invoices. This allows the model to determine which fields to extract (e.g., Invoice ID, Date, Currency, etc.).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const schemas = await fetchSchemas(base, token);
console.log("[DocAI] schemas count =", schemas.length);

const chosen = pickInvoiceSchema(schemas);
if (!chosen) return req.error(500, "No invoice-related schema available in DOX");
console.log("[DocAI] chosen =", chosen);&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;fetchSchemas:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Retrieves the schema list from DOX using the access token.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;pickInvoiceSchema:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Selects the schema whose name is invoice or &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;contains &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;the invoice&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;documentType&lt;/CODE&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;If none are found, return &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;500&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; (an obvious error to the developer).&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Base64 → Buffer conversion (prepare the file)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The PDF file received from the client (UI5/Postman) may be in Base64 format. If it is a Data URL (for example,&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;data&amp;amp;colon;application/pdf;base64,...&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;), remove the prefix and convert it to a true binary buffer.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;let b64 = Buffer.isBuffer(file) ? null : String(file);
if (b64 &amp;amp;&amp;amp; b64.startsWith("data:")) {
  const i = b64.indexOf("base64,");
  if (i &amp;gt; -1) b64 = b64.slice(i + "base64,".length);
}
const buffer = Buffer.isBuffer(file) ? file : Buffer.from(b64 || file, "base64");
console.log("[CHECK] filename=", filename, "buffer length=", buffer?.length);
if (!buffer?.length) return req.error(400, "Empty or invalid base64 file");&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The field we will send via &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;HTTP form-data needs &lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;to be&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; binary &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;; therefore &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;we convert the Base64 payload into a &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;buffer&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;CODE&gt;file&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;We return 400&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; (client error) &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;for an &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;empty or corrupt&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; file .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Create a job (submit with &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;schemaId&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; We provide&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; the selected schema&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; and&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; document type&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; in&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt; , then&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; submit the file&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt; to DocAI&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; to start&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;CODE&gt;options&lt;/CODE&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const options = {
  clientId: "default",
  schemaId: chosen.id,
  documentType: chosen.documentType || "invoice",
};
console.log("[DocAI] submit options =", options);

const submitted = await submitJob(base, token, buffer, filename || "invoice.pdf", options);
const jobId = submitted?.id;
if (!jobId) throw new Error(`Job submit failed: ${JSON.stringify(submitted)}`);
console.log("[DocAI] jobId =", jobId);&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;schemaId: &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;chosen.id&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ we use a dynamic schema id.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;If successful, it returns a &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;jobId&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;; we use this ID to track the status of the job.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;If &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;filename&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;not provided the default value is &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;"invoice.pdf"&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Question the work and get results&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The job runs in the background.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; We poll at intervals until the status is COMPLETED &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Once the process is complete, the extracted areas become available under &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;CODE&gt;extraction&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const result = await pollJob(base, token, jobId, 60000, 1500);
console.log("[DocAI] status DONE, extraction keys =", Object.keys(result?.extraction || {}));&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;CODE&gt;pollJob(base, token, jobId, 60000, 1500)&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;→ &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;60 sec timeout / 1.5 sec interval&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; .&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Below &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;and &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;result.extraction&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;you get &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;CODE&gt;headerFields&lt;/CODE&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;CODE&gt;lineItems&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;NOW LET'S GO TO TESTING:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;First, ...&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;cds watch --profile hybrid &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Let's start our CAP project with the following command. (I started it this way &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;because I chose &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;HANA&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; as the database .)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Sample Invoice PDF file:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_7-1759670250574.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322915i32530D5E1CCE4274/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_7-1759670250574.jpeg" alt="furkan5_7-1759670250574.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Above&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; is a sample PDF file we sent to the SAP Document AI service. The service automatically analyzes the invoice and extracts fields such as the invoice number, date, currency, supplier-customer information, and item information.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Testing with Postman:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Now that everything is ready on the backend, we can test the CAP action integrated with the Document AI service. To do this, use a REST client like Postman and send the following request:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="furkan5_6-1759670015598.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322914iA652EA031F5674AB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="furkan5_6-1759670015598.jpeg" alt="furkan5_6-1759670015598.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Method:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; POST&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;URL:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt; &lt;CODE&gt;&lt;A href="http://localhost:4004/odata/v4/invoice/analyzeAndSave" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:4004/odata/v4/invoice/analyzeAndSave&lt;/A&gt;&lt;/CODE&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Body (JSON):&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;file name:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; Name of the PDF file to be uploaded&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;file:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; PDF file content in &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Base64&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; format&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In this answer:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The fields extracted by Document AI match &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;exactly&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; the action return types defined in &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;service.cds&lt;/CODE&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;These values ​​are also &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;automatically&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; saved to the HANA database in the background.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In real projects,&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; this setup isn't written manually. Instead, the Document AI service &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;automatically connects to the CAP application via &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;service binding&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; . The application reads the necessary credentials directly &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;from environment variables, and token acquisition is performed automatically in the background. This not only increases security (sensitive data like client secrets aren't visible in the code or repository) but also &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;allows the application to run across different environments (dev, test, production) &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;without additional configuration . During deployment, binding is provided via &lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;MTA&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; or &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;manifest&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; files, and the application continues to run seamlessly with the same approach when deployed to production.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;.env&lt;/CODE&gt;&lt;STRONG&gt;&lt;CODE&gt;VCAP_SERVICES&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Optional: Storing Raw Document AI JSON for Debugging:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ekran görüntüsü 2025-10-05 170414.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322919i67EE420641065A4C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ekran görüntüsü 2025-10-05 170414.png" alt="Ekran görüntüsü 2025-10-05 170414.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;In the Invoices&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; entity of the schema &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;, I defined a field called to store the original response returned by the Document AI service. This field &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;is of type &lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;LargeString&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; and holds all the header and line item data returned by Document AI in JSON format.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;CODE&gt;RawJson&lt;/CODE&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;The purpose of this area:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Debug/Trace&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; : Easily inspect the data returned by Document AI during development.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Extensibility&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; : If I later want to add new fields or change the mapping structure, I can access the original source.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;Data Traceability&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt; : Store raw invoice data so it can be reprocessed when necessary.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;&lt;FONT&gt;For example, when an invoice is processed, all the extraction data returned by Document AI is stored in this column. You can then open this data and clearly see which fields Document AI has recognized.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;In this article, we explored how to enable SAP Document AI on SAP BTP and integrate it end-to-end with a CAP project. Each step—from creating the service instance and generating the service key to authenticating, defining CAP actions, and processing documents—represents a fundamental building block of a real-world backend automation setup.With this integration, you can now automatically process invoices or similar business documents without manual data entry. The extracted fields can be stored in your HANA database and then used for reporting, process automation, or analytics. This approach not only speeds up financial and operational workflows but also reduces human error and increases overall process reliability.In production environments, this setup is typically secured and automated through &lt;STRONG&gt;service binding&lt;/STRONG&gt;, allowing applications to read credentials from environment variables without manual configuration. This ensures smooth operation across development, test, and production landscapes.As a next step, you can extend this backend integration with a &lt;STRONG&gt;SAP UI5 dashboard&lt;/STRONG&gt; or management panel, enabling users to upload, view, validate, and approve invoices in real time. By doing so, you’ll move from a simple technical integration to a &lt;STRONG&gt;fully functional end-to-end intelligent document processing solution&lt;/STRONG&gt;.&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/integrating-sap-document-information-extraction-document-ai-with-sap-cap/ba-p/14235024"/>
    <published>2025-10-09T12:50:17.556000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/financial-management-blog-posts-by-sap/triggering-group-reporting-jobs-via-odata-service/ba-p/14243903</id>
    <title>Triggering Group Reporting Jobs via OData Service</title>
    <updated>2025-10-14T19:19:30.084000+02:00</updated>
    <author>
      <name>Freeter</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/216071</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this post, we’ll look at how to trigger &lt;/SPAN&gt;&lt;STRONG&gt;SAP Group Reporting&lt;/STRONG&gt;&lt;SPAN&gt; jobs using the OData service &lt;/SPAN&gt;&lt;STRONG&gt;BC_EXT_APPJOB_MANAGEMENT&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This API enables you to execute jobs based on templates defined in the Fiori app &lt;/SPAN&gt;&lt;STRONG&gt;Application Job Templates&lt;/STRONG&gt;&lt;SPAN&gt;. Normally, such jobs can be scheduled directly from the Fiori app &lt;/SPAN&gt;&lt;STRONG&gt;Schedule Jobs for Consolidation Tasks (F5572)&lt;/STRONG&gt;&lt;SPAN&gt;. However, many customers are exploring ways to integrate these job executions with an &lt;/SPAN&gt;&lt;STRONG&gt;external scheduler&lt;/STRONG&gt;&lt;SPAN&gt;, which is the main focus of this blog.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For a list of supported job templates, refer to the SAP Help Portal:&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE/4ebf1502064b406c964b0911adfb3f01/f126fae4e28c46b6a9dab2e0ce8ed0e9.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;Supported Templates – Schedule Jobs for Consolidation Tasks&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The approach described here applies to both &lt;/SPAN&gt;&lt;STRONG&gt;S/4HANA Cloud (Public)&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;Private/On-Premise&lt;/STRONG&gt;&lt;SPAN&gt; systems, though the configuration steps may vary slightly between the two environments.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Before diving into the details, it’s worth mentioning that &lt;/SPAN&gt;&lt;STRONG&gt;Private and On-Premise&lt;/STRONG&gt;&lt;SPAN&gt; customers can also use the &lt;/SPAN&gt;&lt;STRONG&gt;XBP (External Background Processing)&lt;/STRONG&gt;&lt;SPAN&gt; interface to trigger jobs externally.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;XBP is an &lt;/SPAN&gt;&lt;STRONG&gt;RFC-based interface&lt;/STRONG&gt;&lt;SPAN&gt; that allows external job schedulers to interact with SAP background jobs, such as defining, starting, or monitoring them.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;The following sections focus on the OData-based approach, which provides a REST alternative suitable for broader deployment scenarios.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;1. Public Cloud Setup&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;For &lt;STRONG&gt;public cloud,&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;use one of the predefined communication scenarios:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP_COM_0064&lt;/SPAN&gt;&lt;SPAN&gt; – Application Job Management Integration&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP_COM_0326&lt;/SPAN&gt;&lt;SPAN&gt; – Application Job Scheduling&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Configuration step:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Create a &lt;/SPAN&gt;&lt;STRONG&gt;Communication System&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;Communication Arrangement&lt;/STRONG&gt;&lt;SPAN&gt; for the chosen scenario.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Follow&lt;A href="https://me.sap.com/notes/3119486/E" target="_blank" rel="noopener noreferrer"&gt; SAP Note 3119486&lt;/A&gt;&lt;SPAN&gt; to add required fields&lt;/SPAN&gt;&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;2. Private/On-Premise Setup&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;For &lt;/SPAN&gt;&lt;STRONG&gt;Private Edition&lt;/STRONG&gt;&lt;SPAN&gt; or &lt;/SPAN&gt;&lt;STRONG&gt;On-Premise&lt;/STRONG&gt;&lt;SPAN&gt; systems:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Activate the service &lt;CODE&gt;BC_EXT_APPJOB_MANAGEMENT&lt;/CODE&gt; in transaction &lt;CODE&gt;/IWFND/MAINT_SERVICE&lt;/CODE&gt;.&lt;/LI&gt;&lt;LI&gt;Test using SAP Gateway Client to make sure it works as expected.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Freeter_2-1760462147968.png" style="width: 706px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327495i55E9E1FDB582FBDB/image-dimensions/706x289/is-moderation-mode/true?v=v2" width="706" height="289" role="button" title="Freeter_2-1760462147968.png" alt="Freeter_2-1760462147968.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Register the external scheduler using the program from &lt;A target="_new" rel="noopener"&gt;SAP Note 3527503&lt;/A&gt; to avoid “scheduler not registered” errors.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;3. Triggering the Job&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Once the service is activated successfully,&amp;nbsp;it can be tested in Bruno or&lt;/SPAN&gt;&lt;STRONG&gt;&amp;nbsp;Postman&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;or integrated into a scheduler’s REST job type. Below is an example done in Bruno for the balance carryforward task:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;/sap/opu/odata/SAP/BC_EXT_APPJOB_MANAGEMENT;v=0002/JobSchedule?
JobTemplateName='SAP_FIN_CS_BAL_CARRYFORWARD'&amp;amp;
JobText='Job_Balance_forward'&amp;amp;
JobUser='Jobscheduler'&amp;amp;
JobParameterValues='{{parameters}}'&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Example parameter payload:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const params = {
  VALUES: [
    { NAME: "PA_CONGR", T_VALUE: [{ SIGN: "I", OPTION: "EQ", LOW: "GX1" }] },
    { NAME: "PA_ITCLG", T_VALUE: [{ SIGN: "I", OPTION: "EQ", LOW: "Y1" }] },
    { NAME: "PA_PRVYR", T_VALUE: [{ SIGN: "I", OPTION: "EQ", LOW: "2021" }] },
    { NAME: "PA_RVERS", T_VALUE: [{ SIGN: "I", OPTION: "EQ", LOW: "X01" }] }
  ]
};
bru.setVar("parameters", JSON.stringify(params));&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Once the job is triggered successfully, the response of the request will include job name and job count information:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Freeter_0-1760461976031.png" style="width: 842px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327493i9DC540021EC77282/image-dimensions/842x666/is-moderation-mode/true?v=v2" width="842" height="666" role="button" title="Freeter_0-1760461976031.png" alt="Freeter_0-1760461976031.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4. Monitoring&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Public Cloud:&lt;/STRONG&gt; Check job status via the &lt;EM&gt;Application Job&lt;/EM&gt; app or in Data Monitor to check the last run log.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Private/On-Premise:&lt;/STRONG&gt; Review results in &lt;EM&gt;Data Monitor&lt;/EM&gt; or use &lt;STRONG&gt;transaction SM37&lt;/STRONG&gt; under the scheduler user.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Once the job is executed successfully, the corresponding task (for example, &lt;EM&gt;Balance Carryforward&lt;/EM&gt;) appears as &lt;STRONG&gt;locked&lt;/STRONG&gt; in the Data Monitor.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Freeter_1-1760462015422.png" style="width: 842px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327494i9B829EE72EBFB981/image-dimensions/842x263/is-moderation-mode/true?v=v2" width="842" height="263" role="button" title="Freeter_1-1760462015422.png" alt="Freeter_1-1760462015422.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;5. Key SAP Notes:&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;A href="https://me.sap.com/notes/3119486/E" target="_blank" rel="noopener noreferrer"&gt;3119486&lt;/A&gt;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN&gt;New fields in communication arrangements of type SAP_COM_0064 and SAP_COM_0326&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;A href="https://me.sap.com/notes/3383044/E" target="_blank" rel="noopener noreferrer"&gt;3383044&lt;/A&gt;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN&gt;Using the BC_EXT_APPJOB_MANAGEMENT API&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;A href="https://me.sap.com/notes/3527503/E" target="_blank" rel="noopener noreferrer"&gt;3527503&lt;/A&gt;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN&gt;BC_EXT_APPJOB_MANAGEMENT in On-Premise&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;Summary:&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Deployment Integration Key Point&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Public Cloud&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;OData&lt;/TD&gt;&lt;TD&gt;Use &lt;CODE&gt;SAP_COM_0064&lt;/CODE&gt; or &lt;CODE&gt;SAP_COM_0326&lt;/CODE&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Private/On-Premise&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;OData or XBP&lt;/TD&gt;&lt;TD&gt;Manually add service and register scheduler if needed&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/financial-management-blog-posts-by-sap/triggering-group-reporting-jobs-via-odata-service/ba-p/14243903"/>
    <published>2025-10-14T19:19:30.084000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/get-familiar-with-sap-fiori-development-portal-and-the-power-of-the/ba-p/14240041</id>
    <title>Get familiar with SAP Fiori development portal and the power of the building blocks (2 of 6)</title>
    <updated>2025-10-17T11:26:13.713000+02:00</updated>
    <author>
      <name>marcel_waechter</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/302397</uri>
    </author>
    <content>&lt;P&gt;In our first &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-sap-fiori-development-portal-your-gateway-to-rapid-sap/ba-p/14236768" target="_self"&gt;post&lt;/A&gt;, we introduced the &lt;A href="https://ui5.sap.com/test-resources/sap/fe/core/fpmExplorer/index.html" target="_self" rel="noopener noreferrer"&gt;SAP Fiori development portal&lt;/A&gt; and explored the concept of building blocks. Now it's time to dive deeper and see how this portal unlocks the full potential of these enterprise-ready components. Whether you're a developer, designer, or business analyst, the portal provides an intuitive way to explore, understand, and leverage the comprehensive capabilities that SAP Fiori elements building blocks offer.&lt;/P&gt;&lt;H2 id="toc-hId-1762678658"&gt;Exploring the Portal's Structure&lt;/H2&gt;&lt;P&gt;The &lt;A href="https://ui5.sap.com/test-resources/sap/fe/core/fpmExplorer/index.html" target="_self" rel="noopener noreferrer"&gt;SAP Fiori development&lt;/A&gt; portal organizes everything you need into four main sections, each designed to guide you through different aspects of SAP Fiori app development&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Building Blocks&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- This is where the magic begins. Here you'll find all available building blocks, from the fundamental field component that forms the foundation of nearly every application, to sophisticated components like tables and charts. Each building block comes packed with enterprise-grade features that would take months to develop from scratch.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Global Patterns&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- Don't overlook this section! These non-visual building blocks are what make your applications truly enterprise-ready. Features like draft handling, internal and external navigation, and error handling ensure your apps meet the high standards users expect from SAP applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Standard Floorplans&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- When you need proven layouts fast, this section provides predefined combinations of building blocks optimized for common use cases like List Report and Object Page. These floorplans represent years of UX research and customer feedback, delivering consistency and developer productivity. The section also helps you explore the extension points provided by SAP Fiori elements to extend the standard floorplans. If your targeted SAP Fiori app is close to a standard floorplan, extending it using the extension points provided by SAP Fiori elements gets you to the result easily and quickly.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Custom Pages&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- For unique requirements, this section shows you how to combine both visual and non-visual building blocks to create custom layouts while retaining all the enterprise features and annotation-driven benefits.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Structured Feature List" style="width: 263px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325517iE7CC2E6997B3A641/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="marcel_waechter_0-1760090791648.png" alt="Structured Feature List" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Structured Feature List&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1566165153"&gt;The Power Behind Every Building Block&lt;/H2&gt;&lt;P&gt;What makes these building blocks truly powerful isn't just their visual appeal - it's the comprehensive feature set that comes built-in. Take the table building block, for example. Out of the box, you get:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Personalization capabilities&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;that let users customize their view&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Variant management&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for saving and sharing different table configurations&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Export and import functionality&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for seamless data exchange&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Multiple visualization options&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to present data in the most effective way&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Extension points&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;that allow developers to add custom functionality without breaking the core features&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Responsive behavior&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;that adapts to different screen sizes and devices&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Accessibility compliance&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;ensuring your apps work for all users&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This enterprise-grade functionality would typically require significant development effort, but with SAP Fiori elements building blocks, it's available immediately through simple annotations.&lt;/P&gt;&lt;H2 id="toc-hId-1369651648"&gt;Hands-On Exploration Made Easy&lt;/H2&gt;&lt;P&gt;Every page in the portal follows a consistent structure designed for learning and experimentation:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Focused introduction&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- Each feature gets a clear, concise explanation&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Live samples&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- See the building block in action with real data in both display and edit modes&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Implementation guidance&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- Clear instructions showing the annotations, manifest settings, or code needed&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Multiple annotation formats&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- Examples in CAP CDS, RAP CDS, and XML annotations for maximum compatibility&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Live code editing&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- The integrated code editor lets you experiment and see changes instantly&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Further reading&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- Use the link to the specific product documentation to understand further details&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Page Overview" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325536i316C68618EAC223B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="marcel_waechter_1-1760092109768.png" alt="Page Overview" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Page Overview&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1173138143"&gt;What's Next&lt;/H2&gt;&lt;P&gt;In our next post, we'll explore how complex building blocks can be combined to create sophisticated user interfaces that handle the most demanding business scenarios. We'll show you how the portal helps you understand the relationships between different building blocks and guides you in creating cohesive, powerful applications.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;DIV class=""&gt;To get the full overview about the SAP Fiori development portal, check out the following blog posts of the mini-series:&lt;/DIV&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-sap-fiori-development-portal-your-gateway-to-rapid-sap/ba-p/14236768" target="_blank"&gt;Introducing the SAP Fiori Development Portal: Your Gateway to Rapid SAP Fiori App Creation (1 of 6)&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Get familiar with SAP Fiori development portal and the power of the building blocks (2 of 6)&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/explore-the-potential-of-sap-fiori-development-portal-using-complex/ba-p/14257622" target="_self"&gt;Explore the potential of SAP Fiori development portal using complex building blocks (3 of 6)&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Use SAP Fiori development portal to understand extension options for standard floorplans (4 of 6)&lt;/LI&gt;&lt;LI&gt;Prepare building custom pages by using SAP Fiori development portal (5 of 6)&lt;/LI&gt;&lt;LI&gt;Bringing the SAP Fiori development portal and its use to the next level (6 of 6)&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/get-familiar-with-sap-fiori-development-portal-and-the-power-of-the/ba-p/14240041"/>
    <published>2025-10-17T11:26:13.713000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108</id>
    <title>SAML+OAuth2 (PowerApps --&gt; SAP)</title>
    <updated>2025-10-17T12:14:09.642000+02:00</updated>
    <author>
      <name>Jakub-Kocourek</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/86328</uri>
    </author>
    <content>&lt;P&gt;&lt;ul =""&gt;&lt;li style="list-style-type:disc; margin-left:0px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108#toc-hId-1633775529"&gt;Overview&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:0px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108#toc-hId-1437262024"&gt;Basic setup&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:0px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108#toc-hId-1240748519"&gt;Postman test&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:0px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108#toc-hId-1044235014"&gt;SAP Integration Suite setup&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:0px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108#toc-hId-847721509"&gt;Microsoft PowerPlatform test&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:0px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108#toc-hId-651208004"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1633775529"&gt;Overview&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;!--      ScriptorStartFragment      --&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;This setup describes SAP data consumption (S/4HANA) in Microsoft PowerApps with user authentication using Microsoft EntraID. So you could login to Microsoft PowerApps with your EntraID account and use there data from S/4HANA.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_37-1760621266734.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328469iE7A22D144F52B734/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_37-1760621266734.png" alt="JakubKocourek_37-1760621266734.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;If you're interested in the theory and architecture behind this setup, please read this excellent &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/integrating-low-code-solutions-with-microsoft-using-sap-integration-suite/ba-p/13789298" target="_blank"&gt;article&lt;/A&gt;&lt;SPAN&gt; written by Martin Pankraz.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;Steps described here are compatible with S/4HANA On-premise, S/4HANA Private Cloud and ECC 6 EHP8, but some screens may look different as screenshots were captured in S/4HANA Private Cloud 2023.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;H1 id="toc-hId-1437262024"&gt;&lt;STRONG&gt;Basic setup&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;Start by checking that all required services are enabled in T-Code SICF.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;/sap/bc/webdynpro/sap/saml2&lt;/LI&gt;&lt;LI&gt;/sap/public/bc/sec/saml2&lt;/LI&gt;&lt;LI&gt;/sap/public/bc/sec/cdc_ext_service&lt;/LI&gt;&lt;LI&gt;/sap/public/myssocntl&lt;/LI&gt;&lt;LI&gt;/sap/bc/sec/oauth2/token&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Open T-Code SAML2 and enable SAML support. Provider name could be any string, but must be &lt;U&gt;URL compliant&lt;/U&gt;! It's best practice to use http://&amp;lt;SID&amp;gt;&amp;lt;client&amp;gt;. Switch selection mode to automatic if you intent to use only one IDP.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_0-1760621638802.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328501i31CE1200E6484425/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_0-1760621638802.png" alt="JakubKocourek_0-1760621638802.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_1-1760621638804.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328502iA8F012C105071BAD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_1-1760621638804.png" alt="JakubKocourek_1-1760621638804.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_2-1760621638808.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328503iC6E260CB32AD5C56/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_2-1760621638808.png" alt="JakubKocourek_2-1760621638808.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Local provider is created. Download metadata needed for next steps.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_3-1760621638811.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328506i820D01B39C54D62F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_3-1760621638811.png" alt="JakubKocourek_3-1760621638811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now go to EntraID and create Enterprise App of type "SAP NetWeaver".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_4-1760621638811.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328504i51D618885D01D54D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_4-1760621638811.png" alt="JakubKocourek_4-1760621638811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On "Single sign-on" tab click "SAML". New blank configuration will be created. Use "Upload metadata file" button and select metadata file downloaded from SAP. This loads SAP's metadata into EntraID.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_5-1760621638814.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328505iC631E517DD93AB92/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_5-1760621638814.png" alt="JakubKocourek_5-1760621638814.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_6-1760621638818.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328507iC76758AEEA3363AA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_6-1760621638818.png" alt="JakubKocourek_6-1760621638818.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Edit "Reply URL" to point to Token service of OAuth2 and don't forget to set correct client in parameter "sap-client". "Sign on URL" could be any URL compliant string (ex. &lt;A href="https://dummy.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://dummy.com&lt;/A&gt;).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_7-1760621638824.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328509iD0EA646835FE1411/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_7-1760621638824.png" alt="JakubKocourek_7-1760621638824.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Edit "Attributes &amp;amp; Claims". Click on "Unique User Identifier (Name ID)".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_8-1760621638825.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328508iC8B3A1100FF36C95/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_8-1760621638825.png" alt="JakubKocourek_8-1760621638825.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_9-1760621638826.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328512i078E5CC5733CCF1D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_9-1760621638826.png" alt="JakubKocourek_9-1760621638826.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You have two options here, based on attribute that you like to use as user identifier.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;If you don't have any email address assigned to more than one user in SAP and you use email as UPN in EntraID, you could match EntraID and SAP user based on email. In this case select "Name identifier format" = "Email address" and "Source attribute" = "user.userprincipalname".&lt;/LI&gt;&lt;LI&gt;Otherwise find source attribute that contains SAP username. Ex. sAMAccountName. For this scenario choose "Name identifier format" = "Unspecified".&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_10-1760621638827.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328510iACD46CC3CA9F3D28/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_10-1760621638827.png" alt="JakubKocourek_10-1760621638827.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_11-1760621638827.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328511iCECE96D4FCD10C2C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_11-1760621638827.png" alt="JakubKocourek_11-1760621638827.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Save and return to "Single sign-on" tab of your Enterprise App configuration. In "SAML Certificates" section download the certificate and federation metadata.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_12-1760621638831.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328513i21C25A73960E7F0D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_12-1760621638831.png" alt="JakubKocourek_12-1760621638831.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Go back to SAP backend and open T-Code SAML2. Switch to "Trusted Providers" tab and select "OAuth 2.0 Identity providers" under the "List of Trusted providers". Add a new provider using the metadata you just downloaded from EntraID.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_13-1760621638833.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328515i10EB02B34042B78F/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_13-1760621638833.png" alt="JakubKocourek_13-1760621638833.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the next step, upload the certificate downloaded from EntraID. In the "Provider" and "Signature and Encryption" steps, click "Next" and then "Finish".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_14-1760621638835.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328514iC656328C6FF53B75/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_14-1760621638835.png" alt="JakubKocourek_14-1760621638835.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_15-1760621638838.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328516i342A1CCC3A3EC939/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_15-1760621638838.png" alt="JakubKocourek_15-1760621638838.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Edit the new trusted IDP and select the name format "Unspecified" or "E-mail", depending on the user mapping scenario. Scenario 1 is "E-mail", scenario 2 is "Unspecified".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_16-1760621638843.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328517i84C13995C18EE921/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_16-1760621638843.png" alt="JakubKocourek_16-1760621638843.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Set the "User ID Mapping Mode" according to the scenario. For scenario 1 "email" or "Logon ID" for scenario 2.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_17-1760621638846.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328518i7083347D5555A069/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_17-1760621638846.png" alt="JakubKocourek_17-1760621638846.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_18-1760621638849.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328519i3E2EDC1852182594/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_18-1760621638849.png" alt="JakubKocourek_18-1760621638849.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Save and enable the configuration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_19-1760621638851.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328520i489CB1B7167AF75F/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_19-1760621638851.png" alt="JakubKocourek_19-1760621638851.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Open EntraID again and create new App registration (not Enterprise app) that will be used as client.&lt;/P&gt;&lt;P&gt;On "Authentication" tab, section "Platform configurations" click "Add a platform" and select "Web". Set "Redirect URIs" = "&lt;A href="https://localhost:44326/signin-oidc" target="_blank" rel="noopener nofollow noreferrer"&gt;https://localhost:44326/signin-oidc&lt;/A&gt;" and select both tokens to be issued.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_20-1760621638853.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328522i36B619803B3A91AF/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_20-1760621638853.png" alt="JakubKocourek_20-1760621638853.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On "Certificates &amp;amp; secrets" tab generate new client secrete. &lt;U&gt;Save&lt;/U&gt; the content of &lt;U&gt;"Value"&lt;/U&gt; field as you can't access it later!&lt;/P&gt;&lt;P&gt;Next, on "API permissions" tab add a permission "Microsoft Graph" as delegated. Select "openid" (Sign users in).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_21-1760621638856.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328523i45C121F776066FD5/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_21-1760621638856.png" alt="JakubKocourek_21-1760621638856.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On "Expose and API" tab add a scope. URI should be predefined. After clicking "Save" new configuration panel will be shown. Fill there "Scope name" = "user_impersonation" and switch consent to "Admins and users". Set some display name and description. Finally click "Add scope".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_22-1760621638857.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328524iBBE870AB7925CCD8/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_22-1760621638857.png" alt="JakubKocourek_22-1760621638857.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the same tab add a client application. Set "Client ID" = "6bee4d13-fd19-43de-b82c-4b6401d174c3" and set our scope in "Authorized scopes". This fixed client ID is identifier of SAP OData connector in PowerApps platform.&lt;/P&gt;&lt;P&gt;Copy "Application (client) ID" from "Overview" tab.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_23-1760621638863.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328525i3998F1B936ECD05A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_23-1760621638863.png" alt="JakubKocourek_23-1760621638863.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now switch to App registration (not Enterprise app) that corresponds to the server part (same name as our Enterprise app defined in the beginning). Go to "Expose and API" tab and add a client application. Add there copied client ID and set scope.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_24-1760621638864.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328526iE172836C1EFFFA56/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_24-1760621638864.png" alt="JakubKocourek_24-1760621638864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;One again switch to SAP system. Create technical user for impersonation. This user must be type B (System) and has correct permission role assigned. You need these permissions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;S_RFC: RFC_TYPE=Function group, RFC_NAME=SYST, ACTVT=Execute&lt;/LI&gt;&lt;LI&gt;S_SCOPE: OA2_CLIENT=SOAUTH2 (set same as ID of technical user), OA2_SCOPE=&amp;lt;required_scopes&amp;gt; (start with "*" for testing and restrict later)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Call T-Code SOAUTH2. On the screen click "Create". Set ID of technical user as "OAuth 2.0 Client ID" and write some description.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_25-1760621638868.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328527i0DA068E4C0584351/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_25-1760621638868.png" alt="JakubKocourek_25-1760621638868.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In "Grant Type Setting" step select our trusted IDP from the list and set "Refresh Allowed".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_26-1760621638872.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328528iBA20222140F0AD7C/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_26-1760621638872.png" alt="JakubKocourek_26-1760621638872.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In "Scope Assignment" step set some service that you'd like to expose.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_27-1760621638875.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328529i2847B4327E772875/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_27-1760621638875.png" alt="JakubKocourek_27-1760621638875.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1240748519"&gt;&lt;STRONG&gt;Postman test&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;It's time for first test. You could use &lt;A href="https://1drv.ms/u/c/6839f139c797b9bf/EcjYSwlb5rBMs8CCPEIUxSkBEEDijKDKeBGk1XPpX_ZQmA?e=6oh2xA" target="_blank" rel="noopener nofollow noreferrer"&gt;attached Postman collection&lt;/A&gt;. Edit variables of the collection.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Variable&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Content&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Example&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAP GW IP Address&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Address of SAP AS&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;vhigyi4aci.*************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAP GW Port&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Https port of SAP AS&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;44300&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;AAD tenant ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Entra tenant ID (visible on app registration overview)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;d3f10f6d-****************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;AAD Application ID for SAP GW&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS SAML local provider name&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="http://I4A400" target="_blank" rel="noopener nofollow noreferrer"&gt;http://I4A400&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Frontend App Client Id&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Client ID of client app registration&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;b20e44f0-d88a-4558-8a53-b34484425e3f&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Frontend App Client Secret&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Generated client secret of client app registration&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;HZ48Q~NDBD38a4XW~************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Frontend App custom scope&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Exposed API scope of client app registration&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;api://b20e44f0-d88a-4558-8a53-b34484425e3f/user_impersonation&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAP OAuth Client ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS technical user ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SOAUTH2&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAP OAuth Client Pwd&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS technical user password&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;krnsW)************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAP OAuth Scope&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Scope (service) defined in OAuth config on SAP AS&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZAPI_BUSINESS_PARTNER_0001&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAPBearerToken&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Leave blank, generated in process&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;bearerToken&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Leave blank, generated in process&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Please also change service name and parameters in request number 4 based on your use case (if not calling BP OData service as in example).&lt;/P&gt;&lt;P&gt;Now open first call of the collection and send request. Ignore output and open console (bottom left corner). Copy whole link (without GET keyword) and paste it in the web browser. After successful EntraID login blank error page will be shown. Go to the address bar and copy content of parameter "access_token". Open request number 2 and paste token to the "assertion" parameter.&lt;/P&gt;&lt;P&gt;After sending request number 2 you should see "access_token" in the output. Open request number 3 and send it. If successfull you would get new (short) "access_token" and also "refresh_token" and correct "scope".&lt;/P&gt;&lt;P&gt;Finally open and send request number 4. You should see data from your service.&lt;/P&gt;&lt;H1 id="toc-hId-1044235014"&gt;&lt;STRONG&gt;SAP Integration Suite setup&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;In order to use this setup from internet / public cloud you have to expose SAP AS over SAP Cloud Connector.&lt;/P&gt;&lt;P&gt;In case that you don't have SAP Integration Suite BTP subaccount already added in SAP Cloud Connector, please use official guide to add it: &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/managing-subaccounts?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SAP Help Portal | SAP Online Help&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Now go to the Cloud Connector subaccount and select "Cloud to On-Premises" in the left menu. On "Access Control" tab add new system (Mapping Virtual to Internal System). Backend type is "ABAP System", protocol "HTTPS". Fill in hostname and port of SAP AS.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_28-1760621638877.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328532i4FD0535130720DA1/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_28-1760621638877.png" alt="JakubKocourek_28-1760621638877.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Use same values for virtual host and port. Disable Principal Propagation and Certificate Logon as you don't need these in this scenario. Host in request header should be Virtual Host. Set SID (ex. I4A) as System ID.&lt;/P&gt;&lt;P&gt;Expose services (your OData) in "Resources" section. On this example I'm exposing whole system (don't do this with productive SAP AS!).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_29-1760621638878.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328530i76024A238BF67BE2/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_29-1760621638878.png" alt="JakubKocourek_29-1760621638878.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Open SAP Integration Suite and begin with setup there. In left menu select Configure -&amp;gt; APIs and select "API Providers" tab.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_30-1760621638879.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328533iFDA3B0BFD46AA8E8/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_30-1760621638879.png" alt="JakubKocourek_30-1760621638879.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create new provider. Fill some meaningful name on "Overview" tab. Switch to "Connection" tab and set "Type" = "On Premise", "Host" = &amp;lt;AS_ABAP_HOST&amp;gt;, "Port" = &amp;lt;AS_ABAP_PORT&amp;gt;, leave "Authentication" = "None". Set "sap-client" = &amp;lt;AS_ABAP_CLIENT&amp;gt; in Additional Properties.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_31-1760621638882.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328534i40D1B0CE72B32A3D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_31-1760621638882.png" alt="JakubKocourek_31-1760621638882.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Save provider and test connection. It should return "&lt;EM&gt;System is up and reachable. However, the ping check responded with code : 404; Message : Not found&lt;/EM&gt;". That's correct state because we're calling base URL and not any reachable service.&lt;/P&gt;&lt;P&gt;Go to "Policy Templates" tab and import definition that's available in &lt;A href="https://api.sap.com/policytemplate/Principal_Propagation_via_Entra_Id" target="_blank" rel="noopener noreferrer"&gt;SAP Business Accelerator Hub&lt;/A&gt;. This policy needs some mapping. So switch to "Key Value Maps" tab and create new mapping (ex. name "I4ACLNT400_EntraID"). Use table bellow as an example.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Key&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Content&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Example value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;issuer&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Standard Microsoft issuer value (constant)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://sts.windows.net/d3f10f6d-4a4d-4cde-acb6-284a54d78b3a/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sts.windows.net/d3f10f6d-4a4d-4cde-acb6-284a54d78b3a/&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;AADSAPResource&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS SAML local provider name&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="http://I4A400" target="_blank" rel="noopener nofollow noreferrer"&gt;http://I4A400&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;entra-id-audience&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Exposed API scope of client app registration (without scope name)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;api://b20e44f0-d88a-4558-8a53-b34484425e3f&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;AADRegisteredAppClientSecret&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Generated client secret of client app registration&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;HZ48Q~NDBD38a4XW~************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;sap-oauth-client-password&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS technical user password&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;krnsW)************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;AADRegisteredAppClientId&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Client ID of client app registration&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;b20e44f0-d88a-4558-8a53-b34484425e3f&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SAPOAuthServerAdressForTokenEndpoint&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS host + port&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;vhigyi4aci.**********:44300&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;sap-oauth-client-username&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SAP AS technical user ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;SOAUTH2&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;sap-oauth-scope&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Scope (service) defined in OAuth config on SAP AS&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZAPI_BUSINESS_PARTNER_0001&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;entra-id-tenant-id&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Entra tenant ID (visible on app registration overview)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;d3f10f6d-*****************&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Finally switch to "API Proxies" tab and create new proxy. Select your API Provider, set URL to OData service that you have in the scope. Define some name and title of proxy. API Base Path could be anything you like - it's simply prefix for OData calls to this service (ex. /sap/utility/odata).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_32-1760621638884.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328535i7C3844581615B5FA/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_32-1760621638884.png" alt="JakubKocourek_32-1760621638884.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Ignore error "&lt;EM&gt;Unable to fetch metadata&lt;/EM&gt;" - it's normal as we didn't applied policy yet.&lt;/P&gt;&lt;P&gt;In the new API provider click "..." in top right corner and select "Policies". Again in top right corner click "Policy Template" -&amp;gt; "Apply". Select policy that you downloaded earlier and apply it. You should now see it under target endpoint's post flow.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_33-1760621638885.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328536i335AC81ABC899C1A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_33-1760621638885.png" alt="JakubKocourek_33-1760621638885.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now go step by step through the policy. In second step (MapVariables) replace value of "mapIdentifier" with the name of your value map (ex. I4ACLNT400_EntraID). In steps "RefreshSAPToken", "fetchSAPOAuthToken" and "GetCSRFToken" change value of tag "APIProvider" from "PM1-via-SCC" to your provider name (ex. I4ACLNT400_NOAUTH).&lt;/P&gt;&lt;P&gt;Click "Update", "Save" and "Deploy".&lt;/P&gt;&lt;H1 id="toc-hId-847721509"&gt;&lt;STRONG&gt;Microsoft PowerPlatform test&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;Login to Microsoft PowerApps at &lt;A href="https://make.powerapps.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;Power Apps&lt;/A&gt; and switch to correct environment (if using more). In the left menu click "Flows" and create new cloud flow "Instant cloud flow". Fill some name and choose "Manually trigger a flow".&lt;/P&gt;&lt;P&gt;Add new step with connector "SAP OData", action "Read OData entity".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_34-1760621638888.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328537i816803373E4CB1A9/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_34-1760621638888.png" alt="JakubKocourek_34-1760621638888.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Set authentication type "Microsoft Entra ID Integrated (with APIM)". OData base URI is URL of you API Proxy service (ex. https://******&lt;STRONG&gt;.&lt;/STRONG&gt;test.apimanagement.&lt;STRONG&gt;******&lt;/STRONG&gt;.hana.ondemand.com/sap/utility/odata/BusinessPartner), Entra ID resource URI is API scope of client app (ex. api://b20e44f0-d88a-4558-8a53-b34484425e3f/user_impersonation). Set "API Key Name" = "APIKey (constant), "API Key Value" = &amp;lt;Client_secret&amp;gt; (ex. HZ48Q~NDBD38a4XW~************) and SAP's client name / password.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="JakubKocourek_35-1760621638893.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328538iC884AC87A75BD85A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="JakubKocourek_35-1760621638893.png" alt="JakubKocourek_35-1760621638893.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You should see Entra ID popup for login. After that service should be authenticated and entities readable.&lt;/P&gt;&lt;H1 id="toc-hId-651208004"&gt;&lt;STRONG&gt;Troubleshooting&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;In case you're struggling with the basic setup (Postman testing), start T-Code SEC_DIAG_TOOL_VIEWER and capture the login traffic. You can find errors there and search SAP for Me. Always double check that user calling API (your business user, not SOAUTH2) is valid and has correct permission assigned (check SU53 for errors).&lt;/P&gt;&lt;P&gt;If calling OData API from PowerApps fails immediately with authentication error, check EntraID tenant log for errors associated with your registered client app.&lt;/P&gt;&lt;P&gt;Sometimes it fails later in login process and this could be debuged on Integration Suite. Open definition of your API Proxy, click "Debug" (top right corner) and "Start Debug" (bottom right corner). Now call API from PowerApps, refresh debugged window and check for errors.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/saml-oauth2-powerapps-gt-sap/ba-p/14246108"/>
    <published>2025-10-17T12:14:09.642000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/explore-the-potential-of-sap-fiori-development-portal-using-complex/ba-p/14257622</id>
    <title>Explore the potential of SAP Fiori development portal using complex building blocks (3 of 6)</title>
    <updated>2025-10-31T07:43:01.269000+01:00</updated>
    <author>
      <name>marcel_waechter</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/302397</uri>
    </author>
    <content>&lt;P&gt;In our previous posts, we introduced the SAP Fiori development portal and explored its structure. Now it's time to see the real power in action. Complex building blocks like the table don't just display data - they bring intelligent behavior, enterprise-grade features, and multiple visualization options that adapt to your business needs. Let's dive into how the portal helps you explore and understand these sophisticated capabilities.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Beyond Visual Display: Intelligent Behavior&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The table building block exemplifies how SAP Fiori elements transforms simple annotations into comprehensive business functionality. When you annotate your UI.LineItems, you're not just defining columns - you're enabling a complete data management experience.&lt;/P&gt;&lt;P&gt;The table automatically adapts its behavior based on your entity's capabilities which are defined in the service metadata and annotations, for example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Insertable entities&lt;/STRONG&gt;&amp;nbsp;enable users to create new records directly in the table&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Deletable entities&lt;/STRONG&gt;&amp;nbsp;provide deletion capabilities with proper confirmation dialogs&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Updatable entities&lt;/STRONG&gt;&amp;nbsp;allow inline editing, with optional mass edit features for bulk changes&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Annotated actions&lt;/STRONG&gt;&amp;nbsp;become available as table actions, properly integrated with selection states&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Built-in Delete Feature" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/334589i2CF6EC89DC0AF46A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="marcel_waechter_0-1761892835790.png" alt="Built-in Delete Feature" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Built-in Delete Feature&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This intelligence means your users get the functionality they need without additional development effort on your part.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Multiple Visualizations at Your Fingertips&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The portal showcases how a single building block can transform into different visualizations based on your requirements:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Responsive Table&lt;/STRONG&gt;&amp;nbsp;- Optimized for mobile and varying screen sizes&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Grid Table&lt;/STRONG&gt;&amp;nbsp;- High-performance display for large datasets&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Analytical Table&lt;/STRONG&gt;&amp;nbsp;- Built-in aggregation and grouping capabilities&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Tree Table&lt;/STRONG&gt;&amp;nbsp;- Hierarchical data representation&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;But the capabilities don't stop there. The table building block comes packed with enterprise-grade features that users expect from modern business applications:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;File Operations&lt;/STRONG&gt;&amp;nbsp;- Upload and download functionality for seamless document management&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data Export&lt;/STRONG&gt;&amp;nbsp;- Export to Excel and PDF for offline analysis&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Clipboard Integration&lt;/STRONG&gt;&amp;nbsp;- Copy and paste operations for efficient data entry&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Personalization&lt;/STRONG&gt;&amp;nbsp;- Column reordering, resizing, and hiding based on user preferences&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Variant Management&lt;/STRONG&gt;&amp;nbsp;- Save and share different table configurations across users&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Filtering &amp;amp; Sorting&lt;/STRONG&gt;&amp;nbsp;- Built-in capabilities for data exploration and organization&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Mass Operations&lt;/STRONG&gt;&amp;nbsp;- Bulk actions and mass editing for productivity&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;And this is just the beginning - the portal showcases dozens of additional features that activate automatically based on your metadata annotations, entity capabilities and configuration. Each feature is documented with examples showing exactly how to enable it in your application.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Extensibility When Standard Features Aren't Enough&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The portal demonstrates how building blocks balance out-of-the-box functionality with extensibility. When standard features don't meet your specific needs for, you can:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Add custom controls&lt;/STRONG&gt;&amp;nbsp;to display calculated or derived data&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Integrate custom actions&lt;/STRONG&gt;&amp;nbsp;for business-specific operations&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Use the building block API&lt;/STRONG&gt;&amp;nbsp;in your controller code for advanced scenarios&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Custom Column in Table" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/334582iFD199F4B779C3DCE/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="marcel_waechter_0-1761892181262.png" alt="Custom Column in Table" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Custom Column in Table&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This extensibility ensures you're never locked into standard behavior while still benefiting from enterprise-grade foundation features.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Multi-Format Code Examples: A New Level of Support&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;One of the portal's newest and most valuable features is showing the same annotations in multiple formats. When you explore a building block like the table, you'll see the implementation in:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;CAP CDS&lt;/STRONG&gt;&amp;nbsp;- For SAP Cloud Application Programming Model development&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;RAP CDS&lt;/STRONG&gt;&amp;nbsp;- For ABAP RESTful Application Programming (since 1.142)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;XML annotations&lt;/STRONG&gt;&amp;nbsp;- For local annotations when service changes aren't possible&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Line Item Implementation" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/334585iE8A19980B8F617A2/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="marcel_waechter_2-1761892442161.png" alt="Line Item Implementation" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Line Item Implementation&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The portal's multi-format code examples ensure every developer can find the implementation pattern that fits their development context.&amp;nbsp;&lt;STRONG&gt;CAP CDS&lt;/STRONG&gt;&amp;nbsp;examples offer full interactivity - modify annotations and see immediate results in the preview.&amp;nbsp;&lt;STRONG&gt;RAP CDS&lt;/STRONG&gt;&amp;nbsp;examples provide static but comprehensive guidance for ABAP developers working in modern SAP environments, showing exactly how to implement the same functionality using ABAP RESTful Application Programming patterns. It also helps you find a running sample in the RAP Feature Showcase.&amp;nbsp;&lt;STRONG&gt;XML annotations&lt;/STRONG&gt;&amp;nbsp;serve as your fallback option when service-level changes aren't feasible. This comprehensive approach means whether you're building with CAP, RAP, or working with existing services, you have the code examples you need to implement any building block feature.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;See It in Action: Table Building Block Example&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let's explore the table's responsive behavior. When you open the Table Overview on a desktop, you'll see columns for ID, begin date, end date, agency, and status. But here's where the intelligence kicks in:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Click "Show Code" next to the UI.LineItems annotation.&lt;/LI&gt;&lt;LI&gt;The code editor opens, the preview adjusts to a smaller viewport, and you'll notice fewer columns are displayed.&lt;BR /&gt;Note that the status column remains visible even though it's the 5th column in the annotation. This happens because of its&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.Importance: #High&amp;nbsp;setting.&lt;/LI&gt;&lt;LI&gt;Now try changing&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.Importance&amp;nbsp;from&amp;nbsp;#High&amp;nbsp;to&amp;nbsp;#Low&amp;nbsp;and watch the status column disappear from the table in real-time.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Changing UI.Importance" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/334586i76B3CBF16A1F8C24/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="marcel_waechter_3-1761892570467.png" alt="Changing UI.Importance" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Changing UI.Importance&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This demonstrates how building blocks intelligently prioritize content based on your annotations and available screen space.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Interactive Learning Through Live Code&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The portal's live code editing capability transforms learning from passive reading to active experimentation. You can:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Modify annotations and see immediate visual results&lt;/LI&gt;&lt;LI&gt;Test different configuration combinations&lt;/LI&gt;&lt;LI&gt;Understand the relationship between metadata and UI behavior&lt;/LI&gt;&lt;LI&gt;Experiment safely without affecting your actual development environment&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This hands-on approach helps you understand not just what's possible, but how different annotation patterns affect the user experience and can serve as input for your app development.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What's Next&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In our next post, "Use SAP Fiori development portal to understand extension options for standard floorplans (4 of 6)," we'll shift focus from individual building blocks to complete pages. We'll explore how the portal guides you through extending standard floorplans like List Report and Object Page, showing you exactly where and how to add custom functionality while maintaining the enterprise-grade foundation these pages provide.&lt;/P&gt;&lt;P&gt;To get the full overview about the SAP Fiori development portal, check out the following blog posts of the mini-series:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-sap-fiori-development-portal-your-gateway-to-rapid-sap/ba-p/14236768" target="_self"&gt;Introducing the SAP Fiori Development Portal: Your Gateway to Rapid SAP Fiori App Creation (1 of 6)&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/get-familiar-with-sap-fiori-development-portal-and-the-power-of-the/ba-p/14240041" target="_self"&gt;Get familiar with SAP Fiori development portal and the power of the building blocks (2 of 6)&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Explore the potential of SAP Fiori development portal using complex building blocks (3 of 6)&lt;/LI&gt;&lt;LI&gt;Use SAP Fiori development portal to understand extension options for standard floorplans (4 of 6)&lt;/LI&gt;&lt;LI&gt;Prepare building custom pages by using SAP Fiori development portal (5 of 6)&lt;/LI&gt;&lt;LI&gt;Bringing the SAP Fiori development portal and its use to the next level (6 of 6)&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/explore-the-potential-of-sap-fiori-development-portal-using-complex/ba-p/14257622"/>
    <published>2025-10-31T07:43:01.269000+01:00</published>
  </entry>
</feed>
