<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/NW-ABAP-Web-Services-blog-posts.xml</id>
  <title>SAP Community - NW ABAP Web Services</title>
  <updated>2025-07-25T23:11:20.017942+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/NW ABAP Web Services/pd-p/99891761267046184358097136821575" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>NW ABAP Web Services blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/remediation-of-uncalled-active-icf-services/ba-p/13435159</id>
    <title>Remediation of uncalled active ICF services</title>
    <updated>2020-06-18T10:23:53+02:00</updated>
    <author>
      <name>JoeGoerlich</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2716</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1060742432"&gt;Web applications and web services to rule them all&lt;/H3&gt;&lt;P&gt;&lt;BR /&gt;&amp;nbsp;&lt;/P&gt;&lt;H6 id="toc-hId-1251477084"&gt;Updates:&lt;BR /&gt;2022-11-07: Added hint for new secure-by-default logs.&lt;/H6&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;HR /&gt;&lt;P&gt;The time of SAP GUI as a proprietary interface for every user interaction seems to be over soon. SAP is moving towards serving more and more applications as web applications or web services - be it SAP Fiori, be it the Webgui utilising Screen Personas or OData or REST APIs.&lt;BR /&gt;&lt;BR /&gt;While this change counts in for sure to better user experience or using open standards for interfaces (e.g. towards cloud services), it also effects the SAP Basis Administrator:&lt;BR /&gt;A SAP basis administrator nowadays need to have a deep understanding of web technologies (additionally to understanding the SAP application server, the database as well as to the operating system like linux).&lt;BR /&gt;&lt;BR /&gt;I will not go into detail about the journey from the integration of Internet Communication Manager (ICM) as web server into SAP NW AS ABAP/Java or what to consider in general when operating a web server within your ERP system - maybe even exposed to the internet.&lt;STRONG&gt;&lt;BR /&gt;In this blogpost I would like to catch up a topic which is more related to the content served by the Internet Communication Framework (ICF) through the ICM&lt;/STRONG&gt;.&lt;BR /&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-667715422"&gt;“Please activate one or the other ICF service - it is urgent!”&lt;/H3&gt;&lt;P&gt;In the early days - before "Secure by Default" was a claim - SAP NetWeaver AS ABAP based systems were &lt;STRONG&gt;shipped with certain ICF services in status "activated".&lt;/STRONG&gt; In addition to that, SAP Basis Administrators often where asked on short notice to quickly activate one or the other service in transaction SICF until some urgent needed functionality works. So it happened that there were more ICF service activated then ever needed, especially in the production system.&lt;BR /&gt;&lt;BR /&gt;While in the meantime SAP released many security notes to fix vulnerabilities in the SAP standard ICF services, &lt;STRONG&gt;in many systems a number of 500 up to more than 3000 ICF services are still enabled although they are not needed nor called&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-471201917"&gt;Bring some light into the darkness&lt;/H3&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Please note: &lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT color="#FF0000"&gt;As of SAP S/HANA-Version 2022 / ABAP Platform 2022 the so called &lt;EM&gt;secure-by-default logs&lt;/EM&gt; for ICF calls are collected. These logs can be evaluated in transaction SBDLOG. Those can be used to activate all ICF services that have ever been logged or deactivate services that were not logged by choosing '&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Menu' -&amp;gt; '&lt;/SPAN&gt;&lt;SPAN class=""&gt;ICF Integration' in transaction SBDLOG&lt;/SPAN&gt;&lt;/SPAN&gt;. With this, the manual steps described below can be omitted. Furthermore,&amp;nbsp;as of SAP S/HANA-Version 2022 services which are created via the &lt;EM&gt;HTTP Service Framework&amp;nbsp;&lt;/EM&gt;do not show up as nodes below /sap/bc/http but the URL path starts with this. Those services can be activated via transaction `UCON_HTTP_SERVICES`, if necessary.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;At first lets export a list of the active ICF services of &lt;STRONG&gt;all of your systems (Dev, Int, Prod)&lt;/STRONG&gt;&amp;nbsp;by the following steps:&lt;/P&gt;&lt;OL&gt;&lt;OL&gt;&lt;LI&gt;Go to transaction SE38.&lt;/LI&gt;&lt;LI&gt;Execute report RS_ICF_SERV_ADMIN_TASKS.&lt;/LI&gt;&lt;LI&gt;Choose “Export of Active Services to CSV File” and execute to save the file, e.g. as &amp;lt;SID&amp;gt;_active_services.csv&lt;BR /&gt;&lt;IMG src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/06/Bildschirmfoto-2020-06-17-um-10.03.29.png" border="0" width="403" height="391" /&gt;&lt;/LI&gt;&lt;LI&gt;Again. Repeat these steps for every system in your landscape.&lt;/LI&gt;&lt;/OL&gt;&lt;/OL&gt;&lt;P&gt;&lt;BR /&gt;To give yourself an overview about the active ICF services in your systems take a look at the exported lists. By screening every list you will figure out that &lt;STRONG&gt;the active services in the various systems of a system landscape will be different from system to system&lt;/STRONG&gt;.&lt;/P&gt;&lt;BLOCKQUOTE&gt;Please be aware &lt;STRONG&gt;for some services there is a good reason to be active in development or integration system only!&lt;/STRONG&gt; There are services used for development purposes or there might be services for features which are not yet released to production. Besides that, there are web applications used only for one time tasks or initial setup. Or active services differ simply due to configuration drift.&lt;/BLOCKQUOTE&gt;&lt;P&gt;The main purpose of this lists is to use it a) &lt;STRONG&gt;as a template&lt;/STRONG&gt; for the deactivation of uncalled ICF services in the next steps and b) &lt;STRONG&gt;as a backup&lt;/STRONG&gt; to quickly mass re-activate all former active services in emergency case.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-274688412"&gt;What about service usage?&lt;/H3&gt;&lt;P&gt;It is strictly advisable to activate ICF services only if they are necessary for business needs in order &lt;STRONG&gt;to reduce the attack surface&lt;/STRONG&gt;. Often there is no documentation which services are involved in what business functionality, some of them are even involved in more than one since they provide a framework&amp;nbsp; functionality (e.g. for Webdynpro ABAP or BSP). So it might be hard for you to determine which service is truly needed in the first.&lt;BR /&gt;&lt;BR /&gt;As a quick win you could analyse how often each service were called in &lt;STRONG&gt;each of your systems&lt;/STRONG&gt;. To do so there are at least three methods:&lt;/P&gt;&lt;OL&gt;&lt;OL&gt;&lt;LI&gt;extract the relevant info from the HTTP access log of the ICM (parameter icm/HTTP/logging_&amp;lt;xx&amp;gt;).&lt;/LI&gt;&lt;LI&gt;enable and evaluate the ICF trace using report RS_ICF_SERV_ADMIN_TASKS as mentioned in SAP note 2430473.&lt;/LI&gt;&lt;LI&gt;evaluate the Web Statistics.&lt;/LI&gt;&lt;/OL&gt;&lt;/OL&gt;&lt;P&gt;Method 1 might be time consuming to gather all log files and grep and normalize the relevant parts.&lt;BR /&gt;Method 2 could have a performance impact as of SAP note 1611713.&lt;BR /&gt;Since Web Statistics are collected by default I recommend to use &lt;STRONG&gt;method 3&lt;/STRONG&gt;. However, I like to advise to prolong the retention period of Web Statistics for this purpose in advance by following these steps:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to transaction ST03.&lt;/LI&gt;&lt;LI&gt;Go to Collector and Performance DB -&amp;gt; Performance Database -&amp;gt; Workload Collector Database -&amp;gt; Reorganization -&amp;gt; Control.&lt;/LI&gt;&lt;LI&gt;&lt;IMG src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/06/Bildschirmfoto-2020-06-17-um-10.12.55.png" border="0" width="283" height="371" /&gt;Adjust retention period for the WEB statistics, e.g. TOTAL Monthly Aggregates Retention Period for `VC` and `VD`.&lt;IMG src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/06/Bildschirmfoto-2020-06-17-um-10.15.03.png" border="0" width="722" height="195" /&gt;&lt;/LI&gt;&lt;LI&gt;Again: Repeat these steps for every system in your landscape.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;After a reasonable time frame&lt;/STRONG&gt; in which the Web Statistics for relevant phases (month end closing or alike) have been collected, the statistics can be exported by following these steps:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to transaction ST03.&lt;/LI&gt;&lt;LI&gt;Expand Workload -&amp;gt; Total -&amp;gt; Month -&amp;gt; and perform for each available month the following steps.&lt;/LI&gt;&lt;LI&gt;Expand Analysis Views -&amp;gt; Web Statistics -&amp;gt; WEB Server Statistics.&lt;/LI&gt;&lt;LI&gt;Switch to tab “URL”.&lt;IMG src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/06/Bildschirmfoto-2020-06-17-um-10.20.05.png" border="0" /&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; The Web Statistics may contain entries for services which are not even present in the system but are requested for example by a scanning server.&lt;BR /&gt;&lt;STRONG&gt;Hint: &lt;/STRONG&gt;You may have noticed the column “Protocol” indicates if a service is called via HTTP or HTTPS.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Export the list of URLs as spreadsheet (“Excel (in Office 2007 XLSX Format)“) using the “Export” button. (Note: available as of SAP_BASIS 7.02).&lt;/LI&gt;&lt;LI&gt;Again: Repeat these steps for every system in your landscape.&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-78174907"&gt;Put the puzzle together&lt;/H3&gt;&lt;P&gt;Now it is time to compare the list of active services with the list of called services to prepare the cleanup.&lt;BR /&gt;&lt;BR /&gt;You can also think of comparing the lists across your system landscape. As already stated, for your development and integration system you should consider that there are indeed services active which are necessary for development purposes only or services which are in acceptance test and not yet set productive. These should be evaluated for the relevant systems. Talk to the developer team!&lt;BR /&gt;&lt;BR /&gt;Besides that there may also be web applications activated which are used only for initial setup tasks, e.g. SAML2 configuration or troubleshooting e.g. sec_diag_tool. You should consider to activate these only at configuration time or as long as needed.&lt;BR /&gt;&lt;BR /&gt;There may also be services which are actively used in the production system but are not activated in one or another system of the system landscape. It's time to &lt;STRONG&gt;eliminate this configuration drift&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;Ok, lets start the preparation:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Copy the export of active services CSV file as a template.&lt;/LI&gt;&lt;LI&gt;Remove all lines which have an entry in column REF_PATH. These are aliases which point to a service node. Aliases can not be deactivated, but they will stop working if the original service is disabled.&lt;/LI&gt;&lt;LI&gt;Remove all lines for called services and their parent paths from the list so that you end up with a list of ICF services which can be deactivated in the relevant system.&lt;/LI&gt;&lt;LI&gt;Make sure no parent node stays in the list to be deactivated while it has sub nodes which should remain active. This would lead to so called "stale nodes" and non-working services. For example if /sap/bc/echo should stay active remove /sap, /sap/bc and /sap/bc/echo from the list.&lt;/LI&gt;&lt;LI&gt;Save this list of your to-be-deactivated services as CSV file.&lt;/LI&gt;&lt;LI&gt;Again: Repeat these steps for every system in your landscape.&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId--118338598"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--314852103"&gt;Time to cleanup&lt;/H3&gt;&lt;P&gt;Now you can start deactivating unused services in each system with your processed templates by following these steps:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Open the list of active ICF services, e.g. &amp;lt;SID&amp;gt;_acvite_services.csv and doublecheck if it holds only to-be-deactivated ICF services.&lt;/LI&gt;&lt;LI&gt;Go to transaction SE38.&lt;/LI&gt;&lt;LI&gt;Execute report RS_ICF_SERV_MASS_PROCESSING.&lt;/LI&gt;&lt;LI&gt;Select “Deactivate ICF Services for All Virtual Hosts Listed in CSV File” and execute.&lt;IMG src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/06/Bildschirmfoto-2020-06-17-um-10.21.16.png" border="0" width="359" height="470" /&gt;&lt;/LI&gt;&lt;LI&gt;Confirm the popup and upload the list to deactivate all services in the list.&lt;/LI&gt;&lt;LI&gt;Again: Repeat these steps for every system in your landscape.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;BR /&gt;Did you reveal a configuration drift? Activate the missing services in the relevant systems either manually in transaction SICF or by preparing a CSV file for mass activation.&lt;BR /&gt;&lt;BR /&gt;Maybe you have overlooked some parent paths during creation of the list and they have now been deactivated accidentally. This is not that fatal. You simply can perform a fresh "Export of Active Services to CSV File" and use this to “Activate ICF Services for All Virtual Hosts Listed in CSV File”. The activation logic of the report will then take care of activating also all necessary parent nodes.&lt;BR /&gt;&lt;BR /&gt;Keep in mind if something goes totally wrong you have also the initial export of active services as a backup which can be used to mass activate everything again as it was before.&lt;BR /&gt;&lt;BR /&gt;&lt;EM&gt;Just as a side note:&lt;/EM&gt;&lt;BR /&gt;&lt;EM&gt;The UCON HTTP whitelist scenario or former HTTP_WHITELIST does not serve for the same purpose as the UCON RFC Basic scenario. Meaning it does not affect the general reachability of certain paths through ICM! But this is a topic for another blogpost.&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId--511365608"&gt;Whats next?&lt;/H3&gt;&lt;P&gt;After finishing the deactivation in all systems, I recommend to "Export of Active Services to CSV File" once again. With this list you should &lt;STRONG&gt;start documenting your web services and their business need&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;I started to collect information about SAP standard ICF services in &lt;A href="https://github.com/J-Goerlich/Standard_ICF_services" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/J-Goerlich/Standard_ICF_services&lt;/A&gt; which may give you a hint if a service is needed in your scenario.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/remediation-of-uncalled-active-icf-services/ba-p/13435159"/>
    <published>2020-06-18T10:23:53+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/500-internal-server-error-this-browser-is-not-supported-error-in-enterprise/ba-p/13475600</id>
    <title>500 Internal Server Error. This browser is not supported - Error in Enterprise Portal in IE 11</title>
    <updated>2020-11-04T11:02:54+01:00</updated>
    <author>
      <name>former_member189925</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/189925</uri>
    </author>
    <content>&lt;STRONG&gt;Overview&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
A Webdynpro application is integrated in the Enterprise Portal to display the backend application to the end user&lt;BR /&gt;
&lt;BR /&gt;
Recently, on upgrading/updating ECC or backend and on launching WD ABAP application in portal error is seen as &lt;STRONG&gt;500 Internal Server Error. This browser is not supported, &lt;/STRONG&gt;on launching from Internet Explorer 11.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/11/QuirksBrowser.png" height="154" width="496" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Environment&amp;nbsp;:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Enterprise Portal on SAP NetWeaver Java&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;WebDynpro ABAP&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Cause&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The issue is caused by the application running in Quirks mode and going forward it will support Standards mode of rendering.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Refer KBA # &lt;A href="https://launchpad.support.sap.com/#/notes/2398889" target="_blank" rel="noopener noreferrer"&gt;2398889 - Internet Explorer support for Enterprise Portal&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
As a limitation from Microsoft, IE11 can not render 2 contents using different document modes (quirks/standards) in the same frame/window&lt;BR /&gt;
&lt;BR /&gt;
(This scenario works fine for Chrome and Firefox).&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Solution&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The KBA # &lt;STRONG&gt;&lt;A href="https://launchpad.support.sap.com/#/notes/2424773" target="_blank" rel="noopener noreferrer"&gt;2424773 - Display and Rendering issue in IE 11 in Portal&lt;/A&gt; &lt;/STRONG&gt;has the&amp;nbsp;steps to solve the issue.&lt;BR /&gt;
&lt;BR /&gt;
The KBA has a quick test in the Cause Part, to check the requirement of the application in the browser via Console tab of the browser.&lt;BR /&gt;
&lt;BR /&gt;
To solve the issue one of the below solution can be implemented in Portal&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;To make the portal run in standards mode by making use of the framework page - Ajax standards mode framework.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Changing the Launch in New Window" attribute (for iviews/pages) to "Display in separate headerless portal window (standards mode)"&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;End of Quirks Mode Support for Internet Explorer :&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Starting from NetWeaver 7.52 and/or SAP Kernel 753 and/or SAP_UI 7.52 used in lower NetWeaver AS ABAP versions, Quirks Mode (IE 5.5 rendering mode)&amp;nbsp;of Internet Explorer is no longer supported by SAP for all SAP UI technologies (the SAP release date is planned for the end of Q3/2017) and cannot be executed anymore.&lt;BR /&gt;
&lt;BR /&gt;
If you use Enterprise Portal 7.50, change your framework page to Ajax Framework Page standards mode (AFP Standards) or Fiori Framework Page.&lt;BR /&gt;
Refer Blog: &lt;A href="https://blogs.sap.com/2017/04/02/bye-bye-quirks/" target="_blank" rel="noopener noreferrer"&gt;Bye Bye Quirks&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Additional Resources :&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/2398889" target="_blank" rel="noopener noreferrer"&gt;2398889 - Internet Explorer support for Enterprise Portal&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/1672817" target="_blank" rel="noopener noreferrer"&gt;1672817 - Browser: Microsoft Legacy Edge and Internet Explorer Support Policy Note&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://wiki.scn.sap.com/wiki/display/WDABAP/Browser+supporting" target="_blank" rel="noopener noreferrer"&gt;Web Dynpro ABAP - Browser supporting&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://wiki.scn.sap.com/wiki/display/WDABAP/Internet+Explorer+document+modes" target="_blank" rel="noopener noreferrer"&gt;Internet Explorer document modes&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/500-internal-server-error-this-browser-is-not-supported-error-in-enterprise/ba-p/13475600"/>
    <published>2020-11-04T11:02:54+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-srt-moni-generic-search-framework-gsf-a-new-way-of/ba-p/13470416</id>
    <title>Introducing the SRT_MONI Generic Search Framework (GSF) - a new way of filtering SOAP Web Service Messages by content</title>
    <updated>2020-11-30T22:33:12+01:00</updated>
    <author>
      <name>former_member229976</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/229976</uri>
    </author>
    <content>&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The transaction SRT_MONI is used to monitor ABAP-Web-Service-Messages (WS Messages). This transaction enables you to search for WS Messages, and filter them based on criteria like date, time, message ID, sender-, and receiver information etc. However, it is so far missing the functionality to filter the messages based on their content easily (transaction SRT_MONI also provides the possibility to search for content values, but that is more complex and can’t be run in background.&lt;BR /&gt;
&lt;BR /&gt;
Therefore, the SRT MONI Generic Search Framework (GSF) was developed. It introduces a new modular way to filter the messages based on the information extracted from their corresponding XML data. The goal of this development is to create an easy and customizable way to filter WS Messages based on their content.&lt;BR /&gt;
&lt;BR /&gt;
Details on the technical background can be found in the article &lt;A href="https://blogs.sap.com/2020/12/03/extension-and-enhancement-of-the-srt_moni-generic-search-framework-gsf/" target="_blank" rel="noopener noreferrer"&gt;Extension and enhancement of the SRT_MONI Generic Search Framework (GSF)&amp;nbsp;&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
The new functionality is available by transaction code: &lt;STRONG&gt;SRT_MONI_GSF&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
To run this transaction the user needs to have the authorization to run transaction SRT_MONI.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;User Interface&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Figure 1 shows a screenshot of the User Interface. So far, the user interface consists of two major sections. The standard selection criteria, which is not customizable, and the enhanced selection criteria, which is customizable using the GSF. The customization is explained below.&lt;BR /&gt;
&lt;BR /&gt;
The standard selection criteria are used to pre-select messages as shown in Figure 2 (the uppermost box). The section containing the enhanced selection criteria is used to browse the content of the WS message. The two dropdown menus “Search Object”, and “Selection Parameter” are used to group the technical names into different categories. The “Search Object” defines herby the generic term (e.g. Business Partner, Customer, Vendor etc.). The “Selection parameter” defines the subcategory (e.g. ID, Name etc.). Every Selection Parameter corresponds to an unlimited number of technical names. The grouping of the technical names is further explained in the enhanced technical description of Transaction SRT_MONI_GSF.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/11/fig_1_srt_moni_gsf.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;Figure 1 – User Interface&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The pushbutton "Service Selection" provides the user with a popup (Figure 2) on which they can select the webservices they want to search for. By default, all webservices are selected. It is mandatory to select at least one webservice.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/11/select_deselect_services.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;Figure 2 – Select / De-select Services&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
In the field “Value(s)”, enter the values you want to search for, e.g. different Business Partner IDs. After all fields are filled, the search can be started either by pressing &lt;STRONG&gt;F8&lt;/STRONG&gt;, by clicking the button "Execute" in the lower right corner, or by choosing "More" -&amp;gt; "Program" -&amp;gt; "Execute". The search starts in the foreground. The screen is locked until the program is done. An example of a result list is shown in Figure 3.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/11/search_results.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;Figure 3 – Example of a result list&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The performance can be low due to a high number of messages that need to be extracted and analyzed. For that reason, foreground processing might not be useful. To offer more utility, background processing is available in the SRT Moni Generic Search Framework. By choosing "More" -&amp;gt; "Program" -&amp;gt; "Execute in Background", the search gets submitted as a job. You can display the running Job e.g. using transaction &lt;STRONG&gt;SM37 &lt;/STRONG&gt;or via "More" -&amp;gt; "System" -&amp;gt; "Own Jobs". After the job has finished, the message IDs found are displayed in the print job log as shown in Figure 4.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/11/print_log.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;Figure 4 – Example of a result list as job log&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The message IDs can be easily copied and transported for further analysis to transaction &lt;STRONG&gt;SRT_MONI&lt;/STRONG&gt;.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Delivery and initial usage hints&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The new transaction is available via the following SAP notes:&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/2971973" target="_blank" rel="noopener noreferrer"&gt;2971973&lt;/A&gt; - SRT_MONI_GSF Creation of package&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/2972601" target="_blank" rel="noopener noreferrer"&gt;2972601&lt;/A&gt; - SRT_MONI_GSF Interface Note&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/2972602" target="_blank" rel="noopener noreferrer"&gt;2972602&lt;/A&gt; - SRT_MONI_GSF Application Note Business Partner&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/2980590" target="_blank" rel="noopener noreferrer"&gt;2980590&lt;/A&gt;&amp;nbsp;- SRT_MONI_GSF Application Note T100 Messages&lt;BR /&gt;
&lt;BR /&gt;
The SAP notes have to be applied in the given order.&lt;BR /&gt;
&lt;BR /&gt;
Per default the new functionality is delivered for mainly Business Partner Services searching the name, number of the Business Partner or the number of the customer / supplier. Technically the supplier ID is listed as Vendor ID for historical reasons.&lt;BR /&gt;
&lt;BR /&gt;
The search itself for the names of the Business Partner does support wildcard search - the standard SAP search parameters are provided.&lt;BR /&gt;
&lt;BR /&gt;
Additionally all Services are used for an error message search. The error message search is very broad and should be provided with the following syntax:&lt;BR /&gt;
&lt;BR /&gt;
(R11)046&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (see Figure 5)&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/11/message_search.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;Figure 5 – Syntax for searching for message within the service messages&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The message search also provides Wildcard search as well as a search containing only the corresponding message number.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Final remarks&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
As this is a very new functionality which hopefully enables easier acess to data echange via Web Services, a follow up Blog post will be provided to explain the technical bckground in more dtail and also will provide a step-by-step description of the very easy to use enhancement concept.&lt;BR /&gt;
&lt;BR /&gt;
In case an error occurs you would need to raise an incident on application component LO-MD-BP-WS.&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;We have taken all measures possible to make this post as accurate as possible, but things sometimes fall through the cracks. In case you find any errors or inconsistencies please let us know.&lt;BR /&gt;
The above given dates and times might change without notice and/or reflection in this blog. For latest accurate dates and times, please check out the referenced, and non-referenced information available from SAP&lt;/EM&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId-1064290317"&gt;&lt;EM&gt;Update:&lt;/EM&gt;&lt;/H3&gt;&lt;BR /&gt;
With SAP Notes &lt;A href="https://launchpad.support.sap.com/#/notes/3101750" target="_blank" rel="noopener noreferrer"&gt;3101750&lt;/A&gt; and &lt;A href="https://launchpad.support.sap.com/#/notes/3101780" target="_blank" rel="noopener noreferrer"&gt;3101780&amp;nbsp;&lt;/A&gt;also the sender interface name is introduced. The purpose and usage is analogues to the receiver (e.g. instead of receivernametable use sendernametable) interface name.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-srt-moni-generic-search-framework-gsf-a-new-way-of/ba-p/13470416"/>
    <published>2020-11-30T22:33:12+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/extension-and-enhancement-of-the-srt-moni-generic-search-framework-gsf/ba-p/13481693</id>
    <title>Extension and enhancement of the SRT_MONI Generic Search Framework (GSF)</title>
    <updated>2020-12-03T09:15:42+01:00</updated>
    <author>
      <name>felixmoehler</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/698777</uri>
    </author>
    <content>&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
This blog post describes the technical background of the SRT_MONI Generic Search Framework (GSF) and explains how to create your own enhanced searches. For more general information on the SRT_MONI GSF please check out &lt;A href="https://blogs.sap.com/2020/11/30/introducing-the-srt_moni-generic-search-framework-gsf-a-new-way-of-filtering-soap-web-service-messages-by-content/" target="_blank" rel="noopener noreferrer"&gt;Introducing the SRT_MONI Generic Search Framework&lt;/A&gt;.&lt;BR /&gt;
&lt;BR /&gt;
The transaction is accessible via these SAP notes:&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/2971973" target="_blank" rel="noopener noreferrer"&gt;2971973&lt;/A&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; SRT_MONI_GSF Creation of package (mandatory)&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/2972601" target="_blank" rel="noopener noreferrer"&gt;2972601&lt;/A&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; SRT_MONI_GSF Interface Note (mandatory)&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/2972602" target="_blank" rel="noopener noreferrer"&gt;2972602&lt;/A&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; SRT_MONI_GSF Application Note Business Partner (optional)&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/2980590" target="_blank" rel="noopener noreferrer"&gt;2980590&lt;/A&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; SRT_MONI_GSF Application Note T100 Messages (optional)&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/3000261" target="_blank" rel="noopener noreferrer"&gt;3000261&lt;/A&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Documentation for Report "Web Service Utilities: Generic Search Framework" (optional)&lt;BR /&gt;
&lt;BR /&gt;
New functionality:&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://launchpad.support.sap.com/#/notes/3101750" target="_blank" rel="noopener noreferrer"&gt;3101750&lt;/A&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; The SRT_MONI Generic Search Framework does not offer the sender name of the service as filter criteria&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Content of a WS message&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The SRT_MONI GSF is used to filter Webservice (WS) messages based on it's content. So let's start by taking a look at how this content is structured (Figure 1) :&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/12/ContentOfWSMessages.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;EM&gt;Figure 1 – Content of a WS Message&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
A WS message usually is structured very simple, since it just consists of a column called NAME, and a column called VALUE. We will call the values inside the NAME column “technical names” and the values from the VALUE column the “corresponding values”.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Technical Background&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Before handing out a step-by-step guide on how to create own enhanced searches it is useful to know how the algorithm works.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/12/SearchAlgorithmDiagramNewUI.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;EM&gt;Figure 2 – Search Algorithm&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
In Figure 2, the search algorithm is shown in detail. At first, the messages are selected based on the information extracted from the UI and the constructor of the specific subclass (e.g. time, date, processing status group, webservice name). The gathered messages are then extracted one by one and are filtered by their technical names and the corresponding values. If the search is successful, the message ID is saved, and the next message is analyzed until all messages have been browsed. If either the technical names or the corresponding values do not fit to the search parameters, the algorithm ignores the message, returns, and goes to the next message. After all messages have been analyzed, the saved message IDs are used to show a list of all found messages.&lt;BR /&gt;
&lt;BR /&gt;
Please be aware that the search can take some time, since the algorithm needs to extract and analyze all messages found after the “Pre-Selection” (the uppermost box in figure 2). It is recommended to narrow down the search criteria as much as possible.&lt;BR /&gt;
&lt;BR /&gt;
The SRT Moni Generic Search Framework also offers Background Processing as explained in &lt;A href="https://blogs.sap.com/2020/11/30/introducing-the-srt_moni-generic-search-framework-gsf-a-new-way-of-filtering-soap-web-service-messages-by-content/" target="_blank" rel="noopener noreferrer"&gt;Introducing the SRT_MONI Generic Search Framework&lt;/A&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;STRONG&gt;Enhancement of the User Interface (UI)&lt;/STRONG&gt;&lt;/P&gt;&lt;BR /&gt;
Figure 3 shows you the area of the UI that can be defined by the user. This includes the two dropdown menus "Search Object" and "Selection Parameter" and the button "Service Selections".&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;STRONG&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/12/UIcustomization-1.png" /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;EM&gt;Figure 3 – Enhancement Area of the UI&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
The dropdown menus are used to combine the technical names in logical units. You can find a further explanation to this concept in chapter &lt;STRONG&gt;Grouping of technical names&lt;/STRONG&gt;. The button offers the possibility to select from a customized list of webservices. This is further described in chapter &lt;STRONG&gt;Enhancement of the GSF&lt;/STRONG&gt;.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Grouping of technical names&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The grouping of the technical names is shown in Figure 7 as an example for the “Search Object” Business Partner. In this example the Business Partner has two “Selection Parameters”: ID and Name. Please note that this example is just for demonstration purposes!&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/12/GroupingNew-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;EM&gt;Figure 4 – Grouping of the Technical Names as an Example for the “Search Object” Business Partner&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
The “Selection Parameter” ID has two technical names beneath it:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘----InternalID’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘----ReceiverInternalID’&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
The “Selection Parameter” Name has five technical names beneath it:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘-------GivenName’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘-------MiddleName’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘-------FamilyName’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘-------AdditionalFamilyName’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘-------BirthName’&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Please be aware that this example is just to demonstrate that different quantities (with no limit) of technical names can be assigned to one “Selection Parameter”.&lt;BR /&gt;
&lt;BR /&gt;
During runtime, the values corresponding to the technical names are compared to the values entered in the field “Value(s)”. It is an select-option field and therefore the input of several values is possible, when you extend the field.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Enhancement of the GSF&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
But enough with the background information. Lets have a look at how you can create and implement your own searches. In this chapter you can find a step-by-step guide on how to enhance the GSF to use your own “Search Object”, “Selection Parameter” with corresponding technical names, and “Service Selection”. We tried to make this as user-friendly as possible.&lt;BR /&gt;
&lt;BR /&gt;
The most important prerequisite is that you have imported and implemented at least the mandatory SAP notes mentioned in chapter&amp;nbsp;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;.&lt;BR /&gt;
&lt;BR /&gt;
This example will create a demo class.&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;EM&gt;&lt;STRONG&gt;Step 1&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
Create a new subclass of CL_SRT_MONI_GSF and press Save.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/12/DemoClassCreate.png" height="177" width="237" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;EM&gt;Figure 5 - Creation of a Demo Class as Subclass of CL_SRT_MONI_GSF&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;STRONG&gt;&lt;EM&gt;Step 2&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;BR /&gt;
Define and implement the constructor of this class by clicking on Constructor.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/12/ConstructorCreation.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;EM&gt;Figure 6 - Definition of the Constructor&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;EM&gt;&lt;STRONG&gt;Step 3&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
In the constructor, maintain the following attributes:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;IF_SRT_MONI_GSF~IDENTIFIER TYPE STRING&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Defines the name of the “Search Object" in this case DEMO&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/12/SearchObjectDemo.png" height="52" width="156" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;EM&gt;Figure 7 - Enhanced Search Object Dropdown&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;IF_SRT_MONI_GSF~TECHNICALSEARCHCRITERIA TYPE TT_SRT_MONI_GSF_SEL_IDENT&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Defines the name of the “Selection Parameter” and the corresponding technical names&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/12/DemoSelectionParameter.png" height="64" width="182" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;EM&gt;Figure 8 - Enhanced Selection Parameter Dropdown&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
You can use method IF_SRT_MONI_GSF~PROVIDE_TECSELCRIT_TO_CONSTRUC( ) to assist with the correct filling of the IF_SRT_MONI_GSF~TECHNICALSEARCHCRITERIA. To do so, call the method with the following parameters:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Importing Parameter: IV_SELECTION_IDENTIFIER TYPE STRING&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Specifies the name of the selection identifier&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Changing Parameter: CT_SEARCH_PARAMETERS TYPE TT_SRT_MONI_TEC_PARAMS&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Specifies the names of the technical names&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;TYPE TABLE OF STRING&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The function must be called once for every entry in the selection parameter dropdown. So, in order to produce the dropdown as shown in Figure 8, you must call the method two times.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;STRONG&gt;&lt;EM&gt;Step 4 (optional)&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;BR /&gt;
The constructor is already complete. After saving and activation the class is already usable. However, you can narrow down the search criteria further. This might be useful for certain Webservices. In the constructor, you can maintain optional attributes as shown below:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;IF_SRT_MONI_GSF~RECEIVERNAMESINGLE TYPE STRING&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Specifies a single interface receiver name (e.g. wildcard ‘BusinessPartner*’)&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;IF_SRT_MONI_GSF~RECEIVERNAMETABLE TYPE IF_SRT_MONI_GSF~TT_SRT_MONI_GSF_SERVICE&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Specifies multiple interface receiver names&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;If this table is filled, it is used by default. If the table is not filled, the value from IF_SRT_MONI_GSF~RECEIVERNAMESINGLE is used&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Table Type TT_SRT_MONI_GSF_SERVICES&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
In this example both IF_SRT_MONI_GSF~RECEIVERNAMESINGLE and IF_SRT_MONI_GSF~RECEIVERNAMETABLE are filled, so the programs logic will only show the values specified inside IF_SRT_MONI_GSF~RECEIVERNAMETABLE.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/12/ServiceSelectionUI.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: center"&gt;&lt;EM&gt;Figure 9 - Enhanced Service Selection Pop Up&lt;/EM&gt;&lt;/P&gt;&lt;BR /&gt;
With SAP Note &lt;A href="https://launchpad.support.sap.com/#/notes/3101750" target="_blank" rel="noopener noreferrer"&gt;3101750&lt;/A&gt; also the sender interface name is introduced. The purpose and usage is analogues to the receiver interface name (e.g. instead of receivernametable use sendernametable). You can find the complete constructor of our example class DEMO below:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt; METHOD constructor.&lt;BR /&gt;
    DATA: lt_tecsearch_param   TYPE if_srt_moni_gsf~tt_srt_moni_gsf_tec_params,&lt;BR /&gt;
          ls_receivernametable TYPE if_srt_moni_gsf~st_srt_moni_gsf_services.&lt;BR /&gt;
    super-&amp;gt;constructor( ).&lt;BR /&gt;
&lt;BR /&gt;
* Fill value for own name - used in first dropdown&lt;BR /&gt;
    if_srt_moni_gsf~identifier = 'DEMO'.&lt;BR /&gt;
&lt;BR /&gt;
* Fill value for object specific search values which are checked in the XMLs and group them if necessary&lt;BR /&gt;
&lt;BR /&gt;
    APPEND 'DEMOTechnicalName1' TO lt_tecsearch_param.&lt;BR /&gt;
    APPEND 'DEMOTechnicalName2' TO lt_tecsearch_param.&lt;BR /&gt;
&lt;BR /&gt;
    if_srt_moni_gsf~provide_tecselcrit_to_construc(&lt;BR /&gt;
    EXPORTING&lt;BR /&gt;
        iv_selection_identifier = 'DEMOSelectionParameter1'&lt;BR /&gt;
    CHANGING&lt;BR /&gt;
        ct_search_parameters    = lt_tecsearch_param ).&lt;BR /&gt;
&lt;BR /&gt;
    APPEND 'DEMOTechnicalName3' TO lt_tecsearch_param.&lt;BR /&gt;
    APPEND 'DEMOTechnicalName4' TO lt_tecsearch_param.&lt;BR /&gt;
    APPEND 'DEMOTechnicalName5' TO lt_tecsearch_param.&lt;BR /&gt;
    APPEND 'DEMOTechnicalName6' TO lt_tecsearch_param.&lt;BR /&gt;
&lt;BR /&gt;
    if_srt_moni_gsf~provide_tecselcrit_to_construc(&lt;BR /&gt;
    EXPORTING&lt;BR /&gt;
        iv_selection_identifier = 'DEMOSelectionParameter2'&lt;BR /&gt;
    CHANGING&lt;BR /&gt;
        ct_search_parameters    = lt_tecsearch_param ).&lt;BR /&gt;
&lt;BR /&gt;
* Fill filter on receiver webservice name&lt;BR /&gt;
* Logic is: If table filter is set, use ONLY these services. If not and single is set, use this one.&lt;BR /&gt;
* If both are not set, display all&lt;BR /&gt;
* Using single value only will increase the performance&lt;BR /&gt;
&lt;BR /&gt;
    if_srt_moni_gsf~receivernamesingle = 'DEMOWebService*'.&lt;BR /&gt;
&lt;BR /&gt;
    ls_receivernametable-name = 'DEMOWebService1'.&lt;BR /&gt;
    ls_receivernametable-selected = abap_true.&lt;BR /&gt;
&lt;BR /&gt;
    APPEND ls_receivernametable TO if_srt_moni_gsf~receivernametable.&lt;BR /&gt;
&lt;BR /&gt;
    ls_receivernametable-name = 'DEMOWebService2'.&lt;BR /&gt;
    APPEND ls_receivernametable TO if_srt_moni_gsf~receivernametable.&lt;BR /&gt;
&lt;BR /&gt;
  ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
Explanation: At first two attributes are declared. Afterwards, the constructor of the superclass is called. Then the name of the “Search Object” is defined, in this case, the name is ‘DEMO’. The dropdown menu “Selection Parameter” is filled by the two method calls. The table LT_TECSEARCH_PARAM is holding the technical names. In this example, the table was filled using an APPEND statement. Inside the method call IF_SRT_MONI_GSF~PROVIDE_TECSELCRIT_TO_CONSTRUC this table gets cleared, so it can be reused for the second method call. You can append an unlimited number of technical names to this table. In this state, the constructor will already be working. However, you can optionally fill in the receiver names as demonstrated in the code snippet. Note that there would be no need to fill the “receivernamesingle” here, because the “receivernametable” is filled automatically. By specifying&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;ls_receivernametable-selected = abap_true.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
the Webservice appended to the "receivernametable" will be set to selected by default when starting the transaction.&lt;BR /&gt;
&lt;BR /&gt;
Besides enhancing the UI and the search criteria in the constructor, you can also implement your own authorization and plausibility checks. To implement a customized authorization or plausibility check, the methods IF_SRT_MONI_GSF~AUTHORIZATION_CHECK and IF_SRT_MONI_GSF~OBJECT_PLAUSIBILITY_CHECK need to be redefined inside the Object Class.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
In this blog post, an overview of how to extend the SRT_MONI GSF by customized searches was given. In addition, you learned about the search algorithm that is used by the framework. I hope that the SRT_MONI GSF will assist you when working with ABAP Web Service Messages.&lt;BR /&gt;
&lt;BR /&gt;
In case an error occurs please raise an incident on application component LO-MD-BP-WS.&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;We have taken all measures possible to make this post as accurate as possible, but things sometimes fall through the cracks. In case you find any errors or inconsistencies please let us know.&lt;BR /&gt;
The above given dates and times might change without notice and/or reflection in this blog post. For latest accurate dates and times, please check out the referenced, and non-referenced information available from SAP.&lt;/EM&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/extension-and-enhancement-of-the-srt-moni-generic-search-framework-gsf/ba-p/13481693"/>
    <published>2020-12-03T09:15:42+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/spend-management-blog-posts-by-members/how-to-send-multiple-erp-systems-master-data-ecc-to-ariba-on-demand/ba-p/13475414</id>
    <title>How to send multiple ERP systems master data (ECC) to ARIBA On-Demand</title>
    <updated>2020-12-03T20:19:15+01:00</updated>
    <author>
      <name>Srikanth_Jutur</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/191500</uri>
    </author>
    <content>/ARBA/MASTER_DATA_EXPORT using this program we can upload master data&amp;nbsp; to ARIBA Cloud from ECC&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;The program /ARBA/MASTER_DATA_EXPORT should be set up to run on a desired schedule to extract information&amp;nbsp; from the relevant SAP tables for the objects&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&amp;nbsp;The output of the program is a .CSV file containing the information necessary for the update&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&amp;nbsp;The file automatically transmitted to the Ariba on -Demand application through&amp;nbsp; an HTTP post&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&amp;nbsp;The file is received by the Ariba on-demand application processed by a receiving job that is triggered at the time the data is transmitted( Immediate processing in Ariba)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The values in Ariba on -Demand are updated with any errors noted in the processing log of the Ariba on-Demand administration console&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Full load&lt;/STRONG&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Incremental Load&amp;nbsp;&lt;/STRONG&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Following data can be transferred to Ariba Cloud&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;General ledger&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;InternalOrder&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Costcenter&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Wbselement&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Asset&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Supplier related data&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Remittance location&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Purchaseorg&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;User related data&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;User and User group&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Companycode&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Overview for multiple systems:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/11/ariba-multi-system.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;To differentiate Master Data&amp;nbsp; from all the ERP(ECC) systems , We have to do prefix specific to system&amp;nbsp; for the following data&lt;/P&gt;&lt;BR /&gt;
Example : Supplier Number : 123456 , if we add&amp;nbsp; prefix to suppplier&amp;nbsp; it will be - ERP1_123456 like wise , we have to do for each and every system..&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;General ledger&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;InternalOrder&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Costcenter&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Wbselement&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Asset&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Supplier related data&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Remittance location&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Purchaseorg&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;User related data&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;User and User group&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Companycode&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Plant&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
How to do a prefix for master data ?&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;Following&amp;nbsp; BADI&amp;nbsp; will be implemented,&amp;nbsp; &amp;nbsp;prefix&amp;nbsp; will be added in the runtime, send the data to Ariba &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/11/ariba-badi-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;This Badi has multiple methods &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/11/ariba-badi2-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
each method is relevant&amp;nbsp; for specific data like Company code , Plant ...using this methods we can enhance and&amp;nbsp; &amp;nbsp;prefix the master data&lt;BR /&gt;
&lt;BR /&gt;
Example : prefixing Vendor Purchase group information&lt;BR /&gt;
&lt;BR /&gt;
Code :&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;Data :lt_SYSTID_MAP type STANDARD TABLE OF /ARBA/SYSTID_MAP,&lt;BR /&gt;
        ls_SYSTID_MAP type /ARBA/SYSTID_MAP,&lt;BR /&gt;
        ls_vendor_info type /arba/vendor,&lt;BR /&gt;
        ls_vendor_PORG_INFO type /arba/vendor_Po,&lt;BR /&gt;
        lv_lifnr(20) type c,&lt;BR /&gt;
        lv_lifnr1(20) type c,&lt;BR /&gt;
        lv_ekorgx(20) type c,&lt;BR /&gt;
        lv_namex(50) type c,&lt;BR /&gt;
        lv_purcsx(20) type c,&lt;BR /&gt;
        lv_sidx(20) type c,&lt;BR /&gt;
        lv_tbix    type sy-tabix,&lt;BR /&gt;
        lv_system(4) type c,&lt;BR /&gt;
        lv_value TYPE tvarv_val,&lt;BR /&gt;
        lv_name TYPE rvari_vnam VALUE 'ERP_ID'.&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
    SELECT SINGLE low " will read value from buffer&lt;BR /&gt;
      INTO lv_value&lt;BR /&gt;
      FROM tvarvc&lt;BR /&gt;
     WHERE name = lv_name.&lt;BR /&gt;
    IF sy-subrc = 0.&lt;BR /&gt;
      lv_system = lv_value.&lt;BR /&gt;
    ENDIF.&lt;BR /&gt;
       CLEAR : lv_lifnr,lv_namex.&lt;BR /&gt;
      LOOP AT  vendor_info[] INTO ls_vendor_info.&lt;BR /&gt;
        lv_tbix = sy-tabix.&lt;BR /&gt;
&lt;BR /&gt;
           CONCATENATE lv_system ls_vendor_info-lifnr INTO&lt;BR /&gt;
                    lv_lifnr.&lt;BR /&gt;
           CONCATENATE lv_system ls_vendor_info-name1 INTO&lt;BR /&gt;
                    lv_namex.&lt;BR /&gt;
           CONCATENATE lv_system ls_vendor_info-systemid INTO&lt;BR /&gt;
                    lv_sidx.&lt;BR /&gt;
&lt;BR /&gt;
        ls_vendor_info-lifnrx = lv_lifnr.&lt;BR /&gt;
        ls_vendor_info-namex = lv_namex.&lt;BR /&gt;
        ls_vendor_info-sidx = lv_sidx.&lt;BR /&gt;
&lt;BR /&gt;
        MODIFY vendor_info from ls_vendor_info INDEX lv_tbix.&lt;BR /&gt;
      ENDLOOP.&lt;BR /&gt;
&lt;BR /&gt;
       LOOP AT  vendor_PORG_info[] INTO ls_vendor_porg_info.&lt;BR /&gt;
        lv_tbix = sy-tabix.&lt;BR /&gt;
&lt;BR /&gt;
           CONCATENATE lv_system ls_vendor_porg_info-lifnr INTO&lt;BR /&gt;
                    lv_lifnr.&lt;BR /&gt;
           CONCATENATE lv_system ls_vendor_porg_info-ekorg INTO&lt;BR /&gt;
                    lv_ekorgx.&lt;BR /&gt;
&lt;BR /&gt;
        ls_vendor_porg_info-lifnrx = lv_lifnr.&lt;BR /&gt;
        ls_vendor_porg_info-ekorgx = lv_ekorgx.&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
        MODIFY vendor_porg_info from ls_vendor_porg_info INDEX lv_tbix.&lt;BR /&gt;
      ENDLOOP&lt;BR /&gt;
&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Conclusion : This way , We can send multiple ERP system data to ARIBA Cloud .&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/spend-management-blog-posts-by-members/how-to-send-multiple-erp-systems-master-data-ecc-to-ariba-on-demand/ba-p/13475414"/>
    <published>2020-12-03T20:19:15+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-netweaver-googleauthenticator-freeotp-for-fiori-launchpad-using/ba-p/13466557</id>
    <title>SAP Netweaver GoogleAuthenticator/FreeOTP for Fiori Launchpad using Keycloak (on Premise)</title>
    <updated>2021-01-30T20:05:58+01:00</updated>
    <author>
      <name>ShankarGomare</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/721486</uri>
    </author>
    <content>In this article we will learn to configuring Multi-factor Authentication (MFA) or 2 Factor Authentication(2FA) for on premise Fiori Launchpad using &lt;STRONG&gt;Keycloak;&lt;/STRONG&gt;&amp;nbsp;an open source Identity and Access Management tool.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IFRAME width="560" height="315" src="https://www.youtube.com/embed/_QmMRTdAr6I" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""&gt;&lt;/IFRAME&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;Image icons courtesy SAP and Keycloak&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
Things required for this configurations:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Keycloak&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Fiori Launchpad on SAP Netweaver&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Google Authenticator or FreeOTP&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
Keycloak is available as free to download (Apache license) in multiple deployment options, I will be using standalone server deployment for this purpose but the configuration steps will not change based on deployment options. This article covers configuration aspect of Keycloak, and installation is beyond scope of this article, though standalone installation is fairly simple and it requires just a single command.&lt;BR /&gt;
&lt;BR /&gt;
The SAML configuration steps are nearly identical in all SAP Netweaver versions, I will be using 7.52 for this article.&lt;BR /&gt;
&lt;BR /&gt;
We will be using Keycloak as Identity Provider (IdP) and SAP Netweaver as Service Provider(SP). First step is to configure SAP Netweaver as SP, so head over to SAP GUI and launch SAML configuration using transaction code "SAML2". This will launch SAML configuration web page (if you see an error, activate SAML2 service in SICF) which looks like below:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-03-42.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-05-16.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Click on "Enable SAML 2.0 Support" and select "Create SAML 2.0 Local Provider" option.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-06-38.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
On next screen enter provider name, usually FQDN is preferred for better understanding but it is not mandatory to do so, any name would work.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-10-03.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Click next to continue.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-11-20.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Everything can be left as default, however, if you prefer not see IdP selection page before redirecting to IdP login page, select "Automatically", and click finish.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-16-35.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Congratulations! you have successfully configured SAP Netweaver as Service Provider(SP). isn't that easy?&lt;BR /&gt;
&lt;BR /&gt;
Now head-over to Keycloak, after successful login Keycloak configuration page looks like below:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-21-30.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
We need SAML2 certificate and metadata to setup trust relationship between SAP Netweaver and Keycloak. Click on "SAML 2.0 Identity Provider Metadata" next to "Endpoints" and save it as ".xml" file.&lt;BR /&gt;
&lt;BR /&gt;
Now, we have to upload metadata and SAML2 certificate in SAP Netweaver, switch back to SAP Netweaver SAML2 configuration page.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-26-05.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Click on "Trusted Providers" tab and add "Upload Metadata Files".&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-28-27.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Upload metadata file downloaded earlier from Keycloak configuration page.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-30-06.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Click next to continue, if alias configured on this page, it will be shown on IdP selection before redirecting to IdP login page.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-31-56.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Click next to continue, if this is production installation make sure to change "Digest Algorithm" to higher value possibly SHA-256.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-34-30.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Click next to continue&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-35-14.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Click next to continue&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-35-52.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Click next to continue&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-36-39.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Keycloak user will be mapped using email attribute, so select "Comparison Method" "Minimum" and add "PasswordProtectedTransport" in "List of Requested Authentication Context". These are bare minimum settings required to use user mapping, if this is production install I would recommend to use better "Comparison Method"&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-41-07.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
The configuration wizard will finish on this page, next we need to map Keycloak user attribute to SAP Netweaver user.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-42-22.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Click edit and add email in "Supported NameID Formats" and change "User ID Mapping Mode" to "Logon Alias".&lt;BR /&gt;
&lt;BR /&gt;
In this step, we will map Keycloak user attribute "Email" to SAP Netweaver user attribute "Logon Alias", make sure to maintain both email and logon alias in respective systems.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-45-26.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Save and Enable.&lt;BR /&gt;
&lt;BR /&gt;
Congratulations! another mile stone, we have successfully setup trust relationship between Keycloak and SAP Netweaver. However, Keycloak does not recognise SAP Netweaver system as a client yet. So, let's download metadata from our Service provider i.e SAP Netweaver.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-49-54.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Switch to "Local Provider" tab and click on "Metadata" button, a prompt will show Metadata download option, download to local drive.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-52-15.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Switch back to Keycloak configuration page and select "Clients". Create a new client using "Create" button on right.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-56-30.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Import SAP Netweaver metadata file downloaded earlier and save the configuration. We have successfully completed bidirectional trust relationship between Keycloak and SAP Netweaver.&lt;BR /&gt;
&lt;BR /&gt;
Last step is to create users in both the systems and assign their mapping attributes. i,e E-mail ID and Logon Alias in Keycloak and SAP Netweaver respectively.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-19-59-57.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Click on "Users" and create a new user with email ID. Unlikely Tony Stark will use Keycloak, let's assume JARVIS controls everything though SSO.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-20-01-58.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Save user and make sure to maintain password on "Credentials" page (turnoff "Temporary" switch to make sure system doesn't prompt for password change)&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-20-05-57.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Create a new user in SAP with logon alias as email ID created earlier in Keycloak, this is a last step in our configuration.&lt;BR /&gt;
&lt;BR /&gt;
Now, it's time to test our brand new configuration, run "/n/UI2/FLP" transaction in SAP GUI to launch Fiori Launchpad and copy the URL. Open launchpad URL in another browser or in a new private mode tab. If you had selected "Identity Provider Discovery: Common Domain Cookie" earlier as automatic you will be redirected to Keycloak login page else you need to click continue on SAP Netweaver login page and the system will redirect to Keycloak login page as below:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-20-11-22.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Now it is time to test our user, enter username and password and click "Log in", on successful authentication the login page will redirect to Fiori Launchpad.&lt;BR /&gt;
&lt;BR /&gt;
Next step is to activate MFA, switch back to Keycloak and edit user "Tony" or whatever user you had created earlier.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-20-21-40.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Select "Configure OTP" under "Required User Actions". On next logon, the system will prompt to link you mobile device using "FreeOTP" or "Google Authenticator" OTP app, follow the instructions.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/01/Screenshot-from-2020-11-29-20-26-46.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
That's it, Congratulations! You have MFA enabled Fiori Launchpad.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;If you like this article, feel free to share, tweet, like or follow me for new articles.&lt;/EM&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-netweaver-googleauthenticator-freeotp-for-fiori-launchpad-using/ba-p/13466557"/>
    <published>2021-01-30T20:05:58+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/extension-and-enhancement-of-sxi-monitor-generic-search-framework/ba-p/13500127</id>
    <title>Extension and enhancement of SXI_MONITOR Generic Search Framework</title>
    <updated>2021-05-17T19:38:40+02:00</updated>
    <author>
      <name>m_keskin</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/745461</uri>
    </author>
    <content>&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
This blog post describes the technical background of the SXI_MONITOR Generic Search Framework and explains how to create your own enhanced searches. For more general information on the SXI_MONITOR_GSF please check out &lt;A href="https://blogs.sap.com/?p=1337335&amp;amp;preview=true&amp;amp;preview_id=1337335" target="_blank" rel="noopener noreferrer"&gt;Introducing the SXI_MONITOR Generic Search Framework.&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
The new transaction is available via the following SAP notes:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://launchpad.support.sap.com/#/notes/2971973" target="_blank" rel="noopener noreferrer"&gt;2971973&lt;/A&gt; - SRT_MONI_GSF Creation of package&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://launchpad.support.sap.com/#/notes/3035719" target="_blank" rel="noopener noreferrer"&gt;3035719&lt;/A&gt; - Generic Search Framework for SXI_MONITOR - Interface Note&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://launchpad.support.sap.com/#/notes/3035724" target="_blank" rel="noopener noreferrer"&gt;3035724 &lt;/A&gt;- Generic Search Framework for SXI_MONITOR_GSF - Application Note BP&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;STRONG&gt;Content of an XML message&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The SXI_MONITOR Generic Search Framework is used to filter XML message based on its content. The following figure shows how an XML message is structured.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/structur-xml2.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Figure 1: Content of a XML Message with Organization Data&lt;/P&gt;&lt;BR /&gt;
An XML message as shown above consists of elements, attributes, their value assignments, and the content of the elements. The fields marked in red in the above example are called "technical names", and the corresponding values marked in green are called "corresponding values".&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Technical Background&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Before we look at how the extension and enhancement of the SXI_MONITOR Generic Search Framework can be carried out, let's take a closer look at how the algorithm works.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/Prasentatio2.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Figure 2: Search Algorithm&lt;/P&gt;&lt;BR /&gt;
The figure above shows the search algorithm in detail. The first step is to filter the XML messages based on the information specified on the user interface and in the constructor of the subclass. The filter consists of various information such as: Date, time, status group or name of the service. The gathered XML messages are then extracted one by one and are filtered by their technical names and the corresponding values. If there is an XML message that fits to the technical names and corresponding values, the message ID is saved. If there is no XML message that not fit to the search parameter, the algorithm ignores the message and goes to the next XML message. All these steps are carried out until all XML messages have been processed. Finally, the XML messages that are found and stored with the message ID are show as a list.&lt;BR /&gt;
&lt;BR /&gt;
Please be aware that the search can take some time, since the algorithm needs to extract and analyze all messages found after the “Pre-Selection”. It is recommended to narrow down the search criteria as much as possible.&lt;BR /&gt;
&lt;BR /&gt;
The SXI_MONITOR Generic Search Framework also offers Background Processing as explained in Introducing the SXI_MONITOR Generic Search Framework.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Enhancement of the User Interface&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Below you can see the user interface of SXI_MONITOR Generic Search Framework, which can be defined by the user. This includes the two dropdown menus “Search Object” and “Selection Parameter” and the button “Service Selections”.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/enhancement1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Figure 3: Enhancement Area of the User Interface&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;Grouping of technical names&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The grouping of the technical names is shown as an example for the “Search Object” Business Partner. In this example the Business Partner has two “Selection Parameters”: ID and Name. Please note that this example is just for demonstration purposes!&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/grouping1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Figure 4: Grouping of the Technical Names as an Example for the “Search Object” Business Partner&lt;/P&gt;&lt;BR /&gt;
The “Selection Parameter” ID has three technical names beneath it:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘PartyID’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘BusinessPartnerInternalID’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;RelationshipBusinessPartnerInternalID’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The “Selection Parameter” Name has 10 technical names beneath it:&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘Name1’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘Name2’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘Name3’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘Name4’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘GivenName’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘SecondName’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘FamilyName’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘BirthName’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘MiddleName’&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;‘PreferredGivenName’&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Please be aware that this example is just to demonstrate that different number of technical names can be assigned to one “Selection Parameter”.&lt;BR /&gt;
&lt;BR /&gt;
During runtime, the values corresponding to the technical names are compared to the values entered in the field “Value(s)”. It is an select-option field and therefore the input of several values is possible.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Enhancement of the Generic Search Framework&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
In this part of the blog post we will take a step-by-step look at how to enhance the Generic Search Framework for your own “Search Object”, “Selection Parameter” with corresponding technical names, and “Service Selection”. We tried to make this as user-friendly as possible. The most important prerequisite is that you have imported and implemented at least the mandatory SAP notes mentioned in chapter introduction. This example will create a demo class.&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;Step 1:&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
Create a new subclass of CL_SXI_MONITOR_GSF and save it.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/create-class.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Figure 5: Creation of a Demo Class as Subclass of CL_SXI_MONITOR_GSF&lt;/P&gt;&lt;BR /&gt;
&lt;EM&gt;Step 2:&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
Define and implement the constructor of this class by clicking on Constructor.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/create-constructor.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Figure 6: Definition of the Constructor&lt;/P&gt;&lt;BR /&gt;
&lt;EM&gt;Step 3:&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
In the constructor, maintain the following attributes:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;IF_SXI_MONITOR_GSF~IDENTIFIER, which defines the name of the “Search Object”&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/search-object-dd.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Figure 7: Enhanced Search Object Dropdown&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;IF_SXI_MONITOR_GSF~TECHNICALSEARCHCRITERIA, which defines the name of the “Selection Parameter” and the corresponding technical names&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/selection-parameter-dd2.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Figure 8: Enhanced Selection Parameter Dropdown&lt;/P&gt;&lt;BR /&gt;
For the correct filling of “Selection Parameter” you can use the method IF_SXI_MONITOR_GSF~PROVIDE_TECSELCRIT_TO_CONSTRUC( ). To do so, call the method with the following parameters:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Importing Parameter: IV_SELECTION_IDENTIFIER, which specifies the names of the selection identifier&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Changing Parameter: CT_SEARCH_PARAMETERS, which specifies the names of the technical names&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
The function must be called once for every entry in the selection parameter dropdown. So, to produce the dropdown as shown in Figure, you must call the method three times&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;Step 4 (optional):&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
An optional enhancement can still be added, which can narrow down the search criteria. This is the “Service Selection”, which is also added in the constructor. To do this, the following steps should be carried out:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;IF_SXI_MONITOR_GSF~SENDERNAMESINGLE, which specifies a single interface sender name (e.g. wildcard ‘*BusinessPartner*’).&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;IF_SXI_MONITOR_GSF~SENDERNAMETABLE, which specifies multiple interface sender names. If this table filled, it is used by default.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;IF_SXI_MONITOR_GSF~RECEIVERNAMESINGLE, which specifies a single interface receiver name.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;IF_SXI_MONITOR_GSF~RECEIVERNAMETABLE, which specifies multiple interface receiver names. If this table filled, it is used by default.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/demo.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Figure 9: Enhanced Service Selection Pop Up&lt;/P&gt;&lt;BR /&gt;
You can find the complete constructor of our example class DEMO below:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;METHOD constructor.&lt;BR /&gt;
    DATA: lt_tecsearch_param   TYPE if_sxi_monitor_gsf~tt_sxi_monitor_gsf_tec_params,&lt;BR /&gt;
          ls_sendernametable TYPE if_sxi_monitor_gsf~st_sxi_monitor_gsf_services,&lt;BR /&gt;
          ls_receivernametable TYPE if_sxi_monitor_gsf~st_sxi_monitor_gsf_services.&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
    super-&amp;gt;constructor( ).&lt;BR /&gt;
&lt;BR /&gt;
* Fill value for own name - used in first dropdown&lt;BR /&gt;
    if_sxi_monitor_gsf~identifier = 'DEMO'.&lt;BR /&gt;
&lt;BR /&gt;
* Fill value for object specific search values which are checked in the XMLs and group them if necessary&lt;BR /&gt;
&lt;BR /&gt;
    APPEND 'DEMOTechnicalName1' TO lt_tecsearch_param.&lt;BR /&gt;
    APPEND 'DEMOTechnicalName2' TO lt_tecsearch_param.&lt;BR /&gt;
&lt;BR /&gt;
    if_sxi_monitor_gsf~provide_tecselcrit_to_construc(&lt;BR /&gt;
    EXPORTING&lt;BR /&gt;
        iv_selection_identifier = 'DEMOSelectionParameter1'&lt;BR /&gt;
    CHANGING&lt;BR /&gt;
        ct_search_parameters    = lt_tecsearch_param ).&lt;BR /&gt;
&lt;BR /&gt;
    APPEND 'DEMOTechnicalName3' TO lt_tecsearch_param.&lt;BR /&gt;
    APPEND 'DEMOTechnicalName4' TO lt_tecsearch_param.&lt;BR /&gt;
    APPEND 'DEMOTechnicalName5' TO lt_tecsearch_param.&lt;BR /&gt;
    APPEND 'DEMOTechnicalName6' TO lt_tecsearch_param.&lt;BR /&gt;
&lt;BR /&gt;
    if_sxi_monitor_gsf~provide_tecselcrit_to_construc(&lt;BR /&gt;
    EXPORTING&lt;BR /&gt;
        iv_selection_identifier = 'DEMOSelectionParameter2'&lt;BR /&gt;
    CHANGING&lt;BR /&gt;
        ct_search_parameters    = lt_tecsearch_param ).&lt;BR /&gt;
&lt;BR /&gt;
    if_sxi_monitor_gsf~provide_tecselcrit_to_construc(&lt;BR /&gt;
    EXPORTING&lt;BR /&gt;
        iv_selection_identifier = 'DEMOSelectionParameter3'&lt;BR /&gt;
    CHANGING&lt;BR /&gt;
        ct_search_parameters    = lt_tecsearch_param ).&lt;BR /&gt;
&lt;BR /&gt;
* Fill filter on sender webservice name&lt;BR /&gt;
* Logic is: If table filter is set, use ONLY these services. If not and single is set, use this one.&lt;BR /&gt;
* If both are not set, display all&lt;BR /&gt;
* Using single value only will increase the performance&lt;BR /&gt;
&lt;BR /&gt;
    if_sxi_monitor_gsf~sendernamesingle = 'DEMOSenderService*'.&lt;BR /&gt;
    if_sxi_monitor_gsf~receivernamesingle = 'DEMOReceiverService*'.&lt;BR /&gt;
&lt;BR /&gt;
    ls_sendernametable-name = 'DEMOService1'.&lt;BR /&gt;
    ls_sendernametable-selected = abap_true.&lt;BR /&gt;
&lt;BR /&gt;
    APPEND ls_sendernametable TO if_sxi_monitor_gsf~sendernametable.&lt;BR /&gt;
&lt;BR /&gt;
    ls_sendernametable-name = 'DEMOService2'.&lt;BR /&gt;
    APPEND ls_sendernametable TO if_sxi_monitor_gsf~sendernametable.&lt;BR /&gt;
&lt;BR /&gt;
    ls_sendernametable-name = 'DEMOService3'.&lt;BR /&gt;
    APPEND ls_sendernametable TO if_sxi_monitor_gsf~sendernametable.&lt;BR /&gt;
&lt;BR /&gt;
    ls_receivernametable-name = 'DEMOReceiverService4'.&lt;BR /&gt;
    ls_receivernametable-selected = abap_true.&lt;BR /&gt;
&lt;BR /&gt;
    APPEND ls_receivernametable TO if_sxi_monitor_gsf~receivernametable.&lt;BR /&gt;
&lt;BR /&gt;
    ls_receivernametable-name = 'DEMOReceiverService5'.&lt;BR /&gt;
    APPEND ls_receivernametable TO if_sxi_monitor_gsf~receivernametable.&lt;BR /&gt;
&lt;BR /&gt;
    ls_receivernametable-name = 'DEMOReceiverService6'.&lt;BR /&gt;
    APPEND ls_receivernametable TO if_sxi_monitor_gsf~receivernametable.&lt;BR /&gt;
ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;EM&gt;Explanation:&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
First, two data elements are declared that are necessary for the technical search criteria and for the service selection. Then the constructor of the superclass is called. The next step is to define the name of the search object, in this case the search object has the name DEMO. There are two method calls that are responsible for filling the selection parameters. The associated technical names were added to the table LT_TECSEARCH_PARAM with the APPEND command. In the lower part of the coding you can optionally specify the service selections. With IF_SXI_MONITOR_GSF~SENDERNAMESINGLE and/or IF_SXI_MONITOR_GSF~RECEIVERNAMESINGLE you can define a service. With IF_SXI_MONITOR_GSF~SENDERNAMETABLE and/or IF_SXI_MONITOR_GSF~RECEIVERNAMETABLE you have the possibility to create several services. Besides enhancing the UI and the search criteria in the constructor, you can also implement your own authorization and plausibility checks. To implement a customized authorization or plausibility check, the methods IF_SXI_MONITOR_GSF~AUTHORIZATION_CHECK and IF_SXI_MONITOR_GSF~OBJECT_PLAUSIBILITY_CHECK need to be redefined inside the Object Class.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
In this blog post I have given you an overview of how you can expand SXI_MONITOR Generic Search Framework using self-defined search objects. You also saw briefly how the algorithm of the Generic Search Framework works. I hope that the SXI_MONITOR GSF can help you with working with XML messages.&lt;BR /&gt;
&lt;BR /&gt;
In case an error occurs please raise an incident on application component LO-MD-BP-WS.&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;We have taken all measures possible to make this post as accurate as possible, but things sometimes fall through the cracks. In case you find any errors or inconsistencies please let us know.&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;The above given dates and times might change without notice and/or reflection in this blog post. For latest accurate dates and times, please check out the referenced, and non-referenced information available from SAP.&lt;/EM&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/extension-and-enhancement-of-sxi-monitor-generic-search-framework/ba-p/13500127"/>
    <published>2021-05-17T19:38:40+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-sxi-monitor-generic-search-framework/ba-p/13500077</id>
    <title>Introducing the SXI_MONITOR Generic Search Framework</title>
    <updated>2021-05-18T08:24:44+02:00</updated>
    <author>
      <name>m_keskin</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/745461</uri>
    </author>
    <content>&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The transaction SXI_MONITOR is used to monitor XML-Messages. This transaction enables you to search for XML-Messages, and filter them based on criteria like date, time, message ID, sender-, and receiver information etc. However, it is so far missing the functionality to filter the messages based on their content easily (transaction SXI_MONITOR also provides the possibility to search for content values, but that is more complex and can’t be run in background).&lt;BR /&gt;
&lt;BR /&gt;
Therefore, the SXI Monitor Generic Search Framework (GSF) was developed. It introduces a new modular way to filter the messages based on the information extracted from their corresponding XML data. The goal of this development is to create an easy and customizable way to filter XML-Messages based on their content.&lt;BR /&gt;
&lt;BR /&gt;
Details on the technical background can be found in the article &lt;A href="https://blogs.sap.com/?p=1337360&amp;amp;preview=true&amp;amp;preview_id=1337360" target="_blank" rel="noopener noreferrer"&gt;Extension and enhancement of the SXI_MONITOR Generic Search Framework.&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
The new functionality is available by transaction code: &lt;STRONG&gt;SXI_MONITOR_GSF&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;User Interface&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Figure 1 shows a screenshot of the User Interface. So far, the user interface consists of two major sections. The standard selection criteria, which is not customizable, and the enhanced selection criteria, which is customizable using the GSF. The customization is explained below.&lt;BR /&gt;
&lt;BR /&gt;
The standard selection criteria are used to pre-select messages as shown in Figure 1 (the uppermost box). The section containing the enhanced selection criteria is used to browse the content of the XML-message. The two dropdown menus “Search Object”, and “Selection Parameter” are used to group the technical names into different categories. The “Search Object” defines herby the generic term (e.g. Business Partner, Customer, Vendor etc.). The “Selection parameter” defines the subcategory (e.g. ID, Name etc.). Every Selection Parameter corresponds to an unlimited number of technical names. The grouping of the technical names is further explained in the enhanced technical description of Transaction SXI_MONITOR_GSF.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/user-interface-1-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic;font-family: 'SAPRegular', 'Helvetica Neue', Arial, sans-serif"&gt;Figure 1: User Interface&lt;/P&gt;&lt;BR /&gt;
The pushbutton “Service Selection” provides the user with a popup (Figure 2) on which they can select the webservices they want to search for. By default, all webservices are selected. It is mandatory to select at least one webservice.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/service-selection-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic;font-family: 'SAPRegular', 'Helvetica Neue', Arial, sans-serif"&gt;Figure 2: Select/De-select Services&lt;/P&gt;&lt;BR /&gt;
In the field “Value(s)”, enter the values you want to search for, e.g. different Business Partner IDs. After all fields are filled, the search can be started either by pressing F8, by clicking the button “Execute” in the lower right corner, or by choosing “More” -&amp;gt; “Program” -&amp;gt; “Execute”. The search starts in the foreground. The screen is locked until the program is done. An example of a result list is shown in Figure 3&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/search-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic;font-family: 'SAPRegular', 'Helvetica Neue', Arial, sans-serif"&gt;Figure 3: Example of a result list&lt;/P&gt;&lt;BR /&gt;
The performance can be low due to a high number of messages that need to be extracted and analyzed. For that reason, foreground processing might not be useful. To offer more utility, background processing is available in the SXI Monitor Generic Search Framework. By choosing “More” -&amp;gt; “Program” -&amp;gt; “Execute in Background”, the search gets submitted as a job. You can display the running Job e.g. using transaction &lt;STRONG&gt;SM37&lt;/STRONG&gt; or via “More” -&amp;gt; “System” -&amp;gt; “Own Jobs”. After the job has finished, the message IDs found are displayed in the print job log as shown in Figure 4.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/05/background-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic;font-family: 'SAPRegular', 'Helvetica Neue', Arial, sans-serif"&gt;Figure 4: Example of a result list as job log&lt;/P&gt;&lt;BR /&gt;
The message IDs can be easily copied and transported for further analysis to transaction &lt;STRONG&gt;SXI_MONITOR&lt;/STRONG&gt;.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Delivery and initial usage hints&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
The new transaction is available via the following SAP notes:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://launchpad.support.sap.com/#/notes/2971973" target="_blank" rel="noopener noreferrer"&gt;2971973&lt;/A&gt; - SRT_MONI_GSF Creation of package&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://launchpad.support.sap.com/#/notes/3035719" target="_blank" rel="noopener noreferrer"&gt;3035719&lt;/A&gt; - Generic Search Framework for SXI_MONITOR - Interface Note&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://launchpad.support.sap.com/#/notes/3035724" target="_blank" rel="noopener noreferrer"&gt;3035724&lt;/A&gt; - Generic Search Framework for SXI_MONITOR_GSF - Application Note&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
The SAP notes have to be applied in the given order.&lt;BR /&gt;
&lt;BR /&gt;
Per default the new functionality is delivered for mainly Business Partner Messages searching the name, number of the Business Partner or the number of the customer / supplier.&lt;BR /&gt;
&lt;BR /&gt;
The search itself for the Business Partner does support wildcard search – the standard SAP search parameters are provided.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Final remarks&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
As this is a very new functionality which hopefully enables easier access to data exchange via XML-Messages, a follow up Blog post will be provided to explain the technical background in more detail and also will provide a step-by-step description of the very easy to use enhancement concept.&lt;BR /&gt;
&lt;BR /&gt;
In case an error occurs, you would need to raise an incident on application component LO-MD-BP-WS.&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;We have taken all measures possible to make this post as accurate as possible, but things sometimes fall through the cracks. In case you find any errors or inconsistencies please let us know.&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;The above given dates and times might change without notice and/or reflection in this blog. For latest accurate dates and times, please check out the referenced, and non-referenced information available from SAP&lt;/EM&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-sxi-monitor-generic-search-framework/ba-p/13500077"/>
    <published>2021-05-18T08:24:44+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/using-webservices-to-transfer-data-to-sap-bw-soa-manager-and-soap/ba-p/13544492</id>
    <title>Using WebServices to transfer data to SAP BW- SOA Manager and SOAP Configurations</title>
    <updated>2022-01-31T21:57:58+01:00</updated>
    <author>
      <name>former_member212011</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/212011</uri>
    </author>
    <content>&lt;STRONG&gt;Introduction-&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
WebService is one of the &lt;STRONG&gt;RDA&lt;/STRONG&gt; (Realtime Data Access) techniques that can be used as a &lt;STRONG&gt;Push&lt;/STRONG&gt; mechanism to transfer from data in the form of XMLs to SAP BW and HANA systems.&lt;BR /&gt;
&lt;BR /&gt;
Web Services are mostly used to transfer the data in SAP BW/ HANA environments when the data mostly resides on web portals or on some external servers which are non-compatible or can not directly communicate with SAP, then by enabling the SAP's SOAP services this form of data can be pushed to SAP BW and HANA system's staging and architected data marts or any other layer which is used for reporting purpose.&lt;BR /&gt;
&lt;BR /&gt;
Basically the data in SAP BW is received in the form of requests either through &lt;STRONG&gt;Pull or Push&lt;/STRONG&gt; mechanisms. Pull mechanism is active when the data is residing in the Delta Queues and BW daemon jobs or ODP extractors or normal InfoPackages bring them through the IDOCs to BW PSA or ADSOs respectively.&lt;BR /&gt;
&lt;BR /&gt;
Through the Push mechanism also data gets fetched in SAP BW only but External system plays the role of controlling the data transfer either in a scheduled manner or on adhoc basis.&lt;BR /&gt;
&lt;BR /&gt;
Both form of data can be tracked using the Request IDs in SAP.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Detailed Overview and Steps&lt;/STRONG&gt; -&lt;BR /&gt;
&lt;BR /&gt;
Now that we are clear with the basic understanding of the scenario when to enable the WebServices for pushing data to SAP BW lets find the detailed steps which are mandatory for such type of data extractions.&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Check for soap services whether it is active or not in tcode SICF. Click execute button.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;TCode- SICF&lt;/P&gt;&lt;BR /&gt;
2. Drilldown as per below to find soap –&lt;BR /&gt;
Default_host -&amp;gt; sap -&amp;gt; bw -&amp;gt; xml -&amp;gt; soap.&lt;BR /&gt;
&lt;BR /&gt;
If soap is not active, right click on it and activate it.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS2.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS3.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Soap in SICF&lt;/P&gt;&lt;BR /&gt;
3. Create a Data Source with the file format provided by any non-sap system under &lt;SPAN style="text-decoration: underline"&gt;Web Services Source System&lt;/SPAN&gt;.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/Ss4.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Data Source Creation in SAP BW&lt;/P&gt;&lt;BR /&gt;
4. Navigate to SOAMANAGER tcode. Open below highlighted-&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS5.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;SOA Management&lt;/P&gt;&lt;BR /&gt;
5. Click on the required function module for the data source created.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS6.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
6. Click on Create Service.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS7.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
7. Enter details with meaningful texts and click Next.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS8.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
8. Select as per below-&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS9.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS10.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
9. Click Next-&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS11.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
10. Click Finish-&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/ss12.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
11. You will find the Service is activated.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS13.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
12. Click on below highlighted button.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS14.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
13. Below URL will get generated.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/SS15.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;WSDL URL&lt;/P&gt;&lt;BR /&gt;
14. Click on below highlighted button.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/ss16-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
15. You may find below error for incorrect Port and Host Name.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/ss17.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
16. Go back to main screen of SOAMANAGER and Open below.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/ss18.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
17. Open Web Services Navigator and maintain entries for Hostname and Port name (This information needs to be provided by the external system’s Administrator or SAP Basis.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/ss19.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
18. Navigate to the path in SICF shown in automated URL which was generated while creating the Service.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/ss20.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/ss21.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
19. If wsdl is inactive, right click , activate and then right click again and Test.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/01/ss22.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
20. The result will show in a web page when you execute the WSDL url in an XML page format showing the data from backend source table.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
This way you can configure the WebServices to push the data from the external source tables in to SAP BW system's staging layers. From the PSA it can either be pulled manually to other data marts or schedule the load via process chains.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/using-webservices-to-transfer-data-to-sap-bw-soa-manager-and-soap/ba-p/13544492"/>
    <published>2022-01-31T21:57:58+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/integrate-sap-tm-ecc-by-enhancing-standard-webservice-without-pi/ba-p/13538022</id>
    <title>Integrate SAP TM-ECC by Enhancing Standard Webservice Without PI</title>
    <updated>2022-05-02T10:26:33+02:00</updated>
    <author>
      <name>poulamidas</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/801487</uri>
    </author>
    <content>&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
SAP TM or Transport Management System is used to optimize logistics by managing all aspects of Transportation processes within a company. Not only it streamlines the logistics businesses by improving efficiency, but it also helps in reducing cost of business. One of the key aspects of implementing SAP TM is its integration with ECC system. In many cases, data is replicated using Service Interfaces. It is also quite common that customized structures or attributes need to be replicated from SAP TM to ECC.&lt;BR /&gt;
&lt;BR /&gt;
Accommodate the custom attributes, the webservice need to be enhanced. This enhancement can be done with or without involving PI as a middleware.&lt;BR /&gt;
&lt;BR /&gt;
In this blogpost, I have shared the solution to enhance webservices via Point-to-Point connection using SOAMANAGER technology. Using Backend Metadata Repository, the enhancement can be achieved.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Requirement&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Shipments can be created in ECC from Freight Order in SAP TM. The shipment created in ECC does not have the vehicle type. Therefore, we will enhance the webservice to send the Vehicle Type through a custom attribute from TM to ECC.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Access to SAP TCodes like SPROXY, SRT_MONI, SPXNGENAPPL&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Knowledge of SAP ABAP, BOPF coding.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Solution&amp;nbsp;&amp;nbsp; &lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Step 1: Create Custom Namespace in TM System&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Go to TCode &lt;STRONG&gt;SPXNGENAPPL&lt;/STRONG&gt; to create the custom namespace under which the enhancement will be created.&lt;BR /&gt;
&lt;BR /&gt;
Create an entry for the custom namespace (Format: &lt;A href="http://CompanyName/xi/RelevantName" target="_blank" rel="nofollow noopener noreferrer"&gt;http://CompanyName/xi/RelevantName&lt;/A&gt;). Choose the option Backend Metadata Repository from the dropdown from the right column.&lt;BR /&gt;
&lt;BR /&gt;
Save the entry. It does not get captured in TR. We must create the entry manual in higher environments.&lt;BR /&gt;
&lt;BR /&gt;
To easy identification, use the namespace of the Standard Webservice and append some meaningful name at the end separated by ‘/.’ &lt;STRONG&gt;The custom namespace name is critical&lt;/STRONG&gt;. X`&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;STRONG&gt; &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic1-4.png" /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;The same namespace will be present under namespaces in SPROXY, and the enhanced nodes and structures will be saved there.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Step 2: Enhance Standard Webservice in TM System&lt;/STRONG&gt;&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Locate the Webservice.&lt;/STRONG&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Now go to TCode &lt;STRONG&gt;SPROXY&lt;/STRONG&gt;. Find the Service to be enhanced. Double click on it. The Service Consumer details will display on the right. Go to &lt;STRONG&gt;Internal View&lt;/STRONG&gt; Tab.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic2-5.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
We will use the following webservices in TM and in ECC, respectively.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;TM: TransportationOrderSCMExecutionRequest_Out (Service Consumer)&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;ECC: TransportationOrderSCMExecutionRequest_In (Service Provider)&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;OL start="2"&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Find the Node to be Enhanced&lt;/STRONG&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Here, we will be enhancing the node &lt;STRONG&gt;TRANSPORTATION_ORDER_EXECUTION&lt;/STRONG&gt; and adding custom attributes to it.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic3-4.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Click on the node &lt;STRONG&gt;TRANSPORTATION_ORDER_EXECUTION &lt;/STRONG&gt;and once the window on the appears, double click on the ABAP Name (Here, &lt;STRONG&gt;/SCMTMS/CPX_TOR_SCMEXR_TOREXE&lt;/STRONG&gt;) under Global Data Type with Elements.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
The node structure will open. Go to &lt;STRONG&gt;Proxy Editor&lt;/STRONG&gt;.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic4-4.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Click on &lt;STRONG&gt;Create Enhancement&lt;/STRONG&gt; to create Data Type Structure. A wizard will appear.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic5-4.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Provide Enhancement Name as per the naming conventions followed by the organisation. In the namespace, provide the namespace name you have maintained earlier for the MDR. Next, click on Continue button at the bottom.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic6-3.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
In the next step, maintain &lt;STRONG&gt;Package&lt;/STRONG&gt;, &lt;STRONG&gt;Transport Request&lt;/STRONG&gt; No and &lt;STRONG&gt;Prefix &lt;/STRONG&gt;name. The prefix is for internal attributes. If TR number is not known, check Local Button.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic7-3.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Click on Continue and Finish. Once done, click on SAVE button to save the changes.&lt;BR /&gt;
&lt;BR /&gt;
Now go to External View to add custom attributes to the structure environment. You can add individual attributes, or you can add a custom data type to the enhancement.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic8-3.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
To add an attribute or element, right click on the Enhancement Name and choose attribute or element.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic9-3.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
If you want to add a custom data type, choose &lt;STRONG&gt;Add Element,&lt;/STRONG&gt; and provide appropriate name starting with YY or ZZ.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic10-5.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Now, right click on the Element Name and choose &lt;STRONG&gt;Set Global Type Reference&lt;/STRONG&gt; to create custom reference for the datatype.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic11-4.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic12-3.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Here you can create your own reference or use existing ones. Creating reference will open a wizard like the previous one. Once you have created the reference, add maximum length and type to the elements.&lt;BR /&gt;
&lt;BR /&gt;
After creation of custom fields, save and activate the changes.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Step 3: Add Custom Code for Custom Attributes in ECC&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;We need to add our own custom code to perform data mapping for the custom attributes. This will allow the system to send the data from the system to the XML message.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;BADI in TM System: /SCMTMS/TOR_SE_SHPMNT_REQ&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Interface: /SCMTMS/TOR_IF_SE_SHPMNT_REQ&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;Create BADI Implementation and add your code to complete the mappings of the attribute.&lt;BR /&gt;
&lt;BR /&gt;
The data present in the &lt;STRONG&gt;OUT &lt;/STRONG&gt;structure is finally send to the XML message. Therefore, the data manipulation or data population of the custom attributes should be done in the &lt;STRONG&gt;OUT&lt;/STRONG&gt; structure.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
In TM system, every document acts like an Object. Therefore, BOPF coding might be required the required value.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic13-3.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
After replication, the XML message can be checked in SRT_MONI TCode to display XML messages. You can check whether the XML message has been successfully processed in the system. This is visible both in Source and Target System.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/04/pic14-4.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Step 4: Create Custom Namespace in ECC System&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Repeat Step 1 in ECC system as well. Be extra careful to maintain the exact Namespace name as it was maintained in TM system.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;This is crucial as identical mappings and names in source and target will ensure that XML is mapped properly, and data is flowing between the system successfully.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Step 5: Enhance Standard Webservice in ECC&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Webservice Name in ECC: TransportationOrderSCMExecutionRequest_In (Service Provider)&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Follow the same steps as they were in step 2. Keep the names in every step identical in both source and Target system. So, the enhancement name, structure name, attribute name as well as the data types should be identical in both systems.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;And most importantly, the Custom Namespace (MDR) name should be identical, even upper case and lower case. &lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Step 5: Add Custom Code for Custom Attributes in ECC&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Like the Source system, the custom attributes need to be mapped to the correct fields in the Target system for further usage.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;BADI in ECC is:&amp;nbsp; TRA_SE_TO_SHPMNT_RQ_IN&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Interface: IF_TRA_SE_TO_SHPMNT_RQ_IN&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Here, the incoming data from the XML message will be stored in the IN structure. The data received from TM system can be stored in Standard Table as well Custom table to be used later.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
In this blog post, we have enhanced a standard webservice by addition of custom attributes without involving PI system. This Point-to-Point communication system can be used in multiple scenarios without involving any middleware or third parties. It is synchronous and efficient and highly effective.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/integrate-sap-tm-ecc-by-enhancing-standard-webservice-without-pi/ba-p/13538022"/>
    <published>2022-05-02T10:26:33+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-rest-api-http-service-call-from-postman-json-to-abap-data/ba-p/13545948</id>
    <title>ABAP REST API http Service call from Postman: JSON to ABAP data</title>
    <updated>2022-05-10T09:42:07+02:00</updated>
    <author>
      <name>former_member751941</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/751941</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1090302760"&gt;&lt;STRONG&gt;This blog post will describe the steps of &lt;EM&gt;how to expose REST API and handle REST API request from SAP ECC 6.0 without installing SAP Gateway service builder component. It will also help to convert json data to ABAP data. In this blog post I have described how to build web server service in ECC application server of Rest APIs using JSON data format. &lt;/EM&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
Prerequisite JSON data format, SAP logon and postman.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;&lt;U&gt;Define JSON structure:&lt;/U&gt;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
JSON is a text-based data format which follow JavaScript object syntax. It stores the value in form of key value pair. Each of the property and value is separated with colon (:).&lt;BR /&gt;
&lt;BR /&gt;
In ABAP define JSON structure which will be posted though POST request body and will be handled by HANDLE_REQUEST method. In se11 create JSON structure.&lt;BR /&gt;
&lt;BR /&gt;
JSON structure and Table Type:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/JSONStructure.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/JSONTableType.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;&lt;U&gt;Implement http Request handle Method inside handling class:&lt;/U&gt;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Create a class ZMG_TEST_JSON with public instantiation using t-code se24 and add HANDLE_REQUEST standard method.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/ClassMethod-HANDLE_REQUEST.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/IF_HTTP_EXTENSION.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Inside the class, Implement HANDLE_REQUEST standard method of interface IF_HTTP_EXTENSION. Implemented method will process POST request with JSON body which will be posted through postman. Request can also be triggered from AZURE or any other third-party.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;&lt;U&gt;Maintain Service: ICF Hierarchy service:&lt;/U&gt;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Internet Communication Framework (ICF) services&amp;nbsp;is an integrated component of Application server which allows us to communicate with SAP systems using internet standard protocol HTTP, HTTPs SMTP etc.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;SICF t-code to create independent service ZMG_TEST_SRV in ICF hierarchy.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/ZMG_TEST_SRV-sicf-Service.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;To link handler class with created service, in service's hander list tab add created handler class (ZMG_TEST_JSON) and save.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;Adding ZMG_TEST_JSON class in service:&lt;/EM&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/Adding-ZMG_TEST_JSON-class-in-service.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;Service will be created in the selected path. Right click and activate the service.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="text-align: left;overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/Activate_ServicePath.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;EM&gt;Activate Service:&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/Activate_Service.png" /&gt;&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Right click and test the service. Server URL will be generated.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;Service URL:&lt;/EM&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/RESTServiceURL.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
In SAP ECC, put a debugger in implemented HANDLE_REQUEST method of ZMG_TEST_JSON.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;&lt;U&gt;Http Post in REST API:&lt;/U&gt;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
POST is a request method supported by HTTP used by the World Wide Web. By design, the POST request method requests that a &lt;STRONG&gt;web server accept the data enclosed in the body of the request&lt;/STRONG&gt; &lt;STRONG&gt;message&lt;/STRONG&gt;. It is often used when uploading a file or when submitting a file in request body. Submitting the request with JSON body.&lt;BR /&gt;
&lt;BR /&gt;
Open Postman and paste the generated URL. Check header parameters, paste JSON body and send the request.&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;Postman Collection:&lt;/EM&gt;&lt;BR /&gt;
&lt;P style="text-align: left;overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/Postman-URL.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;EM&gt;Send request to server for process:&lt;/EM&gt;&lt;BR /&gt;
&lt;P style="text-align: left;overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/Postman-Request-Json-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;EM&gt;HTTP request methods (GET, POST, PUT, DELETE, COPY …) are embedded in header field with the name '~request_method' uri service path of request header with the name '~request-uri'&lt;/EM&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;&lt;U&gt;ABAP built for converting JSON data format to ABAP data format:&lt;/U&gt;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
As per implemented method posted json will be parsed and will be stored in sap internal table.&lt;BR /&gt;
&lt;BR /&gt;
HANDLE_REQUEST_Implementation:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;METHOD if_http_extension~handle_request.&lt;BR /&gt;
  TYPES: BEGIN OF ly_emp,&lt;BR /&gt;
         number          TYPE char7,&lt;BR /&gt;
         dateofjoining   TYPE char40,&lt;BR /&gt;
         name            TYPE char40,&lt;BR /&gt;
   END OF ly_emp.&lt;BR /&gt;
  TYPES: BEGIN  OF ly_post_res,&lt;BR /&gt;
         departmentcode   TYPE char10,&lt;BR /&gt;
         departmentname   TYPE char50,&lt;BR /&gt;
         employee         TYPE ly_emp,&lt;BR /&gt;
         END OF ly_post_res.&lt;BR /&gt;
  DATA:&lt;BR /&gt;
        lv_request_uri      TYPE string,&lt;BR /&gt;
        lv_request_method   TYPE string,&lt;BR /&gt;
        lv_content_type     TYPE string,&lt;BR /&gt;
        lv_req_body         TYPE string.&lt;BR /&gt;
  DATA: cl_fdt_json   TYPE REF TO cl_fdt_json,&lt;BR /&gt;
        lx_root       TYPE REF TO cx_root,&lt;BR /&gt;
        ls_data       TYPE zmg_json_struct,&lt;BR /&gt;
        lt_final      TYPE TABLE OF zmg_json_struct.&lt;BR /&gt;
&lt;BR /&gt;
  lv_request_uri         = server-&amp;gt;request-&amp;gt;get_header_field( name = '~request_uri' ).&lt;BR /&gt;
  lv_request_method      = server-&amp;gt;request-&amp;gt;get_header_field( name = '~request_method' ).&lt;BR /&gt;
  lv_content_type        = server-&amp;gt;request-&amp;gt;get_header_field( name = 'content-type' ).&lt;BR /&gt;
&lt;BR /&gt;
  lv_req_body = server-&amp;gt;request-&amp;gt;get_cdata( ).&lt;BR /&gt;
&lt;BR /&gt;
  IF lv_req_body IS NOT INITIAL.&lt;BR /&gt;
    REPLACE ALL OCCURRENCES OF REGEX '[^[:print:]]' IN lv_req_body WITH space.&lt;BR /&gt;
    REPLACE ALL OCCURRENCES OF REGEX '#' IN lv_req_body WITH space.&lt;BR /&gt;
    CONDENSE lv_req_body.&lt;BR /&gt;
    CREATE OBJECT cl_fdt_json.&lt;BR /&gt;
    TRY.&lt;BR /&gt;
        CALL METHOD cl_fdt_json=&amp;gt;json_to_data&lt;BR /&gt;
          EXPORTING&lt;BR /&gt;
            iv_json = lv_req_body&lt;BR /&gt;
          CHANGING&lt;BR /&gt;
            ca_data = ls_data.&lt;BR /&gt;
      CATCH cx_root INTO lx_root.&lt;BR /&gt;
    ENDTRY.&lt;BR /&gt;
  ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
JSON data to ABAP data:&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/JsonBodyToABAPdata.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;Parsing JSON header data:&lt;/EM&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/JSON_Header-2.jpg" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;Parsing JSON Item data:&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/JSON_Item-2.jpg" /&gt;&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
By following above steps, we can covert json data to ABAP data and store it into table.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;&lt;U&gt;Summary:&lt;/U&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
During one of our projects requirements, I have gone through several REST API documents. Most of the documents, blog post and articles describes the ways of REST API call which convert ABAP data to JSON data, not vice versa. From my learning and SAP-Non-SAP integration experience I have organized REST API call from JSON format to ABAP format without having SAP_GWFND (SAP Gateway Foundation) component or Separate Gateway server installed in landscape.&lt;BR /&gt;
&lt;BR /&gt;
Please do like the blog post, if you find the content helpful. Also, do share your comments and inputs, if any.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-rest-api-http-service-call-from-postman-json-to-abap-data/ba-p/13545948"/>
    <published>2022-05-10T09:42:07+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-webdispatcher-webadm-user-got-deleted/ba-p/13552676</id>
    <title>SAP Webdispatcher webadm user got deleted!!</title>
    <updated>2022-10-24T20:32:05+02:00</updated>
    <author>
      <name>manojsomkuwar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/657691</uri>
    </author>
    <content>Hi All,&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Recently I came across a very weird situation where after installation of SAP Web Dispatcher and setting up of SSL I found that I wasn't able to login to Admin page, the credentials of webadm user weren't working.&lt;BR /&gt;
&lt;BR /&gt;
There were lots of messages in /usr/sap/SID/W00/work/dev_webdisp as below:&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;[Thr 139921060026112] Sun Oct 23 09:55:29:304 2022&lt;/STRONG&gt;&lt;BR /&gt;
&lt;STRONG&gt;[Thr 139921060026112] *** ERROR =&amp;gt; HttpAdmHandleReq: authorization failed for user: webadm [http_adm.cpp 2596&lt;/STRONG&gt;]&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
So, as a normal practice, I tried to go ahead with resetting the webadm password as per &lt;A href="https://me.sap.com/notes/0001987484" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Note:1987484&amp;nbsp;-&amp;nbsp;Forget password for SAP webdispatcher web Administration Interface&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;
&lt;H1 data-toc-skip="" id="toc-hId-832968678"&gt;&lt;/H1&gt;&lt;BR /&gt;
What I found weird is that first of all icmauth.txt authentication file didn't exist in &lt;STRONG&gt;/usr/sap/SID/SYS/global/security/data&lt;/STRONG&gt; directory.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/10/Global_data_directory_does_not_contain_icmauth_file.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;Hence, I followed below steps to recreate the webadm user and for reset of the password.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Stop the Webdispatcher.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Go to the webdispatcher executable folder.&lt;BR /&gt;
&lt;BR /&gt;
For example, /usr/sap/&amp;lt;WDP SID&amp;gt;/&amp;lt;WDP instance name&amp;gt;/exe&lt;BR /&gt;
&lt;BR /&gt;
There you can find the wdispmon executable.&lt;BR /&gt;
&lt;BR /&gt;
Run "&lt;STRONG&gt;wdispmon -a pf=&amp;lt;x:\path to webdispatcher profile\instance_profile&amp;gt;&lt;/STRONG&gt;".&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/10/File_does_not_exist_recreate.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
As the file somehow didn't exist, I recreated it.&lt;BR /&gt;
&lt;BR /&gt;
So, give "y" to continue (&lt;STRONG&gt;without quotes&lt;/STRONG&gt;) and you'll see below screen for maintenance of icmauth authentication file&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/10/maintain_Icmauth_file.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
If I do&lt;STRONG&gt; l - list users of set&lt;/STRONG&gt; here, it doesn't show anything. Normally it shows webadm user here.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/10/webadm_is_not_here.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Go ahead with re-creating the user.&lt;BR /&gt;
&lt;BR /&gt;
For this, select &lt;STRONG&gt;a - add user&lt;/STRONG&gt; &lt;STRONG&gt;to set&lt;/STRONG&gt; option.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/10/new_entries.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
GIve username as webadm, Your new password, Confirm your new password, Group name as admin and &lt;SPAN style="text-decoration: underline"&gt;as my SAPSSLC.PSE was signed, I gave the Subject Name associated with it&lt;/SPAN&gt;.&lt;BR /&gt;
&lt;BR /&gt;
After this, Press Enter to continue and execute&amp;nbsp; &lt;STRONG&gt;s - save changes of set to file&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/10/changes_saved.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
After saving,&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Stop sapstartsrv process, start sapstartsrv process and start Webdispatcher instance&lt;/STRONG&gt;.&lt;BR /&gt;
&lt;BR /&gt;
This creates the required entry in icmauth.txt file and after this you'd be able to successfully login to Webdispatcher Administration Interface!&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/10/Finally_able_to_login.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Please let me know your thoughts in the comment section below.&lt;BR /&gt;
&lt;BR /&gt;
For such more technical articles, please follow the tag Basis Technology (&lt;A href="https://answers.sap.com/tags/7bf2eaed-4604-44ae-bad7-d2d2d5c58c54" target="_blank" rel="noopener noreferrer"&gt;https://answers.sap.com/tags/7bf2eaed-4604-44ae-bad7-d2d2d5c58c54&lt;/A&gt;), and read other posts on the topic (&lt;A href="https://blogs.sap.com/tags/7bf2eaed-4604-44ae-bad7-d2d2d5c58c54/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/tags/7bf2eaed-4604-44ae-bad7-d2d2d5c58c54/&lt;/A&gt;)&lt;BR /&gt;
&lt;BR /&gt;
Please follow my profile for similar content that I'll publish in the near future.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Regards,&lt;BR /&gt;
&lt;BR /&gt;
Manoj Somkuwar&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-webdispatcher-webadm-user-got-deleted/ba-p/13552676"/>
    <published>2022-10-24T20:32:05+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/download-zip-package-through-netweaver-gateway-with-odata/ba-p/13548736</id>
    <title>Download ZIP Package through NetWeaver Gateway with Odata</title>
    <updated>2022-12-15T09:54:16+01:00</updated>
    <author>
      <name>nitinksh1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45127</uri>
    </author>
    <content>&lt;H2 id="toc-hId-961307459"&gt;Introduction&lt;/H2&gt;&lt;BR /&gt;
In this blog, I would like to show you how to download a ZIP package stored on an application server via Odata call in very simple steps.&lt;BR /&gt;
&lt;BR /&gt;
I have tried not to add any additional logic apart from downloading the ZIP package from the Odata service.&lt;BR /&gt;
&lt;H2 id="toc-hId-764793954"&gt;Steps&lt;/H2&gt;&lt;BR /&gt;
1. Table creation.&lt;BR /&gt;
&lt;BR /&gt;
2. Create an oData service.&lt;BR /&gt;
&lt;BR /&gt;
3. Redefine methods of DPC extension class GET_ENTITYSET, /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_STREAM.&lt;BR /&gt;
&lt;BR /&gt;
4. Redefine methods of MPC extension class DEFINE.&lt;BR /&gt;
&lt;BR /&gt;
5. Register the oData service.&lt;BR /&gt;
&lt;BR /&gt;
6. Test&lt;BR /&gt;
&lt;H2 id="toc-hId-568280449"&gt;Implementation&lt;/H2&gt;&lt;BR /&gt;
Let's begin the development step by step.&lt;BR /&gt;
&lt;H3 id="toc-hId-500849663"&gt;Step 1&lt;/H3&gt;&lt;BR /&gt;
1. Create a table where we will have the package name stored.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/Table.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Table&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H3 id="toc-hId-304336158"&gt;&lt;/H3&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId-107822653"&gt;Step 2&lt;/H3&gt;&lt;BR /&gt;
2.1. Create an Odata service.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/Odata-Service.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Odata service&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
2.2. Create an entity with an entity set.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/Entity.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Entity&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
2.3. Add table name to ABAP structure and also &lt;STRONG&gt;mark Media checkbox as true. &lt;/STRONG&gt;Do remember to mark the Media as true.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/Add-Structure.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Add Structure&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
2.4. Import Properties/fields from the custom table.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/Import-Properties-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Import Properties&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
2.5. Now it's time to generate the service.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/Generate-Service.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Generate Service&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId--88690852"&gt;Step 3&lt;/H3&gt;&lt;BR /&gt;
3.1. Go to the DPC extension class, redefine the &lt;EM&gt;GET_ENTITYSET&lt;/EM&gt; method and add logic to get data from the custom table. This is required so that we can fetch data from the table to get the package name.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/DPC_EXT-Fetch-Data.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;DPC_EXT Fetch Data&lt;/P&gt;&lt;BR /&gt;
3.2. In the DPC extension, redefine method &lt;EM&gt;/IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_STREA&lt;/EM&gt;M and add the logic to get filename, convert it to xstring and pass it back to Odata.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt; METHOD /iwbep/if_mgw_appl_srv_runtime~get_stream.&lt;BR /&gt;
&lt;BR /&gt;
   TYPES:&lt;BR /&gt;
     "! &amp;lt;p class="shorttext synchronized" lang="en"&amp;gt;Media Type Information&amp;lt;/p&amp;gt;&lt;BR /&gt;
     BEGIN OF ty_s_media_resource.&lt;BR /&gt;
       INCLUDE TYPE /iwbep/if_mgw_core_srv_runtime=&amp;gt;ty_s_media_resource.&lt;BR /&gt;
   TYPES:END OF ty_s_media_resource .&lt;BR /&gt;
&lt;BR /&gt;
   TYPES: BEGIN OF ty_package,&lt;BR /&gt;
            docnr    TYPE zzdocnr,&lt;BR /&gt;
            filename TYPE zzfilename,&lt;BR /&gt;
          END OF ty_package.&lt;BR /&gt;
&lt;BR /&gt;
   DATA:ls_key_tab TYPE /iwbep/s_mgw_name_value_pair,&lt;BR /&gt;
        ls_package TYPE ty_package,&lt;BR /&gt;
        ls_stream  TYPE ty_s_media_resource,&lt;BR /&gt;
        lv_docnr   TYPE zzdocnr,&lt;BR /&gt;
        lo_meco    TYPE REF TO /iwbep/if_message_container,&lt;BR /&gt;
        ls_lheader TYPE ihttpnvp,&lt;BR /&gt;
        lv_xstring TYPE xstring.&lt;BR /&gt;
&lt;BR /&gt;
   READ TABLE it_key_tab INTO ls_key_tab INDEX 1.&lt;BR /&gt;
   IF sy-subrc EQ 0.&lt;BR /&gt;
     lv_docnr = ls_key_tab-value.&lt;BR /&gt;
   ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
   SELECT SINGLE docnr,&lt;BR /&gt;
               filename&lt;BR /&gt;
     FROM zzip_package INTO @ls_package&lt;BR /&gt;
     WHERE docnr = @lv_docnr.&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
   DATA(lv_path) = '.\SamplePackage.zip'.&lt;BR /&gt;
   OPEN DATASET lv_path FOR INPUT IN BINARY MODE.    "#EC CI_USE_WANTED&lt;BR /&gt;
   IF sy-subrc = 0.&lt;BR /&gt;
     READ DATASET lv_path INTO lv_xstring.           "#EC CI_USE_WANTED&lt;BR /&gt;
   ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
   CLOSE DATASET lv_path.                            "#EC CI_USE_WANTED&lt;BR /&gt;
&lt;BR /&gt;
   IF sy-subrc = 0.&lt;BR /&gt;
     ls_stream-mime_type = 'application/x-zip-compressed'. "mime type&lt;BR /&gt;
     ls_stream-value     = lv_xstring.             "content&lt;BR /&gt;
     ls_lheader-name     = 'Content-Disposition'(001).&lt;BR /&gt;
&lt;BR /&gt;
     CONCATENATE 'attachment; filename="'(002)&lt;BR /&gt;
                 ls_package-filename&lt;BR /&gt;
                 '";'&lt;BR /&gt;
            INTO ls_lheader-value.&lt;BR /&gt;
&lt;BR /&gt;
     set_header( is_header = ls_lheader ).&lt;BR /&gt;
&lt;BR /&gt;
     ls_lheader-name  = 'Content-Length'(003).&lt;BR /&gt;
&lt;BR /&gt;
     DATA(lv_len)     = xstrlen( ls_stream-value ).&lt;BR /&gt;
     ls_lheader-value = lv_len.&lt;BR /&gt;
     set_header( is_header = ls_lheader ).&lt;BR /&gt;
     copy_data_to_ref( EXPORTING is_data = ls_stream&lt;BR /&gt;
                       changing  cr_data = er_stream ).&lt;BR /&gt;
&lt;BR /&gt;
   ELSE. "error when file not found&lt;BR /&gt;
&lt;BR /&gt;
     lo_meco = mo_context-&amp;gt;get_message_container( ).&lt;BR /&gt;
     lo_meco-&amp;gt;add_message_text_only(&lt;BR /&gt;
     EXPORTING&lt;BR /&gt;
     iv_msg_type               =  'E'&lt;BR /&gt;
     iv_msg_text               =  'File Not Found'(004)  " Message Text&lt;BR /&gt;
     iv_add_to_response_header = abap_true " Flag for adding or not the message to the response header&lt;BR /&gt;
     ).&lt;BR /&gt;
&lt;BR /&gt;
   ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
 ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId--285204357"&gt;Step 4&lt;/H3&gt;&lt;BR /&gt;
4.1. Now redefine the method &lt;EM&gt;DEFINE&lt;/EM&gt; of MPC extension class. Add your Entity name and field which contains the zip package.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;METHOD define.&lt;BR /&gt;
  super-&amp;gt;define( ).&lt;BR /&gt;
&lt;BR /&gt;
  DATA: lo_entity   TYPE REF TO /iwbep/if_mgw_odata_entity_typ,&lt;BR /&gt;
        lo_property TYPE REF TO /iwbep/if_mgw_odata_property.&lt;BR /&gt;
&lt;BR /&gt;
  lo_entity = model-&amp;gt;get_entity_type( iv_entity_name = 'Package' ).&lt;BR /&gt;
&lt;BR /&gt;
  IF lo_entity IS BOUND.&lt;BR /&gt;
    lo_property = lo_entity-&amp;gt;get_property( iv_property_name = 'Filename').&lt;BR /&gt;
    lo_property-&amp;gt;set_as_content_type( ).&lt;BR /&gt;
  ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId--481717862"&gt;Step 5&lt;/H3&gt;&lt;BR /&gt;
5.1. Now it's time to register the Odata service from /IWFND/MAINT_SERVICE tcode.&lt;BR /&gt;
&lt;BR /&gt;
5.2. Once, the service is registered let's see if the metadata is loaded properly.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/Metadata.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Metadata&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId--678231367"&gt;Step 6&lt;/H3&gt;&lt;BR /&gt;
6.1. Lets us now upload the zip file to the application server.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/Upload-Package.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Upload Package&lt;/P&gt;&lt;BR /&gt;
6.2. Contents of the package. There are 52 notepad files in it.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/Package-Contents-2.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Package contents&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
6.3. Let us execute the Odata service to get the ZIP Package. Select the HTTP method as GET and pass the below URI.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;/sap/opu/odata/sap/ZZIPPACKAGE_DOWNLOAD_SRV/PackageSet('0001')/$value&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;6.4. Below is the HTTP response.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/URI-Result.jpg" /&gt;.&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Response&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
6.5. Here comes the final step, click on the "Response in Browser" and let us see the uploaded ZIP package.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/ZIP-Package-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Downloaded ZIP Package&lt;/P&gt;&lt;BR /&gt;
Hurray! the same ZIP package is downloaded.&lt;BR /&gt;
&lt;H3 id="toc-hId--949976241"&gt;Conclusion&lt;/H3&gt;&lt;BR /&gt;
In this way, we can download the ZIP package from the Odata service. UI developers can use the same service and trigger to download the package from the frontend button. Thank you for reading the blog post on ZIP Package download. I hope that you found the information useful and that it has provided you with some valuable insights.&lt;BR /&gt;
&lt;BR /&gt;
If you have any thoughts or questions on the topic, please feel free to leave a comment below. I would love to hear from you.&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;If you found this post helpful, please like and share it with your network &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Kind Regards,&lt;BR /&gt;
&lt;BR /&gt;
Nitin Sharma</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/download-zip-package-through-netweaver-gateway-with-odata/ba-p/13548736"/>
    <published>2022-12-15T09:54:16+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/generate-dynamic-qr-code-from-odata/ba-p/13564848</id>
    <title>Generate Dynamic QR code from oDATA</title>
    <updated>2023-01-09T20:05:10+01:00</updated>
    <author>
      <name>nitinksh1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45127</uri>
    </author>
    <content>&lt;H2 id="toc-hId-963036331"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
QR (Quick Response) codes are two-dimensional barcodes that are widely used for storing and sharing information. They are particularly useful because they can be read quickly and easily by a smartphone or other device equipped with a camera and a QR code reader app.&lt;BR /&gt;
&lt;BR /&gt;
If we can add a QR code to our app/oData call, it can open a wide area of fields for implementation.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId-895605545"&gt;&lt;STRONG&gt;Step-by-Step Procedure:&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
1. Create a page format as of QR size: If we do not create a page format then the QR will be shown in the whole A4 size page and a lot of space will be left empty. Use tcode SPAD for creating.&lt;BR /&gt;
&lt;BR /&gt;
2. Create a Barcode: We will use SE73 to create a barcode.&lt;BR /&gt;
&lt;BR /&gt;
3. Create a smartstyle: To create a character format for QR.&lt;BR /&gt;
&lt;BR /&gt;
4. Create a smartform: To display the&lt;BR /&gt;
&lt;BR /&gt;
5. Create a class: To convert text to xstring. This xstring will be passed to the oData call.&lt;BR /&gt;
&lt;BR /&gt;
6. Table Creation: Create a table to store the data to be displayed in form of a QR code via oData.&lt;BR /&gt;
&lt;BR /&gt;
7. Create oData Service: Finally, we will be creating an oData service.&lt;BR /&gt;
&lt;BR /&gt;
8. Publish and test the Odata service.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Let's start the development now in the steps mentioned above.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId-699092040"&gt;&lt;STRONG&gt;STEP 1:&lt;/STRONG&gt;&amp;nbsp;Create a page format: Go to tcode SPAD.&lt;/H3&gt;&lt;BR /&gt;
1.1 Click on the full administrator and go to the tab Device Types and click on display.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-1-SPAD-landing-screen-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 1- SPAD landing screen&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-2-SPAD-Page-Format-2.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 2- SPAD Page Format&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
1.2 Click on the pencil button to come to change mode and then click Create to create a new page format.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-3-Create-Page-Format-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 3- Create Page Format&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
1.3 Save the page format with the below settings. One thing to notice is that depending on the data, the QR code can increase its size a bit as it has to hold more data in it. Play and change these settings as required.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-4-Save-Page-Format-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 4- Save Page Format&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
1.4 Our first step completes here.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId-502578535"&gt;&lt;STRONG&gt;STEP 2: &lt;/STRONG&gt;Create a barcode.&lt;/H3&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
2.1 Go to tcode SE73 and create a new Barcode.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-5-SE73-2.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 5 - SE73&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
2.2 Create a new barcode.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-6-New-Barcode-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 6 - New Barcode&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
2.3 Use the below setting to create the barcode.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-7-New-Barcode-Setting-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 7 - New Barcode Setting&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-8-New-Barcode-Setting-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 8 - New Barcode Setting&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-9-New-Barcode-Setting-2.png" /&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 9 - New Barcode Setting&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-10-New-Barcode-Setting-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 10 - New Barcode Setting&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
2.4 QR Code is created. Now it's time to test the QR code. Place your cursor on the new barcode, in our case it is ZQRDISP, and hit F6 (execute barcode). I guess we all are excited to see the QR code in this development for the first time.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-11-Test-Barcode-From-SE73-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 11 - Test Barcode From SE73&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
2.5 Execute the report with any text.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-12-Execute-Report-2.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 12 - Execute Report&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
2.6 Tada! Our QR code is ready.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-13-QR-Code-from-SE73-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 13 - QR Code from SE73&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId-306065030"&gt;&lt;STRONG&gt;STEP 3 : Create Smartstyle&lt;BR /&gt;
&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
Let's create a smartstyle on the top of created barcode.&lt;BR /&gt;
&lt;BR /&gt;
3.1 Create a smartstyle with character format as the created barcode. Also, create a default paragraph to add to the header data.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-14-Smartsyles.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 14 - Smartsyles&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId-109551525"&gt;&lt;STRONG&gt;STEP 4: Create Smartform&lt;BR /&gt;
&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
Let's move on to create a smartform.&lt;BR /&gt;
&lt;BR /&gt;
4.1 This smartform will have an input parameter of type string and we will pass this parameter to the text element so that it can be displayed as a QR code. Add recently created smartsytle via the output options tab of the text element.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-15-Smartform.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 15 - Smartform&lt;/P&gt;&lt;BR /&gt;
4.2 Save and activate it.&lt;BR /&gt;
&lt;BR /&gt;
4.3 It's time to execute the smartform, let's see what the output looks like. Pass any text to input field. Voila, we got a QR code!&lt;span class="lia-unicode-emoji" title=":man_dancing:"&gt;🕺&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":man_dancing:"&gt;🕺&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":man_dancing:"&gt;🕺&lt;/span&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-16-Smartform-Output.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 16 - Smartform Output&lt;/P&gt;&lt;BR /&gt;
4.4 Do scan the QR code and it will take you to like to read another oData blog.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId--86961980"&gt;&lt;STRONG&gt;STEP 5: Create Class&lt;BR /&gt;
&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
5.1 Create a class that will take a string as an input. It will take that string and pass it to smartform, generate the QR from it, and then finally the QR will be converted to pdf xstring. As oData can not process images directly, we are converting it to xstring.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-17-Class.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 17 - Class&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
5.2 Below is the snippet of the code. We are performing the below activities in the code:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Get Device type.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Set relevant output options of the smartform.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Call smartform.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Convert the smartform output to OTF format.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Pass back the OTF xstring as a returning parameter.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;  METHOD display.&lt;BR /&gt;
&lt;BR /&gt;
    DATA :&lt;BR /&gt;
      lv_fm_name            TYPE rs38l_fnam,&lt;BR /&gt;
      ls_output_options     TYPE ssfcompop,&lt;BR /&gt;
      lv_language           TYPE tdspras,&lt;BR /&gt;
      ls_control_parameters TYPE ssfctrlop,&lt;BR /&gt;
      ls_output_data        TYPE ssfcrescl,&lt;BR /&gt;
      lv_pdf_len            TYPE i,&lt;BR /&gt;
      lv_pdf_xstring        TYPE xstring,&lt;BR /&gt;
      lt_lines              TYPE TABLE OF tline,&lt;BR /&gt;
      lv_devtype            TYPE rspoptype,&lt;BR /&gt;
      lt_tstotf             TYPE tsfotf.&lt;BR /&gt;
&lt;BR /&gt;
* language&lt;BR /&gt;
    lv_language = sy-langu.&lt;BR /&gt;
    TRANSLATE lv_language TO UPPER CASE.&lt;BR /&gt;
    ls_control_parameters-langu = lv_language.&lt;BR /&gt;
&lt;BR /&gt;
* set control parameters to get the output text format (OTF) from Smart Forms&lt;BR /&gt;
    ls_control_parameters-no_dialog = 'X'.&lt;BR /&gt;
    ls_control_parameters-getotf    = 'X'.&lt;BR /&gt;
    ls_control_parameters-preview   = space. "No preview&lt;BR /&gt;
&lt;BR /&gt;
* get device type from language&lt;BR /&gt;
    CALL FUNCTION 'SSF_GET_DEVICE_TYPE'&lt;BR /&gt;
      EXPORTING&lt;BR /&gt;
        i_language             = lv_language&lt;BR /&gt;
*       i_application          = 'SAPDEFAULT'&lt;BR /&gt;
      IMPORTING&lt;BR /&gt;
        e_devtype              = lv_devtype&lt;BR /&gt;
      EXCEPTIONS&lt;BR /&gt;
        no_language            = 1&lt;BR /&gt;
        language_not_installed = 2&lt;BR /&gt;
        no_devtype_found       = 3&lt;BR /&gt;
        system_error           = 4&lt;BR /&gt;
        OTHERS                 = 5.&lt;BR /&gt;
&lt;BR /&gt;
* set device type in output options&lt;BR /&gt;
    ls_output_options-tdprinter = lv_devtype.&lt;BR /&gt;
&lt;BR /&gt;
* Set relevant output options&lt;BR /&gt;
    ls_output_options-tdnewid  = 'X'.   "Print parameters,&lt;BR /&gt;
    ls_output_options-tddelete = space. "Print parameters&lt;BR /&gt;
&lt;BR /&gt;
    CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'&lt;BR /&gt;
      EXPORTING&lt;BR /&gt;
        formname           = 'ZQRDISPLAY'  "Smartform name&lt;BR /&gt;
      IMPORTING&lt;BR /&gt;
        fm_name            = lv_fm_name&lt;BR /&gt;
      EXCEPTIONS&lt;BR /&gt;
        no_form            = 1&lt;BR /&gt;
        no_function_module = 2&lt;BR /&gt;
        OTHERS             = 3.&lt;BR /&gt;
&lt;BR /&gt;
* Call Smartform generated FM&lt;BR /&gt;
    CALL FUNCTION lv_fm_name&lt;BR /&gt;
      EXPORTING&lt;BR /&gt;
        control_parameters = ls_control_parameters&lt;BR /&gt;
        output_options     = ls_output_options&lt;BR /&gt;
        user_settings      = space&lt;BR /&gt;
        gv_text            = iv_barcode_data&lt;BR /&gt;
      IMPORTING&lt;BR /&gt;
        job_output_info    = ls_output_data&lt;BR /&gt;
      EXCEPTIONS&lt;BR /&gt;
        formatting_error   = 1&lt;BR /&gt;
        internal_error     = 2&lt;BR /&gt;
        send_error         = 3&lt;BR /&gt;
        user_canceled      = 4&lt;BR /&gt;
        OTHERS             = 5.&lt;BR /&gt;
&lt;BR /&gt;
    APPEND LINES OF ls_output_data-otfdata[] TO lt_tstotf[].&lt;BR /&gt;
&lt;BR /&gt;
* Convert to OTF&lt;BR /&gt;
    CALL FUNCTION 'CONVERT_OTF'&lt;BR /&gt;
      EXPORTING&lt;BR /&gt;
        format                = 'PDF'&lt;BR /&gt;
      IMPORTING&lt;BR /&gt;
        bin_filesize          = lv_pdf_len&lt;BR /&gt;
        bin_file              = lv_pdf_xstring       " binary file&lt;BR /&gt;
      TABLES&lt;BR /&gt;
        otf                   = lt_tstotf&lt;BR /&gt;
        lines                 = lt_lines&lt;BR /&gt;
      EXCEPTIONS&lt;BR /&gt;
        err_max_linewidth     = 1&lt;BR /&gt;
        err_format            = 2&lt;BR /&gt;
        err_conv_not_possible = 3&lt;BR /&gt;
        err_bad_otf           = 4&lt;BR /&gt;
        OTHERS                = 5.&lt;BR /&gt;
&lt;BR /&gt;
    IF sy-subrc = 0.&lt;BR /&gt;
      rv_image_data = lv_pdf_xstring.&lt;BR /&gt;
    ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
  ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId--283475485"&gt;&lt;STRONG&gt;STEP 6: Create a Table&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
6.1 This table will store the data information and also will be used while creating the oData service.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-18-Table.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 18 - Table&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H3 id="toc-hId--479988990"&gt;&lt;STRONG&gt;STEP 7: Create an oData service&lt;BR /&gt;
&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
7.1 Finally we reached the step where we will be creating the oData service. If it's your first oData service then I would recommend visiting &lt;A href="https://blogs.sap.com/2021/05/06/a-step-by-step-process-to-create-odata-services-in-sap-sap-hana-system/" target="_blank" rel="noopener noreferrer"&gt;A Step by Step process to create Odata services&lt;/A&gt;.&lt;BR /&gt;
&lt;BR /&gt;
7.2 Once the oData service is created, import the table created.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-19-oData-Service.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 19 - oData Service&lt;/P&gt;&lt;BR /&gt;
7.3 Do remember to check the checkbox "Media".&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-20-oData-Media-Check.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 20 - oData Media Check&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
7.4 Now we are all set to generate the oData service. Once oData is generated, goto DPC extension class and redefine method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_STREAM.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;  METHOD /iwbep/if_mgw_appl_srv_runtime~get_stream.&lt;BR /&gt;
&lt;BR /&gt;
    DATA:&lt;BR /&gt;
      lt_keys     TYPE /iwbep/t_mgw_tech_pairs,&lt;BR /&gt;
      ls_key      TYPE /iwbep/s_mgw_tech_pair,&lt;BR /&gt;
      lv_customer TYPE s_customer,&lt;BR /&gt;
      lv_xstring  TYPE xstring,&lt;BR /&gt;
      ls_stream   TYPE ty_s_media_resource.&lt;BR /&gt;
&lt;BR /&gt;
    lt_keys = io_tech_request_context-&amp;gt;get_keys( ).&lt;BR /&gt;
&lt;BR /&gt;
* docno is the specified key&lt;BR /&gt;
    READ TABLE lt_keys WITH KEY name = 'DOCNO' INTO ls_key.&lt;BR /&gt;
    IF sy-subrc IS INITIAL.&lt;BR /&gt;
&lt;BR /&gt;
* We will convert field LINK as QR code&lt;BR /&gt;
      SELECT SINGLE link FROM zstoreqrdetails INTO @DATA(lv_link)&lt;BR /&gt;
      WHERE docno = @ls_key-value.&lt;BR /&gt;
&lt;BR /&gt;
* Method display of Class zcl_qrcode will convert the data to QR to xstring&lt;BR /&gt;
      lv_xstring = zcl_qrcode=&amp;gt;display( iv_barcode_data = lv_link ).&lt;BR /&gt;
&lt;BR /&gt;
      ls_stream-value = lv_xstring.&lt;BR /&gt;
&lt;BR /&gt;
      ls_stream-mime_type = 'application/pdf'.&lt;BR /&gt;
&lt;BR /&gt;
* Pass the QR's xstrinh back to oData&lt;BR /&gt;
      copy_data_to_ref( EXPORTING is_data = ls_stream&lt;BR /&gt;
                        CHANGING  cr_data = er_stream ).&lt;BR /&gt;
&lt;BR /&gt;
    ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
  ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
7.5 In this step we will goto MPC extension class and redefine method DEFINE.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;  METHOD define.&lt;BR /&gt;
&lt;BR /&gt;
    DATA:&lt;BR /&gt;
      lo_entity   TYPE REF TO /iwbep/if_mgw_odata_entity_typ,&lt;BR /&gt;
      lo_property TYPE REF TO /iwbep/if_mgw_odata_property.&lt;BR /&gt;
&lt;BR /&gt;
    super-&amp;gt;define( ).&lt;BR /&gt;
&lt;BR /&gt;
* QR_Detail is the entity name&lt;BR /&gt;
    lo_entity = model-&amp;gt;get_entity_type( iv_entity_name = 'QR_Detail' ).&lt;BR /&gt;
&lt;BR /&gt;
    IF lo_entity IS BOUND.&lt;BR /&gt;
* Field Link will be converted to media&lt;BR /&gt;
      lo_property = lo_entity-&amp;gt;get_property( iv_property_name = 'Link' ).&lt;BR /&gt;
      lo_property-&amp;gt;set_as_content_type( ).&lt;BR /&gt;
    ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
  ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
7.6 That's it. We are done with the development. In the next step, we will test it.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId--676502495"&gt;&lt;STRONG&gt;STEP 8: Testing&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
8.1 Register your oData service.&lt;BR /&gt;
&lt;BR /&gt;
8.2 Once registered, let's see if metadata is loaded.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-21-Metadata.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 21 - Metadata&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
8.3 Guys, please open your QR scanners as we are now going to get them. Execute the below URL and we will get the QR code as output.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;/sap/opu/odata/sap/ZSHOW_QRINFO_SRV/QR_DetailSet('0001')/$value&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-22-Test1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 22 - Test1&lt;/P&gt;&lt;BR /&gt;
8.4 Let's execute another case.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;/sap/opu/odata/sap/ZSHOW_QRINFO_SRV/QR_DetailSet('0002')/$value&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/01/Image-23-Test2.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 23 - Test2&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H2 id="toc-hId--654844362"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
As we come to the end of this post, I hope you have a better understanding of how to display QR codes via oData call.&lt;BR /&gt;
&lt;BR /&gt;
I hope that you found the information useful and that it has provided you with some valuable insights. If you have any thoughts or questions on the topic, please feel free to leave a comment below. I would love to hear from you.&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;If you found this post helpful, please share it with your network &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Thanks,&lt;BR /&gt;
&lt;BR /&gt;
Nitin Sharma&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/generate-dynamic-qr-code-from-odata/ba-p/13564848"/>
    <published>2023-01-09T20:05:10+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/implementing-all-odata-query-uri-options-part-2/ba-p/13549957</id>
    <title>Implementing All OData Query/URI Options - Part 2</title>
    <updated>2023-03-26T13:54:17+02:00</updated>
    <author>
      <name>nitinksh1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45127</uri>
    </author>
    <content>&lt;H2 id="toc-hId-961339235"&gt;Introduction&lt;/H2&gt;&lt;BR /&gt;
In the previous blog, we have discussed about the URI calls which do not require any custom implementation. In this blog, we will go through the URI's which do require custom implementation.&lt;BR /&gt;
&lt;H2 id="toc-hId-764825730"&gt;Steps&lt;/H2&gt;&lt;BR /&gt;
We can divide OData URI to 2 parts:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Do Not Need Custom Implementation (&lt;A href="https://blogs.sap.com/2023/03/26/implementing-all-odata-query-uri-options-part-1/" target="_blank" rel="noopener noreferrer"&gt;Implementing All OData Query/URI Options – Part 1&lt;/A&gt;)&lt;BR /&gt;
&lt;/STRONG&gt;&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;$select&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$count&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$expand&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$format&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$links&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$value&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Need Custom Implementation &lt;/STRONG&gt;(This Blog)&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;$orderby&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$top&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$skip&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$filter&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$inlinecount&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$skiptoken&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-568312225"&gt;Implementation&lt;/H2&gt;&lt;BR /&gt;
&lt;STRONG&gt;1. $orderby: &lt;/STRONG&gt;The $orderby option is used to specify a sort order for the results of a query. It is used in the URL of an OData service to indicate how the results should be sorted.&lt;BR /&gt;
&lt;BR /&gt;
The syntax for the $orderby option is as follows: &lt;EM&gt;$orderby=propertyName [asc|desc]&lt;/EM&gt;, where propertyName is the name of the property by which the results should be sorted, and "asc" or "desc" is used to specify the sort order (ascending or descending, respectively).&lt;BR /&gt;
&lt;BR /&gt;
For example, if we want to retrieve a list of customers and sort them by last name in descending order, the URL would look like this:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;&lt;A href="http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$orderby=LastName" target="test_blank" rel="nofollow noopener noreferrer"&gt;http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$orderby=LastName&lt;/A&gt; desc&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
It is also possible to sort by multiple properties using the $orderby option, by separating each property with a comma.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;&lt;A href="http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$orderby=LastName" target="test_blank" rel="nofollow noopener noreferrer"&gt;http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$orderby=LastName&lt;/A&gt; desc, FirstName asc&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
The code the $orderby can be written as:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;  METHOD ekkoset_get_entityset.&lt;BR /&gt;
&lt;BR /&gt;
*- To get data from DB&lt;BR /&gt;
    SELECT * FROM ekko INTO TABLE @DATA(lt_ekko) UP TO 10 ROWS.&lt;BR /&gt;
&lt;BR /&gt;
*- Check the $orderby in the Odata Query&lt;BR /&gt;
    READ TABLE it_order INTO DATA(ls_order) INDEX 1.&lt;BR /&gt;
    IF sy-subrc IS INITIAL.&lt;BR /&gt;
      IF ls_order-order = 'desc'.&lt;BR /&gt;
        SORT lt_ekko BY (ls_order-property) DESCENDING.&lt;BR /&gt;
      ELSE.&lt;BR /&gt;
        SORT lt_ekko BY (ls_order-property) ASCENDING.&lt;BR /&gt;
      ENDIF.&lt;BR /&gt;
    ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
*- Check the size of the table for $inlinecount&lt;BR /&gt;
    IF io_tech_request_context-&amp;gt;has_inlinecount( ) = abap_true.&lt;BR /&gt;
      DESCRIBE TABLE lt_ekko LINES DATA(lv_size).&lt;BR /&gt;
      es_response_context-inlinecount = lv_size.&lt;BR /&gt;
    ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
    MOVE-CORRESPONDING lt_ekko TO et_entityset.&lt;BR /&gt;
&lt;BR /&gt;
  ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;Below is the output:&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/1.-orderby.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;1. $orderby.jpg&lt;/P&gt;&lt;BR /&gt;
Another better way to use the $orderby can be the standard way of using it, displayed below:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;*- Check the $orderby in the Odata Query&lt;BR /&gt;
    /iwbep/cl_mgw_data_util=&amp;gt;orderby(&lt;BR /&gt;
      EXPORTING&lt;BR /&gt;
        it_order =  it_order                " the sorting order&lt;BR /&gt;
      CHANGING&lt;BR /&gt;
        ct_data  = lt_ekko&lt;BR /&gt;
    ).&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;2. $top: &lt;/STRONG&gt;The $top option is used to specify the maximum number of results that should be returned in a query. It is used in the URL of an OData service to indicate how many results should be returned. The syntax for the $top option is as follows: $top=n, where n is an integer indicating the number of results that should be returned.&lt;BR /&gt;
&lt;BR /&gt;
For example, if we want to retrieve the top 10 customers, the URL would look like this:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;&lt;A href="http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$top=10" target="test_blank" rel="nofollow noopener noreferrer"&gt;http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$top=10&lt;/A&gt;&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
The $top option can be used in combination with other options such as $filter, $select and $orderby to further refine the results of a query.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;&lt;A href="http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$filter=Country" target="test_blank" rel="nofollow noopener noreferrer"&gt;http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$filter=Country&lt;/A&gt; eq 'US'&amp;amp;$top=5&amp;amp;$orderby=LastName desc&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
It's important to note that the $top option is used to limit the number of records returned in one response and not to restrict the total number of records returned by the OData service.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;  METHOD ekkoset_get_entityset.&lt;BR /&gt;
&lt;BR /&gt;
*- To get data from DB&lt;BR /&gt;
    SELECT * FROM ekko INTO TABLE @DATA(lt_ekko) UP TO 10 ROWS.&lt;BR /&gt;
&lt;BR /&gt;
*- Check the $orderby in the Odata Query&lt;BR /&gt;
    /iwbep/cl_mgw_data_util=&amp;gt;orderby(&lt;BR /&gt;
      EXPORTING&lt;BR /&gt;
        it_order =  it_order                " the sorting order&lt;BR /&gt;
      CHANGING&lt;BR /&gt;
        ct_data  = lt_ekko&lt;BR /&gt;
    ).&lt;BR /&gt;
&lt;BR /&gt;
*- For paging i.e. $top and $skip&lt;BR /&gt;
    /iwbep/cl_mgw_data_util=&amp;gt;paging(&lt;BR /&gt;
      EXPORTING&lt;BR /&gt;
        is_paging = is_paging                " paging structure&lt;BR /&gt;
      CHANGING&lt;BR /&gt;
        ct_data   = lt_ekko&lt;BR /&gt;
    ).&lt;BR /&gt;
&lt;BR /&gt;
*- Check the size of the table for $inlinecount&lt;BR /&gt;
    IF io_tech_request_context-&amp;gt;has_inlinecount( ) = abap_true.&lt;BR /&gt;
      DESCRIBE TABLE lt_ekko LINES DATA(lv_size).&lt;BR /&gt;
      es_response_context-inlinecount = lv_size.&lt;BR /&gt;
    ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
    MOVE-CORRESPONDING lt_ekko TO et_entityset.&lt;BR /&gt;
&lt;BR /&gt;
  ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
We can use it as below:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/2.-top-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;2. $top.jpg&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;3. $skip: &lt;/STRONG&gt;The $skip option is used to specify the number of results that should be skipped before returning the results in a query. It is used in the URL of an OData service to indicate how many results should be skipped. The syntax for the $skip option is as follows: $skip=n, where n is an integer indicating the number of results that should be skipped.&lt;BR /&gt;
&lt;BR /&gt;
For example, if we want to retrieve all customers but skip the first 10, the URL would look like this:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;&lt;A href="http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$skip=10" target="test_blank" rel="nofollow noopener noreferrer"&gt;http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$skip=10&lt;/A&gt;&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
The $skip option can be used in combination with other options such as $top, $filter, $select, and $orderby to further refine the results of a query.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;&lt;A href="http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$filter=Country" target="test_blank" rel="nofollow noopener noreferrer"&gt;http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$filter=Country&lt;/A&gt; eq 'US'&amp;amp;$skip=5&amp;amp;$top=5&amp;amp;$orderby=LastName desc&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
It's important to note that the $skip option is used to skip the records from the beginning of the result set, so it is typically used in combination with the $top option to retrieve a specific page of results.&lt;BR /&gt;
&lt;BR /&gt;
Same code of paging(used in 3. $top). The below snippet is showing the second 2nd record as it is fetching the 1st record after skipping 1st one.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/3.-skip-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;3. $skip.jpg&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;4. $filter: &lt;/STRONG&gt;The $filter option is used to specify filter criteria for the results of a query. It is used in the URL of an OData service to indicate which results should be returned based on certain conditions. The syntax for the $filter option is as follows: $filter=condition, where the condition is a logical expression that evaluates to true or false.&lt;BR /&gt;
&lt;BR /&gt;
The condition can be built using comparison and logical operators (eq, ne, gt, ge, lt, le, and, or, not).&lt;BR /&gt;
&lt;BR /&gt;
For example, if we want to retrieve all customers whose last name starts with "S", the URL would look like this:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$filter=startswith(LastName,'S')&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
If we want to retrieve all customers whose last name starts with "S" and whose first name is "John", the URL would look like this:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$filter=startswith(LastName,'S') and FirstName eq 'John'&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
The $filter option can be used in combination with other options such as $top, $skip, $select, and $orderby to further refine the results of a query.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;  METHOD ekkoset_get_entityset.&lt;BR /&gt;
&lt;BR /&gt;
*- To get data from DB&lt;BR /&gt;
*- it_filter_select_options will have filter values for $filter keyword&lt;BR /&gt;
    IF it_filter_select_options IS INITIAL.&lt;BR /&gt;
      SELECT * FROM ekko INTO TABLE @DATA(lt_ekko) UP TO 10 ROWS.&lt;BR /&gt;
    ELSE.&lt;BR /&gt;
      READ TABLE it_filter_select_options INTO DATA(ls_sopt)&lt;BR /&gt;
                                           WITH KEY property = 'Ebeln'.&lt;BR /&gt;
      IF sy-subrc IS INITIAL.&lt;BR /&gt;
        SELECT * FROM ekko INTO TABLE @lt_ekko WHERE ebeln IN @ls_sopt-select_options.&lt;BR /&gt;
      ENDIF.&lt;BR /&gt;
    ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
*- Check the $orderby in the Odata Query&lt;BR /&gt;
  /iwbep/cl_mgw_data_util=&amp;gt;orderby(&lt;BR /&gt;
    EXPORTING&lt;BR /&gt;
      it_order =  it_order                " the sorting order&lt;BR /&gt;
    CHANGING&lt;BR /&gt;
      ct_data  = lt_ekko&lt;BR /&gt;
  ).&lt;BR /&gt;
&lt;BR /&gt;
*- For paging i.e. $top and $skip&lt;BR /&gt;
  /iwbep/cl_mgw_data_util=&amp;gt;paging(&lt;BR /&gt;
    EXPORTING&lt;BR /&gt;
      is_paging = is_paging                " paging structure&lt;BR /&gt;
    CHANGING&lt;BR /&gt;
      ct_data   = lt_ekko&lt;BR /&gt;
  ).&lt;BR /&gt;
&lt;BR /&gt;
*- Check the size of the table for $inlinecount&lt;BR /&gt;
  IF io_tech_request_context-&amp;gt;has_inlinecount( ) = abap_true.&lt;BR /&gt;
    DESCRIBE TABLE lt_ekko LINES DATA(lv_size).&lt;BR /&gt;
    es_response_context-inlinecount = lv_size.&lt;BR /&gt;
  ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
  MOVE-CORRESPONDING lt_ekko TO et_entityset.&lt;BR /&gt;
&lt;BR /&gt;
ENDMETHOD.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;We can test the above code as:&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/4.-filter.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;4. $filter.jpg&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;5. $inlinecount:&lt;/STRONG&gt; It is used to include the total count of all the matching results in the response. It is used in the URL of an OData service to indicate that the total count of the matching results should be included in the response. The syntax for the $inlinecount option is as follows: $inlinecount=allpages, where "allpages" is a keyword indicating that the total count should be included.&lt;BR /&gt;
&lt;BR /&gt;
For example, if we want to retrieve all customers and include the total count of customers in the response, the URL would look like this:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;&lt;A href="http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$inlinecount=allpages" target="test_blank" rel="nofollow noopener noreferrer"&gt;http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$inlinecount=allpages&lt;/A&gt;&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
The $inlinecount option can be used in combination with other options such as $filter, $top, $skip, $select and $orderby to further refine the results of a query.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;&lt;A href="http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$filter=Country" target="test_blank" rel="nofollow noopener noreferrer"&gt;http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$filter=Country&lt;/A&gt; eq 'US'&amp;amp;$top=5&amp;amp;$skip=5&amp;amp;$orderby=LastName desc&amp;amp;$inlinecount=allpages&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
It's important to note that the $inlinecount option will include the count of the matching results in the response, the count will be included in the ".count" attribute of the response.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/5.-filter.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;5. $filter.jpg&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;6. $skiptoken:&lt;/STRONG&gt; The $skiptoken option is used with the $top option to retrieve a specific page of results by providing a token that represents the position in the result set from where the next set of results should be retrieved. When a partial response is returned by the server, the $skiptoken value is included in the __next link of the response, allowing clients to easily retrieve the next set of results without having to construct or interpret the $skiptoken value themselves.&lt;BR /&gt;
&lt;BR /&gt;
The syntax for the $skiptoken option is as follows: $skiptoken=token, where the token is a string value representing the position in the result set from where the next set of results should be retrieved.&lt;BR /&gt;
&lt;BR /&gt;
For example, if we want to retrieve the next set of 10 customers starting from the 11th customer, the URL would look like this:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$top=10&amp;amp;$skiptoken='11'&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
The $skiptoken option can be used in combination with other options such as $filter, $top, $select and $orderby to further refine the results of a query.&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;&lt;A href="http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$filter=Country" target="test_blank" rel="nofollow noopener noreferrer"&gt;http://&amp;lt;host&amp;gt;/sap/opu/odata/sap/&amp;lt;service&amp;gt;/Customers?$filter=Country&lt;/A&gt; eq 'US'&amp;amp;$top=5&amp;amp;$skiptoken='11'&amp;amp;$orderby=LastName desc&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
It's important to note that the $skiptoken option is used to navigate through the result set in a pagination manner, and it should be used in conjunction with $top option and the result set should be sorted in the same order as in the query that generated the skiptoken.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/03/6.-skiptoken.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;6. $skiptoken.jpg&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
The $skip and $skiptoken looks same in first look but they are some difference. To know further about $skip and $skiptoken you can visit this blog: &lt;A href="https://blogs.sap.com/2023/03/26/difference-between-skip-and-skiptoken-in-odata/" target="_blank" rel="noopener noreferrer"&gt;Difference between $skip and $skiptoken in Odata&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-371798720"&gt;Conclusion&lt;/H2&gt;&lt;BR /&gt;
SAP has provided us multiple options to play with for real-time requirements with a little effort. I would recommend you to try these query options and debug to see how it works. The blog was divided into the following parts.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;$orderby: sorts data by one or more fields.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$top and $skip: enable server-side paging.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$filter: retrieves specific data from an entity set based on a set of criteria.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$inlinecount: provides the total number of records in an entity set.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;$skiptoken: enables server-side paging using a continuation token.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;HR /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Edit 1: Thanks &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/12545"&gt;@gregorw&lt;/a&gt; for helping to enrich the blog.&lt;BR /&gt;
&lt;BR /&gt;
In the world of Odata services, there are two types of services -&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Those created from SEGW&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Those based on CDS views&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
When creating Odata services from SEGW, custom implementation is required for the $orderby, $top, $skip, $filter, and $inlinecount query options. However, this is not the case when the Odata service is based on a CDS view. In this scenario, SAP provides these query options without the need for implementation, making the development process simpler and more efficient.&lt;BR /&gt;
&lt;BR /&gt;
It’s important to note that this difference exists because of the fundamental architectural differences between SEGW and CDS views. SEGW generates ABAP code based on metadata, whereas CDS views are defined in the ABAP repository and translated into Open SQL. By leveraging the capabilities of CDS views, developers can benefit from SAP’s pre-built query options and focus on delivering value to their customers.&lt;BR /&gt;
&lt;BR /&gt;
If you have any thoughts or questions on the topic, please feel free to leave a comment below. I would love to hear from you.&lt;BR /&gt;
&lt;BR /&gt;
&lt;HR /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;If you found this post helpful, please like and share it with your network &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Kind Regards,&lt;BR /&gt;
&lt;BR /&gt;
Nitin Sharma&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;CODE class="!whitespace-pre-wrap hljs language-perl"&gt;&lt;/CODE&gt;&lt;/DIV&gt;&lt;BR /&gt;
&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/implementing-all-odata-query-uri-options-part-2/ba-p/13549957"/>
    <published>2023-03-26T13:54:17+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/difference-between-skip-and-skiptoken-in-odata/ba-p/13560047</id>
    <title>Difference between $skip and $skiptoken in Odata</title>
    <updated>2023-03-26T13:57:47+02:00</updated>
    <author>
      <name>nitinksh1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45127</uri>
    </author>
    <content>&lt;H2 id="toc-hId-962909478"&gt;Introduction&lt;/H2&gt;&lt;BR /&gt;
When working with large datasets in SAP OData, server-side paging can be a useful technique for improving performance and reducing the amount of data that needs to be transmitted over the network. Two commonly used parameters for server-side paging are &lt;CODE&gt;$skip&lt;/CODE&gt; and &lt;CODE&gt;$skiptoken&lt;/CODE&gt;. While they may seem similar, they serve different purposes and have different use cases.&lt;BR /&gt;
&lt;BR /&gt;
In this technical blog, we will explore the difference between &lt;CODE&gt;$skip&lt;/CODE&gt; and &lt;CODE&gt;$skiptoken&lt;/CODE&gt; in SAP OData and provide examples of how they can be used in different scenarios. We will also discuss best practices for using these parameters and provide tips for optimizing performance when working with large datasets.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;What is &lt;CODE&gt;$skip&lt;/CODE&gt; :&lt;/STRONG&gt; Please refer to this blog for more details about &lt;CODE&gt;$skip&lt;/CODE&gt; - &lt;A href="https://blogs.sap.com/2023/03/26/implementing-all-odata-query-uri-options-part-2/" target="_blank" rel="noopener noreferrer"&gt;Implementing All OData Query/URI Options – Part 2&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;What is &lt;CODE&gt;$skiptoken&lt;/CODE&gt;:&lt;/STRONG&gt; Please refer to this blog for more details about &lt;CODE&gt;$skiptoken&lt;/CODE&gt;&amp;nbsp;&lt;A href="https://blogs.sap.com/2023/03/26/implementing-all-odata-query-uri-options-part-2/" target="_blank" rel="noopener noreferrer"&gt;Implementing All OData Query/URI Options – Part 2&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId-895478692"&gt;&lt;SPAN style="text-decoration: underline"&gt;Difference between &lt;CODE&gt;$skip&lt;/CODE&gt; and &lt;CODE&gt;$skiptoken&lt;/CODE&gt;:&lt;/SPAN&gt;&lt;/H3&gt;&lt;BR /&gt;
$skip is used to skip a specified number of items in a collection of data before returning the remaining results. For example, if we want to retrieve all employees after skipping the first 10 employees, we would use the following query:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;/sap/opu/odata/sap/&amp;lt;service_name&amp;gt;/Employees?$skip=10&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
This query would skip the first 10 employees and return the remaining employees in the "Employees" entity set.&lt;BR /&gt;
&lt;BR /&gt;
On the other hand, $skiptoken is used to enable efficient server-side paging of query results when the size of the data set is too large to be retrieved in a single request. When a server returns a limited number of results along with a $skiptoken value, the client can use this token in a subsequent request to retrieve the next set of results. The $skiptoken value serves as an identifier of the last result returned by the server and helps the server to skip to the next set of results efficiently.&lt;BR /&gt;
&lt;BR /&gt;
For example, suppose we want to retrieve the first 100 orders from an "Orders" entity set that contains 500 orders. We can use the following query:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;/sap/opu/odata/sap/&amp;lt;service_name&amp;gt;/Orders?$top=100&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
This query would retrieve the first 100 orders. However, if we want to retrieve the next 100 orders, we would need to use $skiptoken. When the server returns the first 100 orders, it would also return a $skiptoken value that identifies the last order returned. We can then use this $skiptoken value in a subsequent request to retrieve the next 100 orders:&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;/sap/opu/odata/sap/&amp;lt;service_name&amp;gt;/Orders?$top=100&amp;amp;$skiptoken=&amp;lt;skiptoken_value&amp;gt;&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;/DIV&gt;&lt;BR /&gt;
&lt;/DIV&gt;&lt;BR /&gt;
In this query, &lt;CODE&gt;&amp;lt;skiptoken_value&amp;gt;&lt;/CODE&gt; is the $skiptoken value returned by the server in the previous response. The server would skip the first 100 orders and return the next 100 orders after the order is identified by the $skiptoken value.&lt;BR /&gt;
&lt;BR /&gt;
Few interesting examples that we could use in an SAP OData technical blog about server-side paging using $skip and $skiptoken:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Retrieving large amounts of data efficiently:&lt;/STRONG&gt; Imagine we have an entity set containing a large number of records, such as a sales order entity set that contains thousands of orders. Instead of retrieving all the orders in a single request, we can use $skip and $skiptoken to retrieve them in smaller, more manageable batches. This can significantly improve performance and reduce the load on the server.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Implementing infinite scrolling:&lt;/STRONG&gt; With server-side paging, we can implement infinite scrolling, where data is loaded dynamically as the user scrolls down a page. This can provide a better user experience and prevent the need to load all the data at once, which can be slow and resource-intensive.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Combining $skip and $filter to retrieve specific data:&lt;/STRONG&gt; We can combine $skip and $filter to retrieve specific data from an entity set. For example, if we have an employee entity set and we want to retrieve all the employees in the sales department after skipping the first 10 employees, we can use the following query:&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;/sap/opu/odata/sap/&amp;lt;service_name&amp;gt;/Employees?$skip=10&amp;amp;$filter=Department eq 'Sales'&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Using $skiptoken with SAP Gateway: SAP Gateway provides built-in support for $skiptoken, allowing us to easily implement server-side paging in our OData services. We can use the &lt;CODE&gt;go_paging&lt;/CODE&gt; method in our Gateway class to handle $skiptoken values and efficiently retrieve large amounts of data.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId-698965187"&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
In conclusion, understanding the difference between &lt;CODE&gt;$skip&lt;/CODE&gt; and &lt;CODE&gt;$skiptoken&lt;/CODE&gt; in SAP OData is crucial when working with large datasets. By using these parameters effectively, developers can improve the performance and scalability of their OData services and provide a better user experience for their customers. By following best practices and optimizing their queries, developers can ensure that their OData services are performing at their best and delivering value to their users.&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;If you found this post helpful, please like and share it with your network &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Kind Regards,&lt;BR /&gt;
&lt;BR /&gt;
Nitin Sharma</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/difference-between-skip-and-skiptoken-in-odata/ba-p/13560047"/>
    <published>2023-03-26T13:57:47+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/request-s-n-from-external-system-and-respond-to-corporate-serialization/ba-p/13571226</id>
    <title>Request S/N from External System and respond to Corporate Serialization</title>
    <updated>2023-11-06T23:36:34+01:00</updated>
    <author>
      <name>chun_jiang</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/775467</uri>
    </author>
    <content>&lt;H2 id="toc-hId-963864649"&gt;&lt;STRONG&gt;1. Introduction:&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
In this article, I will describe the way for serial number management. Basiclly, there are four variants. I would like to emphasis following two patterns. Both of them management S/N at Exteral System(e.g. Non-SAP) but in different way. I will focun on the differences on setting and operation.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;SAP CorS Managed (External)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;SAP CorS Tracked (with MD reference)&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
In addition, I will also introduce encoding/decoding Badi for well explain how S/N can be request from external and integration to CorS by utilizing customer own numbering rule.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/画像1-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-767351144"&gt;&lt;STRONG&gt;2. Contents:&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;STRONG&gt;Pattern1. SAP CorS Managed (External)---Take SAP CorS as subordinate management system&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Approach1: Request of Serial Numbers from Cors -&amp;gt; External&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Approach2: Upload Serial Number from CorS directly&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;STRONG&gt;Pattern2. SAP CorS Tracked (with MD reference)---S/N is not management at SAP CorS, take CorS as S/N tracking system&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Approach: Posting S/N with EPCIS event directly from using Warehouse Toolbox&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-570837639"&gt;&lt;STRONG&gt;3. SAP CorS Managed (External):　&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;BLOCKQUOTE&gt;&lt;BR /&gt;
&lt;H6 id="toc-hId-890655010"&gt;&lt;EM&gt;&lt;A href="https://help.sap.com/docs/SAP_CORPORATE_SERIALIZATION/0954280172964ef3afa9d711d4cc1846/59bd79c40cf648e3a047aa78d3367538.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Serial Number Request and Distribution | SAP Help Portal&lt;/A&gt;&lt;/EM&gt;&lt;/H6&gt;&lt;BR /&gt;
&lt;H6 id="toc-hId-694141505"&gt;&lt;EM&gt;&lt;A href="https://help.sap.com/docs/SAP_CORPORATE_SERIALIZATION/0954280172964ef3afa9d711d4cc1846/a907bc6e3bbd456d8efec94c6c8856a4.html?locale=en-US&amp;amp;q=request%20serial%20number%20external" target="_blank" rel="noopener noreferrer"&gt;Request Serial Numbers from an External System | SAP Help Portal&lt;/A&gt;&lt;/EM&gt;&lt;/H6&gt;&lt;BR /&gt;
&lt;H6 id="toc-hId-497628000"&gt;&lt;EM&gt;&lt;A href="https://help.sap.com/docs/SAP_CORPORATE_SERIALIZATION/0954280172964ef3afa9d711d4cc1846/99a9575f7caf462993a9a0576fd205ee.html?locale=en-US&amp;amp;version=1.1&amp;amp;q=%2FCORS%2FSNR_UPLOAD" target="_blank" rel="noopener noreferrer"&gt;Upload Serial Numbers | SAP Help Portal&lt;/A&gt;&lt;/EM&gt;&lt;/H6&gt;&lt;BR /&gt;
&lt;H6 id="toc-hId-301114495"&gt;&lt;EM&gt;&lt;A href="https://help.sap.com/docs/SAP_CORPORATE_SERIALIZATION/0954280172964ef3afa9d711d4cc1846/0f896c67a45445a7aca9e7ad602a4af4.html?locale=en-US&amp;amp;q=request%20serial%20number%20external" target="_blank" rel="noopener noreferrer"&gt;Serial Number Request Services | SAP Help Portal&lt;/A&gt;&lt;/EM&gt;&lt;/H6&gt;&lt;BR /&gt;
&lt;/BLOCKQUOTE&gt;&lt;BR /&gt;
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー&lt;BR /&gt;
&lt;H3 id="toc-hId--282647167"&gt;&lt;STRONG&gt;●Approach1: Request of Serial Numbers from External -&amp;gt; CorS&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/2022-12-09_12-28-03.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H4 id="toc-hId--350077953"&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId--546591458"&gt;&lt;STRONG&gt;■Operation&amp;nbsp; ※Take "List Managed S/N" as Example&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;STRONG&gt;1. &amp;lt;External&amp;gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Generate S/N at External System（e.g. 300 List Managed S/N）&lt;/STRONG&gt;&lt;BR /&gt;
&lt;STRONG&gt;2. &amp;lt;SAP CorS&amp;gt;&amp;nbsp; &amp;nbsp;Request S/N from Cors -&amp;gt; External（e.g.10 List Managed S/N）&lt;EM&gt;　　　&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;
Trcd:「/CORS/SNR_REQUEST - Request of Serial Numbers」&lt;BR /&gt;
&lt;STRONG&gt;3. &amp;lt;External&amp;gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; S/N will be sent from External -&amp;gt; CorS（e.g.10 List Managed S/N）&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;&amp;nbsp;=&amp;gt;As a result, CorS will recieve S/N and S/N Status：１－Create&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;4. &amp;lt;SAP CorS&amp;gt;&amp;nbsp; &amp;nbsp;Encoding S/N for GTIN&lt;/STRONG&gt;&lt;BR /&gt;
Trcd: DataCockpit-&amp;gt;Serial Numbers Node-&amp;gt;Create Serial Number Request&lt;BR /&gt;
BAdi here is possible.&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;=&amp;gt;As a result, S/N Status：２－Assign&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;5. &amp;lt;SAP CorS&amp;gt;&amp;nbsp; &amp;nbsp;Decoding S/N for Serialization Object&lt;/STRONG&gt;&lt;BR /&gt;
Trcd:「/CORS/POSTEVENT - Post Manual Event 」or using Warehouse Toolbox.&lt;BR /&gt;
BAdi here is possible.&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;=&amp;gt;As a result, S/N Status：３－Commission&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H4 id="toc-hId--1240822058"&gt;&lt;STRONG&gt;■Setting&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;B&gt;1. Set up &lt;/B&gt;&lt;B&gt;Range Definition/Range (＝Range Definition is must in this Pattern)&lt;/B&gt;&lt;BR /&gt;
&lt;BR /&gt;
① Rng.Def.Origin.Ind=1(External)&lt;BR /&gt;
② Ener External System Name into Range Definition Origin tab&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/2022-12-09_01-17-15.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;B style="font-size: 1rem"&gt;2. Assign &lt;/B&gt;&lt;B style="font-size: 1rem"&gt;External &lt;/B&gt;&lt;B style="font-size: 1rem"&gt;Range to &lt;/B&gt;&lt;B style="font-size: 1rem"&gt;Product, &lt;/B&gt;&lt;B style="font-size: 1rem"&gt;Serial Number Management Type&lt;/B&gt;&lt;B style="font-size: 1rem"&gt;＝&lt;/B&gt;&lt;B style="font-size: 1rem"&gt;E&lt;/B&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/2022-12-09_17-06-24.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;3. Maintain External System Master&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/2022-12-09_17-05-22.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;4. Set up Web Service Binding&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;-For SAP CorS system&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Following SAP standard web service is used for external S/N request, which need to be setup by SOAMANAGER.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Service Definition: /CORS/SERIALNUMBERREQUEST&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Consumer Proxy: /CORS/CO_SNR_REQUEST&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
You need to Import WSDL Binding in SAP CorS as well.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Go to SE80 -&amp;gt; Enterprise Services Browser&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Select a package and right click to "Create a new object"&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Select "Service Consumer"&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Select "External WSDL"&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Select "WSDL source"&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;…&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;STRONG&gt;-For external (e.g. Non-SAP) system&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;external(e.g. Non-SAP) system needs to facilitate a WebService binding for the SerialNumberRequest&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The WebService binding includes the endpoint where SAP CorS will direct its S/N Request towards&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;STRONG&gt;-How to confirm what WSDL Binding at SAP CorS needed&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Open Trcd-SOAMANAGER&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Click「Web Service Configuration」 menu&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Click and open Service: /CORS/SERIALNUMBERREQUEST&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Click “Earth” mark and find「Binding WSDL Generation」tab&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Execute「WSDL URL for Binding」button, then we will see the exact payload and well format WSDL, which contain the required S/N infromation CorS needed from External.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー&lt;BR /&gt;
&lt;H3 id="toc-hId--1143932556"&gt;&lt;STRONG&gt;●&lt;/STRONG&gt;&lt;STRONG&gt;Approach2：&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Upload Serial Number from CorS directly&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー&lt;BR /&gt;
&lt;H4 id="toc-hId--1633849068"&gt;&lt;STRONG&gt;■Operation&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;STRONG&gt;1.&amp;nbsp; &amp;lt;SAP CorS&amp;gt;&amp;nbsp; Upload S/N&lt;/STRONG&gt;&lt;BR /&gt;
&lt;SPAN style="font-size: 1rem"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM style="font-size: 1rem"&gt;Trcd:「/CORS/SNR_REQUEST - Request of Serial Numbers」&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;=&amp;gt;As a result, S/N Status：１－Create&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;2. &amp;lt;SAP CorS&amp;gt;&amp;nbsp; &amp;nbsp;Encoding S/N for GTIN&lt;/STRONG&gt;&lt;BR /&gt;
&lt;EM&gt;&amp;nbsp;Trcd: DataCockpit-&amp;gt;Serial Numbers Node-&amp;gt;Create Serial Number Request&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;=&amp;gt;As a result, S/N Status：２－Assign　&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;3. &amp;lt;SAP CorS&amp;gt;&amp;nbsp; Decoding S/N for Serialization Object&lt;/STRONG&gt;&lt;BR /&gt;
&lt;EM&gt;&amp;nbsp;Trcd:「/CORS/POSTEVENT - Post Manual Event 」or using Warehouse Toolbox&lt;/EM&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;EM&gt;=&amp;gt;As a result, S/N Status：３－Commission&lt;/EM&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId--1830362573"&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId--2026876078"&gt;&lt;STRONG&gt;■Setting&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId-2071577713"&gt;&lt;STRONG&gt;※Same with Approach1 and No need web service setting up.&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H4 id="toc-hId-1875064208"&gt;&lt;STRONG&gt;■BAdi&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
For example, in case customer require EWM HU number to be used as a GRAI serial. GRAI serial number has a limit of 16 characters or less, EWM HU may have a lenth of more then 16 characters, in that case, a Badi implementation for encoding and decoding with customer own numbering logic is recommended.&lt;BR /&gt;
&lt;BR /&gt;
・&lt;STRONG&gt;Pre-requisite&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Using Trcd: /CORS/C_OBJENCTYPE - Maintain Object and Encoding Types&lt;BR /&gt;
①XXXXXX・・・Define Customer Z* Encoding Type&lt;BR /&gt;
②XX・・・Define Customer Z* Object Type&lt;BR /&gt;
③Assign①to②&lt;BR /&gt;
&lt;BR /&gt;
&lt;B&gt;・&lt;/B&gt;&lt;B&gt;Badi &lt;/B&gt;&lt;B&gt;Enhancement Spot&lt;/B&gt;&lt;BR /&gt;
&lt;BR /&gt;
Enhancement Spot: /CORS/ES_ID_ENC_DEC&lt;BR /&gt;
BadI Definition: /CORS/BADI_ID_ENC_DEC&lt;BR /&gt;
Interface: /CORS/IF_BADI_ID_ENC_DEC&lt;BR /&gt;
Method: ENCODE or DECODE&lt;BR /&gt;
&lt;BR /&gt;
&lt;B&gt;・&lt;/B&gt;&lt;B&gt;Badi Sample&lt;/B&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/2022-12-12_14-21-57.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId--2029610579"&gt;&lt;STRONG&gt;4. &lt;/STRONG&gt;&lt;STRONG&gt;SAP CorS Tracked (with MD reference):&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;STRONG&gt;※Take "&lt;/STRONG&gt;&lt;STRONG&gt;List Managed S/N" as Example&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー&lt;BR /&gt;
&lt;H3 id="toc-hId-1775440205"&gt;&lt;STRONG&gt;●Approach: Posting S/N with EPCIS event directly from using Warehouse Toolbox&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー&lt;BR /&gt;
&lt;BR /&gt;
&lt;B&gt;■Concept&lt;/B&gt;&lt;BR /&gt;
１. Customer do not use CorS to manage S/N, &lt;STRONG&gt;Range/Range definition is not required&lt;/STRONG&gt;.&lt;BR /&gt;
Instead, "Serial Number Management Not Used" flag must be set on the detail tab of CorS product or BP master.&lt;BR /&gt;
&lt;BR /&gt;
２. &lt;STRONG&gt;No need to request or upload external S/N&lt;/STRONG&gt; from CorS.&lt;BR /&gt;
&lt;BR /&gt;
３. It is possible to manage S/N events in CorS. S/N from an external system can be &lt;STRONG&gt;recorded directly and tracked within CorS&lt;/STRONG&gt; by posting EPCIS event.&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="font-size: 1rem"&gt;For information on how to &lt;STRONG&gt;post an EPCIS event, you can use Warehouse Toolbox(Trcd:/STTPEC/WHS) &lt;/STRONG&gt;, which is always used for register EPCIS event that related to warehouse task, or you can&lt;STRONG&gt; directly register EPCIS event with manual posting&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
The advantage of this pattern is that if S/N can be managed centrally in an external system, there is no need for double management within SAP CorS. We use SAP CorS only for tracking and tracing S/N by posting EPCIS event to a partical serialization object.&lt;BR /&gt;
&lt;H4 id="toc-hId-1285523693"&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId-1257193879"&gt;&lt;STRONG&gt;■Setting Up Point&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;B&gt;1. Set up &lt;/B&gt;&lt;B&gt;“&lt;/B&gt;&lt;B&gt;Serial Number Management Not Used&lt;/B&gt;&lt;B&gt;” flag on the detail tab of CorS Product or BP Master.&lt;/B&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/2022-12-09_01-33-43-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;B&gt;2. Register EPCIS Event (Commission) by Warehouse Toolbox (Post Manual Event is also worked)&lt;/B&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/2022-12-09_01-34-10.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;3. Here is the posting result at DataCockpit.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/12/2022-12-12_14-29-29.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
END.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/request-s-n-from-external-system-and-respond-to-corporate-serialization/ba-p/13571226"/>
    <published>2023-11-06T23:36:34+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/defining-a-basic-cds-view/ba-p/13996477</id>
    <title>Defining a Basic CDS View</title>
    <updated>2025-01-25T10:58:50.521000+01:00</updated>
    <author>
      <name>mickaelquesnot</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/150004</uri>
    </author>
    <content>&lt;DIV class=""&gt;&lt;P&gt;Defining a basic Core Data Services (CDS) view in SAP involves creating a data model on the database layer rather than the application layer. This offers significant advantages in terms of performance, data access, and reusability. Here's a breakdown of how to define a basic CDS view:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Development Environment:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You'll typically use the ABAP Development Tools (ADT) in Eclipse to create CDS views. This provides a modern and integrated development environment.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. CDS View Syntax:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The basic syntax for defining a CDS view is as follows:&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;@AbapCatalog&lt;/SPAN&gt;.sqlViewName: &lt;SPAN class=""&gt;'SQL_VIEW_NAME'&lt;/SPAN&gt;
&lt;SPAN class=""&gt;@AbapCatalog&lt;/SPAN&gt;.compiler.compareFilter: &lt;SPAN class=""&gt;true&lt;/SPAN&gt;
&lt;SPAN class=""&gt;@AccessControl&lt;/SPAN&gt;.authorizationCheck: #&lt;SPAN class=""&gt;CHECK&lt;/SPAN&gt;
&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; VIEW_NAME
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; DATABASE_TABLE &lt;SPAN class=""&gt;or&lt;/SPAN&gt; &lt;SPAN class=""&gt;VIEW&lt;/SPAN&gt;
{
  element1 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; alias1,
  element2 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; alias2,
  ...
  elementN &lt;SPAN class=""&gt;as&lt;/SPAN&gt; aliasN
};&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;Let's break down each part:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;@AbapCatalog.sqlViewName: 'SQL_VIEW_NAME':&lt;/STRONG&gt; This annotation is mandatory. It defines the name of the corresponding SQL view that will be created in the database. This is the name you'll use when accessing the view from standard SQL.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;@AbapCatalog.compiler.compareFilter: true:&lt;/STRONG&gt; This annotation is recommended. It ensures that filter conditions are pushed down to the database level for better performance.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;@AccessControl.authorizationCheck: #CHECK:&lt;/STRONG&gt; This annotation is crucial for security. It enforces authorization checks based on the defined authorization objects.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;define view VIEW_NAME:&lt;/STRONG&gt; This keyword starts the definition of the CDS view, followed by the name you want to give to the CDS entity. This is the name used within ABAP programs.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;as select from DATABASE_TABLE or VIEW:&lt;/STRONG&gt; This specifies the data source for the view. You can select from database tables, database views, or other CDS views.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;{ element1 as alias1, ... }:&lt;/STRONG&gt; This is the element list. It defines the fields you want to include in the view. You can rename fields using aliases (as alias).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;3. Example:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let's say you have a database table SCARR (Carrier) and you want to create a CDS view that includes the carrier ID and name:&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;@AbapCatalog&lt;/SPAN&gt;.sqlViewName: &lt;SPAN class=""&gt;'Z_CARRIER_VIEW'&lt;/SPAN&gt;
&lt;SPAN class=""&gt;@AbapCatalog&lt;/SPAN&gt;.compiler.compareFilter: &lt;SPAN class=""&gt;true&lt;/SPAN&gt;
&lt;SPAN class=""&gt;@AccessControl&lt;/SPAN&gt;.authorizationCheck: #&lt;SPAN class=""&gt;CHECK&lt;/SPAN&gt;
&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; ZCarrierView
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; SCARR
{
  carrid &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CarrierID,
  carrname &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CarrierName
};&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;In this example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Z_CARRIER_VIEW is the name of the SQL view.&lt;/LI&gt;&lt;LI&gt;ZCarrierView is the name of the CDS view.&lt;/LI&gt;&lt;LI&gt;carrid is renamed to CarrierID.&lt;/LI&gt;&lt;LI&gt;carrname is renamed to CarrierName.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;4. Key Concepts and Enhancements:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Aliases:&lt;/STRONG&gt; Using aliases makes your code more readable and can be essential when joining tables with fields that have the same name.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data Types:&lt;/STRONG&gt; The data types of the elements in the view are derived from the underlying database table or view.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Expressions:&lt;/STRONG&gt; You can use expressions in the element list to create calculated fields. For example:&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; ZSalesOrderValue
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; VBAK
{
  vbeln &lt;SPAN class=""&gt;as&lt;/SPAN&gt; SalesOrder,
  netwr &lt;SPAN class=""&gt;as&lt;/SPAN&gt; NetValue,
  waerk &lt;SPAN class=""&gt;as&lt;/SPAN&gt; Currency,
  netwr &lt;SPAN class=""&gt;*&lt;/SPAN&gt; &lt;SPAN class=""&gt;1.19&lt;/SPAN&gt; &lt;SPAN class=""&gt;as&lt;/SPAN&gt; GrossValue &lt;SPAN class=""&gt;/&lt;/SPAN&gt;&lt;SPAN class=""&gt;/&lt;/SPAN&gt; Calculated field
};&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Joins:&lt;/STRONG&gt; You can join multiple tables or views in the FROM clause.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; ZCustomerOrders
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; KNA1 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; Customer
    &lt;SPAN class=""&gt;inner&lt;/SPAN&gt; &lt;SPAN class=""&gt;join&lt;/SPAN&gt; VBAK &lt;SPAN class=""&gt;as&lt;/SPAN&gt; SalesOrder
      &lt;SPAN class=""&gt;on&lt;/SPAN&gt; Customer.kunnr &lt;SPAN class=""&gt;=&lt;/SPAN&gt; SalesOrder.kunnr
{
  Customer.kunnr &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CustomerID,
  Customer.name1 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CustomerName,
  SalesOrder.vbeln &lt;SPAN class=""&gt;as&lt;/SPAN&gt; SalesOrderNumber
};&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;WHERE Clause:&lt;/STRONG&gt; You can use a WHERE clause to filter the data.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; ZActiveCustomers
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; KNA1
{
  kunnr &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CustomerID,
  name1 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CustomerName
} &lt;SPAN class=""&gt;where&lt;/SPAN&gt; kunnr &lt;SPAN class=""&gt;like&lt;/SPAN&gt; &lt;SPAN class=""&gt;'1000%'&lt;/SPAN&gt;; &lt;SPAN class=""&gt;/&lt;/SPAN&gt;&lt;SPAN class=""&gt;/&lt;/SPAN&gt; &lt;SPAN class=""&gt;Filter&lt;/SPAN&gt; customers starting &lt;SPAN class=""&gt;with&lt;/SPAN&gt; &lt;SPAN class=""&gt;1000&lt;/SPAN&gt;
&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Associations:&lt;/STRONG&gt; You can define associations between CDS views to navigate related data. This is a more advanced topic but very powerful for building complex data models.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;5. Activation and Usage:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;After defining the CDS view in ADT, you need to activate it. This creates the corresponding SQL view in the database. You can then use the CDS view in ABAP programs using Open SQL statements:&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;ABAP&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;SELECT *
  FROM ZCarrierView
  INTO TABLE @DATA(lt_carriers).&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;You can also access the underlying SQL view directly using native SQL if needed.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Benefits of CDS Views:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Performance:&lt;/STRONG&gt; Data processing is pushed down to the database level, which is much faster than processing data in the application server.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Simplified Data Access:&lt;/STRONG&gt; CDS views provide a simplified and consistent way to access data.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Reusability:&lt;/STRONG&gt; CDS views can be reused in multiple applications.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Extensibility:&lt;/STRONG&gt; You can extend standard SAP data models using CDS views without modifying the original objects.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;By understanding these basic concepts, you can start building efficient and powerful data models using CDS views in your SAP development.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A title="PDF LINKEDIN" href="https://www.linkedin.com/posts/mickaelquesnot_gusap-s4-hanadefining-a-basic-cds-viewdocx-activity-7288156015299108864-KdWM?utm_source=share&amp;amp;utm_medium=member_desktop" target="_self" rel="nofollow noopener noreferrer"&gt;https://www.linkedin.com/posts/mickaelquesnot_gusap-s4-hanadefining-a-basic-cds-viewdocx-activity-7288156015299108864-KdWM?utm_source=share&amp;amp;utm_medium=member_desktop&lt;/A&gt;&lt;/P&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/defining-a-basic-cds-view/ba-p/13996477"/>
    <published>2025-01-25T10:58:50.521000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-adaptation-for-any-middleware-to-cpi-is-migration-rfc-to-webservice/ba-p/14105577</id>
    <title>ABAP Adaptation for Any Middleware to CPI/IS Migration ( RFC to Webservice )</title>
    <updated>2025-05-20T16:14:40.004000+02:00</updated>
    <author>
      <name>Hashini</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1419019</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;1.Introduction:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This document provides an in-depth overview of the necessary changes in ABAP development when migrating from any middleware platform to SAP CPI. It particularly addresses the migration of RFC-based communication in middleware to SOAP-based web services in CPI.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.Background:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The integration platform that enables communication between SAP and external systems. In any middleware, RFC adapters are commonly used to interact with remote systems through RFCs. However, with the shift to SAP CPI/IS, the integration landscape changes, and CPI/IS does not support sender RFCs, so &amp;nbsp;it is necessary to refactor and convert these RFC calls into SOAP web services.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.Transition to SAP CPI:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In CPI, communication is predominantly based on HTTP/SOAP or REST protocols. Therefore, the ABAP function modules that were exposed as RFCs in integration platform must now be exposed as &lt;STRONG&gt;SOAP web services&lt;/STRONG&gt; to be compatible with CPI’s integration model.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.Why Convert RFC to a SOAP Web Service Rather Than Using a Wrapper?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;When a wrapper is created for a sender or receiver RFC, SAP automatically configures the service provider (inbound interface) in SOAMANAGER, thereby generating the web service from the scratch.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;5.ABAP Development Steps - Replacing RFC with SOAP Web Services:&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp;5.1. Obtain the WSDL file from the RFC in SAP or from Integration team.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.1.1.In SE37, enter the RFC to convert to SOAP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.1.2.&lt;/STRONG&gt;Go to &lt;STRONG&gt;Utilities&lt;/STRONG&gt; -&amp;gt; &lt;STRONG&gt;More Utilities&lt;/STRONG&gt; -&amp;gt; &lt;STRONG&gt;Create Web Service&lt;/STRONG&gt; -&amp;gt; &lt;STRONG&gt;From Function Module&lt;/STRONG&gt;.&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_0-1746429056919.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257494i17CFCB0BD135FEAF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_0-1746429056919.png" alt="Hashini_0-1746429056919.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5.1.3.Enter the RFC name and description, then click &lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_1-1746429146623.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257495i5C5301181E8BC2E2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_1-1746429146623.png" alt="Hashini_1-1746429146623.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_3-1746434065390.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257524i0393504AFBBC435E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_3-1746434065390.png" alt="Hashini_3-1746434065390.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_2-1746433768602.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257521iC8106AAD1AD49529/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_2-1746433768602.png" alt="Hashini_2-1746433768602.png" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 5.1.4.Fill in the details and click &lt;STRONG&gt;Finish&lt;/STRONG&gt;.&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;The screen will appear as shown below.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_4-1746434144573.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257525i093DF027A1CCFC82/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_4-1746434144573.png" alt="Hashini_4-1746434144573.png" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 5.1.5.Click on the &lt;STRONG&gt;WSDL&lt;/STRONG&gt; tab to retrieve the WSDL file and modify the wsdl file.&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_5-1746434261354.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257528i08218480B43EBEB5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_5-1746434261354.png" alt="Hashini_5-1746434261354.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;5.2. Modify the WSDL to an asynchronous structure.&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;5.2.1. Why to modify the wsdl structure?&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The WSDL structure used in PI/PO follows a synchronous pattern, with both request and response. When uploading the same file while creating a web service, SAP expects a response from the middleware. To convert it to asynchronous, the WSDL structure must be modified.&lt;BR /&gt;&lt;BR /&gt;Before modification of WSDL : ( It has both input and output parameter )&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_6-1746434525224.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257533i4E7AC59A8E7B8AC7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_6-1746434525224.png" alt="Hashini_6-1746434525224.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After modification of WSDL : ( It has only input parameter )&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_7-1746434620939.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257536iE2EAD6C5B22830C6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_7-1746434620939.png" alt="Hashini_7-1746434620939.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;5.2.2. &lt;STRONG&gt;How it can be modified?&lt;/STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; At the end of &amp;lt;/wsdl:types&amp;gt; tag, add the below template and update the required details:&amp;nbsp;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Replace&amp;nbsp; ZTEST in the template with the actual RFC name. &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;wsdl:message name="ZTEST"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;wsdl:part name=" ZTEST " element="tns: ZTEST "/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/wsdl:message&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;wsdl:portType name=" ZTEST"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;wsp:Policy&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;wsp:PolicyReference URI="#IF_IF_ ZTEST "/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/wsp:Policy&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;wsdl:operation name=" ZTEST"&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;wsp:Policy&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;wsp:PolicyReference URI="#OP_IF_OP_ ZTEST"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/wsp:Policy&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;wsdl:input message="tns: ZTEST"/&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/wsdl:operation&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/wsdl:portType&amp;gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/wsdl:definitions&amp;gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5.3. Upload the WSDL and create the web service in SE80.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.3.1.Navigate to sproxy tcode and click on create button.&lt;STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_8-1746440106759.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257568i1DFF3324020F888B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_8-1746440106759.png" alt="Hashini_8-1746440106759.png" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.3.2.Click on service consumer radio button and then continue.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_9-1746440159366.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257570iB046C320BCBA7330/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_9-1746440159366.png" alt="Hashini_9-1746440159366.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.3.3.Click on service External WSDL/Schema and then continue.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_10-1746440204546.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257571i37808EEE26AFA571/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_10-1746440204546.png" alt="Hashini_10-1746440204546.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.3.4.Click on local file and then continue.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_11-1746440243240.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257573i5B08B741944E69E4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_11-1746440243240.png" alt="Hashini_11-1746440243240.png" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.3.5.Upload the wsdl file and click on continue.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_12-1746440285961.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257575i5F547837BE5610DA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_12-1746440285961.png" alt="Hashini_12-1746440285961.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.3.6.Provide the package name and then the TR details and then continue .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_13-1746440335494.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257576iF1AF9C50FE69CBC0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_13-1746440335494.png" alt="Hashini_13-1746440335494.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.3.7.Click on complete and then save and activate the service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_14-1746440379651.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257577iCA328256692193FC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_14-1746440379651.png" alt="Hashini_14-1746440379651.png" /&gt;&lt;/span&gt;&lt;BR /&gt;5.4.Use the "Where Used" function to identify the related report, function module, or class of the RFC.&lt;/P&gt;&lt;P&gt;5.5.Replace the RFC code with the corresponding SOAP web service code,ensuring all required parameters are passed as in the original RFC.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;RFC Code :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_15-1746440486989.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257578i555CDD586993C77D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_15-1746440486989.png" alt="Hashini_15-1746440486989.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SOAP Code:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_16-1746440532648.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257579i5A39405B8F356868/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_16-1746440532648.png" alt="Hashini_16-1746440532648.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_17-1746440569650.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257581iD69CCA7BBD8FF9F7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_17-1746440569650.png" alt="Hashini_17-1746440569650.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.6.Configure the web service in SOAMANAGER.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.6.1.Navigate to SOAMANAGER tcode and click on &lt;STRONG&gt;web service configuration.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_18-1746440621733.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257583i8EC9398FABA20172/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_18-1746440621733.png" alt="Hashini_18-1746440621733.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.6.2.Provide and select the web service name&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_19-1746440787129.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257590iD0D16126F6ECFA26/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_19-1746440787129.png" alt="Hashini_19-1746440787129.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; 5.6.3. Click on the create button manual configuration to create a logical port for the webservice.&amp;nbsp;Provide the Port name and description.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_20-1746440857861.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257591i7C43A09A50F4909D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_20-1746440857861.png" alt="Hashini_20-1746440857861.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_21-1746440936281.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257593i8DB3A9A41CFAD1B5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_21-1746440936281.png" alt="Hashini_21-1746440936281.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 5.6.4. In the consumer security tab, give the s-user ID and password and click next.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_22-1746440977144.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257594iC92E2E9662EAFD1C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_22-1746440977144.png" alt="Hashini_22-1746440977144.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5.6.5. Provide the correct endpoint in the URL tab and click next.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_23-1746441032712.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257595i761E4B889B87C256/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_23-1746441032712.png" alt="Hashini_23-1746441032712.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.6.6. In the Messaging tab, select suppress id transfer in Message ID Protocol and SAP RM in&amp;nbsp;RM&amp;nbsp;Protocol tab and click next.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_24-1746441202281.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257596i5493356F49295930/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_24-1746441202281.png" alt="Hashini_24-1746441202281.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.6.7. Click on finish to complete the setting.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.6.8: Click on ping test for the successful setup.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Hashini_25-1746446817247.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/257647iDA5E5450746CCCF3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Hashini_25-1746446817247.png" alt="Hashini_25-1746446817247.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-adaptation-for-any-middleware-to-cpi-is-migration-rfc-to-webservice/ba-p/14105577"/>
    <published>2025-05-20T16:14:40.004000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-add-task-to-an-existing-transport-request-using-program/ba-p/14116716</id>
    <title>How to add task to an existing transport request using program</title>
    <updated>2025-06-02T14:09:07.356000+02:00</updated>
    <author>
      <name>Jayesh_Gharate1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1615208</uri>
    </author>
    <content>&lt;DIV&gt;&lt;DIV&gt;&lt;P&gt;&lt;SPAN&gt;PARAMETERS: &lt;/SPAN&gt;&lt;SPAN&gt;p_TR&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;trkorr&lt;/SPAN&gt;&lt;SPAN&gt; OBLIGATORY. // Take TR as parameter&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;DATA: &lt;/SPAN&gt;&lt;SPAN&gt;lt_authorlist&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;trwbo_users&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;lt_return&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;e070&lt;/SPAN&gt;&lt;SPAN&gt;-&lt;/SPAN&gt;&lt;SPAN&gt;trkorr&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ls_return&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;bapiret2&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;lv_new_task&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;trkorr&lt;/SPAN&gt;&lt;SPAN&gt;. // Variable to take task &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;START-OF-SELECTION.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;CALL FUNCTION &lt;/SPAN&gt;&lt;SPAN&gt;'TRINT_INSERT_NEW_COMM'&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;EXPORTING&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;wi_kurztext&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;'New Task' // Description if creating TR&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;wi_trfunction&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;'S' // 'S' to create task under TR &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;iv_username&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;sy&lt;/SPAN&gt;&lt;SPAN&gt;-&lt;/SPAN&gt;&lt;SPAN&gt;uname // System Username &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;wi_strkorr&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;p_TR // Export TR value to FM&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;IMPORTING&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;we_trkorr&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;lv_new_task // Import task to the variable&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;EXCEPTIONS&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;no_systemname&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;1&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;no_systemtype&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;2&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;no_authorization&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;3&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;db_access_error&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;4&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;file_access_error&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;5&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;enqueue_error&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;6&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;number_range_full&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;7&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;invalid_input&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;8&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;OTHERS = &lt;/SPAN&gt;&lt;SPAN&gt;9&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;IF &lt;/SPAN&gt;&lt;SPAN&gt;sy&lt;/SPAN&gt;&lt;SPAN&gt;-&lt;/SPAN&gt;&lt;SPAN&gt;subrc&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;0&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;WRITE: &lt;/SPAN&gt;&lt;SPAN&gt;/&lt;/SPAN&gt; &lt;SPAN&gt;' New task created under TR:'&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;p_TR&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;/&lt;/SPAN&gt; &lt;SPAN&gt;' Task number:'&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;lv_new_task&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ELSE.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;WRITE: &lt;/SPAN&gt;&lt;SPAN&gt;/&lt;/SPAN&gt; &lt;SPAN&gt;'Failed to create task. '&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ENDIF.&lt;BR /&gt;&lt;BR /&gt;*********************************************************************************&lt;BR /&gt;Type of request/task&lt;BR /&gt;Domain :&amp;nbsp;TRFUNCTION&lt;BR /&gt;K : Workbench Request&lt;BR /&gt;W : Customizing Request&lt;BR /&gt;S : Development/Correction&lt;BR /&gt;Q : Customizing Task&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-add-task-to-an-existing-transport-request-using-program/ba-p/14116716"/>
    <published>2025-06-02T14:09:07.356000+02:00</published>
  </entry>
</feed>
