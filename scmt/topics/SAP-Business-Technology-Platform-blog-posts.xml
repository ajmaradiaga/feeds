<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Business-Technology-Platform-blog-posts.xml</id>
  <title>SAP Community - SAP Business Technology Platform</title>
  <updated>2025-08-18T20:00:50.844290+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Business Technology Platform/pd-p/73555000100700000172" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Business Technology Platform blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/example-code-for-sap-com-0466-print-queue-item-read-a2x/ba-p/14164526</id>
    <title>Example code for SAP_COM_0466 - Print Queue Item - Read (A2X)</title>
    <updated>2025-08-07T10:38:20.958000+02:00</updated>
    <author>
      <name>Vi_Ma</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/187156</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This blog focuses on how to get documents out from the SAP Print Queue and how to pass them on to an external Output Management System (OMS) for processing and printing using the SAP provided API. It supplements the already existing &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/connecting-external-output-management-system-to-sap-print-queue-in-sap/ba-p/13674610" target="_blank"&gt;blog&lt;/A&gt; with example implementation with JAVA code of&amp;nbsp; SAP_COM_0466 - Print Queue Item - Read (A2X).&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example code for SAP_COM_0466 - Print Queue Item - Read (A2X)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;See the details on&lt;SPAN&gt;&amp;nbsp;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_CLOUD/0f69f8fb28ac4bf48d2b57b9637e81fa/d07a4297e776446e898f2b27532f63c6.html" target="_blank" rel="noopener noreferrer"&gt;SAP_COM_0466 | SAP Help Portal&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;how to configure your&amp;nbsp;&lt;SPAN&gt;SAP S/4HANA Cloud Public Edition system to support Print Queues.&amp;nbsp;&lt;BR /&gt;Prerequisites:&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;Compiled with SAPMachine 21. You can download &lt;A href="https://sap.github.io/SapMachine" target="_self" rel="nofollow noopener noreferrer"&gt;here.&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;Download (e.g. &lt;A href="https://repo1.maven.org/maven2/org/json/json/" target="_self" rel="nofollow noopener noreferrer"&gt;here&lt;/A&gt;) and add latest version of class org.json&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;Adapt with your personal connection and access details.&amp;nbsp;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN&gt;Please note that code is meant as example how the api can be used. Code is not claimed to be complete, to be error free or to be state of the art programming style.&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Usage of the example code&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Download (e.g. &lt;A href="https://repo1.maven.org/maven2/org/json/json/" target="_self" rel="nofollow noopener noreferrer"&gt;here&lt;/A&gt;) and add latest version of class org.json&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Adopt cope with your access details&lt;/LI&gt;&lt;LI&gt;Compile code (I used&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://sap.github.io/SapMachine" target="_self" rel="nofollow noopener noreferrer"&gt;SAPMachine 21).&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Run code&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create a document on the configured print queue in SAP System&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Code will&amp;nbsp; process&amp;nbsp;&lt;SPAN&gt;print queue item&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;You can also simulate errors on the print queue item. See comments in the code&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;Remind!&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Code is meant as example how the api can be used. Code is not claimed to be complete, to be error free or to be state of the art programming style. Nevertheless feedback is welcome.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import java.net.CookieManager;
import java.net.http.*;
import java.net.URI;
import java.util.Base64;
import java.util.concurrent.*; 
import org.json.*;

class SAP_COM_0466_example {
    
    public static int Get_System_Details(  System_Str[] System_Details ) throws Exception {
    // get details of the SAP sytem for api and other calls
    
        // pre-defined system details and credentials for testing, needs to be configured in SAP system beforehand
        
		System_Details[0] = new System_Str (
            "https://my######-api.s4hana.ondemand.com",                                                        // URL to SAP system DEF
            "SAPUSERNAME",                                                                                     // SAP User Name / Client ID on BTP
            "########################################",                                                        // SAP User Password / Client Secret on BTP
            "SAP S/4HANA CLOUD (Public Edition)",                                                              // SAP System Type
            "dummy",                                                                                           // Sub-Account name, only required for BTP 
            10);                                                                                               // intervall for ICM cache polling

        /*                                                                                       
        System_Details[0] = new System_Str (                                                 
            "https://abc.private.corp",                                                                        // URL to SAP system ABC
            "SAPUSERNAME",                                                                                     // SAP User Name / Client ID on BTP
            "########################################",                                                        // SAP User Password / Client Secret on BTP
            "SAP S/4HANA CLOUD (Private Edition)",                                                             // SAP System Type
            "dummy",                                                                                           // Sub-Account name, only required for BTP 
            10);                                                                                               // intervall for ICM cache polling
        */                                                                                         

        /*                                                                                       
        System_Details[0] = new System_Str (                                                 
            "https://api.eu11.print.services.sap/qm",                                                          // URL to SAP system BTP
            "#############################################################",                                   // SAP User Name / Client ID on BTP
            "#################################################################################",               // SAP User Password / Client Secret on BTP
            "SAP BTP",                                                                                         // SAP System Type
            "icc-btp-test-abcd1234");                                                                          // Sub-Account name, only required for BTP
            10);                                                                                               // intervall for ICM cache polling
        */
     
        return (200);                                                                                          // return good status code
     
    }


    public static int Get_Bearer_Token( StringBuilder BearerToken, String Credentials, System_Str System_Details ) throws Exception {
    // For BTP only to get the bearer token for oauth authentication 

        String       UrlLocator;                                                                               // http request url
        HttpRequest  RequestBody;                                                                              // http request body
        HttpHeaders  RequestHeaders;                                                                           // http request header
        HttpResponse ResponseReply;                                                                            // http reply body
        HttpHeaders  ResponseHeaders;                                                                          // http reply header
        String       ResponseCodeL;                                                                            // http response code
        String       BearerTokenL;                                                                             // BTP bearer token for oauth authentication
        
        UrlLocator = System_Details.SystemUrl.substring(System_Details.SystemUrl.indexOf("api.") + 4);         // extract location of BTP account
        UrlLocator = UrlLocator.substring(0,UrlLocator.indexOf("."));                                 
        UrlLocator = "https://" + System_Details.SubDomain + ".authentication." + UrlLocator + ".hana.ondemand.com"; // build url for bearer token request
        //System.out.println(UrlLocator + "/oauth/token?grant_type=client_credentials");              
                                                                                                      
        RequestBody = HttpRequest.newBuilder()                                                                 // build the http request
        .uri(URI.create( UrlLocator + "/oauth/token?grant_type=client_credentials"))                           // add path for bearer token request
        .version(HttpClient.Version.HTTP_2)                                                                    // set call context
        .header("Content-Type", "application/x-www-form-urlencoded")
        .header("accept", "application/xml")
        .header("user-agent", "printqueuequery")
        .header("Authorization", Credentials)
        .method("GET", HttpRequest.BodyPublishers.noBody())
        .build();

        RequestHeaders  = RequestBody.headers();                                                               // read the request header for error analysis 
        ResponseReply   = HttpClient.newHttpClient().send(RequestBody, HttpResponse.BodyHandlers.ofString());  // initiate http call
        ResponseHeaders = ResponseReply.headers();                                                             // read the reply header for error analysis    
        ResponseCodeL   = ResponseReply.toString();                                                            
        ResponseCodeL   = ResponseCodeL.substring(ResponseCodeL.length()-3,ResponseCodeL.length());            // extract http status code

        //System.out.println("");
        //System.out.println("Get_Bearer_Token");
        //System.out.println("");
        //System.out.println("HttpRequest");    
        //System.out.println(RequestBody);        
        //System.out.println("");
        //System.out.println("RequestHeaders");
        //System.out.println(RequestHeaders);
        //System.out.println("");
        //System.out.println("ResponseReply");    
        //System.out.println(ResponseReply);    
        //System.out.println("");
        //System.out.println("ResponseBody");    
        //System.out.println(ResponseReply.body());    
        //System.out.println("");
        //System.out.println("ResponseHeaders");
        //System.out.println(ResponseHeaders);
        //System.out.println("");        
        //System.out.println("BearerToken: \"" + BearerTokenL + "\"");        
        //System.out.println("");
                    
        BearerTokenL    = ResponseReply.body().toString();                                                     // extract bearer token from http reply
        if ( BearerTokenL.contains("\"access_token\":\"") )                                                    // check if bearer token is in http reply
        {
            BearerTokenL    = BearerTokenL.substring(BearerTokenL.indexOf("\"access_token\":\"")+16);          // extract bearer token
            BearerTokenL    = BearerTokenL.substring(0,BearerTokenL.indexOf("\","));
        }
        else {
            BearerTokenL    = "";
            System.out.println("    BearerToken missing in http-reply");                                       // show error message if bearer token is missing
        }

        BearerToken.setLength(0);                                                                              // return the bearer token
        BearerToken.append(BearerTokenL);
        
        return (Integer.valueOf(ResponseCodeL));                                                               // return the http status code
    }        
  
  
    public static int Get_IcmCache( StringBuilder ICMcache, String Credentials , System_Str System_Details) throws Exception {
    // see SAP doumenation for the API

        HttpRequest  RequestBody;                                                                              // http request body
        HttpHeaders  RequestHeaders;                                                                           // http request header
        HttpResponse ResponseReply;                                                                            // http reply body
        HttpHeaders  ResponseHeaders;                                                                          // http reply header
        String       ResponseCodeL;                                                                            // http response code
        String       ICMCacheL;                                                                                // SAP ICM cache status
                                                                                                             
        RequestBody = HttpRequest.newBuilder()                                                                 // build the http request
        .uri(URI.create(System_Details.SystemUrl + "/sap/opu/odata/SAP/API_CLOUD_PRINT_PULL_SRV/Get_IcmCache"))  // add path for function
        .version(HttpClient.Version.HTTP_2)                                                                    // set call context
        .header("Content-Type", "application/json")
        .header("accept", "application/json")
        .header("user-agent", "printqueuequery")
        .header("Authorization", Credentials)
        .method("GET", HttpRequest.BodyPublishers.noBody())
        .build();

        RequestHeaders  = RequestBody.headers();                                                               // read the request header for error analysis 
        ResponseReply   = HttpClient.newHttpClient().send(RequestBody, HttpResponse.BodyHandlers.ofString());  // initiate http call
        ResponseHeaders = ResponseReply.headers();                                                             // read the reply header for error analysis    
        ResponseCodeL   = ResponseReply.toString();                                                
        ResponseCodeL   = ResponseCodeL.substring(ResponseCodeL.length()-3,ResponseCodeL.length());            // extract http status code
        
        //System.out.println("");
        //System.out.println("Get_IcmCache");
        //System.out.println("");
        //System.out.println("HttpRequest");    
        //System.out.println(RequestBody);        
        //System.out.println("");
        //System.out.println("RequestHeaders");
        //System.out.println(RequestHeaders);
        //System.out.println("");
        //System.out.println("ResponseReply");    
        //System.out.println(ResponseReply);    
        //System.out.println("");
        //System.out.println("ResponseBody");    
        //System.out.println(ResponseReply.body());    
        //System.out.println("");
        //System.out.println("ResponseHeaders");
        //System.out.println(ResponseHeaders);
        //System.out.println("");
    
        ICMCacheL = "";                                                                                        // extract the SAP ICM cache status from http reply
        if ( ResponseReply.body().toString().length() &amp;gt; 99 ) {                                                 // check if SAP ICM cache status is in  http reply
            if ( !ResponseReply.body().toString().contains("{\"d\":{") ) {                                     // check if proper structure is received
				System.out.println("error occured");                                                           // exit in case of elemd "d" does not exist
				System.out.println(ResponseReply.body());    
				System.exit(0);
			}
            JSONObject jObject = new JSONObject(ResponseReply.body().toString());                              // read the json structure
			ICMCacheL = jObject.getJSONObject("d").getString("content");                                       // extract the SAP ICM cache status				
        }
        ICMcache.setLength(0);                                                                                 // return the SAP ICM cache status
        ICMcache.append(ICMCacheL);

        return (Integer.valueOf(ResponseCodeL));                                                               // return the http status code
    }    

    
    public static int Get_PrintQueuesOfUserExt( int[] Qname_No, String[] ListOfQueues, String Credentials, System_Str System_Details ) throws Exception {
    // see SAP doumenation for the API
    
        HttpRequest  RequestBody;                                                                              // http request body
        HttpHeaders  RequestHeaders;                                                                           // http request header
        HttpResponse ResponseReply;                                                                            // http reply body
        HttpHeaders  ResponseHeaders;                                                                          // http reply header
        String       ResponseCodeL;                                                                            // http response code
        int          Qname_NoL;                                                                                // Number of Print Queues

        RequestBody = HttpRequest.newBuilder()                                                                 // build the http request
        .uri(URI.create(System_Details.SystemUrl + "/sap/opu/odata/SAP/API_CLOUD_PRINT_PULL_SRV/Get_PrintQueuesOfUserExt"))   // add path for function
        .version(HttpClient.Version.HTTP_2)                                                                    // set call context
        .header("Content-Type", "application/json")
        .header("accept", "application/json")
        .header("user-agent", "printqueuequery")
        .header("Authorization", Credentials)
        .method("GET", HttpRequest.BodyPublishers.noBody())
        .build();

        RequestHeaders  = RequestBody.headers();                                                               // read the request header for error analysis 
        ResponseReply   = HttpClient.newHttpClient().send(RequestBody, HttpResponse.BodyHandlers.ofString());  // initiate http call
        ResponseHeaders = ResponseReply.headers();                                                             // read the reply header for error analysis   
        ResponseCodeL   = ResponseReply.toString();                                                
        ResponseCodeL   = ResponseCodeL.substring(ResponseCodeL.length()-3,ResponseCodeL.length());            // extract http status code            

        //System.out.println("");
        //System.out.println("Get_PrintQueuesOfUserExt");
        //System.out.println("");
        //System.out.println("HttpRequest");    
        //System.out.println(RequestBody);        
        //System.out.println("");
        //System.out.println("RequestHeaders");
        //System.out.println(RequestHeaders);
        //System.out.println("");
        //System.out.println("ResponseReply");    
        //System.out.println(ResponseReply);    
        //System.out.println("");
        //System.out.println("ResponseBody");    
        //System.out.println(ResponseReply.body());    
        //System.out.println("");
        //System.out.println("ResponseHeaders");
        //System.out.println(ResponseHeaders);
        //System.out.println("");        
        
        Qname_NoL = 0;                                                                                         // initiate the number of Print Queues
        if ( ResponseCodeL.equals("200") &amp;amp;&amp;amp; (ResponseReply.body().toString().length() &amp;gt; 99) ) {               // check if there is payload
            if ( !ResponseReply.body().toString().contains("{\"d\":{") ) {                                     // check if proper structure is received
				System.out.println("error occured");                                                           // exit in case of elemd "d" does not exist
				System.out.println(ResponseReply.body());    
				System.exit(0);
			}
            JSONObject jObject = new JSONObject(ResponseReply.body().toString());                              // read the json structure
            JSONArray  Qresults = jObject.getJSONObject("d").getJSONArray("results"); 
            for (int i = 0; i &amp;lt; Qresults.length(); i++) {
                ListOfQueues[i]  = Qresults.getJSONObject(i).getString("Qname");                               // read the Print Queue name
                //System.out.println(ListOfQueues[i]);                                                                 
                Qname_NoL = i + 1;                                                                             // adjust number of Print Queues
                if ( Qname_NoL &amp;gt; 100 ) { 
                    System.out.println("Support max. 100 print queues");                                       // inform on limitation                          
                    break;                                                                                     // stop after 100 Print Queues 
                }   
            }
        }
        Qname_No[0] = Qname_NoL;                                                                               // return the number of Print Queues 
        
        return (Integer.valueOf(ResponseCodeL));                                                               // return the http status code
    }        

    
    public static int Get_NumberOfQItemsExt( int[] NrOfNewItems, String Qname, String Credentials, System_Str System_Details ) throws Exception {
    // see SAP doumenation for the API
    
        HttpRequest  RequestBody;                                                                              // http request body 
        HttpResponse ResponseReply;                                                                            // http request header
        HttpHeaders  RequestHeaders;                                                                           // http reply body
        HttpHeaders  ResponseHeaders;                                                                          // http reply header
        String       ResponseCodeL;                                                                            // http response code
        String       paramset;                                                                                 // parameter set for api call
        int          NrOfNewItemsL;                                                                            // number of new print queue items
                                                                                                               
        paramset = "?Qname='" + Qname + "'";                                                                   // build the parameter set - set print queue name 
        RequestBody = HttpRequest.newBuilder()                                                                 // build the http request
        .uri(URI.create(System_Details.SystemUrl + "/sap/opu/odata/SAP/API_CLOUD_PRINT_PULL_SRV/Get_NumberOfQItemsExt" + paramset)) // add path for function
        .version(HttpClient.Version.HTTP_2)                                                                    // set call context
        .header("Content-Type", "application/json")                                                         
        .header("accept", "application/json")                                                               
        .header("user-agent", "printqueuequery")
        .header("Authorization", Credentials)
        .method("GET", HttpRequest.BodyPublishers.noBody())
        .build();

        RequestHeaders  = RequestBody.headers();                                                               // read the request header for error analysis 
        ResponseReply   = HttpClient.newHttpClient().send(RequestBody, HttpResponse.BodyHandlers.ofString());  // initiate http call
        ResponseHeaders = ResponseReply.headers();                                                             // read the reply header for error analysis   
        ResponseCodeL   = ResponseReply.toString();                                                
        ResponseCodeL   = ResponseCodeL.substring(ResponseCodeL.length()-3,ResponseCodeL.length());            // extract http status code            
                                                                                                               
        //System.out.println("");
        //System.out.println("Get_NumberOfQItemsExt");
        //System.out.println("");
        //System.out.println("HttpRequest");    
        //System.out.println(RequestBody);        
        //System.out.println("");
        //System.out.println("RequestHeaders");
        //System.out.println(RequestHeaders);
        //System.out.println("");
        //System.out.println("ResponseReply");    
        //System.out.println(ResponseReply);    
        //System.out.println("");
        //System.out.println("ResponseBody");    
        //System.out.println(ResponseReply.body());    
        //System.out.println("");
        //System.out.println("ResponseHeaders");
        //System.out.println(ResponseHeaders);
        //System.out.println("");
        //System.out.println("NrOfNewItems: " + NrOfNewItemsL);
        //System.out.println("");

        NrOfNewItemsL = 0;                                                                                     // initiate the number of print queue items
        if ( ResponseReply.body().toString().length() &amp;gt; 99 ) {                                                 // check if there is payload
            if ( !ResponseReply.body().toString().contains("{\"d\":{") ) {                                     // check if proper structure is received
				System.out.println("error occured");                                                           // exit in case of elemd "d" does not exist
				System.out.println(ResponseReply.body());    
				System.exit(0);
			}
            JSONObject jObject = new JSONObject(ResponseReply.body().toString());                              // read the json structure
            NrOfNewItemsL  = jObject.getJSONObject("d").getInt("NrOfNewItems");                                // read from json structure number of print queue items 
        }
        NrOfNewItems[0] = NrOfNewItemsL;                                                                       // return the number of print queue items 
        
        return (Integer.valueOf(ResponseCodeL));                                                               // return the http status code
    }


    public static int Get_Next_QItemsExt( QItem_Str[] QItemList, int NumberOfItems, String Qname, String Credentials, System_Str System_Details ) throws Exception {
    // see SAP doumenation for the API
    
        HttpClient   client;                                                                                   // http handle 
        HttpRequest  RequestBody;                                                                              // http request body 
        HttpResponse ResponseReply;                                                                            // http request header
        HttpHeaders  RequestHeaders;                                                                           // http reply body
        HttpHeaders  ResponseHeaders;                                                                          // http reply header
        String       ResponseCodeL;                                                                            // http response code
        String       QItemDoc;                                                                                 // queue item docuement raw data
        String       QItemId;                                                                                  // queue item ID
        String       QItemFile;                                                                                // queue item file name
        String       QItemBlob;                                                                                // queue item blob
        long         QItemSize;                                                                                // queue item file size
        String       paramset;                                                                                 // parameter set for api call
        
        paramset = "?NumberOfItems=" + NumberOfItems ;                                                         // build the parameter set - set number of queue items
        paramset = paramset + "&amp;amp;Qname='" + Qname + "'";                                                        // set print queue name
        
        RequestBody = HttpRequest.newBuilder()                                                                 // build the http request
        .uri(URI.create(System_Details.SystemUrl + "/sap/opu/odata/SAP/API_CLOUD_PRINT_PULL_SRV/Get_Next_QItemsExt" + paramset)) // add path for function
        .version(HttpClient.Version.HTTP_2)                                                                    // set call context
        .header("x-csrf-token", "fetch")
        .header("Content-Type", "application/json")
        .header("accept", "application/json")
        .header("user-agent", "printqueuequery")
        .header("Authorization", Credentials)
        .method("GET", HttpRequest.BodyPublishers.noBody())
        .build();

        RequestHeaders  = RequestBody.headers();                                                               // read the request header for error analysis
        ResponseReply   = HttpClient.newHttpClient().send(RequestBody, HttpResponse.BodyHandlers.ofString());  // initiate http call
        ResponseHeaders = ResponseReply.headers();                                                             // read the reply header for error analysis  
        ResponseCodeL   = ResponseReply.toString();                                                
        ResponseCodeL   = ResponseCodeL.substring(ResponseCodeL.length()-3,ResponseCodeL.length());            // extract http status code
    
        //System.out.println("");
        //System.out.println("Get_Next_QItemsExt");
        //System.out.println("");
        //System.out.println("HttpRequest");    
        //System.out.println(RequestBody);        
        //System.out.println("");
        //System.out.println("RequestHeaders");
        //System.out.println(RequestHeaders);
        //System.out.println("");
        //System.out.println("ResponseReply");    
        //System.out.println(ResponseReply);    
        //System.out.println("");
        //System.out.println("ResponseBody");    
        //System.out.println(ResponseReply.body());
        //System.out.println("");
        //System.out.println("ResponseHeaders");
        //System.out.println(ResponseHeaders);
        //System.out.println("");

        if ( ResponseReply.body().toString().length() &amp;gt; 99 ) {                                                 // check if there is payload
            if ( !ResponseReply.body().toString().contains("{\"d\":{") ) {                                     // check if proper structure is received
				System.out.println("error occured");                                                           // exit in case of elemd "d" does not exist
				System.out.println(ResponseReply.body());    
				System.exit(0);
			}
            JSONObject jObject    = new JSONObject(ResponseReply.body().toString());                           // read the json structure
            JSONArray  jQItemList = jObject.getJSONObject("d").getJSONArray("results");                        // read from json the results structure
            //System.out.println("jQItemList.length: " + jQItemList.length());
            
			for (int i = 0; i &amp;lt; jQItemList.length(); i++) {                                                    // loop on the print queue items

                JSONObject jQItem    = jQItemList.getJSONObject(i);                                            // read from json the print queue item                                                                
                QItemDoc             = jQItem.getString("Documents");                                          // read from json the Documents structure
                JSONArray jDocuments = new JSONArray(QItemDoc);                                                // read the nested json structure
                //System.out.println(jDocuments);
                
				for (int j = 0; j &amp;lt; jDocuments.length(); j++) {
					
					JSONObject jDocumentItem = jDocuments.getJSONObject(j);                                    // read from json the documents for the print queue item
					
					QItemId   = jQItem.getString("QItemId");                                                   // read from json the print queue item ID
					QItemFile = jDocumentItem.getString("document_name");                                      // read from json the print queue item file name
					QItemBlob = jDocumentItem.getString("blob");                                               // read from json extract from the blob
					QItemBlob = QItemBlob.substring(0,3) + "..." + QItemBlob.substring(QItemBlob.length()-3,QItemBlob.length());
					QItemSize = jDocumentItem.getLong("filesize");                                             // read from json the print queue item file size

					//System.out.println("-Documents: " + QItemDoc);
					//System.out.println("-    QItemId:   " + QItemId);         
					//System.out.println("-    QItemFile: " + QItemFile);       
					//System.out.println("-    QItemSize: " + QItemBlob);       
					//System.out.println("-    QItemBlob: " + QItemSize);       
					//System.out.println("");       
						 
					QItemList[i] = new QItem_Str(QItemId, QItemFile, QItemBlob, QItemSize, "", 0);             // return print queue meta data 
					if (j &amp;gt; 0) break;                                                                          // ignore attachemens for now ####
				}
            }
        }
        
        return (Integer.valueOf(ResponseCodeL));                                                               // return the http status code
    }


    public static int PrintItemStatusSet( QItem_Str[] QItemList, int NoOfQItems_Queues, String Qname, String Credentials, System_Str System_Details ) throws Exception {
    // see SAP doumenation for the API
    
        HttpClient   client;                                                                                   // http handle 
        HttpRequest  RequestBody;                                                                              // http request body
        HttpHeaders  RequestHeaders;                                                                           // http request header
        HttpResponse ResponseReply;                                                                            // http reply body
        HttpHeaders  ResponseHeaders;                                                                          // http reply header
        String       ResponseCodeL;                                                                            // http response code
        String       jsonInputString;                                                                          // JSON structure for PrintItemStatusSet
        String       XCsrfToken;                                                                               // XCsrfToken for api call
        String       Getcookie;                                                                                // session cookie for api call     
        
        // Part 0: Create client for common part
        client = HttpClient.newBuilder()                                                                       // Preprare to set cookie context
        .cookieHandler(new CookieManager())
        .version(HttpClient.Version.HTTP_2)
        .build();
        
        // Part 1: query for x-csrf-token
        RequestBody = HttpRequest.newBuilder()                                                                 // build the http request
        .uri(URI.create(System_Details.SystemUrl + "/sap/opu/odata/SAP/API_CLOUD_PRINT_PULL_SRV/PrintItemStatusSet"))  // add path for function
        .version(HttpClient.Version.HTTP_2)                                                                    // set call context
        .header("x-csrf-token", "fetch")
        .header("Content-Type", "application/json")
        .header("accept", "application/json")
        .header("user-agent", "printqueuequery")
        .header("Authorization", Credentials)
        .method("HEAD", HttpRequest.BodyPublishers.noBody())
        .build();

        RequestHeaders  = RequestBody.headers();                                                               // read the request header for error analysis 
        ResponseReply   = client.send(RequestBody, HttpResponse.BodyHandlers.ofString());                      // initiate http call
        ResponseHeaders = ResponseReply.headers();                                                             // read the reply header for error analysis   
        ResponseCodeL   = ResponseReply.toString();                                                
        ResponseCodeL   = ResponseCodeL.substring(ResponseCodeL.length()-3,ResponseCodeL.length());            // extract http status code
    
        //System.out.println("");
        //System.out.println("PrintItemStatusSet");
        //System.out.println("");
        //System.out.println("HttpRequest");    
        //System.out.println(RequestBody);        
        //System.out.println("");
        //System.out.println("RequestHeaders");
        //System.out.println(RequestHeaders);
        //System.out.println("");
        //System.out.println("ResponseReply");    
        //System.out.println(ResponseReply);    
        //System.out.println("");
        //System.out.println("ResponseBody");    
        //System.out.println(ResponseReply.body());
        //System.out.println("");
        //System.out.println("ResponseHeaders");
        //System.out.println(ResponseHeaders);
        //System.out.println("");

        XCsrfToken      = ResponseHeaders.firstValue("X-CSRF-Token").toString();                               // extract required X-CSRF-Token
        XCsrfToken      = XCsrfToken.replace("Optional[", "").replace("]", "");
        //System.out.println("X-CSRF-Token: \"" + XCsrfToken + "\"");
        
        Getcookie       = ResponseHeaders.toString();                                                          // get session cookie
        Getcookie       = Getcookie.substring(Getcookie.indexOf("set-cookie=[")+12);
        Getcookie       = Getcookie.substring(0,Getcookie.indexOf("]"));
        //System.out.println("Cookie:       \"" + Getcookie  + "\"");

        jsonInputString = "{\"Qname\":\"" + Qname + "\",\"ItemsStatus\":\"[";                                  // build the json string for api call
        for (int i = 0; i &amp;lt; NoOfQItems_Queues; i++) {                                                         
            jsonInputString = jsonInputString + "{\\\"ITEM_ID\\\":\\\"";                                      
            jsonInputString = jsonInputString + QItemList[i].QItemId;                                          // add the Print Queue Item ID
            jsonInputString = jsonInputString + "\\\",\\\"STATUS\\\":\\\"S\\\",";                              // set success code
            jsonInputString = jsonInputString + "\\\"STATUS_DESC\\\":\\\"Printed by NN\\\"}";                  // set success message
            if ( i &amp;lt; ( NoOfQItems_Queues - 1 )) {
                jsonInputString = jsonInputString + ",";
            }
        }
        jsonInputString = jsonInputString + "]\"}";                                                            // close the json structure 

        // Part 2: post print item status
        RequestBody = HttpRequest.newBuilder()                                                                 // build the http request
        .uri(URI.create(System_Details.SystemUrl + "/sap/opu/odata/SAP/API_CLOUD_PRINT_PULL_SRV/PrintItemStatusSet")) // add path for function
        .version(HttpClient.Version.HTTP_2)                                                                    // set call context
        .header("X-CSRF-Token", XCsrfToken)                                                                    // add XCsrfToken
        .header("cookie", Getcookie)                                                                           // add session cookie
        .header("Content-Type", "application/json")
        .header("accept", "application/json")
        .header("user-agent", "printqueuequery")
        .header("Authorization", Credentials)
        .method("POST", HttpRequest.BodyPublishers.ofString(jsonInputString))
        .build();

        RequestHeaders  = RequestBody.headers();                                                               // read the request header for error analysis 
        ResponseReply   = client.send(RequestBody, HttpResponse.BodyHandlers.ofString());                      // initiate http call
        ResponseHeaders = ResponseReply.headers();                                                             // read the reply header for error analysis   
        ResponseCodeL   = ResponseReply.toString();                                                
        ResponseCodeL   = ResponseCodeL.substring(ResponseCodeL.length()-3,ResponseCodeL.length());            // extract http status code
        
        //System.out.println("");
        //System.out.println("PrintItemStatusSet POST");
        //System.out.println("");        
        //System.out.println("HttpRequest");    
        //System.out.println(RequestBody);        
        //System.out.println("");
        //System.out.println("RequestHeaders");
        //System.out.println(RequestHeaders);
        //System.out.println("");
        //System.out.println("ResponseReply");    
        //System.out.println(ResponseReply);    
        //System.out.println("");
        //System.out.println("HttpResponseReply");    
        //System.out.println(ResponseReply.body());
        //System.out.println("");
        //System.out.println("ResponseHeaders");
        //System.out.println(ResponseHeaders);
        //System.out.println("");

        XCsrfToken      = ResponseHeaders.firstValue("X-CSRF-Token").toString();                               // extract required X-CSRF-Token
        XCsrfToken      = XCsrfToken.replace("Optional[", "").replace("]", "");
        //System.out.println("X-CSRF-Token: \"" + XCsrfToken + "\"");
        
        return (Integer.valueOf(ResponseCodeL));                                                               // return the http status code
    }
    

    public static int Set_QItems_LastErrorExt( int NumberOfItems, String Qname, String Credentials, System_Str System_Details ) throws Exception {
    // see SAP doumenation for the API
     
        HttpRequest  RequestBody;                                                                              // http request body 
        HttpResponse ResponseReply;                                                                            // http request header
        HttpHeaders  RequestHeaders;                                                                           // http reply body
        HttpHeaders  ResponseHeaders;                                                                          // http reply header
        String       ResponseCodeL;                                                                            // http response code
        String       paramset;                                                                                 // parameter set for api call
        
        paramset = "?Qname='" + Qname + "'";                                                                   // build the parameter set - set the print queue name
        paramset = paramset + "&amp;amp;NumberOfItems=" + NumberOfItems;                                               // set the number of print queue items
        paramset = paramset + "&amp;amp;ResetToStatus='F'";                                                            // set the status failure
        paramset = paramset + "&amp;amp;ResetToStatusDesc='test_for_Set_QItems_LastErrorExt'";                         // set the status message
        RequestBody = HttpRequest.newBuilder()                                                                 // build the http request
        .uri(URI.create(System_Details.SystemUrl + "/sap/opu/odata/SAP/API_CLOUD_PRINT_PULL_SRV/Set_QItems_LastErrorExt" + paramset )) // add path for function
        .version(HttpClient.Version.HTTP_2)                                                                    // set call context             
        .header("x-csrf-token", "fetch")                                                                                   
        .header("Content-Type", "application/json")
        .header("accept", "application/json")
        .header("user-agent", "printqueuequery")
        .header("Authorization", Credentials)
        .method("GET", HttpRequest.BodyPublishers.noBody())
        .build();

        RequestHeaders  = RequestBody.headers();                                                               // read the request header for error analysis
        ResponseReply   = HttpClient.newHttpClient().send(RequestBody, HttpResponse.BodyHandlers.ofString());  // initiate http call
        ResponseHeaders = ResponseReply.headers();                                                             // read the reply header for error analysis  
        ResponseCodeL   = ResponseReply.toString();                                                            
        ResponseCodeL   = ResponseCodeL.substring(ResponseCodeL.length()-3,ResponseCodeL.length());            // extract http status code
    
        //System.out.println("");
        //System.out.println("Get_Next_QItemsExt");
        //System.out.println("");
        //System.out.println("HttpRequest");    
        //System.out.println(RequestBody);        
        //System.out.println("");
        //System.out.println("RequestHeaders");
        //System.out.println(RequestHeaders);
        //System.out.println("");
        //System.out.println("ResponseReply");    
        //System.out.println(ResponseReply);    
        //System.out.println("");
        //System.out.println("HttpResponseReply");    
        //System.out.println(ResponseReply.body());
        //System.out.println("");
        //System.out.println("ResponseHeaders");
        //System.out.println(ResponseHeaders);
        //System.out.println("");    
    
        return (Integer.valueOf(ResponseCodeL));                                                               // return the http status code
    }
    
    public record QItem_Att (                                                                                  // structure for single queue item
        String       QItemFile,                                                                                // queue item file name
        String       QItemBlob,                                                                                // queue item blob
        long         QItemSize                                                                                // queue item file size
    ) {}

    public record QItem_Str (                                                                                  // structure for single queue item
        String       QItemId,                                                                                  // queue item ID
        String       QItemFile,                                                                                // queue item file name
        String       QItemBlob,                                                                                // queue item blob
        long         QItemSize,                                                                                // queue item file size
		String       QItemUName,                                                                               // user who created the request
		int          NoOfAtt                                                                                   // number of attachements
    ) {}

    public record System_Str (                                                                                 // structure for system detail + access data
        String      SystemUrl,                                                                                 // URL to SAP system
        String      SystemUser,                                                                                // SAP User Name / Client ID on BTP
        String      SystemPassword,                                                                            // SAP User Password / Client Secret on BTP
        String      SystemType,                                                                                // SAP System Type
        String      SubDomain,                                                                                 // Sub-Account name, only required for BTP
        int         Interval                                                                                    // intervall for ICM cache polling
    ) {}


    // main program
    public static void main(String[] args) throws Exception {
        
        String        Get_IcmCache_old;                                                                        // ICM cache status of prior call
        String        Get_IcmCache_new;                                                                        // ICM cache status of current call
        StringBuilder ICMCache            = new StringBuilder("");                                             // ICM cache status
        String        ApiCall;                                                                                 // Buffer for text for current API call
        int           ResponseCode;                                                                            // Result code of API call
        String        Credentials;                                                                             // Buffer for logon credential
        StringBuilder BearerToken         = new StringBuilder("");                                             // Buffer for bearer token
        System_Str    System_Details[]    = new System_Str[1];                                                 // System details strcture
        String        ListOfQueues[]      = new String[100];                                                   // List of print queues
        int           NumberOfQueues[]    = new int[1];                                                        // Number of print queues
        int           NoOfQItems_Queue[]  = new int[1];                                                        // Number of print queue items in print queue
        int           NoOfQItems_Queues[] = new int[100];                                                      // Number of print queue items per print queue
        QItem_Str     QItemList[]         = new QItem_Str[100];                                                // List of print queue item IDs per queue
        long          timer_cur;                                                                               // Current time stamp
        long          timer_new;                                                                               // time stamp for next planned ICM cache polling
        int           lauf1;                                                                                   // loop variable 1
        int           lauf2;                                                                                   // loop variable 2
        boolean       new_request;                                                                             // flag for new print queue items
        
        
        ResponseCode = Get_System_Details( System_Details );                                                   // get system details
        System.out.println(ResponseCode + " Get_System_Details");        
        
        Credentials = "Basic " + new String(Base64.getEncoder().encode((System_Details[0].SystemUser + ":" + System_Details[0].SystemPassword).getBytes())); // build credentials
        
        ApiCall      = "Get_PrintQueuesOfUserExt";                                                             // prepare api call
        ResponseCode = Get_PrintQueuesOfUserExt(NumberOfQueues, ListOfQueues, Credentials, System_Details[0]); // call api Get_PrintQueuesOfUserExt
        if ( (ResponseCode == 401) &amp;amp; ( System_Details[0].SystemType.equals("SAP BTP")) ) {                     // in case of expired bearer token request new bearer token
            ApiCall      = "Get_Bearer_Token";                                                                 // prepare Get_Bearer_Token
            ResponseCode = Get_Bearer_Token( BearerToken, Credentials, System_Details[0]);                     // call Get_Bearer_Token
            System.out.println(ResponseCode + " " + ApiCall);                                                  // output api call result
            Credentials  = "Bearer " + BearerToken.toString();                                                 // copy bearer token to credentials
            //System.out.println("BearerToken: \"" + Credentials + "\"");        
            if (ResponseCode == 200) {                                                                         // retry api call in case of good bearer token
                ApiCall = "Get_PrintQueuesOfUserExt";                                                          // prepare api call
                ResponseCode = Get_PrintQueuesOfUserExt(NumberOfQueues, ListOfQueues, Credentials, System_Details[0]); // call api Get_PrintQueuesOfUserExt
            }
        }        
        System.out.println(ResponseCode + " " + ApiCall);                                                      // output api call result
        if (ResponseCode != 200)                                                                               // in case of invalid bearer token quit program
            System.exit(0);
        

        for (lauf1 = 0; lauf1 &amp;lt; NumberOfQueues[0]; lauf1++) {                                                  // output of all print queues
            System.out.println("    Queue:" + ListOfQueues[lauf1]); 
        }
        
        if ( System_Details[0].SystemType.equals("SAP BTP") ) 
            Get_IcmCache_old = "SCP 1704067200000";                                                            // on BTP: seconds since 1.1.1970 on 1.1.2024
        else 
            Get_IcmCache_old = "19000101000000.0000000";                                                       // on SAP S/4 HANA (any type) initial date+time

        new_request = false;                                                                                   // set flag for new print queue items to false
        Get_IcmCache_new = Get_IcmCache_old;                                                                   // set flag for new print queue items to false
        timer_cur = java.time.Instant.now().getEpochSecond();                                                  // get current time stamp
        timer_new = timer_cur;                                                                                 // make sure that next ICM cache polling take place immediately 
        
        while (true) {                                                                                         // loop forever
        
            timer_cur = java.time.Instant.now().getEpochSecond();                                              // read current time-stamp
            if (timer_cur &amp;gt;= timer_new) {                                                                      // check if next ICM cache polling reached
                timer_new = timer_cur + System_Details[0].Interval;                                            // set time for next ICM cache polling 
                ApiCall      = "ICMCache";                                                                     // prepare api call
                ResponseCode = Get_IcmCache(ICMCache, Credentials, System_Details[0]);                         // call api Get_IcmCache
                Get_IcmCache_new = ICMCache.toString();                                                        // convert ICM cahce status to string
                System.out.println( ResponseCode + " " + ApiCall + ": \"" + Get_IcmCache_new + "\"" );         // output api call result 
                if ( Get_IcmCache_new.equals(Get_IcmCache_old) == false ) {                                    // compare old and new ICM cache status 
                    Get_IcmCache_old = Get_IcmCache_new;                                                       // in case of ICM cache status set flag for new print queue items
                    new_request = true;                                                                         
                }
            }
            else {
                System.out.print("\r" + (timer_new - timer_cur) + "  \r");                                     // output countdown until next ICM cache status polling
                TimeUnit.SECONDS.sleep(1);                                                                     // wait for 1 second 
            } 
                        
            if (new_request == true) {                                                                                                                     // incase of new print queue items
                new_request = false;                                                                                                                       // delete flag for new print queue items
                System.out.println("    ICM cache changed -&amp;gt; new request(s)");                                                                             // output ICM cache change
                for (lauf1 = 0; lauf1 &amp;lt; NumberOfQueues[0]; lauf1++) {                                                                                      // loop on print queues
                    ApiCall      = "NoOfQItems_Queue  ";                                                                                                   // prepare api call
                    ResponseCode = Get_NumberOfQItemsExt(NoOfQItems_Queue, ListOfQueues[lauf1], Credentials, System_Details[0]);                           // call api Get_NumberOfQItemsExt
                    NoOfQItems_Queues[lauf1] = NoOfQItems_Queue[0];                                                                                        // copy number of print queue items in print queue
                    if ( NoOfQItems_Queues[lauf1] &amp;gt; 100 ) {
                        NoOfQItems_Queues[lauf1] = 100;                                                                                                    // if number of print queue items in print queue larger then 100 reduce to 100
                        new_request = true;                                                                                                                // do next queue item query on next loop
                    }
                    System.out.println(ResponseCode + " " + ApiCall + " for Queue: " + String.format("%-20s",ListOfQueues[lauf1]) + " : " + String.format("%3s",NoOfQItems_Queues[lauf1])); // output number of print queue items in print queue
                    if ( NoOfQItems_Queues[lauf1] &amp;gt; 0 ) {                                                                                                  // check of there are queue items in print queue
                        ApiCall      = "Get_Next_QItemsExt";                                                                                               // prepare api call
                        ResponseCode = Get_Next_QItemsExt(QItemList, NoOfQItems_Queues[lauf1], ListOfQueues[lauf1], Credentials, System_Details[0]);  // call api Get_Next_QItemsExt
                        System.out.println(ResponseCode + " " + ApiCall + " for Queue: " + String.format("%-20s",ListOfQueues[lauf1]) + " : " + String.format("%3s",NoOfQItems_Queues[lauf1])); // output api call result 
                        for (lauf2 = 0; lauf2 &amp;lt; NoOfQItems_Queues[lauf1]; lauf2++) {                                                                       // output queue items details
                            System.out.println("    QItemId:   " + QItemList[lauf2].QItemId);                                                              // queue item ID
                            System.out.println("    QItemFile: " + QItemList[lauf2].QItemFile);                                                            // queue item file name
                            System.out.println("    QItemSize: " + QItemList[lauf2].QItemSize );                                                           // queue item blob
                            System.out.println("    QItemBlob: " + QItemList[lauf2].QItemBlob );                                                           // queue item file size
                            System.out.println("");            
                        }
                                                
                        if (true) {                                                                                                                        // Either set transfer success "true" or set transfer failed "false"
                            ApiCall      = "PrintItemStatusSet";                                                                                           // prepare api call
                            ResponseCode = PrintItemStatusSet(QItemList, NoOfQItems_Queues[lauf1], ListOfQueues[lauf1], Credentials, System_Details[0]);   // call api PrintItemStatusSet
                            System.out.println(ResponseCode + " " + ApiCall + " for Queue: " + ListOfQueues[lauf1]);                                       // output result of api call
                        }
                        else {
                            ApiCall      = "Set_QItems_LastErrorExt";                                                                                      // prepare api call
                            ResponseCode = Set_QItems_LastErrorExt(NoOfQItems_Queues[lauf1], ListOfQueues[lauf1], Credentials, System_Details[0]);         // call api Set_QItems_LastErrorExt
                            System.out.println(ResponseCode + " " + ApiCall + ": " + ListOfQueues[lauf1] + "for " + NoOfQItems_Queues[lauf1] + " items");  // output result of api call
                        }
                    } // if ( NoOfQItems_Queues
                } // for (lauf1
            } // if (new_request
        } // while (true
    } // main
} // class SAP_COM_0466_example&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Regards&lt;BR /&gt;Martin&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/example-code-for-sap-com-0466-print-queue-item-read-a2x/ba-p/14164526"/>
    <published>2025-08-07T10:38:20.958000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/convert-sap-btp-certificate-service-keys-to-pfx-files/ba-p/14175048</id>
    <title>Convert SAP BTP Certificate Service Keys to PFX Files</title>
    <updated>2025-08-07T23:59:45.894000+02:00</updated>
    <author>
      <name>Felix_Wyskocil</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/142195</uri>
    </author>
    <content>&lt;P&gt;SAP BTP&amp;nbsp;(Business Technology Platform) allows you to create &lt;STRONG&gt;service keys&lt;/STRONG&gt; of type &lt;STRONG&gt;certificate&lt;/STRONG&gt;. These certificates can be exported from BTP and imported into other systems as client certificates to securely call SAP BTP services using certificate-based authentication.&lt;/P&gt;&lt;P&gt;However, the BTP cockpit provides the certificate chain and the private key only in text form. While some systems may accept this format, others&amp;nbsp;require the upload of a certificate file containing all these details in one piece. (In addition, since it carries the certificate's private key, this file should usually be encrypted.)&lt;/P&gt;&lt;P&gt;I recently set up the integration between SAP Sales/Service Cloud Version 2 and SAP Integration Suite/Cloud Integration, in which I had to convert the textual details from the service key into an encrypted PFX file.&lt;/P&gt;&lt;P&gt;While such tasks are often carried out with command-line tools, such as OpenSSL, where you need to remember all the correct commands, I was looking for an easy GUI-based approach. In this blog I want to explain how to create the PFX certificate with the free, multi-platform GUI tool &lt;A href="https://keystore-explorer.org/index.html" target="_self" rel="nofollow noopener noreferrer"&gt;KeyStore Explorer&lt;/A&gt;, which is very helpful for this task.&lt;/P&gt;&lt;P&gt;The process consists of three simple tasks:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create text files for the certificate chain and the key&lt;/LI&gt;&lt;LI&gt;Import these files into KeyStore Explorer&lt;/LI&gt;&lt;LI&gt;Save them as PFX file&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1736969032"&gt;&lt;STRONG&gt;1. Create Text Files&lt;/STRONG&gt;&lt;/H2&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Open the service key details in SAP BTP and switch to &lt;STRONG&gt;Form&lt;/STRONG&gt; view.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="00 BTP ServiceKey2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298116i42C03467ECE4CC37/image-size/large?v=v2&amp;amp;px=999" role="button" title="00 BTP ServiceKey2.png" alt="00 BTP ServiceKey2.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Certificate Chain:&lt;BR /&gt;&lt;/STRONG&gt;Copy the text from the &lt;STRONG&gt;certificate&lt;/STRONG&gt; field into an empty text file and insert line breaks so that&amp;nbsp;&lt;FONT face="courier new,courier"&gt;-----BEGIN CERTIFICATE-----&lt;/FONT&gt;,&amp;nbsp;&lt;FONT face="courier new,courier"&gt;-----END CERTIFICATE-----&lt;/FONT&gt;&amp;nbsp;and the actual certificate content (which is &lt;FONT face="courier new,courier"&gt;Base64&lt;/FONT&gt; encoded) have separate lines. Save the file, for instance, as &lt;EM&gt;cert_chain.pem&lt;/EM&gt;&lt;BR /&gt;&lt;STRONG&gt;Please note&lt;/STRONG&gt; that the content from the certificate field contains the whole certificate chain consisting of three certificates.&lt;BR /&gt;The should look like this:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="01 Certchain Textfile.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298117i97F311622D0937C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="01 Certchain Textfile.png" alt="01 Certchain Textfile.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Private Key:&lt;BR /&gt;&lt;/STRONG&gt;Copy the text from the &lt;STRONG&gt;key&amp;nbsp;&lt;/STRONG&gt;field into an empty text file and insert line breaks so that&amp;nbsp;&lt;FONT face="courier new,courier"&gt;-----BEGIN RSA PRIVATE KEY-----&lt;/FONT&gt;,&amp;nbsp;&lt;FONT face="courier new,courier"&gt;-----END RSA PRIVATE KEY-----&lt;/FONT&gt;&amp;nbsp;and the actual key content (which is &lt;FONT face="courier new,courier"&gt;Base64&lt;/FONT&gt; encoded) have separate lines. Save the file, for instance, as &lt;EM&gt;key.pem&lt;BR /&gt;&lt;/EM&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="01 Key Textfile.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298118i4AA3C5E20816A467/image-size/medium?v=v2&amp;amp;px=400" role="button" title="01 Key Textfile.png" alt="01 Key Textfile.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;That's it for the preparation step.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1540455527"&gt;2. Import Text Files&lt;/H2&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Open KeyStore Explorer and create a new keystore with the type&amp;nbsp;&lt;STRONG&gt;PKCS#12&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="01 KSE Create.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298119i93B0201DEFDB6901/image-size/large?v=v2&amp;amp;px=999" role="button" title="01 KSE Create.png" alt="01 KSE Create.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Select the &lt;EM&gt;Import Key Pair&lt;/EM&gt; button in the toolbar and choose &lt;STRONG&gt;OpenSSL&lt;/STRONG&gt; as import type. &lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="02 KSE Import.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298120i0F6503AC92441FCD/image-size/large?v=v2&amp;amp;px=999" role="button" title="02 KSE Import.png" alt="02 KSE Import.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;In the import dialog, uncheck the &lt;EM&gt;Encrypted Private Key&lt;/EM&gt; checkbox and provide the previously created files for the private key and the certificate file.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="03 KSE Import Files.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298121iF0C26E2AB8A4A9C2/image-size/large?v=v2&amp;amp;px=999" role="button" title="03 KSE Import Files.png" alt="03 KSE Import Files.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;You will be prompted for an alias for the keystore. You can simply accept the suggested one. &lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="04 KSE Import 3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298122i60BF511D87738755/image-size/large?v=v2&amp;amp;px=999" role="button" title="04 KSE Import 3.png" alt="04 KSE Import 3.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Another dialog will appear that asks you to enter a &lt;EM&gt;New Key Pair Entry Password&lt;/EM&gt;.&lt;BR /&gt;Enter a strong password.&lt;BR /&gt;My suggestion: Generate a password with a password manager to store it securely, and Copy&amp;amp;Paste it.&lt;BR /&gt;We'll need this password again when saving the PFX file and later when importing it into the target system/tool.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="05 KSE Import 4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298123i9AE708E55FE76055/image-size/large?v=v2&amp;amp;px=999" role="button" title="05 KSE Import 4.png" alt="05 KSE Import 4.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;With that, we have all the necessary details in the keystore and can view all the details of the imported files:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="06 KSE Certchain Details.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298131i5BFD13212B85861F/image-size/large?v=v2&amp;amp;px=999" role="button" title="06 KSE Certchain Details.png" alt="06 KSE Certchain Details.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1343942022"&gt;3. Save PFX File&lt;/H2&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;With the full certificate chain and the private key imported into the key store, we can now save the keystore as PFX file.&lt;BR /&gt;In this step, we have to enter a password again to protect the file (since it contains the secret private key).&lt;BR /&gt;Use the same password as during the import. This password will also be needed when uploading the PFX file into a system/tool of your preference.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="07 KSE Save PFX.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298128iAEF3B3B00F8FF07C/image-size/large?v=v2&amp;amp;px=999" role="button" title="07 KSE Save PFX.png" alt="07 KSE Save PFX.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;In the last step, enter a filename for the PFX file, for instance &lt;EM&gt;&lt;EM&gt;client_cert_enc.pfx&lt;BR /&gt;&lt;/EM&gt;&lt;/EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="08 KSE Save Filename.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298129iC203732B80A217AC/image-size/large?v=v2&amp;amp;px=999" role="button" title="08 KSE Save Filename.png" alt="08 KSE Save Filename.png" /&gt;&lt;/span&gt; &lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;That's it! Now you can import the PFX file into the system/tool where you need it. For instance into the Communication System of an SAP Sales/Service Cloud Version 2 system:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="09 SSCv2 Import PFX.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298130i7BD4B1C6D28399F8/image-size/large?v=v2&amp;amp;px=999" role="button" title="09 SSCv2 Import PFX.png" alt="09 SSCv2 Import PFX.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I hope this blog is helpful!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/convert-sap-btp-certificate-service-keys-to-pfx-files/ba-p/14175048"/>
    <published>2025-08-07T23:59:45.894000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/extend-a-custom-business-object-created-with-key-user-extensibility-using/ba-p/14174598</id>
    <title>Extend a Custom Business Object created with Key User Extensibility using SAP Build Apps</title>
    <updated>2025-08-08T07:51:17.134000+02:00</updated>
    <author>
      <name>ShivaniShankar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1510886</uri>
    </author>
    <content>&lt;P&gt;This blog post covers how to setup an extension scenario from SAP S/4HANA Cloud and build Side-by-Side UI Extensions with the help of SAP Build Apps in the Business Technology Platform.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Business scenario:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;A Manager wants to define business objects “Bonus Plan” for employees. A Bonus Plan is there to save employee specific rules for bonus entitlement.&lt;/P&gt;&lt;P&gt;Here, with Key User Extensibility, we create a custom Business Object with a data structure, logic for data&amp;nbsp;initialization in SAP S/4HANA Cloud, Public Edition which should have standard API operations (GET, POST, DELETE). Expose the custom business object&amp;nbsp;as web service for side-by-side UI extension using Low-code No-code capabilities of SAP Build Apps. You will learn how quickly a new UI application can be developed with the no-code capabilities of SAP Build Apps. You will also find out what is the process to setup, develop and deploy a productive extension application.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note: &lt;/STRONG&gt;The maintain Bonus app shown in this blog is for educational purpose only and not meant for productive usage. It is not ensured that the data used in this extension scenario is managed in accordance with applicable legal requirements for all countries and industries and in accordance with the business needs, such as data life cycle requirements. &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Subscription to SAP Build Apps on SAP BTP Sub-Account&lt;/LI&gt;&lt;LI&gt;Your user needs (a) business role(s) with business catalogs &lt;STRONG&gt;Extensibility - Custom Business Objects&lt;/STRONG&gt; (ID: SAP_CORE_BC_EXT_CBO), &lt;STRONG&gt;Extensibility - Custom Communication Scenarios&lt;/STRONG&gt; (ID: SAP_CORE_BC_EXT_CCS) and &lt;STRONG&gt;Communication Management&lt;/STRONG&gt; (ID: SAP_CORE_BC_COM) (Need to have unrestricted access if you are creating a business role and adding these catalogs).&lt;/LI&gt;&lt;LI&gt;You have &lt;A href="https://developers.sap.com/group.abap-extensibiliy-cbo-cce-ccl.html" target="_blank" rel="noopener noreferrer"&gt;Created Custom Business Objects in SAP S/4HANA Cloud&lt;/A&gt;&amp;nbsp;as per the given tutorial.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Why SAP Build Apps with SAP S/4HANA Cloud?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Create new solutions using the secure, no-code SAP Build Apps with SAP S/4HANA. Build visually and empower users to digitalise their daily work without impacting core processes. Create a personalised, accessible application that securely connects to data from SAP S/4HANA Cloud.&lt;/P&gt;&lt;P&gt;To extend SAP S/4HANA Cloud using SAP Build Apps, you can&amp;nbsp;leverage side-by-side extensibility, which allows you to build extensions that run on SAP BTP and interact with your S/4HANA Cloud system.&amp;nbsp;This approach enables you to create custom UIs, logic, and integrations without directly modifying the core S/4HANA Cloud system.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_9-1754553693970.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297772i0D15D1C28871EFDF/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_9-1754553693970.png" alt="ShivaniShankar_9-1754553693970.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1607861482"&gt;SAP S/4HANA Cloud&lt;/H1&gt;&lt;P&gt;Let’s start on the SAP S/4HANA Cloud side with the definition of the Custom Business Object and the communication settings.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1540430696"&gt;Custom Business Object&lt;/H2&gt;&lt;P&gt;In the&amp;nbsp;&lt;A href="https://developers.sap.com/group.abap-extensibiliy-cbo-cce-ccl.html" target="_blank" rel="noopener noreferrer"&gt;Create Custom Business Objects in SAP S/4HANA Cloud&lt;/A&gt;&amp;nbsp;tutorial group it is shown how to create a custom business object and generate a UI (user interface) in SAP S/4HANA Cloud Public Edition.&lt;/P&gt;&lt;H2 id="toc-hId-1343917191"&gt;Expose Custom Business Object as External API&lt;/H2&gt;&lt;P&gt;To integrate custom business object from SAP S/4HANA system with External Systems or Services like&amp;nbsp;SAP Build Apps,&amp;nbsp;as administrator you need to create a&amp;nbsp;Communication Arrangement. You create a communication arrangement to enable the communication between your system and SAP Build App in BTP, and how they communicate. Communication Arrangement is formed by combining the below artifacts:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Creating a Custom Communication Scenario&lt;BR /&gt;&lt;/STRONG&gt;The setup of the communication (inbound and outbound) between SAP S/4HANA and SAP BTP starts with the definition of a Custom Communication Scenario.&lt;BR /&gt;The Custom Communication Scenario contains the information for both inbound and outbound HTTP-calls.&lt;UL&gt;&lt;LI&gt;Open the app Custom Communication Scenarios in the Launchpad of the SAP S/4 HANA system and create a new Custom Communication Scenario with the name YY1_BONUSPLAN.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_10-1754553693977.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297770iC7E1D88A6CE7471D/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_10-1754553693977.png" alt="ShivaniShankar_10-1754553693977.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;On the tab Inbound Services, you create an entry for your Custom Business Object: Press Add button to add inbound service “YY1_BONUSPLAN_CDS” and click select button.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_11-1754553693995.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297771i82F0B5227F8DC366/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_11-1754553693995.png" alt="ShivaniShankar_11-1754553693995.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Press Save and Publish to finish the custom communication scenario creation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Creating a Communication System and User&lt;BR /&gt;&lt;/STRONG&gt;&lt;P&gt;To enable secure communication between different systems you have to register these systems and define the user which is authorized to use the connection.&lt;/P&gt;&lt;P&gt;The communication system represents the communication partner within a communication. for inbound communication, this is the external system that calls our custom Bonus plan service.&lt;/P&gt;&lt;P&gt;We’ll create one Communication System for all systems that want to use our service as well as the user that they’ll have to use. If you want to access the custom BONUSPLAN OData service (Inbound) you also need to setup an authentication method. You can use several methods like e.g.., Basic Authentication, Certificate or OAuth.&lt;/P&gt;&lt;P&gt;In this case we are choosing Basic Authentication for which you need to setup a Communication User. Open the app Maintain Communication Users from the Communication Management group and create there a new user with username, description, and password.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Open “Communication Systems” Application.&lt;/LI&gt;&lt;LI&gt;Start creating a new system by executing the “New” action.&lt;/LI&gt;&lt;LI&gt;Give following data to the new custom communication System…&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Note: you can replace XXX with your system ID.&lt;/P&gt;&lt;TABLE width="594"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="151"&gt;&lt;P&gt;Field Label&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Field Value&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="151"&gt;&lt;P&gt;System ID&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;EXTERNAL_SYSTEMXXX&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="151"&gt;&lt;P&gt;System Name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;EXTERNAL_SYSTEMXXX&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="151"&gt;&lt;P&gt;Host Name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;EXTERNAL_SYSTEMXXX&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;UL&gt;&lt;LI&gt;Scroll down to “User for Inbound Communication” and start adding one by executing the “Add” action.&lt;/LI&gt;&lt;LI&gt;In the Pop Up, use the value help to browse and select the user.&lt;/LI&gt;&lt;/UL&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_0-1754563651591.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297893i3074475486D21581/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_0-1754563651591.png" alt="ShivaniShankar_0-1754563651591.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Choose the user you already created and then click OK. Your user for Inbound Communication is set up. Click on&amp;nbsp;&lt;STRONG&gt;Save.&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;Creating a Communication Arrangement for Custom Communication Scenario&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Finally, a communication arrangement links the solution’s scenario with the Communication system and its user and exposes the Service to be used.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Open “Communication Arrangements” Application&lt;/LI&gt;&lt;LI&gt;Start creation by executing the “New” action.&lt;/LI&gt;&lt;LI&gt;A pop up opens in that you use the value help for Scenario first where you can select previously created Custom Communication Scenario&amp;nbsp;YY1_BONUSPLAN. This will set the Scenario and default the Arrangement Name, so that you can continue the creation via “Create” button.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_13-1754553694005.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297773i934E20147793AC92/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_13-1754553694005.png" alt="ShivaniShankar_13-1754553694005.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the opening Arrangement details click to browse the Communication System&lt;/LI&gt;&lt;LI&gt;Choose the&amp;nbsp;&lt;STRONG&gt;EXTERNAL_SYSTEMXXX&lt;/STRONG&gt;&amp;nbsp;you created before.&lt;/LI&gt;&lt;LI&gt;Choosing the system will automatically set the related User as well. Click&amp;nbsp;&lt;STRONG&gt;Save&lt;/STRONG&gt;&amp;nbsp;to finish creation&lt;/LI&gt;&lt;LI&gt;Copy the&amp;nbsp;&lt;STRONG&gt;Service URL&lt;/STRONG&gt;&amp;nbsp;for the next step. Here you save the inbound service URL for the destination configuration in BTP.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_14-1754553694017.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297775iA59677C4CF0D0BEA/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_14-1754553694017.png" alt="ShivaniShankar_14-1754553694017.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1018320967"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-821807462"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-625293957"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-428780452"&gt;&lt;BR /&gt;Build Side-by-Side UI Extensibility with SAP Build Apps&lt;/H1&gt;&lt;P&gt;SAP Build Apps enables developers to implement loosely coupled extension applications securely on top of the existing SAP solution they already have.&amp;nbsp;SAP Build Apps provides drag-and-drop capabilities for Citizen developers to build enterprise-grade applications confidently, authenticate and access SAP Business Technology Platform destinations. You can preview your SAP Build Apps project as &lt;STRONG&gt;web preview&lt;/STRONG&gt; and can build it to deploy on SAP Build Work Zone or Android/IOS.&lt;/P&gt;&lt;P&gt;Here you will learn how to use SAP Build Apps, create an app that performs all the CRU (Create, Read, Update) operations for the SAP S/4HANA Cloud BONUSPLAN API for managing the Bonus Plan for the employee.&lt;/P&gt;&lt;P&gt;The point of this tutorial is to show you how you would perform all the CRU (Create, Read, Update) operations, and how you would handle some of the complexities of the SAP backend APIs (e.g. strict requirements for the data and handle multiple determination) for the Bonus plan scenario.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_15-1754553694042.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297777iC3D93BC32CA5293F/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_15-1754553694042.png" alt="ShivaniShankar_15-1754553694042.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You will create an app with 2 pages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Page 1: Display all Bonus plans&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Page 2: Manage Bonus Plan, which handles Create or Update the bonus plan for employees.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-361349666"&gt;Create destination to SAP S/4HANA Cloud system.&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/H2&gt;&lt;P&gt;In the SAP BTP cockpit, as administrator you need to create a destination to enable the communication to the S/4HANA Cloud system. In addition, the destination must be enabled for use in SAP Build Apps.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Procedure:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the SAP BTP cockpit, navigate to your subaccount.&lt;/P&gt;&lt;P&gt;Choose Connectivity &amp;gt; Destination &amp;gt; Create Destination.&lt;/P&gt;&lt;P&gt;Choose Blank Template and enter the following data and click on Save.&lt;/P&gt;&lt;TABLE width="541"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;&lt;STRONG&gt;Field&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;&lt;STRONG&gt;Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Name&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Enter the destination name.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Select&amp;nbsp;HTTP.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Description&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Enter a description (SAP Build Apps to ABAP Callback Destination)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;URL&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Enter the Service URL saved during Communication Arrangement creation. If not saved access the communication arrangement&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Proxy Type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Internet&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Authentication&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Select&amp;nbsp;BasicAuthentication.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;User&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;(Inbound) communication user used in the communication arrangement&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Password&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Set the password to the secret. Password of the (inbound) communication user used in the communication arrangement.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="98"&gt;&lt;P&gt;Additional Properties&lt;/P&gt;&lt;/TD&gt;&lt;TD width="443"&gt;&lt;P&gt;Add the following properties:&lt;/P&gt;&lt;P&gt;“BuildApps.RequiresCsrf” → true&lt;/P&gt;&lt;P&gt;“AppgyverEnabled” → true&lt;/P&gt;&lt;P&gt;“HTML5.DynamicDestination ” → true&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Save your entries.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_16-1754553694055.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297776i48680A28E591E576/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_16-1754553694055.png" alt="ShivaniShankar_16-1754553694055.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-164836161"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--31677344"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-119063508"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--77449997"&gt;&lt;BR /&gt;Open SAP Build Apps&lt;/H2&gt;&lt;P&gt;Open SAP Build Apps, by going to the SAP BTP cockpit, and under&amp;nbsp;&lt;STRONG&gt;Instances and Subscriptions&lt;/STRONG&gt;, click&amp;nbsp;&lt;STRONG&gt;SAP Build Apps&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_17-1754553694080.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297778i69903039AA385DF0/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_17-1754553694080.png" alt="ShivaniShankar_17-1754553694080.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In the lobby of your SAP Build Apps, click&amp;nbsp;&lt;STRONG&gt;Create&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_18-1754553694092.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297780iC860546CB9586758/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_18-1754553694092.png" alt="ShivaniShankar_18-1754553694092.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Select&lt;STRONG&gt;&amp;nbsp;Application&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_19-1754553694113.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297779i15653EE6AE9D6A5D/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_19-1754553694113.png" alt="ShivaniShankar_19-1754553694113.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Select&amp;nbsp;&lt;STRONG&gt;Frontend and &lt;/STRONG&gt;followed by this Select &lt;STRONG&gt;Web &amp;amp; Mobile Application and &lt;/STRONG&gt;press&lt;STRONG&gt; Next &lt;/STRONG&gt;button. Please note that the user needs to have access to the Custom Identity Provider to be able to create a Web &amp;amp; Mobile Application.&lt;/P&gt;&lt;P&gt;For the project name, enter&amp;nbsp;Bonus plan Management and description as “Extend a key user extension from S/4HANA Cloud public edition “then click&amp;nbsp;&lt;STRONG&gt;Create&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_20-1754553694127.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297781i00B0D7987942918B/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_20-1754553694127.png" alt="ShivaniShankar_20-1754553694127.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--273963502"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--470477007"&gt;Connect to the REST API from the Custom Business Object on S/4HANA Cloud Public Edition&lt;/H2&gt;&lt;P&gt;In this step, you will make a connection to the BONUSPLAN API of your SAP S/4HANA Cloud system. You will enable entities:&amp;nbsp;&lt;STRONG&gt;BONUSPLAN&lt;/STRONG&gt;&amp;nbsp;(the header for a BONUSPLAN)&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to the&amp;nbsp;&lt;STRONG&gt;Integrations&lt;/STRONG&gt;&amp;nbsp;tab.&lt;/LI&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;Add Integration&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;BTP Destinations&lt;/STRONG&gt;, and then select the destination to your SAP S/4HANA Cloud BONUSPLAN API which you have created in “Create destination to SAP S/4HANA Cloud system” section.&lt;/LI&gt;&lt;LI&gt;Select Click&amp;nbsp;&lt;STRONG&gt;Install Integration&lt;/STRONG&gt;&amp;nbsp;(upper right).&lt;/LI&gt;&lt;LI&gt;Under&amp;nbsp;&lt;STRONG&gt;Data Entities&lt;/STRONG&gt;, scroll down so you can see both&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;YY1_BONUSPLAN&lt;/EM&gt; &lt;/STRONG&gt;and&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;I_Currency&lt;/EM&gt;&lt;/STRONG&gt;. For each, select it and click&amp;nbsp;&lt;STRONG&gt;Enable Data Entity&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_21-1754553694150.png" style="width: 0px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297785i1C6159B84C55A462/image-size/small?v=v2&amp;amp;px=200" width="0" height="0" role="button" title="ShivaniShankar_21-1754553694150.png" alt="ShivaniShankar_21-1754553694150.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_0-1754565162913.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297903i651CB89C8DAECE17/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_0-1754565162913.png" alt="ShivaniShankar_0-1754565162913.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;You can now select an entity and click&amp;nbsp;&lt;STRONG&gt;Browse Real Data&lt;/STRONG&gt;&amp;nbsp;to see live data from SAP S/4HANA Cloud.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_33-1754554445109.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297806iB21CCE01ACFE7316/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_33-1754554445109.png" alt="ShivaniShankar_33-1754554445109.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;Save&lt;/STRONG&gt;&amp;nbsp;(upper right).&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId--666990512"&gt;Create page for displaying BONUSPLANs (Homepage)&lt;/H2&gt;&lt;P&gt;Now you will create the home page that displays a list of Bonus Plans, for which the user can update the existing Bonus Plan and can create a new Bonus Plan.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;You will already have a&amp;nbsp;&lt;STRONG&gt;Home Page&lt;/STRONG&gt;. Click on it.&lt;/LI&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;Variables → Data Variables&lt;/STRONG&gt; and create a data variable based on&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;YY1_BONUSPLAN&lt;/EM&gt;&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_23-1754553694178.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297784i3A74F2FADB43BB3E/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_23-1754553694178.png" alt="ShivaniShankar_23-1754553694178.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click&amp;nbsp;the User Interface tab to return to the UI canvas.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Add a Title field and a Text field. Set the content for the text component as “Bonus plan details” and add a button with value “Create” value and list item component.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_24-1754553694211.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297786i9B1A2B947DEA8A7C/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_24-1754553694211.png" alt="ShivaniShankar_24-1754553694211.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_25-1754553694245.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297787i8272DA8ECC6D09D9/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_25-1754553694245.png" alt="ShivaniShankar_25-1754553694245.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Add a List Item component&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_26-1754553694289.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297788iC971733CBF608E51/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_26-1754553694289.png" alt="ShivaniShankar_26-1754553694289.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click the list item, and configure its properties as follows:&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Property&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Repeat with&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;data variable&amp;nbsp;&lt;EM&gt;YY1_BONUSPLAN1&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Primary label&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;data item in repeat&amp;nbsp;&lt;STRONG&gt;current.EmployeeName&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Secondary label&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;data item in repeat&amp;nbsp;&lt;STRONG&gt;current.EmployeeID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now you can test the application which should display the Bonus list by saving your changes and clicking on &lt;STRONG&gt;Preview&lt;/STRONG&gt; to preview the application.&lt;/P&gt;&lt;P&gt;Hopefully you got this far and found success!&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;Congratulations!!!&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You will define the logic for the list item selection later once we finish next step (&lt;STRONG&gt;Create page for Manage Bonus Plan)&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;With the list item selected, open the logic canvas.&lt;/LI&gt;&lt;LI&gt;Add an&amp;nbsp;&lt;STRONG&gt;Open page&lt;/STRONG&gt;&amp;nbsp;flow function, and configure it as follows:&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Property&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Page&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Manage Bonus Plan&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Parameters → &lt;STRONG&gt;SAP_UUID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;data item in repeat&amp;nbsp;&lt;STRONG&gt;current.SAP_UUID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Parameters → &lt;STRONG&gt;EmployeeName&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;data item in repeat&amp;nbsp;&lt;STRONG&gt;current.&lt;/STRONG&gt; &lt;STRONG&gt;EmployeeName&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_27-1754553694308.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297790i9636D916866B8EE1/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_27-1754553694308.png" alt="ShivaniShankar_27-1754553694308.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;You will define the logic for the Button later once we finish next step (&lt;STRONG&gt;Create page for &lt;/STRONG&gt;&lt;STRONG&gt;Manage Bonus Plan)&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Drag and drop an&amp;nbsp;&lt;STRONG&gt;Open page&lt;/STRONG&gt;&amp;nbsp;flow function, and configure it as follows: Make sure that don’t bind any value to the page parameter of Manage Bonus Plan and Page value as “Manage Bonus Plan”.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_28-1754553694331.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297791iF0693EA0A045744E/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_28-1754553694331.png" alt="ShivaniShankar_28-1754553694331.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--863504017"&gt;&lt;BR /&gt;Create page for Manage Bonus Plan&lt;/H2&gt;&lt;P&gt;You will create a page for Manage Bonus Plan.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;Add New Page&lt;/STRONG&gt;, enter&amp;nbsp;Manage Bonus Plan, and click&amp;nbsp;&lt;STRONG&gt;OK&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Navigate to page Manage Bonus Plan&lt;/LI&gt;&lt;LI&gt;Click PAGE PARAMETERS and two parameter such as &lt;STRONG&gt;EmployeeName&lt;/STRONG&gt; of type Text and &lt;STRONG&gt;SAP_UUID&lt;/STRONG&gt; of type UUID.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_29-1754553694348.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297789iF0EC5AC05C7EF918/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_29-1754553694348.png" alt="ShivaniShankar_29-1754553694348.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;Data Variables&lt;/STRONG&gt; and create a variable for&amp;nbsp;&lt;STRONG&gt;&lt;EM&gt;YY1_BONUSPLAN &lt;/EM&gt;&lt;/STRONG&gt;and Data Variable Type as “Single data record” and bind &lt;STRONG&gt;SAP_UUID &lt;/STRONG&gt;value to the page parameter SAP_UUID.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_30-1754553694368.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297794i38DB26709EEBC941/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_30-1754553694368.png" alt="ShivaniShankar_30-1754553694368.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click&amp;nbsp;&lt;STRONG&gt;View&lt;/STRONG&gt;&amp;nbsp;to return to the UI canvas and remove all the default components.&lt;/LI&gt;&lt;LI&gt;Add the following components in this order:&lt;UL&gt;&lt;LI&gt;Title1&lt;/LI&gt;&lt;LI&gt;Text1&lt;/LI&gt;&lt;LI&gt;Title2&lt;/LI&gt;&lt;LI&gt;Container 1, and inside the container add&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Input Field&lt;/LI&gt;&lt;LI&gt;CheckBox Field&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Date field with input1(Date field can be installed from the marketplace if its not available by default)&lt;/LI&gt;&lt;LI&gt;Date field with input2&lt;/LI&gt;&lt;LI&gt;Container 2, and inside the container add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Input Field1&lt;/LI&gt;&lt;LI&gt;Input Field2&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Container 3, and inside the container add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Input Field1&lt;/LI&gt;&lt;LI&gt;Input Field2&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Container 4, and inside the container add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Input Field1&lt;/LI&gt;&lt;LI&gt;Input Field2&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Container 5, and inside the container add&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Input Field1&lt;/LI&gt;&lt;LI&gt;Dropdown Field2&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Button&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Configure the following components:&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE width="500"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;STRONG&gt;Component&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;STRONG&gt;Property&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;STRONG&gt;Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Title1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Content&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Bonus plan&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Text1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Content with formula&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;"Bonus plan for " +&amp;nbsp; IF(NOT(IS_NULLY(params.EmployeeName)), params.EmployeeName, "")&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Title2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Content&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;General Information&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Container 1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Layout&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Horizontal&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.ID&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;ID&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· CheckBox&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.IsConsistent&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Is Consistent&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Date field with input1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Validity Start Date&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Placeholder Text with Formula&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;FORMAT_DATETIME_LOCAL(DATETIME(NUMBER(SUBSTRING(data.YY1_BONUSPLAN1.ValidityStartDate, 6,19))), "YYYY.MM.DD")&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Date field with input2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Validity End Date&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Placeholder Text with Formula&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;FORMAT_DATETIME_LOCAL(DATETIME(NUMBER(SUBSTRING(data.YY1_BONUSPLAN1.ValidityEndDate, 6,19))), "YYYY.MM.DD")&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Container 2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Layout&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Horizontal&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.LowBonusAssignmentFactor&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Low Bonus Assignment Factor&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.HighBonusAssignmentFactor&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;High Bonus Assignment Factor&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Container 3&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Layout&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Horizontal&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.LowBonusPercentage_V&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Low Bonus Percentage&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.HighBonusPercentage_V&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;High Bonus Percentage&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Container 4&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Layout&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Horizontal&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field 1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.EmployeeID&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Employee ID&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field 2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.EmployeeName&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Employee Name&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Container 5&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Layout&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Horizontal&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Input field 1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable YY1_BONUSPLAN1.TargetAmount_V&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Target Amount&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;· Dropdown field1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Option list&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT size="2"&gt;With formula&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;MAP(data.I_Currency1, {label: item.Currency +"("+ item.Currency_Text+")", value: item.Currency})&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Selected Value&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;With Data Variable&amp;nbsp; YY1_BONUSPLAN1.TargetAmount_C&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Currency&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="102.113px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Button&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="96.95px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Label&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="749.487px"&gt;&lt;P&gt;&lt;FONT size="2"&gt;Save&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Add logic to Add/Update Bonus Plan:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Now we will add the logic to the Save button. To achieve this, click on Save button and open its logic canvas.&lt;/LI&gt;&lt;LI&gt;Add logic flow functions and connect them as in the following:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShivaniShankar_31-1754553694375.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297792iCE7E73DC9FE8F872/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_31-1754553694375.png" alt="ShivaniShankar_31-1754553694375.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Configure the flow functions as follows:&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;IF condition (first):&lt;/STRONG&gt;&amp;nbsp;Set the condition to the following formula (validates the&amp;nbsp;SAP_UUID field):&lt;BR /&gt;&lt;EM&gt;NOT(IS_NULLY(params.SAP_UUID))&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Update record:&lt;/STRONG&gt;&amp;nbsp;Set the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Resource name:&lt;/STRONG&gt;&amp;nbsp;YY1_BONUSPLAN1&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Risk ID:&lt;/STRONG&gt;&amp;nbsp;page parameter SAP_UUID&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Record:&lt;/STRONG&gt;&amp;nbsp;Set the following formula (allows us to make sure the integer fields receive a number value):&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;{ ValidityStartDate: data.YY1_BONUSPLAN1.ValidityStartDate, ValidityEndDate: data.YY1_BONUSPLAN1.ValidityEndDate,LowBonusAssignmentFactor: data.YY1_BONUSPLAN1.LowBonusAssignmentFactor,HighBonusAssignmentFactor:data.YY1_BONUSPLAN1.HighBonusAssignmentFactor,LowBonusPercentage_V: data.YY1_BONUSPLAN1.LowBonusPercentage_V, HighBonusPercentage_V:data.YY1_BONUSPLAN1.HighBonusPercentage_V, EmployeeID: data.YY1_BONUSPLAN1.EmployeeID,&amp;nbsp; EmployeeName: data.YY1_BONUSPLAN1.EmployeeName, TargetAmount_V:data.YY1_BONUSPLAN1.TargetAmount_V, TargetAmount_C:data.YY1_BONUSPLAN1.TargetAmount_C}&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create record:&lt;/STRONG&gt;&amp;nbsp;Set the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Resource name:&lt;/STRONG&gt;&amp;nbsp;YY1_BONUSPLAN1&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Record:&lt;/STRONG&gt;&amp;nbsp;Set the following formula:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;{ SAP_UUID: data.YY1_BONUSPLAN1.SAP_UUID, ValidityStartDate: data.YY1_BONUSPLAN1.ValidityStartDate, ValidityEndDate: data.YY1_BONUSPLAN1.ValidityEndDate,LowBonusAssignmentFactor: data.YY1_BONUSPLAN1.LowBonusAssignmentFactor,HighBonusAssignmentFactor:data.YY1_BONUSPLAN1.HighBonusAssignmentFactor,LowBonusPercentage_V: data.YY1_BONUSPLAN1.LowBonusPercentage_V, HighBonusPercentage_V:data.YY1_BONUSPLAN1.HighBonusPercentage_V, EmployeeID: data.YY1_BONUSPLAN1.EmployeeID,&amp;nbsp; EmployeeName: data.YY1_BONUSPLAN1.EmployeeName, TargetAmount_V:data.YY1_BONUSPLAN1.TargetAmount_V, TargetAmount_C:data.YY1_BONUSPLAN1.TargetAmount_C}&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can set the Toast and Alert flow functions&amp;nbsp;for both Create record and Update record with the appropriate Text message to inform the user about the success or error message during Save.&lt;/P&gt;&lt;P&gt;Now you can now test the application, which is designed to display all available Bonus plans. If you select an existing Bonus Plan, the system will load all relevant field values for the chosen employee, allowing you to update those details. Additionally, you can create a new Bonus Plan by using the Create button and by following the steps mentioned in the section &lt;STRONG&gt;&lt;EM&gt;Test app&lt;/EM&gt;&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thanks, you have completed SAP Build Apps application development by extending a Custom Business Object successfully!&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;STRONG&gt;&lt;EM&gt;Congratulations!!!&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1060017522"&gt;Test app&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Open the Preview Portal using the&amp;nbsp;Preview&amp;nbsp;button located in the top-right corner.&lt;/LI&gt;&lt;LI&gt;Go to the&amp;nbsp;Launch&amp;nbsp;tab, then&amp;nbsp;Open Preview Portal, then&amp;nbsp;Web Preview.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShivaniShankar_32-1754553694380.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297793iFBC3B0BA4731C39A/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShivaniShankar_32-1754553694380.jpeg" alt="ShivaniShankar_32-1754553694380.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click&amp;nbsp;Bonus Plan to open the app. You should see the first page with a list of Bonus Plan in the first page and while navigating to the Manage Bonus Plan page handles Create or Update the bonus plan for employees.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For Deploying an app created with SAP Build Apps to HTML5 applications repository on SAP BTP and Integrate an SAP Build Apps application into SAP Build Work Zone, please do refer to this &lt;A href="https://developers.sap.com/tutorials/build-apps-deply..html" target="_blank" rel="noopener noreferrer"&gt;tutorial&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/extend-a-custom-business-object-created-with-key-user-extensibility-using/ba-p/14174598"/>
    <published>2025-08-08T07:51:17.134000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/this-is-the-way-rethinking-analytics-orchestration-with-rest-in-sap/ba-p/14170882</id>
    <title>This Is the Way: Rethinking Analytics Orchestration with REST in SAP Datasphere</title>
    <updated>2025-08-08T08:40:00.025000+02:00</updated>
    <author>
      <name>christian_willi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/678327</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607745164"&gt;Introduction&lt;/H1&gt;&lt;P&gt;SAP Datasphere Task Chains have recently been enhanced with a new capability: the ability to add a REST API Step, as documented by SAP. This addition significantly expands the integration potential of Task Chains, allowing them to trigger or interact with external systems via REST APIs—something previously not possible within the task chain framework itself.&lt;/P&gt;&lt;P&gt;While SAP Datasphere already offers a Command Line Interface (CLI) for interacting with its environment, I believe that technical automation—especially triggering Task Chains—should be handled via REST endpoints wherever possible. (Yes, I am aware this is already on the roadmap.)&lt;/P&gt;&lt;P&gt;If you have followed the evolution of SAP Analytics Cloud, you have likely noticed how its REST API capabilities have grown considerably. This trend strongly suggests a broader strategic shift within SAP toward more API-driven architectures.&lt;BR /&gt;Beyond the technical implications, this new feature offers a glimpse into how future data and analytics architectures might be designed. The ability to call external REST APIs directly from within a Task Chain is a small yet significant change—it paves the way for loosely coupled, event-driven, and more modular system landscapes.&lt;/P&gt;&lt;P&gt;In this blog post, I will explore the broader implications of this feature—looking at both architectural perspectives and practical use cases—to illustrate how this seemingly simple addition might shape our thinking on modern data platform design going forward. The different implications and perspectives I will try to sketch out in this blog post.&lt;/P&gt;&lt;H1 id="toc-hId-1411231659"&gt;Integration Perspective&lt;/H1&gt;&lt;P&gt;With this new capability, you can invoke a REST service directly within a process step. What could such a REST service do? Here are a few examples:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Microservices and Third-Party Data Sources - Trigger a microservice that extracts data from a third-party system and writes it into SAP Datasphere using the OPEN SQL schema.&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;Advanced Analytics on External Buckets - Initiate a predictive analytics process after data has been pushed to an external storage location (e.g., a Google Cloud Storage bucket), leveraging external computation power or models.&lt;/LI&gt;&lt;LI&gt;Endless Possibilities - from orchestrating workflows to enriching data pipelines with external intelligence.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This simple yet powerful feature drastically lowers the barrier for integrating external systems. Especially in modern, heterogeneous IT landscapes, the ability to seamlessly interact with REST services is crucial. As solutions increasingly span multiple platforms and technologies, having native support for REST APIs within Task Chains enables more modular, scalable, and interoperable architectures.&lt;/P&gt;&lt;H1 id="toc-hId-1214718154"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_2-1754304878655.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295957iC56512F19FC536BB/image-size/large?v=v2&amp;amp;px=999" role="button" title="christian_willi_2-1754304878655.png" alt="christian_willi_2-1754304878655.png" /&gt;&lt;/span&gt;&lt;/H1&gt;&lt;H1 id="toc-hId-1018204649"&gt;SAC Seamless Planning Perspective&lt;/H1&gt;&lt;P&gt;At present, Seamless Planning in SAP provides only a foundational set of features. However, even with these basic capabilities, it is now possible to trigger a Multi Action in SAP Analytics Cloud (SAC)—with some lightweight technical implementation, such as a microservice on SAP BTP to handle user propagation.&lt;/P&gt;&lt;P&gt;What Does This Enable?&lt;/P&gt;&lt;P&gt;It opens the door to scheduling planning-related actions that can be executed automatically—daily, during off-peak hours, or at custom intervals—all orchestrated directly from SAP Datasphere. This marks a significant step toward greater automation and operational efficiency in planning processes.&lt;/P&gt;&lt;P&gt;Looking ahead, the possibility of triggering a Task Chain from within a Multi Action (either via SAP’s upcoming official Task Chain Trigger feature or through a custom-built solution) would close the loop, enabling bi-directional process orchestration between SAC and Datasphere.&lt;/P&gt;&lt;P&gt;A Vision of Integration - Imagine this scenario:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Master data is loaded from an S/4HANA system into Datasphere (where the Master data may be managed in the future) and updated in the planning model.&lt;/LI&gt;&lt;LI&gt;Once this loading process is completed, a Data Action is automatically triggered to generate the necessary planning combinations.&lt;/LI&gt;&lt;LI&gt;Each step is orchestrated across systems—seamlessly integrating Datasphere and SAC.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This evolving capability points to a promising future, where SAP’s tools are moving toward more open, event-driven, and tightly connected architectures. It is a strong signal of the direction SAP is heading—toward building truly integrated, cross-platform planning and data ecosystems.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_3-1754304951043.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295958iF2A9C4185F92B9C1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="christian_willi_3-1754304951043.png" alt="christian_willi_3-1754304951043.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-821691144"&gt;Process Orchestration&lt;/H1&gt;&lt;P&gt;As outlined in the sections above, these new capabilities significantly enhance our ability to orchestrate analytics processes—in ways that were not possible just a few weeks ago. The integration of REST API steps and the evolving connectivity between SAP Datasphere and SAC unlocks a new level of flexibility.&lt;/P&gt;&lt;P&gt;What makes this particularly compelling is the ease with which we can now develop lightweight microservices on SAP BTP to support and extend these interactions. Whether it is handling authentication, user propagation, or orchestrating complex logic between systems, BTP provides a robust platform for embedding custom logic into an increasingly modular and responsive analytics architecture.&lt;/P&gt;&lt;H1 id="toc-hId-625177639"&gt;The On-Premises Thoughts&lt;/H1&gt;&lt;P&gt;I have already referred several times to the concept of a “small microservice on SAP BTP.” This idea becomes especially relevant when you consider that SAP Datasphere is still often used alongside SAP BW, where orchestration tasks are traditionally handled via Process Chains and ABAP reports.&lt;/P&gt;&lt;P&gt;In many discussions—whether with internal teams or external consultants—there remains a strong inclination to implement logic directly within the ABAP stack of on-premise systems. This is understandable. It is what I would call the “home-field advantage”: familiarity, confidence, and reliability in an environment they know well. They’re certain it will work—but the question we must ask is: Will this remain a sustainable approach over the next 5 to 10 years?&lt;/P&gt;&lt;P&gt;The reality is that, SAP’s Business Data Cloud is on the rise, and the centrality of BW in analytics architectures is gradually diminishing. So why not embrace a more future proof approach?&lt;/P&gt;&lt;P&gt;By building a lightweight REST service on SAP BTP, we gain a flexible, scalable solution that can be triggered both by SAP BW and SAP Datasphere. This doesn’t just modernize our architecture—it lays the groundwork for future-proof integration patterns, better modularity, and easier maintenance in a cloud-centric world.&lt;/P&gt;&lt;H1 id="toc-hId-428664134"&gt;A broader architectural perspective&lt;/H1&gt;&lt;P&gt;Another powerful dimension of this development is the ability to interact with a broader range of services available on SAP BTP, such as SAP Event Mesh. For example, you could emit an event to a queue and have that event trigger specific reactions among subscribed services. This pattern—similar to what has long been possible in SAP Data Intelligence using simple Pub/Sub mechanisms—enables a much cleaner, event-driven architecture that is better aligned with modern cloud-native design principles.&lt;/P&gt;&lt;P&gt;But this blog is not just about the “small” new feature of the REST API step. It is about what this feature represents: a clear signal of how the SAP Analytics ecosystem is rapidly evolving toward the Business Data Cloud—with SAP Datasphere, SAP Analytics Cloud, and SAP Databricks at its core (leaving SAP BW Private Cloud Edition aside for now).&lt;/P&gt;&lt;P&gt;This shift demands a mindset change for analytics consultants. To remain relevant and deliver robust solutions, we must go beyond our comfort zones and understand how SAP BTP enriches this ecosystem. That includes learning how to build with CAP or UI5, orchestrate processes using SAP Build, and embrace loosely coupled, service-based thinking.&lt;/P&gt;&lt;P&gt;It’s no longer just about reporting and data modeling—it's about understanding how to leverage the entire BTP toolset to design smarter, more flexible processes that are fit for the future.&lt;/P&gt;&lt;H1 id="toc-hId-232150629"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;The REST API step in SAP Datasphere Task Chains is much more than a technical enhancement—it is a strategic inflection point. It pushes SAP architecture toward:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Greater openness and interoperability&lt;/LI&gt;&lt;LI&gt;Microservice- and event-driven thinking&lt;/LI&gt;&lt;LI&gt;Tighter orchestration between SAC, Datasphere, and BTP&lt;/LI&gt;&lt;LI&gt;A cleaner transition from legacy on-prem ABAP logic&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The future is modular, cloud-native, and integrated—and this is your chance to start designing for it.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/this-is-the-way-rethinking-analytics-orchestration-with-rest-in-sap/ba-p/14170882"/>
    <published>2025-08-08T08:40:00.025000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/building-agents-for-a-simple-microservice-architecture-with-fastapi-part-2/ba-p/14176702</id>
    <title>🚀Building Agents  for a Simple Microservice Architecture with FastAPI (Part 2)</title>
    <updated>2025-08-10T09:01:21.368000+02:00</updated>
    <author>
      <name>Yogananda</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/75</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Previous Blog :&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/building-collaborative-microservices-in-python-with-fastapi-echo-amp/ba-p/14170025" target="_blank"&gt;Building Collaborative Microservices in Python with FastAPI: Echo &amp;amp; Reverse Agents (Beginner -Part1)&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Microservices are a powerful way to design scalable and maintainable applications. &lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;In this blog, we will explore a minimal yet effective microservice setup using&amp;nbsp;&lt;STRONG&gt;FastAPI&lt;/STRONG&gt;, perfect for learning and experimentation. This will help to you build better Microservices and deploy in SAP BTP - Kyma&lt;/EM&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1866088139"&gt;Sample Use Case&lt;/H3&gt;&lt;P&gt;A client sends a city name to the Weather Agent. The agent fetches enrichment data from the Data Enricher, generates fake weather data, and returns a combined report. This mimics real-world API composition and data aggregation.&lt;/P&gt;&lt;H3 id="toc-hId-1669574634"&gt;Overview&lt;/H3&gt;&lt;P&gt;It consists of two core services:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Fake Weather Agent&amp;nbsp;(&lt;FONT color="#FF6600"&gt;weather_agent.py&lt;/FONT&gt;)&lt;/LI&gt;&lt;LI&gt;Data Enricher&amp;nbsp;(&lt;FONT color="#FF6600"&gt;data_enricher.py&lt;/FONT&gt;)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;A shell script (&lt;FONT color="#FF6600"&gt;run.sh&lt;/FONT&gt;) is included to launch both services on separate ports, simulating a real-world microservice environment.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Yogananda_0-1754809227004.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298973i1E5B429726C6F429/image-size/large?v=v2&amp;amp;px=999" role="button" title="Yogananda_0-1754809227004.png" alt="Yogananda_0-1754809227004.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1473061129"&gt;&lt;span class="lia-unicode-emoji" title=":sun_behind_rain_cloud:"&gt;🌦&lt;/span&gt;️ 1. Fake Weather Agent (&lt;FONT color="#FF6600"&gt;weather_agent.py&lt;/FONT&gt;)&lt;/H3&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;Purpose&lt;/FONT&gt;:&amp;nbsp; &amp;nbsp;Generates a fake weather report for a given city.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;API Endpoint:&amp;nbsp;&amp;nbsp;&lt;/FONT&gt;&lt;FONT color="#FF6600"&gt;POST /weather&lt;/FONT&gt;&amp;nbsp;— Accepts a JSON payload with a city name.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;How It Works:&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Receives a city name from the client.&lt;/LI&gt;&lt;LI&gt;Optionally calls the&amp;nbsp;Data Enricher&amp;nbsp;service to fetch additional info (e.g., population, country).&lt;/LI&gt;&lt;LI&gt;Generates random weather data:&lt;UL&gt;&lt;LI&gt;Temperature&lt;/LI&gt;&lt;LI&gt;Condition (e.g., sunny, rainy)&lt;/LI&gt;&lt;LI&gt;Humidity&lt;/LI&gt;&lt;LI&gt;Wind speed&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Returns a combined weather report, enriched with city metadata if available.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;Tech Stack:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;FastAPI for API development&lt;/LI&gt;&lt;LI&gt;Pydantic for data validation&lt;/LI&gt;&lt;LI&gt;httpx for asynchronous HTTP calls&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
import httpx
import os
import random

PORT = int(os.getenv("PORT", 8002))
TARGET = os.getenv("TARGET_URL", "http://localhost:8003")   # downstream agent

app = FastAPI(title="Fake-Weather-Agent")

class Location(BaseModel):
    city: str

class WeatherReport(BaseModel):
    source: str
    city: str
    temperature: float   # °C
    condition: str
    humidity: int        # %
    wind_kmh: float

CONDITIONS = ["Sunny", "Cloudy", "Rain", "Snow", "Thunderstorm"]

@app.post("/weather", response_model=WeatherReport)
async def get_weather(loc: Location):
    """Generate a fake weather report for the given city."""
    # Optionally call another agent (e.g. a “data-enrichment” service)
    async with httpx.AsyncClient() as client:
        try:
            r = await client.post(
                f"{TARGET}/enrich",
                json={"city": loc.city}
            )
            r.raise_for_status()
            extra = r.json()
        except Exception:
            extra = {}

    return WeatherReport(
        source="Fake-Weather-Agent",
        city=loc.city,
        temperature=round(random.uniform(-10, 40), 1),
        condition=random.choice(CONDITIONS),
        humidity=random.randint(20, 95),
        wind_kmh=round(random.uniform(0, 40), 1),
        **extra
    )&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-1276547624"&gt;&lt;span class="lia-unicode-emoji" title=":cityscape:"&gt;🏙&lt;/span&gt;️ 2. Data Enricher (&lt;FONT color="#FF6600"&gt;data_enricher.py&lt;/FONT&gt;)&lt;/H3&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;Purpose&lt;/FONT&gt;:&amp;nbsp;Provides additional metadata about a city.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;API Endpoint:&amp;nbsp;&lt;/STRONG&gt;&lt;FONT color="#FF6600"&gt;POST /enrich&lt;/FONT&gt;&amp;nbsp;— Accepts a JSON payload with a city name.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;How It Works:&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Looks up the city in a fake in-memory database.&lt;/LI&gt;&lt;LI&gt;Returns population and country if found.&lt;/LI&gt;&lt;LI&gt;If not found, returns default placeholder values.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;Tech Stack:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;FastAPI&lt;/LI&gt;&lt;LI&gt;Pydantic&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;from fastapi import FastAPI
from pydantic import BaseModel

app = FastAPI(title="Data-Enricher")

class EnrichRequest(BaseModel):
    city: str

class EnrichResponse(BaseModel):
    population: int
    country: str

FAKE_DB = {
    "london": {"population": 9_000_000, "country": "UK"},
    "paris":  {"population": 2_100_000, "country": "France"},
    "tokyo":  {"population": 14_000_000, "country": "Japan"},
}

@app.post("/enrich", response_model=EnrichResponse)
def enrich(req: EnrichRequest):
    city = req.city.lower()
    if city not in FAKE_DB:
        return EnrichResponse(population=0, country="Unknown")
    return FAKE_DB[city]&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-1080034119"&gt;&lt;span class="lia-unicode-emoji" title=":desktop_computer:"&gt;🖥&lt;/span&gt;️ 3. Running the Services (&lt;FONT color="#FF6600"&gt;run.sh&lt;/FONT&gt;)&lt;/H3&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;Purpose:&amp;nbsp;&lt;/FONT&gt;Starts both services using&amp;nbsp;uvicorn, FastAPI’s ASGI server.&lt;BR /&gt;A shell script (&lt;A title="" href="vscode-file://vscode-app/Applications/Visual%20Studio%20Code.app/Contents/Resources/app/out/vs/code/electron-browser/workbench/workbench.html" target="_blank" rel="noopener nofollow noreferrer"&gt;run.sh&lt;/A&gt;) is provided to run both services on different ports.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;How It Works&lt;/FONT&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Launches&amp;nbsp;Fake Weather Agent&amp;nbsp;on port&amp;nbsp;&lt;FONT color="#FF6600"&gt;8002&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;Launches&amp;nbsp;Data Enricher&amp;nbsp;on port&amp;nbsp;&lt;FONT color="#FF6600"&gt;8003&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;Each service runs in its own terminal window&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;# Terminal 1
uvicorn fake_weather:app --port 8002 --reload

# Terminal 2
uvicorn data_enricher:app --port 8003 --reload&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-754437895"&gt;Key Points :&amp;nbsp;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Microservice Communication:&lt;BR /&gt;The Weather Agent calls the Data Enricher via HTTP to demonstrate service-to-service communication.&lt;/LI&gt;&lt;LI&gt;Extensibility:&lt;BR /&gt;Easy to add more enrichment services or expand the fake database.&lt;/LI&gt;&lt;LI&gt;FastAPI Features:&lt;BR /&gt;Shows how to use Pydantic models, async endpoints, and response models.&lt;/LI&gt;&lt;LI&gt;Local Development:&amp;nbsp;&amp;nbsp;&lt;BR /&gt;Simple to run both services locally for testing and learning.&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/building-agents-for-a-simple-microservice-architecture-with-fastapi-part-2/ba-p/14176702"/>
    <published>2025-08-10T09:01:21.368000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cloud-integration-with-document-ai/ba-p/14176914</id>
    <title>Cloud Integration with Document AI</title>
    <updated>2025-08-10T19:19:42.064000+02:00</updated>
    <author>
      <name>PriyankaChak</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3763</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607924656"&gt;&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In this blog post, I will demonstrate how to connect Cloud Integration with Document AI. As a use case, let’s consider a scenario where a hospital registers a new patient, and the patient submits their previous prescription records. Using Document AI, we can extract relevant details such as past illnesses, allergies, and the patient’s blood group.&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1411411151"&gt;&lt;SPAN&gt;Document AI:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 1&lt;/STRONG&gt;. As a pre-requisite, run a booster to activate Document AI in a trial account.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Reference link: &lt;/SPAN&gt;&lt;A href="https://developers.sap.com/tutorials/cp-aibus-dox-booster-key.html" target="_blank" rel="noopener noreferrer"&gt;Use Trial to Set Up Account for SAP Document AI and Get Service Key&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 2&lt;/STRONG&gt;. Create a custom schema as shown below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299078i876DDC7000A272CB/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic1.png" alt="pic1.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 3&lt;/STRONG&gt;. Upload sample prescriptions. Here, I have uploaded two prescriptions of a&amp;nbsp;patient (merged into a single PDF). &lt;EM&gt;Please note that all the data is fictitious.&lt;/EM&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299079i67D96ABDEC86A48D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic2.png" alt="pic2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299080i9F613DA1CF5B38C0/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic3.png" alt="pic3.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 4&lt;/STRONG&gt;. Verify the extraction results, if required edit and then confirm.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299083iB54A73D12B3B235B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic4.png" alt="pic4.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For this example we get confidence percentage is 51%-80%. Please note, &lt;EM&gt;i&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;EM&gt;nstant learning&lt;/EM&gt; based on feedback is available on premium edition.&amp;nbsp;Reference link: &lt;A href="https://help.sap.com/docs/document-information-extraction/document-information-extraction/instant-learning-premium-edition?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Instant Learning (Premium Edition)&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1214897646"&gt;&lt;SPAN&gt;Cloud Integration:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;For the demo, I will send the PDF to Cloud Integration using an API testing tool. Cloud Integration will then forward it to Document AI, extract the results.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299114i70FE2EAC2873B982/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic8.png" alt="pic8.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The list of Document AI's APIs can be viewed using Swagger UI. The URL for swagger can be constructed from the Service key in the format:&amp;nbsp;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299085iCA62300FF3294F7F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic6.png" alt="pic6.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To call the Document AI API to post documents, use the below API.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299088iFF950F7BE5A548C1/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic9.png" alt="pic9.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The content modifier is used to set the options as below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299089iC8157A3A91CDBB18/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic10.png" alt="pic10.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The groovy script is used to create the multipart/form-data format.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;The endpoint for the 1st call is &lt;/SPAN&gt;&lt;SPAN&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;document/jobs&lt;/EM&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The response structure of the 1st call is shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299090i0142138ADE6AAD44/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic11.png" alt="pic11.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Retrieve the &lt;EM&gt;&lt;FONT color="#000000"&gt;id&lt;/FONT&gt;&lt;/EM&gt; and use the &lt;EM&gt;looping processing call&lt;/EM&gt; option to get the extraction result once the job is completed.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299092i6F16E82CDB06D189/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic12.png" alt="pic12.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Use the endpoint for 2nd call to get the extraction result:&lt;/SPAN&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;document/jobs/&amp;lt;id&amp;gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The groovy script is used to retrieve the field values where the confidence level is more than 60%, and format the response.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Test the iFlow endpoint using API testing tool (as shown below).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299093i9A20B029F3FB9E55/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic13.png" alt="pic13.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Please note that all the data are fictitious.&lt;/EM&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1018384141"&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;This blog post demonstrates a prototype that integrates Document AI for real life use cases along with Cloud Integration.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Reference Link: &lt;A href="https://help.sap.com/docs/document-ai/sap-document-ai/what-is-sap-document-ai?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SAP Document AI&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cloud-integration-with-document-ai/ba-p/14176914"/>
    <published>2025-08-10T19:19:42.064000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/new-in-sap-mobile-start-v2-4-integrate-and-launch-sap-document-ai-on-mobile/ba-p/14162770</id>
    <title>New in SAP Mobile Start V2.4: Integrate and Launch SAP Document AI on Mobile</title>
    <updated>2025-08-11T08:00:00.115000+02:00</updated>
    <author>
      <name>umairabbashayat</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2078707</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;With the SAP Mobile Start 2.4 release, users can leverage SAP Document AI—integrated seamlessly within the Mobile Start app—to transform document handling into a secure, intelligent, and automated experience. They can scan or upload documents directly from SAP Mobile Start, which are then processed by the SAP Document AI service.&amp;nbsp;This streamlines processing, cuts down manual work, and boosts data accuracy throughout your operations.&amp;nbsp;In this blog, I'll walk you through the integration steps, prerequisites, and configuration details needed to bring SAP Document AI capabilities to your mobile users.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1735962950"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Preconditions&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Before you begin, ensure the following prerequisites are fulfilled.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1797614883"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Subscribe to SAP Document AI&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;Ensure that your SAP BTP subaccount is subscribed to the Document Information Extraction service. You can follow &lt;/SPAN&gt;&lt;A href="https://developers.sap.com/tutorials/cp-aibus-dox-free-booster-app.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;this tutorial&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; to get started. Once complete, access the SAP Document AI UI from your BTP subscriptions to configure document types and schemas relevant to your business scenarios. For more information on schema configuration, refer to the &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/document-ai/sap-document-ai/schema-configuration" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;official user guide&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1601101378"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Enable Identity Authentication for SAP Build Work Zone&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;In SAP Build Work Zone, navigate to Site Manager &amp;gt; Settings, and ensure Identity Authentication is enabled.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Blog1.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296549iDC36E6186188A593/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Blog1.png" alt="Blog1.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Screenshot: Enabling Identity Authentication in SAP Build Work Zone Settings&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1404587873"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Configure Trust Relationship for API Access&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;To allow SAP Build Work Zone to consume SAP Document AI APIs, you need to add a dependency in the SAP Cloud Identity Services (IAS) administration console:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Go to the Applications tab&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Select the SAP Build Work Zone application&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Under Dependencies, add a new entry with:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Name: documentai (or any unique name)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Application: Select the “SAP Document AI” entry in your IAS tenant&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1208074368"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Create Destination for SAP Mobile Start&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;To authorize SAP Mobile Start App to access SAP Document AI, create a destination in your BTP subaccount with the following settings:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Name: sapdocumentaimobilestartintegration&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Type: HTTP&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Authentication: NoAuthentication&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Proxy Type: Internet&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;URL: (Use https://&amp;lt;your-tenant-url-endpoint&amp;gt;/document-ai/v1, located in Document AI instance &amp;gt; service key &amp;gt; endpoints &amp;gt; backend &amp;gt; URL)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Add the following additional properties:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;HTML5.DynamicDestination = true&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;HTML5.IASDependencyName = documentai (dependency name created in SAP Cloud Identity Services)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Once completed, both &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build Work Zone&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Mobile Start&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; are authorized to access SAP Document AI.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1011560863"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Configuring tile for SAP Document AI access in mobile&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;To make SAP Document AI accessible via SAP Mobile Start:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H5 id="toc-hId-944130077"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Step 1: Create a New App in Site Manager&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;SPAN&gt;In SAP Build Work Zone, navigate to Site Manager &amp;gt; Content Manager and create a new App.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Open App: In place&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;URL: &lt;A target="_blank" rel="noopener"&gt;https://&amp;lt;your-tenant-url&amp;gt;/launchpad?sap-ushell-config=headerless#InboundDocument-manageInDocumentAI&lt;BR /&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;span class="lia-unicode-emoji" title=":information:"&gt;ℹ️&lt;/span&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Use sap-ushell-config=headerless to hide the launchpad header&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H5 id="toc-hId-747616572"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Step 2: Configure Navigation Parameters&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;SPAN&gt;In the Navigation tab, add the following parameters:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;name: Schema name - Optional (from SAP Document AI UI &amp;gt; Schemas tab)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;latest: true, this signifies that only the latest version of the schema is used&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;client_ID: Client ID (from SAP Document AI UI &amp;gt; Settings), preset to ‘default’&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;instance_ID: Instance ID (from SAP Document AI UI &amp;gt; Settings or BTP account &amp;gt; Instances &amp;gt; Select SAP Document AI instance)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;showWorkspaceHeader: true&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H5 id="toc-hId-551103067"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Step 3: Configure Visualization&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;&lt;SPAN&gt;You can set your own preferred title, subtitle, icon.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Visualisation Type: Static Tile&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Add the following name-value parameters:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;mobilestart.type: documentAi&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;mobilestart.documentAi.clientId: (as specified in Navigation Tab parameters)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;mobilestart.documentAi.instanceId: (as specified in Navigation Tab parameters)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;mobilestart.documentAi.documentSchemaId: Optional - needed if only a specific schema scenario should be enabled, otherwise all active schemas will be shown to the end user. You can find Schema ID in SAP Document AI UI &amp;gt; Schemas tab&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Blog2.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296547i57DD8C3B593EF7EE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Blog2.png" alt="Blog2.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;Screenshot: &lt;/SPAN&gt;&lt;SPAN&gt;SAP Document AI Tile Visualization in SAP Build Work Zone&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You’ve now created a fully functional SAP Document AI tile for SAP Mobile Start!&lt;/SPAN&gt; &lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--32658595"&gt;&lt;STRONG&gt;&lt;SPAN&gt;User Experience in SAP Mobile Start&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;As a business user, you can locate the newly created SAP Document AI tile in the SAP Mobile Start app using the Search function. For easier access, you can also add the tile to your Favorites. When you tap the tile, you’ll be directed to a native document selection screen. Depending on how the service was configured by the administrator, you may have the option to select a document type and schema. If the tile is configured for a specific schema use case, it will be automatically selected.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="T2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291761iFADF888D246EEE52/image-size/large?v=v2&amp;amp;px=999" role="button" title="T2.png" alt="T2.png" /&gt;&lt;/span&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Screenshot: SAP Document AI tile in SAP Mobile Start App&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId--468723757"&gt;&lt;STRONG&gt;Upload Options&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H4&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Scan via Camera – Leverages the device’s native camera with real-time preview, cropping, rotation, and filtering. Multiple scans are compiled into a single PDF.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Select Images from Gallery – Users choose previously captured images which are compiled into a single PDF.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Select File from File Explorer – Users upload a single PDF from their device’s file system.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="T1Q.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297917i023A8F6F1911A4E7/image-size/large?v=v2&amp;amp;px=999" role="button" title="T1Q.png" alt="T1Q.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Screenshot: Scanning a document via device’s native camera&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId--665237262"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Upload Validation &amp;amp; Handling&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;Before uploading a document, the app performs several validation checks to ensure compatibility. The file size must not exceed 50 MB, and the document should contain no more than 100 pages. Additionally, file names are automatically sanitized to remove any invalid characters. Once these checks are successfully passed, the upload process begins, with a visible progress bar indicating status. Android users can upload multiple documents synchronously.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After the upload is complete, the document extraction workflow is triggered, and users receive a success notification confirming the process.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId--861750767"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Track Status and Review Document&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;SPAN&gt;To monitor the progress of document extraction, simply open the Document Overview from the overflow menu within the document selection screen. This action launches the mobile-optimized SAP Document AI UI, providing a clear and intuitive view of the status, allowing reviews and other updates related to your uploaded documents.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="T3F.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297916iE46168103ABCA363/image-size/large?v=v2&amp;amp;px=999" role="button" title="T3F.png" alt="T3F.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Screenshot: Track status and review document via mobile optimized UI&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--471458258"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Conclusion&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;With the release of SAP Mobile Start 2.4 and the seamless integration of SAP Document AI, business users now benefit from a truly mobile-first, intelligent document processing experience. Whether it's capturing receipts on the go, processing invoices, or extracting data from complex forms, SAP Document AI empowers users to automate workflows efficiently—right from their mobile devices. This integration brings the power of AI-driven document handling directly to your fingertips, enabling smarter, faster, and more scalable business operations.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/new-in-sap-mobile-start-v2-4-integrate-and-launch-sap-document-ai-on-mobile/ba-p/14162770"/>
    <published>2025-08-11T08:00:00.115000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-frequently-asked-questions/ba-p/14174603</id>
    <title>SAP BTP ABAP Environment - Frequently Asked Questions</title>
    <updated>2025-08-11T08:55:40.186000+02:00</updated>
    <author>
      <name>Nora_Klemp</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1641196</uri>
    </author>
    <content>&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;P&gt;&lt;EM&gt;Hint:&amp;nbsp;A separate blog post with all questions regarding partner topics will be published in the near future. The corresponding link will be added after its publication.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;The content of this blog post will be continuously updated, and additional questions will be added.&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-1736944878"&gt;Overview SAP BTP ABAP Environment&lt;/H2&gt;&lt;H5 id="toc-hId-1927679530"&gt;What is the SAP BTP ABAP Environment?&lt;/H5&gt;&lt;P&gt;&lt;A href="https://www.sap.com/products/technology-platform/abap.html" target="_blank" rel="noopener noreferrer"&gt;SAP BTP ABAP environment&lt;/A&gt; is the platform as a service for ABAP developers. It’s a cloud-optimized ABAP platform based on SAP HANA Cloud that serves as a development and runtime environment for cloud apps.&lt;/P&gt;&lt;H5 id="toc-hId-1731166025"&gt;What is ABAP Cloud and why is it needed?&lt;/H5&gt;&lt;P&gt;ABAP Cloud is specifically tailored to the needs of cloud development. ABAP Cloud is the new, modern approach to making ABAP development future-proof and cloud-ready. It is the ABAP development model for creating cloud-ready business apps, services, and extensions. It combines various cloud technologies for development, including ABAP Core Data Services (CDS) for data modeling, the ABAP RESTful application programming model (&lt;A href="https://pages.community.sap.com/topics/abap/rap" target="_blank" rel="noopener noreferrer"&gt;RAP&lt;/A&gt;), SAP Fiori UI technology, and the ABAP Development Tools (ADT). It maintains a strict separation between SAP, customer, and partner coding.&lt;/P&gt;&lt;P&gt;It is the necessary path for all extensions in the SAP S/4HANA Cloud environment and is also becoming increasingly important for on-premise systems. All cloud development must be implemented with ABAP Cloud; classic ABAP is not permitted in cloud applications.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1147404363"&gt;Use cases&lt;/H2&gt;&lt;H5 id="toc-hId-1338139015"&gt;What are typical use cases?&lt;/H5&gt;&lt;P&gt;The platform offers the possibility for a variety of individual solutions; the following list contains the most prominent examples.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Loosely coupled side-by-side extensions and applications&lt;/LI&gt;&lt;LI&gt;Tightly coupled on-stack extensions&lt;/LI&gt;&lt;LI&gt;Hub-like usage for integration scenarios&lt;/LI&gt;&lt;LI&gt;Partners can provide Multitenant SaaS solutions and the partner Add-on product&lt;/LI&gt;&lt;/UL&gt;&lt;H5 id="toc-hId-1141625510"&gt;Who can use it?&lt;/H5&gt;&lt;P&gt;The environment can be used for different target groups, with respective features and use cases.&lt;/P&gt;&lt;P&gt;For education:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Learn ABAP Cloud and evaluate the SAP BTP ABAP environment&lt;/LI&gt;&lt;LI&gt;Try it out using the Trial Account or the Free Tier Option&lt;/LI&gt;&lt;LI&gt;Free Tier systems can be smoothly converted into a standard system&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For customer:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Develop and run loosely coupled side-by-side extensions for example for SAP S/4HANA Cloud&lt;/LI&gt;&lt;LI&gt;Develop tightly coupled on-stack extensions&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For partners:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Develop and run multitenancy-enabled SaaS applications for their customers&lt;/LI&gt;&lt;LI&gt;Develop and provide a partner Add-on product for customers&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Of course, the SAP BTP ABAP environment is also used for internal scenarios, so that our own products run on it.&lt;/P&gt;&lt;H2 id="toc-hId-557863848"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-361350343"&gt;Benefits&lt;/H2&gt;&lt;H5 id="toc-hId-552084995"&gt;What are the key benefits?&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;Extend SAP applications: Use the side-by-side approach to develop and run custom extensions for SAP S/4HANA Cloud&lt;/LI&gt;&lt;LI&gt;Accelerate cloud transformation: Reuse ABAP assets and knowledge to build breakthrough innovations in the cloud&lt;/LI&gt;&lt;LI&gt;Keep the core clean: Transform on-premise custom code to a separate platform to decouple it from the digital core and profit from independent release cycles&lt;/LI&gt;&lt;/UL&gt;&lt;H5 id="toc-hId-355571490"&gt;How can the environment be used in relation to clean core?&lt;/H5&gt;&lt;P&gt;The SAP BTP ABAP environment supports the concept of the clean core in several ways to ensure the maintainability, scalability, and long-term sustainability of ABAP-based solutions. Due to the enforced use of ABAP Cloud, the development is 100% clean core by default.&lt;/P&gt;&lt;P&gt;Some aspects are listed here:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Cloud-native development: The SAP BTP ABAP environment enables developers to create cloud-native ABAP applications that can extend classic systems.&lt;/LI&gt;&lt;LI&gt;Side-by-Side Extensions: Using side-by-side extensions, customers can develop and deploy custom extensions outside of the core system. This minimizes the risk of disruptions caused by customizations in the core system and facilitates updates and upgrades.&lt;/LI&gt;&lt;LI&gt;Use of APIs and services: SAP BTP ABAP environment supports an API-driven development approach, where applications communicate with other SAP systems via well-defined interfaces. There is also the option to use reuse services.&lt;/LI&gt;&lt;LI&gt;Update and upgrade stability: The SAP BTP ABAP environment ensures that customer-specific customizations and extensions are separated from the core system, increasing stability during updates and upgrades. This minimizes the risk of conflicts and instability and enables regular updates and patches without impacting core processes.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Further information on Clean Core and Extensibility can be found in the &lt;A href="https://www.sap.com/documents/2022/10/52e0cd9b-497e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;Extensibility Guide&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;H5 id="toc-hId--761144836"&gt;Are there any AI features which can be used with the SAP BTP ABAP Environment?&lt;/H5&gt;&lt;P&gt;It is possible to use the&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/joule-speaks-abap/ba-p/14018226" target="_blank"&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/A&gt;. These include various features to support developers, for example, the unit test generation, the BO generator or the code completion. These features can be used in Eclipse together with the ABAP Development Tools (ADT). The AI features are part of a separate contract.&lt;/P&gt;&lt;H2 id="toc-hId--77449320"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--273962825"&gt;Tools and Development&lt;/H2&gt;&lt;H5 id="toc-hId--1350685351"&gt;Which tools and development IDEs are available for ABAP development in the cloud?&lt;/H5&gt;&lt;P&gt;The clear recommendation&amp;nbsp;is to use Eclipse together with ADT. In the &lt;A href="https://www.sap.com/germany/products/technology-platform/business-application-studio.html" target="_blank" rel="noopener noreferrer"&gt;SAP Business Application Studio&lt;/A&gt;, changes to the UI can be made if necessary. An introduction on how to connect the two systems can be found on this &lt;A href="https://help.sap.com/docs/sap-btp-abap-environment/abap-environment/creating-destination-to-abap-system-for-sap-business-application-studio" target="_blank" rel="noopener noreferrer"&gt;SAP Help Page&lt;/A&gt;.&lt;/P&gt;&lt;H5 id="toc-hId--1547198856"&gt;Where can I find resources and tutorials for development?&lt;/H5&gt;&lt;P&gt;There are various materials and tutorials available to help you get started with ABAP Cloud. The following are good starting points:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://github.com/orgs/SAP-samples/repositories?language=&amp;amp;q=rap+&amp;amp;sort=&amp;amp;type=all" target="_blank" rel="noopener nofollow noreferrer"&gt;Development Tutorials on GitHub&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://learning.sap.com/learning-journeys/practicing-clean-core-extensibility-for-sap-s-4hana-cloud" target="_blank" rel="noopener noreferrer"&gt;Learning Journey: Practicing Clean Core Extensibility For SAP S/4HANA Cloud&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://learning.sap.com/learning-journeys/acquire-core-abap-skills" target="_blank" rel="noopener noreferrer"&gt;Learning Journey: Acquiring Core ABAP Skills&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://learning.sap.com/certifications/sap-certified-associate-back-end-developer-abap-cloud" target="_blank" rel="noopener noreferrer"&gt;SAP Certified Associate: Back-End Developer - ABAP Cloud&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/btp/btp-developers-guide/tutorials-for-abap-cloud" target="_blank" rel="noopener noreferrer"&gt;SAP Help Portal: Tutorials for ABAP Cloud&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;What tools are available for lifecycle management?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;There are various tools for lifecycle management&lt;/P&gt;&lt;P&gt;One is abapGit: This is used to transport development objects into SAP BTP ABAP instances. Its use as a transport system is not recommended. Furthermore, there is the git-enabled change and transport system (gCTS), which is used to transport objects between the dev and test systems. More information regarding gCTS can be found in this &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/gcts-is-here/ba-p/13444452" target="_blank"&gt;blog post&lt;/A&gt; in the SAP Community. It's also possible to use the existing Git within the company using the &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/bring-your-own-git-for-sap-btp-abap-environment/bc-p/14093439" target="_blank"&gt;Bring-Your-Own-Git (BYOG) feature&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;The SAP Landscape Portal acts as a central tool to allow service providers to perform administration tasks such as hibernating systems, creating test tenants and support users, selecting systems for a pre-upgrade, but also lifecycle management operations such as building, deploying and updating product versions, and even guides you through the configuration and deployment of multitenant SaaS solutions.&lt;/P&gt;&lt;H5 id="toc-hId--1743712361"&gt;Are there any limitations on on-stack development? Like creation of RAP objects via ADT?&lt;/H5&gt;&lt;P&gt;ABAP cloud is mandatory for the SAP BTP ABAP environment, so only ADT is available. The recommended programming model is the ABAP RESTful application programming model (&lt;A href="https://pages.community.sap.com/topics/abap/rap" target="_blank" rel="noopener noreferrer"&gt;RAP&lt;/A&gt;). There are no restrictions on RAP.&lt;/P&gt;&lt;H2 id="toc-hId--1060016845"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1256530350"&gt;System Management and Administration&lt;/H2&gt;&lt;H5 id="toc-hId-1961714420"&gt;How does the standard sizing look like?&lt;/H5&gt;&lt;P&gt;The system consists of two components: the runtime, called &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/creating-abap-system" target="_blank" rel="noopener noreferrer"&gt;ABAP Compute Unit&lt;/A&gt; (ACU), and the persistence, called &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/creating-abap-system" target="_blank" rel="noopener noreferrer"&gt;HANA Compute Unit&lt;/A&gt; (HCU). The minimum system size includes one ACU and two HCUs. We recommend starting with this configuration; later adjustments are possible at any time. Even one ACU is very powerful and can serve 1,000&amp;nbsp;business users in a single day.&lt;/P&gt;&lt;H5 id="toc-hId-1765200915"&gt;How can the systems be managed and administered?&lt;/H5&gt;&lt;P&gt;General system configuration, such as setting up systems, adjusting metrics, and creating subaccounts, is performed via the SAP BTP Cockpit. Further specific system management is performed via the &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/landscape-portal" target="_blank" rel="noopener noreferrer"&gt;SAP Landscape Portal&lt;/A&gt;, which is included with every system and is free to use. This allows for a wide variety of administrative and configuration tasks, such as user and role management, &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-manage-system-hibernation/ba-p/13566169" target="_blank"&gt;system hibernation&lt;/A&gt;, and application deployment.&lt;/P&gt;&lt;H5 id="toc-hId-1736871101"&gt;How can the system size be adjusted?&lt;/H5&gt;&lt;P&gt;The system size can be adjusted manually via the SAP BTP Cockpit. This applies to both ACUs and HCUs. The customer and partner can make the size adjustment themselves and independently. Furthermore, there is the possibility to use system hibernation and elastic scaling, more on this in the next section.&lt;/P&gt;&lt;H5 id="toc-hId-1540357596"&gt;How are the ACUs scaling with the increasing number of users?&lt;/H5&gt;&lt;P&gt;An ACU is capable of serving 1,000 active business users per day. If the number of users increases, the number of ACUs must also be adjusted.&lt;/P&gt;&lt;H5 id="toc-hId-1343844091"&gt;Will the system upgrades cause downtime for my systems?&lt;/H5&gt;&lt;P&gt;Standard upgrades require a planned downtime of the systems. The downtimes are covered by contractual SLAs and the schedule is announced in advance for the whole calendar year (see this &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-maintenance-windows-and-major-upgrade-windows-in/ba-p/13920833" target="_blank"&gt;blog post&lt;/A&gt;). A down-time optimized approach is in place for productive systems. The required technical downtime will be reduced in further releases. The individual phases of the upgrade are described in this blog post in the SAP Community.&lt;/P&gt;&lt;H5 id="toc-hId-1147330586"&gt;Does the entire system landscape have to be created right at the beginning?&lt;/H5&gt;&lt;P&gt;No, we recommend setting up the systems when they are needed. This reduces complexity at the beginning, and you only pay for the systems you need at that moment. To begin, either the Free Tier system can be converted, or a new development system can be created in the SAP BTP Cockpit. Development can then take place there and all transports can be released. Next, the test system is created with the software component on which the development is based. Finally, the production system can be created. This way, the &lt;A href="https://help.sap.com/docs/sap-btp-abap-environment/abap-environment/use-case-1-one-codeline-in-3-system-landscape" target="_blank" rel="noopener noreferrer"&gt;three system landscape&lt;/A&gt; is built piece by piece based on the requirements. If systems are not in use, they can be shut down using system hibernation to save costs.&lt;/P&gt;&lt;H5 id="toc-hId-950817081"&gt;What are the recommendations for setting up subaccounts in the SAP BTP Cockpit?&lt;/H5&gt;&lt;P&gt;We recommend creating a separate subaccount for each system. This provides maximum flexibility regarding trust settings, which are always defined at the subaccount level. Of course, there are other development scenarios where multiple systems per subaccount would be helpful. However, we generally recommend one system per subaccount.&lt;/P&gt;&lt;H5 id="toc-hId-754303576"&gt;If, in a three-system landscape (dev, quality, prod), the source code is transported from the development system to other systems, will duplicates be created in the database?&lt;/H5&gt;&lt;P&gt;Yes, each SAP BTP ABAP environment system has its own HANA Cloud instance, which is why duplicates occur.&lt;/P&gt;&lt;H2 id="toc-hId-1437999092"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1241485587"&gt;Hosting and Data Center&lt;/H2&gt;&lt;H5 id="toc-hId-164763061"&gt;Which hyperscalers are available to host the systems?&lt;/H5&gt;&lt;P&gt;There are currently three different providers to choose from: Amazon Web Services (AWS), Microsoft Azure and Google Cloud. Furthermore, the option to use SAP as a hyperscaler will be added this year, so no external service provider is required. An overview of the hyperscalers can also be found in the &lt;A href="https://discovery-center.cloud.sap/serviceCatalog/abap-environment?region=all&amp;amp;tab=service_plan" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Discovery Center&lt;/A&gt;.&lt;/P&gt;&lt;H5 id="toc-hId--31750444"&gt;In which data centers can the systems be located?&lt;/H5&gt;&lt;P&gt;The data centers are distributed globally and can be found in a wide variety of countries. EU access, for example, can also be granted. A complete list of all locations is available in the &lt;A href="https://discovery-center.cloud.sap/serviceCatalog/abap-environment?commercialModel=btpea&amp;amp;tab=service_plan&amp;amp;region=all" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Discovery Center&lt;/A&gt;.&lt;/P&gt;&lt;H5 id="toc-hId--60080258"&gt;Can a synchronous replication be created as a backup from the SAP BTP ABAP Environment system?&lt;/H5&gt;&lt;P&gt;Starting in Q4/2025, it will be possible to create a so-called availability zone in which the system is replicated, more information in this &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/announcing-the-new-quot-in-metro-quot-disaster-recovery-solution-for-sap/ba-p/13904013" target="_blank"&gt;blog post&lt;/A&gt; in the SAP Community. This functionality is part of the &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/resilience-high-availability-and-disaster-recovery" target="_blank" rel="noopener noreferrer"&gt;in-metro disaster recovery feature of the SAP BTP&lt;/A&gt;. This occurs in the same data center region as the original system. Mirroring in a different region is not possible.&lt;/P&gt;&lt;H2 id="toc-hId-623615258"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-427101753"&gt;Licensing and Costs&lt;/H2&gt;&lt;H5 id="toc-hId--649620773"&gt;How can the SAP BTP ABAP Environment be licensed and how much does it cost?&lt;/H5&gt;&lt;P&gt;There are different licensing options, both subscription-based and consumption-based. An overview can be found in the following table or in the &lt;A href="https://discovery-center.cloud.sap/serviceCatalog/abap-environment?region=all&amp;amp;tab=service_plan" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Discovery Center&lt;/A&gt;.&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100.00000000000001%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;License&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;Material Code&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;Service Name&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;Metric&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;Block Size&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;Min. Blocks&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;Price block/ h&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="14.285714285714286%"&gt;Pay-as-you-go&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;8017640&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;SAP BTP ABAP environment, runtime&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;GB memory&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;16 GB&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;1&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;2.50€/ hour&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="14.285714285714286%"&gt;Pay-as-you-go&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;8017640&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;SAP BTP ABAP environment, persistence&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;GB memory&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;16 GB&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;2&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;0.71€/ hour&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="14.285714285714286%"&gt;SAP BTPEA &amp;amp; CPEA&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;8016044 (BTPEA), 8005605 (CPEA)&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;SAP BTP ABAP environment, runtime&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;GB memory&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;16 GB&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;1&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;1.92€/ hour&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="14.285714285714286%"&gt;SAP BTPEA &amp;amp; CPEA&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;8016044 (BTPEA), 8005605 (CPEA)&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;SAP BTP ABAP environment, persistence&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;GB memory&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;16 GB&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;2&lt;/TD&gt;&lt;TD width="14.285714285714286%"&gt;&amp;nbsp;0.55€/ hour&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H5 id="toc-hId--846134278"&gt;Is there an option to try out the SAP BTP ABAP Environment?&lt;/H5&gt;&lt;P&gt;Yes, there are two options. One is using the Trial Account with a shared instance, and the other is using the Free Tier Option with a private instance. Both options are time-limited; all information can be found in this dedicated &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/get-started-with-sap-btp-abap-environment-trial-account-vs-free-tier-option/ba-p/13663694" target="_blank"&gt;blog post&lt;/A&gt; in the SAP Community.&lt;/P&gt;&lt;H5 id="toc-hId--1042647783"&gt;Can the Free Tier Option be used, if a standard plan has already been activated?&lt;/H5&gt;&lt;P&gt;Yes, but it depends on the licensing model. For example, partners with subscription-based TDD cannot do this: if the contract allows for a free tier, it's possible. Free tier only applies to consumption-based, and is always limited to a maximum of one system. All information can be found in this dedicated &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/get-started-with-sap-btp-abap-environment-trial-account-vs-free-tier-option/ba-p/13663694" target="_blank"&gt;blog post&lt;/A&gt; in the SAP Community.&lt;/P&gt;&lt;H5 id="toc-hId--1239161288"&gt;Is the SAP BTP ABAP Environment part of SAP Build?&lt;/H5&gt;&lt;P&gt;Yes, the SAP BTP ABAP environment is part of SAP Build since Q3/2024. The ABAP Runtime can also be purchased with the SAP Build SKU 8019321. This is implemented in the form of a subscription model based on capacity units; there is no consumption-based variant. There is no technical difference to the well-established service plan standard.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;License&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;Material Code&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;Service Name&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;Metric&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;Block Size&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;Min. Blocks&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="30px"&gt;&lt;STRONG&gt;Price block/ h&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;SAP Build Runtime&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;8019321&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;SAP BTP ABAP environment, runtime&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;GB memory&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;16 GB&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;1&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;1.92€/ hour&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;SAP Build Runtime&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;8019321&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;SAP BTP ABAP environment, persistence&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;GB memory&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;16 GB&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;2&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;&amp;nbsp;0.55€/ hour&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H5 id="toc-hId--1435674793"&gt;How can I switch from a standard contract to the SAP Build SKU?&lt;/H5&gt;&lt;P&gt;Switching to the Build Runtime SKU is quite simple. It simply involves changing the service plan. This service plan must be changed in the &lt;A href="https://account.hana.ondemand.com/#/home/welcome" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP BTP Cockpit&lt;/A&gt;, which the customer can do themselves. The change has no impact on the system, which will remain as before, and nothing needs to be adjusted. There will be no downtime or anything similar&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;/P&gt;&lt;H5 id="toc-hId--1632188298"&gt;Are there opportunities to optimize costs?&lt;/H5&gt;&lt;P&gt;There is the possibility to use the functionality of system hibernation, more information in this &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/optimize-your-sap-btp-abap-environment-budget-a-detailed-cost-analysis-for/ba-p/13574333" target="_blank"&gt;blog post&lt;/A&gt; in the SAP Community. This feature makes it possible to shut down development systems at a specific time when they are not needed. For example, the system can be shut down over the weekend. During this time, the costs for the ACU are waived and for the HCUs only 12.5% of the original costs must be paid (exactly 1/8 of the original price).&lt;/P&gt;&lt;P&gt;The manual adjustment of the ACUs and HCUs is quite static and cannot vary automatically according to the runtime. For this case, there is &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-elastic-scaling-of-application-servers/ba-p/13614903" target="_blank"&gt;elastic scaling&lt;/A&gt;. The system continuously monitors utilization metrics and adjusts the number of application servers accordingly (up or down). This means customers only pay for actual usage, reducing costs while still ensuring sufficient capacity is available for peak loads when needed.&lt;/P&gt;&lt;H5 id="toc-hId--1828701803"&gt;Does the number of technical objects in the SAP BTP ABAP Environment influence the costs incurred?&lt;/H5&gt;&lt;P&gt;No, the only metrics relevant for pricing are the system size, consisting of ACUs and HCUs. Other factors such as the number of users, number of requests, or number of technical objects have no impact on pricing.&lt;/P&gt;&lt;H2 id="toc-hId--976822596"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1173336101"&gt;Release Cycle and Roadmap&lt;/H2&gt;&lt;H5 id="toc-hId-2044908669"&gt;In which cycle do the new releases come?&lt;/H5&gt;&lt;P&gt;New releases are delivered quarterly (February, May, August, and November). New data center locations are added independently throughout the year.&lt;/P&gt;&lt;H5 id="toc-hId-1848395164"&gt;Is it possible to try out the upcoming features before the actual upgrade?&lt;/H5&gt;&lt;P&gt;With the pre-upgrade option, systems can receive the new functionality before the actual upgrade. This always takes place approximately two weeks before the actual upgrade. This option offers customers and partners a longer testing period. There are fixed &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-maintenance-windows-and-major-upgrade-windows-in/ba-p/13920833" target="_blank"&gt;maintenance and upgrade windows&lt;/A&gt; for both the upgrade and the pre-upgrade, which will be announced in advance.&lt;/P&gt;&lt;H5 id="toc-hId-1651881659"&gt;Where can I find the external product roadmap?&lt;/H5&gt;&lt;P&gt;The external product roadmap can be found in the &lt;A href="https://roadmaps.sap.com/board?range=FIRST-LAST&amp;amp;PRODUCT=73555000100800001164#Q3%202024" target="_blank" rel="noopener noreferrer"&gt;SAP Roadmap Explorer&lt;/A&gt;. Additional information about the releases and the roadmap is available in the &lt;A href="https://readiness-at-scale.enable-now.cloud.sap/pub/20230621_ras/index.html?show=book!BO_EC8330B09B97CDBE#slide!SL_534321C5FB7217A8" target="_blank" rel="noopener nofollow noreferrer"&gt;Release Navigator for SAP BTP&lt;/A&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-frequently-asked-questions/ba-p/14174603"/>
    <published>2025-08-11T08:55:40.186000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sonda-gallery-is-sap-certified-for-sap-btp-with-generative-ai-capabilities/ba-p/14177543</id>
    <title>SONDA Gallery is SAP Certified for SAP BTP with Generative AI Capabilities</title>
    <updated>2025-08-11T14:54:23.884000+02:00</updated>
    <author>
      <name>felipegrandi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4153</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Artificial intelligence is rapidly transforming enterprise software, bringing smarter automation, contextual insights, and enhanced user experiences to business-critical systems. In tax and accounting, where precision and compliance are essential, AI is helping organizations to manage complex data with greater agility and confidence. As regional SAP ICC representative and having worked closely with SAP Partners on their solutions' certification projects, I’ve seen firsthand how solutions that combine generative AI with robust platforms like SAP are redefining usability and performance. These innovations go beyond automation, delivering intelligent assistance tailored to the evolving demands of modern finance teams.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;A href="https://www.sonda.com/en/home" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;SONDA&lt;/STRONG&gt;&lt;/A&gt;, an SAP partner with headquarters in Chile and strong presence in Brazil, has been a driving force in digital transformation across the Americas. With expertise in tax management, SONDA delivers solutions to help companies navigate regulatory complexity and operational challenges through a portfolio of SAP-based solutions, automation and process integration.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Among these, &lt;STRONG&gt;SONDA Gallery&lt;/STRONG&gt; stands out as a tax-accounting solution for Brazil. Originally co-innovated with SAP in 2016 and built natively on SAP HANA, Sonda Gallery is designed to support Brazilian tax legislation with high performance and real-time data analysis. Evolving the solution across the time to adopt &lt;A href="https://www.sap.com/products/technology-platform.html" target="_self" rel="noopener noreferrer"&gt;&lt;STRONG&gt;SAP Business Technology Platform (SAP BTP) &lt;/STRONG&gt;&lt;/A&gt;and integrated with SAP Document and Reporting Compliance (SAP DRC), the solution now features generative AI capabilities, including a virtual assistant trained on product documentation. This assistant helps users navigate the system, summarize notes, translate content, and identify key deliverables—bringing a new level of intelligence to their tax management solution.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Sonda has been a long time SAP partner and has regularly certified its solutions with &lt;A href="http://sap.com/icc" target="_self" rel="noopener noreferrer"&gt;&lt;STRONG&gt;SAP Integration and Certification Center (SAP ICC)&lt;/STRONG&gt;&lt;/A&gt;&amp;nbsp;support. Since 2020 Sonda Gallery has been following SAP strategy toward taxes for Brazil and being &lt;EM&gt;SAP Certified&lt;/EM&gt;, initially through an SAP Tax Declaration Framework for Brazil (SAP TDF) scenario, and later through an SAP DRC for Brazil scenario. With the new &lt;A href="https://partnerbenefitscatalog.sap.com/Partner-Benefits-Catalog/Innovation/Certify-Your-Applications-Built-with-SAP-BTP-Utilizing-Generative-AI-Hub-Capabilities-%28BTP-EXT-GenAI%29/p/1001733" target="_self" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Built with SAP BTP Utilizing Generative AI Hub Capabilities (BTP-EXT-GenAI)&lt;/STRONG&gt;&lt;/A&gt;&amp;nbsp;certification scenario Sonda identified an opportunity to reposition and offer customers with a solution based on SAP BTP and using SAP Business AI, that is now tested against &lt;A href="https://www.sap.com/documents/2022/01/a8431b91-117e-0010-bca6-c68f7e60039b.html" target="_self" rel="noopener noreferrer"&gt;&lt;STRONG&gt;SAP Global AI Ethics Policy&lt;/STRONG&gt;&lt;/A&gt;&amp;nbsp;requirements.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;However, the certification criteria did not initially account for Sonda Gallery’s ABAP-based authentication model, which relied on SAP Logon Tickets and classic ABAP objects. Rather than delay the process, SONDA responded with remarkable speed and precision. In just two weeks, the company re-engineered Sonda Gallery’s authentication to fully adopt SAP BTP Cloud Identity services, a modern and secure mechanism native to SAP BTP platform. This migration not only met the certification requirements but also enhanced the solution’s flexibility, to provide enhanced identity and access management (IAM) across both SAP and Microsoft environments.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Completing the certification on time was a testament to SONDA’s technical agility and deep understanding of SAP architecture. It also reinforced the company’s commitment to delivering future-ready solutions that meet the highest standards of security, usability, and compliance, tested through &lt;STRONG&gt;SAP Certification&lt;/STRONG&gt;. With this achievement, SONDA Gallery is now officially &lt;STRONG&gt;&lt;EM&gt;SAP Certified with SAP Business AI&lt;/EM&gt;&lt;/STRONG&gt;, positioning it as a solution that is taking advantage of the latest technologies provided by SAP for the benefit of our joint customers.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sonda-gallery-is-sap-certified-for-sap-btp-with-generative-ai-capabilities/ba-p/14177543"/>
    <published>2025-08-11T14:54:23.884000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-celebrating-the-winners-and-innovation-in/ba-p/14172106</id>
    <title>SAP BTP Hackathon at SAPHILA 2025: Celebrating the Winners and Innovation in Action</title>
    <updated>2025-08-13T09:12:43.763000+02:00</updated>
    <author>
      <name>winklero</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/426853</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;From Ideation to Demo Jam: A Journey of Collaboration&lt;/STRONG&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT color="#000000"&gt;As outlined in the previous blog, the hackathon was more than just a competition, it was a journey. Eighteen teams, representing a broad cross-section of AFSUG members, embarked on an eight-week sprint, supported by SAP BTP experts and coaches. The focus was on building real-world solutions using SAP BTP components like SAP Build, SAP HANA Cloud, SAP Integration Suite and ABAP Cloud amongst other SAP BTP based Services &amp;amp; Solutions.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;After intensive enablement and development sessions, three teams emerged as finalists and were invited to present their solutions live at SAPHILA 2025’s Demo Jam. The energy in the room was palpable as each team showcased how SAP BTP could be harnessed to solve pressing business challenges.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_9-1754393553994.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296559i65EFF3CD8612C2A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_9-1754393553994.png" alt="winklero_9-1754393553994.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;And the Winner Is… PwC South Africa!&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_0-1754393299694.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296543iCE5C674A6617840E/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_0-1754393299694.jpeg" alt="winklero_0-1754393299694.jpeg" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;In a closely contested finale, the SAPHILA audience voted PwC South Africa as the overall winner for their AI-driven legal services platform “Legal Ease”.&amp;nbsp;This solution stood out for its innovative use of AI to simplify legal document processing and understanding, a pain point for many businesses and consumers alike. “Legal Ease” enables users to scan and summarize complex contracts, ask questions in natural language, and receive clear, actionable insights. The platform even supports translation into local languages and integrates with knowledge bases for related services. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;What impressed both the jury and the audience was not just the technical sophistication, but the clear business value: “Legal Ease” addresses real frustrations around contract transparency, billing and accessibility, with the potential to transform how legal services are delivered in Africa and beyond.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Honouring the Finalists: Debswana Diamond Company and Bell Equipment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Let’s not forget the other two finalists, who also delivered outstanding solutions:&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Debswana Diamond Company&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;tackled overtime management with an AI-powered assistant that streamlines scheduling, reduces costs and supports employee well-being.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Bell Equipment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;automated shipment tracking and document processing, helping to prevent stock shortages and improve logistics efficiency.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Both teams demonstrated the breadth of innovation possible with SAP BTP and set a high bar for future Hackathons.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_2-1754393465394.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296552i4ABBA6DEF33DF299/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_2-1754393465394.png" alt="winklero_2-1754393465394.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Reflections and What’s Next&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The Hackathon’s main objective was to foster deep collaboration between SAP and its customers, giving local teams a hands-on opportunity to explore and build with SAP BTP.&amp;nbsp;The quality and diversity of solutions, especially the creative use of AI and automation, highlight the immense potential within the African SAP community.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Amanda Gibbs, CEO of AFSUG, summed it up perfectly:&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&lt;SPAN&gt;“It is inspiring to witness what can be achieved in just eight weeks using SAP BTP;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&lt;SPAN&gt;we’ve seen incredible progress and innovation.”&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Join the Conversation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Congratulations again to all teams who participated and especially to PwC South Africa for their winning solution! If you were inspired by the SAP BTP Hackathon or have thoughts on how SAP BTP can drive innovation in your organization, I’d love to hear from you in the comments.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;And if you missed out this year,&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;keep an eye out for future SAP BTP Hackathons - this is just the beginning!&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_3-1754393500871.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296553iB355DF2E2218111A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_3-1754393500871.png" alt="winklero_3-1754393500871.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_4-1754393507094.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296554i19D3E337CCE34F01/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_4-1754393507094.png" alt="winklero_4-1754393507094.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_5-1754393513173.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296555i1F8DCACD879B51EE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_5-1754393513173.png" alt="winklero_5-1754393513173.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_8-1754393531840.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296558iDD76EEFFC71232AF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_8-1754393531840.png" alt="winklero_8-1754393531840.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="winklero_7-1754393525555.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296557iBED54F1BAA1636EB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_7-1754393525555.png" alt="winklero_7-1754393525555.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-celebrating-the-winners-and-innovation-in/ba-p/14172106"/>
    <published>2025-08-13T09:12:43.763000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/deploy-a-react-app-to-sap-btp-cloud-foundry/ba-p/14177342</id>
    <title>Deploy a React App to SAP BTP Cloud Foundry</title>
    <updated>2025-08-13T10:59:21.057000+02:00</updated>
    <author>
      <name>MaheshSirsat1708</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1495997</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;While working on a recent requirement, we needed to deploy a simple React application to the SAP Business Technology Platform (BTP) Cloud Foundry environment.&lt;/P&gt;&lt;P&gt;In this blog, we will share a step-by-step guide to creating a basic React application and deploying it to the SAP BTP Cloud Foundry environment. This tutorial is beginner-friendly and focuses on setting up an application without authentication, making it an ideal starting point before adding advanced features.&lt;/P&gt;&lt;H2 id="toc-hId-1737031491"&gt;&lt;SPAN&gt;Step 1: Create a React App&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Creating a new React app using the command:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npx create-react-app myreactapp&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahesh1708_0-1754904817284.png" style="width: 439px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299253i4EC8D22A44329063/image-dimensions/439x280?v=v2" width="439" height="280" role="button" title="Mahesh1708_0-1754904817284.png" alt="Mahesh1708_0-1754904817284.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This will create a folder named '&lt;STRONG&gt;myreactapp&lt;/STRONG&gt;' with all necessary files and configurations for a basic React app.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Navigating into the project directory using:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;cd myreactapp&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1540517986"&gt;&lt;SPAN&gt;Step 2: Run the React App Locally&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;I ran the following command in the project directory to make sure the app was working:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This starts the development server and opens the React app in our default web browser.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahesh1708_1-1754904868653.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299254i4F907CF64D1A3D3A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mahesh1708_1-1754904868653.png" alt="Mahesh1708_1-1754904868653.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahesh1708_2-1754904874720.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299255iB5CD2635D34D2FFC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mahesh1708_2-1754904874720.png" alt="Mahesh1708_2-1754904874720.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1344004481"&gt;&lt;SPAN&gt;Step 3: Build the React App for Production&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;To prepare our app for deployment, we create a production build using:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;npm run build&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;This command generates a 'build' folder that contains optimized and minified files ready for deployment.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahesh1708_3-1754904925467.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299256iE0C10CA524122EB1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mahesh1708_3-1754904925467.png" alt="Mahesh1708_3-1754904925467.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1147490976"&gt;&lt;SPAN&gt;Step 4: Create a manifest.yaml File&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Creating a file named 'manifest.yaml' in the project root directory with the following content:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;---
applications:
  - name: myreact app
    memory: 128M
    buildpacks:
      - staticfile_buildpack
    path: build&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahesh1708_4-1754904977469.png" style="width: 484px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299257iD722D52BCB8A782D/image-dimensions/484x266?v=v2" width="484" height="266" role="button" title="Mahesh1708_4-1754904977469.png" alt="Mahesh1708_4-1754904977469.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This file defines the application name, memory allocation, buildpack type, and specifies the path to the build directory.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-950977471"&gt;&lt;SPAN&gt;Step 5: Login to Cloud Foundry and Deploy&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Login to Cloud Foundry environment using:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;cf login&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Once logged in, selecting correct organization and space. Then deploy your application using:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;cf push&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahesh1708_5-1754905009887.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299258i0FFDBD9134B56085/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mahesh1708_5-1754905009887.png" alt="Mahesh1708_5-1754905009887.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahesh1708_6-1754905016178.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299259i7600C2456756AAE1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mahesh1708_6-1754905016178.png" alt="Mahesh1708_6-1754905016178.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-754463966"&gt;&lt;SPAN&gt;Step 6: Access App from SAP BTP Cockpit&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Open SAP BTP Cockpit and navigate to: Cloud Foundry → Spaces → [ Space] → Applications. We select our deployed application and, in the overview tab, find the &lt;STRONG&gt;Application Routes&lt;/STRONG&gt; section. Clicking the provided URL opens our React app.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahesh1708_7-1754905045435.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299260iFEF5B423A187CE22/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mahesh1708_7-1754905045435.png" alt="Mahesh1708_7-1754905045435.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahesh1708_8-1754905051126.png" style="width: 652px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299261i7109C9D182E344FF/image-dimensions/652x223?v=v2" width="652" height="223" role="button" title="Mahesh1708_8-1754905051126.png" alt="Mahesh1708_8-1754905051126.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahesh1708_9-1754905063642.png" style="width: 611px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299262i4E9FEEF8C6117064/image-dimensions/611x313?v=v2" width="611" height="313" role="button" title="Mahesh1708_9-1754905063642.png" alt="Mahesh1708_9-1754905063642.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As no authentication is configured, the app will open directly without requiring login.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahesh1708_10-1754905083180.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299263i6E2320C517DD0C6B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Mahesh1708_10-1754905083180.png" alt="Mahesh1708_10-1754905083180.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-557950461"&gt;&lt;SPAN&gt;Project Folder Structure&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;After creating and building ourReact application, your project directory will contain the following files and folders:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;README.md
build
manifest.yaml
node_modules
package-lock.json
package.json
public
src&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;- `build`: Contains the production-ready version of your app.&lt;BR /&gt;- `manifest.yaml`: Deployment configuration for Cloud Foundry.&lt;BR /&gt;- `node_modules`: Installed project dependencies.&lt;BR /&gt;- `package-lock.json` and `package.json`: Dependency and project metadata.&lt;BR /&gt;- `public`: Static files like `index.html`.&lt;BR /&gt;- `src`: Your React source code.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In this tutorial, we covered the entire journey of creating a React application locally, building it for production, and deploying it to SAP BTP Cloud Foundry. We now have a working application accessible from the cloud without any authentication requirements.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/deploy-a-react-app-to-sap-btp-cloud-foundry/ba-p/14177342"/>
    <published>2025-08-13T10:59:21.057000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/build-a-web-app-and-connect-to-s-4hana-with-sap-integration-suite/ba-p/14179607</id>
    <title>Build A Web App and Connect to S/4HANA with SAP Integration Suite</title>
    <updated>2025-08-13T12:45:21.973000+02:00</updated>
    <author>
      <name>alexanderroan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/561103</uri>
    </author>
    <content>&lt;P&gt;A big part of the magic behind AI, advanced analytics, and {insert tech buzzword here} is the humble API!&lt;/P&gt;&lt;P&gt;I remember the excitement about service-oriented architecture in the late 1990s and early 2000s. Back when most organisations had 'fat' ERPs with extensive customisation, the idea that we could split things up into different apps and connect in a standardised way was refreshing.&lt;/P&gt;&lt;P&gt;I recently noticed a &lt;A href="https://community.sap.com/t5/sap-codejam/sap-codejam-connecting-systems-and-services-using-sap-integration-suite/ec-p/14110686#M848" target="_self"&gt;SAP CodeJam&lt;/A&gt;&amp;nbsp;on the SAP community events calendar that involved connecting systems to S/4HANA using SAP Integration Suite.&lt;/P&gt;&lt;P&gt;I thought it might be fun to build a web app and see if I could successfully connect it to S/4HANA.&lt;/P&gt;&lt;P&gt;A basic understanding of frontend to enterprise backend via cloud architecture is useful for everyone; business experts, technology experts, and people experts&lt;/P&gt;&lt;P&gt;The article is broken into three parts: an introduction, a step-by-step explanation for generalists, and my build/test notes for anyone working on something similar. The third section includes details on all the test tools, and configuration settings.&lt;/P&gt;&lt;P&gt;A couple of quick disclaimers:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;I'm not an integration expert:&lt;UL&gt;&lt;LI&gt;I don't look at integration suite vs. other solutions&lt;/LI&gt;&lt;LI&gt;I don't cover best practices, typical challenges, good use cases&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;My solution here is likely not optimal:&lt;UL&gt;&lt;LI&gt;It's just a vanilla HTML, CSS, JS frontend&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;---&lt;/P&gt;&lt;H1 id="toc-hId-1608011118"&gt;Part 1: introduction&lt;/H1&gt;&lt;H2 id="toc-hId-1540580332"&gt;From web app to S/4HANA&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300221i6AE07F957A2E6A24/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-1.png" alt="integration-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The plan:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The frontend is a web page to search for data from within S/4HANA&lt;/LI&gt;&lt;LI&gt;The web server handles communication between the frontend and SAP Cloud&lt;/LI&gt;&lt;LI&gt;SAP Integration Suite will route and format the message for S/4HANA&lt;/LI&gt;&lt;LI&gt;S/4HANA is the source of data.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Tools/technology:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Utilise the free trial account for SAP BTP and Integration Suite&lt;/LI&gt;&lt;LI&gt;Build the frontend and web app ourselves&lt;/LI&gt;&lt;LI&gt;We can't access S/4HANA. However, the CodeJam provides a S/4HANA mock server that mimics the behaviour of an API within S/4HANA.&lt;/LI&gt;&lt;LI&gt;If we use a mock system, we will need to run it locally. So, adjusting the architecture.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300223iF83EF9D1F958295D/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-2.png" alt="integration-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This adds SAP Cloud Connector which allows an "on-premise" application to connect with SAP Cloud.&lt;/P&gt;&lt;H2 id="toc-hId-1344066827"&gt;The front end&lt;/H2&gt;&lt;P&gt;The completed app offers a summary view and a detailed view. Here's a short &lt;A href="https://youtu.be/wNgAwEfLyX0" target="_self" rel="nofollow noopener noreferrer"&gt;screen recording&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1276636041"&gt;Summary view&lt;/H3&gt;&lt;P&gt;This is a screenshot from the web browser (firefox).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-3.png" style="width: 986px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300227i15B2BBB969C15471/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-3.png" alt="integration-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The top part of the page has a search form that allows you to search for a business partner. The bottom part of the page shows the results with a selection of key fields in a card style layout.&lt;/P&gt;&lt;P&gt;The mock system we are using allows for four different search possibilities:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Search for a single business partner by number&lt;/LI&gt;&lt;LI&gt;Search for all business partners&lt;/LI&gt;&lt;LI&gt;Search for a single business partner by number, including address details&lt;/LI&gt;&lt;LI&gt;Search for all business partners, including address details.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1080122536"&gt;Detail view&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300230iFE51F5F8AD6D02A5/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-4.png" alt="integration-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The detail view shows the results in a table. This table has a horizontal scroll bar, which can be adjusted to view all the fields. The table includes 'raw' results, so there are some 'technical' entries like `[object Object]` and some blanks, which I think is fine for this mock up stage.&lt;/P&gt;&lt;H3 id="toc-hId-883609031"&gt;Responsive view&lt;/H3&gt;&lt;P&gt;For tablets and mobile, the card view resizes with the browser window.&lt;/P&gt;&lt;P&gt;![the front end - summary view on mobile](/assets/images/blog/integration/integration-5.png)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-5.png" style="width: 364px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300231i01B740227C1E13DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-5.png" alt="Integration-5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I'll come back to how this front end was built after running through the integration flow.&lt;/P&gt;&lt;H2 id="toc-hId-558012807"&gt;S/4HANA&lt;/H2&gt;&lt;P&gt;The value of this flow is being able to design and build a frontend to access real-time, trusted business data from S/4HANA in a standardised way. In a real-world example, our frontend could be an employee portal or supplier portal.&lt;/P&gt;&lt;P&gt;S/4HANA is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP's enterprise software for large organisations. It handles processes such as purchasing, manufacturing, sales, shipping, finance, etc.&lt;/LI&gt;&lt;LI&gt;An evolution from their earlier ERP products (R/1, R/2, R/3, ECC).&lt;/LI&gt;&lt;LI&gt;A complex platform comprising thousands of programs, tables, and customisations used by many large enterprises.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;S/4HANA already comes with a web frontend called Fiori, which includes thousands of apps. However, in this example imagine we are building something for a casual user that does not require the full capability of Fiori. Or, just consider it's for fun.&lt;/P&gt;&lt;P&gt;Further reading on S/4HANA:&lt;/P&gt;&lt;P&gt;[SAP help - S/4HANA](&lt;A href="https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE?locale=en-US&lt;/A&gt;)&lt;/P&gt;&lt;H2 id="toc-hId-361499302"&gt;Business partner&lt;/H2&gt;&lt;P&gt;The mock server simulates one of the business partner APIs for S/4HANA.&lt;/P&gt;&lt;P&gt;A business partner is a reference or master data record that represents a third party that an organisation works with. This includes customers, suppliers, and employees.&lt;/P&gt;&lt;P&gt;Business partner master data is organised by key fields such as "category" and "role".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300232iDF2DB3D934F8EECC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-6.png" alt="Integration-6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;All business partners have general data such as name, address, etc., then they have role-specific data, which may include, but are not limited to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Purchasing data&lt;/LI&gt;&lt;LI&gt;Sales data&lt;/LI&gt;&lt;LI&gt;Accounting data&lt;/LI&gt;&lt;LI&gt;And so on.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;To understand how business partner data is used, consider a typical ERP process like order-to-cash:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300233i882EADCDD4912385/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-7.png" alt="Integration-7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This is a summary of the order to cash process. During sales, deliveries, and billing, information from the business partner master record is utilised.&lt;/P&gt;&lt;P&gt;The business partner master stores long-term stable information about the customer. It's used for both reference and validation during transaction entry.&lt;/P&gt;&lt;P&gt;This ensures there is consistency across transactions over time in terms of how they reference business partners. This is critical for reporting. Consider comparability, aggregation, etc.&lt;/P&gt;&lt;P&gt;Further reading on business partners:&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE/74b0b157c81944ffaac6ebc07245b9dc/45653b5856de0846e10000000a441470.html?locale=en-US&amp;amp;version=LATEST" target="_self" rel="noopener noreferrer"&gt;Help - Business Partner&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-164985797"&gt;S/4HANA Architecture&lt;/H2&gt;&lt;P&gt;The mock server simulates an S/4HANA API. Let's look inside S/4HANA.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300236i8B0B2CC5994D164A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-8.png" alt="Integration-8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Starting from the top right, S/4HANA has two primary ways for users to interact. The traditional SAP graphical user interface (GUI) and the modern Fiori web-based user interface.&lt;/P&gt;&lt;P&gt;I've drawn APIs to the left of these. The APIs allow applications to interact with S/4HANA.&lt;/P&gt;&lt;P&gt;Consider the data model in S/4HANA in two separate parts. The first is the traditional HANA database. This is where master data and transactional data are stored. On top of this is the virtual data model. This consists of core data services views. This is a way to define different sets of data to meet the needs of APIs and Fiori Apps.&lt;/P&gt;&lt;P&gt;In this example, we are using a business partner data API. Behind the scenes, the API sources data from CDS views, which in turn connect to the HANA DB tables.&lt;/P&gt;&lt;P&gt;---&lt;/P&gt;&lt;H1 id="toc-hId--160610427"&gt;Part 2: step by step walkthrough (for everyone)&lt;/H1&gt;&lt;P&gt;In this section, I'll summarise the process and technology involved at each step.&lt;/P&gt;&lt;H2 id="toc-hId-119213144"&gt;Point 1: Web communication&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-map-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300239i27A3BC33FE94D8D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-map-1.png" alt="integration-map-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Building an integration flow between web connected applications relies on protocols and standards for web communication. Let's run through the main concepts.&lt;/P&gt;&lt;H3 id="toc-hId--370703368"&gt;Client/server&lt;/H3&gt;&lt;P&gt;The terms client and server are used to describe the requester and receiver. For example, the web browser on a computer is a client, and google search is a server.&lt;/P&gt;&lt;P&gt;Internet communications use the HTTP protocol.&lt;/P&gt;&lt;P&gt;![HTTP communication](/assets/images/blog/integration/integration-10.png)&lt;/P&gt;&lt;P&gt;Hypertext Transfer Protocol (HTTP) is a standard protocol for communication between clients and web servers. Web pages are written in Hypertext Markup Language (HTML).&lt;/P&gt;&lt;P&gt;The term Uniform Resource Locator (URL) is used to describe an address.&lt;/P&gt;&lt;H3 id="toc-hId--567216873"&gt;The structure of a URL&lt;/H3&gt;&lt;P&gt;URLs have five key parts:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Protocol: `http://`&lt;/LI&gt;&lt;LI&gt;Domain: `&lt;A href="http://www.example.com" target="_blank" rel="noopener nofollow noreferrer"&gt;www.example.com&lt;/A&gt;`&lt;/LI&gt;&lt;LI&gt;Path: `/pages/`&lt;/LI&gt;&lt;LI&gt;Query string: `?id=1&amp;amp;cat=test`&lt;/LI&gt;&lt;LI&gt;Fragment: `#article` (an internal page reference, often not present)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;When it comes to APIs, the query string provides the ability to specify parameters for search and filter. In this case, the query string could include a business partner number.&lt;/P&gt;&lt;H3 id="toc-hId--763730378"&gt;HTTPS&lt;/H3&gt;&lt;P&gt;HTTPS uses the HTTP protocol, but it adds a secure transport layer. HTTPS means the HTTP message is encrypted before transmission.&lt;/P&gt;&lt;P&gt;The only part that isn't encrypted is the domain name.&lt;/P&gt;&lt;H3 id="toc-hId--960243883"&gt;Internet protocol (IP) address&lt;/H3&gt;&lt;P&gt;While URLs are designed to be human-readable. An IP is a numerical label like "192.0.2.1" that identifies a computer or network.&lt;/P&gt;&lt;P&gt;URLs are used for navigation. IPs are used for routing and communication. They identify a specific device on a network (laptop, server, etc.).&lt;/P&gt;&lt;P&gt;An IP address can be used in place of a domain name with HTTP and HTTPS&lt;/P&gt;&lt;P&gt;"&lt;A href="http://192.0.2.1" target="_blank" rel="noopener nofollow noreferrer"&gt;http://192.0.2.1&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;While an IP address represents a computer. The term "port" is used to specific a specific input/output location.&lt;/P&gt;&lt;P&gt;Ports are identified using 4 digits.&lt;/P&gt;&lt;P&gt;"http://{server}:{port}"&lt;BR /&gt;"&lt;A href="http://192.0.2.1:1000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://192.0.2.1:1000&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;A server is often referred to by 'host'&lt;/P&gt;&lt;P&gt;"http://{host}:{port}"&lt;/P&gt;&lt;P&gt;You can access ports on your own computer by using its IP or "localhost"&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:1000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:1000&lt;/A&gt;"&lt;/P&gt;&lt;H3 id="toc-hId--1156757388"&gt;From domain to IP&lt;/H3&gt;&lt;P&gt;The web browser uses a domain lookup service to translate a URL into an IP address.&lt;/P&gt;&lt;P&gt;"&lt;A href="http://www.example.com" target="_blank" rel="noopener nofollow noreferrer"&gt;http://www.example.com&lt;/A&gt;" becomes "&lt;A href="http://192.0.2.1" target="_blank" rel="noopener nofollow noreferrer"&gt;http://192.0.2.1&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;This is called the Domain Name System (DNS). Popular look up services include: Cloudflare, Google DNS, and OpenDNS.&lt;/P&gt;&lt;H3 id="toc-hId--1353270893"&gt;Messages&lt;/H3&gt;&lt;P&gt;The communications themselves can be thought of as messages. They contain a header and a body.&lt;/P&gt;&lt;P&gt;The header includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The URL&lt;/LI&gt;&lt;LI&gt;The method, most commonly GET and POST&lt;/LI&gt;&lt;LI&gt;GET sends a request without a body&lt;/LI&gt;&lt;LI&gt;POST sends a request with a body&lt;/LI&gt;&lt;LI&gt;Additional information on the content type and authorisation&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The body includes detailed content. For example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If you fill in a form on a web page, it would include the form data&lt;/LI&gt;&lt;LI&gt;If a server returns a web page, it would include the web page.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1549784398"&gt;Server Responses&lt;/H3&gt;&lt;P&gt;When a server receives a request, it responds with a status code and a body. Status codes include '200' representing "ok" and '404' representing 'Not Found'.&lt;/P&gt;&lt;P&gt;(404 has definitely reached meme levels of fame!).&lt;/P&gt;&lt;P&gt;The body that's returned depends on the status and the server's purpose.&lt;/P&gt;&lt;H3 id="toc-hId--1746297903"&gt;Real life examples&lt;/H3&gt;&lt;P&gt;Consider visiting the BBC website from a web browser, a simple GET request would return the home page.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300240i98D1E11DB146673D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-1.png" alt="Integration-10-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the other hand, consider logging into the BBC website. In this case, the browser sends the login name and password. Therefore, a POST request is used, and the request includes a body.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300241i9C9D28EC27350605/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-2.png" alt="Integration-10-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1942811408"&gt;Web connectivity and SAP&lt;/H3&gt;&lt;P&gt;Most SAP applications can use HTTPS communication. This is possibly one of the simplest ways we could define "Cloud" strategy.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;S/4HANA Cloud Public and S/4HANA Cloud Private can both utilise HTTPS&lt;/LI&gt;&lt;LI&gt;SAP BTP which includes SAP Integration Suite can utilise HTTPS&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Outside the SAP Cloud, we have systems like S/4HANA On-Premise. This is usually at an SAP customer's data centre or their 3rd party hosting service provider's data centre. On premise systems are usually not directly connected to the public internet. This is where SAP provide Cloud Connector to create a secure tunnel between on-premise and SAP Cloud.&lt;/P&gt;&lt;H3 id="toc-hId--1971141222"&gt;HTTP data transfer standards&lt;/H3&gt;&lt;P&gt;There are further standards as to how data is transferred using HTTP.&lt;/P&gt;&lt;P&gt;There are multiple standards for data transfer with HTTP. One of the earlier and more common standards is REST (Representational State Transfer).&lt;/P&gt;&lt;P&gt;Many SAP APIs utilise OData (Open data transfer protocol).&lt;/P&gt;&lt;H2 id="toc-hId--1874251720"&gt;Point 2: S/4HANA business partner API mock server&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300244i0C0E251EDEC4B8A1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-2.png" alt="Integration-map-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt;&amp;nbsp;Mimic the business partner API of an S/4HANA system.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A simple JavaScript server that can be run locally.&lt;/P&gt;&lt;P&gt;The mock server provided by the SAP community provides a simple way to simulate the design and test of an S/4HANA API.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The mock server mimics the business partner (A2X) API&lt;/LI&gt;&lt;LI&gt;This is one of the S/4HANA APIs (programmed inside S/4HANA)&lt;/LI&gt;&lt;LI&gt;In the case of the mock server, it's a JavaScript server&lt;/LI&gt;&lt;LI&gt;The mock server has limited functionality, it supports:&lt;UL&gt;&lt;LI&gt;Sample data for a few business partners&lt;/LI&gt;&lt;LI&gt;Retrieve all business partners&lt;/LI&gt;&lt;LI&gt;Retrieve a single business partner&lt;/LI&gt;&lt;LI&gt;Include additional address data in the response.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Installing and running the mock server is simple. The instructions are in part 3. When we run it our computer a local address is returned.&lt;/P&gt;&lt;P&gt;On my computer, it runs on "&lt;A href="http://localhost:3005/" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;This is the address for the Business Partner API. Entering this address in the web browser gives the following response:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300247i85F8DBD3A3C0907C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-3.png" alt="Integration-10-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The first item refers to the business partner API. This is the first point in the exercise where we can see the path for the Business Partner API:&lt;/P&gt;&lt;P&gt;"/sap/opu/odata/sap/API_BUSINESS_PARTNER"&lt;/P&gt;&lt;P&gt;The API path is just appended to the host, so:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;Clicking on the link in the browser shows additional information about the API. Note that the only services listed are A_BusinessPartner and A_BusinessPartnerAddress.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300248iD5D9B28D88C78E83/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-4.png" alt="Integration-10-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When building an integration flow, the mix of host names, port names, and paths can quickly become confusing. It's useful to track these as we go.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300249i78F4EB26BF7E6792/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-5.png" alt="Integration-10-5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Further reading on the mock server:&lt;/P&gt;&lt;P&gt;- &lt;A href="https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam" target="_self" rel="nofollow noopener noreferrer"&gt;The CodeJam repo&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://github.com/SAP-archive/cloud-s4-sdk-book/tree/mock-server" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://learning.sap.com/learning-journeys/develop-advanced-extensions-with-sap-cloud-sdk/exercise-setting-up-the-mock-server_c734679d-9ce9-4905-82c3-ed13603a671d" target="_self" rel="noopener noreferrer"&gt;SAP Learning&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--2070765225"&gt;Point 3: Application programming interface (API&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300253i7FD22496BC81C5DF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-3.png" alt="Integration-map-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Provide a standard way to define and operate services for an application that can be consumed by other applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; SAP have a large catalogue of standard APIs that come with S/4HANA.&lt;/P&gt;&lt;H3 id="toc-hId-1734285559"&gt;The Business partner API&lt;/H3&gt;&lt;P&gt;The API that was introduced under the S/4HANA business partner mock server is called 'business partner (A2X)'. It is a SAP standard API that uses the OData V2 standard.&lt;/P&gt;&lt;P&gt;While HTTP is the communication protocol. OData is an open standard related to the data.&lt;/P&gt;&lt;P&gt;When viewing the API details in the web browser, the display was JSON. This is JavaScript Object Notation, which is used in Odata. Point 5. in the flow will show more detail on this API.&lt;/P&gt;&lt;P&gt;Further reading on APIs and Odata:&lt;/P&gt;&lt;P&gt;-&amp;nbsp;&lt;A href="https://spec.openapis.org/oas/latest.html" target="_self" rel="nofollow noopener noreferrer"&gt;Open API spec&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://www.odata.org/" target="_self" rel="nofollow noopener noreferrer"&gt;OData&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1831175061"&gt;Point 4: Business technology platform (BTP)&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300256iC627FB8F7F6F5B78/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-4.png" alt="Integration-map-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Skipping Cloud Connector for now, brings us to BTP. Details from BTP are needed to set up Cloud Connector.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Enable customers to manage and build on SAP applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A set of tools encompassing various capabilities and environments.&lt;/P&gt;&lt;P&gt;SAP offer a free trial for BTP, which can be used to build and test integration flows. Instructions on how to register and set up BTP are included in part 3.&lt;/P&gt;&lt;P&gt;The BTP cockpit is where we can search for and set up different services.&lt;/P&gt;&lt;P&gt;It supports multiple infrastructures and runtimes so you can manage/build various types of applications from traditional SAP ABAP to web apps.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Supports multiple infrastructures/runtimes &amp;amp; languages, including:&lt;UL&gt;&lt;LI&gt;Cloud Foundry: develop new apps/services, multiple languages, runtimes&lt;/LI&gt;&lt;LI&gt;ABAP: extend ABAP based products (S/4HANA)&lt;/LI&gt;&lt;LI&gt;Kyma: Kubernetes to develop/run cloud-native apps&lt;/LI&gt;&lt;LI&gt;Neo: HTML5, Java, and HANA extended apps&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;BTP has multiple regions and infrastructure providers&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Regional deployment&lt;UL&gt;&lt;LI&gt;Provided by SAP or Infrastructure-as-a-Provider (IaaS)&lt;/LI&gt;&lt;LI&gt;AWS, Azure, Google Cloud, Alibaba Cloud&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;The key features of BTP include managing and building:&lt;UL&gt;&lt;LI&gt;Compose business processes&lt;/LI&gt;&lt;LI&gt;Application development and automation&lt;/LI&gt;&lt;LI&gt;Build and extend SAP applications&lt;/LI&gt;&lt;LI&gt;Integrate data&lt;/LI&gt;&lt;LI&gt;Analytics&lt;/LI&gt;&lt;LI&gt;Intelligent technologies&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;SAP Integration Suite utilises the Cloud Foundry environment. After we set up Business Technology Suite and SAP Intelligent Suite, a Cloud Foundry API endpoint will be provided in BTP.&lt;/P&gt;&lt;P&gt;In my case, this is "&lt;A href="https://api.cf.ap21.hana.ondemand.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.cf.ap21.hana.ondemand.com&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300258i04DE1404995C9368/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-11.png" alt="integration-11.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1634661556"&gt;Point 5. Business Accelerator Hub&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300259iB0C161A99F8D04C2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-5.png" alt="Integration-map-5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Provides a central source of information on SAP's APIs&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A web page with API details. Highly integrated with BTP.&lt;/P&gt;&lt;P&gt;Business Accelerator hub is a web resource from SAP. I've drawn it inside BTP as it closely relates to BTP content. It's a central repository for APIs from SAP &amp;amp; selected partners.&lt;/P&gt;&lt;P&gt;&lt;A href="https://api.sap.com/" target="_self" rel="noopener noreferrer"&gt;api.sap.com&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Main features&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Discover, explore, and test APIs&lt;/LI&gt;&lt;LI&gt;Consume integration and workflow content&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The Business Partner (A2X) API that is tested here can be viewed on Business Accelerator Hub.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Login to business accelerator hub&lt;/LI&gt;&lt;LI&gt;Search 'business partner (A2X)'&lt;/LI&gt;&lt;LI&gt;Click on the entry in the results&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300265iA01898E1E22775A1/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-12.png" alt="integration-12.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Some features of business accelerator hub:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Try out the APIs (sandbox environment)&lt;UL&gt;&lt;LI&gt;Useful to view a sample of the response&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;View the API capabilities:&lt;UL&gt;&lt;LI&gt;'API Reference' tab, scroll down to 'Business Partner' and click on it&lt;/LI&gt;&lt;LI&gt;This shows the list of capabilities of the API&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;View the API specification&lt;UL&gt;&lt;LI&gt;'Overview' tab, scroll down to 'API Specification' and click on it&lt;/LI&gt;&lt;LI&gt;Download OpenAPI JSON&lt;/LI&gt;&lt;LI&gt;View in web browser, text editor to see extensive details&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The API hub is a useful resource in terms of discovering and designing potential API use.&lt;/P&gt;&lt;P&gt;From the mock server specification, we know it's limited to only a few capabilities. We can find the path names for each of these on API hub:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-12-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300267iB9991B6EA91D1FC9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-12-1.png" alt="Integration-12-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This confirms the mock server only has a small fraction of the full business partner (A2X) capabilities. This makes sense given how extensive business partner data is in SAP. It's noteworthy that the mock server only supports 'read' activities. We can't test creating or changing a business partner.&lt;/P&gt;&lt;P&gt;The details of each of these requests can be viewed by clicking into them.&lt;/P&gt;&lt;P&gt;While there are three request paths. The address path can be added to the "all business partners" or "single business partner", so there are four possibilities:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;All business partners&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;All business partners with address&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner/to_BusinessPartnerAddress"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Single business partner&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner('{BusinessPartner}')"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Single business partner with address&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerAddress"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These paths describe services of the API and are appended to the base URL.For example:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerAddress" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerAddress&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;The correct terminology for these URLs:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Base URL/host: &lt;A href="http://localhost:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Base path: /sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/LI&gt;&lt;LI&gt;Entity set: /A_BusinessPartner&lt;/LI&gt;&lt;LI&gt;Key Access: ('1234567')&lt;/LI&gt;&lt;LI&gt;Navigation property: /to_BusinessPartnerAddress&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;"('{business partner}')" in the example is a placeholder for a business partner number.&lt;/P&gt;&lt;P&gt;Updating the flow diagram with these details:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-12-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300270i7171352709F09CC3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-12-2.png" alt="Integration-12-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1438148051"&gt;Point 6: SAP Integration Suite&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300271i8FBBDE02F7A3CF64/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-6.png" alt="Integration-map-6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Design and manage communications between applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A service of SAP BTP.&lt;/P&gt;&lt;P&gt;SAP Integration Suite is one of the services available in Business Technology Platform. Therefore, a prerequisite is to register for the BTP free trial.&lt;/P&gt;&lt;P&gt;SAP Integration Suite can then be found under 'Services Marketplace'.&lt;/P&gt;&lt;P&gt;SAP Intelligent suite can be used for Cloud, on-premise, and hybrid scenarios. It includes pre-built, best-practice integration packs&lt;/P&gt;&lt;P&gt;Technically, it's a Java based app, and utilises the Apache Camel framework.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300274iC625747A413A6229/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-13.png" alt="Integration-13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The steps to install and set up are covered in part 3. After the initial set up you can navigate to the application.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-14.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300276i32A7F841634A21EB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-14.png" alt="Integration-14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For this demo/test, the two key menus within Integration Suite are:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Design &amp;gt; Integrations and APIs&lt;/LI&gt;&lt;LI&gt;Monitor &amp;gt; Integrations and APIs&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The design area allows us to create an integration flow which involves:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Specifying source or 'sender' system&lt;/LI&gt;&lt;LI&gt;Specifying target or 'receiver' system&lt;/LI&gt;&lt;LI&gt;Adding flow steps&lt;/LI&gt;&lt;LI&gt;Modify message header&lt;/LI&gt;&lt;LI&gt;Modify message contents&lt;/LI&gt;&lt;LI&gt;Route steps between sender and receiver.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Within design, there is a graphical editor to build the integration flow.&lt;/P&gt;&lt;H3 id="toc-hId-948231539"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300279iBAFE6B3B4B1AE952/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15.png" alt="Integration-15.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-751718034"&gt;Business Partner Integration Flow&lt;/H3&gt;&lt;P&gt;Creating the integration flow involves setting the sender details and designing the required transformations to meet the receiver (API) requirements.&lt;/P&gt;&lt;P&gt;As we work through this keep in mind the API expects one of four paths depending on the search scenario:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-A.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300281i7F82A0BD6569F827/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-A.png" alt="Integration-15-A.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-555204529"&gt;The sender&lt;/H3&gt;&lt;P&gt;The sender represents the address that SAP Integration Suite will listen on. This is the address we send a message to from our upstream app. In this case a web app.&lt;/P&gt;&lt;P&gt;This address is built up in three parts:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;A base which is provided when we deploy the integration flow&lt;/LI&gt;&lt;LI&gt;An 'Address' that we specify in the integration flow&lt;/LI&gt;&lt;LI&gt;Further path details from the web app.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The base of the endpoint is something along the lines of:&lt;/P&gt;&lt;P&gt;https://{trial-account-specific-details}-rt.cfapps.ap21.hana.ondemand.com/http/&lt;/P&gt;&lt;P&gt;For the address name, this demo/test uses the path `/request-business-partners/*` The "`*`" at the end allow us to send requests with additional details that can be utilised in the flow logic.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-2.png" style="width: 813px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300287iEFB652F16F584247/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-2.png" alt="Integration-15-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The web app will send four different types of message to match the four API scenarios, for the demo/test I will use:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;"/api/bp/single"&lt;/LI&gt;&lt;LI&gt;"/api/bp/all"&lt;/LI&gt;&lt;LI&gt;"/api/bp/single/add"&lt;/LI&gt;&lt;LI&gt;"/api/bp/single/all"&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The web app will also include the BP number in the message body.&lt;/P&gt;&lt;P&gt;We don't need to specify these in the Integration Flow as the `*` will allow them all to pass as long as they are preceded by "request-business-partners/"&lt;/P&gt;&lt;P&gt;Adding this information to the mapping table.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-B.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300290i5293141B171F7138/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-B.png" alt="Integration-15-B.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-526874715"&gt;Routing and Transformations&lt;/H3&gt;&lt;P&gt;The integration flow routes and transforms the received messages to meet the API requirements at the receiver. This involves:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Routing of messages from receiver to sender based on their content&lt;/LI&gt;&lt;LI&gt;1:1 relationship for each of the four scenarios&lt;/LI&gt;&lt;LI&gt;Transform the URLs&lt;/LI&gt;&lt;LI&gt;A part of the transformation is extraction of the business partner number from the received message and the placement of it into the API format URL.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-330361210"&gt;The receiver&lt;/H3&gt;&lt;P&gt;The receiver is set up to match the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300292i4EB268C6A7AECB21/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-3.png" alt="Integration-15-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;More detail on the settings of each step are in part 3.&lt;/P&gt;&lt;P&gt;At this point, the integration flow is:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300293i3A47FABC1963733D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-4.png" alt="Integration-15-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;As an alternative, the web app could have been programmed to send messages that already fit the API requirements. However, in some scenarios sender systems may be inflexible or difficult to develop on, making these transformation capabilities in Integration Suite important.&lt;/P&gt;&lt;P&gt;Further reading on SAP Integration Suite:&lt;/P&gt;&lt;P&gt;- &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/what-is-sap-integration-suite?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Help - What is integration suite&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://camel.apache.org/" target="_self" rel="nofollow noopener noreferrer"&gt;Apache Camel&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-427250712"&gt;Point 7. Cloud Connector&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300294iE46B3CEEA68DFE85/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-7.png" alt="Integration-map-7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Allow SAP BTP to communicate to On-Premise SAP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; An application that can provide a secure connection between SAP Cloud and On-Premise applications.&lt;/P&gt;&lt;P&gt;In the previous part, we defined the address details of the S/4HANA business partner mock server as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Base URL/host: &lt;A href="http://localhost:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Base path: /sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/LI&gt;&lt;LI&gt;Entity set: /A_BusinessPartner&lt;/LI&gt;&lt;LI&gt;Key Access: ('1234567')&lt;/LI&gt;&lt;LI&gt;Navigation property: /to_BusinessPartnerAddress&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you paid attention to the screenshot of the receiver configuration in Intelligent Suite, you will note that it was set to&lt;/P&gt;&lt;P&gt;`&lt;A href="http://s4-mock:3006/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('${property.employee_id" target="_blank" rel="noopener nofollow noreferrer"&gt;http://s4-mock:3006/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('${property.employee_id&lt;/A&gt;}')`&lt;/P&gt;&lt;P&gt;The domain was "s4-mock:3006" not "localhost:3005".&lt;/P&gt;&lt;P&gt;This is because we can't connect SAP Cloud directly to an on-premise system. The S/4HANA business partner mock server is a JavaScript server that runs locally on desktop/laptop and is hence considered 'on-premise' or outside the SAP Cloud.&lt;/P&gt;&lt;P&gt;SAP provides "SAP Cloud Connector" to connect on-premise applications to the SAP Cloud.&lt;/P&gt;&lt;P&gt;It's a JavaScript application that can be installed and run locally. Part of the set-up involves entering authentication details from BTP.&lt;/P&gt;&lt;P&gt;After it's set-up, Cloud Connector will accept messages from Integration Suite and forward them to the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;The detailed set-up is covered in part 3.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-16.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300295i06526E809FBCA319/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-16.png" alt="Integration-16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The screenshot above shows the "Cloud to On-Premise" mapping. A virtual host "s4-mock:3006" is mapped to the S4/HANA business partner mock server running locally on "localhost:3005".&lt;/P&gt;&lt;P&gt;Updating the integration flow:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-16-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300296i574EC1489A20E013/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-16-2.png" alt="Integration-16-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-230737207"&gt;Point 8: Web app&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300297i052F2A545DBA8042/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-8.png" alt="Integration-map-8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The web app is an application that uses JavaScript as a programming language. Web browsers have JavaScript engines and can run JavaScript code.&lt;/P&gt;&lt;P&gt;There are two parts to the web app. The frontend and the backend.&lt;/P&gt;&lt;P&gt;Think of JavaScript in two categories. frontend JavaScript and server (backend) JavaScript.&lt;/P&gt;&lt;H3 id="toc-hId--259179305"&gt;Frontend JavaScript&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Runs in the web browser, utilising the browsers JavaScript engine&lt;/LI&gt;&lt;LI&gt;Is oriented towards manipulating web documents (HTML documents), for example:&lt;/LI&gt;&lt;LI&gt;Retrieve fields from HTML (e.g. sign up form)&lt;/LI&gt;&lt;LI&gt;Update HTML (e.g. show results, dynamically add a new page)&lt;/LI&gt;&lt;LI&gt;The JavaScript engine in the browser has limitations.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--455692810"&gt;Server JavaScript&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Installed on a server (can also be run on a desktop/laptop)&lt;/LI&gt;&lt;LI&gt;A popular engine is Node.js&lt;/LI&gt;&lt;LI&gt;Is oriented towards messaging, connectivity, security, authentication&lt;/LI&gt;&lt;LI&gt;Has a lot less limitations than the web browser.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We could try to send a request from the frontend to SAP Integration Suite, but because it comes from a browser, it will likely result in errors.&lt;/P&gt;&lt;P&gt;I did try sending a message to Integration Suite from the browser, but received various CORS errors. CORS, or Cross-Origin Resource Sharing, is a browser security feature that controls whether a web page on one domain can access resources from a different domain.&lt;/P&gt;&lt;P&gt;Therefore, the frontend will send a request to the backend, which will then prepare the message and send it as a request to SAP Integration Suite.&lt;/P&gt;&lt;P&gt;Let's look at the frontend first, then the backend.&lt;/P&gt;&lt;H2 id="toc-hId--358803308"&gt;Point 8.1 Web app: frontend&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Search for and display business partner details on a web page.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A simple web app based on HTML, CSS and JavaScript.&lt;/P&gt;&lt;P&gt;The frontend can be built with plain HTML, CSS and JavaScript.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;HTML: Used to define the content of the web page&lt;/LI&gt;&lt;LI&gt;CSS: Used to apply styles to the web page (layout, colours, font, etc.)&lt;/LI&gt;&lt;LI&gt;Javascript&amp;amp;colon; Use for programming logic, for example:&lt;UL&gt;&lt;LI&gt;Get input field values from HTML&lt;/LI&gt;&lt;LI&gt;Fetch data from the server&lt;/LI&gt;&lt;LI&gt;Restructure data for display&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;HTML, CSS, and JavaScript are written in their own files. They are typically in the same folder.&lt;/P&gt;&lt;P&gt;```&lt;BR /&gt;frontend/&lt;BR /&gt;├── index.html&lt;BR /&gt;├── styles.css&lt;BR /&gt;└── script.js&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;The HTML file includes references to the 'styles.css' and 'script.js' documents. These can all be written in simple text editors, but applications like 'visual studio code' help with syntax highlighting and formatting.&lt;/P&gt;&lt;P&gt;For demo/test these files can simply be kept on a computers hard drive. Or they could be hosted on a static web server like Netlify or GitHub pages.&lt;/P&gt;&lt;H2 id="toc-hId--555316813"&gt;Point 8.2: Web app - HTML&lt;/H2&gt;&lt;P&gt;Web pages are written with HTML, they are hierarchically structured documents where 'tags' are used to denote different types of element which contain content.&lt;/P&gt;&lt;P&gt;As a simple illustration, the following would create a web page with a title, a text input field, a submit button and a space for results.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;header&amp;gt;
&amp;lt;p&amp;gt;This is the page title&amp;lt;/p&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;article&amp;gt;
  &amp;lt;form&amp;gt;
    &amp;lt;label&amp;gt;Enter business partner number
      &amp;lt;input type="text" /&amp;gt;
    &amp;lt;/label&amp;gt;
    &amp;lt;button type="submit"&amp;gt;Submit&amp;lt;/button&amp;gt;
  &amp;lt;/form&amp;gt;
  &amp;lt;div id="js-results"&amp;gt;
    // Results go here
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This would display:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-17.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300300i9BF0AF4B0E0552B9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-17.png" alt="Integration-17.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A simple element such as paragraph is denoted by&lt;UL&gt;&lt;LI&gt;`&amp;lt;p&amp;gt;enter paragraph&amp;lt;/p&amp;gt;`&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;A more complex element, an input field is denoted by&lt;UL&gt;&lt;LI&gt;`&amp;lt;input type="text" /&amp;gt;`&lt;/LI&gt;&lt;LI&gt;In this case, `type` is an attribute set to `text` for text field&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1045233325"&gt;Getting HTML to talk to CSS and JavaScript**&lt;/H3&gt;&lt;P&gt;There are two attributes that allow them to work together:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;"id": for example id="bp-input" (where bp-input is a variable name)&lt;/LI&gt;&lt;LI&gt;"class": for example class="bp-input" (where bp-input is a variable name)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These attributes can be added to HTML elements to allow us to access those elements with CSS and JavaScript. The difference between the two is a single "id" value is unique and should only be used once in an HTML document, while a class can be applied to multiple HTML elements.&lt;/P&gt;&lt;P&gt;The body of the web app frontend is:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;header class="header"&amp;gt;
&amp;lt;div class="header-title"&amp;gt;
&amp;lt;img class="logo" src="assets/team.png"&amp;gt;
&amp;lt;p class="title"&amp;gt;Employee portal: business partner search&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;nav class="nav"&amp;gt;
&amp;lt;a href="/index.html"&amp;gt;Home&amp;lt;/a&amp;gt;
&amp;lt;/nav&amp;gt;
&amp;lt;/header&amp;gt;
&amp;lt;article class="bp-article flow"&amp;gt;
&amp;lt;h2&amp;gt;Search&amp;lt;/h2&amp;gt;
&amp;lt;div class="divider"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;form id="bp-form" class="bp-search"&amp;gt;
&amp;lt;label for="bp-inp-number"&amp;gt;Business partner number:&amp;lt;/label&amp;gt;
&amp;lt;p class="text-small"&amp;gt;(Enter 7 digit number or leave blank to return all)&amp;lt;/p&amp;gt;
&amp;lt;input id="bp-inp-number" class="bp-inp-number" name="bp" type="text" /&amp;gt;
&amp;lt;p id="bp-error" class="bp-error"&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p class="options"&amp;gt;Options:&amp;lt;/p&amp;gt;
&amp;lt;div&amp;gt;
&amp;lt;input id="bp-inp-address" value="add" type="checkbox" /&amp;gt;
&amp;lt;label class="text-small" for="bp-inp-address" name="bp-input-address"&amp;gt;Include address details&amp;lt;/label&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
&amp;lt;input id="bp-inp-tab" value="tab" type="checkbox" /&amp;gt;
&amp;lt;label class="text-small" for="bp-inp-tabulate" name="bp-inp-tabulate"&amp;gt;Show results in table&amp;lt;/label&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;button id="js-inp-sub" type="submit"&amp;gt;Submit&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;h2&amp;gt;Results&amp;lt;/h2&amp;gt;
&amp;lt;div class="divider"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div id="js-bp-results" class="bp-results"&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/article&amp;gt;
&amp;lt;/body&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;It's not very complex. Most of the complexity is in the CSS styling and the JavaScript programming to return the results.&lt;/P&gt;&lt;P&gt;This segregation of content (HTML), styles (CSS), and programming logic (JS) makes working with frontend well structured.&lt;/P&gt;&lt;P&gt;The web app initial HTML includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A header bar with the logo, page name and home link&lt;/LI&gt;&lt;LI&gt;A search section with search field options&lt;UL&gt;&lt;LI&gt;BP number&lt;/LI&gt;&lt;LI&gt;Checkbox to get address&lt;/LI&gt;&lt;LI&gt;Checkbox to show results in detail view&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This is how this looks without styling.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-18.png" style="width: 824px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300306i6242F0F51B915194/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-18.png" alt="integration-18.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The version with styling was shown at the start of the article.&lt;/P&gt;&lt;P&gt;Here is the &lt;A href="https://alexroan.com/assets/documents/integration/frontend-html" target="_self" rel="nofollow noopener noreferrer"&gt;HTML file&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--948343823"&gt;Point 8.3: Web app - CSS&lt;/H2&gt;&lt;P&gt;Cascading style sheets (CSS) are used to apply styles to HTML documents. Consider an HTML document with three lines of text:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;p id="line-one"&amp;gt;This is text line one&amp;lt;/p&amp;gt;
&amp;lt;p class="other-lines"&amp;gt;This is text line two&amp;lt;/p&amp;gt;
&amp;lt;p class="other-lines"&amp;gt;This is text line three&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;These can be styled with CSS as follows:&lt;/P&gt;&lt;pre class="lia-code-sample language-css"&gt;&lt;code&gt;#line-one {
color: red;
font-size: 1.2rem;
}

.other-lines {
color: blue;
text-decoration: underline;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This would show:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-19.png" style="width: 472px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300316iF0420D2F7368485B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-19.png" alt="Integration-19.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The complete CSS for the demo/test web app is lengthy. Around 200 lines. Here is a snippet to get an idea of what it looks like:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-20.png" style="width: 822px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300317i8B8CC471FF9421E6/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-20.png" alt="integration-20.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;CSS is easy to pick up, but challenging to master!&lt;/P&gt;&lt;P&gt;Looking at the class "bp-search". This applies to the area of the HTML document where the search fields are collected. The CSS here does things like orient those search fields in a column "flex-direction:column" and apply a border and a shadow.&lt;/P&gt;&lt;P&gt;This is how our page looks with styling.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300318i0AF0854FE34C5F34/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-21.png" alt="Integration-21.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Here is the full &lt;A href="https://alexroan.com/asssets/documents/integration/frontend-css.css" target="_self" rel="nofollow noopener noreferrer"&gt;CSS file&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--976673637"&gt;Point 8.4: Web app - JavaScript&lt;/H2&gt;&lt;P&gt;Frontend JavaScript is able to retrieve, edit and add elements to the HTML document. Writing the JavaScript is possibly the most challenging part of this demo/test, so I'll just summarise what the code does:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Listen for a click of the 'submit' button&lt;/LI&gt;&lt;LI&gt;Get the value of the form input elements&lt;UL&gt;&lt;LI&gt;The Business partner number&lt;/LI&gt;&lt;LI&gt;The status of the 'include address details' checkbox&lt;/LI&gt;&lt;LI&gt;The status of the 'show results in table' checkbox&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Check the business partner value is valid&lt;UL&gt;&lt;LI&gt;It has to be blank or a 7-digit number&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Create a variable object called 'request' to track the request type&lt;/LI&gt;&lt;LI&gt;The variable includes:&lt;UL&gt;&lt;LI&gt;request URL&lt;/LI&gt;&lt;LI&gt;request method&lt;/LI&gt;&lt;LI&gt;request body&lt;/LI&gt;&lt;LI&gt;(The ability to track multiple values in an Object is a key JS feature)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Based on the input fields, identify the request type &amp;amp; update the 'request' object.&lt;UL&gt;&lt;LI&gt;The combinations are:&lt;UL&gt;&lt;LI&gt;If bp number is blank and get address isn't checked&lt;/LI&gt;&lt;LI&gt;If bp number is blank and get address is checked&lt;/LI&gt;&lt;LI&gt;If bp number is entered and get address isn't checked&lt;/LI&gt;&lt;LI&gt;If bp number is entered and get address is checked.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;At this point, the request object will store a set of values based on the input selections. The values will be one of the four options listed in the earlier tables.&lt;/P&gt;&lt;P&gt;The JavaScript now has what it needs to send a request to SAP Integration Suite. The rest of the JavaScript handles various things:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Use the JavaScript method 'fetch()' to send requests to the server&lt;/LI&gt;&lt;LI&gt;Handle security and authorisation&lt;/LI&gt;&lt;LI&gt;Getting a token if needed&lt;/LI&gt;&lt;LI&gt;Sending a token with requests&lt;/LI&gt;&lt;LI&gt;Handling errors&lt;/LI&gt;&lt;LI&gt;If successful, capturing the returned data&lt;/LI&gt;&lt;LI&gt;Working through the returned data and updating the HTML&lt;/LI&gt;&lt;LI&gt;Creating cards for the summary view&lt;/LI&gt;&lt;LI&gt;Creating a table for the detailed view&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Here is the &lt;A href="https://alexroan.com/assets/documents/integration/frontend-javascript.js" target="_self" rel="nofollow noopener noreferrer"&gt;JavaScript.&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1173187142"&gt;Point 9. Web app: backend server&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300319i957338C0D7C637CE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-9.png" alt="Integration-map-9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Allow a web frontend to communicate with SAP BTP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt;&amp;nbsp;A JavaScript web backend server for message formatting and routing.&lt;/P&gt;&lt;P&gt;The backend server is locally hosted on our computer for this test/demo, but in reality would be on a web server somewhere.&lt;/P&gt;&lt;P&gt;It's written in express, which is a framework on Node.js. It's quite different from frontend JavaScript.&lt;/P&gt;&lt;P&gt;The logic of the backend is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Listen for communication from the frontend&lt;/LI&gt;&lt;LI&gt;If a message is received:&lt;UL&gt;&lt;LI&gt;Do some manipulation of the message related to authorisations&lt;/LI&gt;&lt;LI&gt;Using fetch() try sending a request to SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;More authorisation/security handling&lt;/LI&gt;&lt;LI&gt;If successful, return the response back to the browser&lt;/LI&gt;&lt;LI&gt;If unsuccessful, log and return the error.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Here is the backend &lt;A href="https://alexroan.com/assets/documents/integration/backend-javascript.js" target="_self" rel="nofollow noopener noreferrer"&gt;JavaScript code&lt;/A&gt;. This needs to be set up as part of a Node.js server.&lt;/P&gt;&lt;P&gt;The JavaScript server is a bit more complex than the frontend. The server folder contains:&lt;/P&gt;&lt;P&gt;```&lt;BR /&gt;web-app-server/&lt;BR /&gt;├── node_modules/ # created by npm install&lt;BR /&gt;├── package-lock.json # created/updated by npm install&lt;BR /&gt;├── package.json # you write this (or generate with `npm init`)&lt;BR /&gt;└── server.js # your server code&lt;BR /&gt;```&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;server.js contains the actual JavaScript code for the server.&lt;/LI&gt;&lt;LI&gt;package.json defines project settings, dependencies, and scripts.&lt;/LI&gt;&lt;LI&gt;node_modules/ and package-lock.json are automatically generated when dependencies are installed using npm install.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The port can be specified in 'server.js'. I choose port 5000.&lt;/P&gt;&lt;P&gt;This means the server will run on '&lt;A href="http://localhost:5000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:5000&lt;/A&gt;'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-24.png" style="width: 650px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300322i6AC5E5AE7259389E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-24.png" alt="Integration-24.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After writing package.json and server.js, the following steps are required in terminal to initialise the server, install express, and then start the server.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;cd web-app-server&lt;/LI&gt;&lt;LI&gt;npm init -y&lt;/LI&gt;&lt;LI&gt;npm install express&lt;/LI&gt;&lt;LI&gt;node server.js&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We can now update the flow diagram with the details for the frontend.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-25.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300323iD986EC04D7C226DD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-25.png" alt="Integration-25.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1369700647"&gt;One flow, many messages&lt;/H2&gt;&lt;P&gt;Looking at the diagram, a click on the search button triggers a message that passes through four stages:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;From the frontend (browser) to the backend web server&lt;/LI&gt;&lt;LI&gt;From the web server to SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;From Integration Suite to Cloud Connector&lt;/LI&gt;&lt;LI&gt;From Cloud Connector to the S/4HANA system&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;JavaScript doesn’t normally “wait” for things to happen — it’s designed to keep running while other operations (like network requests) complete in the background.&lt;/P&gt;&lt;P&gt;However, the fetch() function is asynchronous, which means it starts a request and immediately returns a kind of “promise” — a placeholder that will eventually be resolved when the response comes back (or if it fails).&lt;/P&gt;&lt;P&gt;When testing this flow, there are multiple layers where errors can occur:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The browser console (frontend logs)&lt;/LI&gt;&lt;LI&gt;The backend server console (Node.js logs)&lt;/LI&gt;&lt;LI&gt;Integration Suite’s monitoring tools&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The message can fail at any step, and it sometimes takes a bit of detective work to figure out where it failed and why.&lt;/P&gt;&lt;P&gt;If everything works, and S/4HANA returns a successful response (status code 200), that response flows automatically back through the same chain — each layer staying in a “waiting” state until the result is passed back to the frontend and displayed to the user.&lt;/P&gt;&lt;P&gt;Don't worry if it's not 100% clear, it took me a while to figure this out.&lt;/P&gt;&lt;H2 id="toc-hId--1566214152"&gt;Conclusions to the walkthrough&lt;/H2&gt;&lt;P&gt;It's really fun to build your own frontend and connect it to a real enterprise grade system.&lt;/P&gt;&lt;P&gt;A few important considerations:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Precision is needed with the integration configuration:&lt;UL&gt;&lt;LI&gt;Host names, types, routing, transformation are all sensitive to mistakes&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;The JavaScript is a little complex, but it is all well established&lt;/LI&gt;&lt;LI&gt;A JavaScript and Node.js course and some googling could enable anyone to create this.&lt;/LI&gt;&lt;LI&gt;Using the S/4HANA business partner mock server is a quick and fun way to test out a potential integration with S/4HANA. However, it is just a mock server with limited features and a build and test with a real S/4HANA system would be required.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;However, it's easily achievable with a little study and practice and it opens the possibility to develop a wide range of things.&lt;/P&gt;&lt;P&gt;The APIs brings together:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Real-time fast access to a wide range of business data thanks to S/4HANA.&lt;BR /&gt;Extreme flexibility on the frontend side thanks to modern HTML, CSS and JS.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This integration could have been much simpler by just having the frontend deliver a URL in the format required for the API. We don't really need the complexity of Integration Suite for this.&lt;/P&gt;&lt;P&gt;---&lt;/P&gt;&lt;H1 id="toc-hId--1469324650"&gt;Part 3: building the integration flow (for IT people)&lt;/H1&gt;&lt;P&gt;In this section I'll share my rough notes from the process of building this front end and integration flow. This is a copy and paste of my original notes in markdown so I apologise for the lack of formatting. I do list all the required tools which may be helpful for people trying this out.&lt;/P&gt;&lt;P&gt;Before starting, I'd recommend working through the CodeJam:&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/sap-codejam/sap-codejam-connecting-systems-and-services-using-sap-integration-suite/ec-p/14110686#M848" target="_self"&gt;SAP CodeJam&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;The instructions are on a &lt;A href="https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub repository.&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--1959241162"&gt;Information sources &amp;amp; tools&lt;/H2&gt;&lt;H3 id="toc-hId-1845809622"&gt;SAP Accounts: BTP and Integration Suite&lt;/H3&gt;&lt;P&gt;A trial account for business technology platform is required.&lt;/P&gt;&lt;P&gt;[BTP trial](&lt;A href="https://developers.sap.com/tutorials/hcp-create-trial-account.html" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/tutorials/hcp-create-trial-account.html&lt;/A&gt;)&lt;/P&gt;&lt;P&gt;And a a trial for Integration Suite&lt;/P&gt;&lt;P&gt;[Integration Suite trial](&lt;A href="https://developers.sap.com/tutorials/cp-starter-isuite-onboard-subscribe.html#f55ec71c-2853-4b83-8092-4e3031f8d6e6" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/tutorials/cp-starter-isuite-onboard-subscribe.html#f55ec71c-2853-4b83-8092-4e3031f8d6e6&lt;/A&gt;)&lt;/P&gt;&lt;P&gt;See the pre-requisites [pre-requisites](&lt;A href="https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam/blob/main/prerequisites.md" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam/blob/main/prerequisites.md&lt;/A&gt;) document in the CodeJam repository.&lt;/P&gt;&lt;H3 id="toc-hId-1649296117"&gt;Containerisation &amp;amp; Docker&lt;/H3&gt;&lt;P&gt;When running the S/4HANA business partner mock server locally, one option is to install the necessary JavaScript runtime environment and run it manually. Another option is to run it inside a container.&lt;/P&gt;&lt;P&gt;Containers are a key concept in Cloud architecture.&lt;/P&gt;&lt;P&gt;A container packages an app and all it's dependencies together so that it can run independently of the underlying computer (server, laptop, etc.).&lt;/P&gt;&lt;P&gt;This is a key concept for Cloud as it allows applications to run on different hardware and operating systems with minimal set up effort.&lt;/P&gt;&lt;P&gt;Docker is a platform to build and manage containers.&lt;/P&gt;&lt;P&gt;Docker and container features:&lt;/P&gt;&lt;P&gt;- Package an app and all it's dependencies&lt;BR /&gt;- A container is like a lightweight virtual machine&lt;BR /&gt;- Key terms&lt;BR /&gt;- image: blueprint (.zip) containing app, dependencies, and OS&lt;BR /&gt;- container: running instance of an image&lt;BR /&gt;- dockerfile: instructions to build image&lt;BR /&gt;- volume: how to persist data outside the container&lt;BR /&gt;- port mapping: expose internal port to machine (e.g. 8080 to 3001).&lt;/P&gt;&lt;P&gt;I'll come back to this in the section on running the BP mock server.&lt;/P&gt;&lt;H3 id="toc-hId-1452782612"&gt;Data basics&lt;/H3&gt;&lt;P&gt;The following data standards/formats are used in this exercise:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;JSON (JavaScript Object Notation)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- A lightweight, human-readable format for storing and sharing structured data&lt;BR /&gt;- Looks like nested key-value pairs (like a shopping list with categories)&lt;BR /&gt;- Commonly used in web apps and APIs for sending data between systems.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;P&gt;```JSON&lt;BR /&gt;{&lt;BR /&gt;"employee_id": "1234567",&lt;BR /&gt;"employee_name": "Alexander"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;XPATH&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- A query language used to navigate and extract data from XML or HTML documents&lt;BR /&gt;- Lets you point to specific elements using a path-like syntax&lt;BR /&gt;- Example: find the third paragraph inside a section&lt;BR /&gt;- Used in tools like web scrapers and automation scripts.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;P&gt;```XPATH&lt;BR /&gt;//title[contains(text(), 'Programming')]&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;XML (eXtensible Markup Language)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- A flexible, tag-based format for representing structured data&lt;BR /&gt;- Similar to HTML in appearance&lt;BR /&gt;- But used for data storage and exchange, not page display.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;P&gt;```XML&lt;BR /&gt;&amp;lt;book id="bk01"&amp;gt;&lt;BR /&gt;&amp;lt;author&amp;gt;Roan, Alexander&amp;lt;/author&amp;gt;&lt;BR /&gt;&amp;lt;title&amp;gt;Front end to S/4HANA&amp;lt;/title&amp;gt;&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;HTML (HyperText Markup Language)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- The standard language for building web pages and displaying content in browsers&lt;BR /&gt;- Uses tags to define elements like headings, paragraphs, links, and images&lt;BR /&gt;- Focused on structure and layout, not data exchange.&lt;/P&gt;&lt;H3 id="toc-hId-1256269107"&gt;Terminal&lt;/H3&gt;&lt;P&gt;I worked through this demo/test on Mac so I used Terminal, which is the Mac default command line interface (CLI).&lt;/P&gt;&lt;P&gt;The CLI is necessary for activities such as setting up and starting servers or working with docker containers.&lt;/P&gt;&lt;P&gt;Terminal basics&lt;/P&gt;&lt;P&gt;- Open a folder `cd &amp;lt;folder name&amp;gt;` (change directory)&lt;BR /&gt;- `cd` on it's own will go to the home directory&lt;BR /&gt;- (Note that `~` represents home directory in terminal)&lt;BR /&gt;- `cd ..` will go up a folder&lt;BR /&gt;- List folders `ls` (list files in the current directory)&lt;BR /&gt;- Open a file `open &amp;lt;file name&amp;gt;` (open a file)&lt;BR /&gt;- Quit sub-screen and return to terminal `q`&lt;BR /&gt;- Stop a running process hold control and c&lt;BR /&gt;- Clear terminal `clear`&lt;/P&gt;&lt;P&gt;To run JavaScript servers, JavaScript runtime is required. It's easier to install and manage things like this using a package manager in Terminal. Homebrew is a popular package manager for Mac.&lt;/P&gt;&lt;P&gt;Homebrew&lt;/P&gt;&lt;P&gt;- A package manager for Mac&lt;BR /&gt;- To install homebrew homebrew:&lt;BR /&gt;- Launch terminal (launchpad &amp;gt; other &amp;gt; terminal)&lt;BR /&gt;- Visit [Homebrew](&lt;A href="https://brew.sh/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://brew.sh/&lt;/A&gt;) in your web browser&lt;BR /&gt;- Copy the installation command&lt;BR /&gt;- Paste it into terminal press enter.&lt;/P&gt;&lt;H3 id="toc-hId-1227939293"&gt;Java/JavaScript&lt;/H3&gt;&lt;P&gt;To complete the demo/test a few different JavaScript things are needed.&lt;/P&gt;&lt;P&gt;Node.js&lt;/P&gt;&lt;P&gt;- This is a JavaScript that can be installed locally to create and run web-servers and web applications&lt;BR /&gt;- Install using Homebrew&lt;BR /&gt;- In terminal, enter: `brew install node`&lt;BR /&gt;- Test the installation of Node.js&lt;BR /&gt;- In terminal, enter: `node -v`, it should return the node version number.&lt;/P&gt;&lt;P&gt;NPM&lt;/P&gt;&lt;P&gt;- NPM is the node package manager&lt;BR /&gt;- It's installed with Node.js&lt;BR /&gt;- It's used to run a server&lt;BR /&gt;- Install it in any directory a Node.js server sits in&lt;BR /&gt;- To check the installation of NPM&lt;BR /&gt;- In terminal, enter: `npm -v`, it should return the npm version number&lt;/P&gt;&lt;P&gt;Java development kit (JDK)&lt;/P&gt;&lt;P&gt;- Cloud Connector is a more complex application and requires JDK&lt;BR /&gt;- More notes in the Cloud Connector section.&lt;/P&gt;&lt;H3 id="toc-hId-1031425788"&gt;API client (Bruno/Postman)&lt;/H3&gt;&lt;P&gt;The CodeJam utilised [Bruno](&lt;A href="https://www.usebruno.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.usebruno.com/&lt;/A&gt;) for API testing.&lt;/P&gt;&lt;P&gt;For the CodeJam a folder of pre-configured settings for Bruno is provided. However I'd suggest to start experimenting without the pre-configuration to build a solid understanding of the basics.&lt;/P&gt;&lt;P&gt;I'll include more notes in later sections.&lt;/P&gt;&lt;H2 id="toc-hId-1128315290"&gt;Building and testing an integration flow&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-638398778"&gt;Set up the S/4HANA business partner mock server&lt;/H3&gt;&lt;P&gt;Start by setting up the S/4HANA business partner mock server&lt;/P&gt;&lt;P&gt;- Download the mock server from [GitHub](&lt;A href="https://github.com/SAP-archive/cloud-s4-sdk-book/tree/mock-server" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-archive/cloud-s4-sdk-book/tree/mock-server&lt;/A&gt;)&lt;BR /&gt;- Scroll down to the readme&lt;BR /&gt;- Either download the archive linked under 'How to run this server'&lt;BR /&gt;- Or if using GitHub clone the repository and checked the branch 'mock-server'&lt;BR /&gt;- Move it to a convenient folder of your choice&lt;BR /&gt;- I set it a `users/&amp;lt;username&amp;gt;/projects/integration/cloud-s4-sdk-book`&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-441885273"&gt;Run the server: option 1: use NPM&lt;/H3&gt;&lt;P&gt;Node.js and the node package manager (NPM) can be used to run the server directly on a computer.&lt;/P&gt;&lt;P&gt;- Open terminal&lt;BR /&gt;- Navigate to `users/&amp;lt;username&amp;gt;/projects/integration/cloud-s4-sdk-book`&lt;BR /&gt;- (or wherever you saved the folder)&lt;BR /&gt;- Enter: `npm install` (install node package manager in the folder)&lt;BR /&gt;- Enter: `npm start` (start the server)&lt;BR /&gt;- This should return something like:&lt;/P&gt;&lt;P&gt;```shell&lt;BR /&gt;&amp;gt; bupa-mock-odata@1.0.0 start&lt;BR /&gt;&amp;gt; node server.js&lt;BR /&gt;Mock server started on port 3000 after 1 ms, running - stop with CTRL+C (or CMD+C)...&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;Terminal tells us which port the server is running on. Port "3000" is accesible in the browser or an API client via "&lt;A href="http://localhost:3000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3000&lt;/A&gt;".&lt;/P&gt;&lt;P&gt;To stop the server in terminal use `ctrl+c`.&lt;/P&gt;&lt;P&gt;For the curious, you can look at the files that make up the mock server in the above folder. Check out:&lt;/P&gt;&lt;P&gt;- server.js&lt;BR /&gt;- This includes the JavaScript code for the server&lt;BR /&gt;- The code references other files such as app.js&lt;BR /&gt;- package.json&lt;BR /&gt;- This is like a configuration file for a node.js server&lt;BR /&gt;- business partner &amp;gt; business-partner-data.json&lt;BR /&gt;- This contains the demo test business partner data.&lt;/P&gt;&lt;P&gt;Theoretically you could use this Node.js server as a template to simulate other SAP Odata APIs with some adjustments to these files.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-245371768"&gt;Run the server: option 2: use Docker&lt;/H3&gt;&lt;P&gt;The mock server can also be run as a Docker container. This is a little more convenient as after the first run we can stop and start it from the Docker desktop app.&lt;/P&gt;&lt;P&gt;Note the server already has a Dockerfile, so it's already set up to run as a container.&lt;/P&gt;&lt;P&gt;If we run something inside a docker container we need to interact with it via ports on the container. The application is really running contained inside a container. When we run a docker container we provide a mapping between a local port on the computer and the container port. We can then access the docker application via this mapping.&lt;/P&gt;&lt;P&gt;To run as a Docker container:&lt;/P&gt;&lt;P&gt;- Launch the docker app&lt;BR /&gt;- Open terminal&lt;BR /&gt;- Enter `docker run -p 3005:8080 bp-mock-server`&lt;BR /&gt;- 3005 is the local port&lt;BR /&gt;- 8080 is the docker container port&lt;BR /&gt;- Local port can be any free port on your computer. I choose 3005&lt;BR /&gt;- The container port is 8080&lt;BR /&gt;- View the status of the container in the Docker app&lt;BR /&gt;- Use the browser to check `http//localhost:3005`&lt;/P&gt;&lt;P&gt;Note if there wasn't already a dockerfile we would need to create one and build the app before running it.&lt;/P&gt;&lt;P&gt;**A simple docker demo**&lt;/P&gt;&lt;P&gt;This was my first time using docker, so I experimented by creating a simple "Hello, World!" style server from scratch. Here it is if you want to try:&lt;/P&gt;&lt;P&gt;- Create a JS file "index.js"&lt;BR /&gt;- Add `console.log("hello from docker");`&lt;BR /&gt;- This just prints text to the console (Terminal)&lt;BR /&gt;- Create a package file "package.json"&lt;BR /&gt;- Add the following JSON to "package.json"&lt;/P&gt;&lt;P&gt;```json&lt;BR /&gt;{&lt;BR /&gt;"name": "hello-docker",&lt;BR /&gt;"version": "1.0.0",&lt;BR /&gt;"main": "index.js",&lt;BR /&gt;"scripts": {&lt;BR /&gt;"start": "node index.js"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;- Create a dockerfile "dockerfile"&lt;BR /&gt;- Add the following to "dockerfile"&lt;/P&gt;&lt;P&gt;```Dockerfile&lt;BR /&gt;FROM node:18&lt;/P&gt;&lt;P&gt;WORKDIR /usr/src/app&lt;/P&gt;&lt;P&gt;COPY package*.json ./&lt;BR /&gt;RUN npm install&lt;/P&gt;&lt;P&gt;COPY . .&lt;/P&gt;&lt;P&gt;CMD ["npm", "start"]&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;You can see Docker uses NPM, in the same way we would with a manual run, but it's installing and running NPM inside the container, not on the computer.&lt;/P&gt;&lt;P&gt;To build and run:&lt;/P&gt;&lt;P&gt;- Build docker container `docker build -t hello-docker .`&lt;BR /&gt;- Run docker container `docker run hello-docker`&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-342261270"&gt;Testing with the web browser&lt;/H2&gt;&lt;P&gt;The simplest way to test the API is running locally is to put the local address in the web browser.&lt;/P&gt;&lt;P&gt;- For NPM it was "http//localhost:3000"&lt;BR /&gt;- For docker image it was "http//localhost:3005"&lt;/P&gt;&lt;P&gt;The main domain should return the API details including the links such as:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3000/sap/opu/odata/sap/API_BUSINESS_PARTNER" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3000/sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/A&gt;"&lt;BR /&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;To access the service to return the general data of all business partners we add A_BusinessPartner&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;In the browser, this should return a JSON document containing the list of business partners.&lt;/P&gt;&lt;P&gt;We can pick a business partner number from the list and use it with the path to select a specific business partner:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('1003764" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('1003764&lt;/A&gt;')"&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-145747765"&gt;Testing with an API client (Bruno)&lt;/H2&gt;&lt;P&gt;Rather than just using the web browser to check the API an API client can be used, this has a few benefits:&lt;/P&gt;&lt;P&gt;- We can build the URLs through a selection of 'input fields'&lt;BR /&gt;- We can save different requests for easy and quick re-testing&lt;BR /&gt;- We can pass data in the request body&lt;/P&gt;&lt;P&gt;To test with Bruno:&lt;/P&gt;&lt;P&gt;- Launch Bruno&lt;BR /&gt;- Use the '...' menu to create a collection&lt;BR /&gt;- Name it 'bp-mock'&lt;BR /&gt;- Specify a location. I used "users/{username}/projects/integration"&lt;/P&gt;&lt;P&gt;Create a request for all business partners&lt;/P&gt;&lt;P&gt;- Use the '...' menu next to bp-mock and select 'new request'&lt;BR /&gt;- Enter request name 'All business partners'&lt;BR /&gt;- Under URL select 'GET' and enter the URL that returns all business partners&lt;BR /&gt;- `&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner&lt;/A&gt;`&lt;/P&gt;&lt;P&gt;Run a request&lt;/P&gt;&lt;P&gt;- Look to the right of the 'GET' line on the main page and click the '-&amp;gt;' to run&lt;BR /&gt;- The right panel will show the JSON response&lt;BR /&gt;- The same response as shown earlier in the web browser.&lt;/P&gt;&lt;P&gt;Create a request for a single business partner (1003765)&lt;/P&gt;&lt;P&gt;- Use the '...' menu next to bp-mock and select 'new request'&lt;BR /&gt;- Enter request name 'Specific business partners'&lt;BR /&gt;- Enter the same URL details as above.&lt;BR /&gt;- In the 'params' tab click '+ param' and enter&lt;BR /&gt;- Name: `&amp;amp;filter`&lt;BR /&gt;- Path: 'BusinessPartner eq '1003766'&lt;BR /&gt;- Run the request. A single business partner should be returned.&lt;/P&gt;&lt;P&gt;Note as the params are entered the URL dynamically updates.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Basics on OData API URLs&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- The base for the API is "/API_Business_Partner"&lt;BR /&gt;- A service of the API is then appended "/A_BusinessPartner"&lt;BR /&gt;- Queries can then by added, OData queries include:&lt;BR /&gt;- Filtering: `/A_BusinessPartner?$filter=Name eq 'Max'`&lt;BR /&gt;- Selecting fields: `/A_BusinessPartner?$select=Name,City`&lt;BR /&gt;- Pagination: `/A_BusinessPartner?$top=5&amp;amp;$skip=10`&lt;BR /&gt;- Accessing nested data: `/A_BusinessPartner?$expand=Address`&lt;BR /&gt;- When working with OData:&lt;BR /&gt;- Field names are case sensitive&lt;BR /&gt;- String values in single quotes&lt;/P&gt;&lt;P&gt;Keep in mind the S/4HANA mock business partner server only includes limited functionality. The above filters and selects won't work.&lt;/P&gt;&lt;H3 id="toc-hId--344168747"&gt;Java SDK for SAP Cloud Connector&lt;/H3&gt;&lt;P&gt;The next step is to set up SAP Cloud Connector&lt;/P&gt;&lt;P&gt;Recall Cloud Connector will provide a secure tunnel allowing SAP Cloud to talk to the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;Cloud Connector requires a full Java Development Kit (JDK).&lt;/P&gt;&lt;P&gt;- You can use "javac -version" in terminal to check if you already have JDK&lt;BR /&gt;- There is a SAP Help page for [Cloud Connector](&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector?locale=en-US&lt;/A&gt;)&lt;BR /&gt;- Check the [prerequisites](&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/prerequisites?locale=en-US#jdks" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/prerequisites?locale=en-US#jdks&lt;/A&gt;) section, it lists the JDK options&lt;BR /&gt;- I choose SAP machine 21 JDK&lt;BR /&gt;- You can download this from [GitHub](&lt;A href="https://sap.github.io/SapMachine/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sap.github.io/SapMachine/&lt;/A&gt;)&lt;BR /&gt;- I have a dev folder for items like this in my home folder&lt;BR /&gt;- "Users/{username}/dev"&lt;BR /&gt;- Use Homebrew to install&lt;BR /&gt;- Open terminal and enter "brew install openjdk@21"&lt;/P&gt;&lt;P&gt;It's likely you may run into version, compatibility, authorisation issues. These are all very common and a web search should help.&lt;/P&gt;&lt;H3 id="toc-hId--540682252"&gt;Install Cloud Connect&lt;/H3&gt;&lt;P&gt;Next install Cloud Connector.&lt;/P&gt;&lt;P&gt;Cloud connector is listed under the SAP development tools page under [Cloud](&lt;A href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="noopener nofollow noreferrer"&gt;https://tools.hana.ondemand.com/#cloud&lt;/A&gt;).&lt;/P&gt;&lt;P&gt;- Download the cloud connector file for your OS&lt;BR /&gt;- My Mac is Apple Silicon so I chose 'sapcc-2.18.1.2-macosx-aarch64.tar.gz'&lt;BR /&gt;- Unzip and move it to a folder of your choice&lt;BR /&gt;- Navigate inside the downloaded folder in terminal&lt;BR /&gt;- Check contents with 'ls', you should see a 'go.sh' file&lt;BR /&gt;- Enter: './go.sh' this will run Cloud Connector&lt;BR /&gt;- Cloud connector should now be running, note the address in the terminal log&lt;BR /&gt;- Login with default account: 'Administrator' and password: 'manage'&lt;BR /&gt;- Change password&lt;BR /&gt;- Keep a note of the account and password.&lt;/P&gt;&lt;P&gt;I received authorisation issues on the first attempt to run it:&lt;/P&gt;&lt;P&gt;- Click through them, then goto apple &amp;gt; settings &amp;gt; privacy&amp;amp;security&lt;BR /&gt;- Scroll down to security and click 'allow anyway'&lt;BR /&gt;- Try: './go.sh' again.&lt;/P&gt;&lt;H3 id="toc-hId--569012066"&gt;Install and set up SAP Integration Suite&lt;/H3&gt;&lt;P&gt;To continue from here SAP Integration has to be installed and active as per the earlier instructions.&lt;/P&gt;&lt;H3 id="toc-hId--765525571"&gt;Connect SAP Cloud Connector to SAP Integration Suite&lt;/H3&gt;&lt;P&gt;As Cloud Connector bridges between SAP Cloud and the S/4HANA business partner mock server we need to set it up to connect to SAP Cloud. We get the security/authentication data to do this from our SAP BTP trial account.&lt;/P&gt;&lt;P&gt;- After logging into Cloud Connector click '+Add Subaccount'&lt;BR /&gt;- Hit 'next' to skip the HTTPS settings&lt;BR /&gt;- Select 'Configure using authentication data'&lt;BR /&gt;- Select 'Add subaccount authentication data from file '&lt;BR /&gt;- In your browser got to your SAP BTP trial homepage&lt;BR /&gt;- Click on your subaccount&lt;BR /&gt;- On the left menu expand Connectivity and select Cloud Connectors&lt;BR /&gt;- Click on 'download authentication data'&lt;BR /&gt;- Return to Cloud Connector&lt;BR /&gt;- Click browse and select the downloaded file 'authentication.data'&lt;BR /&gt;- Click next&lt;BR /&gt;- Leave location ID blank&lt;BR /&gt;- (This would be relevant if there were multiple Cloud Connectors)&lt;BR /&gt;- Click finish.&lt;/P&gt;&lt;P&gt;Double check the settings in the subaccount overview:&lt;/P&gt;&lt;P&gt;- BTP trial region = Cloud Connector region&lt;BR /&gt;- BTP Subaccount ID = Cloud Connector Subaccount&lt;BR /&gt;- The region host in Cloud Connector = Cloud Foundry API Endpoint in BTP.&lt;/P&gt;&lt;H3 id="toc-hId--962039076"&gt;Cloud Connector to Mock BP Server&lt;/H3&gt;&lt;P&gt;There's no security on S/4HANA business partner mock server so it is simply a matter of adding the address.&lt;/P&gt;&lt;P&gt;- In Cloud Connector, on the left sidebar click 'Cloud to On-Premise'&lt;BR /&gt;- To the right of 'Mapping Virtual to Internal Systems' click `+`&lt;BR /&gt;- Select back-end, enter: "Non-SAP system", click 'next'&lt;BR /&gt;- Select protocol: "HTTP", click 'next'&lt;BR /&gt;- For internal host enter "localhost"&lt;BR /&gt;- For internal port enter: "3005"&lt;BR /&gt;- For virtual host: "s4-mock"&lt;BR /&gt;- For virtual Port: "3006"&lt;BR /&gt;- Uncheck allow principal propagation&lt;BR /&gt;- Click through to finish.&lt;/P&gt;&lt;P&gt;Replace the internal port name with the one your mock server is running on locally. You are free to choose the virtual host and port.&lt;/P&gt;&lt;P&gt;It's critical to select "Non-SAP system" and HTTP, not HTTPS.&lt;/P&gt;&lt;P&gt;A new entry will appear under 'Mapping Virtual to Internal Systems'&lt;/P&gt;&lt;P&gt;- Make sure your mock bp server is still running on the host and IP you entered&lt;BR /&gt;- From the icons on the right, click on 'check availability..'&lt;BR /&gt;- You should see status 'reachable'&lt;/P&gt;&lt;P&gt;At this stage `&lt;A href="https://localhost:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;https://localhost:3005&lt;/A&gt;` is now mapped to `&lt;A href="https://s4-mock:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;https://s4-mock:3005&lt;/A&gt;` in the SAP Cloud.&lt;/P&gt;&lt;P&gt;You can also check in integration suite to see if Cloud Connector is connected.&lt;/P&gt;&lt;P&gt;- In the left hand menu select connectivity &amp;gt; cloud connectors.&lt;/P&gt;&lt;P&gt;Errors at this stage are likely related to&lt;/P&gt;&lt;P&gt;- Mistakes in the host name, port name, or system type&lt;BR /&gt;- The mock server or cloud connector is not running.&lt;/P&gt;&lt;H3 id="toc-hId--1158552581"&gt;Design integration flow&lt;/H3&gt;&lt;H4 id="toc-hId--1648469093"&gt;Create an integration flow&lt;/H4&gt;&lt;P&gt;- Login to BTP trial home&lt;BR /&gt;- From the left hand menu expand Services and select Instances and subscriptions&lt;BR /&gt;- Under 'Subscriptions' click on 'Integration Suite'&lt;BR /&gt;- On the left menu select expand 'Design' and select 'Integrations and APIs'&lt;BR /&gt;- Choose 'Create' on the top right to create a new package.&lt;BR /&gt;- Give it a name&lt;BR /&gt;- Shift to the 'Artifacts' tab&lt;BR /&gt;- Select 'Add' and choose 'Integration Flow' from the list&lt;BR /&gt;- Give it a name&lt;BR /&gt;- Click add&lt;BR /&gt;- Click on the newly created integration flow&lt;/P&gt;&lt;P&gt;The integration flow screen is read-only by default, click edit.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Set up the sender&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Define an 'address' for the SAP Integration Suite endpoint.&lt;/P&gt;&lt;P&gt;- Click on sender&lt;BR /&gt;- Click connector arrow&lt;BR /&gt;- Drag to start event&lt;BR /&gt;- In adapter type pop-up select HTTPS&lt;BR /&gt;- To configure the adapter click on the drawn line (if not selected)&lt;BR /&gt;- The settings are in the bottom panel, drag it up to expand it&lt;BR /&gt;- Navigate to 'connection' tab, enter the following:&lt;BR /&gt;- Address: `/request-business-partners`&lt;BR /&gt;- Authorisation: `User Role`&lt;BR /&gt;- User Role: `ESBMessaging.send`&lt;BR /&gt;- CSRF Protected: `Unchecked` (Cross-site request forgery).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Add flow elements&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The CodeJam has excellent instructions for walking through different flow steps as per their exercises.&lt;/P&gt;&lt;P&gt;I will summarise a few elements I used in my design.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Router&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;![Router](/assets/images/blog/integration/Integration-23-A.png)&lt;/P&gt;&lt;P&gt;- The router allows you to split the flow based on a condition.&lt;BR /&gt;- This example splits the flow into 4 based on the incoming URL&lt;BR /&gt;- For example where the incoming URL ends in "single/add"&lt;BR /&gt;- Re-call our integration flow address was "request-business-partners"&lt;BR /&gt;- In this case a message arrives to "request-business-partners/single/add"&lt;BR /&gt;- Intelligent Suite assigns the last part to the variable CamelHttpPath&lt;BR /&gt;- Which is part of the message header hence: header.CamelHttpPath.&lt;/P&gt;&lt;P&gt;The route path we are looking at in this example is the one that returns a single business partner with address data.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Content modifier - case 1&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Case 1:&lt;/P&gt;&lt;P&gt;- The content modifier allows us to modify the message header or body.&lt;BR /&gt;- In the above screenshot a content modifier is added directly after the routing.&lt;BR /&gt;- This deletes the CamelHttpPath, in this case "single/add"&lt;BR /&gt;- After routing we no longer need this part of the URL in the message header.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;JSON to XML converter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- This converts the JSON in the message body to XML.&lt;BR /&gt;- In the case of searching for a single BP the message body includes JSON:&lt;/P&gt;&lt;P&gt;```JSON&lt;BR /&gt;{&lt;BR /&gt;"employee_id": "1234567"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;- This will be converted to XML&lt;/P&gt;&lt;P&gt;```XML&lt;BR /&gt;&amp;lt;root&amp;gt;&lt;BR /&gt;&amp;lt;employee_id&amp;gt;1234567&amp;lt;/employee_id&amp;gt;&lt;BR /&gt;&amp;lt;/root&amp;gt;&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Content modifier - case 2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;![Content modifier](/assets/images/blog/integration/Integration-23-B.png)&lt;/P&gt;&lt;P&gt;- In this case the content modifier gets "employee_id" from the message body&lt;BR /&gt;- And assigns it to a new variable&lt;BR /&gt;- XPath can be used to access the XML value&lt;BR /&gt;- "/root/employee_id"&lt;BR /&gt;- The variable name is set as employee_id&lt;BR /&gt;- The data type is set as a Java string.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Request Reply&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Request reply let's us send a request to a server.&lt;/P&gt;&lt;P&gt;- Click on the Set employee_id&lt;BR /&gt;- Click add flow step on the canvas&lt;BR /&gt;- Select 'Request Reply' under call &amp;gt; external call&lt;BR /&gt;- Click on 'Request Reply'&lt;BR /&gt;- Click on 'connector' and drag to the receiver&lt;BR /&gt;- Select adapter type 'HTTP'&lt;BR /&gt;- Under 'HTTP' in the connector properties, select 'Connection'&lt;BR /&gt;- Enter the address of the cloud connector:&lt;BR /&gt;- The path for a single business partner with address data involves updating:&lt;BR /&gt;- Address: "&lt;A href="http://s4-mock:3006/sap/opu/odata/sap/API_Business_Partner/A_BusinessPartner('${property.employee_id" target="_blank" rel="noopener nofollow noreferrer"&gt;http://s4-mock:3006/sap/opu/odata/sap/API_Business_Partner/A_BusinessPartner('${property.employee_id&lt;/A&gt;}')"&lt;BR /&gt;- Query: "$expand=to_BusinessPartnerAddress"&lt;BR /&gt;- Proxy Type: `On-premise`&lt;BR /&gt;- Method: `GET`&lt;BR /&gt;- Authentication: `None`&lt;BR /&gt;- Save&lt;BR /&gt;- Deploy&lt;/P&gt;&lt;P&gt;To check deployment status go to Monitor &amp;gt; Integration and APIs. On this page the endpoint to access the service is shown:&lt;/P&gt;&lt;P&gt;"https://{your trial}-cpitrial03-rt.cfapps.ap21.hana.ondemand.com/http/request-business-partners"&lt;/P&gt;&lt;H4 id="toc-hId--1844982598"&gt;Test Cloud Integration with API client&lt;/H4&gt;&lt;P&gt;At this point we can test consuming the API through SAP Integration Suite.&lt;/P&gt;&lt;P&gt;Unlike testing the local mock server, we need to deal with authentication and security. The way this works is:&lt;/P&gt;&lt;P&gt;- We pass a "client id" and "secret" to a "token URL"&lt;BR /&gt;- BTP passes back a "token" which is valid for a certain period of time&lt;BR /&gt;- This "token" has to be attached to any requests to the API in Intelligent Suite.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Accessing security details&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- Navigate to your BTP trial account&lt;BR /&gt;- Expand services and click on 'instances and subscriptions'&lt;BR /&gt;- Scroll down to instances and look for your integration flow instance&lt;BR /&gt;- Integration Suite uses Cloud Foundry so the runtime will be cloud foundry&lt;BR /&gt;- It will likely be named 'default_it-rt_integration-flow'&lt;BR /&gt;- Scroll down to service keys and click on the service key, note the values for:&lt;BR /&gt;- "clientid"&lt;BR /&gt;- "clientsecret"&lt;BR /&gt;- "url"&lt;BR /&gt;- "tokenurl"&lt;/P&gt;&lt;P&gt;For local testing we can hardcode these values in our test tools, but be careful not to upload or share these anywhere.&lt;/P&gt;&lt;P&gt;In production, never hardcode secrets or tokens. Use environment variables or a secure credential store.&lt;/P&gt;&lt;P&gt;**Request a token with Bruno**&lt;/P&gt;&lt;P&gt;In Bruno create a new request:&lt;/P&gt;&lt;P&gt;- Name: `TOKEN`&lt;BR /&gt;- Method: `POST`&lt;BR /&gt;- URL: enter the "tokenurl" from above&lt;BR /&gt;- Navigate to the Params tab:&lt;BR /&gt;- Select 'Add Param'&lt;BR /&gt;- Enter name: `grant_type` path: `client_credentials`&lt;BR /&gt;- Navigate to Auth&lt;BR /&gt;- Switch 'Inherit' to 'Basic Auth' and enter:&lt;BR /&gt;- Username: `client_id`&lt;BR /&gt;- Password: `client_secret`&lt;BR /&gt;- Save&lt;/P&gt;&lt;P&gt;Send the request. This should return a JSON document with a long value in "access_token". There should also be a expiry time e.g. 4199 seconds.&lt;/P&gt;&lt;P&gt;When sending a request, if the token is not valid Integration Suite will return a 401 error code. This means we need to request a new token.&lt;/P&gt;&lt;P&gt;Within Bruno we can save this token value to a variable. This saves us from copying and pasting it into other requests.&lt;/P&gt;&lt;P&gt;- Goto Environments &amp;gt; Configure &amp;gt; Create Environment&lt;BR /&gt;- Name: 'integration-flow'&lt;BR /&gt;- Click '+ Add Variable'&lt;BR /&gt;- Enter name: 'access_token'&lt;BR /&gt;- For value, leave it blank&lt;BR /&gt;- Save and close&lt;/P&gt;&lt;P&gt;Navigate to 'scripts' under the TOKEN request. Under Post Request enter:&lt;/P&gt;&lt;P&gt;```JS&lt;BR /&gt;if (res.status == 200) {&lt;BR /&gt;const token = res.body.access_token;&lt;BR /&gt;bru.setEnvVar("access_token",token);&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;- If the request receives a response (status 200)&lt;BR /&gt;- Get the access_token value from the response&lt;BR /&gt;- Assign to environment variable "access_token".&lt;/P&gt;&lt;P&gt;Save and run the TOKEN request.&lt;BR /&gt;Goto the environment and click 'configure'. You should see the access_token variable updated with the value from the response.&lt;/P&gt;&lt;P&gt;**Test the API with a request with for a single BP**&lt;/P&gt;&lt;P&gt;- In Bruno create a new request&lt;BR /&gt;- Name: "BP via integration suite"&lt;BR /&gt;- URL: "https://{your-trial}.it-cpitrial03-rt.cfapps.ap21.hana.ondemand.com/http/request-business-partners"&lt;BR /&gt;- Replace the above with your actual endpoint from Intelligent Suite.&lt;BR /&gt;- Navigate to the 'Auth' tab&lt;BR /&gt;- Click on 'Inherit' and change to 'Bearer Token'&lt;BR /&gt;- In Token enter: `{{access_token}}`&lt;BR /&gt;- This eferences an environment variable in Bruno&lt;BR /&gt;- Add the request body&lt;BR /&gt;- The JSON with our employee ID&lt;/P&gt;&lt;P&gt;```JSON&lt;BR /&gt;{&lt;BR /&gt;"employee_id": "1003764"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;H2 id="toc-hId--1454690089"&gt;Building and testing a frontend&lt;/H2&gt;&lt;P&gt;At this point a request to SAP Integration Suite should be successfully routed and transformed to the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;The next part would be building and testing the web app. However, there is too much to cover in building and testing the frontend to cover in this post. I may produce a video on this if anyone is interested.&lt;/P&gt;&lt;H2 id="toc-hId--1651203594"&gt;Final thoughts&lt;/H2&gt;&lt;P&gt;This technology stack is definitely a bit overkill for a simple 'search' portal, but it is fairly easy to put together as long as you are careful when specifying paths, hosts and port names.&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you'd like to discuss further please feel free to connect on &lt;A href="https://www.linkedin.com/in/alexanderroan/" target="_self" rel="nofollow noopener noreferrer"&gt;LinkedIn - Alexander Roan&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/build-a-web-app-and-connect-to-s-4hana-with-sap-integration-suite/ba-p/14179607"/>
    <published>2025-08-13T12:45:21.973000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-new-software-delivery-option-add-on-product/ba-p/14094161</id>
    <title>SAP BTP ABAP Environment – New software delivery option “Add-On Product”</title>
    <updated>2025-08-13T13:33:11.143000+02:00</updated>
    <author>
      <name>Nora_Klemp</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1641196</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;EM&gt;&lt;SPAN class=""&gt;Disclaimer: Information provided in this blog post serves as general overview only and does not replace legal agreements between SAP and its contractual parties. As this blog post is updated in an irregular fashion, it cannot serve as single point of truth. Please refer to your assigned SAP account/partner manager for most up-to-date information, especially regarding applicable licensing and pricing models.&lt;/SPAN&gt;&lt;/EM&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1581075429"&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Introduction&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;SAP BTP ABAP Environment&lt;/STRONG&gt;&amp;nbsp;(aka Steampunk) supports now two options for partners to deliver products to their customers.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Partners build side-by-side extensions and deliver them as multitenant software-as-a-service (SaaS) solutions. This option is considered as a &lt;STRONG&gt;service offering&lt;/STRONG&gt;&lt;/SPAN&gt;.&amp;nbsp;&lt;SPAN&gt;The &lt;/SPAN&gt;&lt;SPAN&gt;partner is fully responsible for the development and production including the operations of the multitenant SaaS solution. The customers can adapt the mutlitenant SaaS solution to their business using&amp;nbsp;&lt;STRONG&gt;key-user extensibility&lt;/STRONG&gt;. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;There are also use cases where customers want to operate the partner solution in their own environment or have the need for more comprehensive enhancement of the partner solution using&amp;nbsp;&lt;STRONG&gt;developer extensibility &lt;/STRONG&gt;in addition to key user extensibility&amp;nbsp;to meet the customer business needs. The right way for partners to deliver such products is the newly available software delivery option, called &lt;STRONG&gt;“Add-On Product”&lt;/STRONG&gt;&amp;nbsp;(first announced as "Installable Product"). It allows partners to provide their solution to customers as a&amp;nbsp;&lt;STRONG&gt;software offering&lt;/STRONG&gt;&amp;nbsp;("Add-On Product") and not as a service. The partner solution offered as software is available for all the customers to whom it was sold by the partner. The customer installs and operates it in his own SAP BTP ABAP Environment systems.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;The market place for partner solutions delivered as an Add-On Product is the &lt;A href="https://www.sap.com/store.html" target="_self" rel="noopener noreferrer"&gt;SAP Store&lt;/A&gt;. A prerequisite to benefit from the new software delivery option is a &lt;STRONG&gt;SAP PE Build contract&lt;/STRONG&gt; for the respective partner.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Overview about the two delivery options for commercial partners:&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Characteristic&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Multitenant SaaS Solution&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Add-On Product (New Option)&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="33px"&gt;Offering type&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="33px"&gt;Service&amp;nbsp;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="33px"&gt;Software&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Runs in BTP Global Account owned by&amp;nbsp;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Partner&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Customer&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Operations responsibility&amp;nbsp;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Partner&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Customer&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Schedule upgrades/patches responsibility&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Partner&amp;nbsp;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Customer&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Infrastructure costs taken by&amp;nbsp;&amp;nbsp;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Partner&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Customer&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Extensibility option&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Key-user extensibility&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Developer extensibility&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Commercial prerequisites&lt;/TD&gt;&lt;TD&gt;Contract for productive use&lt;/TD&gt;&lt;TD&gt;SAP PE Build contract with SAP Store enhancement&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Product offering in SAP Store is mandatory&lt;/TD&gt;&lt;TD&gt;No&lt;/TD&gt;&lt;TD&gt;Yes&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;A partner can offer the same product as a multitenant SaaS Solution and as an Add-On Product at the same time for different customers. With such a &lt;STRONG&gt;hybrid approach&lt;/STRONG&gt;, a partner can fulfill both, requirements of smaller customers for a standardized service at minimum infrastructure costs and requirements of bigger customers regarding developer extensibility and running the product in the customer's infrastructure.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1384561924"&gt;&lt;STRONG&gt;What is SAP PE Build?&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;SAP offers various partner programs and models. One of these is the &lt;STRONG&gt;SAP PartnerEdge program&lt;/STRONG&gt;. The SAP PartnerEdge program has four different tracks, depending on the partner's focus. These tracks are Sell, Build, Service, and Run. To deliver the Add-On Product on the SAP BTP ABAP Environment, the partner requires the SAP PE track &lt;STRONG&gt;"Build".&lt;/STRONG&gt;&amp;nbsp;Using any other track is not possible.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The SAP PartnerEdge Build program provides SAP partners access to resources, services, and benefits to successfully collaborate with SAP. SAP PartnerEdge – Build is a licensing and GTM model for partners that design, develop, and commercialize applications and software that extend the value of SAP applications. The model features standard terms and fixed revenue share pricing. Partners can publish solutions in the SAP Store, so that customers can consume the products through them. The provision of the Add-On product is only permitted and possible via the SAP Store.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The PE Build Track provides several benefits for the partner.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;Onboarding support&lt;/U&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;U&gt;:&lt;/U&gt; Resources include development and test licenses, advisory and support services, installation and migration guides, and SAP Open Source offerings on GitHub.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;Enablement tools&lt;/U&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;U&gt;:&lt;/U&gt; Help is at hand with support and help portals, how-to guides, developer communities, the SAP Cloud Appliance Library tool, and SAP API Business Hub.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;Training resources&lt;/U&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;U&gt;:&lt;/U&gt; You can hone your skills using the openSAP platform, the SAP&amp;nbsp; Enterprise Architecture Explorer site, and SAP Learning Journey guides.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1188048419"&gt;&lt;STRONG&gt;Requirements and Licensing&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;Partners must meet some requirements to participate in the PE Build Program. These requirements include the following:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Valid due diligence&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Need to agree to the &lt;A href="https://partneredge.sap.com/en/partnership/development/build.html" target="_blank" rel="noopener noreferrer"&gt;SAP PartnerEdge program&lt;/A&gt; agreements&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Completion of compliance trainings&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The Accounts payable is in good standing&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Fulfillment of the compliant partnership requirements&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Paying of the annual program fee&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Maintenance of ongoing generic and track-specific program requirements&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A href="https://partneredge.sap.com/en/partnership/development/sap-app-center.html" target="_blank" rel="noopener noreferrer"&gt;Prerequisites for publishing on SAP store&lt;/A&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The respective prices for a partner vary because they depend on the BTP services used, the revenue share, and the annual fee. You can find more information about pricing, revenue share and annual contributions &lt;/SPAN&gt;&lt;SPAN&gt;here&lt;/SPAN&gt;&lt;SPAN&gt;. All information about the Terms &amp;amp; Conditions is available &lt;/SPAN&gt;&lt;A href="https://www.sap.com/about/trust-center/agreements/partner-edge/leveled-partner-agreements.html?sort=latest_desc&amp;amp;tag=agreements%3Aleveled-partner-agreements-silver-gold-platinum%2Fbuild-partner&amp;amp;tag=finder-technical%3Aagreements%2Fagreement-type%2Fgeneral-terms-and-conditions" target="_blank" rel="noopener noreferrer"&gt;here&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The following material numbers are required for an SAP BTP ABAP environment.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE border="1" width="73.46938775510205%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;License Type&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;Material number&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;Material name&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;Metric&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;Block size&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="57px"&gt;Min. blocks&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="14.285714285714286%" height="85px"&gt;PE Build&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="85px"&gt;8006181&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="85px"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BTP&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ABAP &lt;/SPAN&gt;&lt;SPAN class=""&gt;E&lt;/SPAN&gt;&lt;SPAN class=""&gt;nvironment, runtime&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="85px"&gt;GB Memory&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="85px"&gt;16 GB&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="85px"&gt;1&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="14.285714285714286%" height="85px"&gt;PE Build&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="85px"&gt;8006182&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="85px"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BTP&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ABAP &lt;/SPAN&gt;&lt;SPAN class=""&gt;E&lt;/SPAN&gt;&lt;SPAN class=""&gt;nvironment, persistence&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="85px"&gt;GB Memory&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="85px"&gt;16GB&lt;/TD&gt;&lt;TD width="14.285714285714286%" height="85px"&gt;2&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;SPAN&gt;The minimum setup of a system is &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;16 GB runtime&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (ABAP runtime) and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;32 GB persistence&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (HANA Cloud memory). This is why customers and partners have to buy at least 1 unit of 16 GB runtime and 2 units of 16 GB persistence in order to get started.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Furthermore, the partner also needs authorization to make their own software available via the SAP Store.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Any partner selling a GTM-ready solution must adhere to paying a revenue share to SAP according to the price list for the Build track of the SAP PartnerEdge program, regardless of whether SAP facilitated the customer transaction (for example, through an SAP sales representative) or not.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-991534914"&gt;&lt;SPAN&gt;How does the partner provide the Add-On Product?&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;The approach for developing and building an Add-On Product is the same as for the&amp;nbsp;multitenancy SaaS product.&amp;nbsp;The partner development is done via the BTP Global Account and then the Landscape Portal is used to build the product based on the developed custom software component(s).&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;From then on, the process differs from that of the multitenancy SaaS product.&amp;nbsp;&lt;/P&gt;&lt;P&gt;The partner registers the Add-On Product in the SAP Solution Hub and maintains all necessary data for provision in the SAP Store.&amp;nbsp;&amp;nbsp;&lt;SPAN&gt;The partner is getting access to the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;SAP&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;Solution Hub via the mandatory SAP&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;PE&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;Build contract. In the final step, the partner publishes the product in the Landscape Portal.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Optionally the partner can certify the Add-On Product to assure a defined level of quality and compatibility which is visible in the SAP Store. Please&amp;nbsp;check out the &lt;A href="https://partneredge.sap.com/en/partnership/development/certify_software.html?#section-1-accordion-panel-section-widewidgets-accordionitem_copy_8" target="_self" rel="noopener noreferrer"&gt;SAP Integration and Certification Center&lt;/A&gt;&amp;nbsp;to find out which certificate fits to your needs and how the certification process looks like.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-795021409"&gt;&lt;STRONG&gt;What does the customer need to do?&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;The customer needs to select the product from the &lt;A href="https://www.sap.com/store.html" target="_blank" rel="noopener noreferrer"&gt;SAP Store&lt;/A&gt; and needs to contact the partner via the respective form in the SAP Store. After selling the product by the partner to the customer, a signed &lt;STRONG&gt;Amendment to SAP Business Technology Platform Supplemental Terms and Conditions&lt;/STRONG&gt; &lt;STRONG&gt;for ABAP Add-ons&lt;/STRONG&gt; is required of the customer. This amendment is automatically part of the&amp;nbsp;&lt;STRONG&gt;SAP Business Technology Platform Supplemental Terms and Conditions&lt;/STRONG&gt;&amp;nbsp;for new BTP contracts and renewed BTP contracts with signed date &lt;STRONG&gt;on April 23, 2025 or later&lt;/STRONG&gt;. This is also true for all SAP Build contracts.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For customer BTP contracts signed &lt;STRONG&gt;before&amp;nbsp;April 23, 2025&lt;/STRONG&gt;, the customer (or the partner on behalf of the customer) need to create a customer ticket for component &lt;STRONG&gt;BC-CP-ABA&lt;/STRONG&gt;. This customer ticket represents a service request for SAP to initiate a DocuSign process that the customer signs the required above-mentioned amendment. Please specify in the ticket:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Purpose: Sign amendment for ABAP Add-ons&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Customer name and ID (if the ticket was created by the partner on behalf of the customer)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Contact email address on customer side who will be the recipient for the DocuSign process&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The amendment needs to be signed only once per customer and is independent of the vendor of the product to be installed. The customer can only see the product in the Landscape Portal if the amendment is signed.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The customer is responsible to install the product and to trigger the installation of both upgrades and patches provided by the partner. After the initiated purchasing process via SAP Store, all these lifecycle activities are supported by the &lt;A href="https://help.sap.com/docs/sap-btp-abap-environment/landscape-portal/landscape-portal" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Landscape Portal&lt;/STRONG&gt;&lt;/A&gt;. The Landscape Portal is part of the SAP BTP ABAP Environment and does not cause additional costs.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-598507904"&gt;Further information:&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;If you want to apply for the SAP PartnerEdge Build program, please &lt;/SPAN&gt;&lt;SPAN&gt;use the &lt;/SPAN&gt;&lt;A href="https://sappartneredgeapplication.cfapps.eu10.hana.ondemand.com/?partnerType=BLD" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;online application form&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;or refer to the&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://partneredge.sap.com/en.html" target="_blank" rel="noopener noreferrer"&gt;SAP Partner Portal&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can find more technical information about the Add-On Product&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;In the documentation of the &lt;A href="https://help.sap.com/docs/sap-btp-abap-environment/landscape-portal/landscape-portal" target="_self" rel="noopener noreferrer"&gt;Landscape Portal&lt;/A&gt;, applications for product lifecycle management&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In the recording of the&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://www.youtube.com/watch?v=Pxb8NSAS9Vc" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;Devtoberfest Session: Building Partner Products on SAP BTP ABAP Environment&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-abap-environment-new-software-delivery-option-add-on-product/ba-p/14094161"/>
    <published>2025-08-13T13:33:11.143000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/embedding-trust-watermarking-for-ai-compliance-and-lifecycle-management/ba-p/14180182</id>
    <title>Embedding Trust: Watermarking for AI Compliance and Lifecycle Management</title>
    <updated>2025-08-15T10:01:29.832000+02:00</updated>
    <author>
      <name>Jiayu_Wang</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2188863</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1737744677"&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;As AI-generated content becomes deeply integrated into enterprise workflows, ensuring authenticity, traceability, and compliance is more critical than ever. AI-generated documents, reports, media files, and communication content are increasingly driving decisions, automation, and customer interactions. As a result, organizations are no longer just creating content—they're responsible for governing it across its entire lifecycle.&lt;/P&gt;&lt;P&gt;Watermarking—once a niche solution primarily used for digital rights management—is now emerging as a key enabler of AI content governance. By embedding information directly into content files—such as their creation source, generation method, AI model, or associated policy metadata—watermarks help ensure that AI outputs are verifiable, policy-aware, and audit-ready.&lt;/P&gt;&lt;P&gt;In this blog, we explore the role of watermarking in enabling AI compliance, supporting lifecycle management, and building trusted AI content ecosystems at scale. We will cover the current challenges enterprises face, how watermarking works, and what’s needed for watermarking to evolve with generative AI.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1541231172"&gt;&lt;SPAN&gt;Compliance by Design: A Necessity for Watermarking AI-Generated Content&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;AI-generated content is increasingly subject to regulatory and corporate governance. Legal frameworks such as the &lt;SPAN&gt;&lt;A href="https://eur-lex.europa.eu/eli/reg/2024/1689/oj" target="_blank" rel="noopener nofollow noreferrer"&gt;EU AI Act&lt;/A&gt;, &lt;A href="https://leginfo.legislature.ca.gov/faces/billTextClient.xhtml?bill_id=202320240SB942" target="_blank" rel="noopener nofollow noreferrer"&gt;California AI Transparency Act&lt;/A&gt;, &lt;A href="https://www.chinalawtranslate.com/en/ai-labeling/" target="_blank" rel="noopener nofollow noreferrer"&gt;China Measures for Labeling of AI-Generated Synthetic Content&lt;/A&gt; and GDPR, alongside internal audit and information governance policies, now require that content produced by AI be:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Explicitly labelled as AI-generated&lt;/LI&gt;&lt;LI&gt;Traceable to its source&lt;/LI&gt;&lt;LI&gt;Managed in line with legal retention policies&lt;/LI&gt;&lt;LI&gt;Auditable for integrity and responsible use&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Beyond legal compliance, enterprises must ensure that AI-generated content can be classified, archived, audited, and ultimately destroyed based on business rules. This is where information lifecycle management (ILM) comes in. From creation to retention, archiving to deletion, each stage of content use must be policy-driven and secure.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jiayu_Wang_0-1755138791801.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300588iB7B1F269181C0876/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jiayu_Wang_0-1755138791801.png" alt="Jiayu_Wang_0-1755138791801.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Traditional metadata alone is not sufficient to meet these goals—metadata can be stripped or altered. Watermarking offers a more durable, embedded approach to ensure content governance is inherently built into the content itself.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1344717667"&gt;&lt;SPAN&gt;What Is Watermarking&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Watermarking is the process of embedding additional information—either visible or invisible—into digital content. This information can be extracted later to verify origin, track usage, or enforce compliance. Watermarks can include model identifiers, timestamps, legal classifications, or lifecycle metadata.&lt;/P&gt;&lt;H3 id="toc-hId-1277286881"&gt;&lt;SPAN&gt;Methods of Watermarking&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Watermarks can be embedded in various ways depending on the content type:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jiayu_Wang_1-1755138791801.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300590i9D3A9D80B2B69000/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jiayu_Wang_1-1755138791801.png" alt="Jiayu_Wang_1-1755138791801.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Images: Frequency‑domain methods such as Discrete Cosine Transform (DCT) and matrix‑factorization techniques like Singular Value Decomposition (SVD) enable imperceptible watermark embedding while preserving visual fidelity.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jiayu_Wang_2-1755138791801.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300589i7B527BF337441632/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jiayu_Wang_2-1755138791801.png" alt="Jiayu_Wang_2-1755138791801.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jiayu_Wang_3-1755138791801.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300591i6A95D89243E094EA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jiayu_Wang_3-1755138791801.png" alt="Jiayu_Wang_3-1755138791801.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Videos: Frame-based watermarks allow tracking across transformations and streaming.&lt;/LI&gt;&lt;LI&gt;Text: Emerging techniques embed watermarks in AI‑generated text by manipulating token‑selection patterns or introducing subtle semantic perturbations that remain imperceptible to readers.&lt;/LI&gt;&lt;LI&gt;Audio: Watermarks can be applied in the frequency or time domain (e.g., using spread spectrum or echo hiding techniques), allowing resilient tracking through compression, filtering, and re-recording.&lt;/LI&gt;&lt;LI&gt;PDF files: Watermarks can be embedded in content streams or structure elements without altering visual layout.&lt;/LI&gt;&lt;LI&gt;Tabular data: In structured data such as CSV or Excel files, watermarking can be applied by subtly modifying statistical properties or introducing pattern-based noise within numerical precision thresholds—enabling detection without compromising data utility.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1080773376"&gt;&lt;SPAN&gt;Categories of watermarking&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Watermarks can be categorized in two main ways:&lt;STRONG&gt; visibility&lt;/STRONG&gt; and&lt;STRONG&gt; resilience to&lt;/STRONG&gt; &lt;STRONG&gt;manipulation&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;1. By Visibility&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Visible watermarks: Logos, seals, or text overlays that indicate ownership or status.&lt;/LI&gt;&lt;LI&gt;Invisible watermarks: Algorithmically embedded data that is imperceptible to the human eye but can be detected programmatically.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 2. By Resilience to Manipulation&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Robust watermarks: Designed to survive edits like cropping, compression, scaling, or format changes.&lt;/LI&gt;&lt;LI&gt;Fragile watermarks: Easily removed when content is altered, useful for detecting tampering or unauthorized modification.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jiayu_Wang_4-1755138791801.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300592i2ADFB7A3D677100D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jiayu_Wang_4-1755138791801.png" alt="Jiayu_Wang_4-1755138791801.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-884259871"&gt;&lt;SPAN&gt;Watermarks &amp;amp; Metadata&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;While both watermarking and metadata aim to enrich digital files with useful context, they serve different purposes and come with unique trade-offs. &lt;STRONG&gt;Metadata&lt;/STRONG&gt; is easily accessible and widely supported across systems, making it ideal for fast retrieval, tagging, and classification. However, it can be removed, altered, or lost during file transfers, format conversions, or malicious tampering.&lt;/P&gt;&lt;P&gt;On the other hand, &lt;STRONG&gt;watermarking&lt;/STRONG&gt; embeds information directly into the content itself—making it more persistent and tamper-resistant. It remains intact even if a file is renamed, copied, or stripped of its metadata.&lt;/P&gt;&lt;P&gt;Used together, they form a powerful combination:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Metadata enables automation and policy-driven governance,&lt;/LI&gt;&lt;LI&gt;Watermarks provide long-term traceability and authenticity—even across systems.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-558663647"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-362150142"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-165636637"&gt;&lt;SPAN&gt;Applications of AI Watermarking&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Watermarking serves a wide range of compliance and security functions in the context of AI. It enables enterprises to embed critical information at the moment of content generation and retrieve it later to verify its legitimacy, origin, and policy alignment.&lt;/P&gt;&lt;H3 id="toc-hId-98205851"&gt;&lt;STRONG&gt;Content Provenance and Authentication&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;One of the most impactful applications is &lt;STRONG&gt;authenticity verification&lt;/STRONG&gt;. Watermarks can confirm whether a piece of content—image, document, or video—was generated by AI, when it was created, and under what policy. This is essential for trust and transparency, especially in regulated industries or public-facing communications.&lt;/P&gt;&lt;P&gt;Watermarks are also crucial for verifying the authenticity and ownership of digital artworks, particularly in NFTs, protecting intellectual property. They can be also used to verify the integrity of legal, financial, and HR documents, ensuring compliance and audit trail reliability.&lt;/P&gt;&lt;H3 id="toc-hId--173539023"&gt;&lt;STRONG&gt;Watermarking for Lifecycle Governance&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Beyond detection, watermarks help enforce &lt;STRONG&gt;Information Lifecycle Management (ILM)&lt;/STRONG&gt; policies automatically. At each stage of a file's life, watermarks enable smart, compliant handling:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Creation&lt;/STRONG&gt;: Embed watermarks at the point of generation to record the origin and purpose.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Retention&lt;/STRONG&gt;: Encode legal tags or policy rules to guide how long a file must be kept.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Audit&lt;/STRONG&gt;: Watermarks track changes and access history, supporting audit trails.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Archiving&lt;/STRONG&gt;: Even in long-term storage, watermarks preserve authenticity and ownership.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Destruction&lt;/STRONG&gt;: Watermarks indicate when deletion is permitted and record that action as proof of compliance.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--76649521"&gt;&lt;SPAN&gt;The Strategic Importance of Watermarking&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Watermarking is more than a technical solution—it’s a strategic enabler for enterprise-grade AI governance. As organizations generate increasing volumes of AI content, ensuring &lt;STRONG&gt;responsibility, auditability, and control&lt;/STRONG&gt; becomes essential. Invisible watermarking provides the foundation for this shift, turning untraceable content into &lt;STRONG&gt;self-describing, policy-aware assets&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;From a business perspective, watermarking brings several key advantages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Proactive Compliance with AI Regulations&lt;/STRONG&gt;&lt;BR /&gt;Watermarks help enterprises meet emerging legal requirements, such as those outlined in the EU AI Act, by embedding model identity, generation source, and disclosure metadata directly into files. This enables content-level traceability and accountability at scale.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Enhanced Data Integrity and Auditability&lt;/STRONG&gt;&lt;BR /&gt;Embedded watermarks offer a tamper-resistant record of content origin, usage policy, and lifecycle events—supporting internal audits, external reporting, and security reviews.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Seamless Integration with SAP ILM and IRM Workflows&lt;/STRONG&gt;&lt;BR /&gt;Watermarking aligns naturally with SAP's Information Lifecycle Management and Information Retention Manager systems. It enables automated decision-making for retention, archiving, or deletion based on metadata embedded at the time of creation.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Metadata-Driven File Classification and Governance&lt;/STRONG&gt;&lt;BR /&gt;Watermarked content can carry its own classification, such as document type or sensitivity level, enabling intelligent automation of compliance actions without relying solely on external metadata or manual tagging.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Self-Aware Content for Smarter Automation&lt;/STRONG&gt;&lt;BR /&gt;Perhaps most importantly, watermarking empowers content to become &lt;STRONG&gt;self-aware&lt;/STRONG&gt;—capable of communicating its own identity, rules, and restrictions. This makes it possible to build more adaptive, intelligent document governance systems that respond in real time to compliance needs.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In short, watermarking transforms AI-generated content from a potential risk into a managed, compliant, and trustworthy asset—one that supports both operational efficiency and long-term governance goals.&lt;/P&gt;&lt;H2 id="toc-hId--273163026"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--469676531"&gt;&lt;SPAN&gt;Outlook: The Evolution of Watermarking in the Generative AI Era&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;As generative AI continues to advance, watermarking must evolve to meet the growing demands of scale, robustness, and interoperability.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Scalability&lt;/STRONG&gt;: Future watermarking systems must support high-volume content generation and real-time applications such as streaming media and cloud-native pipelines.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Robustness&lt;/STRONG&gt;: As AI-generated content proliferates, watermarks must be resilient against a wide range of manipulations — from basic operations like compression, cropping, and format conversion, to more advanced challenges such as screenshots and adversarial attacks. Crucially, they must remain detectable across diverse content types and evolving AI output formats.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Standards and Interoperability&lt;/STRONG&gt;: One major challenge is the lack of unified, industry-wide standards. To address this, the adoption of open standards like &lt;STRONG&gt;C2PA (Coalition for Content Provenance and Authenticity)&lt;/STRONG&gt; is critical. Open-source solutions such as &lt;STRONG&gt;Meta’s VideoSeal&lt;/STRONG&gt; and &lt;STRONG&gt;DeepMind’s SynthID for text/image watermarking&lt;/STRONG&gt; are also paving the way for broader adoption and transparency.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In short, watermarking must become &lt;STRONG&gt;more intelligent, resilient, and standardized&lt;/STRONG&gt; to remain a trusted foundation for AI content governance across industries.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--666190036"&gt;&lt;SPAN&gt;Conclusion: Authenticity Matters in the Age of AI&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;As AI becomes a core part of enterprise systems, the ability to verify, trace, and govern content becomes essential. Watermarking provides a foundational layer of trust—ensuring that content is not only intelligent, but also accountable.&lt;/P&gt;&lt;P&gt;In the era of generative AI, authenticity is not optional—it’s a requirement.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;[References]&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://c2pa.org/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://c2pa.org/&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://artificialintelligenceact.eu/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://artificialintelligenceact.eu/&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://www.whitehouse.gov/briefing-room/presidential-actions/2023/10/30/executive-order-on-the-safe-secure-and-trustworthy-development-and-use-of-artificial-intelligence/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.whitehouse.gov/briefing-room/presidential-actions/2023/10/30/executive-order-on-the-safe-secure-and-trustworthy-development-and-use-of-artificial-intelligence/&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/topics/information-lifecycle-management" target="_blank"&gt;https://community.sap.com/topics/information-lifecycle-management&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://arxiv.org/pdf/1407.4735" target="_blank" rel="noopener nofollow noreferrer"&gt;https://arxiv.org/pdf/1407.4735&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://arxiv.org/pdf/2303.15435" target="_blank" rel="noopener nofollow noreferrer"&gt;https://arxiv.org/pdf/2303.15435&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://arxiv.org/pdf/2412.09492" target="_blank" rel="noopener nofollow noreferrer"&gt;https://arxiv.org/pdf/2412.09492&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://arxiv.org/pdf/2506.05891" target="_blank" rel="noopener nofollow noreferrer"&gt;https://arxiv.org/pdf/2506.05891&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://arxiv.org/pdf/2109.09712" target="_blank" rel="noopener nofollow noreferrer"&gt;https://arxiv.org/pdf/2109.09712&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/embedding-trust-watermarking-for-ai-compliance-and-lifecycle-management/ba-p/14180182"/>
    <published>2025-08-15T10:01:29.832000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-business-ai-driving-the-next-wave-of-enterprise-innovation/ba-p/14182361</id>
    <title>SAP Business AI – Driving the Next Wave of Enterprise Innovation</title>
    <updated>2025-08-17T18:03:30.260000+02:00</updated>
    <author>
      <name>chandra_reddy1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/271052</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1737805072" id="toc-hId-1737806118"&gt;Why It Matters&lt;/H2&gt;&lt;P&gt;AI is no longer a distant concept—it’s transforming how businesses operate today. Generative AI alone is projected to add up to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;$4.4 trillion&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in global productivity within the next five years. For SAP customers, who generate 87% of the world’s commerce, the impact of embedding AI directly into core business processes is both immediate and profound.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Key Highlights:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Joule – The AI Copilot&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Acts as SAP’s&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;unified front end&lt;/STRONG&gt;, enabling users to work in natural language.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Delivers context-aware insights, transaction execution, and navigation across SAP apps.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Boosts efficiency by&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;up to 80%&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for employees.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Coordinates specialized AI agents for complex tasks (e.g., dispute resolution, sustainability planning).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Integrates with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Microsoft Copilot for Office 365&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for seamless cross-platform experiences.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Embedded AI – Innovation at Scale&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;AI features are built directly into SAP’s cloud solutions (ERP, Supply Chain, HCM, CRM, Procurement, etc.).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Use cases already improving business outcomes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Henkel&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;→ Faster, data-driven decisions with AI in SAP Analytics Cloud.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;FC Bayern Munich&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;→ Accelerated recruiting with generative AI in SAP SuccessFactors.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Gibson&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;→ Boosted email revenue by 50% through AI-powered customer engagement.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Over&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;100+ new AI features released in 2024&lt;/STRONG&gt;, with continuous quarterly rollouts.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;AI Foundation – Building Custom Solutions&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Part of SAP Business Technology Platform (BTP).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Provides developers with reusable AI services, lifecycle management, and access to leading LLMs (OpenAI, Google, AWS, Meta, etc.).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Offers deep integration with SAP HANA Cloud Vector Engine and SAP Knowledge Graph for contextualized business data.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Enables low-data AI innovation, such as invoice due date predictions or sales order auto-filling .&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Responsible AI at SAP&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Commitment to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ethics, privacy, and security&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;No partner or third-party models are trained on customer data.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;AI ethics embedded in governance via SAP’s AI Ethics Steering Committee.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Guardrails against misuse, bias, and security risks.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Alignment with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UNESCO AI ethics standards&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;EU AI Act compliance&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;SAP’s vision is&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;AI-first and suite-first&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;AI copilots like Joule will become hyper-personalized.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;More AI-driven automation across finance, HR, supply chain, and sustainability.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The future is already here. With SAP Business AI, organizations can run better, innovate faster, and empower people to focus on what truly matters.&lt;/P&gt;&lt;P&gt;Explore more:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;A class="" href="https://discovery-center.cloud.sap/ai-catalog/" target="_new" rel="noopener nofollow noreferrer"&gt;SAP Business AI Feature Catalog&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;A class="" href="https://learning.sap.com/learning-journeys?page=1&amp;amp;query=artificial+intelligence" target="_new" rel="noopener noreferrer"&gt;Learning Journeys&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-business-ai-driving-the-next-wave-of-enterprise-innovation/ba-p/14182361"/>
    <published>2025-08-17T18:03:30.260000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/enhancing-security-in-identity-authentication-service-ias-with-certificate/ba-p/14182289</id>
    <title>Enhancing Security in Identity Authentication Service (IAS) with Certificate-Based Authentication</title>
    <updated>2025-08-17T20:35:45.189000+02:00</updated>
    <author>
      <name>sushilgupta857</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/720925</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1608722508"&gt;&lt;span class="lia-unicode-emoji" title=":locked_with_key:"&gt;🔐&lt;/span&gt;Enhancing Security in Identity Authentication Service (IAS) with Certificate-Based Authentication&lt;/H1&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":sparkles:"&gt;✨&lt;/span&gt;&lt;EM&gt;“Moving beyond Client ID &amp;amp; Secret — strengthening IAS with certificate-based authentication for enterprise-grade security.”&lt;/EM&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1541291722"&gt;About Me&lt;/H2&gt;&lt;P&gt;Hare Krishna &lt;span class="lia-unicode-emoji" title=":folded_hands:"&gt;🙏&lt;/span&gt; I am an &lt;STRONG&gt;SAP BTP Cloud Architect&lt;/STRONG&gt;, sharing practical insights, solutions, and real-world experiences from the SAP ecosystem.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1344778217"&gt;&lt;span class="lia-unicode-emoji" title=":blue_book:"&gt;📘&lt;/span&gt;Introduction&lt;/H2&gt;&lt;P&gt;In modern enterprise landscapes, &lt;STRONG&gt;Identity Authentication Service (IAS)&lt;/STRONG&gt; plays a key role in securing access to applications and systems. Traditionally, system user authentication in IAS relied on &lt;STRONG&gt;Client ID and Secret&lt;/STRONG&gt; (essentially a username and password mechanism). While simple to implement, it comes with inherent risks—&lt;span class="lia-unicode-emoji" title=":key:"&gt;🔑&lt;/span&gt; password leakage and &lt;span class="lia-unicode-emoji" title=":file_cabinet:"&gt;🗄&lt;/span&gt;️ storage vulnerabilities.&lt;/P&gt;&lt;P&gt;To address these challenges, IAS provides the option to use &lt;STRONG&gt;certificate-based authentication&lt;/STRONG&gt;, offering a stronger and more secure alternative.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="IAS_Authentication_Comparison.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301717iF1B2C62C9E40AC51/image-size/medium?v=v2&amp;amp;px=400" role="button" title="IAS_Authentication_Comparison.png" alt="IAS_Authentication_Comparison.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1148264712"&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;Limitations of Client ID &amp;amp; Secret Authentication&lt;/H2&gt;&lt;P&gt;Although widely used, Client ID and Secret authentication has drawbacks:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":key:"&gt;🔑&lt;/span&gt;&lt;STRONG&gt;Password-like storage&lt;/STRONG&gt;: Secrets need to be securely stored, often in encrypted vaults.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":police_car_light:"&gt;🚨&lt;/span&gt;&lt;STRONG&gt;Leakage risk&lt;/STRONG&gt;: Exposure in logs, code repositories, or integrations can compromise the system.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-951751207"&gt;&lt;span class="lia-unicode-emoji" title=":shield:"&gt;🛡&lt;/span&gt;️ Why Certificate-Based Authentication?&lt;/H2&gt;&lt;P&gt;Certificate-based authentication strengthens IAS security by replacing secrets with a &lt;STRONG&gt;cryptographic key pair&lt;/STRONG&gt;.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":locked:"&gt;🔒&lt;/span&gt;&lt;STRONG&gt;Stronger Security&lt;/STRONG&gt;: Asymmetric encryption makes brute-force attacks impractical.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":old_key:"&gt;🗝&lt;/span&gt;️ &lt;STRONG&gt;No password dependency&lt;/STRONG&gt;: Eliminates risks tied to weak or reused passwords.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":stop_sign:"&gt;🛑&lt;/span&gt;&lt;STRONG&gt;Leakage-resistant&lt;/STRONG&gt;: Public certificate exposure is harmless without the private key.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-755237702"&gt;&lt;span class="lia-unicode-emoji" title=":gear:"&gt;⚙️&lt;/span&gt;How It Works in IAS&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":bust_in_silhouette:"&gt;👤&lt;/span&gt;&lt;STRONG&gt;System User Creation&lt;/STRONG&gt;: Generate a certificate instead of a Client ID and Secret.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":key:"&gt;🔑&lt;/span&gt;&lt;STRONG&gt;Public-Private Key Pair&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The public certificate is uploaded to IAS.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;The private key remains with the consuming application.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;STRONG&gt;Authentication&lt;/STRONG&gt;: IAS validates the presented certificate.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;STRONG&gt;Access Granted&lt;/STRONG&gt;: Secure communication is established.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-558724197"&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt;Real-World Use Cases for Certificate-Based Authentication&lt;/H2&gt;&lt;P&gt;So when should you consider using &lt;STRONG&gt;certificate-based authentication&lt;/STRONG&gt; in IAS?&lt;/P&gt;&lt;P&gt;This approach is particularly beneficial when:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;You need to establish &lt;STRONG&gt;API-based connectivity&lt;/STRONG&gt; with IAS from &lt;STRONG&gt;external tools or applications&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;A &lt;STRONG&gt;system user&lt;/STRONG&gt; is required for integrations, automations, or monitoring purposes.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":shield:"&gt;🛡&lt;/span&gt;️ You want to secure machine-to-machine (M2M) communication &lt;STRONG&gt;more efficiently than with Client ID &amp;amp; Secret&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In such scenarios, certificates ensure &lt;STRONG&gt;stronger trust&lt;/STRONG&gt; and &lt;STRONG&gt;reduce credential management risks&lt;/STRONG&gt;, making them ideal for enterprise-grade integrations.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-362210692"&gt;&lt;span class="lia-unicode-emoji" title=":framed_picture:"&gt;🖼&lt;/span&gt;️ Real-Life Example: Configuring Certificate-Based Authentication in IAS&lt;/H2&gt;&lt;H3 id="toc-hId-294779906"&gt;&lt;span class="lia-unicode-emoji" title=":open_file_folder:"&gt;📂&lt;/span&gt;Understanding Certificate Formats Before You Begin&lt;/H3&gt;&lt;P&gt;Before we jump into the actual configuration, it’s important to understand the different certificate file formats you may encounter during the process. This helps avoid confusion when handling files like .p12, .crt, and .pem.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;STRONG&gt;Key Differences at a Glance&lt;/STRONG&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;Format Contains Private Key? Contains Cert(s)? Encoding Typical Use &lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;.crt&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-unicode-emoji" title=":cross_mark:"&gt;❌&lt;/span&gt;No&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Yes&lt;/TD&gt;&lt;TD&gt;Base64 (PEM) or Binary (DER)&lt;/TD&gt;&lt;TD&gt;Server certificate file&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;.pem&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Optional&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Yes&lt;/TD&gt;&lt;TD&gt;Base64 (PEM)&lt;/TD&gt;&lt;TD&gt;Flexible container for certs/keys&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;.p12 / .pfx&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Yes&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Yes (can include full chain)&lt;/TD&gt;&lt;TD&gt;Binary (PKCS#12)&lt;/TD&gt;&lt;TD&gt;Import/export in apps, keystores&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":key:"&gt;🔑&lt;/span&gt;&lt;STRONG&gt;Practical Flow in IAS Scenario&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;You &lt;STRONG&gt;generate a .p12 (PKCS#12)&lt;/STRONG&gt; file → this includes both your private key and certificate chain.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;From this .p12, you typically &lt;STRONG&gt;extract&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Private Key&lt;/STRONG&gt; → required for secure client authentication.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Full Certificate Chain (.crt/.pem)&lt;/STRONG&gt; → ensures trust and proper verification.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;By understanding this, you’ll know &lt;STRONG&gt;what each file is for&lt;/STRONG&gt; and why it’s being used in SAP IAS certificate-based authentication.&lt;/P&gt;&lt;H3 id="toc-hId-98266401"&gt;Step by Step instructions to perform the activity&lt;/H3&gt;&lt;P&gt;Generate .p12 → extract private key (.pem) → extract full certificate chain (.crt/.pem) → upload public cert/chain to IAS (system user) → store private key securely in your app → enable client-certificate auth → test the API connectivity.&lt;/P&gt;&lt;P&gt;Login to IAS, Click on Administrators and create System User with required privileges&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-17 at 11.24.05 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301771i4548893C636C364A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-17 at 11.24.05 PM.png" alt="Screenshot 2025-08-17 at 11.24.05 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on Certificate&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-17 at 11.24.28 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301769iBE58DC971F353CC2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-17 at 11.24.28 PM.png" alt="Screenshot 2025-08-17 at 11.24.28 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Provide CN name and password for certificate and click on generate - it will create a .p12 file&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-17 at 11.24.55 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301770iF11805615CDBB18A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-17 at 11.24.55 PM.png" alt="Screenshot 2025-08-17 at 11.24.55 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Save it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-17 at 11.25.30 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301772i92D0D1701659A6AA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-17 at 11.25.30 PM.png" alt="Screenshot 2025-08-17 at 11.25.30 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Open Terminal and enter command (here API_Cert.p12 is the certificate name downloaded from IAS). Post this enter the required fields like passphrase etc.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;openssl pkcs12 -in API_Cert.p12 -info&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-17 at 11.27.29 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301773i855A12773139C4B9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-17 at 11.27.29 PM.png" alt="Screenshot 2025-08-17 at 11.27.29 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It will have private key and Full chain certificate, Copy the Private key in a text file and save it as .pem file&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-17 at 11.28.56 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301775iB4D680C27868C694/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-17 at 11.28.56 PM.png" alt="Screenshot 2025-08-17 at 11.28.56 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;similarly copy the full chain certificate in a text file and save it as .pem&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-17 at 11.30.23 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301776i7A0F2A5650E2602D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-17 at 11.30.23 PM.png" alt="Screenshot 2025-08-17 at 11.30.23 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Upload the full chain certificate in IAS and save it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-17 at 11.30.56 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301774i0564CD35AEDBC838/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-17 at 11.30.56 PM.png" alt="Screenshot 2025-08-17 at 11.30.56 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Certificate is successfully uploaded in IAS&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-17 at 11.32.03 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301777iA941B1F87C0ECBF6/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-17 at 11.32.03 PM.png" alt="Screenshot 2025-08-17 at 11.32.03 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let's test it using POSTMAN. Open Postman and go to settings -&amp;gt; Add certificate -&amp;gt; upload the certificate as shown below and provide URL of IAS and password&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-17 at 11.32.48 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301778iE5C7F991B884D66F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-17 at 11.32.48 PM.png" alt="Screenshot 2025-08-17 at 11.32.48 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Perform a get operation to check if connectivity is working fine. You should receive 200 success message like shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-17 at 11.33.31 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301779i36D8E1E0C4F0D178/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-17 at 11.33.31 PM.png" alt="Screenshot 2025-08-17 at 11.33.31 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-119924534"&gt;&lt;span class="lia-unicode-emoji" title=":memo:"&gt;📝&lt;/span&gt;Best Practices for Certificate-Based Authentication in IAS&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":tear_off_calendar:"&gt;📆&lt;/span&gt;&lt;STRONG&gt;Track certificate validity&lt;/STRONG&gt;: Default validity is 1 year — plan renewals in advance.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":file_cabinet:"&gt;🗄&lt;/span&gt;️ &lt;STRONG&gt;Secure private keys&lt;/STRONG&gt;: Store them in HSMs or trusted key vaults.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":counterclockwise_arrows_button:"&gt;🔄&lt;/span&gt;&lt;STRONG&gt;Automate renewal&lt;/STRONG&gt;: Prevent downtime due to expired certificates.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":bar_chart:"&gt;📊&lt;/span&gt;&lt;STRONG&gt;Monitor usage&lt;/STRONG&gt;: Continuously audit authentication logs in IAS.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--76588971"&gt;&lt;span class="lia-unicode-emoji" title=":direct_hit:"&gt;🎯&lt;/span&gt;Conclusion&lt;/H2&gt;&lt;P&gt;Switching from Client ID &amp;amp; Secret to &lt;STRONG&gt;certificate-based authentication&lt;/STRONG&gt; in IAS is a &lt;STRONG&gt;major security enhancement&lt;/STRONG&gt;. It reduces password-related risks, strengthens trust between systems, and ensures compliance.&lt;/P&gt;&lt;P&gt;By adopting certificates, enterprises can align IAS with &lt;STRONG&gt;modern security standards&lt;/STRONG&gt;, making their environment more secure, resilient, and future-ready &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/enhancing-security-in-identity-authentication-service-ias-with-certificate/ba-p/14182289"/>
    <published>2025-08-17T20:35:45.189000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/demo-jam-sap-teched-on-tour-bangalore-nov-25-26-2025-biec/ba-p/14182616</id>
    <title>Demo Jam @ SAP TechEd On Tour Bangalore | Nov 25–26, 2025 | BIEC</title>
    <updated>2025-08-18T12:27:06.046000+02:00</updated>
    <author>
      <name>preethireddy_morsu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/202670</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Bring Your Ideas to Life&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The wait is over – Demo&lt;/SPAN&gt; &lt;SPAN&gt;Jam is back at SAP TechEd On Tour, happening on November 25–26 in Bangalore! This is your chance to wow customers and partners in the audience, showcase your most innovative SAP-powered solution, and prove your skills in a high-energy live showdown.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What’s SAP Demo &lt;STRONG&gt;&lt;SPAN&gt;Jam?&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Think of it as the ultimate live demo battle - no slides, no filler. Just six minutes of pure creativity and innovation, live on stage. The winner? Chosen by the audience using our applause-o-meter.&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;SPAN&gt;(Need ideas? &lt;A href="https://community.sap.com/t5/sap-teched-blog-posts/replay-sap-demojam-2023-the-full-live-show/ba-p/305845" target="_blank"&gt;&lt;SPAN&gt;Check out the 2023 SAP DemoJam Highlights&lt;SPAN&gt;.)&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Rules&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-lower-greek"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Time Limit&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;Exactly 6 minutes - go over and the buzzer cuts you off.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Live Demo Only&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;No PPTs, no screenshots, no videos, no AI-generated entertainment -only real, working solutions.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Tech Focus&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;Must show how you used SAP BTP (incl. SAP Build, APAB, SAP Integration Suite, HANA Cloud), SAP Business Data Cloud, and/or SAP Business AI to solve a real business problem.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Team Size&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;2 presenters on stage.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;How to Submit Your Proposal&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Email &lt;SPAN&gt;&lt;A href="mailto:TechEdonTourBangalore2025@sap.com" target="_self" rel="nofollow noopener noreferrer"&gt;TechEdonTourBangalore2025@sap.com&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN&gt;Subject : SAP Demo Jam - SAP TechEd On Tour Bangalore 2025&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN&gt;Details :&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Name of your demo&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Detailed description of your demo&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Business value you’re demonstrating (max 500 words)&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Technology used&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Presenter #1: Name, Email, Company, Job profile&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Presenter #2: Name, Email, Company, Job profile&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;(Optional) Link to a short demo video&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Deadline: September 15, 2025&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What Happens Next?&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Selection of Finalists:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt; Six teams will be chosen by an SAP expert panel and announced on September 25, 2025.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Complimentary Tickets&lt;/STRONG&gt;: Finalist presenters get complimentary SAP TechEd On Tour Bangalore tickets (travel &amp;amp; expenses not included).&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Live Demo&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;On November 26, finalists take the stage-two presenters per team-to battle it outlive.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Bring your ideas. Bring your energy. Bring your innovation.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Let’s Jam, Bangalore!&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;DIV class=""&gt;&amp;nbsp;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/demo-jam-sap-teched-on-tour-bangalore-nov-25-26-2025-biec/ba-p/14182616"/>
    <published>2025-08-18T12:27:06.046000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-platform-and-data-summit-2025-unlock-the-future-of-innovation-register/ba-p/14181944</id>
    <title>SAP Platform and Data Summit 2025: Unlock the Future of Innovation | Register Now</title>
    <updated>2025-08-18T17:20:00.036000+02:00</updated>
    <author>
      <name>joanneks</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/7268</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1608699315"&gt;&lt;STRONG&gt;SAP Platform and Data Summit 2025: Unlock the Future of Innovation with SAP Business Technology Platform and SAP Business Data Cloud | Register Now&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;Hello, SAP Community!&lt;/P&gt;&lt;P&gt;My name is &lt;A href="https://www.linkedin.com/in/joannekohstewart/" target="_blank" rel="noopener nofollow noreferrer"&gt;Joanne Koh-Stewart&lt;/A&gt;, and I'm Director of Product Marketing for SAP Business Technology Platform. As we navigate an era where enterprise data management isn't just an asset—it's the foundation of every strategic decision—business leaders face an unprecedented challenge: How do you transform mountains of information into meaningful competitive advantage?&lt;/P&gt;&lt;P&gt;According to &lt;SPAN&gt;&lt;A href="https://www.sap.com/documents/2025/07/c69586c5-147f-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;recent IDC research&lt;/A&gt;&lt;/SPAN&gt;, organizations that successfully harness the power of SAP Business Technology Platform with business applications reported achieving annual benefits worth $13.88 million per organization on average. Yet, many businesses find themselves drowning in data complexity, struggling to connect the dots between various business applications, processes, and other IT investments for tangible business outcomes.&lt;/P&gt;&lt;P&gt;That's precisely why I'm thrilled to invite you to the &lt;SPAN&gt;&lt;A href="https://events.sap.com/us-2025-sap-data-summit-home/en_us/home.html" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;SAP Platform and Data Summit 2025&lt;/STRONG&gt;&lt;/A&gt;&lt;/SPAN&gt;—an exclusive gathering designed for pioneering business leaders and IT experts ready to unlock the transformative power of intelligent data strategies with SAP Business Technology Platform and SAP Business Data Cloud.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1541268529"&gt;&lt;STRONG&gt;The Reality Check: Where Most Organizations Stand Today&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Picture this scenario that's playing out in boardrooms across industries. Your organization has invested millions in digital transformation initiatives. You've implemented many applications required for your business, collected vast amounts of data, and are now hopefully looking into utilizing various AI tools. Yet when you want to optimize business processes, increase sales, engage customers, and elevate employee experience, you’re lost on where to start.&lt;/P&gt;&lt;P&gt;Sound familiar? The challenge isn't technology—it's the strategic alignment of &lt;SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform.html" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;SAP Business Technology Platform&lt;/STRONG&gt;&lt;/A&gt; &lt;/SPAN&gt;and &lt;SPAN&gt;&lt;A href="https://www.sap.com/canada/products/data-cloud.html" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;SAP Business Data Cloud&lt;/STRONG&gt;&lt;/A&gt; &lt;/SPAN&gt;with real business objectives. You're sitting on a goldmine of data, but the path to extracting value feels fragmented across different systems, departments, and decision-making processes.&lt;/P&gt;&lt;H4 id="toc-hId-1602920462"&gt;The key lies in creating an intelligent, unified ecosystem where your &lt;STRONG&gt;SAP and non-SAP data&lt;/STRONG&gt;, applications, and &lt;STRONG&gt;AI capabilities&lt;/STRONG&gt; work in harmony. &lt;STRONG&gt;SAP BTP&lt;/STRONG&gt;, coupled with &lt;STRONG&gt;SAP BDC&lt;/STRONG&gt; and &lt;SPAN&gt;&lt;A href="https://www.sap.com/products/artificial-intelligence.html" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;SAP Business AI&lt;/STRONG&gt;,&lt;/A&gt;&lt;/SPAN&gt; doesn't just solve technical challenges—it fundamentally reshapes how your organization thinks, learns, and competes in the market.&lt;/H4&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1148241519"&gt;&lt;STRONG&gt;What Makes This Summit Different: Customer-Led Innovation&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Unlike typical vendor conferences, the &lt;STRONG&gt;SAP Platform and Data Summit&lt;/STRONG&gt; puts &lt;STRONG&gt;customer success stories&lt;/STRONG&gt; at the center. You'll hear directly from &lt;STRONG&gt;IT decision-makers&lt;/STRONG&gt; and &lt;STRONG&gt;business leaders&lt;/STRONG&gt; who have navigated similar challenges you're facing today. These aren't theoretical case studies—they're battle-tested strategies with real business value.&lt;/P&gt;&lt;P&gt;The &lt;STRONG&gt;two-day format&lt;/STRONG&gt; is intentionally designed for deep engagement. Day 1 focuses on hearing from customers and partners’ success stories, while Day 2 dives into collaborative workshops to learn and ideate. You'll leave not just with inspiration, but with concrete next steps tailored to your organization's unique &lt;STRONG&gt;digital transformation journey&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-951728014"&gt;&lt;STRONG&gt;Four Essential Topic Tracks You'll Explore at the Summit&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;On Day 2, dedicated tracks are offered to address the most pressing challenges facing organizations today in a workshop setting. Each track combines strategic insights with practical implementation guidance from customers who have successfully navigated these transformations.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;FONT size="5"&gt;BTP for Clean Core&lt;/FONT&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;You:&lt;/STRONG&gt; Your organization is managing a complex landscape of customizations that make system upgrades challenging and expensive. Every enhancement seems to create technical debt, and you're concerned about maintaining agility while preserving critical business functionality.&lt;BR /&gt;&lt;STRONG&gt;The Solution:&lt;/STRONG&gt; Learn how &lt;STRONG&gt;SAP BTP&lt;/STRONG&gt; enables you to extend SAP applications without compromising your core system integrity. Through customer success stories, you'll discover how organizations are leveraging the clean core principles to innovate rapidly while maintaining upgrade readiness and reducing long-term maintenance costs.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;BUILD-ing &lt;/STRONG&gt;&lt;STRONG&gt;AI Applications &amp;amp; Extensions&lt;BR /&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;STRONG&gt;You:&lt;/STRONG&gt; Your business needs and processes aren't always met by standard applications, but custom development is time-consuming and resource-intensive. Meanwhile, your development teams are under pressure to deliver solutions faster while maintaining quality, security, and scalability.&lt;BR /&gt;&lt;STRONG&gt;The Solution:&lt;/STRONG&gt; Explore how &lt;SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform/build.html" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;SAP Build&lt;/STRONG&gt;&lt;/A&gt;&lt;/SPAN&gt; empowers both professional developers and business users to create applications and extensions rapidly. See real examples of organizations using &lt;STRONG&gt;low-code development&lt;/STRONG&gt; to bridge capability gaps, automate processes, and create tailored user experiences that drive business value.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;AI &amp;amp; Joule&lt;BR /&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;STRONG&gt;You:&lt;/STRONG&gt; Despite the industry's significant importance and heavy investment in AI initiatives, your organizations struggle to move beyond pilot projects to enterprise-scale implementations that deliver measurable business impact.&lt;BR /&gt;&lt;STRONG&gt;The Solution:&lt;/STRONG&gt; Discover how &lt;STRONG&gt;SAP Business AI and &lt;/STRONG&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/products/artificial-intelligence/ai-assistant.html" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Joule&lt;/STRONG&gt;&lt;/A&gt;&lt;/SPAN&gt; are revolutionizing business processes across industries. Through customer presentations, you'll witness how AI is being utilized to improve business workflows, enhance decision-making, automate complex tasks, and provide intelligent insights that drive strategic outcomes.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Business Data Cloud&lt;BR /&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;STRONG&gt;You:&lt;/STRONG&gt; Your organization has access to vast amounts of data from different systems, but each source speaks a different "language." Without a unified semantic model, your data remains fragmented and difficult to interpret, limiting your ability to leverage advanced analytics and planning capabilities that could transform your business performance.&lt;BR /&gt;&lt;STRONG&gt;The Solution:&lt;/STRONG&gt; Learn how SAP Business Data Cloud harmonizes heterogeneous data into a coherent, business-ready semantic model with &lt;STRONG&gt;&lt;A href="https://www.sap.com/products/data-cloud/datasphere.html" target="_blank" rel="noopener noreferrer"&gt;SAP Datasphere&lt;/A&gt;&lt;/STRONG&gt;. Explore customer examples of organizations that have transformed disconnected data into actionable insights, enabling sophisticated analytics, predictive planning, and strategic decision-making across the enterprise with &lt;STRONG&gt;&lt;A href="https://www.sap.com/products/data-cloud/cloud-analytics.html" target="_blank" rel="noopener noreferrer"&gt;SAP Analytics Cloud&lt;/A&gt;&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId-755214509"&gt;&lt;STRONG&gt;Register Now: Space is Limited (and FREE!)&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The Summit isn't just about learning new technologies—it's about positioning your organization to lead in the &lt;STRONG&gt;data-driven economy&lt;/STRONG&gt; that's already here.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":bridge_at_night:"&gt;🌉&lt;/span&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;A href="https://go4.events.sap.com/us-2025-sap-data-summit-san-francisco/en_us/home.html?source=web" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Register for San Francisco →&lt;/STRONG&gt;&lt;/A&gt;&lt;/SPAN&gt;| September 11–12, 2025&lt;BR /&gt;Customer Presenters: AMD, Siemens Healthineers, Clorox, and more&lt;BR /&gt;Celebrity Speaker: Andre Iguodala&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":cityscape:"&gt;🏙&lt;/span&gt;️&lt;/STRONG&gt;&lt;A href="https://go4.events.sap.com/us-2025-sap-data-summit-new-york/en_us/home.html?source=web" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Register for NYC →&lt;/STRONG&gt;&lt;/A&gt;| September 16–17, 2025&lt;BR /&gt;Celebrity Speaker: Bernie Williams, former NY Yankee and 4x World Series champion&lt;BR /&gt;Customer Presenters: Moderna, Johnson &amp;amp; Johnson, Conair, and others&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":office_building:"&gt;🏢&lt;/span&gt;&lt;/STRONG&gt;&lt;A href="https://go4.events.sap.com/us-2025-sap-data-summit-chicago/en_us/home.html?source=web" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Register for Chicago →&lt;/STRONG&gt;&lt;/A&gt; | September 23–24, 2025&lt;BR /&gt;Celebrity Speaker: Former Chicago Bear Matt Forte&lt;BR /&gt;Customer Presenters: Southern California Edison, Endress+Hauser, Rust-Oleum, and others&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":maple_leaf:"&gt;🍁&lt;/span&gt;&lt;/STRONG&gt;&lt;A href="https://go4.events.sap.com/ca-2025-sap-data-summit-toronto/en_us/home.html?source=web" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Register for Toronto →&lt;/STRONG&gt;&lt;/A&gt; | October 16–17, 2025&lt;BR /&gt;Celebrity Speaker: NHL celebrity speaker to be announced soon&lt;BR /&gt;Customer Presenters: Metrie and others&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":peach:"&gt;🍑&lt;/span&gt;&lt;/STRONG&gt;&lt;A href="https://go4.events.sap.com/us-2025-sap-data-summit-atlanta/en_us/home.html?source=web" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Register for Atlanta →&lt;/STRONG&gt;&lt;/A&gt; | October 22–23, 2025&lt;BR /&gt;Celebrity Speaker: Celebrity speaker to be announced soon&lt;BR /&gt;Customer Presenters: Colgate, Lucid Motors, Gerdau, and more&lt;/P&gt;&lt;P&gt;Whether you're at the beginning of your &lt;STRONG&gt;SAP journey&lt;/STRONG&gt; or looking to maximize existing investments, this Summit will provide the strategic clarity, practical insights, and professional connections to accelerate your transformation.&lt;/P&gt;&lt;H4 id="toc-hId-816866442"&gt;&lt;STRONG&gt;Register now&lt;/STRONG&gt; and join the exclusive community of leaders who are turning data complexity into competitive simplicity.&lt;/H4&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-362187499"&gt;&lt;STRONG&gt;Let's Connect&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;I'll be attending the Summit in Chicago this year, and I look forward to connecting with fellow transformation leaders! Come prepared with your toughest platform and data challenges—this is your opportunity to collaborate with peers who are solving similar problems and SAP experts who can provide immediate guidance.&lt;/P&gt;&lt;H3 id="toc-hId-294756713"&gt;&lt;STRONG&gt;Now let's hear from you:&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;What's your biggest obstacle in scaling your &lt;STRONG&gt;platform and data initiatives&lt;/STRONG&gt;?&lt;/LI&gt;&lt;LI&gt;How are you currently measuring the ROI of your &lt;STRONG&gt;SAP investments&lt;/STRONG&gt;?&lt;/LI&gt;&lt;LI&gt;What would success look like if you could unlock the full potential of your &lt;STRONG&gt;enterprise data&lt;/STRONG&gt;?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Share your thoughts in the comments, and let's start the conversation before we meet in person!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-platform-and-data-summit-2025-unlock-the-future-of-innovation-register/ba-p/14181944"/>
    <published>2025-08-18T17:20:00.036000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/the-complete-joule-studio-resource-hub-everything-you-need-to-get-started/ba-p/14183113</id>
    <title>The Complete Joule Studio Resource Hub: Everything You Need to Get Started</title>
    <updated>2025-08-18T19:51:14.698000+02:00</updated>
    <author>
      <name>Kvidit</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1631981</uri>
    </author>
    <content>&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Create Joule Studio project.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302033iFEF1073147FBAC5D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Create Joule Studio project.png" alt="Create Joule Studio project.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;EM&gt;&lt;FONT size="1 2 3 4 5 6 7" color="#999999"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Access Joule Studio from the SAP Build Lobby.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Joule Studio, the latest capability in SAP Build, is a low-code/no-code environment designed for creating, deploying, and managing custom Joule agents and skills. These agents and skills, which are deeply grounded in business data, allow developers to optimize rule-based and dynamic workflows and drive precise business outcomes. Joule Studio offers an open and extensible framework to infuse agentic intelligence into business workflows that span across SAP and non-SAP systems.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Since July, Joule Studio is generally available (GA) with the skill builder capability. This blog is your practical guide that compiles all the resources you need to understand the product and get started on building agentic AI in a structured way.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here’s a recommended step-by-step approach:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Start with overview resources such as announcements and short videos to gain conceptual clarity&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Deepen your understanding with technical blogs and guided experiences&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Move to structured courses and other learning materials for hands-on experience.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Try the live product&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;SPAN&gt;Getting introduced&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Every product journey starts with a curiosity - what is the product, and why should I care? This phase is all about getting conceptual understanding about Joule Studio and its capabilities:&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/build-deploy-and-extend-ai-agents-with-joule-studio/ba-p/14105964" target="_blank"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Joule Studio Announcement Blog&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; – Read the official announcement on what is being released and when&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://www.youtube.com/watch?v=JdwfjieiOFY" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Joule Studio Product Video&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt;&lt;SPAN&gt; – Two minutes overview of Joule Studio, showcasing its capabilities and unique value in enabling skills and agents for workflows across SAP and non-SAP systems&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/joule-studio-is-generally-available-in-sap-build-empower-your-business-with/ba-p/14137882" target="_blank"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Joule Studio: custom Joule skills GA blog&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt;&lt;SPAN&gt; - Read the GA announcement for the skill builder. Understand characteristics and step-to-step process for building a skill&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://event.on24.com/eventRegistration/EventLobbyServlet?target=reg20.jsp&amp;amp;eventid=4966969&amp;amp;sessionid=1&amp;amp;key=5344FD42F9AE7AD393B3B5A7DBEC385B&amp;amp;groupId=6150775&amp;amp;partnerref=sapcom&amp;amp;sourcepage=register" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;&lt;SPAN&gt;On-Demand Webinar&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt;&lt;SPAN&gt; – Watch the on-demand webinar to go a little deeper, understand key agentic AI use cases, and get a sneak peek at product capabilities: skill builder and agent builder with a demo&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;SPAN&gt;Seeing Joule Studio in action&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Once you know what Joule Studio does, the next step is to see it in action. Watching real demos and guided experiences helps you visualize where it fits into everyday business tasks and what it can achieve:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://www.sap.com/products/artificial-intelligence/joule-studio/product-tour.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Guided Product Tour&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; – Take a guided tour of Joule Studio to explore how you can build AI agents and Joule Skills with drag and drop simplicity to achieve specific business outcomes&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://ivj-vx.cfapps.eu10.hana.ondemand.com/public/journey/2a840b1a-f1d9-4f42-9c75-8f377599de83/intro" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Interactive Value Journey: Skill Builder&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; – See how to configure a Joule skill to connect SAP SuccessFactors with a third-party payroll system&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://url.sap/agentdesign" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Interactive Value Journey: Agent Builder Vision&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; – Design agents that plan, adapt, and act autonomously&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://www.youtube.com/watch?v=0bH3CMpKCIg" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Custom Joule skill creation – demo video&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt; &lt;SPAN&gt;- Learn how to create a Joule skill to create an ID badge in a third-party system after a preliminary check in an SAP system&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://learning.sap.com/courses/introducing-joule-studio-in-sap-build" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Learning Journey: Introducing Joule Studio in SAP Build&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; – learning course on Joule Studio and its capabilities&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;SPAN&gt;Explore the product hands on&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;Ready to dig in? This phase is all about experiencing the product hands on. Here’s where you start experimenting, take on learning missions, and build skills at your own pace:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://discovery-center.cloud.sap/missiondetail/4643/?tab=overview" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Discovery Center Mission&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt;&lt;SPAN&gt; – Best practices for connecting systems and scaling your Joule skills&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://developers.sap.com/group.joule-studio-first-skill.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Developer Tutorial: Build Your First Joule Skill&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; – Deploy your first custom Joule skill that retrieves employee information from one system and uses that information in another system&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;SPAN&gt;Get started &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This phase provides you essential documentation to help you set up and get started with Joule Studio:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Partner spotlights -&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; before you get started on your own use case, read about real world Agentic AI use cases and their implementation by our partners: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/how-redwood-augments-workload-automation-with-ai-using-joule-studio-in-sap/ba-p/14153724" target="_blank"&gt;&lt;SPAN&gt;Redwood&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/how-pricefx-is-transforming-pricing-software-with-joule-studio-in-sap-build/ba-p/14101403" target="_blank"&gt;&lt;SPAN&gt;Pricefx&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/how-leverx-enhances-cad-data-search-for-manufacturing-with-joule-studio-in/ba-p/14100429" target="_blank"&gt;&lt;SPAN&gt;LeverX&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;, and &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/how-sovanta-uses-joule-studio-to-take-ticketing-systems-to-the-next-level/ba-p/14102612" target="_blank"&gt;&lt;SPAN&gt;Sovanta&lt;/SPAN&gt;&lt;/A&gt; &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/how-to-get-started-with-joule-studio/ba-p/14152855" target="_blank"&gt;&lt;STRONG&gt;&lt;SPAN&gt;How to get started blog&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;- understand&amp;nbsp;the step-to-step process: prerequisites, commercial details, and technical setup&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/joule-studio-goes-live-answers-to-your-top-questions/ba-p/14152403" target="_blank"&gt;&lt;STRONG&gt;&lt;SPAN&gt;FAQ blog&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt;&lt;SPAN&gt; - answers to your frequently asked questions&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/Joule_Studio/45f9d2b8914b4f0ba731570ff9a85313/04b323352fa645238211ce017f634d34.html" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Technical Set up guide&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/A&gt;&lt;SPAN&gt; - technical set up needed to access Joule Studio within SAP Build&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;SPAN&gt;Closing remarks&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With this organized set of resources, you have everything you need - from understanding the product to getting fully set up. Whether you’re a beginner or advanced developer, these materials are designed to support you and answer your questions at every step. We can't wait to hear what you build with Joule Studio in SAP Build! &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/the-complete-joule-studio-resource-hub-everything-you-need-to-get-started/ba-p/14183113"/>
    <published>2025-08-18T19:51:14.698000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/unlock-sap-joule-for-developers-claim-your-free-access-today/ba-p/14183158</id>
    <title>Unlock SAP Joule for Developers—Claim Your Free Access Today</title>
    <updated>2025-08-18T21:01:18.319000+02:00</updated>
    <author>
      <name>HaHoang</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1673814</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1737833963"&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Try SAP Joule for Developers—Now Available for Free&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;We have recently introduced powerful new &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Joule capabilities for developers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; across &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build Code, SAP Build Process Automation, SAP Build Apps,&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ABAP environment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. These AI features are designed to accelerate development, boost productivity, and bring intelligence into the tools you already use.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Now’s the perfect time to try them. &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Joule for Developers is available for free&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; through &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Q3 2026&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. Once the free offer ends, a commercial model based on AI Units will apply—so don’t miss this opportunity to explore what’s possible with AI in your SAP development tools.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Quick reminder:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; A valid license for SAP Build or ABAP is required to use the AI capabilities in those environments.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1670403177"&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;SPAN&gt;What is SAP Joule for Developers?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Announced on &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;March 18&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, SAP Joule for Developers is a package of embedded AI capabilities powered by Joule and available within:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build Code&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build Process Automation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build Apps&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;ABAP Environment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;These tools now help you &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;generate code from natural language&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;automate processes faster&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;build apps more efficiently&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;—all with AI integrated directly into the experience.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;We’ll walk through the setup steps in an upcoming section. But first, here are some helpful resources to catch up on the latest:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;Read the &lt;A href="https://news.sap.com/2025/03/joule-for-developers-ai-powered-capabilities/" target="_blank" rel="noopener noreferrer"&gt;Announcement&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Explore the &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/unlock-new-levels-of-productivity-with-ai-in-sap-build/ba-p/14034784" target="_blank"&gt;Technical Overview&lt;/A&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Check out the &lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-joule-for-developers-faq-features-access-and-more/ba-p/14045316" target="_blank"&gt;FAQs&lt;/A&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1473889672"&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Customer Success &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;See how early adopters are already transforming their work with &lt;STRONG&gt;SAP Joule for Developers&lt;/STRONG&gt;:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;I&gt;&lt;SPAN&gt;“&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;Joule for Developers dramatically boosts productivity by enabling developers to quickly generate enterprise-grade apps, including logic, data models, sample data, and test scripts. It serves as a virtual guide to assist developers during design-time and helps resolve local testing exceptions efficiently.&lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;”&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; — &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Gerard Van Paassen&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;I&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;/I&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;CEO at Aarini Consulting&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;I&gt;&lt;SPAN&gt;“&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;Joule for Developers not only generates data models but also makes it simple to design Fiori UIs and enrich test data—resulting in a major productivity boost across our development lifecycle.&lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;”&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; — &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Michael Brand&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;I&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;/I&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Senior Consultant at FIS&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;I&gt;&lt;SPAN&gt;“&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;PwC uses Joule for Developers in SAP Build to rapidly deliver innovative SAP solutions. Its generative AI supercharges our developers’ output, helping us accelerate award-winning ESG solutions while extending SAP S/4HANA and other enterprise apps—without compromising the clean core.&lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;”&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; — &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Dr. Nicholas Nicoloudis, Global Head of SAP Innovation at PwC&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;From accelerating application generation to streamlining code optimization, customers are seeing measurable time savings, higher productivity, and better quality in their SAP extension development projects.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Stay tuned as we share more customer experiences—yours could be next. Try SAP Joule for Developers today while it’s free.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1148293448"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Activate AI capabilities in SAP Build:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Now, let’s walk through how to enable the AI capabilities in SAP Build.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; AI capabilities in &lt;STRONG&gt;SAP Build Code&lt;/STRONG&gt; have already been enabled and available for use in the environment. The instructions below applies to &lt;STRONG&gt;SAP Build Process Automation&lt;/STRONG&gt; and &lt;STRONG&gt;SAP Build Apps&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;1. On the Build homepage, click &lt;STRONG&gt;Control Tower&lt;/STRONG&gt; in the left-hand navigation panel.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_0-1755542887303.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302046iCD57ADCA985761DC/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_0-1755542887303.png" alt="HaHoang_0-1755542887303.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;2.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Select &lt;STRONG&gt;Generative AI&lt;/STRONG&gt; from the settings canvas.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_1-1755542887304.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302047iBEE9D0880A2C437D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_1-1755542887304.png" alt="HaHoang_1-1755542887304.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;3.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Toggle the &lt;STRONG&gt;Enable Generative AI&lt;/STRONG&gt; button&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_2-1755542887305.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302045iA287D89BE3D70F7A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_2-1755542887305.png" alt="HaHoang_2-1755542887305.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;4.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Read and accept the &lt;STRONG&gt;SAP AI&lt;/STRONG&gt;&amp;nbsp;&lt;STRONG&gt;Terms&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_3-1755542887306.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302049i137B25E69864B699/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_3-1755542887306.png" alt="HaHoang_3-1755542887306.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;5.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Verify that the AI features are enabled&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_4-1755542887306.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302050i92A9D6C8996D6C5D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_4-1755542887306.png" alt="HaHoang_4-1755542887306.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-951779943"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Activate AI capabilities in ABAP Environment:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H2&gt;&lt;H4 id="toc-hId-1013431876"&gt;&amp;nbsp;&lt;/H4&gt;&lt;H4 id="toc-hId-816918371"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;A. For Customers:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;1. Contact your Account Executive to purchase the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; license (SKU ID: 8019124). The AE will create an order containing the license material.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;2. Once the purchase is complete, ABAP development systems will be enabled for ABAP AI capabilities&lt;/SPAN&gt; &lt;SPAN&gt;within 48 hours.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;3. To start using Joule capabilities in ABAP, ensure you have the required authorizations. For details, see the &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-ai/generative-ai-in-abap-cloud/prerequisites-and-required-authorizations" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;documentation&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and screenshot below.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_5-1755542887307.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302048i93D5F3686394F9F9/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_5-1755542887307.png" alt="HaHoang_5-1755542887307.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-620404866"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;B. For Partners:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;1. Get the TDD ABAP AI capabilities license (SKU ID 8019541):&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Go to &lt;/SPAN&gt;&lt;A href="https://partneredge.sap.com/en/partnership/licenses/tdd.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;Manage My Services App&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Add the SKU to an existing order, e.g. Pay-as-you-go (see screenshots below).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_6-1755542887308.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302053iCD79E2B1D2FEE862/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_6-1755542887308.png" alt="HaHoang_6-1755542887308.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_7-1755542887308.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302051iC38F2705183AA812/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_7-1755542887308.png" alt="HaHoang_7-1755542887308.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;2.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Once the purchase is complete, ABAP development systems will be enabled for ABAP AI capabilities&lt;/SPAN&gt; &lt;SPAN&gt;within 48 hours.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;3.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;To start using Joule capabilities in ABAP, ensure you have the required authorizations. For details, see the &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-ai/generative-ai-in-abap-cloud/prerequisites-and-required-authorizations" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;documentation&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and screenshot below.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_8-1755542887309.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302052iEDBF5869AA0BDBC8/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_8-1755542887309.png" alt="HaHoang_8-1755542887309.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-294808642"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Start leveraging the power of AI today!&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Enable &lt;STRONG&gt;SAP Joule for Developers&lt;/STRONG&gt; and experience a significant boost in your development efficiency. Don't miss out on the free offer!&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;#SAPJouleForDevelopers&amp;nbsp;#SAPBuild #ABAPCloud #SAPBusinessTechnologyPlatform&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/unlock-sap-joule-for-developers-claim-your-free-access-today/ba-p/14183158"/>
    <published>2025-08-18T21:01:18.319000+02:00</published>
  </entry>
</feed>
