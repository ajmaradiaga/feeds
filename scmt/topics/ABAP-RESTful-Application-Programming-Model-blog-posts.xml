<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/ABAP-RESTful-Application-Programming-Model-blog-posts.xml</id>
  <title>SAP Community - ABAP RESTful Application Programming Model</title>
  <updated>2025-09-06T14:00:07.232119+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/ABAP RESTful Application Programming Model/pd-p/7e44126e-7b27-471d-a379-df205a12b1ff" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>ABAP RESTful Application Programming Model blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/designing-a-fiori-ready-cds-view-with-ui-facets-value-helps-and/ba-p/14147853</id>
    <title>Designing a Fiori-Ready CDS View with UI Facets, Value Helps, and Associations in RAP</title>
    <updated>2025-07-23T11:53:03.236000+02:00</updated>
    <author>
      <name>raghu_ps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/150897</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In this blog post, I will explain how to design a CDS view entity in ABAP RAP (RESTful ABAP Programming Model) that is well-suited for use with Fiori Elements. We'll use annotations such as ui&lt;FONT size="4"&gt;&lt;STRONG&gt;.&lt;/STRONG&gt;facet&lt;/FONT&gt;, Consumption.valueHelpDefinition, ObjectModel.association, and search.defaultSearchElement to enhance the user interface and behavior.&lt;/P&gt;&lt;P&gt;The example is based on a Flight Management scenario, where we create a CDS view to manage flight connections and set up associations to carrier and flight-related data.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Display flight connection details as the header, along with the related flight entries as line items&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Provide value help functionality for airport-related fields&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Use associations to link the CDS view to related entities such as carrier and airport information&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Enable search capabilities and ensure the data is optimized for Fiori Elements&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;CDS View Entity Code&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ZPS_FLIGHT_R - &lt;/SPAN&gt;&lt;SPAN&gt;Flight Information&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE] 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'Flight Information' 
@Metadata.ignorePropagatedAnnotations: true 
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 
} 
@Search.searchable: true 
define view entity ZPS_FLIGHT_R 
as select from /dmo/flight 
association[1] to ZPS_CARRIER_R as _Airline on $projection.CarrierId = _Airline.CarrierId  
{ 
@UI.lineItem: [{ position: 10 }] 
@ObjectModel.text.association: '_Airline' 
key carrier_id as CarrierId, 
@UI.lineItem: [{ position: 20 }] 
key connection_id as ConnectionId, 
@UI.lineItem: [{ position: 30 }] 
key flight_date as FlightDate, 
@UI.lineItem: [{ position: 40 }] 
@Semantics.amount.currencyCode: 'CurrencyCode' 
price as Price, 
@UI.lineItem: [{ position: 50 }] 
currency_code as CurrencyCode, 
@UI.lineItem: [{ position: 60 }] 
@Search.defaultSearchElement: true 
plane_type_id as PlaneTypeId, 
@UI.lineItem: [{ position: 70 }] 
seats_max as SeatsMax, 
@UI.lineItem: [{ position: 80 }] 
seats_occupied as SeatsOccupied, 
_Airline 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ZPS_CARRIER_R - &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Carrier detail&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE] 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'Carrier detail' 
@Metadata.ignorePropagatedAnnotations: true 
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 
} 
@Search.searchable: true 
define view entity ZPS_CARRIER_R 
as select from /dmo/carrier 
{ 
key carrier_id as CarrierId, 
@Search.defaultSearchElement: true 
@Semantics.text: true 
@Search.fuzzinessThreshold: 0.8 
name as Name, 
currency_code as CurrencyCode 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ZPS_AIRPORT_VH - &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Value help for airport&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE] 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'Value help for airport' 
@Metadata.ignorePropagatedAnnotations: true 
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 
} 
@Search.searchable: true 
define view entity ZPS_AIRPORT_VH 
as select from /dmo/airport 
{ 
@Search.defaultSearchElement: true 
key airport_id as AirportId, 
@Search.defaultSearchElement: true 
@Search.fuzzinessThreshold: 0.7 
name as Name, 
@Search.defaultSearchElement: true 
@Search.fuzzinessThreshold: 0.7 
city as City, 
@Search.defaultSearchElement: true 
@Search.fuzzinessThreshold: 0.7 
country as Country 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ZPS_CONNECTION_FLIGHT - &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Flight Reference&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE] 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'Flight Reference' 
@Metadata.ignorePropagatedAnnotations: true 
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 
} 
@UI.headerInfo: { 
typeName: 'Connection', 
typeNamePlural: 'Connections' 
} 
@Search.searchable: true 
define view entity ZPS_CONNECTION_FLIGHT 
as select from /dmo/connection as connection 
association [1..*] to ZPS_FLIGHT_R as _flight on $projection.CarrierId = _flight.CarrierId 
and $projection.ConnectionId = _flight.ConnectionId 
association [1] to ZPS_CARRIER_R as _Airline on $projection.CarrierId = _Airline.CarrierId 
{ 
@UI.facet: [{ id: 'Connection', 
purpose: #STANDARD, 
type: #IDENTIFICATION_REFERENCE, 
position: 10, 
label: 'Connection Detail' }, 
{ id: 'Flight', 
purpose: #STANDARD, 
type: #LINEITEM_REFERENCE, 
position: 20, 
label: 'Flights', 
targetElement: '_flight' 
} 
] 
@UI.lineItem: [{position: 10, label: 'Airline' }] 
@UI.identification: [{ position: 10, label: 'Airline' }] 
@ObjectModel.text.association: '_Airline' 
@Search.defaultSearchElement: true 
key carrier_id as CarrierId, 
@UI.lineItem: [{position: 20 }] 
@UI.identification: [{ position: 20 }] 
@Search.defaultSearchElement: true 
key connection_id as ConnectionId, 
@UI.selectionField: [{ position: 10 }] 
@UI.lineItem: [{position: 30, label: 'Depature Airport Id' }] 
@UI.identification: [{ position: 30, label: 'Depature Airport Id' }] 
@Search.defaultSearchElement: true 
@Consumption.valueHelpDefinition: [{ entity:{ 
name: 'ZPS_AIRPORT_VH', 
element: 'AirportId'} }] 
airport_from_id as AirportFromId, 
@UI.selectionField: [{ position: 20 }] 
@UI.lineItem: [{position: 40 }] 
@UI.identification: [{ position: 40 }] 
@Search.defaultSearchElement: true 
@Consumption.valueHelpDefinition: [{ entity:{ 
name: 'ZPS_AIRPORT_VH', 
element: 'AirportId'} }] 
@EndUserText.label: 'Destination Airport ID' 
airport_to_id as AirportToId, 
@UI.lineItem: [{position: 50, label: 'Departure Time' }] 
@UI.identification: [{ position: 50 }] 
departure_time as DepartureTime, 
@UI.lineItem: [{position: 60, label: 'Arrival Time' }] 
@UI.identification: [{ position: 60 }] 
arrival_time as ArrivalTime, 
@Semantics.quantity.unitOfMeasure: 'DistanceUnit' 
@UI.identification: [{ position: 70 }] 
distance as Distance, 
distance_unit as DistanceUnit, 
//Association--&amp;gt; 
@Search.defaultSearchElement: true 
_flight, 
@Search.defaultSearchElement: true 
_Airline 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Key Concepts Covered&lt;/P&gt;&lt;P&gt;Annotations&lt;BR /&gt;&lt;STRONG&gt;ui.facet&lt;/STRONG&gt; : Creates grouped sections in the Fiori Object Page&lt;BR /&gt;&lt;STRONG&gt;ui.lineItem&lt;/STRONG&gt; : Controls the display of fields in table lists&lt;BR /&gt;&lt;STRONG&gt;Consumption.valueHelpDefinit&lt;/STRONG&gt; : Enables F4 value help for fields&lt;BR /&gt;&lt;STRONG&gt;search.&lt;/STRONG&gt;defaultSearchElement : Makes the field available in the Fiori search bar&lt;BR /&gt;&lt;STRONG&gt;ObjectModel.text.association&lt;/STRONG&gt; : Provides text description for key fields&lt;BR /&gt;Association to entity Enables : navigation and linking to related entities&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You’ll see:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;A header section labeled "Connection Detail" displaying the main connection information&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;A "Flights" section or tab, enabled through the _flight association, showing related flight entries as line items&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;F4 help (value help) activated for airport_from_id and airport_to_id fields using @Consumption.valueHelpDefinition&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;A search bar that allows filtering by fields such as Airline, Connection ID, Departure Airport, and Destination Airport&lt;/P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="raghu_ps_1-1752036262694.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284351i865E5E45363C902D/image-size/large?v=v2&amp;amp;px=999" role="button" title="raghu_ps_1-1752036262694.png" alt="raghu_ps_1-1752036262694.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Departure airport value help&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="raghu_ps_2-1752036303518.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284352iBD555FDD6A270FF1/image-size/large?v=v2&amp;amp;px=999" role="button" title="raghu_ps_2-1752036303518.png" alt="raghu_ps_2-1752036303518.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Line-item record&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="raghu_ps_3-1752036334100.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284353iDC4F58C299C0314B/image-size/large?v=v2&amp;amp;px=999" role="button" title="raghu_ps_3-1752036334100.png" alt="raghu_ps_3-1752036334100.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Summary&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This blog demonstrated how to build a Fiori-optimized CDS view using ABAP RAP, with the help of UI annotations, value helps, and text associations.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/designing-a-fiori-ready-cds-view-with-ui-facets-value-helps-and/ba-p/14147853"/>
    <published>2025-07-23T11:53:03.236000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/searching-substrings-in-the-element-information-popup-in-adt-for-eclipse/ba-p/14135290</id>
    <title>Searching Substrings in the Element Information Popup in ADT for Eclipse</title>
    <updated>2025-07-23T12:15:07.838000+02:00</updated>
    <author>
      <name>wolfgang_woehrle</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/190964</uri>
    </author>
    <content>&lt;P&gt;Are you familiar with the search capabilities for substrings in the element information popup? If not, grab a cup of coffee and enjoy reading my blog.&lt;/P&gt;&lt;P&gt;Your task:&amp;nbsp;A colleague asks you to fix a UI behavior for a given element of a CDS entity that is provided by an extension. You don’t know in which data definition the element is located in.&lt;/P&gt;&lt;P&gt;Your goal: You want to find out from which CDS entity extension an element is provided. Usually, a CDS entity contains a huge number of elements provided by multiple data definitions.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1604194298"&gt;Procedure&lt;/H1&gt;&lt;P&gt;Let's dive into the details and follow my instructions step by step:&lt;/P&gt;&lt;P&gt;Note: The search feature in the structured display is available for SAP BTP, ABAP environment 2508/SAP S/4HANA Public Cloud 2508 as of ADT client version 3.52.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Open the relevant development object in ABAP Development Tools for Eclipse (ADT).&lt;/LI&gt;&lt;LI&gt;In the source code, navigate to the occurrence of the element in question and choose&amp;nbsp;&lt;EM&gt;F2&lt;/EM&gt;.&lt;BR /&gt;The element information popup then opens.&lt;/LI&gt;&lt;LI&gt;Skim through the content.&lt;/LI&gt;&lt;LI&gt;Do you want to see all related elements and their location in a CDS entity extension in a structured and clear manner? Perfect. Switch to the structured display by simply choosing the&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="extend_button.png" style="width: 20px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282784i96628BC9A25A5BC2/image-size/large?v=v2&amp;amp;px=999" role="button" title="extend_button.png" alt="extend_button.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;STRONG&gt;Details view with include/append structure&lt;/STRONG&gt;&amp;nbsp;button at the toolbar on the bottom.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="step_2blog.png" style="width: 729px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287263i0CC1EC89D7DDCD21/image-size/large?v=v2&amp;amp;px=999" role="button" title="step_2blog.png" alt="step_2blog.png" /&gt;&lt;/span&gt;&lt;BR /&gt;ADT then opens the structured element information:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="4_extend_view_tree_tabular.png" style="width: 857px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287653iEE9109E486A3614A/image-size/large?v=v2&amp;amp;px=999" role="button" title="4_extend_view_tree_tabular.png" alt="4_extend_view_tree_tabular.png" /&gt;&lt;/span&gt;&lt;BR /&gt;The elements are sorted as they are defined in the source code. In addition, the tabular structure shows the CDS entity extension in which the elements are located in. For example, the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;elements seats_max&lt;/EM&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;seats_occuped&lt;/EM&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;are located in&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;DDLS DEMO_TEST_CDS_EXTEND_VIEW&lt;/EM&gt;.&lt;/LI&gt;&lt;LI&gt;You are now just seconds away from your goal: To search for the substring. To open the search, choose the&amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="search_button.png" style="width: 24px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282785i37D0AF90AC731CE7/image-size/large?v=v2&amp;amp;px=999" role="button" title="search_button.png" alt="search_button.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;STRONG&gt;Search&lt;/STRONG&gt; button from the toolbar at the bottom.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="step_4blog.png" style="width: 793px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287398iBF0122EE2EB33DB1/image-size/large?v=v2&amp;amp;px=999" role="button" title="step_4blog.png" alt="step_4blog.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Enter your search pattern in the &lt;EM&gt;Find&lt;/EM&gt; input field and confirm with &lt;EM&gt;Enter&lt;/EM&gt;.&lt;/LI&gt;&lt;/OL&gt;&lt;H1 id="toc-hId-1407680793"&gt;Result&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;Here we go! ADT highlights all its findings for you! The first finding is highlighted in blue, all the remaining ones in grey.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tab_search_full2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282792iF5EF5D1FE716954D/image-size/large?v=v2&amp;amp;px=999" role="button" title="tab_search_full2.png" alt="tab_search_full2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To navigate to an element information popup for a target or a component type, hover over and select the underlined name.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1211167288"&gt;Related Information&lt;/H1&gt;&lt;P&gt;You want to find more ADT-specific tips &amp;amp; tricks? Have fun with this help content:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-development-tools-user-guide/tips-and-tricks-abap-core-tools" target="_self" rel="noopener noreferrer"&gt;ABAP core development&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-development-tools-user-guide/tips-tricks-abap-cds-tools-c8ecb49378e54fffa7ae929d711e6088" target="_self" rel="noopener noreferrer"&gt;ABAP CDS development&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/searching-substrings-in-the-element-information-popup-in-adt-for-eclipse/ba-p/14135290"/>
    <published>2025-07-23T12:15:07.838000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/exposing-sap-s4-onprem-data-to-external-system-odata-service-btp/ba-p/14151915</id>
    <title>Exposing SAP S4 Onprem data to external System || Odata Service || BTP || Destination-Connectivity</title>
    <updated>2025-07-24T09:09:11.979000+02:00</updated>
    <author>
      <name>Ace_D</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1501366</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735011379"&gt;&lt;STRONG&gt;Prerequisites from BTP Side&lt;/STRONG&gt;&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;SAP BTP Account&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Access to SAP Business Technology Platform (BTP) with appropriate entitlements.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP Cloud Connector Setup&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;SAP Cloud Connector installed and configured to connect your on-premise S/4HANA system to SAP BTP.&lt;/LI&gt;&lt;LI&gt;Destination configured in BTP cockpit pointing to your on-premise system.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Connectivity Service and Destination Service&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;SAP BTP Connectivity service and destination service instance on the BTP account.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Foundry Environment&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Cloud Foundry space set up in your BTP subaccount to deploy the application.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Use Case:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Lets take a simple use case for creating a RAP service on S4, which is a wrapper API call on the reprocess IDOC function module.&lt;/P&gt;&lt;P&gt;For this we will create a RAP service on the S4 box, than activate the service with the &lt;STRONG&gt;/IWFND/MAINT_SERVICE&amp;nbsp;&lt;/STRONG&gt;and activate the &lt;STRONG&gt;ICF Node as well.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Note: In this blog we will not go through the steps of setting cloud connector and destination on the BTP account. We will assume that destination with cloud connector setup is already available on the BTP.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create and activate the RAP service on the S4 Box.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;We will create a unmanaged rap scenario with custom entity and than we will create a service definition and top of service definition we will create service binding.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_0-1752479114889.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286063i6147300A58FD94EB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_0-1752479114889.png" alt="Ace_D_0-1752479114889.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Lets create the class for the query implementation.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_1-1752479219667.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286066i8FE4DD17F2125A3B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_1-1752479219667.png" alt="Ace_D_1-1752479219667.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_3-1752479284513.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286068i7DF33D859E64B0B5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_3-1752479284513.png" alt="Ace_D_3-1752479284513.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_4-1752479314425.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286069i1ADC607EAFF20853/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_4-1752479314425.png" alt="Ace_D_4-1752479314425.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;We are calling the FM to reprocess the idoc and checking the relevant table to get the latest reprocessed idoc status for the same.&lt;/P&gt;&lt;P&gt;Now we will create a service definition and service binding for the custom entity created.&lt;/P&gt;&lt;P&gt;Service Definition&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_8-1752479854976.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286073i72B0728E2CDB8D9C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_8-1752479854976.png" alt="Ace_D_8-1752479854976.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;And overall project will look something like this.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_5-1752479511558.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286070iB8D8CB8704C75416/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_5-1752479511558.png" alt="Ace_D_5-1752479511558.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here i have created two types of service bindings v2 and v4 but we will be using only v2 for this.&lt;/P&gt;&lt;P&gt;So overall we created below 4 artifacts.&lt;/P&gt;&lt;P&gt;1. Custom entity&lt;/P&gt;&lt;P&gt;2. Class&lt;/P&gt;&lt;P&gt;3. Service definition&lt;/P&gt;&lt;P&gt;4. Service binding&lt;/P&gt;&lt;P&gt;Now to test the service we will publish the service first and than call the generated url&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_7-1752479816432.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286072iDC562CE467DBAAA5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_7-1752479816432.png" alt="Ace_D_7-1752479816432.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;if you see the image, i have published the service and after publish we also got the custom entity that we have created, click on the &lt;STRONG&gt;service url&lt;/STRONG&gt; and it will open in browser asking for authentication of S4 user id and password.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_9-1752480025822.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286074iD29880ABB4A5E44A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_9-1752480025822.png" alt="Ace_D_9-1752480025822.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the authentication is successful you should be able to see this.&lt;/P&gt;&lt;P&gt;Now lets open the SAP GUI so that i can show you the ICF node activation, which is generally taken care by basis team.&lt;/P&gt;&lt;P&gt;Open the Tcode:&amp;nbsp;&lt;STRONG&gt;/IWFND/MAINT_SERVICE&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_10-1752480290098.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286075i2C11D72626448B10/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_10-1752480290098.png" alt="Ace_D_10-1752480290098.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here you can find your activated service binding and make sure all components of the service looks as it is in the image.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Assuming cloud connector and destination is setup on BTP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;With this we completed the S4 box setup, now its ready to communicate with other external systems.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Creating the Destination service and Connectivity service on the BTP Account.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Login in to BTP account and lets create 2 service instances with service keys.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_11-1752483153170.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286097iDCC3A3321CE1ECB0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_11-1752483153170.png" alt="Ace_D_11-1752483153170.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;1.&amp;nbsp;&lt;STRONG&gt;Destination service&lt;/STRONG&gt;, this will help us to get the destination details, Destination service gets all the registered destinations on the BTP, from which we can filter out the destination that is up for our S4 onprem box.&lt;/P&gt;&lt;P&gt;Destination service will give us all the relevant things like user id passwd, location and etc. for that destination.&lt;/P&gt;&lt;P&gt;Service key for the destination service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_12-1752483270245.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286098iBE180D64FD0F615E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_12-1752483270245.png" alt="Ace_D_12-1752483270245.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_13-1752483330309.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286099i127A1F287FB75995/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_13-1752483330309.png" alt="Ace_D_13-1752483330309.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. &lt;STRONG&gt;Connectivity Service,&amp;nbsp;&lt;/STRONG&gt;Since we are trying to get the data out of onprem system we will have to use connectivity service from btp, which will provide us proxies, this proxies will be use to call the onprem odata url.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_14-1752483491742.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286106i3806395799EEF5CB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_14-1752483491742.png" alt="Ace_D_14-1752483491742.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_15-1752483598535.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286107iCD11D07C5A492C3E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_15-1752483598535.png" alt="Ace_D_15-1752483598535.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It is important to paste here the service keys for better understanding since we will be using many things from the service key into our application&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Lets create a python application to call the onprem service.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Important things to consider here.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;By using destination and connectivity service we cannot test the application on local system, we will have to deploy our app on CF to test the same.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We will use the flask requests and certain other libraries for the python programming&lt;/P&gt;&lt;P&gt;file: .env file to store all the secrets this secrets are from the service keys only.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_2-1752492372749.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286202iF6300349E7896528/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_2-1752492372749.png" alt="Ace_D_2-1752492372749.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;File: Requirements.txt&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_0-1752492015085.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286200i27F53BD3C09B09AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_0-1752492015085.png" alt="Ace_D_0-1752492015085.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;File: Runtime.txt&lt;/P&gt;&lt;P&gt;python-3.11.*&lt;/P&gt;&lt;P&gt;file: manifest.yaml&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_1-1752492157202.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286201iA56CB734CFA3967C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_1-1752492157202.png" alt="Ace_D_1-1752492157202.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;file:idocapis.py (should be same as mentioned in Manifest.yml file&lt;/P&gt;&lt;P&gt;Load all the required libraries.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_3-1752492555784.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286203iEB454EAAAAA7E66C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_3-1752492555784.png" alt="Ace_D_3-1752492555784.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;define the function to get the token&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_4-1752493129840.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286204i152BA582C8BA1F8B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_4-1752493129840.png" alt="Ace_D_4-1752493129840.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define function to get the list of all destinations on the BTP&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_5-1752493241781.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286205iA640B84C01B00E5E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_5-1752493241781.png" alt="Ace_D_5-1752493241781.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define the function to construct the URL for the odata call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_6-1752493319173.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286206i83806D03EC8AE6C7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_6-1752493319173.png" alt="Ace_D_6-1752493319173.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define function to get token for the connectivity service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_7-1752493411094.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286213i4C439E0B0047EB4E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_7-1752493411094.png" alt="Ace_D_7-1752493411094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define function to call the odata service with connectivity things&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_8-1752493551879.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286242iDE3AED9EE0D95C35/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_8-1752493551879.png" alt="Ace_D_8-1752493551879.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_9-1752493573946.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286243i670226B5E2674B07/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_9-1752493573946.png" alt="Ace_D_9-1752493573946.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now lets define the final route in flask to call this service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_13-1752494450583.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286281i0C7C7F657EECF5CA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_13-1752494450583.png" alt="Ace_D_13-1752494450583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;One thing to note here the&amp;nbsp;&lt;STRONG&gt;RESOURCE variable will depend on the destination url of the onprem that is setup on BTP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_11-1752494105816.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286279i7A1D0EA83E29C50A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_11-1752494105816.png" alt="Ace_D_11-1752494105816.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_12-1752494133009.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286280iBAC4EB399CB3AEFD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_12-1752494133009.png" alt="Ace_D_12-1752494133009.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;STEP 4: Deployment&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Lets deploy the app on the CF by pushing the app to the cloud foundry from the BAS&lt;/P&gt;&lt;P&gt;Use command &lt;STRONG&gt;cf push&lt;/STRONG&gt; after successful authentication for your cloud foundry space.&lt;/P&gt;&lt;P&gt;After the deployment on the cloud we can get the url that is generated on the cloud.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_14-1752495094785.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286283iF188D4ACAB2AC66A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_14-1752495094785.png" alt="Ace_D_14-1752495094785.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Testing the application:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Lets create a small python program to call this API in local now to test it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_15-1752495325813.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286284iA1C1678704489B7A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_15-1752495325813.png" alt="Ace_D_15-1752495325813.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You should get response coming from your S4 onPrem system.&lt;/P&gt;&lt;P&gt;Thanks for staying till the end!!!&lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/exposing-sap-s4-onprem-data-to-external-system-odata-service-btp/ba-p/14151915"/>
    <published>2025-07-24T09:09:11.979000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-step-by-step-guide-to-implementing-an-excel-upload-button-in-a-fiori-app/ba-p/14156420</id>
    <title>A Step-by-Step Guide to Implementing an Excel Upload Button in a Fiori App using RAP</title>
    <updated>2025-07-24T09:18:19.224000+02:00</updated>
    <author>
      <name>KPShekhar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1617455</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735155555"&gt;&lt;STRONG&gt;Live Demo&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Here is a short video demonstrating the final Excel upload functionality in action.&lt;/P&gt;&lt;P class=""&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FcFcxJPgTAa8%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DcFcxJPgTAa8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FcFcxJPgTAa8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="Excel Upload Button in SAP RAP Fiori Application Demo Run" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For this demonstration, I've built a simple RAP application with a V4 UI. The application features an "Employee" table with three fields. The base of the application was created using the RAP generator, and I've also included early numbering logic for the&amp;nbsp;&lt;/SPAN&gt;Employee ID.&lt;/P&gt;&lt;H2 id="toc-hId-1538642050"&gt;&lt;STRONG&gt;Step 1: Create a Fiori Project&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;To begin, create a new SAP Fiori project using the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;List Report&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;template. This will serve as the foundation for our application.&lt;/P&gt;&lt;H2 id="toc-hId-1342128545"&gt;&lt;STRONG&gt;Step 2: Add a Custom Button&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;With the project set up, the next step is to add a custom button. You can do this by using the open guided development feature. From there, choose the option to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Add a Custom Action to a Page Using Extensions&lt;/STRONG&gt;. Follow the prompts in the guide to insert the necessary code snippets for the "Excel Upload" button.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.33.43 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288514i7A9DB78C413A5FF8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.33.43 PM.png" alt="Screenshot 2025-07-18 at 12.33.43 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.36.47 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288515i92DDB5C0BBCE2331/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.36.47 PM.png" alt="Screenshot 2025-07-18 at 12.36.47 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;or&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1145615040"&gt;&lt;STRONG&gt;Step 2: Configure the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;File&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file is the application descriptor, defining its structure, data sources, and routing. To add the "Excel Upload" button, you need to modify this file to define a custom action and extend the standard List Report controller with our custom logic&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;You can either use the "Add a Custom Action to a Page Using Extensions" option in the guided development tool or update the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file directly with the following configuration&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Pay close attention to the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;controlConfiguration&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;extends&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;sections, which are key to enabling this functionality.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "_version": "1.53.0",
  "sap.app": {
    "id": "uploadempexcel",
    "type": "application",
    "i18n": "i18n/i18n.properties",
    "applicationVersion": {
      "version": "0.0.1"
    },
    "title": "{{appTitle}}",
    "description": "{{appDescription}}",
    "resources": "resources.json",
    "sourceTemplate": {
      "id": "@sap/generator-fiori:lrop",
      "version": "1.18.2",
      "toolsId": "f8a70d19-c3d7-40bf-9b4b-03ba34f86143"
    },
    "dataSources": {
      "mainService": {
        "uri": "/sap/opu/odata4/sap/zui_upload_emp_o4/srvd/sap/zui_upload_emp_o4/0001/",
        "type": "OData",
        "settings": {
          "annotations": ["annotation"],
          "localUri": "localService/mainService/metadata.xml",
          "odataVersion": "4.0"
        }
      }
    }
  },
  "sap.ui5": {
    "flexEnabled": true,
    "dependencies": {
      "minUI5Version": "1.114.9",
      "libs": {
        "sap.m": {},
        "sap.ui.core": {},
        "sap.fe.templates": {}
      }
    },
    "routing": {
      "routes": [
        {
          "pattern": ":?query:",
          "name": "ZC_UPLOAD_EMPList",
          "target": "ZC_UPLOAD_EMPList"
        }
      ],
      "targets": {
        "ZC_UPLOAD_EMPList": {
          "type": "Component",
          "id": "ZC_UPLOAD_EMPList",
          "name": "sap.fe.templates.ListReport",
          "options": {
            "settings": {
              "contextPath": "/ZC_UPLOAD_EMP",
              "controlConfiguration": {
                "@com.sap.vocabularies.UI.v1.LineItem": {
                  "actions": {
                    "uploadExcelController.controller": {
                      "press": ".extension.uploadempexcel.ext.controller.uploadExcelController.uploadExcel",
                      "visible": true,
                      "enabled": true,
                      "requiresSelection": false,
                      "text": "Upload Excel"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "extends": {
      "extensions": {
        "sap.ui.controllerExtensions": {
          "sap.fe.templates.ListReport.ListReportController": {
            "controllerName": "uploadempexcel.ext.controller.uploadExcelController"
          }
        }
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-949101535"&gt;&lt;STRONG&gt;Step 3: Create a Fragment for the Pop-up Screen&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;You'll need to create a fragment in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;ext&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;folder. This fragment will define the pop-up screen that appears when a user clicks the "Excel Upload" button.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.43.56 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288516i792D93DDC3EE4AF3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.43.56 PM.png" alt="Screenshot 2025-07-18 at 12.43.56 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:upload="sap.m.upload"&amp;gt;
    &amp;lt;Dialog id="uploadDialogSet" title="Excel Upload"&amp;gt;
        &amp;lt;content&amp;gt;
            &amp;lt;upload:UploadSet
                id="uploadSet"
                maxFileNameLength="200"
                fileTypes="xlsx, xls"
                afterItemAdded=".onAfterItemAdded"
                afterItemRemoved=".onAfterItemRemoved"
                uploadEnabled="true"
                /&amp;gt;
        &amp;lt;/content&amp;gt;
        &amp;lt;!-- CORRECTED: Changed from &amp;lt;buttons&amp;gt; to &amp;lt;beginButton&amp;gt; and &amp;lt;endButton&amp;gt; --&amp;gt;
        &amp;lt;beginButton&amp;gt;
            &amp;lt;Button id="idUploadB" text="Upload" press=".onUploadPress" type="Emphasized" enabled="false"/&amp;gt;
        &amp;lt;/beginButton&amp;gt;
        &amp;lt;endButton&amp;gt;
            &amp;lt;Button id="idCancelB" text="Cancel" press=".onCloseDialog" /&amp;gt;
        &amp;lt;/endButton&amp;gt;
    &amp;lt;/Dialog&amp;gt;
&amp;lt;/core:FragmentDefinition&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-752588030"&gt;&lt;STRONG&gt;Step 4: Implement the Controller Logic&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;The main logic for handling the file upload is contained within the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;uploadExcelController.controller.js&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file. You can adapt the code below for your own application. Make sure to adjust the file name and payload column names to fit your specific needs.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define(
  [
    "sap/ui/core/mvc/ControllerExtension",
    "sap/m/MessageToast",
    "sap/ui/core/Fragment",
    "xlsx",
  ],
  function (ControllerExtension, MessageToast, Fragment, XLSX) {
    "use-strict";

    return ControllerExtension.extend(
      "uploadempexcel.ext.controller.uploadExcelController",
      {
        _pDialog: null,
        _file: null,

        uploadExcel: function () {
          if (!this._pDialog) {
            this._pDialog = Fragment.load({
              id: this.base.getView().getId(),
              name: "uploadempexcel.ext.fragment.uploadExcelFragment",
              controller: this,
            }).then(
              function (oDialog) {
                this.base.getView().addDependent(oDialog);
                return oDialog;
              }.bind(this)
            );
          }

          this._pDialog.then(
            function (oDialog) {
              oDialog.open();
              oDialog.getContent()[0].removeAllItems();
              this._file = null;
              var oUploadButton = oDialog.getBeginButton();
              if (oUploadButton) {
                oUploadButton.setEnabled(false);
              }
            }.bind(this)
          );
        },

        onCloseDialog: function () {
          this._pDialog.then(function (oDialog) {
            oDialog.close();
          });
        },

        onAfterItemAdded: function (oEvent) {
          this._file = oEvent.getParameter("item").getFileObject();
          if (this._file) {
            MessageToast.show(
              "File '" + this._file.name + "' is ready for upload."
            );
          }
          this._pDialog.then(
            function (oDialog) {
              var oUploadButton = oDialog.getBeginButton();
              if (oUploadButton) {
                oUploadButton.setEnabled(!!this._file);
              }
            }.bind(this)
          );
        },

        onAfterItemRemoved: function (oEvent) {
          this._file = null;
          this._pDialog.then(function (oDialog) {
            var oUploadButton = oDialog.getBeginButton();
            if (oUploadButton) {
              oUploadButton.setEnabled(false);
            }
          });
          MessageToast.show("File removed.");
        },

        onUploadPress: function () {
          if (!this._file) {
            MessageToast.show("Please select a file first.");
            return;
          }

          var oReader = new FileReader();
          oReader.onload = function (e) {
            try {
              var data = e.target.result;
              var workbook = XLSX.read(data, { type: "buffer" });
              var sheetName = workbook.SheetNames[0];
              var excelData = XLSX.utils.sheet_to_row_object_array(
                workbook.Sheets[sheetName]
              );

              if (excelData.length &amp;gt; 0) {
                this._callOdataService(excelData);
              } else {
                MessageToast.show("No data found in the Excel file.");
              }
            } catch (error) {
              MessageToast.show("Error reading Excel file: " + error.message);
            }
          }.bind(this);

          oReader.readAsArrayBuffer(this._file);
        },

        _callOdataService: function (excelData) {
          try {
            // --- START: FINAL CORRECTED CODE ---
            // Get the main OData V4 model from the view.
            var oModel = this.base.getView().getModel();

            // Create a ListBinding directly for the entity set of the List Report.
            // The path MUST match the 'contextPath' in your manifest.json for the List Report target.
            var oListBinding = oModel.bindList("/ZC_UPLOAD_EMP");
            // --- END: FINAL CORRECTED CODE ---

            if (!oListBinding) {
              // This error is now highly unlikely to occur.
              throw new Error(
                "Could not create a ListBinding for the path /ZC_UPLOAD_EMP."
              );
            }

            excelData.forEach(function (rowData) {
              // IMPORTANT: Make sure your Excel column headers match exactly
              var oPayload = {
                //EmpID: rowData.EmployeeID.toString(), auto generated by Early Numbering in RAP Application
                Empname: rowData.EmployeeName.toString(),
                Contact: rowData.Contact.toString(),
              };
              // The create operation is performed on the ListBinding instance.
              oListBinding.create(oPayload);
            });

            MessageToast.show("Uploading " + excelData.length + " records...");

            // The model holds the batch queue, so we submit the changes on the model.
            oModel
              .submitBatch("$auto")
              .then(
                function () {
                  MessageToast.show("Data uploaded successfully.");
                  this.base.getExtensionAPI().refresh(); // Refresh the table to show new data
                  this.onCloseDialog();
                }.bind(this)
              )
              .catch(function (oError) {
                MessageToast.show("Error during upload: " + oError.message);
              });
          } catch (error) {
            MessageToast.show("Error processing data: " + error.message);
          }
        },
      }
    );
  }
);&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-556074525"&gt;&lt;STRONG&gt;Dependencies&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Before you can run the application, you'll need to install the necessary dependencies. You can do this by running the following commands in your terminal.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm i ui5-tooling-modules
npm i xlsx&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;&lt;SPAN&gt;We also need to update your&amp;nbsp;&lt;/SPAN&gt;ui5.yaml&lt;SPAN&gt;&amp;nbsp;file by adding the following custom tasks.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;builder:
customTasks:
- name: ui5-tooling-modules-task
afterTask: replaceVersion
- name: ui5-tooling-modules-middleware
afterMiddleware: compression&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-359561020"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;By following these steps, you can add a fully functional Excel upload feature to your SAP Fiori application. This enhancement provides a more convenient way for users to handle bulk data uploads, ultimately improving the user experience. I have also prepared a demo Excel file with sample data that you can use for testing purposes.&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-step-by-step-guide-to-implementing-an-excel-upload-button-in-a-fiori-app/ba-p/14156420"/>
    <published>2025-07-24T09:18:19.224000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-creating-fullstate-events-in-sap-s-4hana-for-sap/ba-p/14153666</id>
    <title>Event-driven Architecture:  Creating Fullstate Events in SAP S/4HANA for SAP EMIS</title>
    <updated>2025-07-31T12:41:30.451000+02:00</updated>
    <author>
      <name>vanessadayanc</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/126506</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In modern SAP S/4HANA landscapes, Event-driven architecture (EDA) enables decoupled, and scalable integrations across systems. SAP business events are often represented as &lt;STRONG&gt;n&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;otification events&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; especially in context master data events, such as&amp;nbsp; business partner creation or changes. Notification events merely signal that something happened (e.g., "Business Partner Created"), where as &lt;STRONG&gt;f&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ull state events&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; deliver the &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;complete state of business object &lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;in real time.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Benefits of Full State Events:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Decoupled Consumers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: No need for consumers to call back to S/4HANA — all relevant data is included in the event.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Higher Resilience&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Event consumers remain functional even if source systems are temporarily unavailable.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Faster Integration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Downstream applications and services can act immediatly, without additional round trips.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Simplified Architectures&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Reduces dependency on S/4HANA APIs, lowering system coupling and load.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Full state events are a powerful enabler for real-time, loosely coupled digital processes — especially in complex, hybrid SAP environments. However, since f&lt;/SPAN&gt;&lt;SPAN&gt;ull state events are not available for many business objects in SAP S/4HANA feature scope, this blog series outlines some approaches to fullfill the requirements of a specific event-driven use case in context of business partner events:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Series (1/3): Event-driven Architecture: Creating Fullstate Events in SAP S/4HANA for SAP Event Mesh on Integration Suite (EMIS) – Intro &amp;amp; SAP Standard Business Events&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Series (2/3): Event-driven Architecture: Creating Fullstate Events in SAP S/4HANA for SAP Event Mesh on Integration Suite (EMIS) - RAP Edition&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Series (3/3): Event-driven Architecture: Creating Fullstate Events in SAP S/4HANA for SAP Event Mesh on Integration Suite (EMIS) - Event-enablement Addon Edition &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-1864150953"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Intro&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Event-driven architecture (EDA) is a software architecture paradigm in which system components interact through the production, detection, and consumption of events. Instead of relying on a synchronous request/response model, EDA uses asynchronous communication, enabling components to react to state changes or occurrences in real time. This approach increas flexibility, scalability, and responsiveness, particularly in complex, distributed systems. In the context of SAP S/4HANA this paradigm shift is reflected in concept of so called “business events”.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;An overview of released business events, for example&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;for the SAP S/4HANA Private Cloud, can be found in the&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;A class="" href="https://api.sap.com/products/SAPS4HANACloudPrivateEdition/events/events" target="_blank" rel="noreferrer noopener"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP Business Accelorator Hub.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Example: If you want to be notified about the creation or modification of business partner master data, you can use the SAP business event for business partners.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_0-1752651776823.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287152i146D264070AF4D32/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vanessadayanc_0-1752651776823.png" alt="vanessadayanc_0-1752651776823.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Many of SAP &lt;/SPAN&gt;&lt;SPAN class=""&gt;standard&lt;/SPAN&gt; &lt;SPAN class=""&gt;business&lt;/SPAN&gt; &lt;SPAN class=""&gt;events&lt;/SPAN&gt; &lt;SPAN class=""&gt;are&lt;/SPAN&gt;&amp;nbsp;n&lt;SPAN class=""&gt;otification&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;events. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;No&lt;/SPAN&gt;&lt;SPAN class=""&gt;tification events i&lt;/SPAN&gt;&lt;SPAN class=""&gt;nform s&lt;/SPAN&gt;&lt;SPAN class=""&gt;ubscribers about the occurrence of an event, triggering actions or workflows without providing detailed context. They typically&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;c&lt;/SPAN&gt;&lt;SPAN class=""&gt;ontain&lt;/SPAN&gt;&lt;SPAN class=""&gt; minimal informations, like an event ID or type, sufficient for consumers to decide whether further data retrieval is necessary. &lt;/SPAN&gt;&lt;SPAN class=""&gt;In case of our business partner e&lt;/SPAN&gt;&lt;SPAN class=""&gt;xample,&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;only includes&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;the &lt;/SPAN&gt;&lt;SPAN class=""&gt;Busin&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt;ssPartner&lt;/SPAN&gt;&lt;SPAN class=""&gt; ID. Additionally SAP standard events&lt;/SPAN&gt; &lt;SPAN class=""&gt;can’&lt;/SPAN&gt;&lt;SPAN class=""&gt;t&lt;/SPAN&gt;&lt;SPAN class=""&gt; be &lt;/SPAN&gt;&lt;SPAN class=""&gt;filter&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt;d&lt;/SPAN&gt;&lt;SPAN class=""&gt; in SAP S/4HANA&lt;/SPAN&gt;&amp;nbsp;out of the box, meaning s&lt;SPAN class=""&gt;ubscribers receive notifications for all creation or change events of every business partner even if only a dedicated type or group is relevant for them.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Depending on the specific use case, it is advisable to evaluate whether notification events or full state events are more suitable. A comparison can be found below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE width="693px"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Criterion&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Notification Event&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Full State Event&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Definition&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Announces that &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;something happened&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;with&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; minor &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;context&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;information&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Announces&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;that&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;something&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;happened&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;and&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;i&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ncludes&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;entire&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;current&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;state&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;of&lt;/SPAN&gt;&lt;SPAN class=""&gt; an &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;business&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Content&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Minimal &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;info&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; (e.g., &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;event&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; type, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ID)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Full&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;payload&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;of&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;affected&lt;/SPAN&gt; &lt;SPAN class=""&gt;entity&lt;/SPAN&gt;&lt;SPAN class=""&gt; (e.g., &lt;/SPAN&gt;&lt;SPAN class=""&gt;full&lt;/SPAN&gt; &lt;SPAN class=""&gt;business&lt;/SPAN&gt; &lt;SPAN class=""&gt;partner&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;u&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;pdated)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Typical Example&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BusinessPartner.Created.v&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1 (&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;only&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;partner&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ID)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BusinessPartner.Updated.v&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1 &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;full&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;payload&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Use Case&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For&lt;/SPAN&gt; &lt;SPAN class=""&gt;triggering&lt;/SPAN&gt; &lt;SPAN class=""&gt;workflows&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;alerts&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;initiates&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; follow-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;up&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;calls&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;or&lt;/SPAN&gt;&lt;SPAN class=""&gt; simple &lt;/SPAN&gt;&lt;SPAN class=""&gt;notifications&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For&lt;/SPAN&gt; &lt;SPAN class=""&gt;replication&lt;/SPAN&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;synchronization&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;SPAN class=""&gt;or&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;direct&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;downstream&lt;/SPAN&gt; &lt;SPAN class=""&gt;processing&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Data Dependency&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Requires&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;consumers&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;fetch&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; additional &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;from&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Self-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;contained&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; — &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;no&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;need&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; follow-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;up&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;calls&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Coupling&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Tightly coupled&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – consumers&amp;nbsp;de&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;pend&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; on &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; APIs&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Loosely coupled&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – events are self-contained&lt;/SPAN&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;no&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;need&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; follow-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;up&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;calls&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Failure Tolerance&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Lower – &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;if&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; down, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;retrieval&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;may&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; fail&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;Higher –&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;consumers&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;can&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;act&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;without&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;availability&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Payload Size&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Small&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;Larger&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Producer Complexity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Low – &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;only&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;basic&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;metadata&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;required&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;Higher – &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;must&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;serialize&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;include&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;full&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;state&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Example Payload&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;{ "event": "BusinessPartnerCreated", "partnerId": "BP12345" }&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;{ "event": "BusinessPartnerUpdated", "partner": { ...full partner data... } &lt;/SPAN&gt;&lt;SPAN&gt;}&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_0-1753097963462.png" style="width: 621px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289310i2B29551E66A0EE15/image-dimensions/621x210?v=v2" width="621" height="210" role="button" title="vanessadayanc_0-1753097963462.png" alt="vanessadayanc_0-1753097963462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Check: &lt;A href="https://learning.sap.com/learning-journeys/discovering-event-driven-integration-with-sap-integration-suite-advanced-event-mesh/presenting-event-sources_e4194f4f-a986-418d-9c3b-ee71bb4ed101" target="_self" rel="noopener noreferrer"&gt;Presenting Event Sources&lt;/A&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1796720167"&gt;&lt;SPAN&gt;The Use Case&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The use case aims &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;enable&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; automatic validation of&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; country-&lt;/SPAN&gt;&lt;SPAN class=""&gt;specific&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number&lt;/SPAN&gt; &lt;SPAN class=""&gt;for&lt;/SPAN&gt;&amp;nbsp;b&lt;SPAN class=""&gt;usiness partners&lt;/SPAN&gt; &lt;SPAN class=""&gt;with&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;country&lt;/SPAN&gt;&lt;SPAN class=""&gt; code 'CH'. Whenever a b&lt;/SPAN&gt;&lt;SPAN class=""&gt;usiness&lt;/SPAN&gt;&amp;nbsp;p&lt;SPAN class=""&gt;artner&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number is provided, it&lt;/SPAN&gt; &lt;SPAN class=""&gt;should&lt;/SPAN&gt; &lt;SPAN class=""&gt;automatically&lt;/SPAN&gt; &lt;SPAN class=""&gt;checked&lt;/SPAN&gt; &lt;SPAN class=""&gt;against&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT IDs service&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;published&lt;/SPAN&gt; &lt;SPAN class=""&gt;by&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;authorities&lt;/SPAN&gt;&lt;SPAN class=""&gt;. &lt;/SPAN&gt;&lt;SPAN class=""&gt;Each&lt;/SPAN&gt; &lt;SPAN class=""&gt;country&lt;/SPAN&gt;&amp;nbsp;maintains&amp;nbsp;&lt;SPAN class=""&gt;its&lt;/SPAN&gt;&lt;SPAN class=""&gt; own &lt;/SPAN&gt;&lt;SPAN class=""&gt;tax&lt;/SPAN&gt; &lt;SPAN class=""&gt;administration, e.g. Switzerland offers a public SOAP API&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt; &lt;SPAN class=""&gt;validating&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; Swiss VAT ID. This&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;automated&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number check&lt;/SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;ensures&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;complete&lt;/SPAN&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;SPAN class=""&gt;correct&lt;/SPAN&gt; &lt;SPAN class=""&gt;management&lt;/SPAN&gt; &lt;SPAN class=""&gt;of&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&amp;nbsp;b&lt;SPAN class=""&gt;usiness&lt;/SPAN&gt;&amp;nbsp;p&lt;SPAN class=""&gt;artner&lt;/SPAN&gt; &lt;SPAN class=""&gt;master&lt;/SPAN&gt; &lt;SPAN class=""&gt;data&lt;/SPAN&gt;&lt;SPAN class=""&gt;. In this specific case,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;correct&lt;/SPAN&gt; &lt;SPAN class=""&gt;use&lt;/SPAN&gt; &lt;SPAN class=""&gt;of&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number&lt;/SPAN&gt; &lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;SPAN class=""&gt; also important&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt; &lt;SPAN class=""&gt;tax&lt;/SPAN&gt; &lt;SPAN class=""&gt;audits conducted&lt;/SPAN&gt; &lt;SPAN class=""&gt;by&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;tax&lt;/SPAN&gt; &lt;SPAN class=""&gt;authorities&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1600206662"&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;Expected&amp;nbsp;features/functionalities&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;If a business partner is created or changed and has the country value 'CH' in any of its addresses, the VAT ID with the BPTaxNumberType = 'CH1' should be validated using the public SOAP API. If the VAT validation was successful, no further action is required. However if no VAT is maintained or the validation fails, both an email and a message to a webhook should be generated.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1403693157"&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Environment&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The event is produced in the SAP S/4HANA Private Cloud. The requirement is implemented using the SAP Integration Suite and its components: SAP Event Mesh Integration Suite (EMIS) and Cloud Integration. A mail adapter and a webhook are used as consumers of the event. Alternatively, instead of SAP EMIS you can also use the SAP Advanced Event Mesh (AEM). &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Schaubild.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293441i38896C0AEFEA7A73/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Schaubild.jpg" alt="Schaubild.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Simplified presentation of the use case with a full state event in a high level architecture.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Set-Up-Connectivity:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To set up connectivity for SAP S/4HANA Private Cloud and SAP EMIS (or SAP AEM) you can refer to the following blog posts:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-s-4hana-direct-connectivity-with-event-mesh-in-integration-suite/ba-p/13752534" target="_blank"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP S/4HANA direct connectivity &lt;/SPAN&gt;&lt;SPAN class=""&gt;w&lt;/SPAN&gt;&lt;SPAN class=""&gt;ith Event Mesh in Integration Suite&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/rap-business-events-with-sap-integration-suite-advanced-event-mesh-and-sap/ba-p/13913393" target="_self"&gt;RAP Business Events with SAP Integration Suite, Advanced Event Mesh and SAP S/4HANA On Premise 2023&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1207179652"&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Variante&lt;/SPAN&gt;&lt;SPAN class=""&gt; 1 &lt;/SPAN&gt;&lt;SPAN class=""&gt;– &lt;/SPAN&gt;&lt;SPAN class=""&gt;Using &lt;/SPAN&gt;&lt;SPAN class=""&gt;SAP Business Event&lt;/SPAN&gt;&lt;SPAN class=""&gt; for &lt;/SPAN&gt;&lt;SPAN class=""&gt;Business&lt;/SPAN&gt; &lt;SPAN class=""&gt;Partner&lt;/SPAN&gt;&lt;SPAN class=""&gt; Create/Change&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_1-1752652200462.png" style="width: 504px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287155iB46B37412A89FDAA/image-dimensions/504x87?v=v2" width="504" height="87" role="button" title="vanessadayanc_1-1752652200462.png" alt="vanessadayanc_1-1752652200462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For the standard event, which is used first, a simple structure (notification event) is applied: the message contains only the ID field and the data in JSON format. A connection to EMIS/AEM is used, which requires an additional API call to retrieve the full data &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;before&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;further&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;processing&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;can&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;take&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;place&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;This&lt;/SPAN&gt; &lt;SPAN class=""&gt;iFlo&lt;/SPAN&gt;&lt;SPAN class=""&gt;w&lt;/SPAN&gt;&lt;SPAN class=""&gt; becomes more complex due to the&lt;/SPAN&gt;&amp;nbsp;extra&amp;nbsp;&lt;SPAN class=""&gt;API Call.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;With the HTTPS sender adapter &lt;/SPAN&gt;&lt;SPAN class=""&gt;only &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;JSON-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;formatted&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;body&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;sent&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
"BusinessPartner":"1000540" 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;Using the received BusinessPartnerNumber a query is made to SAP S/4HANA to retrieve additional data (such as name, address, country, BPTaxNumber, etc.).&amp;nbsp;&lt;/SPAN&gt;There are two options for the receiver adapter to obtain this data:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN class=""&gt;You can use an HTTP receiver adapter to receive the payload in JSON format or&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;an OData receiver adapter to receive the payload in XML format.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN class=""&gt;In this interface there is no option to select the country directly. Therefore it was decided to use OData to retrieve the data in XML format and apply filtering during processing.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;With the OData receiver a&lt;/SPAN&gt;&lt;SPAN class=""&gt;dapter&lt;/SPAN&gt;&lt;SPAN class=""&gt; the following settings are required&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_0-1752664672097.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287266iC0978C19948709C5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vanessadayanc_0-1752664672097.png" alt="vanessadayanc_0-1752664672097.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_1-1752664721215.png" style="width: 449px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287267i327E8AAD2CAE12CD/image-dimensions/449x137?v=v2" width="449" height="137" role="button" title="vanessadayanc_1-1752664721215.png" alt="vanessadayanc_1-1752664721215.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;After &lt;/SPAN&gt;&lt;SPAN class=""&gt;receivíng&lt;/SPAN&gt;&lt;SPAN class=""&gt; the data, the next step is t&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;o&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; route &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;messages&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;where&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;country is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;'CH' (S&lt;/SPAN&gt;&lt;SPAN class=""&gt;witzerland&lt;/SPAN&gt;&lt;SPAN class=""&gt;). &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;A &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;message&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;mapping&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;then&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; performend &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; check &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;if&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;BPTaxType&lt;/SPAN&gt;&lt;SPAN class=""&gt; = 'CH1'. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_4-1752652296718.png" style="width: 475px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287158iE20A8D9AF81111C7/image-dimensions/475x202?v=v2" width="475" height="202" role="button" title="vanessadayanc_4-1752652296718.png" alt="vanessadayanc_4-1752652296718.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;We&lt;/SPAN&gt; &lt;SPAN class=""&gt;us&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; a &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;g&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;roovy &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;s&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;cript&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt; &lt;SPAN class=""&gt;set&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;p&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;roperties&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, so &lt;/SPAN&gt;&lt;SPAN class=""&gt;that&lt;/SPAN&gt; &lt;SPAN class=""&gt;we&lt;/SPAN&gt; &lt;SPAN class=""&gt;can&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;later&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; send &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;emails&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;containing&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;important&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;information&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. The &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;p&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ayload&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;from&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;which&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;properties&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;are&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;extracted&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;which&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;has&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;now&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;been&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;converted&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;from&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; XML &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; JSON, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;looks&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; like &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
  "A_BusinessPartner": { 
    "A_BusinessPartnerType": { 
      "BusinessPartner": "1000540", 
      "BusinessPartnerUUID": "6045bd9c-ea28-1fe0-8df5-064c8dfd4727", 
      "BusinessPartnerName": "Test RealCore Schweiz GmbH", 
      "to_BusinessPartnerAddress": { 
        "A_BusinessPartnerAddressType": [ 
          { 
            "BusinessPartner": "1000540", 
            "Country": "CH", 
            "FullName": "Test RealCore Schweiz GmbH", 
            "HouseNumber": "1", 
            "Language": "DE", 
            "StreetName": "Müligässli", 
            "PostalCode": "8598", 
            "AddressID": "29648" 
          }, 
          { 
            "BusinessPartner": "1000540", 
            "Country": "CH", 
            "FullName": "Test RealCore Schweiz GmbH", 
            "HouseNumber": "2", 
            "Language": "DE", 
            "StreetName": "Müligässli", 
            "PostalCode": "8598", 
            "AddressID": "29663" 
          }, 
        ] 
      }, 
      "to_BusinessPartnerTax": { 
        "A_BusinessPartnerTaxNumberType": { 
          "BusinessPartner": "1000540", 
          "BPTaxType": "CH1", 
          "BPTaxNumber": "CHE359123374", 
          "BPTaxLongNumber": "", 
          "AuthorizationGroup": "" 
        } 
      } 
    } 
  } 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;To&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; perform &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;correct&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;action&lt;/SPAN&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;SPAN class=""&gt;you&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ne&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;d&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;set&lt;/SPAN&gt;&lt;SPAN class=""&gt; and send a &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;h&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;eader&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;in &lt;/SPAN&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;c&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;all&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. In &lt;/SPAN&gt;&lt;SPAN class=""&gt;our&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;use&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;case&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;header&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;should&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;indicate&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;that&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BPTaxNumber&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;requires&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;validation&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;(&lt;A href="https://www.uid-wse.admin.ch/V5.0/PublicServices.svc" target="_self" rel="nofollow noopener noreferrer"&gt;Link&lt;/A&gt; to webservice and actions)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The HTTP receiver adapter &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;used&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;make&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;API call to &lt;/SPAN&gt;&lt;SPAN class=""&gt;validate&lt;/SPAN&gt;&lt;SPAN class=""&gt; the &lt;/SPAN&gt;&lt;SPAN class=""&gt;BPTaxNumber&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_6-1752652391710.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287161iD64CA3DF9A0186BF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vanessadayanc_6-1752652391710.png" alt="vanessadayanc_6-1752652391710.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;T&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;he API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;call&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;returns&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; a simple &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;response&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"&amp;gt; 
  &amp;lt;s:Body xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&amp;gt; 
    &amp;lt;ValidateVatNumberResponse xmlns="http://www.uid.admin.ch/xmlns/uid-wse"&amp;gt; 
      &amp;lt;ValidateVatNumberResult&amp;gt;true&amp;lt;/ValidateVatNumberResult&amp;gt; 
    &amp;lt;/ValidateVatNumberResponse&amp;gt; 
  &amp;lt;/s:Body&amp;gt; 
&amp;lt;/s:Envelope&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;All &lt;/SPAN&gt;&lt;SPAN class=""&gt;together&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&amp;nbsp;complete&amp;nbsp;&lt;SPAN class=""&gt;iFlow&lt;/SPAN&gt; &lt;SPAN class=""&gt;looks&lt;/SPAN&gt;&lt;SPAN class=""&gt; like &lt;/SPAN&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_7-1752652431621.png" style="width: 690px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287162i17A282525BFB8203/image-dimensions/690x231?v=v2" width="690" height="231" role="button" title="vanessadayanc_7-1752652431621.png" alt="vanessadayanc_7-1752652431621.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the teaser one benefit of full state events was &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;highlighted&lt;/SPAN&gt;&lt;/SPAN&gt;: &lt;EM&gt;&lt;STRONG&gt;Simplified Architectures&lt;/STRONG&gt;&lt;/EM&gt;&lt;SPAN&gt;&lt;EM&gt;: Reduceing dependency on S/4HANA APIs, and lowering system coupling and load.&lt;/EM&gt;&amp;nbsp;However, with the interface described above, the simplified architecture is not archieved. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;To&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;address&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;another&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;solution&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;requir&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ed&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;STRONG&gt;RAP event &lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A RAP event can be used to archieve simpler architecture, providing pre-selected and filtered events.&amp;nbsp;Therefore, the solution chosen is to implement a custom RAP event.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;You&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;can&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; find &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;more&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;information&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; in &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;SPAN class=""&gt;next&lt;/SPAN&gt;&amp;nbsp;blog of&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt; &lt;SPAN class=""&gt;serie&lt;/SPAN&gt;&lt;SPAN class=""&gt;: Event-&lt;/SPAN&gt;&lt;SPAN class=""&gt;driven&lt;/SPAN&gt;&lt;SPAN class=""&gt; Architecture: &lt;/SPAN&gt;&lt;SPAN class=""&gt;Creating&lt;/SPAN&gt; &lt;SPAN class=""&gt;Fullstate&lt;/SPAN&gt;&lt;SPAN class=""&gt; Events in SAP S/4HANA &lt;/SPAN&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt;&lt;SPAN class=""&gt; SAP Event Mesh on Integration Suite (EMIS) - &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;RAP Edition&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;coming&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;soon&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;…).&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-creating-fullstate-events-in-sap-s-4hana-for-sap/ba-p/14153666"/>
    <published>2025-07-31T12:41:30.451000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/rap-with-deep-static-action-odata-v4-complete-guide-till-execution-in/ba-p/14170270</id>
    <title>RAP - With Deep Static Action - OData V4 - Complete Guide till Execution in Gateway</title>
    <updated>2025-08-08T10:12:57.005000+02:00</updated>
    <author>
      <name>SuryaRamesh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2066090</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Summary:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In some of SAP RAP (RESTful Application Programming) scenarios, there is a need to pass a request body to an action as &lt;STRONG&gt;input&lt;/STRONG&gt;, execute business logic, and return the output in the response body. While SAP RAP offers a "Deep Action" feature to facilitate such requirements, this capability is currently not supported in OData V2.&amp;nbsp; As a result, developers seeking to implement this pattern must turn to OData V4, which introduces expanded support for complex actions and payload handling.&lt;/P&gt;&lt;P&gt;This blog will walk you through a practical, step-by-step session on how to implement request/response body handling in RAP Actions using OData V4, ensuring you can meet advanced integration and business process needs in your SAP applications. Also this blog explains how to capture your OData V4 service in TR Properly.&lt;/P&gt;&lt;P&gt;The Aim is to create Single Parent Entity and create Deep Action out of it which acts like same OData Deep Entity.&amp;nbsp;&lt;/P&gt;&lt;P&gt;The Action can be exposed to interface where it can be used for POST Operations. ( GET Can be used only to get CSRF Token for security layer.&lt;/P&gt;&lt;P&gt;Before getting deep dive into RAP Deep Actions, first we need to understand that RAP Actions are generally &lt;STRONG&gt;function imports in OData V2&lt;/STRONG&gt; and in OData V4 it shows as &lt;STRONG&gt;Action&lt;/STRONG&gt; itself in Meta Data Extension.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Now let's start with the build.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1) Create Root View Entity&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Test'
@Metadata.ignorePropagatedAnnotations: true
define root view entity ZCDS_TEST_PARENT_ENTITY as select from ekko
{
    key ebeln as Ebeln,
    bukrs as Bukrs,
    bsart as Bsart,
    lifnr as Lifnr
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2) Create Behavior Definition on top of Root View Entity&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SuryaRamesh_0-1754192998396.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295677i26ED82104B375720/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SuryaRamesh_0-1754192998396.png" alt="SuryaRamesh_0-1754192998396.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3) After Creating Behaviour Definition with appropriate Alias and read only properties, Add Static Action with Deep structure as per your requirement. The syntax is as below. ( Note for the deep action you must create Deep Abstract Entity which I will explain in upcoming points ).&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;static action TestAction deep parameter ZCDS_ROOT_ABSTRACT_TEST_API deep result[1..*] ZCDS_ROOT_ABSTRACT_TEST_API;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4) While using Deep Action, in &lt;STRONG&gt;Result [1..*]&lt;/STRONG&gt; is important which indicates that Action will expand for Deep structure for Result. But for Input cardinality is not required.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SuryaRamesh_2-1754193545159.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295679i695C8F2FFB416010/image-size/large?v=v2&amp;amp;px=999" role="button" title="SuryaRamesh_2-1754193545159.png" alt="SuryaRamesh_2-1754193545159.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5) Create Root Abstract Entity&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Root Abstract'

define root abstract entity ZCDS_ROOT_ABSTRACT_TEST_API
{
  key Ebeln     : ebeln;
      Bukrs     : bukrs;
      _Parenttochild : composition [1..*] of ZCDS_CHILD_ABSTRACT_TEST_API;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;6) Create corresponding child Abstract Entity&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Child Abstract'
define abstract entity ZCDS_CHILD_ABSTRACT_TEST_API
{
    key Ebeln : ebeln;
    key ebelp : Ebelp;
        Matnr_ae : matnr;
     _ChildtoParent : association to parent zcds_root_abstract_test_api on $projection.ebeln = _childtoParent.ebeln;
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7) Create Abstract - Behavior Definition&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;abstract;
strict ( 2 );
with hierarchy;

define behavior for ZCDS_ROOT_ABSTRACT_TEST_API //alias &amp;lt;alias_name&amp;gt;
{
  association _Parenttochild;
}

define behavior for ZCDS_CHILD_ABSTRACT_TEST_API //alias &amp;lt;alias_name&amp;gt;
{
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":smiling_face_with_sunglasses:"&gt;😎&lt;/span&gt;Create Respective Service Definition and Service Binding. ( Note Service Binding to be created in OData - V4 Web API for Interface Based Requirements and OData - V4 UI for Fiori/BTP Based Requirements. Currently Im creating OData - V4 Web API since we are testing in gateway only ).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Test'
define service ZCDS_TEST_ENTITY_SRV {
  expose ZCDS_TEST_PARENT_ENTITY as TestEntity;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SuryaRamesh_4-1754194294825.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295681iC406A039776BDEF7/image-size/large?v=v2&amp;amp;px=999" role="button" title="SuryaRamesh_4-1754194294825.png" alt="SuryaRamesh_4-1754194294825.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9) After creating the service Binding Activate it and publish it. In this Blog we are also going to see how to save/capture V4 OData service in TR Properly.&lt;/P&gt;&lt;P&gt;10) Once Publishing the service, navigate to /n/iwfnd/v4_admin Transaction and find your service Group. Right click on the service and click on&amp;nbsp;&lt;STRONG&gt;Transport Publishing.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SuryaRamesh_5-1754194630607.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295682i885FD29AA58C44A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="SuryaRamesh_5-1754194630607.png" alt="SuryaRamesh_5-1754194630607.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SuryaRamesh_6-1754194653193.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295683i81AA08C167939D76/image-size/large?v=v2&amp;amp;px=999" role="button" title="SuryaRamesh_6-1754194653193.png" alt="SuryaRamesh_6-1754194653193.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;11) After clicking on Transport Publishing it will ask for Customizing TR, Save the service in Customizing TR and click on&amp;nbsp;&lt;STRONG&gt;LOCAL&amp;nbsp;&lt;/STRONG&gt;system Alias and then select&amp;nbsp;&lt;STRONG&gt;Transport Routing Assignment.&amp;nbsp;&lt;/STRONG&gt;It will ask for Customizing TR again and save it in Customizing TR. With these steps your OData V4 Service will get properly captured in TR.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SuryaRamesh_7-1754194797481.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295684iAC105F19A6C263BB/image-size/large?v=v2&amp;amp;px=999" role="button" title="SuryaRamesh_7-1754194797481.png" alt="SuryaRamesh_7-1754194797481.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;12) After capturing service in TR, click on the Service and select Service Test.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SuryaRamesh_8-1754194982084.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295686iD8E6854AE734AA91/image-size/large?v=v2&amp;amp;px=999" role="button" title="SuryaRamesh_8-1754194982084.png" alt="SuryaRamesh_8-1754194982084.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;13) As Mentioned above RAP Action's will be considered as Actions in OData V4 whereas in OData V2 it will be taken as Function Imports. Refer to screenshot below for the same which shows the Action we created as&amp;nbsp;&lt;STRONG&gt;Action &lt;/STRONG&gt;while loading &lt;STRONG&gt;Meta data.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SuryaRamesh_1-1754474054639.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297094i81A4C39FD7E67E6D/image-size/large?v=v2&amp;amp;px=999" role="button" title="SuryaRamesh_1-1754474054639.png" alt="SuryaRamesh_1-1754474054639.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;14) Now let's construct&amp;nbsp;&lt;STRONG&gt;URL and Payload for OData V4 RAP Action.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;URL Format :&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;"1" : &lt;STRONG&gt;/sap/opu/odata4/sap/zcds_test_entity_srv/....&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;"2": &lt;STRONG&gt;TestEntity/&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;"3":&amp;nbsp;&lt;STRONG&gt;com.sap.gateway.srvd_...&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;"4": .&lt;STRONG&gt;TestAction&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Final URL :&amp;nbsp;&lt;/STRONG&gt;"1" &amp;amp;&amp;amp; "2" &amp;amp;&amp;amp; "3" &amp;amp;&amp;amp; "4"&lt;/P&gt;&lt;P&gt;In simple Terms the "1" will be coming by default once you enter the gateway and "2" will be also coming by default once you add the entity. Then "3" is something which is for OData V4 and it's&amp;nbsp;&lt;STRONG&gt;schema namespace&amp;nbsp;&lt;/STRONG&gt;which you will find while loading meta data. Finally "4" is your Action.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;URL Should look like this:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;/sap/opu/odata4/sap/zcds_test_entity_srv/..../TestEntity/com.sap.gateway.. .TestAction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note : Action should be exposed with a dot (.)&amp;nbsp; after Schema Namespace&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Payload;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Payload should hold all properties from Action Parameters. It will not play any crucial role with Root CDS View Entity inputs rather static action will expect all the deep parameters to be passed to initiate POST Operation in Input payload.&amp;nbsp;&lt;/P&gt;&lt;P&gt;For Our Scenario let's Pass Payload like this.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "Ebeln": "1050001",
    "Bukrs": "001",
    "_Parenttochild": [
        {
            "Ebeln": "1050001",
            "Matnr": "000000000000000001"
        }
    ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;15) After passing the payload, we often do get this error while execution which is Authorization block. To resolve this we have to get appropriate authorization from BASIS for Auth objects;&amp;nbsp;&lt;STRONG&gt;S_START&amp;nbsp;&lt;/STRONG&gt;and&amp;nbsp;&lt;STRONG&gt;S_SERVICE.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SuryaRamesh_2-1754474247987.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297095i422A41B53448611E/image-size/large?v=v2&amp;amp;px=999" role="button" title="SuryaRamesh_2-1754474247987.png" alt="SuryaRamesh_2-1754474247987.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;16) Once Necessary Authorization is obtained we do get response like this in Deep structure in Response body.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SuryaRamesh_3-1754474371255.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297096iA92E7668AA2831C5/image-size/large?v=v2&amp;amp;px=999" role="button" title="SuryaRamesh_3-1754474371255.png" alt="SuryaRamesh_3-1754474371255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;17) Henceforth with this way we can use Deep Action and pass input in Body instead of payload as deep structure. This could be used for Interface as well as Fiori based objects. In Fiori with same way the testing can be done in Fiori Launchpad with deployed app with Action button having deep structure.&amp;nbsp;&lt;/P&gt;&lt;P&gt;18) Static Action should hold whatever Business logic is for POST inside RAP Behavior Implementation class. The UI/3rd party system input can be read from&amp;nbsp;&lt;STRONG&gt;keys&amp;nbsp;&lt;/STRONG&gt;parameter with appropriate&amp;nbsp;&lt;STRONG&gt;%cid_ref&amp;nbsp;&lt;/STRONG&gt;and once all business logic is done the response can be mapped to&amp;nbsp;&lt;STRONG&gt;result&amp;nbsp;&lt;/STRONG&gt;parameter of same action.&lt;/P&gt;&lt;P&gt;19) If you want to read some of the CDS View properties then instead of static action you can use normal action also with deep parameters.&lt;/P&gt;&lt;P&gt;20) If the requirement demands to send&amp;nbsp;&lt;STRONG&gt;Deep structure as output only&amp;nbsp;&lt;/STRONG&gt;or vise versa means then in this case you can avoid deep structure in either parameter or response as shown below;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;static action TestActionDeepInput deep parameter ZCDS_DEEP_ABSTRACT result[1]ZCDS_OUTPUT_ABSTRACT;
static action TestActionDeepOutput parameter ZCDS_INPUT_ABSTRACT deep result[1..*]ZCDS_DEEP_ABSTRACT;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1736822084"&gt;Conclusive Summary&lt;/H2&gt;&lt;P&gt;I hope this blog has clarified key concepts around OData V4, RAP Deep Actions, Deep Abstraction, and capturing V4 services in a transport request. In future posts, I’ll explore running background jobs with RAP and Application Jobs.&lt;BR /&gt;Thank you for reading!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/rap-with-deep-static-action-odata-v4-complete-guide-till-execution-in/ba-p/14170270"/>
    <published>2025-08-08T10:12:57.005000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/simple-rap-based-managed-ui-development-with-create-amp-delete-actions-on/ba-p/14173514</id>
    <title>Simple RAP based Managed UI development with Create &amp; Delete actions on custom BillDoc header table</title>
    <updated>2025-08-11T11:51:13.797000+02:00</updated>
    <author>
      <name>AnithaSwamy</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1757477</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607831439"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/H1&gt;&lt;P class=""&gt;In this project, you set out to build a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Simple Managed RAP (ABAP RESTful Application Programming) application&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP BTP ABAP Environment&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;using&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Eclipse ADT&lt;/STRONG&gt;.&amp;nbsp;The goal is to design a lightweight&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Billing Document Header maintenance app&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Delete&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;capabilities, following best practices for&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Managed RAP&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;development.&lt;/P&gt;&lt;P class=""&gt;The application uses a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;custom transparent table&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for storing billing document header data and implements&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;standard RAP layers&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;— Database Table, Interface View, Projection View, Metadata Annotations, Behavior Definitions, Service Definition, and Service Binding.&lt;/P&gt;&lt;P class=""&gt;By leveraging Managed RAP,&amp;nbsp; you do not need to write custom CRUD logic — the framework auto-generates this functionality, allowing you to focus purely on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;data modelling&lt;/STRONG&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI annotations&lt;/STRONG&gt;, and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;service exposure&lt;/STRONG&gt;. This demonstrates how RAP accelerates application development in the cloud while complying with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ABAP Cloud&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;clean-core principles.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1411317934"&gt;&lt;SPAN&gt;Objectives:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;Creating a Simple Managed RAP based UI using BTP and Eclipse IDE with Create &amp;amp; Delete actions on custom Billing Document header table.&lt;/P&gt;&lt;H1 id="toc-hId-1214804429"&gt;&lt;SPAN&gt;Requirements/Task(s):&lt;/SPAN&gt;&lt;/H1&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Create required Database Table(s)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create CDS views for the Database Table – &lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Interface View and &lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Consumption (Projection) View&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create Metadata View on Consumption View&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create Behavior Definition for Interface View&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create Behavior Definition for Consumption View&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create Service Definition for Consumption View&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Service Binding for the Service Definition&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Test the Application&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H1 id="toc-hId-1018290924"&gt;&lt;SPAN&gt;Objects List&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_0-1754496288291.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297264i93FB136F203F8C6C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_0-1754496288291.png" alt="AnithaSwamy_0-1754496288291.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-821777419"&gt;&lt;SPAN&gt;Outline the steps/plan for your project:&lt;/SPAN&gt;&lt;/H1&gt;&lt;OL&gt;&lt;LI&gt;Step1: Create Database Table (Eclipse - Data Dictionary-Database Table)&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_1-1754496288295.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297262i2CE4A8D579B10116/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_1-1754496288295.png" alt="AnithaSwamy_1-1754496288295.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Check the created Database Table structure (Right click – Open With - Data Preview)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_2-1754496288297.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297263i6AD9BF9B9505CE44/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_2-1754496288297.png" alt="AnithaSwamy_2-1754496288297.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2:&lt;/STRONG&gt; Create Interface Root view CDS for the database table created (right click database table - Data Definitions - Root View template)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_3-1754496288300.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297265i904B146112104C43/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_3-1754496288300.png" alt="AnithaSwamy_3-1754496288300.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3:&lt;/STRONG&gt; Create Consumption/Projection Root view CDS for the database table created (right click database table - Data Definitions - Root View template)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_4-1754496288302.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297266iF4C8B97E2843AEEA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_4-1754496288302.png" alt="AnithaSwamy_4-1754496288302.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4&lt;/STRONG&gt;: Create Metadata that helps with designing aspects of the UI (Right click on the Projection View you created and select new "Metadata Definition")&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_5-1754496288310.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297267i36508B05B0899329/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_5-1754496288310.png" alt="AnithaSwamy_5-1754496288310.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5&lt;/STRONG&gt;: Create Behaviour Definition - one fore Interface view and one for Consumption view you have created&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5a&lt;/STRONG&gt;: Create Behaviour Definition for the interface view ((Right click the Interface CDS View and choose Behaviour Definition option)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_6-1754496288313.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297270iE2B009147269A018/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_6-1754496288313.png" alt="AnithaSwamy_6-1754496288313.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5b&lt;/STRONG&gt;: Create Behaviour Definition for the Projection view (Right click the Projection CDS View and choose Behaviour Definition option)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_7-1754496288314.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297269iF99AEE68D9358125/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_7-1754496288314.png" alt="AnithaSwamy_7-1754496288314.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6&lt;/STRONG&gt;: Create Service definition (Right click CDS Projection View and click "New Service Definition")&lt;/P&gt;&lt;P&gt;Expose the Consumption View CDS.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_8-1754496288316.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297268i56EFB860ABFC0F0F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_8-1754496288316.png" alt="AnithaSwamy_8-1754496288316.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7&lt;/STRONG&gt;: Create Service Binding (Right click on the new Service definition you created and choose "New Service Binding" and Choose OData V4 version for the UI)&lt;/P&gt;&lt;P&gt;Select the Service Definition displayed on the versions section of the page and hit "Publish" button.&lt;/P&gt;&lt;P&gt;It will take some time. Once it is done, a Service URL will be created and the binding will be displayed.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_9-1754496288320.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297272iF7768886F9A60683/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_9-1754496288320.png" alt="AnithaSwamy_9-1754496288320.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8:&amp;nbsp;&lt;/STRONG&gt; Test the Application: Select the Entity and hit Preview button, a new Window will be opened with the RAP UI App you created.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_10-1754496288327.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297271i1D46C62B933F0064/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_10-1754496288327.png" alt="AnithaSwamy_10-1754496288327.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;A new window will open with the UI for the Application we created:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_11-1754496288331.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297273iF1AD866D7D5EB96F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_11-1754496288331.png" alt="AnithaSwamy_11-1754496288331.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Click “Go” Button, so that the values are pulled from the Database table to be shown on the screen.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_12-1754496288337.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297274i28F0769CF670AD45/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AnithaSwamy_12-1754496288337.png" alt="AnithaSwamy_12-1754496288337.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can see the database records displayed on the screen. The Create and Delete buttons are available for creating new records and deleting existing records. Since this is Managed RAP application, the code necessary for the Create and delete operations are handled automatically by the Framework, there is no explicit code necessary for these simple actions. If customizations are required then it can be handled via Implementation Class (Behaviour Pool Classes) of the Behaviour Definition.&lt;/P&gt;&lt;H1 id="toc-hId-625263914"&gt;&lt;SPAN&gt;Project link:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://github.com/ABAPAnitha/RAP-for-Bill-doc-header-and-Items" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/ABAPAnitha/RAP-for-Bill-doc-header-and-Items&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="" id="toc-hId-557833128"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;This project highlights how quickly and efficiently a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Managed RAP application&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;can be built on SAP BTP using the ABAP RESTful Programming Model.&amp;nbsp;The framework automatically handled the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Delete&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;operations, proving the advantage of Managed scenarios where minimal custom coding is required.&lt;/P&gt;&lt;P class=""&gt;We also learned how&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI metadata annotations&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;can be used to control the look and feel of the Fiori Elements-based UI without any frontend coding, and how RAP’s structured approach — from database table to service binding — enables a clean, maintainable, and extensible application design.&lt;/P&gt;&lt;P class=""&gt;Going forward, you can extend this solution with:&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Custom business logic&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in Behavior Pool classes,&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Associations&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to billing item entities for a complete billing document structure,&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Advanced annotations&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for richer UI interactions.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Overall, the Managed RAP approach proved to be a fast, cloud-compliant, and developer-friendly way to deliver maintainable SAP applications aligned with the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ABAP Cloud&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;strategy.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/simple-rap-based-managed-ui-development-with-create-amp-delete-actions-on/ba-p/14173514"/>
    <published>2025-08-11T11:51:13.797000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/simplifying-attachment-downloads-in-rap-with-cds-views-a-step-by-step-guide/ba-p/14153893</id>
    <title>Simplifying Attachment Downloads in RAP with CDS Views: A Step-by-Step Guide</title>
    <updated>2025-08-11T12:12:53.686000+02:00</updated>
    <author>
      <name>kishore_kumar_g</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1438038</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; In a recent project, I faced a requirement where we had to allow users to download a file generated dynamically during runtime. The tricky part was that we were working within RAP and wanted to avoid any heavy coding and also it has to be dynamic. The reason it needs to be dynamic is that we need to access the stored file through the conventional ABAP API, which restricts us from directly accessing it in the CDS view.&lt;/P&gt;&lt;P&gt;In this blog, I thought to share my experience that how we achieved it with no UI coding and using the conventional Flight Schedule Details example.&lt;/P&gt;&lt;H2 id="toc-hId-1735070246"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1538556741"&gt;&lt;FONT color="#FF9900"&gt;Why This Approach?&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;When we were analyzing the requirement to achieve the download of the file through the service, We evaluated a few approaches - one using an extra service entity just for file streaming, and another directly embedding the logic into the existing root view. Will explain it in detail in a separate blog about the first approach,&amp;nbsp; and in this blog, will share the approach(second) that we finally chose. Reasons to choose the second approach:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;We were able to achieve the download of the attachment with changes in the existing entity itself.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;It requires no UI coding.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Achieved with less effort, as the attachment file and its connection link can be exposed through attributes and mapping with annotation.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1342043236"&gt;&lt;FONT color="#FF9900"&gt;&lt;STRONG&gt;How Does It Look in Action?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Download File.gif" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287261i3A32C4E5DC7D8A1B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Download File.gif" alt="Download File.gif" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Diagrammatic Representation of the CDS Stack and Object Involved:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="kishore_kumar_g_0-1753920995292.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294204i26967678AAC7C7F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="kishore_kumar_g_0-1753920995292.png" alt="kishore_kumar_g_0-1753920995292.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Ideally, the best practice is that the C view in RAP is built on top of the R view. However, for ease of structuring in this example, I have consumed the C view directly from the I view.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1274612450"&gt;&lt;FONT color="#FF9900"&gt;&lt;STRONG&gt;Interface View (ZI_SpFlightSchedule):&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;As with every RAP based structuring, we start with a root interface view exposing base flight data. While the &lt;STRONG&gt;dynamic selection of ConnectionLink, MimeType, and Filename can be implemented based on entity keys and logic, we have &lt;STRONG&gt;hardcoded these fields here for simplicity and clarity in demonstrating the attachment download concept.&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;PRE&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@Metadata.allowExtensions: true
@EndUserText.label: 'Flight Schedule with Download Link'

define root view entity ZI_SpFlightSchedule
  as select from spfli
{
    key carrid,
    key connid,
        cityfrom,
        cityto,

    'http://localhost:60518/testclient/sap/opu/odata/sap/ZSB_SPFLIGHTSCHEDULE_V2/ZC_SpFlightSchedule(carrid=''AA'',connid=''17'')/$value'
        as ConnectionLink,

    'application/text' as MimeType,
    'Flight_Details.txt' as Filename
}&lt;/PRE&gt;&lt;P&gt;Let me share my understanding of each attribute:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;ConnectionLink:&lt;BR /&gt;&lt;/STRONG&gt;A&amp;nbsp;URL field in your CDS view providing the download link for the attachment associated with the RAP entity. It is used for clickable navigation or API-based download of the attachment.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;MimeType:&lt;BR /&gt;&lt;/STRONG&gt;Specifies the&amp;nbsp;MIME type (file type) of the attachment to inform the browser or consumer how to handle the downloaded content (e.g., application/text, application/pdf).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Filename:&lt;BR /&gt;&lt;/STRONG&gt;Defines the default name of the file when the attachment is downloaded, ensuring consistent naming for users (e.g., Flight_Details.txt, Flight_Details.json).&lt;/P&gt;&lt;H3 id="toc-hId-1078098945"&gt;&amp;nbsp;&lt;/H3&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-881585440"&gt;&lt;FONT color="#FF9900"&gt;&lt;STRONG&gt;Consumption View (ZC_SpFlightSchedule):&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;Now, Let's go for creation the&amp;nbsp; RAP transactional consumption view.&lt;/P&gt;&lt;PRE&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Flight data'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true
//@Search.searchable: true
@ObjectModel: {
    semanticKey: [ 'carrid', 'connid' ],
    usageType:{
        serviceQuality: #C,
        sizeCategory: #S,
        dataClass: #MIXED
    }
}
@VDM.viewType:#CONSUMPTION
@VDM.usage.type: [ #TRANSACTIONAL_PROCESSING_SERVICE ]

define root view entity ZC_SpFlightSchedule
  provider contract transactional_query
  as projection on ZI_SpFlightSchedule
{
    key carrid,
    key connid,
    cityfrom,
    cityto,
    ConnectionLink,

    @Semantics.largeObject: {
        mimeType: 'MimeType',
        fileName: 'Filename',
        contentDispositionPreference: #ATTACHMENT
    }
    @ObjectModel.virtualElementCalculatedBy: 'ABAP: ZCL_FOR_VIRTUAL_ELEMENTS'
    @EndUserText.label: 'Attachment'
    virtual Attachment : abap.rawstring(3056),

    @Semantics.mimeType: true
    MimeType,
    Filename 
}&lt;/PRE&gt;&lt;P&gt;Here the Attachment virtual element is linked with the attributes to know the properties for the file download.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;MimeType for MIME type resolution.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Filename for correct naming.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;contentDispositionPreference: #ATTACHMENT to force download instead of browser preview.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;@ObjectModel.virtualElementCalculatedBy indicates runtime content population by ABAP class ZCL_FOR_VIRTUAL_ELEMENTS.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;here it's not necessary to mention the length of the data type like &lt;STRONG&gt;virtual Attachment : abap.rawstring(3056)&lt;/STRONG&gt;, as this does not restrict or impact performance or storage limits. However, to indicate the expected file size for readability/documentation, I have included it.&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Also, one challenge I faced was handling large files. Although OData supports streaming, we had to test the performance of files over 1MB. During testing, some downloads triggered browser timeouts or inconsistent behavior. To address this, we decided to enforce a size limit through backend logic for now. In our scenario, there are also possibilities to split or paginate the file content, which is something I plan to explore further in the next phase.&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;BR /&gt;&lt;DIV class=""&gt;Also when checking for the memory limit of the file download got to know that the&amp;nbsp;theoretical maximum will be upto 2 GB, but as mentioned earlier the practical upload/download via OData may face:&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Timeout issues for large files.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Memory limits in the app server.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Frontend limitations (browser limits, network).&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-685071935"&gt;&lt;FONT color="#FF9900"&gt;Implement Virtual Element Logic:&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;Now let's move on to the implementation of the logic required for the&amp;nbsp; file download content. In the class ZCL_FOR_VIRTUAL_ELEMENTS, lets' add the interfaces IF_SADL_EXIT and&lt;BR /&gt;IF_SADL_EXIT_CALC_ELEMENT_READ. Then, Implement the method IF_SADL_EXIT_CALC_ELEMENT_READ~CALCULATE to dynamically populate Attachment with the content of the file in xstring data type.&lt;/P&gt;&lt;P&gt;This allows &lt;STRONG&gt;dynamic downloads for each RAP record seamlessly.&lt;/STRONG&gt;&lt;/P&gt;&lt;PRE&gt;METHOD if_sadl_exit_calc_element_read~calculate.
DATA: lt_original_data TYPE STANDARD TABLE OF ZC_SpFlightSchedule WITH DEFAULT KEY,
ls_original_data TYPE ZC_SpFlightSchedule,
lv_BUFFER  TYPE  xstring.

lt_original_data = CORRESPONDING #( it_original_data ).
ls_original_data = lt_original_data[ 1 ].
SELECT SINGLE * FROM spfli INTO @DATA(line)
      WHERE carrid = @ls_original_data-carrid AND connid = @ls_original_data-connid.

    DATA(lv_csv) = |CARRID,CONNID,CITYFROM,CITYTO{ cl_abap_char_utilities=&amp;gt;newline }|.
    lv_csv &amp;amp;&amp;amp;= |{ line-carrid },{ line-connid },{ line-cityfrom },{ line-cityto }{ cl_abap_char_utilities=&amp;gt;newline }|.

 CALL FUNCTION 'SCMS_STRING_TO_XSTRING'
      EXPORTING
        text     = lv_csv
        mimetype = 'text/plain'
*       ENCODING =
      IMPORTING
        buffer   = lv_BUFFER
      EXCEPTIONS
        failed   = 1
        OTHERS   = 2.
    IF sy-subrc &amp;lt;&amp;gt; 0.
* Implement suitable error handling here
    ENDIF.

    TRY.
        lt_original_data[ 1 ]-attachment = lv_BUFFER.
        ##NO_HANDLER
      CATCH cx_sy_itab_line_not_found cx_dynamic_check.
    ENDTRY.

    ct_calculated_data = CORRESPONDING #( lt_original_data ).

ENDMETHOD.&lt;/PRE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-488558430"&gt;&lt;FONT color="#FF9900"&gt;&lt;STRONG&gt;Metadata Extension for UI Annotations:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;To enable a mapping with the connection link and the attribute of the file, let's add a metadata extension.&lt;/FONT&gt;&lt;/P&gt;&lt;PRE&gt;@Metadata.layer: #CORE
@UI: {
  headerInfo: {
      typeName: 'Reconcile Draft Reports',
      typeNamePlural: 'Flight Schedules',
      title: { type: #STANDARD, value: 'carrid' }
  } 
}
annotate entity ZC_SpFlightSchedule
  with 
{
  @UI.facet: [
    {
      id: 'GeneralInfo',
      type: #IDENTIFICATION_REFERENCE,
      label: 'Flight Info',
      position: 10
    }
  ]

  @UI.lineItem: [{ position: 10 }]
  @UI.identification: [{ position: 10, label: 'Carrier ID', importance: #HIGH }]
    carrid;

  @UI.lineItem: [{ position: 30, label: 'Connection ID', type: #WITH_URL, url: 'ConnectionLink' }]
  @UI.identification: [{ position: 30, label: 'Connection ID', type: #WITH_URL, url: 'ConnectionLink' }]
    connid;

  @UI.identification: [{ position: 40, label: 'Departure City' }]
    cityfrom;

  @UI.identification: [{ position: 50, label: 'Arrival City' }]
    cityto;

  @UI.hidden: true
    ConnectionLink;

  @UI.hidden: true
    Attachment;

  @UI.hidden: true
    MimeType;

  @UI.hidden: true
    Filename;
}&lt;/PRE&gt;&lt;P data-unlink="true"&gt;In the&amp;nbsp;metadata extension, the &amp;nbsp;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379" target="_blank"&gt;@ui&lt;/A&gt;.lineItem and &amp;nbsp;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379" target="_blank"&gt;@ui&lt;/A&gt;.identification annotations use:&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;type: #WITH_URL&lt;BR /&gt;&lt;/STRONG&gt;This instructs &lt;STRONG&gt;Fiori Elements&lt;/STRONG&gt; to render the field as a &lt;STRONG&gt;clickable hyperlink&lt;/STRONG&gt; in the UI (List Report or Object Page), instead of displaying it as plain text.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;url: 'ConnectionLink'&lt;BR /&gt;&lt;/STRONG&gt;This specifies &lt;STRONG&gt;which field in your entity contains the URL&lt;/STRONG&gt; that should be used as the hyperlink target when the user clicks the displayed field (e.g., connid).&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-292044925"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-95531420"&gt;&lt;FONT color="#FF9900"&gt;Service Definition and Binding:&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;Then finally, let's create and expose your &lt;STRONG&gt;RAP service definition and OData V4/V2 binding &lt;/STRONG&gt;to allow consumption by Fiori Elements apps and testing.&lt;/P&gt;&lt;H3 id="toc-hId--176213454"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--372726959"&gt;&lt;FONT color="#FF9900"&gt;Testing the created service in Swagger:&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;In RAP and OData, the $value segment is used to&amp;nbsp;retrieve the raw binary or textual content of a property, often for&amp;nbsp;streaming large objects like attachments.&lt;/P&gt;&lt;P&gt;In our scenario:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;When the user clicks the &lt;STRONG&gt;ConnectionLink&lt;/STRONG&gt; (which points to the RAP entity’s URL with / $value)&lt;STRONG&gt;,&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;It triggers the RAP runtime to execute your virtual element logic,&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Returning the attachment’s raw content for download using the MIME type and filename you defined.&lt;/P&gt;&lt;P&gt;Example URL:/sap/opu/odata/sap/ZSB_SPFLIGHTSCHEDULE_V2/ZC_SpFlightSchedule(carrid='AA',connid='17')/$value&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kishore_kumar_g_2-1752663842978.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287259iA9D9437035E0E6EE/image-size/large?v=v2&amp;amp;px=999" role="button" title="kishore_kumar_g_2-1752663842978.png" alt="kishore_kumar_g_2-1752663842978.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Happy Coding&amp;nbsp;&lt;/EM&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/simplifying-attachment-downloads-in-rap-with-cds-views-a-step-by-step-guide/ba-p/14153893"/>
    <published>2025-08-11T12:12:53.686000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/behavior-illegal-statement-dump-technical-workarounds/ba-p/14174594</id>
    <title>BEHAVIOR_ILLEGAL_STATEMENT dump | Technical workarounds</title>
    <updated>2025-08-11T13:40:55.450000+02:00</updated>
    <author>
      <name>PranayGaroo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2116915</uri>
    </author>
    <content>&lt;P&gt;If you're working with SAP RAP, you've probably encountered the infamous&amp;nbsp;&lt;FONT color="#FF0000"&gt;BEHAVIOR_ILLEGAL_STATEMENT&lt;/FONT&gt;&amp;nbsp;dump.&lt;/P&gt;&lt;P&gt;This dump could occur when the following statements are made in a RAP context:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Explicit use of COMMIT WORK or ROLLBACK WORK statements&lt;/STRONG&gt;&amp;nbsp;- the transaction handling and database commit is exclusively handled by RAP&lt;/LI&gt;&lt;/OL&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Calling update or enqueue functions&lt;/STRONG&gt;&amp;nbsp;that bypass RAP's controlled transaction flow&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Direct database modifications&lt;/STRONG&gt;&amp;nbsp;outside of RAP's managed approach.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Understanding the Core Challenge&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The core challenge lies in RAP’s approach to transaction management. The RAP transactional model is built on the concept of Logical Unit of Work (LUW), which ensures data consistency and integrity by treating all operations within a transaction as a single, indivisible unit. It includes a late-save phase followed by a cleanup. RAP follows a&amp;nbsp;&lt;STRONG&gt;controlled Logical Unit of Work (LUW)&lt;/STRONG&gt;&amp;nbsp;pattern with two distinct phases:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Interaction Phase&lt;/STRONG&gt;: Data modifications are stored in a transactional buffer&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Save Sequence&lt;/STRONG&gt;: Data is validated and persisted to the database&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;On the other hand, a COMMIT WORK statement that immediately persist changes to the database. When these two approaches collide, you get runtime errors that can halt your application.&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Available Solution or Workaround&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Our goal is to call our explicit commit or any other ‘Illegal statement’ in a different task. There are four ways to do that:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;BGPF (Background Processing Framework)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;SAP Documentation - : &lt;A href="https://help.sap.com/docs/abap-cloud/abap-concepts/background-processing-framework" target="_blank" rel="noopener noreferrer"&gt;Background Processing Framework | SAP Help Portal&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Parallel Processing &lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Implementation Examples :- &lt;A href="https://software-heroes.com/en/blog/abap-cloud-parallel-processing" target="_blank" rel="noopener nofollow noreferrer"&gt;ABAP Cloud - Parallel processing&lt;/A&gt; , &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/two-different-types-of-parallel-processing-examples/ba-p/13247548" target="_blank"&gt;Two Different types of Parallel Processing example... - SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Application Jobs for background Processing &lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Implementation Examples :- &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/example-implementation-using-interfaces-if-apj-dt-exec-object-and-if-apj-rt-exec-object" target="_blank" rel="noopener noreferrer"&gt;Example Implementation Using Interfaces IF_APJ_DT_EXEC_OBJECT and IF_APJ_RT_EXEC_OBJECT | SAP Help Portal&lt;/A&gt; ,&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;A href="https://learning.sap.com/learning-journeys/administrating-the-sap-s-4hana-cloud-public-edition/introducing-application-jobs_cf77594e-9dd1-454b-b8d1-05079dfee508" target="_blank" rel="noopener noreferrer"&gt;Introducing Application Jobs&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;RFC Workaround (On-Premise Only)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;We can create a wrapper RFC FM with our logic and call that using DESTINATION 'NONE' statement. Which will be called in a different task.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;U&gt;&lt;STRONG&gt;Note :&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;This workaround are not supported by Cloud Environments.&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/behavior-illegal-statement-dump-technical-workarounds/ba-p/14174594"/>
    <published>2025-08-11T13:40:55.450000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-celebrating-the-winners-and-innovation-in/ba-p/14172106</id>
    <title>SAP BTP Hackathon at SAPHILA 2025: Celebrating the Winners and Innovation in Action</title>
    <updated>2025-08-13T09:12:43.763000+02:00</updated>
    <author>
      <name>winklero</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/426853</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;A few months ago, we shared our excitement about the launch of the first-ever &lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-afsug-members/ba-p/14001231" target="_blank"&gt;SAP BTP Hackathon in Africa in joined collaboration of AFSUG and SAP&lt;/A&gt;, highlighting the unique opportunity it offered for AFSUG members to bring their creativity and problem-solving skills to the forefront of the SAP community.&amp;nbsp;Now, with the event behind us, it’s time to reflect on what unfolded and celebrate the teams and ideas that made this inaugural Hackathon truly special.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;From Ideation to Demo Jam: A Journey of Collaboration&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;As outlined in the previous blog, the hackathon was more than just a competition, it was a journey. Eighteen teams, representing a broad cross-section of AFSUG members, embarked on an eight-week sprint, supported by SAP BTP experts and coaches. The focus was on building real-world solutions using SAP BTP components like SAP Build, SAP HANA Cloud, SAP Integration Suite and ABAP Cloud amongst other SAP BTP based Services &amp;amp; Solutions.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;After intensive enablement and development sessions, three teams emerged as finalists and were invited to present their solutions live at SAPHILA 2025’s Demo Jam. The energy in the room was palpable as each team showcased how SAP BTP could be harnessed to solve pressing business challenges.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_9-1754393553994.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296559i65EFF3CD8612C2A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_9-1754393553994.png" alt="winklero_9-1754393553994.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;And the Winner Is… PwC South Africa!&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_0-1754393299694.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296543iCE5C674A6617840E/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_0-1754393299694.jpeg" alt="winklero_0-1754393299694.jpeg" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;In a closely contested finale, the SAPHILA audience voted PwC South Africa as the overall winner for their AI-driven legal services platform “Legal Ease”.&amp;nbsp;This solution stood out for its innovative use of AI to simplify legal document processing and understanding, a pain point for many businesses and consumers alike. “Legal Ease” enables users to scan and summarize complex contracts, ask questions in natural language, and receive clear, actionable insights. The platform even supports translation into local languages and integrates with knowledge bases for related services. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;What impressed both the jury and the audience was not just the technical sophistication, but the clear business value: “Legal Ease” addresses real frustrations around contract transparency, billing and accessibility, with the potential to transform how legal services are delivered in Africa and beyond.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Honouring the Finalists: Debswana Diamond Company and Bell Equipment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Let’s not forget the other two finalists, who also delivered outstanding solutions:&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Debswana Diamond Company&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;tackled overtime management with an AI-powered assistant that streamlines scheduling, reduces costs and supports employee well-being.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Bell Equipment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;automated shipment tracking and document processing, helping to prevent stock shortages and improve logistics efficiency.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Both teams demonstrated the breadth of innovation possible with SAP BTP and set a high bar for future Hackathons.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_2-1754393465394.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296552i4ABBA6DEF33DF299/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_2-1754393465394.png" alt="winklero_2-1754393465394.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Reflections and What’s Next&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The Hackathon’s main objective was to foster deep collaboration between SAP and its customers, giving local teams a hands-on opportunity to explore and build with SAP BTP.&amp;nbsp;The quality and diversity of solutions, especially the creative use of AI and automation, highlight the immense potential within the African SAP community.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Amanda Gibbs, CEO of AFSUG, summed it up perfectly:&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&lt;SPAN&gt;“It is inspiring to witness what can be achieved in just eight weeks using SAP BTP;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&lt;SPAN&gt;we’ve seen incredible progress and innovation.”&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Join the Conversation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Congratulations again to all teams who participated and especially to PwC South Africa for their winning solution! If you were inspired by the SAP BTP Hackathon or have thoughts on how SAP BTP can drive innovation in your organization, I’d love to hear from you in the comments.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;And if you missed out this year,&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;keep an eye out for future SAP BTP Hackathons - this is just the beginning!&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_3-1754393500871.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296553iB355DF2E2218111A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_3-1754393500871.png" alt="winklero_3-1754393500871.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_4-1754393507094.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296554i19D3E337CCE34F01/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_4-1754393507094.png" alt="winklero_4-1754393507094.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_5-1754393513173.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296555i1F8DCACD879B51EE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_5-1754393513173.png" alt="winklero_5-1754393513173.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_8-1754393531840.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296558iDD76EEFFC71232AF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_8-1754393531840.png" alt="winklero_8-1754393531840.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="winklero_7-1754393525555.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296557iBED54F1BAA1636EB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_7-1754393525555.png" alt="winklero_7-1754393525555.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-celebrating-the-winners-and-innovation-in/ba-p/14172106"/>
    <published>2025-08-13T09:12:43.763000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-find-cds-views-in-s-4hana-public-cloud-edition/ba-p/14181383</id>
    <title>How to find CDS views in S/4HANA Public Cloud Edition</title>
    <updated>2025-08-15T06:27:25.148000+02:00</updated>
    <author>
      <name>MikeDoyle</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13892</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1866859110"&gt;TLDR&lt;/H3&gt;&lt;P&gt;With 3-tier S/4HANA Public Cloud Edition you can now connect your ABAP Developer Tools (ADT, in Eclipse) directly to the system.&amp;nbsp; You can browse development objects including CDS views. Creating an ABAP Repository Tree allows you to browse by component and release status, to find released views to use in your extensions&lt;/P&gt;&lt;H3 id="toc-hId-1670345605"&gt;Remind me, what is&amp;nbsp;S/4HANA Public Cloud Edition?&lt;/H3&gt;&lt;P&gt;S/4HANA Public Cloud Edition (or Public CE) is SAP's &lt;A href="https://csrc.nist.gov/glossary/term/software_as_a_service" target="_blank" rel="noopener nofollow noreferrer"&gt;SaaS&lt;/A&gt; ERP. Formerly known as S/4HANA Cloud, and as S/4HANA Public Cloud, this flavour of S/4 emphasises a tight fit to standard business processes.&amp;nbsp; The solution is hosted and managed by SAP. Only clean-core extensions are possible and upgrades happen according to a published schedule&lt;/P&gt;&lt;H3 id="toc-hId-1473832100"&gt;Why does&amp;nbsp;S/4HANA Public Cloud Edition matter?&lt;/H3&gt;&lt;P&gt;Whilst the largest customers tend to draw most of the limelight in the SAP world, there are only so many of them.&amp;nbsp; As you widen your gaze to include progressively smaller and smaller customers their number increases more than proportionately.&amp;nbsp; In other words there are &lt;EM&gt;a lot&lt;/EM&gt; more companies with 10,000 employees that there are with 100,000 employees.&amp;nbsp; There are a &lt;EM&gt;heck of a lot&lt;/EM&gt; more companies with 1000 employees that there are with 10,000. This means that the total market is huge, even if each individual subscription is smaller&lt;/P&gt;&lt;P&gt;Ceteris paribus, these smaller customers are more likely to go for Public CE, because it can be more cost effective for them.&amp;nbsp; Indeed the inability to perform 'dirty' extensions &amp;amp; enhancements, and the inability to stay on a outdated release can be seen as &lt;EM&gt;advantages&lt;/EM&gt; of Public CE.&amp;nbsp; SAP's vision is that over time more and more customers will switch to Public CE, some after 'cleaning up' their legacy enhancements.&amp;nbsp; They hope that, over time, larger and larger customers will sign up&lt;/P&gt;&lt;H3 id="toc-hId-1277318595"&gt;How can&amp;nbsp;we extend S/4HANA Public Cloud Edition?&lt;/H3&gt;&lt;P&gt;Whilst a fit to standard processes is the goal, Public CE &lt;A href="https://learning.sap.com/learning-journeys/practicing-clean-core-extensibility-for-sap-s-4hana-cloud" target="_blank" rel="noopener noreferrer"&gt;can be extended&lt;/A&gt; and enhanced if needed.&amp;nbsp; There might be a small variation to fit a competitive advantage that that particular customer has, their 'special sauce' if you like.&amp;nbsp; Historically these extensions could be categorised as&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;On-stack key-user extensions&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Side-by-side developer-built extensions on BTP&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;To support the latter type we expose data via the SAP-standard &lt;A href="https://api.sap.com/products/SAPS4HANACloud/apis/all" target="_blank" rel="noopener noreferrer"&gt;published APIs&lt;/A&gt;, by creating custom CDS views or by creating custom business objects with a back-end service enabled. Events can also trigger extensions on BTP&lt;/P&gt;&lt;H3 id="toc-hId-1080805090"&gt;Why are&amp;nbsp;&lt;EM&gt;released&lt;/EM&gt; views precious?&lt;/H3&gt;&lt;P&gt;To expose &lt;EM&gt;standard&lt;/EM&gt; data that isn't part of a published API we must (if 2-tier) use the custom CDS view option. We can only use &lt;EM&gt;released&lt;/EM&gt; views as sources, and only a fraction of views are released.&amp;nbsp; Why is that?&amp;nbsp; Well, releasing a view is a big deal for SAP because it represents a promise to keep that view available and up to date.&amp;nbsp; If this wasn't the case our extensions could break every upgrade cycle, as standard views or fields on standard views were removed.&amp;nbsp; This would limit the viability of Public CE altogether&amp;nbsp;&lt;/P&gt;&lt;P&gt;Hence finding released views with the right data is an important part of extension design.&amp;nbsp; Happily, that task is getting easier, with the increased prevalence of the 3-tier landscape with Public CE&lt;/P&gt;&lt;H3 id="toc-hId-884291585"&gt;Why are 3 tiers better than 2?&lt;/H3&gt;&lt;P&gt;When my first customer went live with Public CE in 2019 all setups had Test and Prod environments only.&amp;nbsp; Having a background at big on-prem customers, with their 5 or 6 tier landscapes (e.g. Sandbox / Dev / Test / Pre-Prod / Prod / Training) I found this pretty scary!&lt;/P&gt;&lt;P&gt;Now all new Public CE customers get &lt;A href="https://blog.sap-press.com/the-sap-s4hana-cloud-three-system-landscape" target="_blank" rel="noopener nofollow noreferrer"&gt;3 tiers&lt;/A&gt; ( Dev / Test / Prod ) and existing customers are being migrated.&amp;nbsp; The Dev environment has 2 tenants, for development and for customizing. Under the hood, these represent client 80 and client 100. This facilitates the introduction of a new enhancement technique.&amp;nbsp; Using the embedded ABAP Cloud environment we can use RAP (the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/abap-restful-application-programming-model?version=s4hana_cloud" target="_blank" rel="noopener noreferrer"&gt;ABAP Restful Programming Model&lt;/A&gt;) to build OData services. This gives far greater flexibility that we get &lt;A href="https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/#/detail/Apps('F1866A')/S35" target="_blank" rel="noopener nofollow noreferrer"&gt;building custom CDS views in a Fiori app&lt;/A&gt; (as a 'key-user')&lt;/P&gt;&lt;P&gt;This on-stack extensibility was known for a while as&amp;nbsp;&lt;EM&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/embedded-steampunk-some-more-details-for-abap-developers/ba-p/13532714" target="_blank"&gt;Embedded Steampunk&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Of course, finding&amp;nbsp;&lt;EM&gt;released &lt;/EM&gt;CDS views is still important, because ABAP cloud will only allow us to use released CDS views as data sources. So what's the best way to find them?&lt;/P&gt;&lt;H3 id="toc-hId-687778080"&gt;What's the best way to find released CDS views in a 3-tier Public CE landscape?&lt;/H3&gt;&lt;P&gt;Once you've &lt;A href="https://help.sap.com/docs/SAP_S4HANA_CLOUD/6aa39f1ac05441e5a23f484f31e477e7/4b962c243a3342189f8af460cc444883.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;connected&lt;/A&gt; your &lt;A href="https://tools.hana.ondemand.com/#abap" target="_blank" rel="noopener nofollow noreferrer"&gt;ABAP Development Tools&lt;/A&gt; to your S/4HANA Public Cloud Edition system (development tenant/client 80) you can browse all of the development objects.&amp;nbsp; This is something that just wasn't possible before, because we were limited to what we could see in various Fiori apps&lt;/P&gt;&lt;P&gt;If you try to browse all of the CDS views, you will likely hit an issue as there are just too many to be rendered.&amp;nbsp; I recommend instead building your own ABAP Repository Tree (via File-&amp;gt;New).&lt;/P&gt;&lt;P&gt;On the first screen (of the repo tree wizard) select Core Data Services&lt;/P&gt;&lt;H3 id="toc-hId-491264575"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 12.24.56 pm.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301259iCB813189376FFE23/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 12.24.56 pm.png" alt="Screenshot 2025-08-15 at 12.24.56 pm.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;On the next screen, in the&amp;nbsp;&lt;EM&gt;Selected Tree Levels,&lt;/EM&gt;&amp;nbsp;remove package from level 3, and replace it with &lt;EM&gt;Application Component&lt;/EM&gt;.&amp;nbsp; Then select drag the &lt;EM&gt;API State&lt;/EM&gt; level over to level 4.&lt;/P&gt;&lt;H3 id="toc-hId-294751070"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 1.10.24 pm.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301263iD8B6EF4DC1120DB7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 1.10.24 pm.png" alt="Screenshot 2025-08-15 at 1.10.24 pm.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;Click Finish. Now, in the tree, you can open &lt;EM&gt;Core Data Services&lt;/EM&gt;, &lt;EM&gt;Data Definitions&lt;/EM&gt; and then the component of your choice.&amp;nbsp; The released views are found under &lt;EM&gt;USE_IN_CLOUD_DEVELOPMENT&lt;/EM&gt;. You can open the individual view to see the definition.&lt;/P&gt;&lt;H3 id="toc-hId-98237565"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 1.15.25 pm.png" style="width: 289px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301264i0E1F277A115AF0B2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 1.15.25 pm.png" alt="Screenshot 2025-08-15 at 1.15.25 pm.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;You can confirm that the view is released by considering the &lt;EM&gt;API State&lt;/EM&gt; tab in the properties, on the bottom right of your Eclipse screen. &lt;EM&gt;C1 Use System Internally&lt;/EM&gt; is the key part.&amp;nbsp; If it is &lt;EM&gt;Released&lt;/EM&gt; you should be able to use this view in a custom CDS view or in RAP development&lt;/P&gt;&lt;H3 id="toc-hId--173507309"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 1.21.02 pm.png" style="width: 333px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301265i11086DA4417CA3A0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 1.21.02 pm.png" alt="Screenshot 2025-08-15 at 1.21.02 pm.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;Because you are connected to your dev system you can see the release status of every view which is available on your current release&lt;/P&gt;&lt;H3 id="toc-hId--370020814"&gt;What do you think?&lt;/H3&gt;&lt;P&gt;Are you an expert on extensions already?&amp;nbsp; Or are you surprised at how much scope there is for extension on S/4HANA Public Cloud Edition?&amp;nbsp; Extensions certainly got a little easier, now that we can see every view available. Let me know in the comments what you think, and if you have any tips for finding views&lt;/P&gt;&lt;P&gt;I would love to find a good way to find CDS views which use a given table as a source (directly or indirectly).&amp;nbsp; This &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-q-a/unreleased-cds-views/qaq-p/12675263" target="_blank"&gt;can be done in the View Browser app&lt;/A&gt;, but we &lt;A href="https://me.sap.com/notes/3439701" target="_blank" rel="noopener noreferrer"&gt;won't see all of the views&lt;/A&gt;. Perhaps in future SAP could &lt;A href="https://me.sap.com/notes/28022" target="_blank" rel="noopener noreferrer"&gt;support using the where-used feature&lt;/A&gt; in ADT&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-find-cds-views-in-s-4hana-public-cloud-edition/ba-p/14181383"/>
    <published>2025-08-15T06:27:25.148000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266</id>
    <title>Random Numbers and Probability Distributions in the ABAP Environments for 2508</title>
    <updated>2025-08-18T13:00:51.072000+02:00</updated>
    <author>
      <name>kilian_kilger</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/204709</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736911432"&gt;Random Numbers and Probability Distributions in the ABAP Environments for 2508&lt;/H2&gt;&lt;H3 id="toc-hId-1669480646"&gt;1 Introduction&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Can ABAP generate random numbers?&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Most ABAP developers would instinctively say "yes"—after all, who hasn't used&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;CL_ABAP_RANDOM&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for generating test data? But if you've ever looked under the hood, you'll know that not all random numbers are created equal. Every random number generator is tied to a &lt;STRONG&gt;probability distribution&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Here's the twist: Until now, ABAP only spoke the language of&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;uniform&lt;/EM&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;randomness—a far cry from the rich, varied distributions that reflect real-world and business data.&lt;/P&gt;&lt;P&gt;The great news? With the latest ABAP releases, the answer has changed. ABAP now speaks the whole language of probability, supporting versatile random number generation for your advanced business needs!&lt;/P&gt;&lt;P&gt;It also has all the functionality to &lt;STRONG&gt;compute&amp;nbsp;&lt;/STRONG&gt;with probabilities.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt;&amp;nbsp;Have you ever wanted to execute a &lt;STRONG&gt;t-test&lt;/STRONG&gt; on your customer base directly in ABAP to see whether the customers from country A pay systematically later than the customers from country B or if the recent late payments are just bad luck? You could implement this now very easily in ABAP.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; currently planned to be available on-premise and in the private cloud with the upcoming major SAP S/4HANA release in 2025. Please note that this plan is subject to change by SAP without prior notice.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1472967141"&gt;2 Example: Customer Payment Date&lt;/H3&gt;&lt;P&gt;Suppose you want to generate realistic data for customer payment dates. Do you imagine that customers pay at random, with every date being equally likely?&lt;/P&gt;&lt;P&gt;Of course not!&lt;/P&gt;&lt;P&gt;In reality, most customers settle their bills close to the due date, with a few paying a bit early or late, and only a handful paying extremely early or well past the deadline.&lt;/P&gt;&lt;P&gt;These patterns can be captured with various probability distributions, such as &lt;STRONG&gt;normal&lt;/STRONG&gt;, &lt;STRONG&gt;beta&lt;/STRONG&gt;, or &lt;STRONG&gt;exponential&lt;/STRONG&gt; distributions. If you treat payment dates as discrete events, distributions like &lt;STRONG&gt;Poisson&lt;/STRONG&gt; or &lt;STRONG&gt;multinomial&lt;/STRONG&gt; may also fit.&lt;/P&gt;&lt;P&gt;For simplicity, we'll focus on the most common and versatile: the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;normal distribution&lt;/STRONG&gt;. The normal distribution's importance comes from a deep and beautiful mathematical result, the &lt;STRONG&gt;central limit theorem&lt;/STRONG&gt;. Simply put, it says:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;If you average many independent random processes—even if each one follows a different pattern—they will tend to form the familiar bell-shaped curve known as the normal distribution.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;In short, the normal distribution is the most important probability distribution.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Probability density of the normal distribution" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297174i767C0D2BE77657AA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="normal_distrib.png" alt="Probability density of the normal distribution" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Probability density of the normal distribution&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The curve means that the normal distribution generates values around its mean value (here: zero) more often and values farther away less frequently.&lt;/P&gt;&lt;P&gt;This can easily be adjusted to write ABAP code, which generates more realistic random numbers for this scenario.&lt;/P&gt;&lt;P&gt;The ABAP code is surprisingly easy compared to other programming languages. It uses the new system class CL_ABAP_PROB_DISTRIBUTION and its method NEXT_RANDOM_NUMBER( ). This class needs an underlying uniform random number generator given by an interface IF_ABAP_RANDOM. The old class CL_ABAP_RANDOM happens to implement IF_ABAP_RANDOM.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;class payment_date_generator definition.
  public section.
    methods constructor importing rng type ref to if_abap_random. " new as well
    methods generate_payment_date importing due_date type d
                                  returning value(payment_date) type d.

  private section.
    data m_rng type ref to if_abap_random.
    data m_system_date type d.
    data m_distribution type ref to if_abap_prob_distribution.
endclass.

class payment_date_generator implementation.
  method constructor.
    m_rng = rng.
    m_system_date = cl_abap_context_info=&amp;gt;get_system_date( ).
    m_distribution = cl_abap_prob_distribution=&amp;gt;get_normal_distribution(
      mean = 0
      standard_deviation = 15 ). " 68% are within ±15 days around due date
  endmethod.

  method generate_payment_date.
    while payment_date &amp;lt; m_system_date.
      payment_date = due_date + 
         conv i( m_distribution-&amp;gt;next_random_number( rng = m_rng ) ).
    endwhile.
  endmethod.
endclass.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Using the new interface IF_ABAP_RANDOM, you can also&amp;nbsp;&lt;STRONG&gt;plug in your own uniform random number&lt;/STRONG&gt; generator. No need to take the ABAP one (just in case you need a cryptographically secure, normally distributed number). Using ABAP's CL_ABAP_RANDOM is faster, as special optimizations apply here.&lt;/P&gt;&lt;P&gt;Running the example on 2025/08/06 with due date 2025/08/20 and 1000 numbers gives the following histogram, for example:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="normal_example.png" style="width: 790px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297179iA9C3D2643E7CBACA/image-size/large?v=v2&amp;amp;px=999" role="button" title="normal_example.png" alt="normal_example.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&amp;nbsp;&lt;/STRONG&gt;Although the normal distribution is symmetric around the mean value, we arrived at a non-symmetric distribution by "cutting off" the dates before the current date. This is called &lt;EM&gt;rejection sampling&lt;/EM&gt;&lt;SPAN&gt;&lt;EM&gt;,&amp;nbsp;&lt;/EM&gt;and it&lt;/SPAN&gt;&amp;nbsp;gives a totally new probability distribution, unique to this business problem.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Implementation:&lt;/STRONG&gt; There are two ABAP classes:&lt;/P&gt;&lt;TABLE border="1" width="100.00125876414536%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;STRONG&gt;Class&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="16.666666666666668%"&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="16.666666666666668%"&gt;&lt;STRONG&gt;Hint&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;CL_ABAP_PROB_DISTRIBUTION&lt;/TD&gt;&lt;TD width="16.666666666666668%"&gt;Calculate with F (= FLOAT) probabilities&lt;/TD&gt;&lt;TD width="16.666666666666668%"&gt;Faster, more distributions&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;CL_ABAP_PROB_DISTRIBUTION_DF34&lt;/TD&gt;&lt;TD width="16.666666666666668%"&gt;Calculate with DECFLOAT34 probabilities&lt;/TD&gt;&lt;TD width="16.666666666666668%"&gt;Much slower, fewer distributions&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;By default, the classes CL_ABAP_PROB_DISTRIBUTION and CL_ABAP_PROB_DISTRIBUTION_DF34 generate F or DECFLOAT34 numbers, but they can easily be cast to P, I, or other datatypes in different scenarios.&lt;/P&gt;&lt;P&gt;Both classes can generate I (= INT4) or INT8 random numbers for &lt;STRONG&gt;discrete&lt;/STRONG&gt; distributions by default using separate methods.&lt;/P&gt;&lt;H3 id="toc-hId-1276453636"&gt;3 Supported probability distributions&lt;/H3&gt;&lt;P&gt;The table below shows the distributions supported in the ABAP environments 2508.&amp;nbsp;The headers "&lt;STRONG&gt;FLOAT Probabilities&lt;/STRONG&gt;" and "&lt;STRONG&gt;DECFLOAT34 Probabilities&lt;/STRONG&gt;" refer to the system classes &lt;STRONG&gt;CL_ABAP_PROB_DISTRIBUTION&lt;/STRONG&gt; and &lt;STRONG&gt;CL_ABAP_PROB_DISTRIBUTION_DF34&lt;/STRONG&gt;, respectively.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;TABLE border="1" width="100.00000000000001%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="57px"&gt;&lt;STRONG&gt;Distribution&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;&lt;STRONG&gt;Type&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="57px"&gt;&lt;STRONG&gt;FLOAT&amp;nbsp;&lt;BR /&gt;Probabilities&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="57px"&gt;&lt;STRONG&gt;DECFLOAT34&lt;BR /&gt;Probabilities&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="57px"&gt;&lt;STRONG&gt;Business Example&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="85px"&gt;Normal distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Continuous&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="85px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="85px"&gt;Yes&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="85px"&gt;Customer satisfaction scores, Employee performance, and financial returns follow a normal distribution.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="57px"&gt;Lognormal distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Continuous&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="57px"&gt;Revenue or units sold across a product catalog often follow a lognormal distribution.&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="112px"&gt;Exponential distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Continuous&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="112px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="112px"&gt;Yes&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="112px"&gt;&lt;SPAN&gt;The duration of customer service calls can be modeled using an exponential distribution.&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="57px"&gt;Gamma distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Continuous&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="57px"&gt;A gamma distribution can model the time it takes to complete a project and the distribution of&amp;nbsp;&lt;SPAN&gt;customer lifetime values (CLV) in CRM.&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="57px"&gt;Chi-Squared distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Continuous&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="57px"&gt;Test whether the customer prefers a new product feature over an existing one using the famous&lt;STRONG&gt; chi-squared test, &lt;/STRONG&gt;which utilizes&amp;nbsp;the chi-squared distribution.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="30px"&gt;&lt;P&gt;Uniform-int/int8 distribution&lt;/P&gt;&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;&lt;P&gt;Discrete&lt;/P&gt;&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="30px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="30px"&gt;Yes&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="30px"&gt;&lt;P&gt;Companies often conduct customer surveys in market research to gather feedback and insights. To ensure that the survey results represent the entire customer base, a uniform integer distribution can be used for random sampling.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="85px"&gt;Poisson distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Discrete&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="85px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="85px"&gt;No&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="85px"&gt;&lt;SPAN&gt;Understanding customer traffic is crucial for staffing and operational decisions in retail management. The Poisson distribution can model the number of customers arriving at a store within a specific time interval.&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="30px"&gt;Binomial distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Discrete&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="30px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="30px"&gt;No&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="30px"&gt;&lt;P&gt;In manufacturing, the binomial distribution can be used to model the number of defective items (failures) in a sample of produced items.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="57px"&gt;Student's t-distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Continuous&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="57px"&gt;No&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="57px"&gt;Using the famous &lt;STRONG&gt;t-test&lt;/STRONG&gt; and the &lt;STRONG&gt;t-distribution&lt;/STRONG&gt;, one can test whether a new marketing campaign significantly affected sales.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="30px"&gt;Hypergeometric distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Discrete&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="30px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="30px"&gt;No&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="30px"&gt;&lt;SPAN&gt;In inventory management, the hypergeometric distribution can be used to model the selection of items for inspection or audit from a finite inventory.&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="30px"&gt;Geometric distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Discrete&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="30px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="30px"&gt;No&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="30px"&gt;Model the number of customer interactions needed until the first sales occur.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;Note:&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;More probability distributions might evolve in future ABAP releases (not an official statement, no guarantee, no promise or roadmap item).&amp;nbsp;&lt;SPAN&gt;Please note that this plan is subject to change by SAP without prior notice.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1079940131"&gt;4 Calculating with probabilities&lt;/H3&gt;&lt;P&gt;These new classes aren't just about rolling random numbers—they unlock many possibilities! Now you can compute probabilities, dive into advanced statistical analyses, and so much more.&lt;/P&gt;&lt;P&gt;The magic happens through the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;IF_ABAP_PROB_DISTRIBUTION&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;interface, which lets you calculate cumulative distribution functions (CDFs), quantiles, and a range of other powerful statistical operations. Plus, with dedicated sub-interfaces for discrete distributions, you get even more specialized tools right at your fingertips.&lt;/P&gt;&lt;P&gt;Here we only talk about two very important methods:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Method&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;CDF (Cumulative Distribution Function)&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Calculates the probability that the distribution assumes values &amp;lt;= x. In mathematical terms: P(X &amp;lt;= x).&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Quantile&lt;/TD&gt;&lt;TD&gt;Inverse of the CDF. The quantile function gives the smallest value &lt;EM&gt;x&lt;/EM&gt;  such that the cumulative probability (CDF) is at least &lt;EM&gt;p&lt;/EM&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;Business Problem for the CDF:&amp;nbsp;&lt;/STRONG&gt;What proportion of the bills are paid within 20 days of the due date?&lt;BR /&gt;&lt;STRONG&gt;Solution in ABAP:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  final(dist) =
    cl_abap_prob_distribution=&amp;gt;get_normal_distribution( mean = 0 standard_deviation = 15 ).
  final(proportion) = dist-&amp;gt;cdf( 20 ).
  cl_demo_output=&amp;gt;display( proportion ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Business Problem for the Quantile:&amp;nbsp;&lt;/STRONG&gt;You want to know when 95% of customers have paid their bills.&lt;BR /&gt;&lt;STRONG&gt;Solution in ABAP:&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  data quantile type d.
  final(dist) =
    cl_abap_prob_distribution=&amp;gt;get_normal_distribution( mean = 0 standard_deviation = 15 ).
  final(quantile_int) = conv i( ceil( dist-&amp;gt;quantile( '0.95' ) ) ).
  quantile = due_date + quantile_int.  
  cl_demo_output=&amp;gt;display( quantile ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This prints 2025/09/14 in my example from above, i.e., in mid-September, 95% of the customers paid their bill (simplified calculation for demo purposes, which does not account for the rejection sampling method applied above. Special applause to anyone posting the solution for the truncated normal distribution in the comments below.)&lt;/P&gt;&lt;P&gt;Note that&amp;nbsp;&lt;SPAN&gt;many valid statistical methods can be used to&amp;nbsp;&lt;STRONG&gt;find&amp;nbsp;&lt;/STRONG&gt;the correct probability distribution for your business problem. These can also be implemented now in ABAP&lt;/SPAN&gt;.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-754343907"&gt;5 More Trivia&lt;/H2&gt;&lt;P&gt;With the new classes, you can also do funny stuff, which is not quite new, but was difficult or slow before.&lt;/P&gt;&lt;H4 id="toc-hId-815995840"&gt;5.1 Generate many random numbers at once&lt;/H4&gt;&lt;P&gt;Usually, you do not want to generate only one random number. You want to generate many random numbers. In the past, every generated random number was a single method call.&lt;/P&gt;&lt;P&gt;Example:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  types i_tab type standard table of i with empty key.
  final(rng) = cl_abap_random=&amp;gt;create( ).
  final(tab) = reduce i_tab( init _tab = value #( ) 
                             for i = 1 then i + 1 until i &amp;gt; 1000
                             next _tab = value #( base _tab ( rng-&amp;gt;int( ) ) ) ).  &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This is slow, as we have 1000 method calls and a FOR-LOOP.&lt;/P&gt;&lt;P&gt;Now, this can be sped up many times by doing the loop inside the ABAP kernel.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  final(rng) = cl_abap_random=&amp;gt;create( ).
  final(distrib) = cl_abap_prob_distribution=&amp;gt;get_uniform_int_distribution( range = value #( ) ). " empty range =&amp;gt; all numbers
  final(tab) = distrib-&amp;gt;next_random_numbers( count = 1000 rng = rng ).

  cl_demo_output=&amp;gt;display( tab ).&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-619482335"&gt;5.2 Analyzing range tables and generating random numbers in non-consecutive intervals&lt;/H4&gt;&lt;P&gt;Another nice example is generating uniformly distributed integer random numbers in arbitrary subsets of the integers (i.e., not in a single contiguous interval). The constructor for the uniform integer distribution accepts a &lt;STRONG&gt;range table.&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  data distrib type ref to if_abap_prob_distribution_int.
  final(rng) = cl_abap_random=&amp;gt;create( ).
  distrib = cl_abap_prob_distribution=&amp;gt;get_uniform_int_distribution(
    range = value #( ( sign = 'I' option = 'BT' low = 1 high = 10 )
                     ( sign = 'E' option = 'EQ' low = 5 ) ) ).
  cl_demo_output=&amp;gt;write( distrib-&amp;gt;support_size( ) ).  " prints 9, i.e. we have 9 elements which are covered by the rangetab
  cl_demo_output=&amp;gt;write( distrib-&amp;gt;median( ) ). " prints 6, which is the median of the set [1,2,3,4,6,7,8,9,10] in our definition  
  final(random_numbers) = distrib-&amp;gt;next_random_numbers( count = 1000 rng = rng ). " generate random numbers from 1 to 10 excluding 5
  cl_demo_output=&amp;gt;display( random_numbers ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;You can easily generate random numbers that satisfy any condition specified by a range table. Keep in mind that the range table is treated as a set—so overlapping conditions like X &amp;lt; 6 and X &amp;lt; 7 simply combine to X &amp;lt; 7. Values that fall into both ranges (such as 5) are not given extra weight or counted multiple times.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Also, integers are "cut off" at the minimum/maximum INT4 or INT8 value, so you can't compute uniform discrete probabilities of an infinite set. Mathematics is safe here.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-293886111"&gt;&lt;SPAN&gt;6 Overflows&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;When generating random numbers, a probability distribution can overflow. The normal distribution, for example, spans the whole real line. As FLOAT's value range is finite, this can lead to unexpected results for very large mean or standard deviation, or, if you are just "unlucky", also for small ones.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;We decided that random number generation &lt;STRONG&gt;should never overflow&lt;/STRONG&gt;. We achieve this by two means:&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; 1. Restricting the parameters for the distribution in the constructor to "sensible" values reflecting real-world scenarios.&lt;BR /&gt;&amp;nbsp; &amp;nbsp; 2. If you are unlucky anyhow, use rejection sampling until we are in the float range.&amp;nbsp;&lt;/P&gt;&lt;P&gt;This is an important compromise and something that is not done in most random number generator libraries. It also means that the distribution may not&amp;nbsp;&lt;EM&gt;exactly&amp;nbsp;&lt;/EM&gt;be (normally-, gamma-, ...) distributed at the borders of the float or decfloat range. This has no influence on any real-world scenario or calculation, however.&amp;nbsp;&lt;/P&gt;&lt;P&gt;On the contrary, you can be content that no overflow occurs, ever. This is an important feature of a random number generator.&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-97372606"&gt;7 Conclusion&lt;/H3&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;This article showcased the new ABAP capabilities for generating random numbers from various probability distributions—and performing probability calculations—using the powerful system classes&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;CL_ABAP_PROB_DISTRIBUTION&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;CL_ABAP_PROB_DISTRIBUTION_DF34&lt;/STRONG&gt;.&lt;/P&gt;&lt;H3 id="toc-hId--174372268"&gt;8 The interface IF_ABAP_PROB_DISTRIBUTION&lt;/H3&gt;&lt;P&gt;For reference, here is the complete interface IF_ABAP_PROB_DISTRIBUTION with the implemented methods:&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;"! &amp;lt;p&amp;gt;Interface representing a probability distribution with probabilities of type F (=FLOAT). Used by class
"!  {@link CL_ABAP_PROB_DISTRIBUTION }, which represents a probability distribution over the real line.&amp;lt;/p&amp;gt;
interface if_abap_prob_distribution
  public .

  "! Table type to hold a collection of random numbers.
  types random_numbers type standard table of f with empty key.

  "! Returns the support of the probability distribution
  "! @parameter kind | The kind of support the distribution provides.
  methods support_kind
    returning value(kind) type if_abap_prob_types=&amp;gt;support_kind.

  "! Returns the kind of probability distribution
  "! @parameter kind | The kind of the distribution.
  methods distribution_kind
    returning value(kind) type if_abap_prob_types=&amp;gt;distribution_kind.

  "! Returns whether the probability distribution is continuous
  "! @parameter continuous | Flag indicating if the distribution is continuous.
  methods is_continuous
    returning value(continuous) type abap_bool.

  "! Returns the mean of the probability distribution
  "! @parameter mean | The mean value of the distribution.
  "! @raising CX_ABAP_PROB_UNSUPPORTED | if distribution has no mean
  methods mean
    returning value(mean) type f
    raising   cx_abap_prob_unsupported.

  "! Returns a possible mode of the probability distribution
  "! @parameter mode | The mode of the distribution.
  "! @raising CX_ABAP_PROB_UNSUPPORTED | if distribution has no mode
  methods mode
    returning value(mode) type f
    raising   cx_abap_prob_unsupported.

  "! Returns the variance of the probability distribution
  "! @parameter variance | The variance of the distribution.
  "! @raising CX_ABAP_PROB_UNSUPPORTED | if distribution has no variance
  methods variance
    returning value(variance) type f
    raising   cx_abap_prob_unsupported.

  "! Returns the (CDF-based) median of the probability distribution. Here, the median
  "! is the smallest x in the support, such that P(X &amp;lt;= x) &amp;gt;= 0.5.
  "! @parameter median | The median value of the distribution.
  methods median
    returning value(median) type f.

  "! Returns the cumulative distribution function, i.e. the probability that the
  "! distribution assumes values &amp;lt;= arg.
  "! @parameter arg                      | The argument for which to calculate the cumulative distribution function.
  "! @parameter probability              | P( X &amp;lt;= arg )
  "! @raising cx_sy_arithmetic_overflow  | If an arithmetic overflow occurs.
  "! @raising cx_parameter_invalid_range | If the parameter is outside of the support.
  methods cdf
    importing arg                type f
    returning value(probability) type f
    raising   cx_sy_arithmetic_overflow
              cx_parameter_invalid_range.

  "! Returns the probability density function (if continuous) or the probability mass function
  "! (if not continuous)
  "! @parameter arg                      | The argument for which to calculate the probability density or mass function.
  "! @parameter value                    | The calculated density or mass value.
  "! @raising cx_sy_arithmetic_overflow  | If an arithmetic overflow occurs.
  "! @raising cx_parameter_invalid_range | If the parameter is outside of the support.
  methods pdf_or_pmf
    importing arg          type f
    returning value(value) type f
    raising   cx_sy_arithmetic_overflow
              cx_parameter_invalid_range.

  "! Returns the p-quantile of the the distribution,
  "! @parameter probability              | The probability for which to calculate the quantile. Should be
  "!                                       between 0 and 1.
  "! @parameter quantile                 | The calculated quantile value.
  "! @raising cx_parameter_invalid_range | If the parameter is out of range.
  "! @raising cx_sy_arithmetic_overflow  | If an arithmetic overflow occurs.
  methods quantile
    importing probability     type f
    returning value(quantile) type f
    raising   cx_parameter_invalid_range
              cx_sy_arithmetic_overflow.

  "! Returns the minimum value the distribution can assume.
  "! @parameter value | The minimum value in the distribution.
  methods min_value
    returning value(value) type f.

  "! Returns the maximum value the distribution can assume
  "! @parameter value | The maximum value in the distribution.
  methods max_value
    returning value(value) type f.

  "! Returns a random number distributed according to the distribution
  "! @parameter rng    | The random number generator to use.
  "!                     When rng is of type {@link CL_ABAP_RANDOM }, other algorithms are used
  "!                     which are significantly faster and generate different random numbers for some
  "!                     distributions.
  "! @parameter number | The next random number generated.
  methods next_random_number
    importing rng           type ref to if_abap_random
    returning value(number) type f.

  "! Returns an internal table of random number distributed according to the distribution
  "! @parameter count   | The number of random numbers to generate.
  "! @parameter rng     | The random number generator to use.
  "!                      When rng is of type {@link CL_ABAP_RANDOM }, other algorithms are used
  "!                      which are significantly faster and generate different random numbers for some
  "!                      distributions.
  "! @parameter numbers | A set of generated random numbers.
  methods next_random_numbers
    importing count          type i
              rng            type ref to if_abap_random
    returning value(numbers) type random_numbers.

endinterface.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266"/>
    <published>2025-08-18T13:00:51.072000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/singleton-entities-in-rap-design-multi-line-edit-and-best-practices/ba-p/14177490</id>
    <title>Singleton Entities in RAP Design, Multi Line Edit, and Best Practices</title>
    <updated>2025-08-19T08:46:32.754000+02:00</updated>
    <author>
      <name>Pradeep555</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451114</uri>
    </author>
    <content>&lt;P&gt;In&amp;nbsp; this blog I have explained creating of an RAP Singleton entity&amp;nbsp; with multiline edit&amp;nbsp; functionalities , and also coevered below topics&amp;nbsp;&lt;BR /&gt;1.copy action&lt;/P&gt;&lt;P&gt;2. Depricate actions&lt;/P&gt;&lt;P&gt;3.invalidating entries&lt;/P&gt;&lt;P&gt;4.transport organizer&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Add Copy Action : Helps to create new entries in object page&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;In case we have&amp;nbsp; lot of fields and we&amp;nbsp; need to refer existing entries --&amp;gt; and based on that if we want to create new entries we can make use of this action&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Add Deprecate Action :&amp;nbsp; If we want to deprecate some entries ( make it invalid )&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;We can make use of this action&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Select to include a deprecate and invalidate action in the generated app&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Pre requisite : the table must have&amp;nbsp; a field CONFIGDEPRECATIONCODE with data element CONFIG_DEPRECATION_CODE&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Data Consistency Check : select this option to include a validation for the prepare draft action in the generated app which checks the consistency&amp;nbsp; of the input fields with&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Domain with fixed values&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Foreign keys where @abapCatalog.foreign key.screenCheck : true&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;If we have foreign key relationship / data element / domain&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;( suppose we have gender field in the employee table --&amp;gt; we need to maintain it in the&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Domain level )&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We can make use of&amp;nbsp; this field.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&amp;lt;&amp;lt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Enable Transport Selection selected&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The transport request selection action displayed in edit mode&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The transport request information is displayed in the header toolbar&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;If the save action is executed without&amp;nbsp; selected transport request and the transport is mandatory , the action to select a transport request is triggered automatically .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;After&amp;nbsp; selecting&amp;nbsp; a transport request , the save action continues&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If the action is not selected , a transport selection is made possible using an action button . This option is selected by default&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt; Manual :&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;Select manual to include the action select transport&amp;nbsp; in the generated app&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With this action , you can select an existing customizing transport request before saving the configuration changes&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt; Manual with pre selection&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To include the action select transport in the generated app .&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With this action , you can select an existing customizing transport request before saving the configuration changes. When the edit action is performed , a customizing transport request is determined automatically&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt; No transport : Select No transport for an app without a transport suitable&amp;nbsp; fro configurations that are to be adjusted in the productive system&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;T1. take a custom table say employee&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;PRE&gt;@EndUserText.label : 'employee table' 
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #C 
@AbapCatalog.dataMaintenance : #ALLOWED 
define table zpd_dt_em { 

key client : abap.clnt not null; 
key employee_id : zpd_de_emp not null; 
@EndUserText.label : 'First Name' 
first_name : abap.char(50); 
@EndUserText.label : 'Last Name' 
last_name : abap.char(50); 
@EndUserText.label : 'Department' 
department : abap.char(20); 
@EndUserText.label : 'Joining Date' 
joining_date : abap.dats; 
@EndUserText.label : 'Active Employee' 
is_active : abap.char(1); 
@EndUserText.label : 'Changed By' 
changed_by : abap.char(12); 
configdeprecationcode : config_deprecation_code; 
local_last_changed_at : abp_locinst_lastchange_tstmpl; 
changed_at : abp_lastchange_tstmpl; 

} &lt;/PRE&gt;&lt;P&gt;2. Create a&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;LANGUAGE &lt;/SPAN&gt;&lt;SPAN class=""&gt;TABLE&lt;/SPAN&gt;&lt;SPAN class=""&gt; :&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we need one&amp;nbsp; entry – so we have selected I_Language and put into the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Where condition so that we get one entry to achieve singleton&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_0-1754910289470.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299284i6746094642641C6C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_0-1754910289470.png" alt="Pradeep555_0-1754910289470.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; select table and click on select generate repository objects&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_1-1754910322004.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299285iF9020F0090B1FBA7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_1-1754910322004.png" alt="Pradeep555_1-1754910322004.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_2-1754910344865.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299286i38BABEA391257D4D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_2-1754910344865.png" alt="Pradeep555_2-1754910344865.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.Delivery&lt;/SPAN&gt;&lt;SPAN class=""&gt; class must be C&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_3-1754910436742.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299287i5C11E6C5D542DCFE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_3-1754910436742.png" alt="Pradeep555_3-1754910436742.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Data maintenance should be &lt;/SPAN&gt;&lt;SPAN class=""&gt;allowed&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_4-1754910467221.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299289i3D3B7D91265AF6E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_4-1754910467221.png" alt="Pradeep555_4-1754910467221.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;7.&lt;SPAN class=""&gt;Also&lt;/SPAN&gt;&lt;SPAN class=""&gt; we need to have a data &lt;/SPAN&gt;&lt;SPAN class=""&gt;element( domain&lt;/SPAN&gt;&lt;SPAN class=""&gt; )&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_5-1754910582094.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299290i228A1603B42BF437/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_5-1754910582094.png" alt="Pradeep555_5-1754910582094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;8.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Provide package&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_6-1754910671588.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299291iFF6146F345A817A6/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_6-1754910671588.png" alt="Pradeep555_6-1754910671588.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;We have business service definition and binding&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_7-1754910705685.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299292i6B2880D0262ABF1E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_7-1754910705685.png" alt="Pradeep555_7-1754910705685.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_8-1754910858334.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299293i72C463D7B6AA9CA8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_8-1754910858334.png" alt="Pradeep555_8-1754910858334.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;10.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;.Also, we have singleton entity details&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Singleton entity name ( EmployeeTableAll)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Interface view ( Zi_EmployeeTable_S)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Projection view&amp;nbsp; ( Zi_EmployeeTable_S)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Key field (SinlgetonID)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Draft table (zpd_dt_empl_d_s)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;11.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Table details&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_9-1754910919195.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299295iA950A3E30ED9292A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_9-1754910919195.png" alt="Pradeep555_9-1754910919195.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;12.&amp;nbsp;&lt;SPAN class=""&gt;we can be able to see the&lt;/SPAN&gt;&lt;SPAN class=""&gt; classes&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_10-1754910953226.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299296iE676F4E9872F7999/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_10-1754910953226.png" alt="Pradeep555_10-1754910953226.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_11-1754910978734.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299297i216093640328CBCE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_11-1754910978734.png" alt="Pradeep555_11-1754910978734.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;13.&amp;nbsp;&lt;SPAN class=""&gt;we have scenario &lt;/SPAN&gt;&lt;SPAN class=""&gt;option&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_12-1754911008131.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299298iA0EA84C4B77D2521/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_12-1754911008131.png" alt="Pradeep555_12-1754911008131.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;14&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Transport &lt;/SPAN&gt;&lt;SPAN class=""&gt;selection&lt;/SPAN&gt;&lt;SPAN class=""&gt; :&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_0-1754911133421.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299312i61B2AA907508C890/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_0-1754911133421.png" alt="Pradeep555_0-1754911133421.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_1-1754911186709.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299313i86F5069377B418ED/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_1-1754911186709.png" alt="Pradeep555_1-1754911186709.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;15.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;activate the service binding&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_2-1754911230766.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299314i34DDEFEB95D25F0A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_2-1754911230766.png" alt="Pradeep555_2-1754911230766.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;16.&amp;nbsp;&lt;SPAN class=""&gt;All the &lt;/SPAN&gt;&lt;SPAN class=""&gt;atrifacts&lt;/SPAN&gt;&lt;SPAN class=""&gt; will be generated&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;intreface view:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'employee table' 
@AccessControl.authorizationCheck: #MANDATORY 
@Metadata.allowExtensions: true 

define view entity ZI_EmployeeTable1 
as select from ZPD_DT_EM 
association to parent ZI_EmployeeTable_S1 as _EmployeeTableAll on $projection.SingletonID = _EmployeeTableAll.SingletonID 
association [0..*] to I_ConfignDeprecationCodeText as _ConfignDeprecationCodeText on $projection.ConfigDeprecationCode = _ConfignDeprecationCodeText.ConfigurationDeprecationCode 

{ 

key EMPLOYEE_ID as EmployeeId, 
FIRST_NAME as FirstName, 
LAST_NAME as LastName, 
DEPARTMENT as Department, 
JOINING_DATE as JoiningDate, 
IS_ACTIVE as IsActive, 
CHANGED_BY as ChangedBy, 
@ObjectModel.text.association: '_ConfignDeprecationCodeText' 
@Consumption.valueHelpDefinition: [ { 

entity: { 

name: 'I_ConfignDeprecationCode', 
element: 'ConfigurationDeprecationCode' 

} 

} ] 

CONFIGDEPRECATIONCODE as ConfigDeprecationCode, 
@Semantics.systemDateTime.localInstanceLastChangedAt: true 
@Consumption.hidden: true 
LOCAL_LAST_CHANGED_AT as LocalLastChangedAt, 
@Semantics.systemDateTime.lastChangedAt: true 
CHANGED_AT as ChangedAt, 
@Consumption.hidden: true 
1 as SingletonID, 
_EmployeeTableAll, 
case when CONFIGDEPRECATIONCODE = 'W' then 2 when CONFIGDEPRECATIONCODE = 'E' then 1 else 3 end as ConfigDeprecationCode_Critlty, 
_ConfignDeprecationCodeText 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;17.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;parent entity for interface&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we have made joined I_language&amp;nbsp; with employee table because&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We want Etag field from the table so that we can get lastchangedat field&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt;&amp;lt; one more association is created related to transport – because we need to capture the entries in transport ( I_abap_transportrequesttext)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'employee table Singleton' 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@ObjectModel.semanticKey: [ 'SingletonID' ] 
@UI: { 

headerInfo: { 
typeName: 'EmployeeTableAll' 

} 

} 

define root view entity ZI_EmployeeTable_S1 

as select from I_Language 
left outer join ZPD_DT_EM on 0 = 0 
association [0..*] to I_ABAPTransportRequestText as _ABAPTransportRequestText on $projection.TransportRequestID = _ABAPTransportRequestText.TransportRequestID 
composition [0..*] of ZI_EmployeeTable1 as _EmployeeTable 

{ 

@UI.facet: [ { 

id: 'ZI_EmployeeTable1',  
purpose: #STANDARD,  
type: #LINEITEM_REFERENCE,  
label: 'employee table',  
position: 1 ,  
targetElement: '_EmployeeTable' 

} ] 

@UI.lineItem: [ { 
position: 1  

} ] 

key 1 as SingletonID, 
_EmployeeTable, 
@UI.hidden: true 
max( ZPD_DT_EM.CHANGED_AT ) as LastChangedAtMax, 
@ObjectModel.text.association: '_ABAPTransportRequestText' 
@UI.identification: [ { 

position: 2 ,  
type: #WITH_INTENT_BASED_NAVIGATION,  
semanticObjectAction: 'manage' 

} ] 

@Consumption.semanticObject: 'CustomizingTransport' 
cast( '' as SXCO_TRANSPORT) as TransportRequestID, 
_ABAPTransportRequestText 

} 

where I_Language.Language = $session.system_language &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;18.&amp;nbsp;&lt;SPAN class=""&gt;child entity&lt;/SPAN&gt;&lt;SPAN class=""&gt; holds the singleton filed &lt;/SPAN&gt;&lt;SPAN class=""&gt;including&amp;nbsp; all&lt;/SPAN&gt;&lt;SPAN class=""&gt; other fields&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'employee table' 
@AccessControl.authorizationCheck: #MANDATORY 
@Metadata.allowExtensions: true 
define view entity ZI_EmployeeTable1 

as select from ZPD_DT_EM 
association to parent ZI_EmployeeTable_S1 as _EmployeeTableAll on $projection.SingletonID = _EmployeeTableAll.SingletonID 
association [0..*] to I_ConfignDeprecationCodeText as _ConfignDeprecationCodeText on $projection.ConfigDeprecationCode = _ConfignDeprecationCodeText.ConfigurationDeprecationCode 

{ 

key EMPLOYEE_ID as EmployeeId, 
FIRST_NAME as FirstName, 
LAST_NAME as LastName, 
DEPARTMENT as Department, 
JOINING_DATE as JoiningDate, 
IS_ACTIVE as IsActive, 
CHANGED_BY as ChangedBy, 
@ObjectModel.text.association: '_ConfignDeprecationCodeText' 
@Consumption.valueHelpDefinition: [ { 

entity: { 
name: 'I_ConfignDeprecationCode',  
element: 'ConfigurationDeprecationCode' 

} 

} ] 

CONFIGDEPRECATIONCODE as ConfigDeprecationCode, 
@Semantics.systemDateTime.localInstanceLastChangedAt: true 
@Consumption.hidden: true 
LOCAL_LAST_CHANGED_AT as LocalLastChangedAt, 
@Semantics.systemDateTime.lastChangedAt: true 
CHANGED_AT as ChangedAt, 
@Consumption.hidden: true 
1 as SingletonID, 
_EmployeeTableAll, 

case when CONFIGDEPRECATIONCODE = 'W' then 2 when CONFIGDEPRECATIONCODE = 'E' then 1 else 3 end as ConfigDeprecationCode_Critlty, 

_ConfignDeprecationCodeText 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;19.&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;behaviour definition&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed with additional save implementation in class ZBP_I_EMPLOYEETABLE_S1 unique; 
strict; 
with draft; 
define behavior for ZI_EmployeeTable_S1 alias EmployeeTableAll 

draft table ZPD_DT_EM_D_S1 
with unmanaged save 
lock master total etag LastChangedAtMax 
authorization master( global ) 

{ 

field ( readonly ) 
SingletonID; 
field ( features : instance ) 
TransportRequestID; 
field ( notrigger ) 
SingletonID, 
LastChangedAtMax; 

update; 
internal create; 
internal delete; 

draft action ( features : instance ) Edit with additional implementation; 
draft action Activate optimized; 
draft action Discard; 
draft action Resume; 
draft determine action Prepare; 

action ( features : instance ) SelectCustomizingTransptReq parameter D_SelectCustomizingTransptReqP result [1] $self; 

association _EmployeeTable { create ( features : instance ); with draft; } 
validation ValidateTransportRequest on save ##NOT_ASSIGNED_TO_DETACT { create; update; } 

 

side effects { 
action SelectCustomizingTransptReq affects $self; 

} 

} 

 

define behavior for ZI_EmployeeTable1 alias EmployeeTable ##UNMAPPED_FIELD 

persistent table ZPD_DT_EM 
draft table ZPD_DT_EM_D 
etag master LocalLastChangedAt 
lock dependent by _EmployeeTableAll 
authorization dependent by _EmployeeTableAll 

{ 

field ( mandatory : create ) 

EmployeeId; 
field ( readonly ) 
SingletonID, 
LocalLastChangedAt, 
ChangedAt, 
ConfigDeprecationCode, 
ConfigDeprecationCode_Critlty; 
field ( readonly : update ) 
EmployeeId; 

field ( notrigger ) 
SingletonID, 
LocalLastChangedAt, 
ChangedAt; 

update( features : global ); 
delete( features : instance ); 

action ( features : instance ) Deprecate result [1] $self; 
action ( features : instance ) Invalidate result [1] $self; 

mapping for ZPD_DT_EM 

{ 

EmployeeId = EMPLOYEE_ID; 
FirstName = FIRST_NAME; 
LastName = LAST_NAME; 
Department = DEPARTMENT; 
JoiningDate = JOINING_DATE; 
IsActive = IS_ACTIVE; 
ChangedBy = CHANGED_BY; 
ConfigDeprecationCode = CONFIGDEPRECATIONCODE; 
LocalLastChangedAt = LOCAL_LAST_CHANGED_AT; 
ChangedAt = CHANGED_AT; 

} 
association _EmployeeTableAll { with draft; } 

validation ValidateTransportRequest on save ##NOT_ASSIGNED_TO_DETACT { create; update; delete; } 


} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;20. service definition&lt;/P&gt;&lt;PRE&gt;@ObjectModel.leadingEntity.name: 'ZI_EmployeeTable_S' 
define service ZUI_EMPLOYEETABLE { 
expose ZI_EMPLOYEETABLE_S as EmployeeTableAll; 
expose ZI_EMPLOYEETABLE as EmployeeTable; 

} &lt;/PRE&gt;&lt;P&gt;21.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;service binding&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_3-1754912117572.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299315iFAD39EC6AFF8486C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_3-1754912117572.png" alt="Pradeep555_3-1754912117572.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;22. OUTPUT&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_4-1754912157323.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299316iD1139CB664C6C398/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_4-1754912157323.png" alt="Pradeep555_4-1754912157323.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;23.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_6-1754912208665.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299318i69C5ABB38C6E3DB7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_6-1754912208665.png" alt="Pradeep555_6-1754912208665.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;24.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Double click on singleton entity&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_7-1754912236441.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299319i98B7F2CE2F1DF377/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_7-1754912236441.png" alt="Pradeep555_7-1754912236441.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;25.&amp;nbsp;&lt;SPAN class=""&gt;here &lt;/SPAN&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; edit &lt;/SPAN&gt;&lt;SPAN class=""&gt;button&amp;nbsp; is&lt;/SPAN&gt;&lt;SPAN class=""&gt; disabled –because no access to&lt;/SPAN&gt;&lt;SPAN class=""&gt; the &lt;/SPAN&gt;&lt;SPAN class=""&gt;tbale&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_8-1754912271300.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299320iC5C465C851526705/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_8-1754912271300.png" alt="Pradeep555_8-1754912271300.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;26.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_9-1754912306511.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299321iF18E2C33D6C155CC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_9-1754912306511.png" alt="Pradeep555_9-1754912306511.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;27.&amp;nbsp;&lt;SPAN&gt;Click on edit&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We will get the option to create&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_10-1754912355432.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299322i89CD63D2B59DCA76/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_10-1754912355432.png" alt="Pradeep555_10-1754912355432.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;28.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_11-1754912380944.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299323i9DBDFCD6DA965257/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_11-1754912380944.png" alt="Pradeep555_11-1754912380944.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;29.&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Entry will be created&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_12-1754912438361.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299324iF8C37FB3EEA2004D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_12-1754912438361.png" alt="Pradeep555_12-1754912438361.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;30.&amp;nbsp;&lt;SPAN&gt;As soon as you click on save we will get an error&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As we have not specified any&amp;nbsp; customizing transport&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_13-1754912472735.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299325iA3E9924BC2F67849/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_13-1754912472735.png" alt="Pradeep555_13-1754912472735.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;31.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_14-1754912504103.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299326i682223EF6DB8CD5A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_14-1754912504103.png" alt="Pradeep555_14-1754912504103.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;32.&amp;nbsp;&lt;SPAN&gt;now we data is getting stored but not displaying because of CDS authorization&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Select not allowed&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_15-1754912540990.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299327i06E31093A5891495/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_15-1754912540990.png" alt="Pradeep555_15-1754912540990.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;33.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; now we can be able to see the data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_16-1754912565514.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299328iC9A95DCC9C9B9D38/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_16-1754912565514.png" alt="Pradeep555_16-1754912565514.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;34.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt;&amp;lt; Copy Action&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I&amp;nbsp; will select the entry ( id 3)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And click on copy action ..entry will be copied and we&amp;nbsp; need to assign new Id&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And also we can make changes in the perticular entry&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_17-1754912617841.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299330i0B8B903FA505FD0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_17-1754912617841.png" alt="Pradeep555_17-1754912617841.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;35.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;deprecate &lt;/SPAN&gt;&lt;SPAN class=""&gt;selected&lt;/SPAN&gt;&lt;SPAN class=""&gt; entry and invalidate entry&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_18-1754912646740.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299331i21CC4D5C050C9FCF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_18-1754912646740.png" alt="Pradeep555_18-1754912646740.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;36.&amp;nbsp;&lt;SPAN&gt;Deprcate action&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt;&amp;lt; now&amp;nbsp; I shall select an entry and click on deprecate button&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_19-1754912680433.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299333iAD061F6555376987/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_19-1754912680433.png" alt="Pradeep555_19-1754912680433.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;37.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_20-1754912707661.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299334i8202E642326B87A0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_20-1754912707661.png" alt="Pradeep555_20-1754912707661.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;38.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_21-1754912731691.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299335i2F3BDCBE15820720/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_21-1754912731691.png" alt="Pradeep555_21-1754912731691.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;39.&amp;nbsp;&lt;SPAN&gt;Again if you select the depricated entries . The action buttons will not be shown&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;lt;&amp;lt; Invalidate entry&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_22-1754912782613.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299337iDD352ABA3C38642A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_22-1754912782613.png" alt="Pradeep555_22-1754912782613.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;40.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Click on save and open the entry&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_23-1754912809471.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299338i7DB8F462519ABA3A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_23-1754912809471.png" alt="Pradeep555_23-1754912809471.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thnaks and Regards --&lt;/P&gt;&lt;P&gt;Pradeep Ishwar devadiga&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/singleton-entities-in-rap-design-multi-line-edit-and-best-practices/ba-p/14177490"/>
    <published>2025-08-19T08:46:32.754000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/upload-and-download-invoice-image-on-rap-application/ba-p/14181185</id>
    <title>Upload and Download Invoice Image on RAP Application</title>
    <updated>2025-08-20T07:19:57.829000+02:00</updated>
    <author>
      <name>AnithaSwamy</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1757477</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1608691752"&gt;Introduction:&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;The&amp;nbsp;ABAP RESTful Application Programming Model (RAP)&amp;nbsp;provides a streamlined, standardized way to build enterprise-grade Fiori apps on SAP BTP ABAP Environment — including support for file handling.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Unlike traditional approaches where developers manually code file upload/download logic, RAP leverages&amp;nbsp;large object (LOB) semantics, MIME type control, and built‑in media stream handling to manage file content and metadata automatically.&lt;BR /&gt;In this project, we implement a&amp;nbsp;draft‑enabled RAP application&amp;nbsp;for invoice management that allows users to&amp;nbsp;upload, preview, download, and delete attachments&amp;nbsp;directly from the Fiori UI.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Using only CDS annotations and metadata definitions — without custom CRUD code — the RAP runtime takes care of:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Persisting file content in database LRAW/RAWSTRING fields,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Validating file MIME types (e.g., JPEG, PNG),&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Exposing file streams for download via OData V4,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Linking attachments to business object instances in draft or active state.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;By combining RAP’s managed draft capabilities and UI annotations like&amp;nbsp;@Semantics.largeObject&amp;nbsp;and&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.headerInfo.imageUrl, we achieve a clean, zero‑custom‑code solution for common file management needs in business applications.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1412178247"&gt;Objectives:&lt;/H1&gt;&lt;P&gt;Enable file upload and download functionality for a Draft enabled RAP Application&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1215664742"&gt;Tasks&lt;/H1&gt;&lt;OL&gt;&lt;LI&gt;Database Table: Create the Attachment, MIME and File name fields in Database table&lt;/LI&gt;&lt;LI&gt;CDS Interface View: &amp;nbsp;the LargeObject semantics for the file like file types (in our case we set this to jpeg and PNG file types)&lt;/LI&gt;&lt;LI&gt;Metadata View: Declare the imageURL in UI.headerinfo and hide filename and MIME type fields.&lt;/LI&gt;&lt;LI&gt;Test the application for file upload and download for a record selected by user&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1019151237"&gt;Steps in Detail&lt;/H1&gt;&lt;UL&gt;&lt;LI&gt;Step 1 :Database Table will must have the following fields&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;attachment : /dmo/attachment;
mime_type  : /dmo/mime_type;
file name  : /dmo/filename;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Step 2 : CDS Interface view declaration:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Semantics.largeObject: { mimeType: 'MimeType', //case-sensitive
                          fileName: 'FileName', //case-sensitive
               acceptableMimeTypes: ['image/png', 'image/jpeg'],
      contentDispositionPreference: #ATTACHMENT }

attachment as Attachment,
@Semantics.mimeType: true
mime_type as MimeType,
file name as FileName,&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Step 3: Metadata View&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  imageUrl:       'Attachment',           //case-sensitive in UI.HeaderInfo.&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;QUI.identification: [ { position: 110 } ]
Attachment;

@UI.hidden: true
MimeTypej

@UI.hidden: true
FileName;

@UI.hidden: true
LocalLastChangedAt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Step 4: Test the Application: Open your RAP UI App. Click “Go” Button, to see records listed from Database table.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_3-1755193519094.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301138i2FF38BBE1EB90905/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_3-1755193519094.png" alt="AnithaSwamy_3-1755193519094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Navigate to a record by clicking on the list displayed, you will see the field for Attachments.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_4-1755193519100.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301136i0ED98E71704F3556/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_4-1755193519100.png" alt="AnithaSwamy_4-1755193519100.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can hit the upload button to upload the file: (in our case we have limited the file type to JPEG and PNG files). Once uploaded the file will be displayed as an icon. You can also see the updated file on the top left corner of the record when the upload is successful.&amp;nbsp; This means that the attachment has been successfully uploaded against the selected record in the database.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_5-1755193519106.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301137i9883B1A6436EB4FA/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_5-1755193519106.png" alt="AnithaSwamy_5-1755193519106.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;User is able to delete the file by selecting the delete icon next to the upload/download button when the record is in Creation or Edit mode.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_6-1755193519110.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301139i5E0653EF4FED4FA4/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_6-1755193519110.png" alt="AnithaSwamy_6-1755193519110.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;When the record is in Display mode, if there is a image attached to the record, the file name is hyperlink enables so that the user is able to download file onto local drive.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_7-1755193519114.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301140iD5EBD4FA9DC0F79F/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_7-1755193519114.png" alt="AnithaSwamy_7-1755193519114.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-951720451"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-755206946"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;This demonstrates that&amp;nbsp;RAP’s built‑in file handling&amp;nbsp;significantly reduces the complexity of implementing document management features in SAP applications.&lt;BR /&gt;By simply:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Declaring&amp;nbsp;attachment,&amp;nbsp;file name, and&amp;nbsp;MIME type&amp;nbsp;fields in the DB table,&lt;/LI&gt;&lt;LI&gt;Annotating them with&amp;nbsp;large object semantics&amp;nbsp;and acceptable MIME types,&lt;/LI&gt;&lt;LI&gt;Using metadata extensions to control UI display and hide technical fields,&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;the RAP framework automatically provides end‑to‑end file upload, delete, and download capabilities in the generated Fiori app — fully integrated with the business object lifecycle and draft handling. In our invoice scenario, users can intuitively manage image attachments within the object page: upload new files in edit mode, delete them when needed, and download them in display mode.&lt;/P&gt;&lt;P&gt;No manual OData stream provider or complex frontend logic was necessary — the RAP runtime, guided by CDS annotations, handled storage, retrieval, and MIME type enforcement for us.&lt;/P&gt;&lt;P&gt;This confirms RAP’s position as a&amp;nbsp;“declarative-first” development model&amp;nbsp;— enabling developers to focus on the data model and business logic, while the framework transparently implements recurring technical patterns like file management.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/upload-and-download-invoice-image-on-rap-application/ba-p/14181185"/>
    <published>2025-08-20T07:19:57.829000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/managed-rap-application-for-billing-document-header-and-item-tables/ba-p/14177961</id>
    <title>Managed RAP Application for Billing Document Header and Item Tables</title>
    <updated>2025-08-20T07:42:53.909000+02:00</updated>
    <author>
      <name>AnithaSwamy</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1757477</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607954599"&gt;Project Overview:&lt;/H1&gt;&lt;P&gt;Managed RAP for custom Parent Child related tables with Odata2 UI&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1411441094"&gt;Introduction:&lt;/H1&gt;&lt;P&gt;The goal is to design a lightweight&amp;nbsp;Billing Document Header and Items maintenance UI application&amp;nbsp;with&amp;nbsp;Create&amp;nbsp;and&amp;nbsp;Delete&amp;nbsp;capabilities, using Managed RAP on SAP BTP ABAP Environment&amp;nbsp;using&amp;nbsp;Eclipse ADT.&amp;nbsp;&lt;/P&gt;&lt;P&gt;The application uses&amp;nbsp;custom transparent tables&amp;nbsp;for storing billing document header and items data and implements&amp;nbsp;standard RAP layers&amp;nbsp;— Database Table, Interface View, Projection View, Metadata Annotations, Behavior Definitions, Behavior Pool, Service Definition, and Service Binding.&lt;/P&gt;&lt;P&gt;Since this is a RAP without draft facility, the service we generate would be based on OData UI 2.0 version.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1214927589"&gt;Objectives:&lt;/H1&gt;&lt;P&gt;Creating a Managed RAP based UI using BTP with Create &amp;amp; Delete actions on custom Billing Document header and Items tables that have Parent Child relationship.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1018414084"&gt;Tasks Outline&lt;/H1&gt;&lt;OL&gt;&lt;LI&gt;Create required Database Table(s) – Header and Item Tables&lt;/LI&gt;&lt;LI&gt;Create CDS views for the Database Table – Billing Header&lt;UL&gt;&lt;LI&gt;Interface View and&lt;/LI&gt;&lt;LI&gt;Consumption (Projection) View&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Create CDS views for the Database Table – Billing Items&lt;UL&gt;&lt;LI&gt;Interface View and&lt;/LI&gt;&lt;LI&gt;Consumption (Projection) View&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Create Metadata View one each for Header and Items Consumption Views&lt;/LI&gt;&lt;LI&gt;Create Behavior Definition&lt;UL&gt;&lt;LI&gt;for Interface View for Header and Define Items def. within&lt;/LI&gt;&lt;LI&gt;Create Behavior Pool implementation Class using Quick Fix option&lt;/LI&gt;&lt;LI&gt;Create Behavior Definition for Consumption View for Header and Define Items def. within&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Create Service Definition for Consumption Views of Header and Item tables&lt;/LI&gt;&lt;LI&gt;Service Binding OData UI 2.0 for the Service Definition&lt;/LI&gt;&lt;LI&gt;Test the application in preview/Fiori app → validate header list, object page, and item section data&lt;/LI&gt;&lt;/OL&gt;&lt;H1 id="toc-hId-821900579"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-625387074"&gt;Objects List&lt;/H1&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_0-1754948023092.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299566i26273CD79B7D2FE8/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_0-1754948023092.png" alt="AnithaSwamy_0-1754948023092.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-428873569"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-232360064"&gt;&lt;SPAN&gt;Step by Step outline:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;Step 1: Create Database Tables (Eclipse - Data Dictionary-Database Table)&lt;/P&gt;&lt;P&gt;Step 1a: Create Billing Header Database Table (Eclipse - Data Dictionary-Database Table)&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Database table for BILLING header'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zdb_ar5_bill {

  key client      : abap.clnt not null;
  key bill_id     : abap.numc(10) not null;
  bill_type       : abap.char(4);
  bill_date       : abap.dats;
  customer_id     : /dmo/customer_id;
  customer_name   : abap.char(80);
  @Semantics.amount.currencyCode : 'zdb_ar5_bill.currency'
  net_amount      : abap.curr(15,2);
  currency        : waers;
  sales_org       : vkorg;
  last_changed_at : abp_lastchange_tstmpl;
  createdby       : syuname;
  changedby       : syuname;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Check the created Database Table structure (Right click – Open With - Data Preview)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_2-1754948023099.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299567i8FD89C63920D9612/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_2-1754948023099.png" alt="AnithaSwamy_2-1754948023099.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step1b: Create Billing Items Database Table (Eclipse - Data Dictionary-Database Table)&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Database table for BILLING ITEMS'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zdb_ar5_item {

  key client      : abap.clnt not null;
  key bill_id     : abap.char(10) not null;
  key item_no     : abap.numc(6) not null;
  material_id     : matnr;
  description     : abap.char(40);
  @Semantics.quantity.unitOfMeasure : 'zsac_bill_item.uom'
  quantity        : abap.quan(13,3);
  @Semantics.amount.currencyCode : 'zsac_bill_item.currency'
  item_amount     : abap.curr(15,2);
  currency        : waers;
  uom             : meins;
  last_changed_at : abp_lastchange_tstmpl;
  createdby       : syuname;
  changedby       : syuname;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Check the created Database Table structure (Right click – Open With - Data Preview)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_4-1754948023107.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299568i3B0B47A4C63C001E/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_4-1754948023107.png" alt="AnithaSwamy_4-1754948023107.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 2: Create Interface Root view CDS for the database table created (right click database table - Data Definitions - Root View template)&lt;/P&gt;&lt;P&gt;Step 2a: Header Table – create interface root view&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface View for Billing Header'
@Metadata.ignorePropagatedAnnotations: true
define root view entity ZAR5_IR_BILL
  as select from zdb_ar5_bill       as bill
  composition [0..*] of ZAR5_I_ITEM as _item
{
  key bill_id         as BillId,
      bill_type       as BillType,
      bill_date       as BillDate,
      customer_id     as CustomerId,
      customer_name   as CustomerName,
      @Semantics.amount.currencyCode : 'Currency'
      net_amount      as NetAmount,
      currency        as Currency,
      sales_org       as SalesOrg,
      last_changed_at as LastChangedAt,
      createdby       as Createdby,
      changedby       as Changedby,

      // Associations //
      _item
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 2b: Items Table – create interface view&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface View for Billing item'
@Metadata.ignorePropagatedAnnotations: true
define view entity ZAR5_I_ITEM
  as select     from        zdb_ar5_item as item
  association   to parent   ZAR5_IR_BILL as _bill 
    on          $projection.BillId       = _bill.BillId
{
  key bill_id         as BillId,
  key item_no         as ItemNo,
      material_id     as MaterialId,
      description     as Description,
      @Semantics.quantity.unitOfMeasure: 'Uom'
      quantity        as Quantity,
      @Semantics.amount.currencyCode : 'Currency'
      item_amount     as ItemAmount,
      currency        as Currency,
      uom             as Uom,
      last_changed_at as LastChangedAt,
      createdby       as Createdby,
      changedby       as Changedby,

      // Associations //
      _bill // Make association public
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 3: Create Consumption/Projection Root view CDS for the database table created (right click database table - Data Definitions - Root View template)&lt;/P&gt;&lt;P&gt;Step 3a: Header Table – Projection root view creation&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Projection View for Billing Header'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true //manually added
define root view entity ZAR5_C_BILL
  provider contract transactional_query 
  as projection on ZAR5_IR_BILL
{
    key BillId,
    BillType,
    BillDate,
    CustomerId,
    CustomerName,
    @Semantics.amount.currencyCode: 'Currency'
    NetAmount,
    Currency,
    SalesOrg,
    LastChangedAt,
    Createdby,
    Changedby,
    
    /* Associations */
    _item :  redirected to composition child ZAR5_C_ITEM
   
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 3b: Item Table – Projection view creation&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Projection View for Billing item'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true //manually added
define view entity ZAR5_C_ITEM
    as projection on ZAR5_I_ITEM
{
    key BillId,
    key ItemNo,
    MaterialId,
    Description,
    @Semantics.quantity.unitOfMeasure: 'Uom'
    Quantity,
    @Semantics.amount.currencyCode: 'Currency'
    ItemAmount,
    Currency,
    Uom,
    LastChangedAt,
    Createdby,
    Changedby,
    
    /* Associations */
    _bill : redirected to parent ZAR5_C_BILL  
   
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 4: Create Metadata that helps with designing aspects of the UI (Right click on the Projection View you created and select new "Metadata Definition")&lt;/P&gt;&lt;P&gt;Step 4a: Create Metadata for Header Table&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
@UI: {
  headerInfo: {
    typeName:        'Billing Document Header',
    typeNamePlural:  'Billing Documents',
    title: {
      type:  #STANDARD,
      label: 'Billing Document',
      value: 'BillId'
    }
  }
}

annotate entity ZAR5_C_BILL with
{
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.facet: [
    {
      id:       'BillingDocHead',
      purpose:  #STANDARD,
      type:     #IDENTIFICATION_REFERENCE,
      label:    'Header',
      position: 10
    },
    {
      id:            'BillingDocItem',
      purpose:       #STANDARD,
      type:          #LINEITEM_REFERENCE,
      label:         'Items',
      position:      20,
      targetElement: '_item'
    }
  ]

  // --- START OF FINAL CORRECTION ---

  // All columns and buttons for the list report table go inside this SINGLE lineItem array.
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.lineItem: [
    // Object 1: The column for the BillId field
    {
      position: 10,
      importance: #HIGH
    },
    // Object 2: The button for the setFullName action
    {
      type:       #FOR_ACTION,
      dataAction: 'setFullName',
      label:      'Set Customer Name',
      position: 15  // Position for the button in the toolbar
    },
     // Object 3: The button for the COPY action
    {
      type:       #FOR_ACTION,
      dataAction: 'copyBillDoc',
      label:      'Copy to Create',
      position: 16  // Position for the button in the toolbar
    }
  ]
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.identification: [ { position: 10 } ]
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.selectionField: [ { position: 10 } ]
  @EndUserText.label: 'Billing Document'
  BillId;

  // --- END OF FINAL CORRECTION ---


  @EndUserText.label: 'Billing Document Type'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 20 } ],
    identification: [ { position: 20 } ],
    selectionField: [ { position: 20 } ]
  }
  BillType;

  @EndUserText.label: 'Billing Date'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 30 } ],
    identification: [ { position: 30 } ]
  }
  BillDate;

  @EndUserText.label: 'Customer'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 40 } ],
    identification: [ { position: 40 } ]
  }
  CustomerId;

  @EndUserText.label: 'Customer Name'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 45 } ],
    identification: [ { position: 45 } ]
  }
  CustomerName;

  @EndUserText.label: 'Net Amount'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 50 } ],
    identification: [ { position: 50 } ]
  }
  NetAmount;

  @EndUserText.label: 'Currency'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 60 } ],
    identification: [ { position: 60 } ]
  }
  Currency;

  @EndUserText.label: 'Sales Organization'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 70 } ],
    identification: [ { position: 70 } ]
  }
  SalesOrg;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 4b: Create Metadata for Item Table&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
annotate entity ZAR5_C_ITEM with
{
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.facet: [ {
  id:       'BillingDocItem',
  purpose:  #STANDARD,
  type:     #IDENTIFICATION_REFERENCE,
  label:    'Item',
  position: 10
  }]
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    identification: [ { position: 10 } ],
    selectionField: [ { position: 10 } ]
  }
  BillId;
  @EndUserText.label: 'Item Number'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 20 } ],
    identification: [ { position: 20 } ],
    selectionField: [ { position: 20 } ]
  }
  ItemNo;
  @EndUserText.label: 'Material'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 30 } ],
    identification: [ { position: 30 } ]
  }
  MaterialId;
  @EndUserText.label: 'Description'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 40 } ],
    identification: [ { position: 40 } ]
  }
  Description;
  @EndUserText.label: 'Quantity'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 50 } ],
    identification: [ { position: 50 } ]
  }
  Quantity;
  @EndUserText.label: 'Unit of Measure'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 60 } ],
    identification: [ { position: 60 } ]
  }
  Uom;
  @EndUserText.label: 'Amount'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 70 } ],
    identification: [ { position: 70 } ]
  }
  ItemAmount;
  @EndUserText.label: 'Currency'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 80 } ],
    identification: [ { position: 80 } ]
  }
  Currency;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Step5: Create Behaviour Definition - one for Interface view and one for Consumption view.&lt;/P&gt;&lt;P&gt;Step 5a: Create Behaviour Definition for Header interface view ((Right click the Interface CDS View and choose Behaviour Definition option)&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_ar5_ir_bill unique;
strict ( 2 );

//Headewr table interface view definition
define behavior for ZAR5_IR_BILL alias bill
persistent table zdb_ar5_bill
lock master
authorization master ( instance )
etag master LastChangedAt
{
  create ( authorization : global );
  update;
  delete;
  field ( readonly ) BillId;
  association _item { create; }

    mapping for zdb_ar5_bill
    {
        BillId        = bill_id;
        BillDate      = bill_date;
        BillType      = bill_type;
        CustomerId    = customer_id;
        CustomerName  = customer_name;
        NetAmount     = net_amount;
        Currency      = currency;
        SalesOrg      = sales_org;
        LastChangedAt = last_changed_at;
        createdby     = createdby;
        changedby     = changedby;
    }
}
//Item table interface view definition
define behavior for ZAR5_I_ITEM alias item
persistent table zdb_ar5_item
lock dependent by _bill
authorization dependent by _bill
etag master LastChangedAt
{
  update;
  delete;
  field ( readonly ) BillId, ItemNo;
  association _bill;

  mapping for zdb_ar5_item
    {
      BillId      = bill_id;
      ItemNo      = item_no;
      MaterialId  = material_id;
      Description = description;
      Quantity    = quantity;
      ItemAmount  = item_amount;
      Currency    = currency;
      Uom         = uom;
      LastChangedAt = last_changed_at;
      createdby   = createdby;
      changedby   = changedby;
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 5b: Create Behaviour Pool – Implementation class (from the Quick Fix facility on the first line of the definition above).Activate the generated class – no change required since we have no custom logic to be implemented.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_bill DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR bill RESULT result.

    METHODS get_global_authorizations FOR GLOBAL AUTHORIZATION
      IMPORTING REQUEST requested_authorizations FOR bill RESULT result.

ENDCLASS.

CLASS lhc_bill IMPLEMENTATION.

  METHOD get_instance_authorizations.
  ENDMETHOD.

  METHOD get_global_authorizations.
  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 5c: Create Behaviour Definition for the Projection view (Right click the Projection CDS View and choose Behaviour Definition option)&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection;
strict ( 2 );

with managed instance filter;

define behavior for ZAR5_C_BILL alias bill
use etag
{
  use create;
  use update;
  use delete;

  use association _item { create; }
}

define behavior for ZAR5_C_ITEM alias item
{
  use update;
  use delete;

  use association _bill;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Step 6: Create Service definition (Right click CDS Projection Header View and click "New Service Definition"). Expose the Consumption Views of Header and Item.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service Def. for Proj. View of Header'
define service ZSD_AR5_BILL {
  expose ZAR5_C_BILL as BillingParentChildApp;
  expose ZAR5_C_ITEM as BillingItems;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Step 7: Create Service Binding (Right click on the new Service definition you created and choose "New Service Binding" and Choose OData V4 version for the UI)&lt;/P&gt;&lt;P&gt;Select the Service Definition displayed on the versions section of the page and hit "Publish" button. Once published, a Service URL will be created and the binding will be displayed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_16-1754948023158.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299582iDCF9111D6B9D9694/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_16-1754948023158.png" alt="AnithaSwamy_16-1754948023158.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 8: Test the Application: Select the Entity and hit Preview button(see screenshot above) , a new Window will be opened with the RAP UI App you created.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_17-1754948023163.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299581i9464D446970B2139/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_17-1754948023163.png" alt="AnithaSwamy_17-1754948023163.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Click “Go” Button, so that the values are pulled from the Database table to be shown on the screen.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_18-1754948023175.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299585i4841FB783D5B755D/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_18-1754948023175.png" alt="AnithaSwamy_18-1754948023175.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can see the database records displayed on the screen. The Create and Delete buttons are available for creating new records and deleting existing records. When user clicks on a particular record the object page opens up with Items table details.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_19-1754948023183.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299584i9816A95928B15A97/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_19-1754948023183.png" alt="AnithaSwamy_19-1754948023183.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The user can navigate to each items record displayed to see additional information.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_20-1754948023189.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299583iAD7DF5785E13A3EC/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_20-1754948023189.png" alt="AnithaSwamy_20-1754948023189.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If you are a beginner I recommend my blog :&lt;/P&gt;&lt;P&gt;&lt;A title="Simple RAP based Managed UI development with Create &amp;amp; Delete actions on custom BillDoc header table" href="https://community.sap.com/t5/technology-blog-posts-by-members/simple-rap-based-managed-ui-development-with-create-amp-delete-actions-on/ba-p/14173514" target="_self"&gt;Simple RAP based Managed UI development with Create &amp;amp; Delete actions on custom BillDoc header table&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-164929278"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;By leveraging Managed RAP, you do not need to write custom CRUD logic for database tables in parent-child relation— the framework auto-generates this functionality, allowing you to focus purely on&amp;nbsp;data modelling,&amp;nbsp;UI annotations, and&amp;nbsp;service exposure.&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+ABAP+Environment/pd-p/60907aa9-99e9-4d5d-9103-8b970e9bc0a4" class="lia-product-mention" data-product="39-1"&gt;SAP S/4HANA Cloud ABAP Environment&lt;/a&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/managed-rap-application-for-billing-document-header-and-item-tables/ba-p/14177961"/>
    <published>2025-08-20T07:42:53.909000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-sap-teched-in-2025/ba-p/14175995</id>
    <title>ABAP Cloud Sessions at SAP TechEd in 2025</title>
    <updated>2025-08-22T17:20:44.662000+02:00</updated>
    <author>
      <name>CarineTchoutouo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1462</uri>
    </author>
    <content>&lt;P&gt;Hey Everyone!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched.html" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd in 2025&lt;/A&gt;&lt;/STRONG&gt; kicks off on the 4th of November 2025, and preparations&amp;nbsp;&lt;SPAN&gt;are now in full swing at SAP!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP TechEd is the leading tech conference for all developers, IT professionals, business experts, tech visionaries, innovators, and leaders eager to gain in-depth knowledge of SAP’s solutions, platforms, and technologies, along with insights into their future direction. It also offer an opportunity to network and connect with peers and SAP experts.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In 2025, &lt;STRONG&gt;SAP TechEd&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;STRONG&gt;goes hybrid&lt;/STRONG&gt;, kicking off with parallel events &lt;/SPAN&gt;&lt;SPAN&gt;in Berlin, Louisville, and online – &lt;/SPAN&gt;&lt;SPAN&gt;followed by SAP TechEd on Tour stops in Australia, India, UK, and Germany for a unique opportunity for an in-depth, in-person learning experience. Except for the Berlin and Bangalore stops, the on-site events are organized in partnership with, and hosted by, SAP User Groups and SAPinsider.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;The choice is yours: join us on-site in Berlin or Louisville (at ASUG Tech Connect), or online for the first events in the series!&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;STRONG&gt;Save the date and &lt;/STRONG&gt;&lt;STRONG&gt;register now&lt;/STRONG&gt;!&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":calendar:"&gt;📅&lt;/span&gt;November 4 - 6, 2025&lt;BR /&gt;&lt;A href="https://www.sap.com/germany/events/teched/berlin.html" target="_blank" rel="noopener noreferrer"&gt;Berlin&lt;/A&gt; | &lt;A href="https://www.sap.com/germany/events/teched/virtual.html" target="_blank" rel="noopener noreferrer"&gt;Online&lt;/A&gt;&amp;nbsp;(free of charge) | &lt;A href="https://www.sap.com/events/2025-11-04-us-pe-asug-tech-connect.html" target="_blank" rel="noopener noreferrer"&gt;Louisville&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1866060552"&gt;ABAP Cloud at SAP TechEd in 2025&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;What to Expect&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/abap-cloud" target="_blank" rel="noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="CarineTchoutouo_0-1755888895164.png" style="width: 102px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304101iB764B49D270DC480/image-dimensions/102x46/is-moderation-mode/true?v=v2" width="102" height="46" role="button" title="CarineTchoutouo_0-1755888895164.png" alt="CarineTchoutouo_0-1755888895164.png" /&gt;&lt;/span&gt;&lt;/A&gt;ABAP continues to evolve, and SAP TechEd events in 2025 are the best place to see what’s next. Beyond the integration of ABAP Cloud into SAP Build announced last year, and the integration of SAP Joule for Developers into the ABAP development tools along with the ABAP AI SK to infuse AI into your business processes earlier this year,&amp;nbsp; you’ll have the opportunity to explore the latest innovations and updates in ABAP Cloud, AI-based&amp;nbsp;custom code transformation, clean core practices, and the new clean core levels approach for SAP S/4HANA extensibility in both the private cloud and on-premise.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;Why Attending ABAP Sessions Matters&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Get a &lt;STRONG&gt;clear direction&lt;/STRONG&gt; for your ABAP strategy, whether you're on ECC, S/4HANA, or SAP BTP&lt;/LI&gt;&lt;LI&gt;Learn how to &lt;STRONG&gt;modernize custom development&lt;/STRONG&gt; without touching the core&lt;/LI&gt;&lt;LI&gt;See how&amp;nbsp;&lt;STRONG&gt;SAP Joule for Developers, ABAP AI capabilities &lt;/STRONG&gt;can support faster, cleaner development&lt;/LI&gt;&lt;LI&gt;Take home &lt;STRONG&gt;practical skills&lt;/STRONG&gt; for RAP, testing, ABAP Test Cockpit, governance, and more&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Access the SAP TechEd 2025 session catalogs: &amp;nbsp;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd Berlin&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://www.sap.com/germany/events/teched/virtual.html" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd Virtual&lt;/A&gt;&amp;nbsp;| &lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda" target="_blank" rel="noopener nofollow noreferrer"&gt;ASUG Tech Connect&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H1 id="toc-hId-1411381609"&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;ABAP Cloud Sessions at SAP TechEd &lt;FONT color="#0000FF"&gt;Berlin&lt;/FONT&gt; 2025&amp;nbsp;&lt;/H1&gt;&lt;P data-unlink="true"&gt;&lt;span class="lia-unicode-emoji" title=":calendar:"&gt;📅&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;&lt;A href="https://www.sap.com/events/teched/berlin.html" target="_blank" rel="noopener noreferrer"&gt;Event Info&lt;/A&gt;:&lt;/STRONG&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Dates&lt;/STRONG&gt;: November 4–6, 2025&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Location&lt;/STRONG&gt;: Messe Berlin (Berlin, Germany)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Session formats&lt;/STRONG&gt;: Strategy talks, roadmap updates, deep dives, community talks, and hands-on workshops&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;9 Content tracks&lt;/STRONG&gt;: ABAP sessions primarily in the tracks "Application Development &amp;amp; Automation (&lt;SPAN class=""&gt;AD&lt;/SPAN&gt;)" and "&lt;SPAN&gt;Digital Transformation with Cloud&amp;nbsp;&lt;SPAN class=""&gt;ERP&lt;/SPAN&gt;&amp;nbsp;(&lt;SPAN class=""&gt;DT&lt;/SPAN&gt;)"&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1343950823"&gt;&lt;span class="lia-unicode-emoji" title=":microphone:"&gt;🎤&lt;/span&gt;Keynote&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1755527936875001jfGl" target="_blank" rel="noopener noreferrer"&gt;KEY100 | Beyond the hype: How SAP is supercharging developers for what's next&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;Some experts argue there’s a developer shortage. Others will say developers are no longer needed due to AI. Let’s get real: developers, architects, and technologists are here to stay, and their roles are more important than ever. Explore how the latest technology, tools, AI, agents, and learning from SAP can help you adapt these changing roles.&amp;nbsp;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1147437318"&gt;&lt;span class="lia-unicode-emoji" title=":direct_hit:"&gt;🎯&lt;/span&gt;Strategy Talks (25 minutes&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749109536463001vLhp" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;ST109&lt;/SPAN&gt; – &lt;SPAN&gt;SAP Build: ABAP Cloud Strategy&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; | &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;also available virtually as&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt; ST119v&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;The ABAP Cloud strategy as part of SAP Build and the SAP strategy go hand-in-hand. Explore in this session what this means for our major topics ABAP AI and Custom Code Transformation and how we integrate Business Data Cloud. Furthermore, learn about the ABAP IDE strategy and how we support the sovereign cloud.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Sonja Liénard (SAP), &lt;SPAN&gt;Boris Gebhardt (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749132378115001LmnQ" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;ST113&lt;/SPAN&gt; – &lt;SPAN&gt;Journey to unified extensibility in SAP Business Suite and cloud ERP&lt;/SPAN&gt;&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;Explore the strategy for extensibility across SAP Business Suite and cloud ERP. Learn why AI-driven development with the SAP Build solution including ABAP Cloud is key, and how the planned harmonization will make it easier to build extensions and support the clean core. Furthermore, learn about opportunities for partners to extend SAP solutions.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Boris Gebhardt (SAP),&amp;nbsp;Khaled Musilhy (SAP), tbd&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-950923813"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;🗺&lt;/span&gt;️ Roadmap Sessions (25 minutes&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749109867231001jec8" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;AD808&lt;/SPAN&gt; – &lt;SPAN&gt;SAP Build: ABAP Cloud road map&lt;/SPAN&gt;&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;See our upcoming innovations for the ABAP Cloud development model including Joule and the Business Data Cloud integration in context and get updates on the roadmap ahead.&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Boris Gebhardt (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749132621235001F9CC" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;DT814&lt;/SPAN&gt; – &lt;SPAN&gt;Extensibility innovations road map for SAP Business Suite and cloud ERP&lt;/SPAN&gt;&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;Explore upcoming extensibility innovations for SAP Business Suite and cloud ERP. Discover road maps for suite extensibility, harmonization, and partner enablement for commercial use cases. Learn more about upcoming innovations for AI-driven extensibility with the SAP Build solution including ABAP Cloud to support your clean core strategy.&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Oren Shatil (SAP),&amp;nbsp;Boris Gebhardt (SAP),&amp;nbsp;&lt;SPAN&gt;External Speaker&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-754410308"&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;Deep Dives (45 minutes&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110017215001w1iM" target="_blank" rel="noopener noreferrer"&gt;AD104 – Boost your &amp;nbsp;ABAP development with Joule for developers&lt;/A&gt; &lt;/STRONG&gt;&amp;nbsp;&lt;SPAN&gt;| also available virtually as &lt;STRONG&gt;AD104v&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;In this deep dive session you will learn all aspects of the ABAP AI strategy, from accelerating your ABAP development, over developing custom AI scenarios, up to using Joule to transform your ABAP code.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Simona Marincei (SAP), Olga Dolinskaja (SAP)&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110856633001ZdrC" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;AD105&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Introduction to ABAP Cloud and how to get started&amp;nbsp;&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;SPAN&gt;ABAP Cloud is the new way of developing ABAP—fully cloud-enabled and driven by AI. It combines cloud technologies with a clear separation of SAP and custom code, and in this way revolutionizes ABAP development. Grasp the major concepts of ABAP Cloud and learn how you can upskill. Also learn about Bosch Digital’s journey to ABAP Cloud and clean core.&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Carine Tchoutouo Djomo (SAP), External Speaker&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110615653001ATih" target="_blank" rel="noopener noreferrer"&gt;AD201 – Explore ABAP Cloud in SAP Build - what's in for ABAP developers?&amp;nbsp;&lt;/A&gt; &amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;In this deep dive we will highlight the importance of our strategic approach of integrating ABAP Cloud in SAP Build. Learn how you can benefit from this for Fiori App development and how the graphical modeler helps you to create ABAP CDS models conveniently. Finally, get insights into the future direction.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Dr. &lt;/SPAN&gt;Anne Keller&lt;SPAN&gt; (SAP)&lt;/SPAN&gt;, Katja Zoch&lt;SPAN&gt; (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749071777465001lGIE" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;DT200&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Unravel the mysteries of Clean Core extensions in Cloud ERP Private&amp;nbsp;&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;Learn about the new, enhanced clean core extensibility concept in SAP S/4HANA Cloud Private Edition. Learn about tools like ABAP Test Cockpit and RISE Dashboard, as well as guidance and best practices that help you to measure, govern, re-factor and develop your custom extensions in a clean core compliant, upgrade stable and cloud-ready way.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Olga Dolinskaja (SAP), Markus Goebel (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749073857569001yTng" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;DT201&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Extensibility with ABAP Cloud and AI in SAP Cloud ERP&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;Learn about the on-stack key user and developer tools in the ABAP Cloud development model, now enhanced with generative AI. See how you can extend standard SAP applications and manage your custom apps directly in SAP S/4HANA Cloud Public Edition. Get insights into latest innovations for transactional, analytical, and integration use cases, such as the extensibility AI Assistant, editable tree-views, custom queries for analytical SAP Fiori apps, ABAP SQL services and more.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Carine Tchoutouo Djomo&lt;SPAN&gt; (SAP)&lt;/SPAN&gt;, Oren Shatil&lt;SPAN&gt; (SAP)&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-557896803"&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;️ Hands-On Workshops (2 hours)&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749111133585001neK1" target="_blank" rel="noopener noreferrer"&gt;AD162 – Explore Joule for developers, ABAP AI capabilities&lt;/A&gt; &amp;nbsp; &lt;/STRONG&gt;&amp;nbsp;&lt;BR /&gt;Learn how to develop a RAP business object while exploring Joule's ABAP AI capabilities&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Sebastian Baskovich (SAP), Thomas Alexander Ritter (SAP), Dr. Anne Keller (SAP), Simona Marincei (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749111362893001Nrqs" target="_blank" rel="noopener noreferrer"&gt;AD163 – Fusion Development with ABAP Cloud in SAP Build&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;In this session we will practice fusion development of ABAP Cloud in SAP Build by creating an ABAP Cloud project from the SAP Build lobby to develop a RAP BO including a Fiori application on top.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Ingo Bräuninger (SAP), Sebastian Baskovich (SAP), Anne Keller (SAP), Katja Zoch (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749112624677001Rt0T" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;AD164&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Get started with ABAP Cloud for classic ABAP developers&lt;/STRONG&gt;&lt;/A&gt;&lt;STRONG&gt; &amp;nbsp; &amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Familiar with classic ABAP development? Join us to learn how similar development works with ABAP Cloud development model using the ABAP RESTful application programming model (RAP). ABAP Cloud is the comprehensive model for building cloud-ready business apps, services, and extensions that follow clean core principles by default – on SAP BTP and SAP S/4HANA, both in the cloud and on-premise.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Volker Drees (SAP), Carine Tchoutouo Djomo (SAP), Boris Gebhardt (SAP), Jürgen Reidl (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749072760273001q6Pm" target="_blank" rel="noopener noreferrer"&gt;DT260 – Modernize classic extensions to clean core in Cloud ERP Private&lt;/A&gt; &amp;nbsp; &amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;In this session you will practice a clean core extensibility in SAP S/4HANA Cloud Private Edition. You will learn how to govern clean core development using the ABAP Test Cockpit, and how to use ABAP Cloud and clean core extensibility principles to modernize your custom on-stack extensions.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Ingo Bräuninger (SAP), Olga Dolinskaja (SAP), Thomas Fiedler (SAP), Markus Goebel (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749074059125001cpvA" target="_blank" rel="noopener noreferrer"&gt;DT261 – Build on-stack extensions with ABAP Cloud in Cloud ERP Public&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;Join us to discover how to build extensions, applications, and services with the ABAP Cloud development model, using the ABAP RESTful application programming model and generative AI. You will learn how to extend standard SAP applications, consume public SAP APIs, and build new apps and services from scratch. Get practical insights through exercises and take the opportunity to ask your questions.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Ingo Bräuninger (SAP), Carine Tchoutouo Djomo (SAP),&amp;nbsp;Volker Drees (SAP), Steffen Mattes (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749650347432001y6fi" target="_blank" rel="noopener noreferrer"&gt;DT266 – Troubleshoot and Optimize ABAP Cloud Extensions in Cloud ERP&lt;/A&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Ensuring optimal performance and stability of your ABAP Cloud-based extensions is crucial to long-term success. Learn advanced techniques and best practices for troubleshooting and optimizing custom code in the Cloud ERP. Use powerful tools like ABAP Cross Trace to get deep insights into execution flows and resource consumption.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Steffen Mattes (SAP), Juergen Reidl (SAP), Thomas Alexander Ritter (SAP), Thomas Fiedler (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-361383298"&gt;&lt;span class="lia-unicode-emoji" title=":waving_hand:"&gt;👋&lt;/span&gt;Join Us&lt;/H2&gt;&lt;P&gt;I hope this overview gives you even more reasons to join us at one of the &lt;A href="https://www.sap.com/events/teched.html" target="_self" rel="noopener noreferrer"&gt;SAP TechEd 2025 tour stops&lt;/A&gt;&amp;nbsp;in Berlin (DE), Louisville (US), Sydney (AU), Bangalore (IN), Birmingham (UK), or Hamburg (DE)&amp;nbsp;– or attend online, free of charge!&lt;/P&gt;&lt;P&gt;We look forward to meeting and interacting with you! &lt;span class="lia-unicode-emoji" title=":handshake:"&gt;🤝&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;SPAN&gt;In the meantime, you can watch the replays &lt;/SPAN&gt;&lt;SPAN&gt;of last year's events:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-sap-teched-in-2024/ba-p/13783420" target="_blank"&gt;ABAP Cloud at SAP TechEd Virtual 2024&lt;/A&gt;&amp;nbsp;&lt;SPAN&gt;and&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/abap-cloud-at-devtoberfest-by-sap-teched-2024/ba-p/13789730" target="_blank"&gt;ABAP Cloud at SAP's Devtoberfest in 2024&lt;/A&gt;&lt;SPAN&gt;.&amp;nbsp;You can also have a look at the&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":fire:"&gt;🔥&lt;/span&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-devtoberfest-2025/ba-p/14187974" target="_self"&gt;ABAP Cloud sessions at the upcoming Devtoberfest 2025&lt;/A&gt;, running online and free of charge from September 29 to October 24, 2025! &lt;span class="lia-unicode-emoji" title=":handshake:"&gt;🤝&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Stay tuned &lt;SPAN&gt;–&lt;/SPAN&gt;&amp;nbsp;and see you there!&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-sap-teched-in-2025/ba-p/14175995"/>
    <published>2025-08-22T17:20:44.662000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-sap-teched-in-2025/ba-p/14187974</id>
    <title>ABAP Cloud Sessions at SAP TechEd in 2025</title>
    <updated>2025-08-22T20:27:47.137000+02:00</updated>
    <author>
      <name>CarineTchoutouo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1462</uri>
    </author>
    <content>&lt;P&gt;Hey Everyone!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched.html" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd in 2025&lt;/A&gt;&lt;/STRONG&gt; kicks off on the 4th of November 2025, and preparations&amp;nbsp;&lt;SPAN&gt;are now in full swing at SAP!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP TechEd is the leading tech conference for all developers, IT professionals, business experts, tech visionaries, innovators, and leaders eager to gain in-depth knowledge of SAP’s solutions, platforms, and technologies, along with insights into their future direction. It also offer an opportunity to network and connect with peers and SAP experts.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In 2025, &lt;STRONG&gt;SAP TechEd&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;STRONG&gt;goes hybrid&lt;/STRONG&gt;, kicking off with parallel events &lt;/SPAN&gt;&lt;SPAN&gt;in Berlin, Louisville, and online – &lt;/SPAN&gt;&lt;SPAN&gt;followed by SAP TechEd on Tour stops in Australia, India, UK, and Germany for a unique opportunity for an in-depth, in-person learning experience. Except for the Berlin and Bangalore stops, the on-site events are organized in partnership with, and hosted by, SAP User Groups and SAPinsider.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;The choice is yours: join us on-site in Berlin or Louisville (at ASUG Tech Connect), or online for the first events in the series!&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;STRONG&gt;Save the date and &lt;/STRONG&gt;&lt;STRONG&gt;register now&lt;/STRONG&gt;!&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":calendar:"&gt;📅&lt;/span&gt;November 4 - 6, 2025&lt;BR /&gt;&lt;A href="https://www.sap.com/germany/events/teched/berlin.html" target="_blank" rel="noopener noreferrer"&gt;Berlin&lt;/A&gt;&amp;nbsp;| &lt;A href="https://www.sap.com/germany/events/teched/virtual.html" target="_blank" rel="noopener noreferrer"&gt;Online (free)&lt;/A&gt; | &lt;A href="https://www.sap.com/events/2025-11-04-us-pe-asug-tech-connect.html" target="_blank" rel="noopener noreferrer"&gt;Louisville&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1867043592"&gt;ABAP Cloud at SAP TechEd in 2025&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;What to Expect&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A title="ABAP Cloud" href="https://help.sap.com/docs/abap-cloud" target="_blank" rel="noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="CarineTchoutouo_0-1755888895164.png" style="width: 86px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304101iB764B49D270DC480/image-dimensions/86x39/is-moderation-mode/true?v=v2" width="86" height="39" role="button" title="CarineTchoutouo_0-1755888895164.png" alt="CarineTchoutouo_0-1755888895164.png" /&gt;&lt;/span&gt;&lt;/A&gt;ABAP continues to evolve, and SAP TechEd events in 2025 are the best place to see what’s next. Beyond the integration of ABAP Cloud into SAP Build announced last year, and the integration of SAP Joule for Developers into the ABAP development tools along with the ABAP AI SK to infuse AI into your business processes earlier this year,&amp;nbsp; you’ll have the opportunity to explore the latest innovations and updates in ABAP Cloud, AI-based&amp;nbsp;custom code transformation, clean core practices, and the new clean core levels approach for SAP S/4HANA extensibility in both the private cloud and on-premise.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;Why Attending ABAP Sessions Matters&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Get a &lt;STRONG&gt;clear direction&lt;/STRONG&gt; for your ABAP strategy, whether you're on ECC, S/4HANA, or SAP BTP&lt;/LI&gt;&lt;LI&gt;Learn how to &lt;STRONG&gt;modernize custom development&lt;/STRONG&gt; without touching the core&lt;/LI&gt;&lt;LI&gt;See how&amp;nbsp;&lt;STRONG&gt;SAP Joule for Developers, ABAP AI capabilities &lt;/STRONG&gt;can support faster, cleaner development&lt;/LI&gt;&lt;LI&gt;Take home &lt;STRONG&gt;practical skills&lt;/STRONG&gt; for RAP, testing, ABAP Test Cockpit, governance, and more&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Access the SAP TechEd 2025 session catalogs: &amp;nbsp;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd Berlin&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://www.sap.com/germany/events/teched/virtual.html" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd Virtual&lt;/A&gt;&amp;nbsp;| &lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda" target="_blank" rel="noopener nofollow noreferrer"&gt;ASUG Tech Connect&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H1 id="toc-hId-1412364649"&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;ABAP Cloud Sessions at SAP TechEd &lt;FONT color="#0000FF"&gt;Berlin&lt;/FONT&gt; 2025&amp;nbsp;&lt;/H1&gt;&lt;P data-unlink="true"&gt;&lt;span class="lia-unicode-emoji" title=":calendar:"&gt;📅&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;&lt;A href="https://www.sap.com/events/teched/berlin.html" target="_blank" rel="noopener noreferrer"&gt;Event Info&lt;/A&gt;:&lt;/STRONG&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Dates&lt;/STRONG&gt;: November 4–6, 2025&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Location&lt;/STRONG&gt;: Messe Berlin (Berlin, Germany)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Session formats&lt;/STRONG&gt;: Strategy talks, roadmap updates, deep dives, community talks, and hands-on workshops&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;9 Content tracks&lt;/STRONG&gt;: ABAP sessions primarily in the tracks "Application Development &amp;amp; Automation (&lt;SPAN class=""&gt;AD&lt;/SPAN&gt;)" and "&lt;SPAN&gt;Digital Transformation with Cloud&amp;nbsp;&lt;SPAN class=""&gt;ERP&lt;/SPAN&gt;&amp;nbsp;(&lt;SPAN class=""&gt;DT&lt;/SPAN&gt;)"&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1344933863"&gt;&lt;span class="lia-unicode-emoji" title=":microphone:"&gt;🎤&lt;/span&gt;Keynote&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1755527936875001jfGl" target="_blank" rel="noopener noreferrer"&gt;KEY100 | Beyond the hype: How SAP is supercharging developers for what's next&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;Some experts argue there’s a developer shortage. Others will say developers are no longer needed due to AI. Let’s get real: developers, architects, and technologists are here to stay, and their roles are more important than ever. Explore how the latest technology, tools, AI, agents, and learning from SAP can help you adapt these changing roles.&amp;nbsp;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1148420358"&gt;&lt;span class="lia-unicode-emoji" title=":direct_hit:"&gt;🎯&lt;/span&gt;Strategy Talks (25 minutes&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749109536463001vLhp" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;ST109&lt;/SPAN&gt; – &lt;SPAN&gt;SAP Build: ABAP Cloud Strategy&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; | &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;also available virtually as&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt; ST119v&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;The ABAP Cloud strategy as part of SAP Build and the SAP strategy go hand-in-hand. Explore in this session what this means for our major topics ABAP AI and Custom Code Transformation and how we integrate Business Data Cloud. Furthermore, learn about the ABAP IDE strategy and how we support the sovereign cloud.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Sonja Lienard (SAP), &lt;SPAN&gt;Boris Gebhardt (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749132378115001LmnQ" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;ST113&lt;/SPAN&gt; – &lt;SPAN&gt;Journey to unified extensibility in SAP Business Suite and cloud ERP&lt;/SPAN&gt;&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;Explore the strategy for extensibility across SAP Business Suite and cloud ERP. Learn why AI-driven development with the SAP Build solution including ABAP Cloud is key, and how the planned harmonization will make it easier to build extensions and support the clean core. Furthermore, learn about opportunities for partners to extend SAP solutions.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Boris Gebhardt (SAP),&amp;nbsp;Khaled Musilhy (SAP), tbd&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-951906853"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;🗺&lt;/span&gt;️ Roadmap Sessions (25 minutes&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749109867231001jec8" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;AD808&lt;/SPAN&gt; – &lt;SPAN&gt;SAP Build: ABAP Cloud road map&lt;/SPAN&gt;&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;See our upcoming innovations for the ABAP Cloud development model including Joule and the Business Data Cloud integration in context and get updates on the roadmap ahead.&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Boris Gebhardt (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749132621235001F9CC" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;DT814&lt;/SPAN&gt; – &lt;SPAN&gt;Extensibility innovations road map for SAP Business Suite and cloud ERP&lt;/SPAN&gt;&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;Explore upcoming extensibility innovations for SAP Business Suite and cloud ERP. Discover road maps for suite extensibility, harmonization, and partner enablement for commercial use cases. Learn more about upcoming innovations for AI-driven extensibility with the SAP Build solution including ABAP Cloud to support your clean core strategy.&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Oren Shatil (SAP),&amp;nbsp;Boris Gebhardt (SAP),&amp;nbsp;&lt;SPAN&gt;External Speaker&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-755393348"&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;Deep Dives (45 minutes&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110017215001w1iM" target="_blank" rel="noopener noreferrer"&gt;AD104 – Boost your &amp;nbsp;ABAP development with Joule for developers&lt;/A&gt; &lt;/STRONG&gt;&amp;nbsp;&lt;SPAN&gt;| also available virtually as &lt;STRONG&gt;AD104v&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;In this deep dive session you will learn all aspects of the ABAP AI strategy, from accelerating your ABAP development, over developing custom AI scenarios, up to using Joule to transform your ABAP code.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Simona Marincei (SAP), Olga Dolinskaja (SAP)&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110856633001ZdrC" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;AD105&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Introduction to ABAP Cloud and how to get started&amp;nbsp;&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;SPAN&gt;ABAP Cloud is the new way of developing ABAP—fully cloud-enabled and driven by AI. It combines cloud technologies with a clear separation of SAP and custom code, and in this way revolutionizes ABAP development. Grasp the major concepts of ABAP Cloud and learn how you can upskill. Also learn about Bosch Digital’s journey to ABAP Cloud and clean core.&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Carine Tchoutouo Djomo (SAP), External Speaker&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110615653001ATih" target="_blank" rel="noopener noreferrer"&gt;AD201 – Explore ABAP Cloud in SAP Build - what's in for ABAP developers?&amp;nbsp;&lt;/A&gt; &amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;In this deep dive we will highlight the importance of our strategic approach of integrating ABAP Cloud in SAP Build. Learn how you can benefit from this for Fiori App development and how the graphical modeler helps you to create ABAP CDS models conveniently. Finally, get insights into the future direction.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Dr. &lt;/SPAN&gt;Anne Keller&lt;SPAN&gt; (SAP)&lt;/SPAN&gt;, Katja Zoch&lt;SPAN&gt; (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749071777465001lGIE" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;DT200&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Unravel the mysteries of Clean Core extensions in Cloud ERP Private&amp;nbsp;&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;Learn about the new, enhanced clean core extensibility concept in SAP S/4HANA Cloud Private Edition. Learn about tools like ABAP Test Cockpit and RISE Dashboard, as well as guidance and best practices that help you to measure, govern, re-factor and develop your custom extensions in a clean core compliant, upgrade stable and cloud-ready way.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Olga Dolinskaja (SAP), Markus Goebel (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749073857569001yTng" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;DT201&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Extensibility with ABAP Cloud and AI in SAP Cloud ERP&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;Learn about the on-stack key user and developer tools in the ABAP Cloud development model, now enhanced with generative AI. See how you can extend standard SAP applications and manage your custom apps directly in SAP S/4HANA Cloud Public Edition. Get insights into latest innovations for transactional, analytical, and integration use cases, such as the extensibility AI Assistant, editable tree-views, custom queries for analytical SAP Fiori apps, ABAP SQL services and more.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Carine Tchoutouo Djomo&lt;SPAN&gt; (SAP)&lt;/SPAN&gt;, Oren Shatil&lt;SPAN&gt; (SAP)&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-558879843"&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;️ Hands-On Workshops (2 hours)&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749111133585001neK1" target="_blank" rel="noopener noreferrer"&gt;AD162 – Explore Joule for developers, ABAP AI capabilities&lt;/A&gt; &amp;nbsp; &lt;/STRONG&gt;&amp;nbsp;&lt;BR /&gt;Learn how to develop a RAP business object while exploring Joule's ABAP AI capabilities&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Sebastian Baskovich (SAP), Thomas Alexander Ritter (SAP), Dr. Anne Keller (SAP), Simona Marincei (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749111362893001Nrqs" target="_blank" rel="noopener noreferrer"&gt;AD163 – Fusion Development with ABAP Cloud in SAP Build&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;In this session we will practice fusion development of ABAP Cloud in SAP Build by creating an ABAP Cloud project from the SAP Build lobby to develop a RAP BO including a Fiori application on top.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Ingo Braüninger (SAP), Sebastian Baskovich (SAP), Anne Keller (SAP), Katja Zoch (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749112624677001Rt0T" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;AD164&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Get started with ABAP Cloud for classic ABAP developers&lt;/STRONG&gt;&lt;/A&gt;&lt;STRONG&gt; &amp;nbsp; &amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Familiar with classic ABAP development? Join us to learn how similar development works with ABAP Cloud development model using the ABAP RESTful application programming model (RAP). ABAP Cloud is the comprehensive model for building cloud-ready business apps, services, and extensions that follow clean core principles by default – on SAP BTP and SAP S/4HANA, both in the cloud and on-premise.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Volker Drees (SAP), Carine Tchoutouo Djomo (SAP), Boris Gebhardt (SAP), Jürgen Reidl (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749072760273001q6Pm" target="_blank" rel="noopener noreferrer"&gt;DT260 – Modernize classic extensions to clean core in Cloud ERP Private&lt;/A&gt; &amp;nbsp; &amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;In this session you will practice a clean core extensibility in SAP S/4HANA Cloud Private Edition. You will learn how to govern clean core development using the ABAP Test Cockpit, and how to use ABAP Cloud and clean core extensibility principles to modernize your custom on-stack extensions.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Ingo Bräuninger (SAP), Olga Dolinskaja (SAP), Thomas Fiedler (SAP), Markus Goebel (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749074059125001cpvA" target="_blank" rel="noopener noreferrer"&gt;DT261 – Build on-stack extensions with ABAP Cloud in Cloud ERP Public&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;Join us to discover how to build extensions, applications, and services with the ABAP Cloud development model, using the ABAP RESTful application programming model and generative AI. You will learn how to extend standard SAP applications, consume public SAP APIs, and build new apps and services from scratch. Get practical insights through exercises and take the opportunity to ask your questions.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Ingo Bräuninger (SAP), Carine Tchoutouo Djomo (SAP),&amp;nbsp;Volker Drees (SAP), Steffen Mattes (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749650347432001y6fi" target="_blank" rel="noopener noreferrer"&gt;DT266 – Troubleshoot and Optimize ABAP Cloud Extensions in Cloud ERP&lt;/A&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Ensuring optimal performance and stability of your ABAP Cloud-based extensions is crucial to long-term success. Learn advanced techniques and best practices for troubleshooting and optimizing custom code in the Cloud ERP. Use powerful tools like ABAP Cross Trace to get deep insights into execution flows and resource consumption.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Steffen Mattes (SAP), Juergen Reidl (SAP), Thomas Alexander Ritter (SAP), Thomas Fiedler (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-362366338"&gt;&lt;span class="lia-unicode-emoji" title=":waving_hand:"&gt;👋&lt;/span&gt;Join Us&lt;/H2&gt;&lt;P&gt;I hope this overview gives you even more reasons to join us at one of the &lt;A href="https://www.sap.com/events/teched.html" target="_self" rel="noopener noreferrer"&gt;SAP TechEd 2025 tour stops&lt;/A&gt;&amp;nbsp;in Berlin (DE), Louisville (US), Sydney (AU), Bangalore (IN), Birmingham (UK), or Hamburg (DE)&amp;nbsp;– or attend online, free of charge!&lt;/P&gt;&lt;P&gt;We look forward to meeting and interacting with you! &lt;span class="lia-unicode-emoji" title=":handshake:"&gt;🤝&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;SPAN&gt;In the meantime, you can watch the replays &lt;/SPAN&gt;&lt;SPAN&gt;of last year's events:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-sap-teched-in-2024/ba-p/13783420" target="_blank"&gt;ABAP Cloud at SAP TechEd Virtual 2024&lt;/A&gt;&amp;nbsp;&lt;SPAN&gt;and&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/abap-cloud-at-devtoberfest-by-sap-teched-2024/ba-p/13789730" target="_blank"&gt;ABAP Cloud at SAP's Devtoberfest in 2024&lt;/A&gt;&lt;SPAN&gt;.&amp;nbsp;You can also have a look at the&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":fire:"&gt;🔥&lt;/span&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-devtoberfest-2025/ba-p/14187974" target="_self"&gt;ABAP Cloud sessions at the upcoming Devtoberfest 2025&lt;/A&gt;, running online and free of charge from September 29 to October 24, 2025! &lt;span class="lia-unicode-emoji" title=":handshake:"&gt;🤝&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Stay tuned &lt;SPAN&gt;–&lt;/SPAN&gt;&amp;nbsp;and see you there!&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-sap-teched-in-2025/ba-p/14187974"/>
    <published>2025-08-22T20:27:47.137000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/setting-default-values-in-rap-entity-creation-default-values-functions/ba-p/14188152</id>
    <title>Setting Default Values in RAP Entity Creation: Default Values Functions, Actions, and Augmentation</title>
    <updated>2025-08-23T23:30:51.317000+02:00</updated>
    <author>
      <name>MioYasutake</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/789</uri>
    </author>
    <content>&lt;P&gt;Setting default values when creating a new entity is a common requirement in RAP-based application development. Currently, there are three options available:&amp;nbsp;&lt;STRONG&gt;Default Values Function, Default Factory Action, and Augmentation&lt;/STRONG&gt;. In this blog post, I will walk through the implementation of each technique and explain when to use them.&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1737982912"&gt;Quick Comparison of Defaulting Options in RAP&lt;/H2&gt;&lt;P&gt;Here is a summary of the three options for setting default values in RAP entity creation.&lt;/P&gt;&lt;TABLE border="1" width="98.55855969778904%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="25%"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;Default Values Function&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;Default Factory Action&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;Augmentation&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Can set default values for the root entity?&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;&lt;P&gt;Can accept parameters?&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;✖&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;✖&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;&lt;P&gt;Can create child entities along with the root entity?&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;✖&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Can set defaults when creating a child entity independently?&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;✖&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-1541469407"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1344955902"&gt;When to Use Each Approach&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Default Values Function&lt;/STRONG&gt;: Best when you want to set static default values. “Static” here still allows values depending on runtime context, such as the logged-in user, the current date, values from related entities.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Default Factory Action&lt;/STRONG&gt;: Use this when defaults need to be determined dynamically based on user input. It can also create child entities together with the root entity. However, it cannot be used for creating child entities independently; in that case, use a Default Values Function or Augmentation.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Augmentation&lt;/STRONG&gt;: This is defined at the &lt;STRONG&gt;projection layer&lt;/STRONG&gt;, not at the base behavior definition. It is mainly useful when you cannot or do not want to change the base behavior.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1148442397"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-951928892"&gt;Notes on Combining the Methods&lt;/H2&gt;&lt;P&gt;These methods &lt;STRONG&gt;cannot be combined&lt;/STRONG&gt; for the same entity.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Default Values Function + Augmentation&lt;/STRONG&gt; → Both are called, but only the values from the Default Values Function are applied.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Default Values Function + Default Factory Action&lt;/STRONG&gt; → Only the action is executed, but no default values are set.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Default Factory Action + Augmentation&lt;/STRONG&gt; → Only the action is executed, but no default values are set.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;In practice, always choose one method per entity.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;&lt;EM&gt;The above results are based on my own testing, not on official documentation. There may be inaccuracies.&lt;/EM&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1013580825"&gt;&amp;nbsp;&lt;/H4&gt;&lt;H2 id="toc-hId-558901882"&gt;Sample Code&lt;/H2&gt;&lt;P&gt;In all of the following examples, the root entity is &lt;STRONG&gt;Employee&lt;/STRONG&gt;&amp;nbsp;and the child entity is &lt;STRONG&gt;Address&lt;/STRONG&gt;.&lt;BR /&gt;Each method demonstrates how to set default values for &lt;STRONG&gt;Employee&lt;/STRONG&gt;&amp;nbsp;as well as for Address&amp;nbsp;(when applicable).&lt;/P&gt;&lt;H3 id="toc-hId-491471096"&gt;1. Default Values Function&lt;/H3&gt;&lt;H4 id="toc-hId-424040310"&gt;Behavior Definition&lt;/H4&gt;&lt;P&gt;Define default values functions.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Note: &lt;STRONG&gt;GetDefaultsForCreate&lt;/STRONG&gt; is the predefined function name and can be omitted.&lt;/EM&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  // Default values for the root entity  
  create {default function GetDefaultsForCreate; }

  // Default values for the child entity (via create-by-association)  
  association _Address {create {default function GetDefaultsForCBA;}  with draft;}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-227526805"&gt;Behavior Projection&lt;/H4&gt;&lt;P&gt;Expose default values functions.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  use function GetDefaultsForCreate;
  use function GetDefaultsForCBA;&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--466703795"&gt;Behavior Implementation&lt;/H4&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD GetDefaultsForCreate.
    result = value #( for key in keys (
               %cid = key-%cid
               %param-LastName = 'Default Last Name'
                ) ).
  ENDMETHOD.

  METHOD GetDefaultsForCBA.
    result = value #( for key in keys (
                      %tky = key-%tky
                      %param-Purpose = 'Default Purpose'
                    ) ).
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--369814293"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--566327798"&gt;2.&amp;nbsp;&lt;STRONG&gt;Default Factory Action&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId--1056244310"&gt;Behavior Definition&lt;/H4&gt;&lt;P&gt;Define a default factory action. In this example, an input parameter ZABS_EMPLOYEE_INPUT is used. If no input is required, the parameter can be omitted.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;static default factory action MyDefaultActionForCreate parameter ZABS_EMPLOYEE_INPUT [1];&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;ZABS_EMPLOYEE_INPUT is defined as a CDS abstract entity.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Input for employee default action'
define abstract entity ZABS_EMPLOYEE_INPUT
{
    @EndUserText.label: 'Employee Type'
    EmployeeType: abap.int1;    
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--1252757815"&gt;Behavior Projection&lt;/H4&gt;&lt;P&gt;Expose the default factory action.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  use action MyDefaultActionForCreate;&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--1449271320"&gt;Behavior Implementation&lt;/H4&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD MyDefaultActionForCreate.
    DATA employee_create TYPE TABLE FOR CREATE zr_employee_2508.
    DATA employee_create_line TYPE STRUCTURE FOR CREATE zr_employee_2508.
    DATA address_create TYPE TABLE FOR CREATE zr_employee_2508\_Address.
    DATA address_create_line TYPE STRUCTURE FOR CREATE zr_employee_2508\_Address.

    LOOP AT keys INTO DATA(key).
      " Set default data for Employee
      employee_create_line = VALUE #(
        %cid = key-%cid
        %is_draft = key-%param-%is_draft
        FirstName = SWITCH #( key-%param-EmployeeType
                              WHEN 1 THEN 'Default 1'
                              WHEN 2 THEN 'Default 2'
                              WHEN 3 THEN '' )
        %control = VALUE #( FirstName = if_abap_behv=&amp;gt;mk-on )
       ).
      APPEND employee_create_line TO employee_create.

      " Set default data for Address
      address_create_line = VALUE #(
       %cid_ref = key-%cid
       %is_draft = key-%param-%is_draft
       %target = VALUE #( ( %cid = sy-tabix
                            %is_draft = key-%param-%is_draft
                            Purpose = 'Default'
                            %control = VALUE #( Purpose = if_abap_behv=&amp;gt;mk-on ) ) )
      ).
      APPEND address_create_line TO address_create.
    ENDLOOP.

    "Create new instance of Employee
    MODIFY ENTITIES OF zr_employee_2508 IN LOCAL MODE
      ENTITY Employee
      CREATE FROM employee_create
      CREATE BY \_Address
      FROM address_create
      MAPPED DATA(mapped_create).

    mapped-employee = mapped_create-employee.
    mapped-address = mapped_create-Address.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--1352381818"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--1548895323"&gt;3. Augmentation&lt;/H3&gt;&lt;H4 id="toc-hId--2038811835"&gt;Behavior Projection&lt;/H4&gt;&lt;P&gt;Augmentations are defined only in the Behavior Projection. The keyword "&lt;STRONG&gt;augment&lt;/STRONG&gt;" is used to define them.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  // Default values for the root entity  
  use create (augment);

  // Default values for the child entity (via create-by-association)  
  use association _Address {create (augment); with draft;}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-2059641956"&gt;Behavior Implementation&lt;/H4&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD augment_create.
    DATA employee_create TYPE TABLE FOR CREATE zr_employee_2508.
    DATA address_create TYPE TABLE FOR CREATE zr_employee_2508\_Address.
    DATA address_create_line TYPE STRUCTURE FOR CREATE zr_employee_2508\_Address.
    DATA relates_create TYPE abp_behv_relating_tab.
    DATA tabix TYPE sy-tabix.

    employee_create = CORRESPONDING #( entities ).

    LOOP AT employee_create ASSIGNING FIELD-SYMBOL(&amp;lt;employee&amp;gt;).
      " Count table index for generating unique %cid for Address
      tabix = sy-tabix.
      APPEND tabix TO relates_create.

      " Set Default Data for Employee
      &amp;lt;employee&amp;gt;-DateOfBirth = '19900101'.
      &amp;lt;employee&amp;gt;-%control-DateOfBirth = if_abap_behv=&amp;gt;mk-on.

      " Set Default Data for Address
      address_create_line = VALUE #( %cid_ref = &amp;lt;employee&amp;gt;-%cid
                     %is_draft = &amp;lt;employee&amp;gt;-%is_draft
                     %key = &amp;lt;employee&amp;gt;-%key
                     %target = VALUE #( ( %cid = tabix
                                          %is_draft = &amp;lt;employee&amp;gt;-%is_draft
                                          Purpose = 'Augmented Address'
                                          %control = VALUE #( Purpose = if_abap_behv=&amp;gt;mk-on )
                                        ) )
                     ).
      APPEND address_create_line TO address_create.
    ENDLOOP.

    MODIFY AUGMENTING ENTITIES OF zr_employee_2508
      ENTITY Employee
      CREATE FROM employee_create
      CREATE BY \_Address
      FROM address_create
      RELATING TO entities BY relates_create.
  ENDMETHOD.

  METHOD augment_cba_Address.
    DATA address_create TYPE TABLE FOR CREATE zr_employee_2508\_Address.
    DATA relates_update TYPE abp_behv_relating_tab.

    address_create = CORRESPONDING #( DEEP entities ).

    LOOP AT address_create ASSIGNING FIELD-SYMBOL(&amp;lt;address&amp;gt;).
      LOOP AT &amp;lt;address&amp;gt;-%target ASSIGNING FIELD-SYMBOL(&amp;lt;target&amp;gt;).
        &amp;lt;target&amp;gt;-Purpose = 'Augmented Address CBA'.
        &amp;lt;target&amp;gt;-%control = VALUE #( Purpose = if_abap_behv=&amp;gt;mk-on ).
      ENDLOOP.
    ENDLOOP.

    MODIFY AUGMENTING ENTITIES OF zr_employee_2508
      ENTITY Employee
      CREATE BY \_Address
      FROM address_create.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId--1676849140"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1873362645"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;When setting default values in RAP, you can choose between &lt;STRONG&gt;Default Values Function&lt;/STRONG&gt;, &lt;STRONG&gt;Default Factory Action&lt;/STRONG&gt;, and &lt;STRONG&gt;Augmentation&lt;/STRONG&gt;.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Use &lt;STRONG&gt;Default Values Function&lt;/STRONG&gt; for static defaults.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Use &lt;STRONG&gt;Default Factory Action&lt;/STRONG&gt; for dynamic defaults or when creating child entities together with the root.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Use &lt;STRONG&gt;Augmentation&lt;/STRONG&gt; only at the projection layer, when the base behavior cannot be changed.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;Since these methods cannot be combined for the same entity, always pick the one that best matches your scenario.&lt;/P&gt;&lt;H2 id="toc-hId--2069876150"&gt;References&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/operation-defaulting" target="_self" rel="noopener noreferrer"&gt;Operation Defaulting (Default Values Function) | SAP Help Portal&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/doc/abapdocu_cp_index_htm/CLOUD/en-US/ABENBDL_ACTION_DEFAULT_FACTORY.html" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;RAP - Default Factory Action&amp;nbsp; | ABAP Keyword Documentation&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/fc4c71aa50014fd1b43721701471913d/fd45f76da7ab49bd8a6ef94a4b64f340.html" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;Editing Text for Supplements (Augmentation) | SAP Help Portal&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/setting-default-values-in-rap-entity-creation-default-values-functions/ba-p/14188152"/>
    <published>2025-08-23T23:30:51.317000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/deep-dive-and-experience-sharing-into-sap-joule-for-developers-j4d/ba-p/14202765</id>
    <title>Deep Dive and Experience Sharing into SAP Joule for Developers(J4D)</title>
    <updated>2025-09-01T10:51:09.610000+02:00</updated>
    <author>
      <name>ChandraBhushanSingh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/123700</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt; This blog is not written by any LLM.&lt;/P&gt;&lt;P&gt;Well, to start with, Joule for Developers, let us understand what it is?&lt;/P&gt;&lt;P&gt;Many people have a misconception that Joule for Developers or J4D is just an ABAP AI capability. But it is much more beyond ABAP. Joule for Developers(J4D) is&amp;nbsp;&lt;SPAN&gt;collective name for the AI-powered design-time capabilities across SAP Build and ABAP&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;It includes new and existing features enabled by Joule in:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Build Code&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Build Apps&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Build Process Automation&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;ABAP in SAP BTP and S/4HANA Cloud Public Edition&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;These capabilities help developers build faster, code smarter, and automate better. Is that true? I will my honest opinion for some of them.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I have personally worked on SAP Build Apps, SAP Build Code and Joule for Developers, ABAP AI. I started with a lot of ambiguity and finally I made a mark that I could now explain it to our customers and users.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;SAP Build Apps allow for generating pages to handle data entities and generate sample data automatically. It means, whenever you integrate any oData service/REST API/SAP BTP Destination, you get an option to automatically create the User Interface and also generate sample data.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Build Code, has evolved through multiple iterations and seems it is still evolving.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Created Fiori element app using Image&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Created a series of projects with prompts&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Created test data&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With ABAP AI, I could create a report with the suggestions popping up in run time and that too contextually aware code prompts also known to be predictive code completion feature. We called it Ghost Code. But trust me sometimes they are really good too.&amp;nbsp;&lt;/P&gt;&lt;P&gt;I see the ABAP and CDS unit scripts getting generated in no time. It was good again on this parameter.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Code explain, well I created small projects, hence feel it is good to have comments. But the true colors will be visible when you look at the repository of thousands lines of code written by someone and you have no clue of what it is. Using your skills you debug the code to understand what each block/function is doing. &lt;STRONG&gt;It is a life saver in this scenario.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP Build Code has the GenAI embedded as part of the service itself. There is no explicit step which need to perform other than just subscribing to this service via the Boosters (from the SAP BTP Global Account).&lt;/P&gt;&lt;P&gt;For SAP Build Apps and SAP Build Process Automation, everything under the new SAP Build Offering, will have the GenAI capability turned off by default. Then, how do you turn it on?&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to your SAP BTP Subaccount and access the SAP Build Apps and SAP Build Process Automation service from the 'Instances and Subscription' option&lt;/LI&gt;&lt;LI&gt;SAP Build Lobby will open&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Step 1 - Access SAP Build Lobby" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307593i7E3BFEFFAF1F7B9E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="blog_genai.png" alt="Step 1 - Access SAP Build Lobby" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Step 1 - Access SAP Build Lobby&lt;/span&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Now go to the 'Control Tower' in the right hand side panel, last option&lt;SPAN&gt;&amp;nbsp;and then click on the 'Generative AI' tile in the top row, right hand side 'Tenant Configuration'&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Step 2 - Click on Control Tower Option in Left Hand Pane" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307592i47661B4253B39EFA/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="blog_genai1.png" alt="Step 2 - Click on Control Tower Option in Left Hand Pane" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Step 2 - Click on Control Tower Option in Left Hand Pane&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Switch on the toggle button of Generative AI&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Step 3 - Click on Generative AI tile in the right hand pane" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307591i872063908D8D8DF5/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="blog_genai2.png" alt="Step 3 - Click on Generative AI tile in the right hand pane" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Step 3 - Click on Generative AI tile in the right hand pane&lt;/span&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Read the AI Terms and Conditions and scroll to the bottom of the Terms and Conditions to enable the checkbox of 'I have read the terms and conditions' - this is called as 'Scroll wrap agreement' in the language of Law - it means you agree to the Terms and Conditions and read till the last of the agreement.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Step 5 - Read/Scroll to the end of the AI Terms &amp;amp; Conditions" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307594i068E5BEE9B1A6CDA/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="blog_genai3.png" alt="Step 5 - Read/Scroll to the end of the AI Terms &amp;amp; Conditions" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Step 5 - Read/Scroll to the end of the AI Terms &amp;amp; Conditions&lt;/span&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Click on the checkbox of 'I have read the terms and conditions'&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Step 6 - Click on 'Accept' button on the right hand bottom corner" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307596iC4C66B6BE01BF572/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="blog_genai4.png" alt="Step 6 - Click on 'Accept' button on the right hand bottom corner" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Step 6 - Click on 'Accept' button on the right hand bottom corner&lt;/span&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Now click on the 'Accept' button&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Step 4 - Turn on the toggle of Enable Generative AI features" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307595i56E831D3A9DB7BB6/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="blog_genai5.png" alt="Step 4 - Turn on the toggle of Enable Generative AI features" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Step 4 - Turn on the toggle of Enable Generative AI features&lt;/span&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;That's it. Now you can explore the GenAI capability inside SAP Build Apps and SAP Build Process Automation.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Some people have questions whether they need to sign a 0 USD AI Terms and Conditions contract to activate the GenAI capability for J4D. The answer is, except for 'Joule for Developers ABAP AI' capability, you do NOT need to sign an explicit contract for AI Terms and Conditions. They are all embedded within the services.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Well this will be an evolving document, where I will keep updating my reviews on each of these services mentioned. Stay tuned!&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/deep-dive-and-experience-sharing-into-sap-joule-for-developers-j4d/ba-p/14202765"/>
    <published>2025-09-01T10:51:09.610000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-simple-example-of-a-sap-rap-application-based-on-legacy-api-without-uuid/ba-p/14184282</id>
    <title>A simple example of a SAP RAP Application based on Legacy API without UUID keys</title>
    <updated>2025-09-01T11:19:39.744000+02:00</updated>
    <author>
      <name>cseijas</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/102138</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1608782083"&gt;Introduction&lt;/H1&gt;&lt;P&gt;In SAP RAP, it is very easy to develop an application when the entities involved use UUIDs as keys. However, there are lots of legacy APIs and data models that does not have these type of keys. Usually this legacy APIs have the following characteristics in common:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;They have a CREATE operation that generates the entity (and subentities) in one call. The successful execution of this create operation generates the new entity Id (e.g.&amp;nbsp;BAPI_PO_CREATE1 with internal numbering)&lt;/LI&gt;&lt;LI&gt;They have an UPDATE operation that changes the entity (and subentities) in one call. Usually this operation contains&amp;nbsp; BAPIUPDATE structures to indicate which fields are being changed (e.g.&amp;nbsp;BAPI_PO_CHANGE).&lt;/LI&gt;&lt;LI&gt;Somentimes they have a DELETE operation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Although RAP framework allows to reuse these objects, I had some doubts when implementing my first real cases (when to call each API Operation, for example), so I write this blog in order to summarize my findings and provide a simple example of an RAP application with a UI that allows to execute CRUD operations in an entity that has a Legacy API to maintain it.&amp;nbsp;&lt;/P&gt;&lt;P&gt;In order to keep things simple and do not depend in the specific configuration of any system, the development has been based in the Unmanaged Transactional App example of the ABAP Restful Programming Model Documentation (&lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/fc4c71aa50014fd1b43721701471913d/f6cb3e3402694f5585068e5e5161a7c1.html?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Developing Unmanaged Transactional Apps&lt;/A&gt;), although in our case we will implement a managed app with unmanaged save and late numbering. Also, only the relevant elements for the example have been included in this article, not covering other elements that are similar to the Unmanaged Transactional App Example (Behavior Projection, Projection Views, Metadata Extensions, etc...). The complete source code of the application can be found in this GitHub repository:&amp;nbsp;&lt;A href="https://github.com/cesarsn/RAP-LateNumbering-UnmanagedSave.git" target="_self" rel="nofollow noopener noreferrer"&gt;https://github.com/cesarsn/RAP-LateNumbering-UnmanagedSave.git&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Mor information can be found in the following blogs that were used as reference along with SAP Help:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-bapis-in-rap/ba-p/13560875" target="_self"&gt;Using BAPIs in RAP&lt;/A&gt;&amp;nbsp;by Marcel Hermanns&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/exposing-bapi-as-odata-api-using-rap-facade/ba-p/13571926" target="_self"&gt;Exposing BAPI as OData API using RAP Facade&lt;/A&gt;&amp;nbsp; by Marcel Wahl&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1412268578"&gt;Legacy Data Model&lt;/H1&gt;&lt;P&gt;As was stated previously, in order to do the example, we will use the Flight Reference Scenario of SAP RAP (&lt;A href="https://github.com/SAP-samples/abap-platform-refscen-flight" target="_self" rel="nofollow noopener noreferrer"&gt;https://github.com/SAP-samples/abap-platform-refscen-flight&lt;/A&gt;), using the legacy objects that are defined in package&amp;nbsp;/DMO/FLIGHT_LEGACY.&amp;nbsp;&amp;nbsp;We will use the following API function modules to maintain Travels (table&amp;nbsp;/DMO/TRAVEL) and Bookings (table /DMO/BOOKING):&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;/DMO/FLIGHT_TRAVEL_CREATE: creates a new travel (and bookings).&lt;/LI&gt;&lt;LI&gt;/DMO/FLIGHT_TRAVEL_UPDATE: updates a travel (and its bookings)&lt;/LI&gt;&lt;LI&gt;/DMO/FLIGHT_TRAVEL_DELETE: deletes a travel (and its bookings)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For this example, we will&amp;nbsp;try to avoid numbering gaps when creating travels, and&amp;nbsp; the user should be allowed to manually inform the booking id during creation of a new booking (similar to giving the item id for the Purchase Order or Sales Order), with the system proposing next booking id to be used.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1215755073"&gt;RAP Entities&lt;/H1&gt;&lt;H3 id="toc-hId-1277407006"&gt;Travel data&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Travel data'
@Metadata.ignorePropagatedAnnotations: true
define root view entity ZI_Travel_U_CSN 
  as select from /dmo/travel as Travel -- the travel table is the data source for this view
  composition [0..*] of ZI_Booking_U_CSN as _Booking
  association [0..1] to /DMO/I_Agency    as _Agency   on $projection.AgencyID = _Agency.AgencyID
  association [0..1] to /DMO/I_Customer  as _Customer on $projection.CustomerID = _Customer.CustomerID
  association [0..1] to I_Currency       as _Currency on $projection.CurrencyCode = _Currency.Currency
  association [1..1] to /DMO/I_Travel_Status_VH as _TravelStatus on $projection.Status = _TravelStatus.TravelStatus
{
    
  key Travel.travel_id     as TravelID,
      Travel.agency_id     as AgencyID,
      Travel.customer_id   as CustomerID,
      Travel.begin_date    as BeginDate,
      Travel.end_date      as EndDate,    
      @Semantics.amount.currencyCode: 'CurrencyCode'
      Travel.booking_fee   as BookingFee,
      @Semantics.amount.currencyCode: 'CurrencyCode'
      Travel.total_price   as TotalPrice,
      Travel.currency_code as CurrencyCode,
      Travel.description   as Memo,
      Travel.status        as Status,
      @Semantics.systemDateTime.localInstanceLastChangedAt: true 
      cast( '0' as abp_locinst_lastchange_tstmpl ) as LocalLastChangeDateTime,
      Travel.createdat as CreatedAt,
      Travel.createdby as CreatedBy,
      Travel.lastchangedat as LastChangedAt,
      Travel.lastchangedby as LastChangedBy,
      /* Associations */
      _Booking,
      _Agency,
      _Customer,
      _Currency,
      _TravelStatus
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;It has been added a fixed value for attribute&amp;nbsp;LocalLastChangeDateTime as this will be the local Etag field that will be used in draft entity.&lt;/P&gt;&lt;H3 id="toc-hId-1080893501"&gt;Booking Data&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Booking data'
@Metadata.ignorePropagatedAnnotations: true
define view entity ZI_Booking_U_CSN 
  as select from /dmo/booking as Booking
  association        to parent ZI_Travel_U_CSN     as _Travel     on  $projection.TravelID = _Travel.TravelID
  association [1..1] to /DMO/I_Customer            as _Customer   on  $projection.CustomerID = _Customer.CustomerID
  association [1..1] to /DMO/I_Carrier             as _Carrier    on  $projection.AirlineID = _Carrier.AirlineID
  association [1..1] to /DMO/I_Connection          as _Connection on  $projection.AirlineID    = _Connection.AirlineID
                                                                  and $projection.ConnectionID = _Connection.ConnectionID
{
  key Booking.travel_id     as TravelID,
  key Booking.booking_id    as BookingID,
      Booking.booking_date  as BookingDate,
      Booking.customer_id   as CustomerID,
      Booking.carrier_id    as AirlineID,
      Booking.connection_id as ConnectionID,
      Booking.flight_date   as FlightDate,
      @Semantics.amount.currencyCode: 'CurrencyCode'
      Booking.flight_price  as FlightPrice,
      Booking.currency_code as CurrencyCode,
      /* Associations */
      _Travel,
      _Customer,
      _Carrier,
      _Connection
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Take into account that natural keys have been chosen (TravelId and BookingId) for this entity. This will have and impact in our numbering procedure as will be explained later.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-626214558"&gt;Behavior Definition&lt;/H1&gt;&lt;P&gt;The Behavior Definition of this BO is as follows:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_i_travel_u_csn unique;
strict ( 2 );
with draft;

define behavior for ZI_Travel_U_CSN alias Travel
with unmanaged save
draft table ZITRVL_UCSND
lock master
total etag LastChangedAt
authorization master ( instance )
etag master LocalLastChangeDateTime
late numbering
{
  create;
  update;
  delete;
  field ( readonly ) TravelID;
  association _Booking { create {default function GetDefaultsForBookings;} with draft;  }

  draft action Edit;
  draft action Activate optimized;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare;

  mapping for /dmo/s_travel_in
  control /dmo/s_travel_intx
    {
      AgencyID      = agency_id;
      BeginDate     = begin_date;
      BookingFee    = booking_fee;
      CurrencyCode  = currency_code;
      CustomerID    = customer_id;
      EndDate       = end_date;
      Memo          = description;
      Status        = status;
      TotalPrice    = total_price;
      TravelID      = travel_id;
    }
}

define behavior for ZI_Booking_U_CSN alias Booking
with unmanaged save
draft table ZIBKNG_UCSND
lock dependent by _Travel
authorization dependent by _Travel
etag dependent by _Travel
late numbering
{
  update;
  delete;
  field ( readonly ) TravelID;
  field (readonly:update) BookingID;

  association _Travel {with draft;}

  mapping for /DMO/S_BOOKING_IN control /dmo/s_booking_intx
    {
      AirlineID    = carrier_id;
      BookingDate  = booking_date;
      BookingID    = booking_id;
      ConnectionID = connection_id;
      CurrencyCode = currency_code;
      CustomerID   = customer_id;
      FlightDate   = flight_date;
      FlightPrice  = flight_price;
      TravelID     = travel_id;
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Take into account that in order to keep the example simple and focus on the updating logic, we do not include any validation or determination that will improve the usability of the application (for example mandatory fields, date coherence checks, etc...).&lt;/P&gt;&lt;P&gt;Let us check now the relevant points of this Behavior Definition.&lt;/P&gt;&lt;H2 id="toc-hId-558783772"&gt;Managed Implementation with Unmanaged Save&lt;/H2&gt;&lt;P&gt;Being the application Managed allows us to avoid all the coding that has to be implemented in an unmanaged applicationm and at the same time be able to reuse the API functions when saving data with the Unmanaged Save.&lt;/P&gt;&lt;P&gt;From my point of view, this is the easiest option to develop and app when we have a Legacy API: the runtime takes care of all the logic to create/update the entities during the interaction phase, while we can focus on business logic and fine tuning the application by using determinations, validations, side effects, ect...&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-362270267"&gt;Late Numbering&lt;/H2&gt;&lt;P&gt;In our case, Travel entity is created by API function&amp;nbsp;/DMO/FLIGHT_TRAVEL_CREATE with the id of the Travel being generated in this call.&amp;nbsp; As we prefer not to have gaps in our application, we are forced to use Late Numbering (as with Early Numbering an assigned travel Id will be lost if the user discards the draft during creation). This decission has however the following implications:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Draft table will have a new key field (&lt;SPAN&gt;draftuuid) that allows the assigment of a temporary key during entity creation. This is traslated to OData entity, where we have one additional key attribute (DraftUUID).&amp;nbsp; Take into account that DraftUUID is only informed by the runtime when creating new entities. When editing an existing entity it will be empty.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;As Booking entity includes Key fields of the Tavel Key (TravelId), this forces us to define also Late Numbering for this entity.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-165756762"&gt;Other relevant points&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;As an UI App will be generated, draft handling is defined for this BO.&lt;/LI&gt;&lt;LI&gt;It is included a mapping for the structures that uses our API functions (both for actual values and for updated flags).&lt;/LI&gt;&lt;LI&gt;As we want to propose next booking id for the user when creating a Booking entity, we define a defaults function&amp;nbsp;&lt;SPAN&gt;GetDefaultsForBookings for the "create by association" operation.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--159839462"&gt;Behavior Implementation&lt;/H1&gt;&lt;P&gt;Behavior is implemented with Behavior Pool&amp;nbsp;&lt;SPAN&gt;zbp_i_travel_u_csn. Let us check the relevant elements for Local Types include, when the RAP BO Business Logic is defined.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-119984109"&gt;&lt;SPAN&gt;Handler class LHC_TRAVEL&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;This class correspond to Business Logic of entity Travel.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_Travel DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR Travel RESULT result.

    METHODS GetDefaultsForBookings FOR READ
      IMPORTING keys FOR FUNCTION Travel~GetDefaultsForBookings RESULT result.
ENDCLASS.

CLASS lhc_Travel IMPLEMENTATION.

  METHOD get_instance_authorizations.
    "To-do: Implement instance authorization
  ENDMETHOD.

  METHOD GetDefaultsForBookings.
    "This method will default the id of the new booking by reading all the bookings of
    "the travel and incrementing the highest id by 1.
    "Also, the booking date is set to the current system date.
    DATA: lt_read_keys TYPE TABLE FOR READ IMPORT ZI_Travel_U_CSN\\Travel\_Booking,
          ls_read_key  LIKE LINE OF lt_read_keys,
          ls_result    LIKE LINE OF result.
    DATA: lv_new_booking_id TYPE /dmo/booking_id.

    LOOP AT keys INTO DATA(ls_key).
      ls_read_key-%tky = ls_key-%tky.   "%TKY includes %is_draft, %pid and TravelId
      INSERT ls_read_key INTO TABLE lt_read_keys.
    ENDLOOP.

    READ ENTITIES OF ZI_Travel_U_CSN IN LOCAL MODE
        ENTITY Travel BY \_Booking
           FIELDS ( TravelID BookingId )
           WITH lt_read_keys
           RESULT DATA(lt_bookings).

    SORT lt_bookings BY %is_draft %pidparent TravelId BookingId DESCENDING.
    DELETE ADJACENT DUPLICATES FROM lt_bookings COMPARING %is_draft %pidparent TravelId.

    LOOP AT keys INTO ls_key.
      CLEAR: ls_result, lv_new_booking_id.
      TRY.
          DATA(ls_booking) = lt_bookings[ KEY entity %is_draft = ls_key-%is_draft %pidparent = ls_key-%pid TravelId = ls_key-TravelID ].
          lv_new_booking_id = ls_booking-BookingID + 1.
        CATCH cx_root.
          lv_new_booking_id = 1.
      ENDTRY.
      ls_result-%tky = ls_key-%tky.
      ls_result-%param-TravelID    = ls_key-TravelID.
      ls_result-%param-BookingID   = lv_new_booking_id.
      ls_result-%param-BookingDate = cl_abap_context_info=&amp;gt;get_system_date( ).
      INSERT ls_result INTO TABLE result.
    ENDLOOP.
  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;As you can see, in method GetDefaultsForBookings we retrieve the current Bookings that are defined for a Travel, and include in RESULT attribute the next booking id and the system date as default values for the new entity that will be created. The relevant point to signal out is that, as we have Late Numbering for travel, %TKY has a new component (%PID) that will include the preliminary Id (draftuuid) when creating a new entity. Hence, all the EML operations should take into account this component when retrieving/updating values.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--76529396"&gt;&lt;SPAN&gt;Saver Class LSC_ZI_TRAVEL_U_CSN&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;This class is responsible for the save logic of our Business Object. As we are going to call the API functions for CRUD operations in methods that as default are not supposed to raise errors (ADJUST_NUMBERS and SAVE_MODIFIED, explained later), we have to change the default superclass (CL_ABAP_BEHAVIOR_SAVER) with CL_ABAP_BEHAVIOR_SAVER_FAILED, that includes changing parameters for failed keys and response messages for these methods. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The general logic is then:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;In ADJUST_NUMBERS the API function for the Travel CREATE will be called (optionally including its bookings), as the returned Travel Id has to be mapped in this method with the premilinary id.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In SAVE_MODIFIED method it is included the UPDATE/DELETE API Calls.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;It has to be noted that SAVE_MODIFIED will be also called during the CREATE operation after the ADJUST_NUMBERS. Hence, we have to take care of not executing any logic in this case, as the CREATE API function has already been executed in ADJUST_NUMBERS.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With this, the definition of the class is as follows (there are some axiliary types and methods defined that will be explained later):&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lsc_ZI_TRAVEL_U_CSN DEFINITION INHERITING FROM cl_abap_behavior_saver_failed.
  PROTECTED SECTION.
    TYPES: BEGIN OF ts_key,
             travelid      TYPE /dmo/travel_id,
             delete_entity TYPE abap_boolean,
           END OF ts_key,
           tt_keys TYPE STANDARD TABLE OF ts_key WITH DEFAULT KEY.

    METHODS adjust_numbers REDEFINITION.

    METHODS save_modified REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.

  PRIVATE SECTION.
    TYPES: ts_read_result_travel  TYPE STRUCTURE FOR READ RESULT zi_travel_u_csn,
           ts_read_result_booking TYPE TABLE FOR READ RESULT zi_booking_u_csn,
           ts_failed              TYPE RESPONSE FOR FAILED LATE zi_travel_u_csn,
           ts_reported            TYPE RESPONSE FOR REPORTED LATE zi_travel_u_csn,
           ts_mapped              TYPE RESPONSE FOR MAPPED LATE zi_travel_u_csn,
           ts_request_change      TYPE REQUEST FOR CHANGE zi_travel_u_csn,
           ts_request_delete      TYPE REQUEST FOR DELETE zi_travel_u_csn.

    METHODS _add_deleted_bookings
      IMPORTING
        is_key      TYPE lsc_zi_travel_u_csn=&amp;gt;ts_key
        delete      TYPE ts_request_delete
      CHANGING
        ct_booking  TYPE /dmo/t_booking_in
        ct_bookingx TYPE /dmo/t_booking_inx.

    METHODS _add_updated_bookings
      IMPORTING
        is_key      TYPE lsc_zi_travel_u_csn=&amp;gt;ts_key
        update      TYPE ts_request_change
      CHANGING
        ct_booking  TYPE /dmo/t_booking_in
        ct_bookingx TYPE /dmo/t_booking_inx.

    METHODS _add_new_bookings
      IMPORTING
        is_key      TYPE lsc_zi_travel_u_csn=&amp;gt;ts_key
        create      TYPE ts_request_change
      CHANGING
        ct_booking  TYPE /dmo/t_booking_in
        ct_bookingx TYPE /dmo/t_booking_inx.

    METHODS _process_key
      IMPORTING
        is_key   TYPE lsc_zi_travel_u_csn=&amp;gt;ts_key
        create   TYPE ts_request_change
        update   TYPE ts_request_change
        delete   TYPE ts_request_delete
      CHANGING
        failed   TYPE ts_failed
        reported TYPE ts_reported.

    METHODS _delete_travel
      IMPORTING
        is_key      TYPE lsc_zi_travel_u_csn=&amp;gt;ts_key
      EXPORTING
        et_messages TYPE /dmo/t_message.

    METHODS _update_travel
      IMPORTING
        is_key      TYPE lsc_zi_travel_u_csn=&amp;gt;ts_key
        create      TYPE ts_request_change
        update      TYPE ts_request_change
        delete      TYPE ts_request_delete
      EXPORTING
        et_messages TYPE /dmo/t_message.

    METHODS _get_processed_root_keys
      IMPORTING
        create          TYPE ts_request_change
        update          TYPE ts_request_change
        delete          TYPE ts_request_delete
      RETURNING
        VALUE(r_result) TYPE lsc_zi_travel_u_csn=&amp;gt;tt_keys.

    METHODS _create_travel
      IMPORTING
        is_travel    TYPE ts_read_result_travel
        it_bookings  TYPE ts_read_result_booking
      EXPORTING
        ev_travel_id TYPE /dmo/travel_id
      CHANGING
        failed       TYPE ts_failed
        reported     TYPE ts_reported
        mapped       TYPE ts_mapped.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now, we will review the relevant methods that we have to implement.&lt;/P&gt;&lt;H3 id="toc-hId--566445908"&gt;Method ADJUST_NUMBERS&lt;/H3&gt;&lt;P&gt;The signature of this method is as follows:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 508px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304086i3C6735E5F4565065/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As you can see, it includes FAILED and REPORTED parameters as is a subclass of&amp;nbsp;&lt;SPAN&gt;cl_abap_behavior_saver_failed class. It has also a MAPPED parameter to include the mapping between the preliminary ID (%PID) and the final Id of the new objects. This MAPPED structure contains two tables, one for the Travel and another for the Bookings.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MAPPED.jpg" style="width: 475px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304092i90E5F96C8D5CE066/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="MAPPED.jpg" alt="MAPPED.jpg" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In these tables, each record contains the premilinary id (%PID) of the new entity, the final id of each entity (component group %KEY) and an structure (%TMP) with the temporary key values that already have these entities in the interaction buffer. The objective of this method is to call the CREATE API function and populate %KEY structure with the corresponding Ids.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;For example, when creating a Travel with a Booking, MAPPED structure enters the method with this values (notice that BOOKING[1] - %TMP contains manually assigned Booking Id 1):&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="TRAVEL_BOOKING_IN.jpg" style="width: 507px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304280i47F6FFBFD59E45D3/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="TRAVEL_BOOKING_IN.jpg" alt="TRAVEL_BOOKING_IN.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And after the successful creation of the new travel with the booking, the updated values are as follows:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="TRAVEL_BOOKING_OUT.jpg" style="width: 511px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304283i5C80B322B631B318/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="TRAVEL_BOOKING_OUT.jpg" alt="TRAVEL_BOOKING_OUT.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Take into account that when creating a new booking for a existing travel, as the booking id is assigned during interaction phase, although no API call is done in this method, BOOKINGIDs have to be included in MAPPED structure by copying %TMP - BOOKINGID value.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Given this, the source code of methods ADJUST_NUMBERS and _CREATE_TRAVEL is then:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD adjust_numbers.
    "Create processing logic to adjust numbers if needed
    "Read travel and booking data from buffer, call the API function and
    "create travel

    "Two create options:
    "1.- Create a new travel (with bookings)
    "2.- Crate a new booking for a existing travel

    DATA: lt_travel_key TYPE TABLE FOR READ IMPORT ZI_Travel_U_CSN\\Travel.
    DATA: lt_booking_key TYPE TABLE FOR READ IMPORT ZI_Travel_U_CSN\\Booking.

    "Process only if there are changes
    CHECK mapped-travel IS NOT INITIAL OR mapped-booking IS NOT INITIAL.

    "Read operation is done with %PID, %TMP-TRAVELID (this is initial for new travels)
    LOOP AT mapped-travel INTO DATA(ls_mapped_travel).
      INSERT VALUE #( %pid = ls_mapped_travel-%pid %key = ls_mapped_travel-%tmp ) INTO TABLE lt_travel_key.
    ENDLOOP.
    "Read operation is done with %PID, %TMP-TRAVELID, %TMP-BOOKINGID
    LOOP AT mapped-booking INTO DATA(ls_mapped_booking).
      INSERT VALUE #( %pid = ls_mapped_booking-%pid %key = ls_mapped_booking-%tmp ) INTO TABLE lt_booking_key.
    ENDLOOP.

    READ ENTITIES OF ZI_Travel_U_CSN IN LOCAL MODE
        ENTITY Travel
           ALL FIELDS WITH CORRESPONDING #( lt_travel_key )
           RESULT DATA(lt_all_travels).

    READ ENTITIES OF ZI_Travel_U_CSN IN LOCAL MODE
        ENTITY Booking
           ALL FIELDS WITH CORRESPONDING #( lt_booking_key )
           RESULT DATA(lt_all_bookings).

    "Create travel with bookings (case 1)
    LOOP AT lt_all_travels INTO DATA(ls_travel).
      DATA(lt_bookings) = lt_all_bookings.
      DELETE lt_bookings WHERE %pidparent &amp;lt;&amp;gt; ls_travel-%pid.
      _create_travel(
        EXPORTING
          is_travel      = ls_travel
          it_bookings    = lt_bookings
        IMPORTING
          ev_travel_id   = ls_travel-TravelID
        CHANGING
          failed         = failed
          reported       = reported
          mapped         = mapped
      ).

    ENDLOOP.

    "Assign pending booking id from preliminary identifiers. Take into account that this values
    "are assigned during interaction phase
    "At this point, we will assign new bookings ids for existing travels (case 2)
    LOOP AT mapped-booking ASSIGNING FIELD-SYMBOL(&amp;lt;fs_booking&amp;gt;)
    WHERE bookingid IS INITIAL AND
          %tmp-TravelID IS NOT INITIAL AND
          %tmp-BookingID IS NOT INITIAL.
      &amp;lt;fs_booking&amp;gt;-TravelID  = &amp;lt;fs_booking&amp;gt;-%tmp-TravelID.
      &amp;lt;fs_booking&amp;gt;-Bookingid = &amp;lt;fs_booking&amp;gt;-%tmp-Bookingid.
    ENDLOOP.

  ENDMETHOD.

  METHOD _create_travel.

    "Call /DMO/FLIGHT_TRABEL_CREATE function to create travel and bookings
    "Take into account that this API requires two calls: 1 for create and 1 for save (persist data in database)

    DATA: ls_travel_out  TYPE /dmo/travel,
          ls_travel_in   TYPE /dmo/s_travel_in,
          ls_booking_in  TYPE /dmo/s_booking_in,
          lt_bookings_in TYPE /dmo/t_booking_in,
          lt_messages    TYPE /dmo/t_message.

    "Initialize buffers
    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_INITIALIZE'.

    ls_travel_in = CORRESPONDING #( is_travel MAPPING FROM ENTITY ).
    LOOP AT it_bookings INTO DATA(ls_booking).
      CLEAR: ls_booking_in.
      ls_booking_in = CORRESPONDING #( ls_booking MAPPING FROM ENTITY ).
      INSERT ls_booking_in INTO TABLE lt_bookings_in.
    ENDLOOP.

    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_CREATE'
      EXPORTING
        is_travel   = ls_travel_in
        it_booking  = lt_bookings_in
      IMPORTING
        es_travel   = ls_travel_out
        et_messages = lt_messages.

    "Map errors as failed
    DELETE lt_messages WHERE msgty NA 'EAX'.

    IF lt_messages[] IS NOT INITIAL.
      LOOP AT lt_messages INTO DATA(ls_message).
        INSERT VALUE #( %tky = is_travel-%tky
                        %msg = new_message( id       = ls_message-msgid
                                            severity = if_abap_behv_message=&amp;gt;severity-error
                                            number   = ls_message-msgno
                                            v1       = ls_message-msgv1
                                            v2       = ls_message-msgv2
                                            v3       = ls_message-msgv3
                                            v4       = ls_message-msgv4 )
                        ) INTO TABLE reported-travel.
      ENDLOOP.
      INSERT VALUE #( %tky = is_travel-%tky ) INTO TABLE failed-travel.
      RETURN.
    ENDIF.

    "Save to database
    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_SAVE'.

    "Map final ids
    "Travel
    READ TABLE mapped-travel ASSIGNING FIELD-SYMBOL(&amp;lt;fs_mapped_travel&amp;gt;)
      WITH KEY id COMPONENTS %pid = is_travel-%pid.
    &amp;lt;fs_mapped_travel&amp;gt;-TravelID = ls_travel_out-travel_id.

    "Bookings for this travel
    LOOP AT it_bookings ASSIGNING FIELD-SYMBOL(&amp;lt;fs_booking&amp;gt;)
      WHERE %pidparent = is_travel-%pid.
      "Map booking id
      READ TABLE mapped-booking ASSIGNING FIELD-SYMBOL(&amp;lt;fs_mapped_booking&amp;gt;)
        WITH KEY id COMPONENTS %pid = &amp;lt;fs_booking&amp;gt;-%pid.
      &amp;lt;fs_mapped_booking&amp;gt;-BookingId = &amp;lt;fs_booking&amp;gt;-BookingId.
      &amp;lt;fs_mapped_booking&amp;gt;-TravelID  = ls_travel_out-travel_id.
    ENDLOOP.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--762959413"&gt;Method SAVE_MODIFIED&lt;/H3&gt;&lt;P&gt;This method is called by the runtime once all the preliminary ids have been mapped to the final ids in ADJUST_NUMBERS method. Hence, this is the point where we have to implement the calls to the UPDATE / DELETE APIs. As was stated previously, we have to exclude the Travel CREATE operation (as it has been processed in ADJUST_NUMBERS method), although we have to process the Booking CREATE records for a exisiting Travel, as this corresponds to an UPDATE API call of a Travel.&lt;/P&gt;&lt;P&gt;The interface of this methods is as follows (again, notice the FAILED and REPORTED parameters included as this class is a subclass of &lt;SPAN&gt;cl_abap_behavior_saver_failed).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAVE_MODIFIED.jpg" style="width: 481px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304288i8098B51A8A06D94D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="SAVE_MODIFIED.jpg" alt="SAVE_MODIFIED.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;CREATE, UPDATE and DELETE structures contains each one TRAVEL and BOOKING tables with the relevant entities that are being saved.&lt;/P&gt;&lt;P&gt;The general logic that has been implemented is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;First, all the relevant travel ids that are being processed are grouped in internal table LT_PROCESSED_KEYS (method _GET_PROCESSED_ROOT_KEYS), discarding new created travels.&lt;/LI&gt;&lt;LI&gt;For each key, method _PROCESS_KEY is called, where etither method _DETELE_TRAVEL (when the operation corresponds to a deletion) or _UPDATE_TRAVEL are executed. Within each method, the corresponding API functions are called. If there are any reported errors, FAILED and REPORTED structures are updated accordingly.&lt;/LI&gt;&lt;LI&gt;There are some auxiliary methods defined (_ADD_DELETED_BOOKINGS, _ADD_NEW_BOOKINGS, _ADD_UPDATED_BOOKINGS) to populate UPDATE API importing parameters for modified bookings.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The source code of the relevant methods is then:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD save_modified.
    "Update processing logic to save modified data
    "Process only updated travels. Created travels are processed in adjust_numbers method

    DATA: lt_processed_keys TYPE tt_keys.

    lt_processed_keys = _get_processed_root_keys( create = create
                                                  update = update
                                                  delete = delete ).

    LOOP AT lt_processed_keys INTO DATA(ls_key).
      _process_key( EXPORTING is_key = ls_key
                               create = create
                               update = update
                               delete = delete
                     CHANGING  failed   = failed
                               reported = reported ).
    ENDLOOP.

  ENDMETHOD.
  METHOD _get_processed_root_keys.

    LOOP AT create-booking INTO DATA(ls_booking).
      INSERT VALUE #( travelid = ls_booking-TravelID ) INTO TABLE r_result.
    ENDLOOP.

    LOOP AT update-booking INTO ls_booking.
      INSERT VALUE #( travelid = ls_booking-TravelID ) INTO TABLE r_result.
    ENDLOOP.

    LOOP AT update-travel INTO DATA(ls_travel).
      INSERT VALUE #( travelid = ls_travel-TravelID ) INTO TABLE r_result.
    ENDLOOP.

    LOOP AT delete-travel INTO DATA(ls_delete_travel).
      INSERT VALUE #( travelid = ls_delete_travel-TravelID delete_entity = abap_true ) INTO TABLE r_result.
    ENDLOOP.

    LOOP AT delete-booking INTO DATA(ls_delete_booking).
      INSERT VALUE #( travelid = ls_delete_booking-TravelID ) INTO TABLE r_result.
    ENDLOOP.

    "Discard created travels as they are processed in adjust_numbers method
    LOOP AT create-travel INTO ls_travel.
      DELETE r_result WHERE travelid = ls_travel-TravelID.
    ENDLOOP.

    SORT r_result BY travelid delete_entity DESCENDING.
    DELETE ADJACENT DUPLICATES FROM r_result COMPARING travelid.


  ENDMETHOD.


  METHOD _update_travel.


    DATA: ls_travel   TYPE /dmo/s_travel_in,
          ls_travelx  TYPE /dmo/s_travel_inx,
          lt_booking  TYPE /dmo/t_booking_in,
          lt_bookingx TYPE /dmo/t_booking_inx.

    "Updated value for travel?
    TRY.
        DATA(ls_update_travel) = update-travel[ KEY id TravelID = is_key-travelid ].
        ls_travel = CORRESPONDING #( ls_update_travel MAPPING FROM ENTITY ).
        ls_travelx = CORRESPONDING #(  CORRESPONDING /dmo/s_travel_intx( ls_update_travel MAPPING FROM ENTITY USING CONTROL ) ).
      CATCH cx_root.
    ENDTRY.
    ls_travel-travel_id = is_key-travelid.
    ls_travelx-travel_id = is_key-travelid.
    "Bookings created
    _add_new_bookings( EXPORTING is_key = is_key
                                 create = create
                      CHANGING
                        ct_booking = lt_booking
                        ct_bookingx = lt_bookingx ).

    "Bookings updated
    _add_updated_bookings( EXPORTING is_key = is_key
                                 update = update
                      CHANGING
                        ct_booking = lt_booking
                        ct_bookingx = lt_bookingx ).


    "Bookings deleted
    _add_deleted_bookings( EXPORTING is_key = is_key
                                 delete = delete
                      CHANGING
                        ct_booking = lt_booking
                        ct_bookingx = lt_bookingx ).

    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_UPDATE'
      EXPORTING
        is_travel   = ls_travel
        is_travelx  = ls_travelx
        it_booking  = lt_booking
        it_bookingx = lt_bookingx
      IMPORTING
        et_messages = et_messages.

  ENDMETHOD.


  METHOD _delete_travel.

    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_DELETE'
      EXPORTING
        iv_travel_id = is_key-travelid
      IMPORTING
        et_messages  = et_messages.

  ENDMETHOD.


  METHOD _process_key.

    DATA: lt_messages TYPE /dmo/t_message.

    "Initialize buffers
    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_INITIALIZE'.

    IF is_key-delete_entity = abap_true.
      _delete_travel( EXPORTING is_key = is_key
                          IMPORTING et_messages = lt_messages ).
    ELSE.
      _update_travel( EXPORTING is_key = is_key
                                    create = create
                                    update = update
                                    delete = delete
                          IMPORTING et_messages = lt_messages ).
    ENDIF.

    DELETE lt_messages WHERE msgty NA 'EAX'.
    IF lt_messages[] IS NOT INITIAL.
      LOOP AT lt_messages INTO DATA(ls_message).
        INSERT VALUE #( travelid = is_key-travelid
                        %msg = new_message( id       = ls_message-msgid
                                            severity = if_abap_behv_message=&amp;gt;severity-error
                                            number   = ls_message-msgno
                                            v1       = ls_message-msgv1
                                            v2       = ls_message-msgv2
                                            v3       = ls_message-msgv3
                                            v4       = ls_message-msgv4 )
                        ) INTO TABLE reported-travel.
      ENDLOOP.
      INSERT VALUE #( travelid = is_key-travelid ) INTO TABLE failed-travel.
      RETURN.
    ENDIF.

    "Save to database
    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_SAVE'.



  ENDMETHOD.


  METHOD _add_new_bookings.

    DATA: ls_booking_in  TYPE /dmo/s_booking_in,
          ls_booking_inx TYPE /dmo/s_booking_inx.

    LOOP AT create-booking INTO DATA(ls_booking)
        USING KEY id WHERE TravelID = is_key-travelid.
      "Add new booking
      CLEAR: ls_booking_in, ls_booking_inx.

      ls_booking_in  = CORRESPONDING #( ls_booking MAPPING FROM ENTITY ).
      ls_booking_inx = CORRESPONDING #( CORRESPONDING /dmo/s_booking_intx( ls_booking MAPPING FROM ENTITY USING CONTROL ) ).
      ls_booking_inx-action_code = 'C'.
      ls_booking_inx-booking_id  = ls_booking_in-booking_id.
      INSERT ls_booking_in INTO TABLE ct_booking.
      INSERT ls_booking_inx INTO TABLE ct_bookingx.
    ENDLOOP.


  ENDMETHOD.


  METHOD _add_updated_bookings.

    DATA: ls_booking_in  TYPE /dmo/s_booking_in,
          ls_booking_inx TYPE /dmo/s_booking_inx.

    LOOP AT update-booking INTO DATA(ls_booking)
        USING KEY id WHERE TravelID = is_key-travelid.
      "Add updated booking
      CLEAR: ls_booking_in, ls_booking_inx.

      ls_booking_in  = CORRESPONDING #( ls_booking MAPPING FROM ENTITY ).
      ls_booking_inx = CORRESPONDING #( CORRESPONDING /dmo/s_booking_intx( ls_booking MAPPING FROM ENTITY USING CONTROL ) ).
      ls_booking_inx-action_code = 'U'.
      ls_booking_inx-booking_id  = ls_booking_in-booking_id.
      INSERT ls_booking_in INTO TABLE ct_booking.
      INSERT ls_booking_inx INTO TABLE ct_bookingx.
    ENDLOOP.

  ENDMETHOD.


  METHOD _add_deleted_bookings.

    DATA: ls_booking_in  TYPE /dmo/s_booking_in,
          ls_booking_inx TYPE /dmo/s_booking_inx.

    LOOP AT delete-booking INTO DATA(ls_booking)
        USING KEY entity WHERE TravelID = is_key-travelid.
      "add delete booking
      CLEAR: ls_booking_inx, ls_booking_in.
      ls_booking_in-travel_id = is_key-travelid.
      ls_booking_in-booking_id = ls_booking-BookingId.
      INSERT ls_booking_in INTO TABLE ct_booking.
      ls_booking_inx-action_code = 'D'.
      ls_booking_inx-booking_id  = ls_booking-BookingId.
      INSERT ls_booking_inx INTO TABLE ct_bookingx.
    ENDLOOP.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--372666904"&gt;Conclussions&lt;/H1&gt;&lt;P&gt;I hope that this blog has clarified how to develop a RAP UI to execute CRUD operation in an entity that has a legacy API to maintain it.&amp;nbsp;I think that this can be more or less easily adapted to other APIs.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-simple-example-of-a-sap-rap-application-based-on-legacy-api-without-uuid/ba-p/14184282"/>
    <published>2025-09-01T11:19:39.744000+02:00</published>
  </entry>
</feed>
